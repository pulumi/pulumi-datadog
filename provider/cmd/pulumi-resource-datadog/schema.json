{
    "name": "datadog",
    "description": "A Pulumi package for creating and managing Datadog resources.",
    "keywords": [
        "pulumi",
        "datadog"
    ],
    "homepage": "https://pulumi.io",
    "license": "Apache-2.0",
    "attribution": "This Pulumi package is based on the [`datadog` Terraform Provider](https://github.com/DataDog/terraform-provider-datadog).",
    "repository": "https://github.com/pulumi/pulumi-datadog",
    "meta": {
        "moduleFormat": "(.*)(?:/[^/]*)"
    },
    "language": {
        "csharp": {
            "packageReferences": {
                "Pulumi": "3.*"
            },
            "namespaces": {
                "aws": "Aws",
                "azure": "Azure",
                "datadog": "Datadog",
                "gcp": "Gcp",
                "opsgenie": "OpsGenie",
                "pagerduty": "PagerDuty",
                "slack": "Slack"
            },
            "compatibility": "tfbridge20",
            "respectSchemaVersion": true
        },
        "go": {
            "importBasePath": "github.com/pulumi/pulumi-datadog/sdk/v4/go/datadog",
            "generateResourceContainerTypes": true,
            "generateExtraInputTypes": true,
            "respectSchemaVersion": true
        },
        "nodejs": {
            "packageDescription": "A Pulumi package for creating and managing Datadog resources.",
            "readme": "\u003e This provider is a derived work of the [Terraform Provider](https://github.com/DataDog/terraform-provider-datadog)\n\u003e distributed under [MPL 2.0](https://www.mozilla.org/en-US/MPL/2.0/). If you encounter a bug or missing feature,\n\u003e first check the [`pulumi-datadog` repo](https://github.com/pulumi/pulumi-datadog/issues); however, if that doesn't turn up anything,\n\u003e please consult the source [`terraform-provider-datadog` repo](https://github.com/DataDog/terraform-provider-datadog/issues).",
            "dependencies": {
                "@pulumi/pulumi": "^3.0.0"
            },
            "devDependencies": {
                "@types/node": "^10.0.0"
            },
            "compatibility": "tfbridge20",
            "disableUnionOutputTypes": true,
            "respectSchemaVersion": true
        },
        "python": {
            "requires": {
                "pulumi": "\u003e=3.0.0,\u003c4.0.0"
            },
            "readme": "\u003e This provider is a derived work of the [Terraform Provider](https://github.com/DataDog/terraform-provider-datadog)\n\u003e distributed under [MPL 2.0](https://www.mozilla.org/en-US/MPL/2.0/). If you encounter a bug or missing feature,\n\u003e first check the [`pulumi-datadog` repo](https://github.com/pulumi/pulumi-datadog/issues); however, if that doesn't turn up anything,\n\u003e please consult the source [`terraform-provider-datadog` repo](https://github.com/DataDog/terraform-provider-datadog/issues).",
            "compatibility": "tfbridge20",
            "respectSchemaVersion": true,
            "pyproject": {
                "enabled": true
            }
        }
    },
    "config": {
        "variables": {
            "apiKey": {
                "type": "string",
                "description": "(Required unless validate is false) Datadog API key. This can also be set via the DD_API_KEY environment variable.\n",
                "secret": true
            },
            "apiUrl": {
                "type": "string",
                "description": "The API URL. This can also be set via the DD_HOST environment variable, and defaults to `https://api.datadoghq.com`.\nNote that this URL must not end with the `/api/` path. For example, `https://api.datadoghq.com/` is a correct value,\nwhile `https://api.datadoghq.com/api/` is not. And if you're working with \"EU\" version of Datadog, use\n`https://api.datadoghq.eu/`. Other Datadog region examples: `https://api.us5.datadoghq.com/`,\n`https://api.us3.datadoghq.com/` and `https://api.ddog-gov.com/`. See https://docs.datadoghq.com/getting_started/site/\nfor all available regions.\n"
            },
            "appKey": {
                "type": "string",
                "description": "(Required unless validate is false) Datadog APP key. This can also be set via the DD_APP_KEY environment variable.\n",
                "secret": true
            },
            "defaultTags": {
                "$ref": "#/types/datadog:config/defaultTags:defaultTags",
                "description": "[Experimental - Monitors only] Configuration block containing settings to apply default resource tags across all\nresources.\n"
            },
            "httpClientRetryBackoffBase": {
                "type": "integer",
                "description": "The HTTP request retry back off base. Defaults to 2.\n"
            },
            "httpClientRetryBackoffMultiplier": {
                "type": "integer",
                "description": "The HTTP request retry back off multiplier. Defaults to 2.\n"
            },
            "httpClientRetryEnabled": {
                "type": "string",
                "description": "Enables request retries on HTTP status codes 429 and 5xx. Valid values are [`true`, `false`]. Defaults to `true`.\n"
            },
            "httpClientRetryMaxRetries": {
                "type": "integer",
                "description": "The HTTP request maximum retry number. Defaults to 3.\n"
            },
            "httpClientRetryTimeout": {
                "type": "integer",
                "description": "The HTTP request retry timeout period. Defaults to 60 seconds.\n"
            },
            "validate": {
                "type": "string",
                "description": "Enables validation of the provided API key during provider initialization. Valid values are [`true`, `false`]. Default\nis true. When false, api_key won't be checked.\n"
            }
        }
    },
    "types": {
        "datadog:aws/getIntegrationLogsServicesAwsLogsService:getIntegrationLogsServicesAwsLogsService": {
            "properties": {
                "id": {
                    "type": "string",
                    "description": "The id of the AWS log service.\n"
                },
                "label": {
                    "type": "string",
                    "description": "The name of the AWS log service.\n"
                }
            },
            "type": "object",
            "required": [
                "id",
                "label"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "datadog:config/defaultTags:defaultTags": {
            "properties": {
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "[Experimental - Monitors only] Resource tags to be applied by default across all resources.\n"
                }
            },
            "type": "object"
        },
        "datadog:index/ApmRetentionFilterFilter:ApmRetentionFilterFilter": {
            "properties": {
                "query": {
                    "type": "string",
                    "description": "The search query - follow the span search syntax, use `AND` between tags and `\\` to escape special characters, use nanosecond for duration. Defaults to `\"*\"`.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "query"
                    ]
                }
            }
        },
        "datadog:index/ChildOrganizationApiKey:ChildOrganizationApiKey": {
            "properties": {
                "key": {
                    "type": "string",
                    "description": "API key.\n",
                    "secret": true
                },
                "name": {
                    "type": "string",
                    "description": "Name of your API key.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "key",
                        "name"
                    ]
                }
            }
        },
        "datadog:index/ChildOrganizationApplicationKey:ChildOrganizationApplicationKey": {
            "properties": {
                "hash": {
                    "type": "string",
                    "description": "Hash of an application key.\n",
                    "secret": true
                },
                "name": {
                    "type": "string",
                    "description": "Name of an application key.\n"
                },
                "owner": {
                    "type": "string",
                    "description": "Owner of an application key.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "hash",
                        "name",
                        "owner"
                    ]
                }
            }
        },
        "datadog:index/ChildOrganizationSetting:ChildOrganizationSetting": {
            "properties": {
                "privateWidgetShare": {
                    "type": "boolean",
                    "description": "Whether or not the organization users can share widgets outside of Datadog.\n"
                },
                "samlAutocreateAccessRole": {
                    "type": "string",
                    "description": "The access role of the user. Options are `st` (standard user), `adm` (admin user), or `ro` (read-only user). Allowed enum values: `st`, `adm` , `ro`, `ERROR`\n"
                },
                "samlAutocreateUsersDomains": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/ChildOrganizationSettingSamlAutocreateUsersDomain:ChildOrganizationSettingSamlAutocreateUsersDomain"
                    },
                    "description": "List of domains where the SAML automated user creation is enabled.\n"
                },
                "samlCanBeEnabled": {
                    "type": "boolean",
                    "description": "Whether or not SAML can be enabled for this organization.\n"
                },
                "samlIdpEndpoint": {
                    "type": "string",
                    "description": "Identity provider endpoint for SAML authentication.\n"
                },
                "samlIdpInitiatedLogins": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/ChildOrganizationSettingSamlIdpInitiatedLogin:ChildOrganizationSettingSamlIdpInitiatedLogin"
                    },
                    "description": "Whether or not a SAML identity provider metadata file was provided to the Datadog organization.\n"
                },
                "samlIdpMetadataUploaded": {
                    "type": "boolean",
                    "description": "Whether or not a SAML identity provider metadata file was provided to the Datadog organization.\n"
                },
                "samlLoginUrl": {
                    "type": "string",
                    "description": "URL for SAML logging.\n"
                },
                "samlStrictModes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/ChildOrganizationSettingSamlStrictMode:ChildOrganizationSettingSamlStrictMode"
                    },
                    "description": "Whether or not the SAML strict mode is enabled. If true, all users must log in with SAML.\n"
                },
                "samls": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/ChildOrganizationSettingSaml:ChildOrganizationSettingSaml"
                    },
                    "description": "SAML properties\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "privateWidgetShare",
                        "samlAutocreateAccessRole",
                        "samlAutocreateUsersDomains",
                        "samlCanBeEnabled",
                        "samlIdpEndpoint",
                        "samlIdpInitiatedLogins",
                        "samlIdpMetadataUploaded",
                        "samlLoginUrl",
                        "samlStrictModes",
                        "samls"
                    ]
                }
            }
        },
        "datadog:index/ChildOrganizationSettingSaml:ChildOrganizationSettingSaml": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Whether or not SAML is enabled for this organization.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "enabled"
                    ]
                }
            }
        },
        "datadog:index/ChildOrganizationSettingSamlAutocreateUsersDomain:ChildOrganizationSettingSamlAutocreateUsersDomain": {
            "properties": {
                "domains": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of domains where the SAML automated user creation is enabled.\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Whether or not the automated user creation based on SAML domain is enabled.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "domains",
                        "enabled"
                    ]
                }
            }
        },
        "datadog:index/ChildOrganizationSettingSamlIdpInitiatedLogin:ChildOrganizationSettingSamlIdpInitiatedLogin": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Whether or not a SAML identity provider metadata file was provided to the Datadog organization.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "enabled"
                    ]
                }
            }
        },
        "datadog:index/ChildOrganizationSettingSamlStrictMode:ChildOrganizationSettingSamlStrictMode": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Whether or not the SAML strict mode is enabled. If true, all users must log in with SAML.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "enabled"
                    ]
                }
            }
        },
        "datadog:index/ChildOrganizationUser:ChildOrganizationUser": {
            "properties": {
                "accessRole": {
                    "type": "string",
                    "description": "The access role of the user. Options are `st` (standard user), `adm` (admin user), or `ro` (read-only user). Allowed enum values: `st`, `adm`, `ro`, `ERROR`\n"
                },
                "email": {
                    "type": "string",
                    "description": "The new email of the user.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the user.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "accessRole",
                        "email",
                        "name"
                    ]
                }
            }
        },
        "datadog:index/CloudConfigurationRuleFilter:CloudConfigurationRuleFilter": {
            "properties": {
                "action": {
                    "type": "string",
                    "description": "The type of filtering action. Valid values are `require`, `suppress`.\n"
                },
                "query": {
                    "type": "string",
                    "description": "Query for selecting logs to apply the filtering action.\n"
                }
            },
            "type": "object",
            "required": [
                "action",
                "query"
            ]
        },
        "datadog:index/DashboardListDashItem:DashboardListDashItem": {
            "properties": {
                "dashId": {
                    "type": "string",
                    "description": "The ID of the dashboard to add\n"
                },
                "type": {
                    "type": "string",
                    "description": "The type of this dashboard. Valid values are `custom_timeboard`, `custom_screenboard`, `integration_screenboard`, `integration_timeboard`, `host_timeboard`.\n"
                }
            },
            "type": "object",
            "required": [
                "dashId",
                "type"
            ]
        },
        "datadog:index/DashboardTemplateVariable:DashboardTemplateVariable": {
            "properties": {
                "availableValues": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The list of values that the template variable drop-down is be limited to\n"
                },
                "default": {
                    "type": "string",
                    "description": "The default value for the template variable on dashboard load. Cannot be used in conjunction with `defaults`. **Deprecated.** Use `defaults` instead.\n",
                    "deprecationMessage": "Use `defaults` instead."
                },
                "defaults": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "One or many default values for template variables on load. If more than one default is specified, they will be unioned together with `OR`. Cannot be used in conjunction with `default`.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the variable.\n"
                },
                "prefix": {
                    "type": "string",
                    "description": "The tag prefix associated with the variable. Only tags with this prefix appear in the variable dropdown.\n"
                }
            },
            "type": "object",
            "required": [
                "name"
            ]
        },
        "datadog:index/DashboardTemplateVariablePreset:DashboardTemplateVariablePreset": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "The name of the preset.\n"
                },
                "templateVariables": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardTemplateVariablePresetTemplateVariable:DashboardTemplateVariablePresetTemplateVariable"
                    },
                    "description": "The template variable names and assumed values under the given preset\n"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardTemplateVariablePresetTemplateVariable:DashboardTemplateVariablePresetTemplateVariable": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "The name of the template variable\n"
                },
                "value": {
                    "type": "string",
                    "description": "The value that should be assumed by the template variable in this preset. Cannot be used in conjunction with `values`. **Deprecated.** Use `values` instead.\n",
                    "deprecationMessage": "Use `values` instead."
                },
                "values": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "One or many template variable values within the saved view, which will be unioned together using `OR` if more than one is specified. Cannot be used in conjunction with `value`.\n"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidget:DashboardWidget": {
            "properties": {
                "alertGraphDefinition": {
                    "$ref": "#/types/datadog:index/DashboardWidgetAlertGraphDefinition:DashboardWidgetAlertGraphDefinition",
                    "description": "The definition for a Alert Graph widget.\n"
                },
                "alertValueDefinition": {
                    "$ref": "#/types/datadog:index/DashboardWidgetAlertValueDefinition:DashboardWidgetAlertValueDefinition",
                    "description": "The definition for a Alert Value widget.\n"
                },
                "changeDefinition": {
                    "$ref": "#/types/datadog:index/DashboardWidgetChangeDefinition:DashboardWidgetChangeDefinition",
                    "description": "The definition for a Change widget.\n"
                },
                "checkStatusDefinition": {
                    "$ref": "#/types/datadog:index/DashboardWidgetCheckStatusDefinition:DashboardWidgetCheckStatusDefinition",
                    "description": "The definition for a Check Status widget.\n"
                },
                "distributionDefinition": {
                    "$ref": "#/types/datadog:index/DashboardWidgetDistributionDefinition:DashboardWidgetDistributionDefinition",
                    "description": "The definition for a Distribution widget.\n"
                },
                "eventStreamDefinition": {
                    "$ref": "#/types/datadog:index/DashboardWidgetEventStreamDefinition:DashboardWidgetEventStreamDefinition",
                    "description": "The definition for a Event Stream widget.\n"
                },
                "eventTimelineDefinition": {
                    "$ref": "#/types/datadog:index/DashboardWidgetEventTimelineDefinition:DashboardWidgetEventTimelineDefinition",
                    "description": "The definition for a Event Timeline widget.\n"
                },
                "freeTextDefinition": {
                    "$ref": "#/types/datadog:index/DashboardWidgetFreeTextDefinition:DashboardWidgetFreeTextDefinition",
                    "description": "The definition for a Free Text widget.\n"
                },
                "geomapDefinition": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGeomapDefinition:DashboardWidgetGeomapDefinition",
                    "description": "The definition for a Geomap widget.\n"
                },
                "groupDefinition": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinition:DashboardWidgetGroupDefinition",
                    "description": "The definition for a Group widget.\n"
                },
                "heatmapDefinition": {
                    "$ref": "#/types/datadog:index/DashboardWidgetHeatmapDefinition:DashboardWidgetHeatmapDefinition",
                    "description": "The definition for a Heatmap widget.\n"
                },
                "hostmapDefinition": {
                    "$ref": "#/types/datadog:index/DashboardWidgetHostmapDefinition:DashboardWidgetHostmapDefinition",
                    "description": "The definition for a Hostmap widget.\n"
                },
                "id": {
                    "type": "integer",
                    "description": "The ID of the widget.\n"
                },
                "iframeDefinition": {
                    "$ref": "#/types/datadog:index/DashboardWidgetIframeDefinition:DashboardWidgetIframeDefinition",
                    "description": "The definition for an Iframe widget.\n"
                },
                "imageDefinition": {
                    "$ref": "#/types/datadog:index/DashboardWidgetImageDefinition:DashboardWidgetImageDefinition",
                    "description": "The definition for an Image widget\n"
                },
                "listStreamDefinition": {
                    "$ref": "#/types/datadog:index/DashboardWidgetListStreamDefinition:DashboardWidgetListStreamDefinition",
                    "description": "The definition for a List Stream widget.\n"
                },
                "logStreamDefinition": {
                    "$ref": "#/types/datadog:index/DashboardWidgetLogStreamDefinition:DashboardWidgetLogStreamDefinition",
                    "description": "The definition for an Log Stream widget.\n"
                },
                "manageStatusDefinition": {
                    "$ref": "#/types/datadog:index/DashboardWidgetManageStatusDefinition:DashboardWidgetManageStatusDefinition",
                    "description": "The definition for an Manage Status widget.\n"
                },
                "noteDefinition": {
                    "$ref": "#/types/datadog:index/DashboardWidgetNoteDefinition:DashboardWidgetNoteDefinition",
                    "description": "The definition for a Note widget.\n"
                },
                "powerpackDefinition": {
                    "$ref": "#/types/datadog:index/DashboardWidgetPowerpackDefinition:DashboardWidgetPowerpackDefinition",
                    "description": "The definition for a Powerpack widget.\n"
                },
                "queryTableDefinition": {
                    "$ref": "#/types/datadog:index/DashboardWidgetQueryTableDefinition:DashboardWidgetQueryTableDefinition",
                    "description": "The definition for a Query Table widget.\n"
                },
                "queryValueDefinition": {
                    "$ref": "#/types/datadog:index/DashboardWidgetQueryValueDefinition:DashboardWidgetQueryValueDefinition",
                    "description": "The definition for a Query Value widget.\n"
                },
                "runWorkflowDefinition": {
                    "$ref": "#/types/datadog:index/DashboardWidgetRunWorkflowDefinition:DashboardWidgetRunWorkflowDefinition",
                    "description": "The definition for a Run Workflow widget.\n"
                },
                "scatterplotDefinition": {
                    "$ref": "#/types/datadog:index/DashboardWidgetScatterplotDefinition:DashboardWidgetScatterplotDefinition",
                    "description": "The definition for a Scatterplot widget.\n"
                },
                "serviceLevelObjectiveDefinition": {
                    "$ref": "#/types/datadog:index/DashboardWidgetServiceLevelObjectiveDefinition:DashboardWidgetServiceLevelObjectiveDefinition",
                    "description": "The definition for a Service Level Objective widget.\n"
                },
                "servicemapDefinition": {
                    "$ref": "#/types/datadog:index/DashboardWidgetServicemapDefinition:DashboardWidgetServicemapDefinition",
                    "description": "The definition for a Service Map widget.\n"
                },
                "sloListDefinition": {
                    "$ref": "#/types/datadog:index/DashboardWidgetSloListDefinition:DashboardWidgetSloListDefinition",
                    "description": "The definition for an SLO (Service Level Objective) List widget.\n"
                },
                "splitGraphDefinition": {
                    "$ref": "#/types/datadog:index/DashboardWidgetSplitGraphDefinition:DashboardWidgetSplitGraphDefinition",
                    "description": "The definition for a Split Graph widget.\n"
                },
                "sunburstDefinition": {
                    "$ref": "#/types/datadog:index/DashboardWidgetSunburstDefinition:DashboardWidgetSunburstDefinition",
                    "description": "The definition for a Sunburst widget.\n"
                },
                "timeseriesDefinition": {
                    "$ref": "#/types/datadog:index/DashboardWidgetTimeseriesDefinition:DashboardWidgetTimeseriesDefinition",
                    "description": "The definition for a Timeseries widget.\n"
                },
                "toplistDefinition": {
                    "$ref": "#/types/datadog:index/DashboardWidgetToplistDefinition:DashboardWidgetToplistDefinition",
                    "description": "The definition for a Toplist widget.\n"
                },
                "topologyMapDefinition": {
                    "$ref": "#/types/datadog:index/DashboardWidgetTopologyMapDefinition:DashboardWidgetTopologyMapDefinition",
                    "description": "The definition for a Topology Map widget.\n"
                },
                "traceServiceDefinition": {
                    "$ref": "#/types/datadog:index/DashboardWidgetTraceServiceDefinition:DashboardWidgetTraceServiceDefinition",
                    "description": "The definition for a Trace Service widget.\n"
                },
                "treemapDefinition": {
                    "$ref": "#/types/datadog:index/DashboardWidgetTreemapDefinition:DashboardWidgetTreemapDefinition",
                    "description": "The definition for a Treemap widget.\n"
                },
                "widgetLayout": {
                    "$ref": "#/types/datadog:index/DashboardWidgetWidgetLayout:DashboardWidgetWidgetLayout",
                    "description": "The layout of the widget on a 'free' dashboard.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "id"
                    ]
                }
            }
        },
        "datadog:index/DashboardWidgetAlertGraphDefinition:DashboardWidgetAlertGraphDefinition": {
            "properties": {
                "alertId": {
                    "type": "string",
                    "description": "The ID of the monitor used by the widget.\n"
                },
                "liveSpan": {
                    "type": "string",
                    "description": "The timeframe to use when displaying the widget. Valid values are `1m`, `5m`, `10m`, `15m`, `30m`, `1h`, `4h`, `1d`, `2d`, `1w`, `1mo`, `3mo`, `6mo`, `week_to_date`, `month_to_date`, `1y`, `alert`.\n"
                },
                "title": {
                    "type": "string",
                    "description": "The title of the widget.\n"
                },
                "titleAlign": {
                    "type": "string",
                    "description": "The alignment of the widget's title. Valid values are `center`, `left`, `right`.\n"
                },
                "titleSize": {
                    "type": "string",
                    "description": "The size of the widget's title (defaults to 16).\n"
                },
                "vizType": {
                    "type": "string",
                    "description": "Type of visualization to use when displaying the widget. Valid values are `timeseries`, `toplist`.\n"
                }
            },
            "type": "object",
            "required": [
                "alertId",
                "vizType"
            ]
        },
        "datadog:index/DashboardWidgetAlertValueDefinition:DashboardWidgetAlertValueDefinition": {
            "properties": {
                "alertId": {
                    "type": "string",
                    "description": "The ID of the monitor used by the widget.\n"
                },
                "precision": {
                    "type": "integer",
                    "description": "The precision to use when displaying the value. Use `*` for maximum precision.\n"
                },
                "textAlign": {
                    "type": "string",
                    "description": "The alignment of the text in the widget. Valid values are `center`, `left`, `right`.\n"
                },
                "title": {
                    "type": "string",
                    "description": "The title of the widget.\n"
                },
                "titleAlign": {
                    "type": "string",
                    "description": "The alignment of the widget's title. Valid values are `center`, `left`, `right`.\n"
                },
                "titleSize": {
                    "type": "string",
                    "description": "The size of the widget's title (defaults to 16).\n"
                },
                "unit": {
                    "type": "string",
                    "description": "The unit for the value displayed in the widget.\n"
                }
            },
            "type": "object",
            "required": [
                "alertId"
            ]
        },
        "datadog:index/DashboardWidgetApmQuery:DashboardWidgetApmQuery": {
            "properties": {
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetApmQueryComputeQuery:DashboardWidgetApmQueryComputeQuery",
                    "description": "`compute_query` or `multi_compute` is required. The map keys are listed below.\n"
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetApmQueryGroupBy:DashboardWidgetApmQueryGroupBy"
                    },
                    "description": "Multiple `group_by` blocks are allowed using the structure below.\n"
                },
                "index": {
                    "type": "string",
                    "description": "The name of the index to query.\n"
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetApmQueryMultiCompute:DashboardWidgetApmQueryMultiCompute"
                    },
                    "description": "`compute_query` or `multi_compute` is required. Multiple `multi_compute` blocks are allowed using the structure below.\n"
                },
                "searchQuery": {
                    "type": "string",
                    "description": "The search query to use.\n"
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetApmQueryComputeQuery:DashboardWidgetApmQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "The aggregation method.\n"
                },
                "facet": {
                    "type": "string",
                    "description": "The facet name.\n"
                },
                "interval": {
                    "type": "integer",
                    "description": "Define the time interval in seconds.\n"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetApmQueryGroupBy:DashboardWidgetApmQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "description": "The facet name.\n"
                },
                "limit": {
                    "type": "integer",
                    "description": "The maximum number of items in the group.\n"
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetApmQueryGroupBySortQuery:DashboardWidgetApmQueryGroupBySortQuery",
                    "description": "A list of exactly one element describing the sort query to use.\n"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetApmQueryGroupBySortQuery:DashboardWidgetApmQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "The aggregation method.\n"
                },
                "facet": {
                    "type": "string",
                    "description": "The facet name.\n"
                },
                "order": {
                    "type": "string",
                    "description": "Widget sorting methods. Valid values are `asc`, `desc`.\n"
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetApmQueryMultiCompute:DashboardWidgetApmQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "The aggregation method.\n"
                },
                "facet": {
                    "type": "string",
                    "description": "The facet name.\n"
                },
                "interval": {
                    "type": "integer",
                    "description": "Define the time interval in seconds.\n"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetChangeDefinition:DashboardWidgetChangeDefinition": {
            "properties": {
                "customLinks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetChangeDefinitionCustomLink:DashboardWidgetChangeDefinitionCustomLink"
                    },
                    "description": "A nested block describing a custom link. Multiple `custom_link` blocks are allowed using the structure below.\n"
                },
                "liveSpan": {
                    "type": "string",
                    "description": "The timeframe to use when displaying the widget. Valid values are `1m`, `5m`, `10m`, `15m`, `30m`, `1h`, `4h`, `1d`, `2d`, `1w`, `1mo`, `3mo`, `6mo`, `week_to_date`, `month_to_date`, `1y`, `alert`.\n"
                },
                "requests": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetChangeDefinitionRequest:DashboardWidgetChangeDefinitionRequest"
                    },
                    "description": "A nested block describing the request to use when displaying the widget. Multiple request blocks are allowed using the structure below (exactly one of `q`, `apm_query`, `log_query`, `rum_query`, `security_query` or `process_query` is required within the request block).\n"
                },
                "title": {
                    "type": "string",
                    "description": "The title of the widget.\n"
                },
                "titleAlign": {
                    "type": "string",
                    "description": "The alignment of the widget's title. Valid values are `center`, `left`, `right`.\n"
                },
                "titleSize": {
                    "type": "string",
                    "description": "The size of the widget's title (defaults to 16).\n"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetChangeDefinitionCustomLink:DashboardWidgetChangeDefinitionCustomLink": {
            "properties": {
                "isHidden": {
                    "type": "boolean",
                    "description": "The flag for toggling context menu link visibility.\n"
                },
                "label": {
                    "type": "string",
                    "description": "The label for the custom link URL.\n"
                },
                "link": {
                    "type": "string",
                    "description": "The URL of the custom link.\n"
                },
                "overrideLabel": {
                    "type": "string",
                    "description": "The label ID that refers to a context menu link item. When `override_label` is provided, the client request omits the label field.\n"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetChangeDefinitionRequest:DashboardWidgetChangeDefinitionRequest": {
            "properties": {
                "apmQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetApmQuery:DashboardWidgetApmQuery",
                    "description": "The query to use for this widget.\n"
                },
                "changeType": {
                    "type": "string",
                    "description": "Whether to show absolute or relative change. Valid values are `absolute`, `relative`.\n"
                },
                "compareTo": {
                    "type": "string",
                    "description": "Choose from when to compare current data to. Valid values are `hour_before`, `day_before`, `week_before`, `month_before`.\n"
                },
                "formulas": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetChangeDefinitionRequestFormula:DashboardWidgetChangeDefinitionRequestFormula"
                    }
                },
                "increaseGood": {
                    "type": "boolean",
                    "description": "A Boolean indicating whether an increase in the value is good (displayed in green) or not (displayed in red).\n"
                },
                "logQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetLogQuery:DashboardWidgetLogQuery",
                    "description": "The query to use for this widget.\n"
                },
                "orderBy": {
                    "type": "string",
                    "description": "What to order by. Valid values are `change`, `name`, `present`, `past`.\n"
                },
                "orderDir": {
                    "type": "string",
                    "description": "Widget sorting method. Valid values are `asc`, `desc`.\n"
                },
                "processQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetChangeDefinitionRequestProcessQuery:DashboardWidgetChangeDefinitionRequestProcessQuery",
                    "description": "The process query to use in the widget. The structure of this block is described below.\n"
                },
                "q": {
                    "type": "string",
                    "description": "The metric query to use for this widget.\n"
                },
                "queries": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetChangeDefinitionRequestQuery:DashboardWidgetChangeDefinitionRequestQuery"
                    }
                },
                "rumQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetRumQuery:DashboardWidgetRumQuery",
                    "description": "The query to use for this widget.\n"
                },
                "securityQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetSecurityQuery:DashboardWidgetSecurityQuery",
                    "description": "The query to use for this widget.\n"
                },
                "showPresent": {
                    "type": "boolean",
                    "description": "If set to `true`, displays the current value.\n"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetChangeDefinitionRequestFormula:DashboardWidgetChangeDefinitionRequestFormula": {
            "properties": {
                "alias": {
                    "type": "string",
                    "description": "An expression alias.\n"
                },
                "cellDisplayMode": {
                    "type": "string",
                    "description": "A list of display modes for each table cell. Valid values are `number`, `bar`.\n"
                },
                "conditionalFormats": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetChangeDefinitionRequestFormulaConditionalFormat:DashboardWidgetChangeDefinitionRequestFormulaConditionalFormat"
                    },
                    "description": "Conditional formats allow you to set the color of your widget content or background depending on the rule applied to your data. Multiple `conditional_formats` blocks are allowed using the structure below.\n"
                },
                "formulaExpression": {
                    "type": "string",
                    "description": "A string expression built from queries, formulas, and functions.\n"
                },
                "limit": {
                    "$ref": "#/types/datadog:index/DashboardWidgetChangeDefinitionRequestFormulaLimit:DashboardWidgetChangeDefinitionRequestFormulaLimit",
                    "description": "The options for limiting results returned.\n"
                },
                "style": {
                    "$ref": "#/types/datadog:index/DashboardWidgetChangeDefinitionRequestFormulaStyle:DashboardWidgetChangeDefinitionRequestFormulaStyle",
                    "description": "Styling options for widget formulas.\n"
                }
            },
            "type": "object",
            "required": [
                "formulaExpression"
            ]
        },
        "datadog:index/DashboardWidgetChangeDefinitionRequestFormulaConditionalFormat:DashboardWidgetChangeDefinitionRequestFormulaConditionalFormat": {
            "properties": {
                "comparator": {
                    "type": "string",
                    "description": "The comparator to use. Valid values are `=`, `\u003e`, `\u003e=`, `\u003c`, `\u003c=`.\n"
                },
                "customBgColor": {
                    "type": "string",
                    "description": "The color palette to apply to the background, same values available as palette.\n"
                },
                "customFgColor": {
                    "type": "string",
                    "description": "The color palette to apply to the foreground, same values available as palette.\n"
                },
                "hideValue": {
                    "type": "boolean",
                    "description": "Setting this to True hides values.\n"
                },
                "imageUrl": {
                    "type": "string",
                    "description": "Displays an image as the background.\n"
                },
                "metric": {
                    "type": "string",
                    "description": "The metric from the request to correlate with this conditional format.\n"
                },
                "palette": {
                    "type": "string",
                    "description": "The color palette to apply. Valid values are `blue`, `custom_bg`, `custom_image`, `custom_text`, `gray_on_white`, `grey`, `green`, `orange`, `red`, `red_on_white`, `white_on_gray`, `white_on_green`, `green_on_white`, `white_on_red`, `white_on_yellow`, `yellow_on_white`, `black_on_light_yellow`, `black_on_light_green`, `black_on_light_red`.\n"
                },
                "timeframe": {
                    "type": "string",
                    "description": "Defines the displayed timeframe.\n"
                },
                "value": {
                    "type": "number",
                    "description": "A value for the comparator.\n"
                }
            },
            "type": "object",
            "required": [
                "comparator",
                "palette",
                "value"
            ]
        },
        "datadog:index/DashboardWidgetChangeDefinitionRequestFormulaLimit:DashboardWidgetChangeDefinitionRequestFormulaLimit": {
            "properties": {
                "count": {
                    "type": "integer",
                    "description": "The number of results to return.\n"
                },
                "order": {
                    "type": "string",
                    "description": "The direction of the sort. Valid values are `asc`, `desc`. Defaults to `\"desc\"`.\n"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetChangeDefinitionRequestFormulaStyle:DashboardWidgetChangeDefinitionRequestFormulaStyle": {
            "properties": {
                "palette": {
                    "type": "string",
                    "description": "The color palette used to display the formula. A guide to the available color palettes can be found at https://docs.datadoghq.com/dashboards/guide/widget_colors.\n"
                },
                "paletteIndex": {
                    "type": "integer",
                    "description": "Index specifying which color to use within the palette.\n"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetChangeDefinitionRequestProcessQuery:DashboardWidgetChangeDefinitionRequestProcessQuery": {
            "properties": {
                "filterBies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of processes.\n"
                },
                "limit": {
                    "type": "integer",
                    "description": "The max number of items in the filter list.\n"
                },
                "metric": {
                    "type": "string",
                    "description": "Your chosen metric.\n"
                },
                "searchBy": {
                    "type": "string",
                    "description": "Your chosen search term.\n"
                }
            },
            "type": "object",
            "required": [
                "metric"
            ]
        },
        "datadog:index/DashboardWidgetChangeDefinitionRequestQuery:DashboardWidgetChangeDefinitionRequestQuery": {
            "properties": {
                "apmDependencyStatsQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetChangeDefinitionRequestQueryApmDependencyStatsQuery:DashboardWidgetChangeDefinitionRequestQueryApmDependencyStatsQuery",
                    "description": "The APM Dependency Stats query using formulas and functions.\n"
                },
                "apmResourceStatsQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetChangeDefinitionRequestQueryApmResourceStatsQuery:DashboardWidgetChangeDefinitionRequestQueryApmResourceStatsQuery",
                    "description": "The APM Resource Stats query using formulas and functions.\n"
                },
                "cloudCostQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetChangeDefinitionRequestQueryCloudCostQuery:DashboardWidgetChangeDefinitionRequestQueryCloudCostQuery",
                    "description": "The Cloud Cost query using formulas and functions.\n"
                },
                "eventQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetChangeDefinitionRequestQueryEventQuery:DashboardWidgetChangeDefinitionRequestQueryEventQuery",
                    "description": "A timeseries formula and functions events query.\n"
                },
                "metricQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetChangeDefinitionRequestQueryMetricQuery:DashboardWidgetChangeDefinitionRequestQueryMetricQuery",
                    "description": "A timeseries formula and functions metrics query.\n"
                },
                "processQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetChangeDefinitionRequestQueryProcessQuery:DashboardWidgetChangeDefinitionRequestQueryProcessQuery",
                    "description": "The process query using formulas and functions.\n"
                },
                "sloQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetChangeDefinitionRequestQuerySloQuery:DashboardWidgetChangeDefinitionRequestQuerySloQuery",
                    "description": "The SLO query using formulas and functions.\n"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetChangeDefinitionRequestQueryApmDependencyStatsQuery:DashboardWidgetChangeDefinitionRequestQueryApmDependencyStatsQuery": {
            "properties": {
                "crossOrgUuids": {
                    "type": "string",
                    "description": "The source organization UUID for cross organization queries. Feature in Private Beta.\n"
                },
                "dataSource": {
                    "type": "string",
                    "description": "The data source for APM Dependency Stats queries. Valid values are `apm_dependency_stats`.\n"
                },
                "env": {
                    "type": "string",
                    "description": "APM environment.\n"
                },
                "isUpstream": {
                    "type": "boolean",
                    "description": "Determines whether stats for upstream or downstream dependencies should be queried.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of query for use in formulas.\n"
                },
                "operationName": {
                    "type": "string",
                    "description": "Name of operation on service.\n"
                },
                "primaryTagName": {
                    "type": "string",
                    "description": "The name of the second primary tag used within APM; required when `primary_tag_value` is specified. See https://docs.datadoghq.com/tracing/guide/setting*primary*tags*to*scope/#add-a-second-primary-tag-in-datadog.\n"
                },
                "primaryTagValue": {
                    "type": "string",
                    "description": "Filter APM data by the second primary tag. `primary_tag_name` must also be specified.\n"
                },
                "resourceName": {
                    "type": "string",
                    "description": "APM resource.\n"
                },
                "service": {
                    "type": "string",
                    "description": "APM service.\n"
                },
                "stat": {
                    "type": "string",
                    "description": "APM statistic. Valid values are `avg_duration`, `avg_root_duration`, `avg_spans_per_trace`, `error_rate`, `pct_exec_time`, `pct_of_traces`, `total_traces_count`.\n"
                }
            },
            "type": "object",
            "required": [
                "dataSource",
                "env",
                "name",
                "operationName",
                "resourceName",
                "service",
                "stat"
            ]
        },
        "datadog:index/DashboardWidgetChangeDefinitionRequestQueryApmResourceStatsQuery:DashboardWidgetChangeDefinitionRequestQueryApmResourceStatsQuery": {
            "properties": {
                "crossOrgUuids": {
                    "type": "string",
                    "description": "The source organization UUID for cross organization queries. Feature in Private Beta.\n"
                },
                "dataSource": {
                    "type": "string",
                    "description": "The data source for APM Resource Stats queries. Valid values are `apm_resource_stats`.\n"
                },
                "env": {
                    "type": "string",
                    "description": "APM environment.\n"
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Array of fields to group results by.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of query for use in formulas.\n"
                },
                "operationName": {
                    "type": "string",
                    "description": "Name of operation on service.\n"
                },
                "primaryTagName": {
                    "type": "string",
                    "description": "The name of the second primary tag used within APM; required when `primary_tag_value` is specified. See https://docs.datadoghq.com/tracing/guide/setting*primary*tags*to*scope/#add-a-second-primary-tag-in-datadog.\n"
                },
                "primaryTagValue": {
                    "type": "string",
                    "description": "Filter APM data by the second primary tag. `primary_tag_name` must also be specified.\n"
                },
                "resourceName": {
                    "type": "string",
                    "description": "APM resource.\n"
                },
                "service": {
                    "type": "string",
                    "description": "APM service.\n"
                },
                "stat": {
                    "type": "string",
                    "description": "APM statistic. Valid values are `errors`, `error_rate`, `hits`, `latency_avg`, `latency_distribution`, `latency_max`, `latency_p50`, `latency_p75`, `latency_p90`, `latency_p95`, `latency_p99`.\n"
                }
            },
            "type": "object",
            "required": [
                "dataSource",
                "env",
                "name",
                "service",
                "stat"
            ]
        },
        "datadog:index/DashboardWidgetChangeDefinitionRequestQueryCloudCostQuery:DashboardWidgetChangeDefinitionRequestQueryCloudCostQuery": {
            "properties": {
                "aggregator": {
                    "type": "string",
                    "description": "The aggregation methods available for cloud cost queries. Valid values are `avg`, `last`, `max`, `min`, `sum`, `percentile`.\n"
                },
                "crossOrgUuids": {
                    "type": "string",
                    "description": "The source organization UUID for cross organization queries. Feature in Private Beta.\n"
                },
                "dataSource": {
                    "type": "string",
                    "description": "The data source for cloud cost queries. Valid values are `cloud_cost`.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the query for use in formulas.\n"
                },
                "query": {
                    "type": "string",
                    "description": "The cloud cost query definition.\n"
                }
            },
            "type": "object",
            "required": [
                "dataSource",
                "name",
                "query"
            ]
        },
        "datadog:index/DashboardWidgetChangeDefinitionRequestQueryEventQuery:DashboardWidgetChangeDefinitionRequestQueryEventQuery": {
            "properties": {
                "computes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetChangeDefinitionRequestQueryEventQueryCompute:DashboardWidgetChangeDefinitionRequestQueryEventQueryCompute"
                    },
                    "description": "The compute options.\n"
                },
                "crossOrgUuids": {
                    "type": "string",
                    "description": "The source organization UUID for cross organization queries. Feature in Private Beta.\n"
                },
                "dataSource": {
                    "type": "string",
                    "description": "The data source for event platform-based queries. Valid values are `logs`, `spans`, `network`, `rum`, `security_signals`, `profiles`, `audit`, `events`, `ci_tests`, `ci_pipelines`, `incident_analytics`.\n"
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetChangeDefinitionRequestQueryEventQueryGroupBy:DashboardWidgetChangeDefinitionRequestQueryEventQueryGroupBy"
                    },
                    "description": "Group by options.\n"
                },
                "indexes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "An array of index names to query in the stream.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of query for use in formulas.\n"
                },
                "search": {
                    "$ref": "#/types/datadog:index/DashboardWidgetChangeDefinitionRequestQueryEventQuerySearch:DashboardWidgetChangeDefinitionRequestQueryEventQuerySearch",
                    "description": "The search options.\n"
                },
                "storage": {
                    "type": "string",
                    "description": "Storage location (private beta).\n"
                }
            },
            "type": "object",
            "required": [
                "computes",
                "dataSource",
                "name"
            ]
        },
        "datadog:index/DashboardWidgetChangeDefinitionRequestQueryEventQueryCompute:DashboardWidgetChangeDefinitionRequestQueryEventQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "The aggregation methods for event platform queries. Valid values are `count`, `cardinality`, `median`, `pc75`, `pc90`, `pc95`, `pc98`, `pc99`, `sum`, `min`, `max`, `avg`.\n"
                },
                "interval": {
                    "type": "integer",
                    "description": "A time interval in milliseconds.\n"
                },
                "metric": {
                    "type": "string",
                    "description": "The measurable attribute to compute.\n"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetChangeDefinitionRequestQueryEventQueryGroupBy:DashboardWidgetChangeDefinitionRequestQueryEventQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "description": "The event facet.\n"
                },
                "limit": {
                    "type": "integer",
                    "description": "The number of groups to return.\n"
                },
                "sort": {
                    "$ref": "#/types/datadog:index/DashboardWidgetChangeDefinitionRequestQueryEventQueryGroupBySort:DashboardWidgetChangeDefinitionRequestQueryEventQueryGroupBySort",
                    "description": "The options for sorting group by results.\n"
                }
            },
            "type": "object",
            "required": [
                "facet"
            ]
        },
        "datadog:index/DashboardWidgetChangeDefinitionRequestQueryEventQueryGroupBySort:DashboardWidgetChangeDefinitionRequestQueryEventQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "The aggregation methods for the event platform queries. Valid values are `count`, `cardinality`, `median`, `pc75`, `pc90`, `pc95`, `pc98`, `pc99`, `sum`, `min`, `max`, `avg`.\n"
                },
                "metric": {
                    "type": "string",
                    "description": "The metric used for sorting group by results.\n"
                },
                "order": {
                    "type": "string",
                    "description": "Direction of sort. Valid values are `asc`, `desc`.\n"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetChangeDefinitionRequestQueryEventQuerySearch:DashboardWidgetChangeDefinitionRequestQueryEventQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "description": "The events search string.\n"
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/DashboardWidgetChangeDefinitionRequestQueryMetricQuery:DashboardWidgetChangeDefinitionRequestQueryMetricQuery": {
            "properties": {
                "aggregator": {
                    "type": "string",
                    "description": "The aggregation methods available for metrics queries. Valid values are `avg`, `min`, `max`, `sum`, `last`, `area`, `l2norm`, `percentile`.\n"
                },
                "crossOrgUuids": {
                    "type": "string",
                    "description": "The source organization UUID for cross organization queries. Feature in Private Beta.\n"
                },
                "dataSource": {
                    "type": "string",
                    "description": "The data source for metrics queries. Defaults to `\"metrics\"`.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the query for use in formulas.\n"
                },
                "query": {
                    "type": "string",
                    "description": "The metrics query definition.\n"
                }
            },
            "type": "object",
            "required": [
                "name",
                "query"
            ]
        },
        "datadog:index/DashboardWidgetChangeDefinitionRequestQueryProcessQuery:DashboardWidgetChangeDefinitionRequestQueryProcessQuery": {
            "properties": {
                "aggregator": {
                    "type": "string",
                    "description": "The aggregation methods available for metrics queries. Valid values are `avg`, `min`, `max`, `sum`, `last`, `area`, `l2norm`, `percentile`.\n"
                },
                "crossOrgUuids": {
                    "type": "string",
                    "description": "The source organization UUID for cross organization queries. Feature in Private Beta.\n"
                },
                "dataSource": {
                    "type": "string",
                    "description": "The data source for process queries. Valid values are `process`, `container`.\n"
                },
                "isNormalizedCpu": {
                    "type": "boolean",
                    "description": "Whether to normalize the CPU percentages.\n"
                },
                "limit": {
                    "type": "integer",
                    "description": "The number of hits to return.\n"
                },
                "metric": {
                    "type": "string",
                    "description": "The process metric name.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of query for use in formulas.\n"
                },
                "sort": {
                    "type": "string",
                    "description": "The direction of the sort. Valid values are `asc`, `desc`. Defaults to `\"desc\"`.\n"
                },
                "tagFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "An array of tags to filter by.\n"
                },
                "textFilter": {
                    "type": "string",
                    "description": "The text to use as a filter.\n"
                }
            },
            "type": "object",
            "required": [
                "dataSource",
                "metric",
                "name"
            ]
        },
        "datadog:index/DashboardWidgetChangeDefinitionRequestQuerySloQuery:DashboardWidgetChangeDefinitionRequestQuerySloQuery": {
            "properties": {
                "additionalQueryFilters": {
                    "type": "string",
                    "description": "Additional filters applied to the SLO query.\n"
                },
                "crossOrgUuids": {
                    "type": "string",
                    "description": "The source organization UUID for cross organization queries. Feature in Private Beta.\n"
                },
                "dataSource": {
                    "type": "string",
                    "description": "The data source for SLO queries. Valid values are `slo`.\n"
                },
                "groupMode": {
                    "type": "string",
                    "description": "Group mode to query measures. Valid values are `overall`, `components`. Defaults to `\"overall\"`.\n"
                },
                "measure": {
                    "type": "string",
                    "description": "SLO measures queries. Valid values are `good_events`, `bad_events`, `slo_status`, `error_budget_remaining`, `burn_rate`, `error_budget_burndown`.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of query for use in formulas.\n"
                },
                "sloId": {
                    "type": "string",
                    "description": "ID of an SLO to query.\n"
                },
                "sloQueryType": {
                    "type": "string",
                    "description": "type of the SLO to query. Valid values are `metric`, `time_slice`. Defaults to `\"metric\"`.\n"
                }
            },
            "type": "object",
            "required": [
                "dataSource",
                "measure",
                "sloId"
            ]
        },
        "datadog:index/DashboardWidgetCheckStatusDefinition:DashboardWidgetCheckStatusDefinition": {
            "properties": {
                "check": {
                    "type": "string",
                    "description": "The check to use in the widget.\n"
                },
                "group": {
                    "type": "string",
                    "description": "The check group to use in the widget.\n"
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "When `grouping = \"cluster\"`, indicates a list of tags to use for grouping.\n"
                },
                "grouping": {
                    "type": "string",
                    "description": "The kind of grouping to use. Valid values are `check`, `cluster`.\n"
                },
                "liveSpan": {
                    "type": "string",
                    "description": "The timeframe to use when displaying the widget. Valid values are `1m`, `5m`, `10m`, `15m`, `30m`, `1h`, `4h`, `1d`, `2d`, `1w`, `1mo`, `3mo`, `6mo`, `week_to_date`, `month_to_date`, `1y`, `alert`.\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tags to use in the widget.\n"
                },
                "title": {
                    "type": "string",
                    "description": "The title of the widget.\n"
                },
                "titleAlign": {
                    "type": "string",
                    "description": "The alignment of the widget's title. Valid values are `center`, `left`, `right`.\n"
                },
                "titleSize": {
                    "type": "string",
                    "description": "The size of the widget's title (defaults to 16).\n"
                }
            },
            "type": "object",
            "required": [
                "check",
                "grouping"
            ]
        },
        "datadog:index/DashboardWidgetDistributionDefinition:DashboardWidgetDistributionDefinition": {
            "properties": {
                "legendSize": {
                    "type": "string",
                    "description": "The size of the legend displayed in the widget.\n"
                },
                "liveSpan": {
                    "type": "string",
                    "description": "The timeframe to use when displaying the widget. Valid values are `1m`, `5m`, `10m`, `15m`, `30m`, `1h`, `4h`, `1d`, `2d`, `1w`, `1mo`, `3mo`, `6mo`, `week_to_date`, `month_to_date`, `1y`, `alert`.\n"
                },
                "requests": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetDistributionDefinitionRequest:DashboardWidgetDistributionDefinitionRequest"
                    },
                    "description": "A nested block describing the request to use when displaying the widget. Multiple request blocks are allowed using the structure below (exactly one of `q`, `apm_query`, `log_query`, `rum_query`, `security_query` or `process_query` is required within the request block).\n"
                },
                "showLegend": {
                    "type": "boolean",
                    "description": "Whether or not to show the legend on this widget.\n"
                },
                "title": {
                    "type": "string",
                    "description": "The title of the widget.\n"
                },
                "titleAlign": {
                    "type": "string",
                    "description": "The alignment of the widget's title. Valid values are `center`, `left`, `right`.\n"
                },
                "titleSize": {
                    "type": "string",
                    "description": "The size of the widget's title (defaults to 16).\n"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetDistributionDefinitionRequest:DashboardWidgetDistributionDefinitionRequest": {
            "properties": {
                "apmQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetApmQuery:DashboardWidgetApmQuery",
                    "description": "The query to use for this widget.\n"
                },
                "apmStatsQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetDistributionDefinitionRequestApmStatsQuery:DashboardWidgetDistributionDefinitionRequestApmStatsQuery"
                },
                "logQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetLogQuery:DashboardWidgetLogQuery",
                    "description": "The query to use for this widget.\n"
                },
                "processQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetDistributionDefinitionRequestProcessQuery:DashboardWidgetDistributionDefinitionRequestProcessQuery",
                    "description": "The process query to use in the widget. The structure of this block is described below.\n"
                },
                "q": {
                    "type": "string",
                    "description": "The metric query to use for this widget.\n"
                },
                "rumQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetRumQuery:DashboardWidgetRumQuery",
                    "description": "The query to use for this widget.\n"
                },
                "securityQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetSecurityQuery:DashboardWidgetSecurityQuery",
                    "description": "The query to use for this widget.\n"
                },
                "style": {
                    "$ref": "#/types/datadog:index/DashboardWidgetDistributionDefinitionRequestStyle:DashboardWidgetDistributionDefinitionRequestStyle",
                    "description": "The style of the widget graph. One nested block is allowed using the structure below.\n"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetDistributionDefinitionRequestApmStatsQuery:DashboardWidgetDistributionDefinitionRequestApmStatsQuery": {
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetDistributionDefinitionRequestApmStatsQueryColumn:DashboardWidgetDistributionDefinitionRequestApmStatsQueryColumn"
                    },
                    "description": "Column properties used by the front end for display.\n"
                },
                "env": {
                    "type": "string",
                    "description": "The environment name.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The operation name associated with the service.\n"
                },
                "primaryTag": {
                    "type": "string",
                    "description": "The organization's host group name and value.\n"
                },
                "resource": {
                    "type": "string",
                    "description": "The resource name.\n"
                },
                "rowType": {
                    "type": "string",
                    "description": "The level of detail for the request. Valid values are `service`, `resource`, `span`.\n"
                },
                "service": {
                    "type": "string",
                    "description": "The service name.\n"
                }
            },
            "type": "object",
            "required": [
                "env",
                "name",
                "primaryTag",
                "rowType",
                "service"
            ]
        },
        "datadog:index/DashboardWidgetDistributionDefinitionRequestApmStatsQueryColumn:DashboardWidgetDistributionDefinitionRequestApmStatsQueryColumn": {
            "properties": {
                "alias": {
                    "type": "string",
                    "description": "A user-assigned alias for the column.\n"
                },
                "cellDisplayMode": {
                    "type": "string",
                    "description": "A list of display modes for each table cell. Valid values are `number`, `bar`.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The column name.\n"
                },
                "order": {
                    "type": "string",
                    "description": "Widget sorting methods. Valid values are `asc`, `desc`.\n"
                }
            },
            "type": "object",
            "required": [
                "name"
            ]
        },
        "datadog:index/DashboardWidgetDistributionDefinitionRequestProcessQuery:DashboardWidgetDistributionDefinitionRequestProcessQuery": {
            "properties": {
                "filterBies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of processes.\n"
                },
                "limit": {
                    "type": "integer",
                    "description": "The max number of items in the filter list.\n"
                },
                "metric": {
                    "type": "string",
                    "description": "Your chosen metric.\n"
                },
                "searchBy": {
                    "type": "string",
                    "description": "Your chosen search term.\n"
                }
            },
            "type": "object",
            "required": [
                "metric"
            ]
        },
        "datadog:index/DashboardWidgetDistributionDefinitionRequestStyle:DashboardWidgetDistributionDefinitionRequestStyle": {
            "properties": {
                "palette": {
                    "type": "string",
                    "description": "A color palette to apply to the widget. The available options are available at: https://docs.datadoghq.com/dashboards/widgets/timeseries/#appearance.\n"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetEventStreamDefinition:DashboardWidgetEventStreamDefinition": {
            "properties": {
                "eventSize": {
                    "type": "string",
                    "description": "The size to use to display an event. Valid values are `s`, `l`.\n"
                },
                "liveSpan": {
                    "type": "string",
                    "description": "The timeframe to use when displaying the widget. Valid values are `1m`, `5m`, `10m`, `15m`, `30m`, `1h`, `4h`, `1d`, `2d`, `1w`, `1mo`, `3mo`, `6mo`, `week_to_date`, `month_to_date`, `1y`, `alert`.\n"
                },
                "query": {
                    "type": "string",
                    "description": "The query to use in the widget.\n"
                },
                "tagsExecution": {
                    "type": "string",
                    "description": "The execution method for multi-value filters, options: `and` or `or`.\n"
                },
                "title": {
                    "type": "string",
                    "description": "The title of the widget.\n"
                },
                "titleAlign": {
                    "type": "string",
                    "description": "The alignment of the widget's title. Valid values are `center`, `left`, `right`.\n"
                },
                "titleSize": {
                    "type": "string",
                    "description": "The size of the widget's title (defaults to 16).\n"
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/DashboardWidgetEventTimelineDefinition:DashboardWidgetEventTimelineDefinition": {
            "properties": {
                "liveSpan": {
                    "type": "string",
                    "description": "The timeframe to use when displaying the widget. Valid values are `1m`, `5m`, `10m`, `15m`, `30m`, `1h`, `4h`, `1d`, `2d`, `1w`, `1mo`, `3mo`, `6mo`, `week_to_date`, `month_to_date`, `1y`, `alert`.\n"
                },
                "query": {
                    "type": "string",
                    "description": "The query to use in the widget.\n"
                },
                "tagsExecution": {
                    "type": "string",
                    "description": "The execution method for multi-value filters, options: `and` or `or`.\n"
                },
                "title": {
                    "type": "string",
                    "description": "The title of the widget.\n"
                },
                "titleAlign": {
                    "type": "string",
                    "description": "The alignment of the widget's title. Valid values are `center`, `left`, `right`.\n"
                },
                "titleSize": {
                    "type": "string",
                    "description": "The size of the widget's title (defaults to 16).\n"
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/DashboardWidgetFreeTextDefinition:DashboardWidgetFreeTextDefinition": {
            "properties": {
                "color": {
                    "type": "string",
                    "description": "The color of the text in the widget.\n"
                },
                "fontSize": {
                    "type": "string",
                    "description": "The size of the text in the widget.\n"
                },
                "text": {
                    "type": "string",
                    "description": "The text to display in the widget.\n"
                },
                "textAlign": {
                    "type": "string",
                    "description": "The alignment of the text in the widget. Valid values are `center`, `left`, `right`.\n"
                }
            },
            "type": "object",
            "required": [
                "text"
            ]
        },
        "datadog:index/DashboardWidgetGeomapDefinition:DashboardWidgetGeomapDefinition": {
            "properties": {
                "customLinks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGeomapDefinitionCustomLink:DashboardWidgetGeomapDefinitionCustomLink"
                    },
                    "description": "A nested block describing a custom link. Multiple `custom_link` blocks are allowed using the structure below.\n"
                },
                "liveSpan": {
                    "type": "string",
                    "description": "The timeframe to use when displaying the widget. Valid values are `1m`, `5m`, `10m`, `15m`, `30m`, `1h`, `4h`, `1d`, `2d`, `1w`, `1mo`, `3mo`, `6mo`, `week_to_date`, `month_to_date`, `1y`, `alert`.\n"
                },
                "requests": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGeomapDefinitionRequest:DashboardWidgetGeomapDefinitionRequest"
                    },
                    "description": "A nested block describing the request to use when displaying the widget. Multiple `request` blocks are allowed using the structure below (exactly one of `q`, `log_query` or `rum_query` is required within the `request` block).\n"
                },
                "style": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGeomapDefinitionStyle:DashboardWidgetGeomapDefinitionStyle",
                    "description": "The style of the widget graph. One nested block is allowed using the structure below.\n"
                },
                "title": {
                    "type": "string",
                    "description": "The title of the widget.\n"
                },
                "titleAlign": {
                    "type": "string",
                    "description": "The alignment of the widget's title. Valid values are `center`, `left`, `right`.\n"
                },
                "titleSize": {
                    "type": "string",
                    "description": "The size of the widget's title (defaults to 16).\n"
                },
                "view": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGeomapDefinitionView:DashboardWidgetGeomapDefinitionView",
                    "description": "The view of the world that the map should render.\n"
                }
            },
            "type": "object",
            "required": [
                "view"
            ]
        },
        "datadog:index/DashboardWidgetGeomapDefinitionCustomLink:DashboardWidgetGeomapDefinitionCustomLink": {
            "properties": {
                "isHidden": {
                    "type": "boolean",
                    "description": "The flag for toggling context menu link visibility.\n"
                },
                "label": {
                    "type": "string",
                    "description": "The label for the custom link URL.\n"
                },
                "link": {
                    "type": "string",
                    "description": "The URL of the custom link.\n"
                },
                "overrideLabel": {
                    "type": "string",
                    "description": "The label ID that refers to a context menu link item. When `override_label` is provided, the client request omits the label field.\n"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGeomapDefinitionRequest:DashboardWidgetGeomapDefinitionRequest": {
            "properties": {
                "formulas": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGeomapDefinitionRequestFormula:DashboardWidgetGeomapDefinitionRequestFormula"
                    }
                },
                "logQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetLogQuery:DashboardWidgetLogQuery",
                    "description": "The query to use for this widget.\n"
                },
                "q": {
                    "type": "string",
                    "description": "The metric query to use for this widget.\n"
                },
                "queries": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGeomapDefinitionRequestQuery:DashboardWidgetGeomapDefinitionRequestQuery"
                    }
                },
                "rumQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetRumQuery:DashboardWidgetRumQuery",
                    "description": "The query to use for this widget.\n"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGeomapDefinitionRequestFormula:DashboardWidgetGeomapDefinitionRequestFormula": {
            "properties": {
                "alias": {
                    "type": "string",
                    "description": "An expression alias.\n"
                },
                "cellDisplayMode": {
                    "type": "string",
                    "description": "A list of display modes for each table cell. Valid values are `number`, `bar`.\n"
                },
                "conditionalFormats": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGeomapDefinitionRequestFormulaConditionalFormat:DashboardWidgetGeomapDefinitionRequestFormulaConditionalFormat"
                    },
                    "description": "Conditional formats allow you to set the color of your widget content or background depending on the rule applied to your data. Multiple `conditional_formats` blocks are allowed using the structure below.\n"
                },
                "formulaExpression": {
                    "type": "string",
                    "description": "A string expression built from queries, formulas, and functions.\n"
                },
                "limit": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGeomapDefinitionRequestFormulaLimit:DashboardWidgetGeomapDefinitionRequestFormulaLimit",
                    "description": "The options for limiting results returned.\n"
                },
                "style": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGeomapDefinitionRequestFormulaStyle:DashboardWidgetGeomapDefinitionRequestFormulaStyle",
                    "description": "Styling options for widget formulas.\n"
                }
            },
            "type": "object",
            "required": [
                "formulaExpression"
            ]
        },
        "datadog:index/DashboardWidgetGeomapDefinitionRequestFormulaConditionalFormat:DashboardWidgetGeomapDefinitionRequestFormulaConditionalFormat": {
            "properties": {
                "comparator": {
                    "type": "string",
                    "description": "The comparator to use. Valid values are `=`, `\u003e`, `\u003e=`, `\u003c`, `\u003c=`.\n"
                },
                "customBgColor": {
                    "type": "string",
                    "description": "The color palette to apply to the background, same values available as palette.\n"
                },
                "customFgColor": {
                    "type": "string",
                    "description": "The color palette to apply to the foreground, same values available as palette.\n"
                },
                "hideValue": {
                    "type": "boolean",
                    "description": "Setting this to True hides values.\n"
                },
                "imageUrl": {
                    "type": "string",
                    "description": "Displays an image as the background.\n"
                },
                "metric": {
                    "type": "string",
                    "description": "The metric from the request to correlate with this conditional format.\n"
                },
                "palette": {
                    "type": "string",
                    "description": "The color palette to apply. Valid values are `blue`, `custom_bg`, `custom_image`, `custom_text`, `gray_on_white`, `grey`, `green`, `orange`, `red`, `red_on_white`, `white_on_gray`, `white_on_green`, `green_on_white`, `white_on_red`, `white_on_yellow`, `yellow_on_white`, `black_on_light_yellow`, `black_on_light_green`, `black_on_light_red`.\n"
                },
                "timeframe": {
                    "type": "string",
                    "description": "Defines the displayed timeframe.\n"
                },
                "value": {
                    "type": "number",
                    "description": "A value for the comparator.\n"
                }
            },
            "type": "object",
            "required": [
                "comparator",
                "palette",
                "value"
            ]
        },
        "datadog:index/DashboardWidgetGeomapDefinitionRequestFormulaLimit:DashboardWidgetGeomapDefinitionRequestFormulaLimit": {
            "properties": {
                "count": {
                    "type": "integer",
                    "description": "The number of results to return.\n"
                },
                "order": {
                    "type": "string",
                    "description": "The direction of the sort. Valid values are `asc`, `desc`. Defaults to `\"desc\"`.\n"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGeomapDefinitionRequestFormulaStyle:DashboardWidgetGeomapDefinitionRequestFormulaStyle": {
            "properties": {
                "palette": {
                    "type": "string",
                    "description": "The color palette used to display the formula. A guide to the available color palettes can be found at https://docs.datadoghq.com/dashboards/guide/widget_colors.\n"
                },
                "paletteIndex": {
                    "type": "integer",
                    "description": "Index specifying which color to use within the palette.\n"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGeomapDefinitionRequestQuery:DashboardWidgetGeomapDefinitionRequestQuery": {
            "properties": {
                "apmDependencyStatsQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGeomapDefinitionRequestQueryApmDependencyStatsQuery:DashboardWidgetGeomapDefinitionRequestQueryApmDependencyStatsQuery",
                    "description": "The APM Dependency Stats query using formulas and functions.\n"
                },
                "apmResourceStatsQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGeomapDefinitionRequestQueryApmResourceStatsQuery:DashboardWidgetGeomapDefinitionRequestQueryApmResourceStatsQuery",
                    "description": "The APM Resource Stats query using formulas and functions.\n"
                },
                "cloudCostQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGeomapDefinitionRequestQueryCloudCostQuery:DashboardWidgetGeomapDefinitionRequestQueryCloudCostQuery",
                    "description": "The Cloud Cost query using formulas and functions.\n"
                },
                "eventQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGeomapDefinitionRequestQueryEventQuery:DashboardWidgetGeomapDefinitionRequestQueryEventQuery",
                    "description": "A timeseries formula and functions events query.\n"
                },
                "metricQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGeomapDefinitionRequestQueryMetricQuery:DashboardWidgetGeomapDefinitionRequestQueryMetricQuery",
                    "description": "A timeseries formula and functions metrics query.\n"
                },
                "processQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGeomapDefinitionRequestQueryProcessQuery:DashboardWidgetGeomapDefinitionRequestQueryProcessQuery",
                    "description": "The process query using formulas and functions.\n"
                },
                "sloQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGeomapDefinitionRequestQuerySloQuery:DashboardWidgetGeomapDefinitionRequestQuerySloQuery",
                    "description": "The SLO query using formulas and functions.\n"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGeomapDefinitionRequestQueryApmDependencyStatsQuery:DashboardWidgetGeomapDefinitionRequestQueryApmDependencyStatsQuery": {
            "properties": {
                "crossOrgUuids": {
                    "type": "string",
                    "description": "The source organization UUID for cross organization queries. Feature in Private Beta.\n"
                },
                "dataSource": {
                    "type": "string",
                    "description": "The data source for APM Dependency Stats queries. Valid values are `apm_dependency_stats`.\n"
                },
                "env": {
                    "type": "string",
                    "description": "APM environment.\n"
                },
                "isUpstream": {
                    "type": "boolean",
                    "description": "Determines whether stats for upstream or downstream dependencies should be queried.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of query for use in formulas.\n"
                },
                "operationName": {
                    "type": "string",
                    "description": "Name of operation on service.\n"
                },
                "primaryTagName": {
                    "type": "string",
                    "description": "The name of the second primary tag used within APM; required when `primary_tag_value` is specified. See https://docs.datadoghq.com/tracing/guide/setting*primary*tags*to*scope/#add-a-second-primary-tag-in-datadog.\n"
                },
                "primaryTagValue": {
                    "type": "string",
                    "description": "Filter APM data by the second primary tag. `primary_tag_name` must also be specified.\n"
                },
                "resourceName": {
                    "type": "string",
                    "description": "APM resource.\n"
                },
                "service": {
                    "type": "string",
                    "description": "APM service.\n"
                },
                "stat": {
                    "type": "string",
                    "description": "APM statistic. Valid values are `avg_duration`, `avg_root_duration`, `avg_spans_per_trace`, `error_rate`, `pct_exec_time`, `pct_of_traces`, `total_traces_count`.\n"
                }
            },
            "type": "object",
            "required": [
                "dataSource",
                "env",
                "name",
                "operationName",
                "resourceName",
                "service",
                "stat"
            ]
        },
        "datadog:index/DashboardWidgetGeomapDefinitionRequestQueryApmResourceStatsQuery:DashboardWidgetGeomapDefinitionRequestQueryApmResourceStatsQuery": {
            "properties": {
                "crossOrgUuids": {
                    "type": "string",
                    "description": "The source organization UUID for cross organization queries. Feature in Private Beta.\n"
                },
                "dataSource": {
                    "type": "string",
                    "description": "The data source for APM Resource Stats queries. Valid values are `apm_resource_stats`.\n"
                },
                "env": {
                    "type": "string",
                    "description": "APM environment.\n"
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Array of fields to group results by.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of query for use in formulas.\n"
                },
                "operationName": {
                    "type": "string",
                    "description": "Name of operation on service.\n"
                },
                "primaryTagName": {
                    "type": "string",
                    "description": "The name of the second primary tag used within APM; required when `primary_tag_value` is specified. See https://docs.datadoghq.com/tracing/guide/setting*primary*tags*to*scope/#add-a-second-primary-tag-in-datadog.\n"
                },
                "primaryTagValue": {
                    "type": "string",
                    "description": "Filter APM data by the second primary tag. `primary_tag_name` must also be specified.\n"
                },
                "resourceName": {
                    "type": "string",
                    "description": "APM resource.\n"
                },
                "service": {
                    "type": "string",
                    "description": "APM service.\n"
                },
                "stat": {
                    "type": "string",
                    "description": "APM statistic. Valid values are `errors`, `error_rate`, `hits`, `latency_avg`, `latency_distribution`, `latency_max`, `latency_p50`, `latency_p75`, `latency_p90`, `latency_p95`, `latency_p99`.\n"
                }
            },
            "type": "object",
            "required": [
                "dataSource",
                "env",
                "name",
                "service",
                "stat"
            ]
        },
        "datadog:index/DashboardWidgetGeomapDefinitionRequestQueryCloudCostQuery:DashboardWidgetGeomapDefinitionRequestQueryCloudCostQuery": {
            "properties": {
                "aggregator": {
                    "type": "string",
                    "description": "The aggregation methods available for cloud cost queries. Valid values are `avg`, `last`, `max`, `min`, `sum`, `percentile`.\n"
                },
                "crossOrgUuids": {
                    "type": "string",
                    "description": "The source organization UUID for cross organization queries. Feature in Private Beta.\n"
                },
                "dataSource": {
                    "type": "string",
                    "description": "The data source for cloud cost queries. Valid values are `cloud_cost`.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the query for use in formulas.\n"
                },
                "query": {
                    "type": "string",
                    "description": "The cloud cost query definition.\n"
                }
            },
            "type": "object",
            "required": [
                "dataSource",
                "name",
                "query"
            ]
        },
        "datadog:index/DashboardWidgetGeomapDefinitionRequestQueryEventQuery:DashboardWidgetGeomapDefinitionRequestQueryEventQuery": {
            "properties": {
                "computes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGeomapDefinitionRequestQueryEventQueryCompute:DashboardWidgetGeomapDefinitionRequestQueryEventQueryCompute"
                    },
                    "description": "The compute options.\n"
                },
                "crossOrgUuids": {
                    "type": "string",
                    "description": "The source organization UUID for cross organization queries. Feature in Private Beta.\n"
                },
                "dataSource": {
                    "type": "string",
                    "description": "The data source for event platform-based queries. Valid values are `logs`, `spans`, `network`, `rum`, `security_signals`, `profiles`, `audit`, `events`, `ci_tests`, `ci_pipelines`, `incident_analytics`.\n"
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGeomapDefinitionRequestQueryEventQueryGroupBy:DashboardWidgetGeomapDefinitionRequestQueryEventQueryGroupBy"
                    },
                    "description": "Group by options.\n"
                },
                "indexes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "An array of index names to query in the stream.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of query for use in formulas.\n"
                },
                "search": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGeomapDefinitionRequestQueryEventQuerySearch:DashboardWidgetGeomapDefinitionRequestQueryEventQuerySearch",
                    "description": "The search options.\n"
                },
                "storage": {
                    "type": "string",
                    "description": "Storage location (private beta).\n"
                }
            },
            "type": "object",
            "required": [
                "computes",
                "dataSource",
                "name"
            ]
        },
        "datadog:index/DashboardWidgetGeomapDefinitionRequestQueryEventQueryCompute:DashboardWidgetGeomapDefinitionRequestQueryEventQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "The aggregation methods for event platform queries. Valid values are `count`, `cardinality`, `median`, `pc75`, `pc90`, `pc95`, `pc98`, `pc99`, `sum`, `min`, `max`, `avg`.\n"
                },
                "interval": {
                    "type": "integer",
                    "description": "A time interval in milliseconds.\n"
                },
                "metric": {
                    "type": "string",
                    "description": "The measurable attribute to compute.\n"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGeomapDefinitionRequestQueryEventQueryGroupBy:DashboardWidgetGeomapDefinitionRequestQueryEventQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "description": "The event facet.\n"
                },
                "limit": {
                    "type": "integer",
                    "description": "The number of groups to return.\n"
                },
                "sort": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGeomapDefinitionRequestQueryEventQueryGroupBySort:DashboardWidgetGeomapDefinitionRequestQueryEventQueryGroupBySort",
                    "description": "The options for sorting group by results.\n"
                }
            },
            "type": "object",
            "required": [
                "facet"
            ]
        },
        "datadog:index/DashboardWidgetGeomapDefinitionRequestQueryEventQueryGroupBySort:DashboardWidgetGeomapDefinitionRequestQueryEventQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "The aggregation methods for the event platform queries. Valid values are `count`, `cardinality`, `median`, `pc75`, `pc90`, `pc95`, `pc98`, `pc99`, `sum`, `min`, `max`, `avg`.\n"
                },
                "metric": {
                    "type": "string",
                    "description": "The metric used for sorting group by results.\n"
                },
                "order": {
                    "type": "string",
                    "description": "Direction of sort. Valid values are `asc`, `desc`.\n"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGeomapDefinitionRequestQueryEventQuerySearch:DashboardWidgetGeomapDefinitionRequestQueryEventQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "description": "The events search string.\n"
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/DashboardWidgetGeomapDefinitionRequestQueryMetricQuery:DashboardWidgetGeomapDefinitionRequestQueryMetricQuery": {
            "properties": {
                "aggregator": {
                    "type": "string",
                    "description": "The aggregation methods available for metrics queries. Valid values are `avg`, `min`, `max`, `sum`, `last`, `area`, `l2norm`, `percentile`.\n"
                },
                "crossOrgUuids": {
                    "type": "string",
                    "description": "The source organization UUID for cross organization queries. Feature in Private Beta.\n"
                },
                "dataSource": {
                    "type": "string",
                    "description": "The data source for metrics queries. Defaults to `\"metrics\"`.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the query for use in formulas.\n"
                },
                "query": {
                    "type": "string",
                    "description": "The metrics query definition.\n"
                }
            },
            "type": "object",
            "required": [
                "name",
                "query"
            ]
        },
        "datadog:index/DashboardWidgetGeomapDefinitionRequestQueryProcessQuery:DashboardWidgetGeomapDefinitionRequestQueryProcessQuery": {
            "properties": {
                "aggregator": {
                    "type": "string",
                    "description": "The aggregation methods available for metrics queries. Valid values are `avg`, `min`, `max`, `sum`, `last`, `area`, `l2norm`, `percentile`.\n"
                },
                "crossOrgUuids": {
                    "type": "string",
                    "description": "The source organization UUID for cross organization queries. Feature in Private Beta.\n"
                },
                "dataSource": {
                    "type": "string",
                    "description": "The data source for process queries. Valid values are `process`, `container`.\n"
                },
                "isNormalizedCpu": {
                    "type": "boolean",
                    "description": "Whether to normalize the CPU percentages.\n"
                },
                "limit": {
                    "type": "integer",
                    "description": "The number of hits to return.\n"
                },
                "metric": {
                    "type": "string",
                    "description": "The process metric name.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of query for use in formulas.\n"
                },
                "sort": {
                    "type": "string",
                    "description": "The direction of the sort. Valid values are `asc`, `desc`. Defaults to `\"desc\"`.\n"
                },
                "tagFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "An array of tags to filter by.\n"
                },
                "textFilter": {
                    "type": "string",
                    "description": "The text to use as a filter.\n"
                }
            },
            "type": "object",
            "required": [
                "dataSource",
                "metric",
                "name"
            ]
        },
        "datadog:index/DashboardWidgetGeomapDefinitionRequestQuerySloQuery:DashboardWidgetGeomapDefinitionRequestQuerySloQuery": {
            "properties": {
                "additionalQueryFilters": {
                    "type": "string",
                    "description": "Additional filters applied to the SLO query.\n"
                },
                "crossOrgUuids": {
                    "type": "string",
                    "description": "The source organization UUID for cross organization queries. Feature in Private Beta.\n"
                },
                "dataSource": {
                    "type": "string",
                    "description": "The data source for SLO queries. Valid values are `slo`.\n"
                },
                "groupMode": {
                    "type": "string",
                    "description": "Group mode to query measures. Valid values are `overall`, `components`. Defaults to `\"overall\"`.\n"
                },
                "measure": {
                    "type": "string",
                    "description": "SLO measures queries. Valid values are `good_events`, `bad_events`, `slo_status`, `error_budget_remaining`, `burn_rate`, `error_budget_burndown`.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of query for use in formulas.\n"
                },
                "sloId": {
                    "type": "string",
                    "description": "ID of an SLO to query.\n"
                },
                "sloQueryType": {
                    "type": "string",
                    "description": "type of the SLO to query. Valid values are `metric`, `time_slice`. Defaults to `\"metric\"`.\n"
                }
            },
            "type": "object",
            "required": [
                "dataSource",
                "measure",
                "sloId"
            ]
        },
        "datadog:index/DashboardWidgetGeomapDefinitionStyle:DashboardWidgetGeomapDefinitionStyle": {
            "properties": {
                "palette": {
                    "type": "string",
                    "description": "The color palette to apply to the widget.\n"
                },
                "paletteFlip": {
                    "type": "boolean",
                    "description": "A Boolean indicating whether to flip the palette tones.\n"
                }
            },
            "type": "object",
            "required": [
                "palette",
                "paletteFlip"
            ]
        },
        "datadog:index/DashboardWidgetGeomapDefinitionView:DashboardWidgetGeomapDefinitionView": {
            "properties": {
                "focus": {
                    "type": "string",
                    "description": "The two-letter ISO code of a country to focus the map on (or `WORLD`).\n"
                }
            },
            "type": "object",
            "required": [
                "focus"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinition:DashboardWidgetGroupDefinition": {
            "properties": {
                "backgroundColor": {
                    "type": "string",
                    "description": "The background color of the group title, options: `vivid_blue`, `vivid_purple`, `vivid_pink`, `vivid_orange`, `vivid_yellow`, `vivid_green`, `blue`, `purple`, `pink`, `orange`, `yellow`, `green`, `gray` or `white`\n"
                },
                "bannerImg": {
                    "type": "string",
                    "description": "The image URL to display as a banner for the group.\n"
                },
                "layoutType": {
                    "type": "string",
                    "description": "The layout type of the group. Valid values are `ordered`.\n"
                },
                "showTitle": {
                    "type": "boolean",
                    "description": "Whether to show the title or not. Defaults to `true`.\n"
                },
                "title": {
                    "type": "string",
                    "description": "The title of the group.\n"
                },
                "widgets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidget:DashboardWidgetGroupDefinitionWidget"
                    },
                    "description": "The list of widgets in this group.\n"
                }
            },
            "type": "object",
            "required": [
                "layoutType"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidget:DashboardWidgetGroupDefinitionWidget": {
            "properties": {
                "alertGraphDefinition": {
                    "$ref": "#/types/datadog:index/DashboardWidgetAlertGraphDefinition:DashboardWidgetAlertGraphDefinition",
                    "description": "The definition for a Alert Graph widget.\n"
                },
                "alertValueDefinition": {
                    "$ref": "#/types/datadog:index/DashboardWidgetAlertValueDefinition:DashboardWidgetAlertValueDefinition",
                    "description": "The definition for a Alert Value widget.\n"
                },
                "changeDefinition": {
                    "$ref": "#/types/datadog:index/DashboardWidgetChangeDefinition:DashboardWidgetChangeDefinition",
                    "description": "The definition for a Change widget.\n"
                },
                "checkStatusDefinition": {
                    "$ref": "#/types/datadog:index/DashboardWidgetCheckStatusDefinition:DashboardWidgetCheckStatusDefinition",
                    "description": "The definition for a Check Status widget.\n"
                },
                "distributionDefinition": {
                    "$ref": "#/types/datadog:index/DashboardWidgetDistributionDefinition:DashboardWidgetDistributionDefinition",
                    "description": "The definition for a Distribution widget.\n"
                },
                "eventStreamDefinition": {
                    "$ref": "#/types/datadog:index/DashboardWidgetEventStreamDefinition:DashboardWidgetEventStreamDefinition",
                    "description": "The definition for a Event Stream widget.\n"
                },
                "eventTimelineDefinition": {
                    "$ref": "#/types/datadog:index/DashboardWidgetEventTimelineDefinition:DashboardWidgetEventTimelineDefinition",
                    "description": "The definition for a Event Timeline widget.\n"
                },
                "freeTextDefinition": {
                    "$ref": "#/types/datadog:index/DashboardWidgetFreeTextDefinition:DashboardWidgetFreeTextDefinition",
                    "description": "The definition for a Free Text widget.\n"
                },
                "geomapDefinition": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGeomapDefinition:DashboardWidgetGeomapDefinition",
                    "description": "The definition for a Geomap widget.\n"
                },
                "heatmapDefinition": {
                    "$ref": "#/types/datadog:index/DashboardWidgetHeatmapDefinition:DashboardWidgetHeatmapDefinition",
                    "description": "The definition for a Heatmap widget.\n"
                },
                "hostmapDefinition": {
                    "$ref": "#/types/datadog:index/DashboardWidgetHostmapDefinition:DashboardWidgetHostmapDefinition",
                    "description": "The definition for a Hostmap widget.\n"
                },
                "id": {
                    "type": "integer",
                    "description": "The ID of the widget.\n"
                },
                "iframeDefinition": {
                    "$ref": "#/types/datadog:index/DashboardWidgetIframeDefinition:DashboardWidgetIframeDefinition",
                    "description": "The definition for an Iframe widget.\n"
                },
                "imageDefinition": {
                    "$ref": "#/types/datadog:index/DashboardWidgetImageDefinition:DashboardWidgetImageDefinition",
                    "description": "The definition for an Image widget\n"
                },
                "listStreamDefinition": {
                    "$ref": "#/types/datadog:index/DashboardWidgetListStreamDefinition:DashboardWidgetListStreamDefinition",
                    "description": "The definition for a List Stream widget.\n"
                },
                "logStreamDefinition": {
                    "$ref": "#/types/datadog:index/DashboardWidgetLogStreamDefinition:DashboardWidgetLogStreamDefinition",
                    "description": "The definition for an Log Stream widget.\n"
                },
                "manageStatusDefinition": {
                    "$ref": "#/types/datadog:index/DashboardWidgetManageStatusDefinition:DashboardWidgetManageStatusDefinition",
                    "description": "The definition for an Manage Status widget.\n"
                },
                "noteDefinition": {
                    "$ref": "#/types/datadog:index/DashboardWidgetNoteDefinition:DashboardWidgetNoteDefinition",
                    "description": "The definition for a Note widget.\n"
                },
                "powerpackDefinition": {
                    "$ref": "#/types/datadog:index/DashboardWidgetPowerpackDefinition:DashboardWidgetPowerpackDefinition",
                    "description": "The definition for a Powerpack widget.\n"
                },
                "queryTableDefinition": {
                    "$ref": "#/types/datadog:index/DashboardWidgetQueryTableDefinition:DashboardWidgetQueryTableDefinition",
                    "description": "The definition for a Query Table widget.\n"
                },
                "queryValueDefinition": {
                    "$ref": "#/types/datadog:index/DashboardWidgetQueryValueDefinition:DashboardWidgetQueryValueDefinition",
                    "description": "The definition for a Query Value widget.\n"
                },
                "runWorkflowDefinition": {
                    "$ref": "#/types/datadog:index/DashboardWidgetRunWorkflowDefinition:DashboardWidgetRunWorkflowDefinition",
                    "description": "The definition for a Run Workflow widget.\n"
                },
                "scatterplotDefinition": {
                    "$ref": "#/types/datadog:index/DashboardWidgetScatterplotDefinition:DashboardWidgetScatterplotDefinition",
                    "description": "The definition for a Scatterplot widget.\n"
                },
                "serviceLevelObjectiveDefinition": {
                    "$ref": "#/types/datadog:index/DashboardWidgetServiceLevelObjectiveDefinition:DashboardWidgetServiceLevelObjectiveDefinition",
                    "description": "The definition for a Service Level Objective widget.\n"
                },
                "servicemapDefinition": {
                    "$ref": "#/types/datadog:index/DashboardWidgetServicemapDefinition:DashboardWidgetServicemapDefinition",
                    "description": "The definition for a Service Map widget.\n"
                },
                "sloListDefinition": {
                    "$ref": "#/types/datadog:index/DashboardWidgetSloListDefinition:DashboardWidgetSloListDefinition",
                    "description": "The definition for an SLO (Service Level Objective) List widget.\n"
                },
                "splitGraphDefinition": {
                    "$ref": "#/types/datadog:index/DashboardWidgetSplitGraphDefinition:DashboardWidgetSplitGraphDefinition",
                    "description": "The definition for a Split Graph widget.\n"
                },
                "sunburstDefinition": {
                    "$ref": "#/types/datadog:index/DashboardWidgetSunburstDefinition:DashboardWidgetSunburstDefinition",
                    "description": "The definition for a Sunburst widget.\n"
                },
                "timeseriesDefinition": {
                    "$ref": "#/types/datadog:index/DashboardWidgetTimeseriesDefinition:DashboardWidgetTimeseriesDefinition",
                    "description": "The definition for a Timeseries widget.\n"
                },
                "toplistDefinition": {
                    "$ref": "#/types/datadog:index/DashboardWidgetToplistDefinition:DashboardWidgetToplistDefinition",
                    "description": "The definition for a Toplist widget.\n"
                },
                "topologyMapDefinition": {
                    "$ref": "#/types/datadog:index/DashboardWidgetTopologyMapDefinition:DashboardWidgetTopologyMapDefinition",
                    "description": "The definition for a Topology Map widget.\n"
                },
                "traceServiceDefinition": {
                    "$ref": "#/types/datadog:index/DashboardWidgetTraceServiceDefinition:DashboardWidgetTraceServiceDefinition",
                    "description": "The definition for a Trace Service widget.\n"
                },
                "treemapDefinition": {
                    "$ref": "#/types/datadog:index/DashboardWidgetTreemapDefinition:DashboardWidgetTreemapDefinition",
                    "description": "The definition for a Treemap widget.\n"
                },
                "widgetLayout": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetWidgetLayout:DashboardWidgetGroupDefinitionWidgetWidgetLayout",
                    "description": "The layout of the widget on a 'free' dashboard.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "id"
                    ]
                }
            }
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetWidgetLayout:DashboardWidgetGroupDefinitionWidgetWidgetLayout": {
            "properties": {
                "height": {
                    "type": "integer",
                    "description": "The height of the widget.\n"
                },
                "isColumnBreak": {
                    "type": "boolean",
                    "description": "Whether the widget should be the first one on the second column in high density or not. Only one widget in the dashboard should have this property set to `true`.\n"
                },
                "width": {
                    "type": "integer",
                    "description": "The width of the widget.\n"
                },
                "x": {
                    "type": "integer",
                    "description": "The position of the widget on the x (horizontal) axis. Must be greater than or equal to 0.\n"
                },
                "y": {
                    "type": "integer",
                    "description": "The position of the widget on the y (vertical) axis. Must be greater than or equal to 0.\n"
                }
            },
            "type": "object",
            "required": [
                "height",
                "width",
                "x",
                "y"
            ]
        },
        "datadog:index/DashboardWidgetHeatmapDefinition:DashboardWidgetHeatmapDefinition": {
            "properties": {
                "customLinks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetHeatmapDefinitionCustomLink:DashboardWidgetHeatmapDefinitionCustomLink"
                    },
                    "description": "A nested block describing a custom link. Multiple `custom_link` blocks are allowed using the structure below.\n"
                },
                "events": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetHeatmapDefinitionEvent:DashboardWidgetHeatmapDefinitionEvent"
                    },
                    "description": "The definition of the event to overlay on the graph. Multiple `event` blocks are allowed using the structure below.\n"
                },
                "legendSize": {
                    "type": "string",
                    "description": "The size of the legend displayed in the widget.\n"
                },
                "liveSpan": {
                    "type": "string",
                    "description": "The timeframe to use when displaying the widget. Valid values are `1m`, `5m`, `10m`, `15m`, `30m`, `1h`, `4h`, `1d`, `2d`, `1w`, `1mo`, `3mo`, `6mo`, `week_to_date`, `month_to_date`, `1y`, `alert`.\n"
                },
                "requests": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetHeatmapDefinitionRequest:DashboardWidgetHeatmapDefinitionRequest"
                    },
                    "description": "A nested block describing the request to use when displaying the widget. Multiple `request` blocks are allowed using the structure below (exactly one of `q`, `apm_query`, `log_query`, `rum_query`, `security_query` or `process_query` is required within the request block).\n"
                },
                "showLegend": {
                    "type": "boolean",
                    "description": "Whether or not to show the legend on this widget.\n"
                },
                "title": {
                    "type": "string",
                    "description": "The title of the widget.\n"
                },
                "titleAlign": {
                    "type": "string",
                    "description": "The alignment of the widget's title. Valid values are `center`, `left`, `right`.\n"
                },
                "titleSize": {
                    "type": "string",
                    "description": "The size of the widget's title (defaults to 16).\n"
                },
                "yaxis": {
                    "$ref": "#/types/datadog:index/DashboardWidgetHeatmapDefinitionYaxis:DashboardWidgetHeatmapDefinitionYaxis",
                    "description": "A nested block describing the Y-Axis Controls. The structure of this block is described below.\n"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetHeatmapDefinitionCustomLink:DashboardWidgetHeatmapDefinitionCustomLink": {
            "properties": {
                "isHidden": {
                    "type": "boolean",
                    "description": "The flag for toggling context menu link visibility.\n"
                },
                "label": {
                    "type": "string",
                    "description": "The label for the custom link URL.\n"
                },
                "link": {
                    "type": "string",
                    "description": "The URL of the custom link.\n"
                },
                "overrideLabel": {
                    "type": "string",
                    "description": "The label ID that refers to a context menu link item. When `override_label` is provided, the client request omits the label field.\n"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetHeatmapDefinitionEvent:DashboardWidgetHeatmapDefinitionEvent": {
            "properties": {
                "q": {
                    "type": "string",
                    "description": "The event query to use in the widget.\n"
                },
                "tagsExecution": {
                    "type": "string",
                    "description": "The execution method for multi-value filters.\n"
                }
            },
            "type": "object",
            "required": [
                "q"
            ]
        },
        "datadog:index/DashboardWidgetHeatmapDefinitionRequest:DashboardWidgetHeatmapDefinitionRequest": {
            "properties": {
                "apmQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetApmQuery:DashboardWidgetApmQuery",
                    "description": "The query to use for this widget.\n"
                },
                "formulas": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetHeatmapDefinitionRequestFormula:DashboardWidgetHeatmapDefinitionRequestFormula"
                    }
                },
                "logQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetLogQuery:DashboardWidgetLogQuery",
                    "description": "The query to use for this widget.\n"
                },
                "processQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetHeatmapDefinitionRequestProcessQuery:DashboardWidgetHeatmapDefinitionRequestProcessQuery",
                    "description": "The process query to use in the widget. The structure of this block is described below.\n"
                },
                "q": {
                    "type": "string",
                    "description": "The metric query to use for this widget.\n"
                },
                "queries": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetHeatmapDefinitionRequestQuery:DashboardWidgetHeatmapDefinitionRequestQuery"
                    }
                },
                "rumQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetRumQuery:DashboardWidgetRumQuery",
                    "description": "The query to use for this widget.\n"
                },
                "securityQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetSecurityQuery:DashboardWidgetSecurityQuery",
                    "description": "The query to use for this widget.\n"
                },
                "style": {
                    "$ref": "#/types/datadog:index/DashboardWidgetHeatmapDefinitionRequestStyle:DashboardWidgetHeatmapDefinitionRequestStyle",
                    "description": "The style of the widget graph. One nested block is allowed using the structure below.\n"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetHeatmapDefinitionRequestFormula:DashboardWidgetHeatmapDefinitionRequestFormula": {
            "properties": {
                "alias": {
                    "type": "string",
                    "description": "An expression alias.\n"
                },
                "cellDisplayMode": {
                    "type": "string",
                    "description": "A list of display modes for each table cell. Valid values are `number`, `bar`.\n"
                },
                "conditionalFormats": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetHeatmapDefinitionRequestFormulaConditionalFormat:DashboardWidgetHeatmapDefinitionRequestFormulaConditionalFormat"
                    },
                    "description": "Conditional formats allow you to set the color of your widget content or background depending on the rule applied to your data. Multiple `conditional_formats` blocks are allowed using the structure below.\n"
                },
                "formulaExpression": {
                    "type": "string",
                    "description": "A string expression built from queries, formulas, and functions.\n"
                },
                "limit": {
                    "$ref": "#/types/datadog:index/DashboardWidgetHeatmapDefinitionRequestFormulaLimit:DashboardWidgetHeatmapDefinitionRequestFormulaLimit",
                    "description": "The options for limiting results returned.\n"
                },
                "style": {
                    "$ref": "#/types/datadog:index/DashboardWidgetHeatmapDefinitionRequestFormulaStyle:DashboardWidgetHeatmapDefinitionRequestFormulaStyle",
                    "description": "Styling options for widget formulas.\n"
                }
            },
            "type": "object",
            "required": [
                "formulaExpression"
            ]
        },
        "datadog:index/DashboardWidgetHeatmapDefinitionRequestFormulaConditionalFormat:DashboardWidgetHeatmapDefinitionRequestFormulaConditionalFormat": {
            "properties": {
                "comparator": {
                    "type": "string",
                    "description": "The comparator to use. Valid values are `=`, `\u003e`, `\u003e=`, `\u003c`, `\u003c=`.\n"
                },
                "customBgColor": {
                    "type": "string",
                    "description": "The color palette to apply to the background, same values available as palette.\n"
                },
                "customFgColor": {
                    "type": "string",
                    "description": "The color palette to apply to the foreground, same values available as palette.\n"
                },
                "hideValue": {
                    "type": "boolean",
                    "description": "Setting this to True hides values.\n"
                },
                "imageUrl": {
                    "type": "string",
                    "description": "Displays an image as the background.\n"
                },
                "metric": {
                    "type": "string",
                    "description": "The metric from the request to correlate with this conditional format.\n"
                },
                "palette": {
                    "type": "string",
                    "description": "The color palette to apply. Valid values are `blue`, `custom_bg`, `custom_image`, `custom_text`, `gray_on_white`, `grey`, `green`, `orange`, `red`, `red_on_white`, `white_on_gray`, `white_on_green`, `green_on_white`, `white_on_red`, `white_on_yellow`, `yellow_on_white`, `black_on_light_yellow`, `black_on_light_green`, `black_on_light_red`.\n"
                },
                "timeframe": {
                    "type": "string",
                    "description": "Defines the displayed timeframe.\n"
                },
                "value": {
                    "type": "number",
                    "description": "A value for the comparator.\n"
                }
            },
            "type": "object",
            "required": [
                "comparator",
                "palette",
                "value"
            ]
        },
        "datadog:index/DashboardWidgetHeatmapDefinitionRequestFormulaLimit:DashboardWidgetHeatmapDefinitionRequestFormulaLimit": {
            "properties": {
                "count": {
                    "type": "integer",
                    "description": "The number of results to return.\n"
                },
                "order": {
                    "type": "string",
                    "description": "The direction of the sort. Valid values are `asc`, `desc`. Defaults to `\"desc\"`.\n"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetHeatmapDefinitionRequestFormulaStyle:DashboardWidgetHeatmapDefinitionRequestFormulaStyle": {
            "properties": {
                "palette": {
                    "type": "string",
                    "description": "The color palette used to display the formula. A guide to the available color palettes can be found at https://docs.datadoghq.com/dashboards/guide/widget_colors.\n"
                },
                "paletteIndex": {
                    "type": "integer",
                    "description": "Index specifying which color to use within the palette.\n"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetHeatmapDefinitionRequestProcessQuery:DashboardWidgetHeatmapDefinitionRequestProcessQuery": {
            "properties": {
                "filterBies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of processes.\n"
                },
                "limit": {
                    "type": "integer",
                    "description": "The max number of items in the filter list.\n"
                },
                "metric": {
                    "type": "string",
                    "description": "Your chosen metric.\n"
                },
                "searchBy": {
                    "type": "string",
                    "description": "Your chosen search term.\n"
                }
            },
            "type": "object",
            "required": [
                "metric"
            ]
        },
        "datadog:index/DashboardWidgetHeatmapDefinitionRequestQuery:DashboardWidgetHeatmapDefinitionRequestQuery": {
            "properties": {
                "apmDependencyStatsQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetHeatmapDefinitionRequestQueryApmDependencyStatsQuery:DashboardWidgetHeatmapDefinitionRequestQueryApmDependencyStatsQuery",
                    "description": "The APM Dependency Stats query using formulas and functions.\n"
                },
                "apmResourceStatsQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetHeatmapDefinitionRequestQueryApmResourceStatsQuery:DashboardWidgetHeatmapDefinitionRequestQueryApmResourceStatsQuery",
                    "description": "The APM Resource Stats query using formulas and functions.\n"
                },
                "cloudCostQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetHeatmapDefinitionRequestQueryCloudCostQuery:DashboardWidgetHeatmapDefinitionRequestQueryCloudCostQuery",
                    "description": "The Cloud Cost query using formulas and functions.\n"
                },
                "eventQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetHeatmapDefinitionRequestQueryEventQuery:DashboardWidgetHeatmapDefinitionRequestQueryEventQuery",
                    "description": "A timeseries formula and functions events query.\n"
                },
                "metricQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetHeatmapDefinitionRequestQueryMetricQuery:DashboardWidgetHeatmapDefinitionRequestQueryMetricQuery",
                    "description": "A timeseries formula and functions metrics query.\n"
                },
                "processQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetHeatmapDefinitionRequestQueryProcessQuery:DashboardWidgetHeatmapDefinitionRequestQueryProcessQuery",
                    "description": "The process query using formulas and functions.\n"
                },
                "sloQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetHeatmapDefinitionRequestQuerySloQuery:DashboardWidgetHeatmapDefinitionRequestQuerySloQuery",
                    "description": "The SLO query using formulas and functions.\n"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetHeatmapDefinitionRequestQueryApmDependencyStatsQuery:DashboardWidgetHeatmapDefinitionRequestQueryApmDependencyStatsQuery": {
            "properties": {
                "crossOrgUuids": {
                    "type": "string",
                    "description": "The source organization UUID for cross organization queries. Feature in Private Beta.\n"
                },
                "dataSource": {
                    "type": "string",
                    "description": "The data source for APM Dependency Stats queries. Valid values are `apm_dependency_stats`.\n"
                },
                "env": {
                    "type": "string",
                    "description": "APM environment.\n"
                },
                "isUpstream": {
                    "type": "boolean",
                    "description": "Determines whether stats for upstream or downstream dependencies should be queried.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of query for use in formulas.\n"
                },
                "operationName": {
                    "type": "string",
                    "description": "Name of operation on service.\n"
                },
                "primaryTagName": {
                    "type": "string",
                    "description": "The name of the second primary tag used within APM; required when `primary_tag_value` is specified. See https://docs.datadoghq.com/tracing/guide/setting*primary*tags*to*scope/#add-a-second-primary-tag-in-datadog.\n"
                },
                "primaryTagValue": {
                    "type": "string",
                    "description": "Filter APM data by the second primary tag. `primary_tag_name` must also be specified.\n"
                },
                "resourceName": {
                    "type": "string",
                    "description": "APM resource.\n"
                },
                "service": {
                    "type": "string",
                    "description": "APM service.\n"
                },
                "stat": {
                    "type": "string",
                    "description": "APM statistic. Valid values are `avg_duration`, `avg_root_duration`, `avg_spans_per_trace`, `error_rate`, `pct_exec_time`, `pct_of_traces`, `total_traces_count`.\n"
                }
            },
            "type": "object",
            "required": [
                "dataSource",
                "env",
                "name",
                "operationName",
                "resourceName",
                "service",
                "stat"
            ]
        },
        "datadog:index/DashboardWidgetHeatmapDefinitionRequestQueryApmResourceStatsQuery:DashboardWidgetHeatmapDefinitionRequestQueryApmResourceStatsQuery": {
            "properties": {
                "crossOrgUuids": {
                    "type": "string",
                    "description": "The source organization UUID for cross organization queries. Feature in Private Beta.\n"
                },
                "dataSource": {
                    "type": "string",
                    "description": "The data source for APM Resource Stats queries. Valid values are `apm_resource_stats`.\n"
                },
                "env": {
                    "type": "string",
                    "description": "APM environment.\n"
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Array of fields to group results by.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of query for use in formulas.\n"
                },
                "operationName": {
                    "type": "string",
                    "description": "Name of operation on service.\n"
                },
                "primaryTagName": {
                    "type": "string",
                    "description": "The name of the second primary tag used within APM; required when `primary_tag_value` is specified. See https://docs.datadoghq.com/tracing/guide/setting*primary*tags*to*scope/#add-a-second-primary-tag-in-datadog.\n"
                },
                "primaryTagValue": {
                    "type": "string",
                    "description": "Filter APM data by the second primary tag. `primary_tag_name` must also be specified.\n"
                },
                "resourceName": {
                    "type": "string",
                    "description": "APM resource.\n"
                },
                "service": {
                    "type": "string",
                    "description": "APM service.\n"
                },
                "stat": {
                    "type": "string",
                    "description": "APM statistic. Valid values are `errors`, `error_rate`, `hits`, `latency_avg`, `latency_distribution`, `latency_max`, `latency_p50`, `latency_p75`, `latency_p90`, `latency_p95`, `latency_p99`.\n"
                }
            },
            "type": "object",
            "required": [
                "dataSource",
                "env",
                "name",
                "service",
                "stat"
            ]
        },
        "datadog:index/DashboardWidgetHeatmapDefinitionRequestQueryCloudCostQuery:DashboardWidgetHeatmapDefinitionRequestQueryCloudCostQuery": {
            "properties": {
                "aggregator": {
                    "type": "string",
                    "description": "The aggregation methods available for cloud cost queries. Valid values are `avg`, `last`, `max`, `min`, `sum`, `percentile`.\n"
                },
                "crossOrgUuids": {
                    "type": "string",
                    "description": "The source organization UUID for cross organization queries. Feature in Private Beta.\n"
                },
                "dataSource": {
                    "type": "string",
                    "description": "The data source for cloud cost queries. Valid values are `cloud_cost`.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the query for use in formulas.\n"
                },
                "query": {
                    "type": "string",
                    "description": "The cloud cost query definition.\n"
                }
            },
            "type": "object",
            "required": [
                "dataSource",
                "name",
                "query"
            ]
        },
        "datadog:index/DashboardWidgetHeatmapDefinitionRequestQueryEventQuery:DashboardWidgetHeatmapDefinitionRequestQueryEventQuery": {
            "properties": {
                "computes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetHeatmapDefinitionRequestQueryEventQueryCompute:DashboardWidgetHeatmapDefinitionRequestQueryEventQueryCompute"
                    },
                    "description": "The compute options.\n"
                },
                "crossOrgUuids": {
                    "type": "string",
                    "description": "The source organization UUID for cross organization queries. Feature in Private Beta.\n"
                },
                "dataSource": {
                    "type": "string",
                    "description": "The data source for event platform-based queries. Valid values are `logs`, `spans`, `network`, `rum`, `security_signals`, `profiles`, `audit`, `events`, `ci_tests`, `ci_pipelines`, `incident_analytics`.\n"
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetHeatmapDefinitionRequestQueryEventQueryGroupBy:DashboardWidgetHeatmapDefinitionRequestQueryEventQueryGroupBy"
                    },
                    "description": "Group by options.\n"
                },
                "indexes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "An array of index names to query in the stream.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of query for use in formulas.\n"
                },
                "search": {
                    "$ref": "#/types/datadog:index/DashboardWidgetHeatmapDefinitionRequestQueryEventQuerySearch:DashboardWidgetHeatmapDefinitionRequestQueryEventQuerySearch",
                    "description": "The search options.\n"
                },
                "storage": {
                    "type": "string",
                    "description": "Storage location (private beta).\n"
                }
            },
            "type": "object",
            "required": [
                "computes",
                "dataSource",
                "name"
            ]
        },
        "datadog:index/DashboardWidgetHeatmapDefinitionRequestQueryEventQueryCompute:DashboardWidgetHeatmapDefinitionRequestQueryEventQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "The aggregation methods for event platform queries. Valid values are `count`, `cardinality`, `median`, `pc75`, `pc90`, `pc95`, `pc98`, `pc99`, `sum`, `min`, `max`, `avg`.\n"
                },
                "interval": {
                    "type": "integer",
                    "description": "A time interval in milliseconds.\n"
                },
                "metric": {
                    "type": "string",
                    "description": "The measurable attribute to compute.\n"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetHeatmapDefinitionRequestQueryEventQueryGroupBy:DashboardWidgetHeatmapDefinitionRequestQueryEventQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "description": "The event facet.\n"
                },
                "limit": {
                    "type": "integer",
                    "description": "The number of groups to return.\n"
                },
                "sort": {
                    "$ref": "#/types/datadog:index/DashboardWidgetHeatmapDefinitionRequestQueryEventQueryGroupBySort:DashboardWidgetHeatmapDefinitionRequestQueryEventQueryGroupBySort",
                    "description": "The options for sorting group by results.\n"
                }
            },
            "type": "object",
            "required": [
                "facet"
            ]
        },
        "datadog:index/DashboardWidgetHeatmapDefinitionRequestQueryEventQueryGroupBySort:DashboardWidgetHeatmapDefinitionRequestQueryEventQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "The aggregation methods for the event platform queries. Valid values are `count`, `cardinality`, `median`, `pc75`, `pc90`, `pc95`, `pc98`, `pc99`, `sum`, `min`, `max`, `avg`.\n"
                },
                "metric": {
                    "type": "string",
                    "description": "The metric used for sorting group by results.\n"
                },
                "order": {
                    "type": "string",
                    "description": "Direction of sort. Valid values are `asc`, `desc`.\n"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetHeatmapDefinitionRequestQueryEventQuerySearch:DashboardWidgetHeatmapDefinitionRequestQueryEventQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "description": "The events search string.\n"
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/DashboardWidgetHeatmapDefinitionRequestQueryMetricQuery:DashboardWidgetHeatmapDefinitionRequestQueryMetricQuery": {
            "properties": {
                "aggregator": {
                    "type": "string",
                    "description": "The aggregation methods available for metrics queries. Valid values are `avg`, `min`, `max`, `sum`, `last`, `area`, `l2norm`, `percentile`.\n"
                },
                "crossOrgUuids": {
                    "type": "string",
                    "description": "The source organization UUID for cross organization queries. Feature in Private Beta.\n"
                },
                "dataSource": {
                    "type": "string",
                    "description": "The data source for metrics queries. Defaults to `\"metrics\"`.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the query for use in formulas.\n"
                },
                "query": {
                    "type": "string",
                    "description": "The metrics query definition.\n"
                }
            },
            "type": "object",
            "required": [
                "name",
                "query"
            ]
        },
        "datadog:index/DashboardWidgetHeatmapDefinitionRequestQueryProcessQuery:DashboardWidgetHeatmapDefinitionRequestQueryProcessQuery": {
            "properties": {
                "aggregator": {
                    "type": "string",
                    "description": "The aggregation methods available for metrics queries. Valid values are `avg`, `min`, `max`, `sum`, `last`, `area`, `l2norm`, `percentile`.\n"
                },
                "crossOrgUuids": {
                    "type": "string",
                    "description": "The source organization UUID for cross organization queries. Feature in Private Beta.\n"
                },
                "dataSource": {
                    "type": "string",
                    "description": "The data source for process queries. Valid values are `process`, `container`.\n"
                },
                "isNormalizedCpu": {
                    "type": "boolean",
                    "description": "Whether to normalize the CPU percentages.\n"
                },
                "limit": {
                    "type": "integer",
                    "description": "The number of hits to return.\n"
                },
                "metric": {
                    "type": "string",
                    "description": "The process metric name.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of query for use in formulas.\n"
                },
                "sort": {
                    "type": "string",
                    "description": "The direction of the sort. Valid values are `asc`, `desc`. Defaults to `\"desc\"`.\n"
                },
                "tagFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "An array of tags to filter by.\n"
                },
                "textFilter": {
                    "type": "string",
                    "description": "The text to use as a filter.\n"
                }
            },
            "type": "object",
            "required": [
                "dataSource",
                "metric",
                "name"
            ]
        },
        "datadog:index/DashboardWidgetHeatmapDefinitionRequestQuerySloQuery:DashboardWidgetHeatmapDefinitionRequestQuerySloQuery": {
            "properties": {
                "additionalQueryFilters": {
                    "type": "string",
                    "description": "Additional filters applied to the SLO query.\n"
                },
                "crossOrgUuids": {
                    "type": "string",
                    "description": "The source organization UUID for cross organization queries. Feature in Private Beta.\n"
                },
                "dataSource": {
                    "type": "string",
                    "description": "The data source for SLO queries. Valid values are `slo`.\n"
                },
                "groupMode": {
                    "type": "string",
                    "description": "Group mode to query measures. Valid values are `overall`, `components`. Defaults to `\"overall\"`.\n"
                },
                "measure": {
                    "type": "string",
                    "description": "SLO measures queries. Valid values are `good_events`, `bad_events`, `slo_status`, `error_budget_remaining`, `burn_rate`, `error_budget_burndown`.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of query for use in formulas.\n"
                },
                "sloId": {
                    "type": "string",
                    "description": "ID of an SLO to query.\n"
                },
                "sloQueryType": {
                    "type": "string",
                    "description": "type of the SLO to query. Valid values are `metric`, `time_slice`. Defaults to `\"metric\"`.\n"
                }
            },
            "type": "object",
            "required": [
                "dataSource",
                "measure",
                "sloId"
            ]
        },
        "datadog:index/DashboardWidgetHeatmapDefinitionRequestStyle:DashboardWidgetHeatmapDefinitionRequestStyle": {
            "properties": {
                "palette": {
                    "type": "string",
                    "description": "A color palette to apply to the widget. The available options are available at: https://docs.datadoghq.com/dashboards/widgets/timeseries/#appearance.\n"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetHeatmapDefinitionYaxis:DashboardWidgetHeatmapDefinitionYaxis": {
            "properties": {
                "includeZero": {
                    "type": "boolean",
                    "description": "Always include zero or fit the axis to the data range.\n"
                },
                "label": {
                    "type": "string",
                    "description": "The label of the axis to display on the graph.\n"
                },
                "max": {
                    "type": "string",
                    "description": "Specify the maximum value to show on the Y-axis.\n"
                },
                "min": {
                    "type": "string",
                    "description": "Specify the minimum value to show on the Y-axis.\n"
                },
                "scale": {
                    "type": "string",
                    "description": "Specify the scale type, options: `linear`, `log`, `pow`, `sqrt`.\n"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetHostmapDefinition:DashboardWidgetHostmapDefinition": {
            "properties": {
                "customLinks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetHostmapDefinitionCustomLink:DashboardWidgetHostmapDefinitionCustomLink"
                    },
                    "description": "A nested block describing a custom link. Multiple `custom_link` blocks are allowed using the structure below.\n"
                },
                "groups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The list of tags to group nodes by.\n"
                },
                "noGroupHosts": {
                    "type": "boolean",
                    "description": "A Boolean indicating whether to show ungrouped nodes.\n"
                },
                "noMetricHosts": {
                    "type": "boolean",
                    "description": "A Boolean indicating whether to show nodes with no metrics.\n"
                },
                "nodeType": {
                    "type": "string",
                    "description": "The type of node used. Valid values are `host`, `container`.\n"
                },
                "request": {
                    "$ref": "#/types/datadog:index/DashboardWidgetHostmapDefinitionRequest:DashboardWidgetHostmapDefinitionRequest",
                    "description": "A nested block describing the request to use when displaying the widget. Multiple `request` blocks are allowed using the structure below.\n"
                },
                "scopes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The list of tags to filter nodes by.\n"
                },
                "style": {
                    "$ref": "#/types/datadog:index/DashboardWidgetHostmapDefinitionStyle:DashboardWidgetHostmapDefinitionStyle",
                    "description": "The style of the widget graph. One nested block is allowed using the structure below.\n"
                },
                "title": {
                    "type": "string",
                    "description": "The title of the widget.\n"
                },
                "titleAlign": {
                    "type": "string",
                    "description": "The alignment of the widget's title. Valid values are `center`, `left`, `right`.\n"
                },
                "titleSize": {
                    "type": "string",
                    "description": "The size of the widget's title (defaults to 16).\n"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetHostmapDefinitionCustomLink:DashboardWidgetHostmapDefinitionCustomLink": {
            "properties": {
                "isHidden": {
                    "type": "boolean",
                    "description": "The flag for toggling context menu link visibility.\n"
                },
                "label": {
                    "type": "string",
                    "description": "The label for the custom link URL.\n"
                },
                "link": {
                    "type": "string",
                    "description": "The URL of the custom link.\n"
                },
                "overrideLabel": {
                    "type": "string",
                    "description": "The label ID that refers to a context menu link item. When `override_label` is provided, the client request omits the label field.\n"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetHostmapDefinitionRequest:DashboardWidgetHostmapDefinitionRequest": {
            "properties": {
                "fills": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetHostmapDefinitionRequestFill:DashboardWidgetHostmapDefinitionRequestFill"
                    },
                    "description": "The query used to fill the map. Exactly one nested block is allowed using the structure below (exactly one of `q`, `apm_query`, `log_query`, `rum_query`, `security_query` or `process_query` is required within the request block).\n"
                },
                "sizes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetHostmapDefinitionRequestSize:DashboardWidgetHostmapDefinitionRequestSize"
                    },
                    "description": "The query used to size the map. Exactly one nested block is allowed using the structure below (exactly one of `q`, `apm_query`, `log_query`, `rum_query`, `security_query` or `process_query` is required within the request block).\n"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetHostmapDefinitionRequestFill:DashboardWidgetHostmapDefinitionRequestFill": {
            "properties": {
                "apmQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetApmQuery:DashboardWidgetApmQuery",
                    "description": "The query to use for this widget.\n"
                },
                "logQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetLogQuery:DashboardWidgetLogQuery",
                    "description": "The query to use for this widget.\n"
                },
                "processQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetHostmapDefinitionRequestFillProcessQuery:DashboardWidgetHostmapDefinitionRequestFillProcessQuery",
                    "description": "The process query to use in the widget. The structure of this block is described below.\n"
                },
                "q": {
                    "type": "string",
                    "description": "The metric query to use for this widget.\n"
                },
                "rumQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetRumQuery:DashboardWidgetRumQuery",
                    "description": "The query to use for this widget.\n"
                },
                "securityQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetSecurityQuery:DashboardWidgetSecurityQuery",
                    "description": "The query to use for this widget.\n"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetHostmapDefinitionRequestFillProcessQuery:DashboardWidgetHostmapDefinitionRequestFillProcessQuery": {
            "properties": {
                "filterBies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of processes.\n"
                },
                "limit": {
                    "type": "integer",
                    "description": "The max number of items in the filter list.\n"
                },
                "metric": {
                    "type": "string",
                    "description": "Your chosen metric.\n"
                },
                "searchBy": {
                    "type": "string",
                    "description": "Your chosen search term.\n"
                }
            },
            "type": "object",
            "required": [
                "metric"
            ]
        },
        "datadog:index/DashboardWidgetHostmapDefinitionRequestSize:DashboardWidgetHostmapDefinitionRequestSize": {
            "properties": {
                "apmQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetApmQuery:DashboardWidgetApmQuery",
                    "description": "The query to use for this widget.\n"
                },
                "logQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetLogQuery:DashboardWidgetLogQuery",
                    "description": "The query to use for this widget.\n"
                },
                "processQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetHostmapDefinitionRequestSizeProcessQuery:DashboardWidgetHostmapDefinitionRequestSizeProcessQuery",
                    "description": "The process query to use in the widget. The structure of this block is described below.\n"
                },
                "q": {
                    "type": "string",
                    "description": "The metric query to use for this widget.\n"
                },
                "rumQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetRumQuery:DashboardWidgetRumQuery",
                    "description": "The query to use for this widget.\n"
                },
                "securityQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetSecurityQuery:DashboardWidgetSecurityQuery",
                    "description": "The query to use for this widget.\n"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetHostmapDefinitionRequestSizeProcessQuery:DashboardWidgetHostmapDefinitionRequestSizeProcessQuery": {
            "properties": {
                "filterBies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of processes.\n"
                },
                "limit": {
                    "type": "integer",
                    "description": "The max number of items in the filter list.\n"
                },
                "metric": {
                    "type": "string",
                    "description": "Your chosen metric.\n"
                },
                "searchBy": {
                    "type": "string",
                    "description": "Your chosen search term.\n"
                }
            },
            "type": "object",
            "required": [
                "metric"
            ]
        },
        "datadog:index/DashboardWidgetHostmapDefinitionStyle:DashboardWidgetHostmapDefinitionStyle": {
            "properties": {
                "fillMax": {
                    "type": "string",
                    "description": "The max value to use to color the map.\n"
                },
                "fillMin": {
                    "type": "string",
                    "description": "The min value to use to color the map.\n"
                },
                "palette": {
                    "type": "string",
                    "description": "A color palette to apply to the widget. The available options are available at: https://docs.datadoghq.com/dashboards/widgets/timeseries/#appearance.\n"
                },
                "paletteFlip": {
                    "type": "boolean",
                    "description": "A Boolean indicating whether to flip the palette tones.\n"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetIframeDefinition:DashboardWidgetIframeDefinition": {
            "properties": {
                "url": {
                    "type": "string",
                    "description": "The URL to use as a data source for the widget.\n"
                }
            },
            "type": "object",
            "required": [
                "url"
            ]
        },
        "datadog:index/DashboardWidgetImageDefinition:DashboardWidgetImageDefinition": {
            "properties": {
                "hasBackground": {
                    "type": "boolean",
                    "description": "Whether to display a background or not. Defaults to `true`.\n"
                },
                "hasBorder": {
                    "type": "boolean",
                    "description": "Whether to display a border or not. Defaults to `true`.\n"
                },
                "horizontalAlign": {
                    "type": "string",
                    "description": "The horizontal alignment for the widget. Valid values are `center`, `left`, `right`.\n"
                },
                "margin": {
                    "type": "string",
                    "description": "The margins to use around the image. Note: `small` and `large` values are deprecated. Valid values are `sm`, `md`, `lg`, `small`, `large`.\n"
                },
                "sizing": {
                    "type": "string",
                    "description": "The preferred method to adapt the dimensions of the image. The values are based on the image `object-fit` CSS properties. Note: `zoom`, `fit` and `center` values are deprecated. Valid values are `fill`, `contain`, `cover`, `none`, `scale-down`, `zoom`, `fit`, `center`.\n"
                },
                "url": {
                    "type": "string",
                    "description": "The URL to use as a data source for the widget.\n"
                },
                "urlDarkTheme": {
                    "type": "string",
                    "description": "The URL in dark mode to use as a data source for the widget.\n"
                },
                "verticalAlign": {
                    "type": "string",
                    "description": "The vertical alignment for the widget. Valid values are `center`, `top`, `bottom`.\n"
                }
            },
            "type": "object",
            "required": [
                "url"
            ]
        },
        "datadog:index/DashboardWidgetListStreamDefinition:DashboardWidgetListStreamDefinition": {
            "properties": {
                "requests": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetListStreamDefinitionRequest:DashboardWidgetListStreamDefinitionRequest"
                    },
                    "description": "Nested block describing the requests to use when displaying the widget. Multiple `request` blocks are allowed with the structure below.\n"
                },
                "title": {
                    "type": "string",
                    "description": "The title of the widget.\n"
                },
                "titleAlign": {
                    "type": "string",
                    "description": "The alignment of the widget's title. Valid values are `center`, `left`, `right`.\n"
                },
                "titleSize": {
                    "type": "string",
                    "description": "The size of the widget's title. Default is 16.\n"
                }
            },
            "type": "object",
            "required": [
                "requests"
            ]
        },
        "datadog:index/DashboardWidgetListStreamDefinitionRequest:DashboardWidgetListStreamDefinitionRequest": {
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetListStreamDefinitionRequestColumn:DashboardWidgetListStreamDefinitionRequestColumn"
                    },
                    "description": "Widget columns.\n"
                },
                "query": {
                    "$ref": "#/types/datadog:index/DashboardWidgetListStreamDefinitionRequestQuery:DashboardWidgetListStreamDefinitionRequestQuery",
                    "description": "Updated list stream widget.\n"
                },
                "responseFormat": {
                    "type": "string",
                    "description": "Widget response format. Valid values are `event_list`.\n"
                }
            },
            "type": "object",
            "required": [
                "columns",
                "query",
                "responseFormat"
            ]
        },
        "datadog:index/DashboardWidgetListStreamDefinitionRequestColumn:DashboardWidgetListStreamDefinitionRequestColumn": {
            "properties": {
                "field": {
                    "type": "string",
                    "description": "Widget column field.\n"
                },
                "width": {
                    "type": "string",
                    "description": "Widget column width. Valid values are `auto`, `compact`, `full`.\n"
                }
            },
            "type": "object",
            "required": [
                "field",
                "width"
            ]
        },
        "datadog:index/DashboardWidgetListStreamDefinitionRequestQuery:DashboardWidgetListStreamDefinitionRequestQuery": {
            "properties": {
                "dataSource": {
                    "type": "string",
                    "description": "Source from which to query items to display in the stream. Valid values are `logs_stream`, `audit_stream`, `ci_pipeline_stream`, `ci_test_stream`, `rum_issue_stream`, `apm_issue_stream`, `trace_stream`, `logs_issue_stream`, `logs_pattern_stream`, `logs_transaction_stream`, `event_stream`, `rum_stream`.\n"
                },
                "eventSize": {
                    "type": "string",
                    "description": "Size of events displayed in widget. Required if `data_source` is `event_stream`. Valid values are `s`, `l`.\n"
                },
                "indexes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of indexes.\n"
                },
                "queryString": {
                    "type": "string",
                    "description": "Widget query.\n"
                },
                "sort": {
                    "$ref": "#/types/datadog:index/DashboardWidgetListStreamDefinitionRequestQuerySort:DashboardWidgetListStreamDefinitionRequestQuerySort",
                    "description": "The facet and order to sort the data, for example: `{\"column\": \"time\", \"order\": \"desc\"}`.\n"
                },
                "storage": {
                    "type": "string",
                    "description": "Storage location (private beta).\n"
                }
            },
            "type": "object",
            "required": [
                "dataSource"
            ]
        },
        "datadog:index/DashboardWidgetListStreamDefinitionRequestQuerySort:DashboardWidgetListStreamDefinitionRequestQuerySort": {
            "properties": {
                "column": {
                    "type": "string",
                    "description": "The facet path for the column.\n"
                },
                "order": {
                    "type": "string",
                    "description": "Widget sorting methods. Valid values are `asc`, `desc`.\n"
                }
            },
            "type": "object",
            "required": [
                "column",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetLogQuery:DashboardWidgetLogQuery": {
            "properties": {
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetLogQueryComputeQuery:DashboardWidgetLogQueryComputeQuery",
                    "description": "`compute_query` or `multi_compute` is required. The map keys are listed below.\n"
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetLogQueryGroupBy:DashboardWidgetLogQueryGroupBy"
                    },
                    "description": "Multiple `group_by` blocks are allowed using the structure below.\n"
                },
                "index": {
                    "type": "string",
                    "description": "The name of the index to query.\n"
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetLogQueryMultiCompute:DashboardWidgetLogQueryMultiCompute"
                    },
                    "description": "`compute_query` or `multi_compute` is required. Multiple `multi_compute` blocks are allowed using the structure below.\n"
                },
                "searchQuery": {
                    "type": "string",
                    "description": "The search query to use.\n"
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetLogQueryComputeQuery:DashboardWidgetLogQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "The aggregation method.\n"
                },
                "facet": {
                    "type": "string",
                    "description": "The facet name.\n"
                },
                "interval": {
                    "type": "integer",
                    "description": "Define the time interval in seconds.\n"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetLogQueryGroupBy:DashboardWidgetLogQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "description": "The facet name.\n"
                },
                "limit": {
                    "type": "integer",
                    "description": "The maximum number of items in the group.\n"
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetLogQueryGroupBySortQuery:DashboardWidgetLogQueryGroupBySortQuery",
                    "description": "A list of exactly one element describing the sort query to use.\n"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetLogQueryGroupBySortQuery:DashboardWidgetLogQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "The aggregation method.\n"
                },
                "facet": {
                    "type": "string",
                    "description": "The facet name.\n"
                },
                "order": {
                    "type": "string",
                    "description": "Widget sorting methods. Valid values are `asc`, `desc`.\n"
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetLogQueryMultiCompute:DashboardWidgetLogQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "The aggregation method.\n"
                },
                "facet": {
                    "type": "string",
                    "description": "The facet name.\n"
                },
                "interval": {
                    "type": "integer",
                    "description": "Define the time interval in seconds.\n"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetLogStreamDefinition:DashboardWidgetLogStreamDefinition": {
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Stringified list of columns to use, for example: `[\"column1\",\"column2\",\"column3\"]`.\n"
                },
                "indexes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "An array of index names to query in the stream.\n"
                },
                "liveSpan": {
                    "type": "string",
                    "description": "The timeframe to use when displaying the widget. Valid values are `1m`, `5m`, `10m`, `15m`, `30m`, `1h`, `4h`, `1d`, `2d`, `1w`, `1mo`, `3mo`, `6mo`, `week_to_date`, `month_to_date`, `1y`, `alert`.\n"
                },
                "messageDisplay": {
                    "type": "string",
                    "description": "The number of log lines to display. Valid values are `inline`, `expanded-md`, `expanded-lg`.\n"
                },
                "query": {
                    "type": "string",
                    "description": "The query to use in the widget.\n"
                },
                "showDateColumn": {
                    "type": "boolean",
                    "description": "If the date column should be displayed.\n"
                },
                "showMessageColumn": {
                    "type": "boolean",
                    "description": "If the message column should be displayed.\n"
                },
                "sort": {
                    "$ref": "#/types/datadog:index/DashboardWidgetLogStreamDefinitionSort:DashboardWidgetLogStreamDefinitionSort",
                    "description": "The facet and order to sort the data, for example: `{\"column\": \"time\", \"order\": \"desc\"}`.\n"
                },
                "title": {
                    "type": "string",
                    "description": "The title of the widget.\n"
                },
                "titleAlign": {
                    "type": "string",
                    "description": "The alignment of the widget's title. Valid values are `center`, `left`, `right`.\n"
                },
                "titleSize": {
                    "type": "string",
                    "description": "The size of the widget's title (defaults to 16).\n"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetLogStreamDefinitionSort:DashboardWidgetLogStreamDefinitionSort": {
            "properties": {
                "column": {
                    "type": "string",
                    "description": "The facet path for the column.\n"
                },
                "order": {
                    "type": "string",
                    "description": "Widget sorting methods. Valid values are `asc`, `desc`.\n"
                }
            },
            "type": "object",
            "required": [
                "column",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetManageStatusDefinition:DashboardWidgetManageStatusDefinition": {
            "properties": {
                "colorPreference": {
                    "type": "string",
                    "description": "Whether to colorize text or background. Valid values are `background`, `text`.\n"
                },
                "displayFormat": {
                    "type": "string",
                    "description": "The display setting to use. Valid values are `counts`, `countsAndList`, `list`.\n"
                },
                "hideZeroCounts": {
                    "type": "boolean",
                    "description": "A Boolean indicating whether to hide empty categories.\n"
                },
                "query": {
                    "type": "string",
                    "description": "The query to use in the widget.\n"
                },
                "showLastTriggered": {
                    "type": "boolean",
                    "description": "A Boolean indicating whether to show when monitors/groups last triggered.\n"
                },
                "showPriority": {
                    "type": "boolean",
                    "description": "Whether to show the priorities column.\n"
                },
                "sort": {
                    "type": "string",
                    "description": "The method to sort the monitors. Valid values are `name`, `group`, `status`, `tags`, `triggered`, `group,asc`, `group,desc`, `name,asc`, `name,desc`, `status,asc`, `status,desc`, `tags,asc`, `tags,desc`, `triggered,asc`, `triggered,desc`, `priority,asc`, `priority,desc`.\n"
                },
                "summaryType": {
                    "type": "string",
                    "description": "The summary type to use. Valid values are `monitors`, `groups`, `combined`.\n"
                },
                "title": {
                    "type": "string",
                    "description": "The title of the widget.\n"
                },
                "titleAlign": {
                    "type": "string",
                    "description": "The alignment of the widget's title. Valid values are `center`, `left`, `right`.\n"
                },
                "titleSize": {
                    "type": "string",
                    "description": "The size of the widget's title (defaults to 16).\n"
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/DashboardWidgetNoteDefinition:DashboardWidgetNoteDefinition": {
            "properties": {
                "backgroundColor": {
                    "type": "string",
                    "description": "The background color of the note.\n"
                },
                "content": {
                    "type": "string",
                    "description": "The content of the note.\n"
                },
                "fontSize": {
                    "type": "string",
                    "description": "The size of the text.\n"
                },
                "hasPadding": {
                    "type": "boolean",
                    "description": "Whether to add padding or not. Defaults to `true`.\n"
                },
                "showTick": {
                    "type": "boolean",
                    "description": "Whether to show a tick or not.\n"
                },
                "textAlign": {
                    "type": "string",
                    "description": "The alignment of the widget's text. Valid values are `center`, `left`, `right`.\n"
                },
                "tickEdge": {
                    "type": "string",
                    "description": "When `tick = true`, a string indicating on which side of the widget the tick should be displayed. Valid values are `bottom`, `left`, `right`, `top`.\n"
                },
                "tickPos": {
                    "type": "string",
                    "description": "When `tick = true`, a string with a percent sign indicating the position of the tick, for example: `tick_pos = \"50%\"` is centered alignment.\n"
                },
                "verticalAlign": {
                    "type": "string",
                    "description": "The vertical alignment for the widget. Valid values are `center`, `top`, `bottom`.\n"
                }
            },
            "type": "object",
            "required": [
                "content"
            ]
        },
        "datadog:index/DashboardWidgetPowerpackDefinition:DashboardWidgetPowerpackDefinition": {
            "properties": {
                "backgroundColor": {
                    "type": "string",
                    "description": "The background color of the powerpack title.\n"
                },
                "bannerImg": {
                    "type": "string",
                    "description": "URL of image to display as a banner for the powerpack.\n"
                },
                "powerpackId": {
                    "type": "string",
                    "description": "UUID of the associated powerpack.\n"
                },
                "showTitle": {
                    "type": "boolean",
                    "description": "Whether to show the title of the powerpack.\n"
                },
                "templateVariables": {
                    "$ref": "#/types/datadog:index/DashboardWidgetPowerpackDefinitionTemplateVariables:DashboardWidgetPowerpackDefinitionTemplateVariables",
                    "description": "The list of template variables for this powerpack.\n"
                },
                "title": {
                    "type": "string",
                    "description": "Title of the powerpack.\n"
                }
            },
            "type": "object",
            "required": [
                "powerpackId"
            ]
        },
        "datadog:index/DashboardWidgetPowerpackDefinitionTemplateVariables:DashboardWidgetPowerpackDefinitionTemplateVariables": {
            "properties": {
                "controlledByPowerpacks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetPowerpackDefinitionTemplateVariablesControlledByPowerpack:DashboardWidgetPowerpackDefinitionTemplateVariablesControlledByPowerpack"
                    },
                    "description": "Template variables controlled at the powerpack level.\n"
                },
                "controlledExternallies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetPowerpackDefinitionTemplateVariablesControlledExternally:DashboardWidgetPowerpackDefinitionTemplateVariablesControlledExternally"
                    },
                    "description": "Template variables controlled by the external resource, such as the dashboard this powerpack is on.\n"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetPowerpackDefinitionTemplateVariablesControlledByPowerpack:DashboardWidgetPowerpackDefinitionTemplateVariablesControlledByPowerpack": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "The name of the variable.\n"
                },
                "prefix": {
                    "type": "string",
                    "description": "The tag prefix associated with the variable. Only tags with this prefix appear in the variable dropdown.\n"
                },
                "values": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "One or many template variable values within the saved view, which will be unioned together using `OR` if more than one is specified.\n"
                }
            },
            "type": "object",
            "required": [
                "name",
                "values"
            ]
        },
        "datadog:index/DashboardWidgetPowerpackDefinitionTemplateVariablesControlledExternally:DashboardWidgetPowerpackDefinitionTemplateVariablesControlledExternally": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "The name of the variable.\n"
                },
                "prefix": {
                    "type": "string",
                    "description": "The tag prefix associated with the variable. Only tags with this prefix appear in the variable dropdown.\n"
                },
                "values": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "One or many template variable values within the saved view, which will be unioned together using `OR` if more than one is specified.\n"
                }
            },
            "type": "object",
            "required": [
                "name",
                "values"
            ]
        },
        "datadog:index/DashboardWidgetQueryTableDefinition:DashboardWidgetQueryTableDefinition": {
            "properties": {
                "customLinks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetQueryTableDefinitionCustomLink:DashboardWidgetQueryTableDefinitionCustomLink"
                    },
                    "description": "A nested block describing a custom link. Multiple `custom_link` blocks are allowed using the structure below.\n"
                },
                "hasSearchBar": {
                    "type": "string",
                    "description": "Controls the display of the search bar. Valid values are `always`, `never`, `auto`.\n"
                },
                "liveSpan": {
                    "type": "string",
                    "description": "The timeframe to use when displaying the widget. Valid values are `1m`, `5m`, `10m`, `15m`, `30m`, `1h`, `4h`, `1d`, `2d`, `1w`, `1mo`, `3mo`, `6mo`, `week_to_date`, `month_to_date`, `1y`, `alert`.\n"
                },
                "requests": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetQueryTableDefinitionRequest:DashboardWidgetQueryTableDefinitionRequest"
                    },
                    "description": "A nested block describing the request to use when displaying the widget. Multiple `request` blocks are allowed using the structure below (exactly one of `q`, `apm_query`, `log_query`, `rum_query`, `security_query`, `apm_stats_query` or `process_query` is required within the `request` block).\n"
                },
                "title": {
                    "type": "string",
                    "description": "The title of the widget.\n"
                },
                "titleAlign": {
                    "type": "string",
                    "description": "The alignment of the widget's title. Valid values are `center`, `left`, `right`.\n"
                },
                "titleSize": {
                    "type": "string",
                    "description": "The size of the widget's title (defaults to 16).\n"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetQueryTableDefinitionCustomLink:DashboardWidgetQueryTableDefinitionCustomLink": {
            "properties": {
                "isHidden": {
                    "type": "boolean",
                    "description": "The flag for toggling context menu link visibility.\n"
                },
                "label": {
                    "type": "string",
                    "description": "The label for the custom link URL.\n"
                },
                "link": {
                    "type": "string",
                    "description": "The URL of the custom link.\n"
                },
                "overrideLabel": {
                    "type": "string",
                    "description": "The label ID that refers to a context menu link item. When `override_label` is provided, the client request omits the label field.\n"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetQueryTableDefinitionRequest:DashboardWidgetQueryTableDefinitionRequest": {
            "properties": {
                "aggregator": {
                    "type": "string",
                    "description": "The aggregator to use for time aggregation. Valid values are `avg`, `last`, `max`, `min`, `sum`, `percentile`.\n"
                },
                "alias": {
                    "type": "string",
                    "description": "The alias for the column name (defaults to metric name).\n"
                },
                "apmQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetApmQuery:DashboardWidgetApmQuery",
                    "description": "The query to use for this widget.\n"
                },
                "apmStatsQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetQueryTableDefinitionRequestApmStatsQuery:DashboardWidgetQueryTableDefinitionRequestApmStatsQuery"
                },
                "cellDisplayModes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of display modes for each table cell. List items one of `number`, `bar`. Valid values are `number`, `bar`.\n"
                },
                "conditionalFormats": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetQueryTableDefinitionRequestConditionalFormat:DashboardWidgetQueryTableDefinitionRequestConditionalFormat"
                    },
                    "description": "Conditional formats allow you to set the color of your widget content or background, depending on the rule applied to your data. Multiple `conditional_formats` blocks are allowed using the structure below.\n"
                },
                "formulas": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetQueryTableDefinitionRequestFormula:DashboardWidgetQueryTableDefinitionRequestFormula"
                    }
                },
                "limit": {
                    "type": "integer",
                    "description": "The number of lines to show in the table.\n"
                },
                "logQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetLogQuery:DashboardWidgetLogQuery",
                    "description": "The query to use for this widget.\n"
                },
                "order": {
                    "type": "string",
                    "description": "The sort order for the rows. Valid values are `asc`, `desc`.\n"
                },
                "processQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetQueryTableDefinitionRequestProcessQuery:DashboardWidgetQueryTableDefinitionRequestProcessQuery",
                    "description": "The process query to use in the widget. The structure of this block is described below.\n"
                },
                "q": {
                    "type": "string",
                    "description": "The metric query to use for this widget.\n"
                },
                "queries": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetQueryTableDefinitionRequestQuery:DashboardWidgetQueryTableDefinitionRequestQuery"
                    }
                },
                "rumQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetRumQuery:DashboardWidgetRumQuery",
                    "description": "The query to use for this widget.\n"
                },
                "securityQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetSecurityQuery:DashboardWidgetSecurityQuery",
                    "description": "The query to use for this widget.\n"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetQueryTableDefinitionRequestApmStatsQuery:DashboardWidgetQueryTableDefinitionRequestApmStatsQuery": {
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetQueryTableDefinitionRequestApmStatsQueryColumn:DashboardWidgetQueryTableDefinitionRequestApmStatsQueryColumn"
                    },
                    "description": "Column properties used by the front end for display.\n"
                },
                "env": {
                    "type": "string",
                    "description": "The environment name.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The operation name associated with the service.\n"
                },
                "primaryTag": {
                    "type": "string",
                    "description": "The organization's host group name and value.\n"
                },
                "resource": {
                    "type": "string",
                    "description": "The resource name.\n"
                },
                "rowType": {
                    "type": "string",
                    "description": "The level of detail for the request. Valid values are `service`, `resource`, `span`.\n"
                },
                "service": {
                    "type": "string",
                    "description": "The service name.\n"
                }
            },
            "type": "object",
            "required": [
                "env",
                "name",
                "primaryTag",
                "rowType",
                "service"
            ]
        },
        "datadog:index/DashboardWidgetQueryTableDefinitionRequestApmStatsQueryColumn:DashboardWidgetQueryTableDefinitionRequestApmStatsQueryColumn": {
            "properties": {
                "alias": {
                    "type": "string",
                    "description": "A user-assigned alias for the column.\n"
                },
                "cellDisplayMode": {
                    "type": "string",
                    "description": "A list of display modes for each table cell. Valid values are `number`, `bar`.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The column name.\n"
                },
                "order": {
                    "type": "string",
                    "description": "Widget sorting methods. Valid values are `asc`, `desc`.\n"
                }
            },
            "type": "object",
            "required": [
                "name"
            ]
        },
        "datadog:index/DashboardWidgetQueryTableDefinitionRequestConditionalFormat:DashboardWidgetQueryTableDefinitionRequestConditionalFormat": {
            "properties": {
                "comparator": {
                    "type": "string",
                    "description": "The comparator to use. Valid values are `=`, `\u003e`, `\u003e=`, `\u003c`, `\u003c=`.\n"
                },
                "customBgColor": {
                    "type": "string",
                    "description": "The color palette to apply to the background, same values available as palette.\n"
                },
                "customFgColor": {
                    "type": "string",
                    "description": "The color palette to apply to the foreground, same values available as palette.\n"
                },
                "hideValue": {
                    "type": "boolean",
                    "description": "Setting this to True hides values.\n"
                },
                "imageUrl": {
                    "type": "string",
                    "description": "Displays an image as the background.\n"
                },
                "metric": {
                    "type": "string",
                    "description": "The metric from the request to correlate with this conditional format.\n"
                },
                "palette": {
                    "type": "string",
                    "description": "The color palette to apply. Valid values are `blue`, `custom_bg`, `custom_image`, `custom_text`, `gray_on_white`, `grey`, `green`, `orange`, `red`, `red_on_white`, `white_on_gray`, `white_on_green`, `green_on_white`, `white_on_red`, `white_on_yellow`, `yellow_on_white`, `black_on_light_yellow`, `black_on_light_green`, `black_on_light_red`.\n"
                },
                "timeframe": {
                    "type": "string",
                    "description": "Defines the displayed timeframe.\n"
                },
                "value": {
                    "type": "number",
                    "description": "A value for the comparator.\n"
                }
            },
            "type": "object",
            "required": [
                "comparator",
                "palette",
                "value"
            ]
        },
        "datadog:index/DashboardWidgetQueryTableDefinitionRequestFormula:DashboardWidgetQueryTableDefinitionRequestFormula": {
            "properties": {
                "alias": {
                    "type": "string",
                    "description": "An expression alias.\n"
                },
                "cellDisplayMode": {
                    "type": "string",
                    "description": "A list of display modes for each table cell. Valid values are `number`, `bar`.\n"
                },
                "conditionalFormats": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetQueryTableDefinitionRequestFormulaConditionalFormat:DashboardWidgetQueryTableDefinitionRequestFormulaConditionalFormat"
                    },
                    "description": "Conditional formats allow you to set the color of your widget content or background depending on the rule applied to your data. Multiple `conditional_formats` blocks are allowed using the structure below.\n"
                },
                "formulaExpression": {
                    "type": "string",
                    "description": "A string expression built from queries, formulas, and functions.\n"
                },
                "limit": {
                    "$ref": "#/types/datadog:index/DashboardWidgetQueryTableDefinitionRequestFormulaLimit:DashboardWidgetQueryTableDefinitionRequestFormulaLimit",
                    "description": "The options for limiting results returned.\n"
                },
                "style": {
                    "$ref": "#/types/datadog:index/DashboardWidgetQueryTableDefinitionRequestFormulaStyle:DashboardWidgetQueryTableDefinitionRequestFormulaStyle",
                    "description": "Styling options for widget formulas.\n"
                }
            },
            "type": "object",
            "required": [
                "formulaExpression"
            ]
        },
        "datadog:index/DashboardWidgetQueryTableDefinitionRequestFormulaConditionalFormat:DashboardWidgetQueryTableDefinitionRequestFormulaConditionalFormat": {
            "properties": {
                "comparator": {
                    "type": "string",
                    "description": "The comparator to use. Valid values are `=`, `\u003e`, `\u003e=`, `\u003c`, `\u003c=`.\n"
                },
                "customBgColor": {
                    "type": "string",
                    "description": "The color palette to apply to the background, same values available as palette.\n"
                },
                "customFgColor": {
                    "type": "string",
                    "description": "The color palette to apply to the foreground, same values available as palette.\n"
                },
                "hideValue": {
                    "type": "boolean",
                    "description": "Setting this to True hides values.\n"
                },
                "imageUrl": {
                    "type": "string",
                    "description": "Displays an image as the background.\n"
                },
                "metric": {
                    "type": "string",
                    "description": "The metric from the request to correlate with this conditional format.\n"
                },
                "palette": {
                    "type": "string",
                    "description": "The color palette to apply. Valid values are `blue`, `custom_bg`, `custom_image`, `custom_text`, `gray_on_white`, `grey`, `green`, `orange`, `red`, `red_on_white`, `white_on_gray`, `white_on_green`, `green_on_white`, `white_on_red`, `white_on_yellow`, `yellow_on_white`, `black_on_light_yellow`, `black_on_light_green`, `black_on_light_red`.\n"
                },
                "timeframe": {
                    "type": "string",
                    "description": "Defines the displayed timeframe.\n"
                },
                "value": {
                    "type": "number",
                    "description": "A value for the comparator.\n"
                }
            },
            "type": "object",
            "required": [
                "comparator",
                "palette",
                "value"
            ]
        },
        "datadog:index/DashboardWidgetQueryTableDefinitionRequestFormulaLimit:DashboardWidgetQueryTableDefinitionRequestFormulaLimit": {
            "properties": {
                "count": {
                    "type": "integer",
                    "description": "The number of results to return.\n"
                },
                "order": {
                    "type": "string",
                    "description": "The direction of the sort. Valid values are `asc`, `desc`. Defaults to `\"desc\"`.\n"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetQueryTableDefinitionRequestFormulaStyle:DashboardWidgetQueryTableDefinitionRequestFormulaStyle": {
            "properties": {
                "palette": {
                    "type": "string",
                    "description": "The color palette used to display the formula. A guide to the available color palettes can be found at https://docs.datadoghq.com/dashboards/guide/widget_colors.\n"
                },
                "paletteIndex": {
                    "type": "integer",
                    "description": "Index specifying which color to use within the palette.\n"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetQueryTableDefinitionRequestProcessQuery:DashboardWidgetQueryTableDefinitionRequestProcessQuery": {
            "properties": {
                "filterBies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of processes.\n"
                },
                "limit": {
                    "type": "integer",
                    "description": "The max number of items in the filter list.\n"
                },
                "metric": {
                    "type": "string",
                    "description": "Your chosen metric.\n"
                },
                "searchBy": {
                    "type": "string",
                    "description": "Your chosen search term.\n"
                }
            },
            "type": "object",
            "required": [
                "metric"
            ]
        },
        "datadog:index/DashboardWidgetQueryTableDefinitionRequestQuery:DashboardWidgetQueryTableDefinitionRequestQuery": {
            "properties": {
                "apmDependencyStatsQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetQueryTableDefinitionRequestQueryApmDependencyStatsQuery:DashboardWidgetQueryTableDefinitionRequestQueryApmDependencyStatsQuery",
                    "description": "The APM Dependency Stats query using formulas and functions.\n"
                },
                "apmResourceStatsQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetQueryTableDefinitionRequestQueryApmResourceStatsQuery:DashboardWidgetQueryTableDefinitionRequestQueryApmResourceStatsQuery",
                    "description": "The APM Resource Stats query using formulas and functions.\n"
                },
                "cloudCostQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetQueryTableDefinitionRequestQueryCloudCostQuery:DashboardWidgetQueryTableDefinitionRequestQueryCloudCostQuery",
                    "description": "The Cloud Cost query using formulas and functions.\n"
                },
                "eventQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetQueryTableDefinitionRequestQueryEventQuery:DashboardWidgetQueryTableDefinitionRequestQueryEventQuery",
                    "description": "A timeseries formula and functions events query.\n"
                },
                "metricQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetQueryTableDefinitionRequestQueryMetricQuery:DashboardWidgetQueryTableDefinitionRequestQueryMetricQuery",
                    "description": "A timeseries formula and functions metrics query.\n"
                },
                "processQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetQueryTableDefinitionRequestQueryProcessQuery:DashboardWidgetQueryTableDefinitionRequestQueryProcessQuery",
                    "description": "The process query using formulas and functions.\n"
                },
                "sloQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetQueryTableDefinitionRequestQuerySloQuery:DashboardWidgetQueryTableDefinitionRequestQuerySloQuery",
                    "description": "The SLO query using formulas and functions.\n"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetQueryTableDefinitionRequestQueryApmDependencyStatsQuery:DashboardWidgetQueryTableDefinitionRequestQueryApmDependencyStatsQuery": {
            "properties": {
                "crossOrgUuids": {
                    "type": "string",
                    "description": "The source organization UUID for cross organization queries. Feature in Private Beta.\n"
                },
                "dataSource": {
                    "type": "string",
                    "description": "The data source for APM Dependency Stats queries. Valid values are `apm_dependency_stats`.\n"
                },
                "env": {
                    "type": "string",
                    "description": "APM environment.\n"
                },
                "isUpstream": {
                    "type": "boolean",
                    "description": "Determines whether stats for upstream or downstream dependencies should be queried.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of query for use in formulas.\n"
                },
                "operationName": {
                    "type": "string",
                    "description": "Name of operation on service.\n"
                },
                "primaryTagName": {
                    "type": "string",
                    "description": "The name of the second primary tag used within APM; required when `primary_tag_value` is specified. See https://docs.datadoghq.com/tracing/guide/setting*primary*tags*to*scope/#add-a-second-primary-tag-in-datadog.\n"
                },
                "primaryTagValue": {
                    "type": "string",
                    "description": "Filter APM data by the second primary tag. `primary_tag_name` must also be specified.\n"
                },
                "resourceName": {
                    "type": "string",
                    "description": "APM resource.\n"
                },
                "service": {
                    "type": "string",
                    "description": "APM service.\n"
                },
                "stat": {
                    "type": "string",
                    "description": "APM statistic. Valid values are `avg_duration`, `avg_root_duration`, `avg_spans_per_trace`, `error_rate`, `pct_exec_time`, `pct_of_traces`, `total_traces_count`.\n"
                }
            },
            "type": "object",
            "required": [
                "dataSource",
                "env",
                "name",
                "operationName",
                "resourceName",
                "service",
                "stat"
            ]
        },
        "datadog:index/DashboardWidgetQueryTableDefinitionRequestQueryApmResourceStatsQuery:DashboardWidgetQueryTableDefinitionRequestQueryApmResourceStatsQuery": {
            "properties": {
                "crossOrgUuids": {
                    "type": "string",
                    "description": "The source organization UUID for cross organization queries. Feature in Private Beta.\n"
                },
                "dataSource": {
                    "type": "string",
                    "description": "The data source for APM Resource Stats queries. Valid values are `apm_resource_stats`.\n"
                },
                "env": {
                    "type": "string",
                    "description": "APM environment.\n"
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Array of fields to group results by.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of query for use in formulas.\n"
                },
                "operationName": {
                    "type": "string",
                    "description": "Name of operation on service.\n"
                },
                "primaryTagName": {
                    "type": "string",
                    "description": "The name of the second primary tag used within APM; required when `primary_tag_value` is specified. See https://docs.datadoghq.com/tracing/guide/setting*primary*tags*to*scope/#add-a-second-primary-tag-in-datadog.\n"
                },
                "primaryTagValue": {
                    "type": "string",
                    "description": "Filter APM data by the second primary tag. `primary_tag_name` must also be specified.\n"
                },
                "resourceName": {
                    "type": "string",
                    "description": "APM resource.\n"
                },
                "service": {
                    "type": "string",
                    "description": "APM service.\n"
                },
                "stat": {
                    "type": "string",
                    "description": "APM statistic. Valid values are `errors`, `error_rate`, `hits`, `latency_avg`, `latency_distribution`, `latency_max`, `latency_p50`, `latency_p75`, `latency_p90`, `latency_p95`, `latency_p99`.\n"
                }
            },
            "type": "object",
            "required": [
                "dataSource",
                "env",
                "name",
                "service",
                "stat"
            ]
        },
        "datadog:index/DashboardWidgetQueryTableDefinitionRequestQueryCloudCostQuery:DashboardWidgetQueryTableDefinitionRequestQueryCloudCostQuery": {
            "properties": {
                "aggregator": {
                    "type": "string",
                    "description": "The aggregation methods available for cloud cost queries. Valid values are `avg`, `last`, `max`, `min`, `sum`, `percentile`.\n"
                },
                "crossOrgUuids": {
                    "type": "string",
                    "description": "The source organization UUID for cross organization queries. Feature in Private Beta.\n"
                },
                "dataSource": {
                    "type": "string",
                    "description": "The data source for cloud cost queries. Valid values are `cloud_cost`.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the query for use in formulas.\n"
                },
                "query": {
                    "type": "string",
                    "description": "The cloud cost query definition.\n"
                }
            },
            "type": "object",
            "required": [
                "dataSource",
                "name",
                "query"
            ]
        },
        "datadog:index/DashboardWidgetQueryTableDefinitionRequestQueryEventQuery:DashboardWidgetQueryTableDefinitionRequestQueryEventQuery": {
            "properties": {
                "computes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetQueryTableDefinitionRequestQueryEventQueryCompute:DashboardWidgetQueryTableDefinitionRequestQueryEventQueryCompute"
                    },
                    "description": "The compute options.\n"
                },
                "crossOrgUuids": {
                    "type": "string",
                    "description": "The source organization UUID for cross organization queries. Feature in Private Beta.\n"
                },
                "dataSource": {
                    "type": "string",
                    "description": "The data source for event platform-based queries. Valid values are `logs`, `spans`, `network`, `rum`, `security_signals`, `profiles`, `audit`, `events`, `ci_tests`, `ci_pipelines`, `incident_analytics`.\n"
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetQueryTableDefinitionRequestQueryEventQueryGroupBy:DashboardWidgetQueryTableDefinitionRequestQueryEventQueryGroupBy"
                    },
                    "description": "Group by options.\n"
                },
                "indexes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "An array of index names to query in the stream.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of query for use in formulas.\n"
                },
                "search": {
                    "$ref": "#/types/datadog:index/DashboardWidgetQueryTableDefinitionRequestQueryEventQuerySearch:DashboardWidgetQueryTableDefinitionRequestQueryEventQuerySearch",
                    "description": "The search options.\n"
                },
                "storage": {
                    "type": "string",
                    "description": "Storage location (private beta).\n"
                }
            },
            "type": "object",
            "required": [
                "computes",
                "dataSource",
                "name"
            ]
        },
        "datadog:index/DashboardWidgetQueryTableDefinitionRequestQueryEventQueryCompute:DashboardWidgetQueryTableDefinitionRequestQueryEventQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "The aggregation methods for event platform queries. Valid values are `count`, `cardinality`, `median`, `pc75`, `pc90`, `pc95`, `pc98`, `pc99`, `sum`, `min`, `max`, `avg`.\n"
                },
                "interval": {
                    "type": "integer",
                    "description": "A time interval in milliseconds.\n"
                },
                "metric": {
                    "type": "string",
                    "description": "The measurable attribute to compute.\n"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetQueryTableDefinitionRequestQueryEventQueryGroupBy:DashboardWidgetQueryTableDefinitionRequestQueryEventQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "description": "The event facet.\n"
                },
                "limit": {
                    "type": "integer",
                    "description": "The number of groups to return.\n"
                },
                "sort": {
                    "$ref": "#/types/datadog:index/DashboardWidgetQueryTableDefinitionRequestQueryEventQueryGroupBySort:DashboardWidgetQueryTableDefinitionRequestQueryEventQueryGroupBySort",
                    "description": "The options for sorting group by results.\n"
                }
            },
            "type": "object",
            "required": [
                "facet"
            ]
        },
        "datadog:index/DashboardWidgetQueryTableDefinitionRequestQueryEventQueryGroupBySort:DashboardWidgetQueryTableDefinitionRequestQueryEventQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "The aggregation methods for the event platform queries. Valid values are `count`, `cardinality`, `median`, `pc75`, `pc90`, `pc95`, `pc98`, `pc99`, `sum`, `min`, `max`, `avg`.\n"
                },
                "metric": {
                    "type": "string",
                    "description": "The metric used for sorting group by results.\n"
                },
                "order": {
                    "type": "string",
                    "description": "Direction of sort. Valid values are `asc`, `desc`.\n"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetQueryTableDefinitionRequestQueryEventQuerySearch:DashboardWidgetQueryTableDefinitionRequestQueryEventQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "description": "The events search string.\n"
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/DashboardWidgetQueryTableDefinitionRequestQueryMetricQuery:DashboardWidgetQueryTableDefinitionRequestQueryMetricQuery": {
            "properties": {
                "aggregator": {
                    "type": "string",
                    "description": "The aggregation methods available for metrics queries. Valid values are `avg`, `min`, `max`, `sum`, `last`, `area`, `l2norm`, `percentile`.\n"
                },
                "crossOrgUuids": {
                    "type": "string",
                    "description": "The source organization UUID for cross organization queries. Feature in Private Beta.\n"
                },
                "dataSource": {
                    "type": "string",
                    "description": "The data source for metrics queries. Defaults to `\"metrics\"`.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the query for use in formulas.\n"
                },
                "query": {
                    "type": "string",
                    "description": "The metrics query definition.\n"
                }
            },
            "type": "object",
            "required": [
                "name",
                "query"
            ]
        },
        "datadog:index/DashboardWidgetQueryTableDefinitionRequestQueryProcessQuery:DashboardWidgetQueryTableDefinitionRequestQueryProcessQuery": {
            "properties": {
                "aggregator": {
                    "type": "string",
                    "description": "The aggregation methods available for metrics queries. Valid values are `avg`, `min`, `max`, `sum`, `last`, `area`, `l2norm`, `percentile`.\n"
                },
                "crossOrgUuids": {
                    "type": "string",
                    "description": "The source organization UUID for cross organization queries. Feature in Private Beta.\n"
                },
                "dataSource": {
                    "type": "string",
                    "description": "The data source for process queries. Valid values are `process`, `container`.\n"
                },
                "isNormalizedCpu": {
                    "type": "boolean",
                    "description": "Whether to normalize the CPU percentages.\n"
                },
                "limit": {
                    "type": "integer",
                    "description": "The number of hits to return.\n"
                },
                "metric": {
                    "type": "string",
                    "description": "The process metric name.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of query for use in formulas.\n"
                },
                "sort": {
                    "type": "string",
                    "description": "The direction of the sort. Valid values are `asc`, `desc`. Defaults to `\"desc\"`.\n"
                },
                "tagFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "An array of tags to filter by.\n"
                },
                "textFilter": {
                    "type": "string",
                    "description": "The text to use as a filter.\n"
                }
            },
            "type": "object",
            "required": [
                "dataSource",
                "metric",
                "name"
            ]
        },
        "datadog:index/DashboardWidgetQueryTableDefinitionRequestQuerySloQuery:DashboardWidgetQueryTableDefinitionRequestQuerySloQuery": {
            "properties": {
                "additionalQueryFilters": {
                    "type": "string",
                    "description": "Additional filters applied to the SLO query.\n"
                },
                "crossOrgUuids": {
                    "type": "string",
                    "description": "The source organization UUID for cross organization queries. Feature in Private Beta.\n"
                },
                "dataSource": {
                    "type": "string",
                    "description": "The data source for SLO queries. Valid values are `slo`.\n"
                },
                "groupMode": {
                    "type": "string",
                    "description": "Group mode to query measures. Valid values are `overall`, `components`. Defaults to `\"overall\"`.\n"
                },
                "measure": {
                    "type": "string",
                    "description": "SLO measures queries. Valid values are `good_events`, `bad_events`, `slo_status`, `error_budget_remaining`, `burn_rate`, `error_budget_burndown`.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of query for use in formulas.\n"
                },
                "sloId": {
                    "type": "string",
                    "description": "ID of an SLO to query.\n"
                },
                "sloQueryType": {
                    "type": "string",
                    "description": "type of the SLO to query. Valid values are `metric`, `time_slice`. Defaults to `\"metric\"`.\n"
                }
            },
            "type": "object",
            "required": [
                "dataSource",
                "measure",
                "sloId"
            ]
        },
        "datadog:index/DashboardWidgetQueryValueDefinition:DashboardWidgetQueryValueDefinition": {
            "properties": {
                "autoscale": {
                    "type": "boolean",
                    "description": "A Boolean indicating whether to automatically scale the tile.\n"
                },
                "customLinks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetQueryValueDefinitionCustomLink:DashboardWidgetQueryValueDefinitionCustomLink"
                    },
                    "description": "A nested block describing a custom link. Multiple `custom_link` blocks are allowed using the structure below.\n"
                },
                "customUnit": {
                    "type": "string",
                    "description": "The unit for the value displayed in the widget.\n"
                },
                "liveSpan": {
                    "type": "string",
                    "description": "The timeframe to use when displaying the widget. Valid values are `1m`, `5m`, `10m`, `15m`, `30m`, `1h`, `4h`, `1d`, `2d`, `1w`, `1mo`, `3mo`, `6mo`, `week_to_date`, `month_to_date`, `1y`, `alert`.\n"
                },
                "precision": {
                    "type": "integer",
                    "description": "The precision to use when displaying the tile.\n"
                },
                "requests": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetQueryValueDefinitionRequest:DashboardWidgetQueryValueDefinitionRequest"
                    },
                    "description": "A nested block describing the request to use when displaying the widget. Multiple `request` blocks are allowed using the structure below (exactly one of `q`, `apm_query`, `log_query`, `rum_query`, `security_query` or `process_query` is required within the `request` block).\n"
                },
                "textAlign": {
                    "type": "string",
                    "description": "The alignment of the widget's text. Valid values are `center`, `left`, `right`.\n"
                },
                "timeseriesBackground": {
                    "$ref": "#/types/datadog:index/DashboardWidgetQueryValueDefinitionTimeseriesBackground:DashboardWidgetQueryValueDefinitionTimeseriesBackground",
                    "description": "Set a timeseries on the widget background.\n"
                },
                "title": {
                    "type": "string",
                    "description": "The title of the widget.\n"
                },
                "titleAlign": {
                    "type": "string",
                    "description": "The alignment of the widget's title. Valid values are `center`, `left`, `right`.\n"
                },
                "titleSize": {
                    "type": "string",
                    "description": "The size of the widget's title (defaults to 16).\n"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetQueryValueDefinitionCustomLink:DashboardWidgetQueryValueDefinitionCustomLink": {
            "properties": {
                "isHidden": {
                    "type": "boolean",
                    "description": "The flag for toggling context menu link visibility.\n"
                },
                "label": {
                    "type": "string",
                    "description": "The label for the custom link URL.\n"
                },
                "link": {
                    "type": "string",
                    "description": "The URL of the custom link.\n"
                },
                "overrideLabel": {
                    "type": "string",
                    "description": "The label ID that refers to a context menu link item. When `override_label` is provided, the client request omits the label field.\n"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetQueryValueDefinitionRequest:DashboardWidgetQueryValueDefinitionRequest": {
            "properties": {
                "aggregator": {
                    "type": "string",
                    "description": "The aggregator to use for time aggregation. Valid values are `avg`, `last`, `max`, `min`, `sum`, `percentile`.\n"
                },
                "apmQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetApmQuery:DashboardWidgetApmQuery",
                    "description": "The query to use for this widget.\n"
                },
                "auditQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetQueryValueDefinitionRequestAuditQuery:DashboardWidgetQueryValueDefinitionRequestAuditQuery",
                    "description": "The query to use for this widget.\n"
                },
                "conditionalFormats": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetQueryValueDefinitionRequestConditionalFormat:DashboardWidgetQueryValueDefinitionRequestConditionalFormat"
                    },
                    "description": "Conditional formats allow you to set the color of your widget content or background depending on the rule applied to your data. Multiple `conditional_formats` blocks are allowed using the structure below.\n"
                },
                "formulas": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetQueryValueDefinitionRequestFormula:DashboardWidgetQueryValueDefinitionRequestFormula"
                    }
                },
                "logQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetLogQuery:DashboardWidgetLogQuery",
                    "description": "The query to use for this widget.\n"
                },
                "processQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetQueryValueDefinitionRequestProcessQuery:DashboardWidgetQueryValueDefinitionRequestProcessQuery",
                    "description": "The process query to use in the widget. The structure of this block is described below.\n"
                },
                "q": {
                    "type": "string",
                    "description": "The metric query to use for this widget.\n"
                },
                "queries": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetQueryValueDefinitionRequestQuery:DashboardWidgetQueryValueDefinitionRequestQuery"
                    }
                },
                "rumQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetRumQuery:DashboardWidgetRumQuery",
                    "description": "The query to use for this widget.\n"
                },
                "securityQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetSecurityQuery:DashboardWidgetSecurityQuery",
                    "description": "The query to use for this widget.\n"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetQueryValueDefinitionRequestAuditQuery:DashboardWidgetQueryValueDefinitionRequestAuditQuery": {
            "properties": {
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetQueryValueDefinitionRequestAuditQueryComputeQuery:DashboardWidgetQueryValueDefinitionRequestAuditQueryComputeQuery",
                    "description": "`compute_query` or `multi_compute` is required. The map keys are listed below.\n"
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetQueryValueDefinitionRequestAuditQueryGroupBy:DashboardWidgetQueryValueDefinitionRequestAuditQueryGroupBy"
                    },
                    "description": "Multiple `group_by` blocks are allowed using the structure below.\n"
                },
                "index": {
                    "type": "string",
                    "description": "The name of the index to query.\n"
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetQueryValueDefinitionRequestAuditQueryMultiCompute:DashboardWidgetQueryValueDefinitionRequestAuditQueryMultiCompute"
                    },
                    "description": "`compute_query` or `multi_compute` is required. Multiple `multi_compute` blocks are allowed using the structure below.\n"
                },
                "searchQuery": {
                    "type": "string",
                    "description": "The search query to use.\n"
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetQueryValueDefinitionRequestAuditQueryComputeQuery:DashboardWidgetQueryValueDefinitionRequestAuditQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "The aggregation method.\n"
                },
                "facet": {
                    "type": "string",
                    "description": "The facet name.\n"
                },
                "interval": {
                    "type": "integer",
                    "description": "Define the time interval in seconds.\n"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetQueryValueDefinitionRequestAuditQueryGroupBy:DashboardWidgetQueryValueDefinitionRequestAuditQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "description": "The facet name.\n"
                },
                "limit": {
                    "type": "integer",
                    "description": "The maximum number of items in the group.\n"
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetQueryValueDefinitionRequestAuditQueryGroupBySortQuery:DashboardWidgetQueryValueDefinitionRequestAuditQueryGroupBySortQuery",
                    "description": "A list of exactly one element describing the sort query to use.\n"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetQueryValueDefinitionRequestAuditQueryGroupBySortQuery:DashboardWidgetQueryValueDefinitionRequestAuditQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "The aggregation method.\n"
                },
                "facet": {
                    "type": "string",
                    "description": "The facet name.\n"
                },
                "order": {
                    "type": "string",
                    "description": "Widget sorting methods. Valid values are `asc`, `desc`.\n"
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetQueryValueDefinitionRequestAuditQueryMultiCompute:DashboardWidgetQueryValueDefinitionRequestAuditQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "The aggregation method.\n"
                },
                "facet": {
                    "type": "string",
                    "description": "The facet name.\n"
                },
                "interval": {
                    "type": "integer",
                    "description": "Define the time interval in seconds.\n"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetQueryValueDefinitionRequestConditionalFormat:DashboardWidgetQueryValueDefinitionRequestConditionalFormat": {
            "properties": {
                "comparator": {
                    "type": "string",
                    "description": "The comparator to use. Valid values are `=`, `\u003e`, `\u003e=`, `\u003c`, `\u003c=`.\n"
                },
                "customBgColor": {
                    "type": "string",
                    "description": "The color palette to apply to the background, same values available as palette.\n"
                },
                "customFgColor": {
                    "type": "string",
                    "description": "The color palette to apply to the foreground, same values available as palette.\n"
                },
                "hideValue": {
                    "type": "boolean",
                    "description": "Setting this to True hides values.\n"
                },
                "imageUrl": {
                    "type": "string",
                    "description": "Displays an image as the background.\n"
                },
                "metric": {
                    "type": "string",
                    "description": "The metric from the request to correlate with this conditional format.\n"
                },
                "palette": {
                    "type": "string",
                    "description": "The color palette to apply. Valid values are `blue`, `custom_bg`, `custom_image`, `custom_text`, `gray_on_white`, `grey`, `green`, `orange`, `red`, `red_on_white`, `white_on_gray`, `white_on_green`, `green_on_white`, `white_on_red`, `white_on_yellow`, `yellow_on_white`, `black_on_light_yellow`, `black_on_light_green`, `black_on_light_red`.\n"
                },
                "timeframe": {
                    "type": "string",
                    "description": "Defines the displayed timeframe.\n"
                },
                "value": {
                    "type": "number",
                    "description": "A value for the comparator.\n"
                }
            },
            "type": "object",
            "required": [
                "comparator",
                "palette",
                "value"
            ]
        },
        "datadog:index/DashboardWidgetQueryValueDefinitionRequestFormula:DashboardWidgetQueryValueDefinitionRequestFormula": {
            "properties": {
                "alias": {
                    "type": "string",
                    "description": "An expression alias.\n"
                },
                "cellDisplayMode": {
                    "type": "string",
                    "description": "A list of display modes for each table cell. Valid values are `number`, `bar`.\n"
                },
                "conditionalFormats": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetQueryValueDefinitionRequestFormulaConditionalFormat:DashboardWidgetQueryValueDefinitionRequestFormulaConditionalFormat"
                    },
                    "description": "Conditional formats allow you to set the color of your widget content or background depending on the rule applied to your data. Multiple `conditional_formats` blocks are allowed using the structure below.\n"
                },
                "formulaExpression": {
                    "type": "string",
                    "description": "A string expression built from queries, formulas, and functions.\n"
                },
                "limit": {
                    "$ref": "#/types/datadog:index/DashboardWidgetQueryValueDefinitionRequestFormulaLimit:DashboardWidgetQueryValueDefinitionRequestFormulaLimit",
                    "description": "The options for limiting results returned.\n"
                },
                "style": {
                    "$ref": "#/types/datadog:index/DashboardWidgetQueryValueDefinitionRequestFormulaStyle:DashboardWidgetQueryValueDefinitionRequestFormulaStyle",
                    "description": "Styling options for widget formulas.\n"
                }
            },
            "type": "object",
            "required": [
                "formulaExpression"
            ]
        },
        "datadog:index/DashboardWidgetQueryValueDefinitionRequestFormulaConditionalFormat:DashboardWidgetQueryValueDefinitionRequestFormulaConditionalFormat": {
            "properties": {
                "comparator": {
                    "type": "string",
                    "description": "The comparator to use. Valid values are `=`, `\u003e`, `\u003e=`, `\u003c`, `\u003c=`.\n"
                },
                "customBgColor": {
                    "type": "string",
                    "description": "The color palette to apply to the background, same values available as palette.\n"
                },
                "customFgColor": {
                    "type": "string",
                    "description": "The color palette to apply to the foreground, same values available as palette.\n"
                },
                "hideValue": {
                    "type": "boolean",
                    "description": "Setting this to True hides values.\n"
                },
                "imageUrl": {
                    "type": "string",
                    "description": "Displays an image as the background.\n"
                },
                "metric": {
                    "type": "string",
                    "description": "The metric from the request to correlate with this conditional format.\n"
                },
                "palette": {
                    "type": "string",
                    "description": "The color palette to apply. Valid values are `blue`, `custom_bg`, `custom_image`, `custom_text`, `gray_on_white`, `grey`, `green`, `orange`, `red`, `red_on_white`, `white_on_gray`, `white_on_green`, `green_on_white`, `white_on_red`, `white_on_yellow`, `yellow_on_white`, `black_on_light_yellow`, `black_on_light_green`, `black_on_light_red`.\n"
                },
                "timeframe": {
                    "type": "string",
                    "description": "Defines the displayed timeframe.\n"
                },
                "value": {
                    "type": "number",
                    "description": "A value for the comparator.\n"
                }
            },
            "type": "object",
            "required": [
                "comparator",
                "palette",
                "value"
            ]
        },
        "datadog:index/DashboardWidgetQueryValueDefinitionRequestFormulaLimit:DashboardWidgetQueryValueDefinitionRequestFormulaLimit": {
            "properties": {
                "count": {
                    "type": "integer",
                    "description": "The number of results to return.\n"
                },
                "order": {
                    "type": "string",
                    "description": "The direction of the sort. Valid values are `asc`, `desc`. Defaults to `\"desc\"`.\n"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetQueryValueDefinitionRequestFormulaStyle:DashboardWidgetQueryValueDefinitionRequestFormulaStyle": {
            "properties": {
                "palette": {
                    "type": "string",
                    "description": "The color palette used to display the formula. A guide to the available color palettes can be found at https://docs.datadoghq.com/dashboards/guide/widget_colors.\n"
                },
                "paletteIndex": {
                    "type": "integer",
                    "description": "Index specifying which color to use within the palette.\n"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetQueryValueDefinitionRequestProcessQuery:DashboardWidgetQueryValueDefinitionRequestProcessQuery": {
            "properties": {
                "filterBies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of processes.\n"
                },
                "limit": {
                    "type": "integer",
                    "description": "The max number of items in the filter list.\n"
                },
                "metric": {
                    "type": "string",
                    "description": "Your chosen metric.\n"
                },
                "searchBy": {
                    "type": "string",
                    "description": "Your chosen search term.\n"
                }
            },
            "type": "object",
            "required": [
                "metric"
            ]
        },
        "datadog:index/DashboardWidgetQueryValueDefinitionRequestQuery:DashboardWidgetQueryValueDefinitionRequestQuery": {
            "properties": {
                "apmDependencyStatsQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetQueryValueDefinitionRequestQueryApmDependencyStatsQuery:DashboardWidgetQueryValueDefinitionRequestQueryApmDependencyStatsQuery",
                    "description": "The APM Dependency Stats query using formulas and functions.\n"
                },
                "apmResourceStatsQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetQueryValueDefinitionRequestQueryApmResourceStatsQuery:DashboardWidgetQueryValueDefinitionRequestQueryApmResourceStatsQuery",
                    "description": "The APM Resource Stats query using formulas and functions.\n"
                },
                "cloudCostQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetQueryValueDefinitionRequestQueryCloudCostQuery:DashboardWidgetQueryValueDefinitionRequestQueryCloudCostQuery",
                    "description": "The Cloud Cost query using formulas and functions.\n"
                },
                "eventQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetQueryValueDefinitionRequestQueryEventQuery:DashboardWidgetQueryValueDefinitionRequestQueryEventQuery",
                    "description": "A timeseries formula and functions events query.\n"
                },
                "metricQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetQueryValueDefinitionRequestQueryMetricQuery:DashboardWidgetQueryValueDefinitionRequestQueryMetricQuery",
                    "description": "A timeseries formula and functions metrics query.\n"
                },
                "processQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetQueryValueDefinitionRequestQueryProcessQuery:DashboardWidgetQueryValueDefinitionRequestQueryProcessQuery",
                    "description": "The process query using formulas and functions.\n"
                },
                "sloQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetQueryValueDefinitionRequestQuerySloQuery:DashboardWidgetQueryValueDefinitionRequestQuerySloQuery",
                    "description": "The SLO query using formulas and functions.\n"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetQueryValueDefinitionRequestQueryApmDependencyStatsQuery:DashboardWidgetQueryValueDefinitionRequestQueryApmDependencyStatsQuery": {
            "properties": {
                "crossOrgUuids": {
                    "type": "string",
                    "description": "The source organization UUID for cross organization queries. Feature in Private Beta.\n"
                },
                "dataSource": {
                    "type": "string",
                    "description": "The data source for APM Dependency Stats queries. Valid values are `apm_dependency_stats`.\n"
                },
                "env": {
                    "type": "string",
                    "description": "APM environment.\n"
                },
                "isUpstream": {
                    "type": "boolean",
                    "description": "Determines whether stats for upstream or downstream dependencies should be queried.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of query for use in formulas.\n"
                },
                "operationName": {
                    "type": "string",
                    "description": "Name of operation on service.\n"
                },
                "primaryTagName": {
                    "type": "string",
                    "description": "The name of the second primary tag used within APM; required when `primary_tag_value` is specified. See https://docs.datadoghq.com/tracing/guide/setting*primary*tags*to*scope/#add-a-second-primary-tag-in-datadog.\n"
                },
                "primaryTagValue": {
                    "type": "string",
                    "description": "Filter APM data by the second primary tag. `primary_tag_name` must also be specified.\n"
                },
                "resourceName": {
                    "type": "string",
                    "description": "APM resource.\n"
                },
                "service": {
                    "type": "string",
                    "description": "APM service.\n"
                },
                "stat": {
                    "type": "string",
                    "description": "APM statistic. Valid values are `avg_duration`, `avg_root_duration`, `avg_spans_per_trace`, `error_rate`, `pct_exec_time`, `pct_of_traces`, `total_traces_count`.\n"
                }
            },
            "type": "object",
            "required": [
                "dataSource",
                "env",
                "name",
                "operationName",
                "resourceName",
                "service",
                "stat"
            ]
        },
        "datadog:index/DashboardWidgetQueryValueDefinitionRequestQueryApmResourceStatsQuery:DashboardWidgetQueryValueDefinitionRequestQueryApmResourceStatsQuery": {
            "properties": {
                "crossOrgUuids": {
                    "type": "string",
                    "description": "The source organization UUID for cross organization queries. Feature in Private Beta.\n"
                },
                "dataSource": {
                    "type": "string",
                    "description": "The data source for APM Resource Stats queries. Valid values are `apm_resource_stats`.\n"
                },
                "env": {
                    "type": "string",
                    "description": "APM environment.\n"
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Array of fields to group results by.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of query for use in formulas.\n"
                },
                "operationName": {
                    "type": "string",
                    "description": "Name of operation on service.\n"
                },
                "primaryTagName": {
                    "type": "string",
                    "description": "The name of the second primary tag used within APM; required when `primary_tag_value` is specified. See https://docs.datadoghq.com/tracing/guide/setting*primary*tags*to*scope/#add-a-second-primary-tag-in-datadog.\n"
                },
                "primaryTagValue": {
                    "type": "string",
                    "description": "Filter APM data by the second primary tag. `primary_tag_name` must also be specified.\n"
                },
                "resourceName": {
                    "type": "string",
                    "description": "APM resource.\n"
                },
                "service": {
                    "type": "string",
                    "description": "APM service.\n"
                },
                "stat": {
                    "type": "string",
                    "description": "APM statistic. Valid values are `errors`, `error_rate`, `hits`, `latency_avg`, `latency_distribution`, `latency_max`, `latency_p50`, `latency_p75`, `latency_p90`, `latency_p95`, `latency_p99`.\n"
                }
            },
            "type": "object",
            "required": [
                "dataSource",
                "env",
                "name",
                "service",
                "stat"
            ]
        },
        "datadog:index/DashboardWidgetQueryValueDefinitionRequestQueryCloudCostQuery:DashboardWidgetQueryValueDefinitionRequestQueryCloudCostQuery": {
            "properties": {
                "aggregator": {
                    "type": "string",
                    "description": "The aggregation methods available for cloud cost queries. Valid values are `avg`, `last`, `max`, `min`, `sum`, `percentile`.\n"
                },
                "crossOrgUuids": {
                    "type": "string",
                    "description": "The source organization UUID for cross organization queries. Feature in Private Beta.\n"
                },
                "dataSource": {
                    "type": "string",
                    "description": "The data source for cloud cost queries. Valid values are `cloud_cost`.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the query for use in formulas.\n"
                },
                "query": {
                    "type": "string",
                    "description": "The cloud cost query definition.\n"
                }
            },
            "type": "object",
            "required": [
                "dataSource",
                "name",
                "query"
            ]
        },
        "datadog:index/DashboardWidgetQueryValueDefinitionRequestQueryEventQuery:DashboardWidgetQueryValueDefinitionRequestQueryEventQuery": {
            "properties": {
                "computes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetQueryValueDefinitionRequestQueryEventQueryCompute:DashboardWidgetQueryValueDefinitionRequestQueryEventQueryCompute"
                    },
                    "description": "The compute options.\n"
                },
                "crossOrgUuids": {
                    "type": "string",
                    "description": "The source organization UUID for cross organization queries. Feature in Private Beta.\n"
                },
                "dataSource": {
                    "type": "string",
                    "description": "The data source for event platform-based queries. Valid values are `logs`, `spans`, `network`, `rum`, `security_signals`, `profiles`, `audit`, `events`, `ci_tests`, `ci_pipelines`, `incident_analytics`.\n"
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetQueryValueDefinitionRequestQueryEventQueryGroupBy:DashboardWidgetQueryValueDefinitionRequestQueryEventQueryGroupBy"
                    },
                    "description": "Group by options.\n"
                },
                "indexes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "An array of index names to query in the stream.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of query for use in formulas.\n"
                },
                "search": {
                    "$ref": "#/types/datadog:index/DashboardWidgetQueryValueDefinitionRequestQueryEventQuerySearch:DashboardWidgetQueryValueDefinitionRequestQueryEventQuerySearch",
                    "description": "The search options.\n"
                },
                "storage": {
                    "type": "string",
                    "description": "Storage location (private beta).\n"
                }
            },
            "type": "object",
            "required": [
                "computes",
                "dataSource",
                "name"
            ]
        },
        "datadog:index/DashboardWidgetQueryValueDefinitionRequestQueryEventQueryCompute:DashboardWidgetQueryValueDefinitionRequestQueryEventQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "The aggregation methods for event platform queries. Valid values are `count`, `cardinality`, `median`, `pc75`, `pc90`, `pc95`, `pc98`, `pc99`, `sum`, `min`, `max`, `avg`.\n"
                },
                "interval": {
                    "type": "integer",
                    "description": "A time interval in milliseconds.\n"
                },
                "metric": {
                    "type": "string",
                    "description": "The measurable attribute to compute.\n"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetQueryValueDefinitionRequestQueryEventQueryGroupBy:DashboardWidgetQueryValueDefinitionRequestQueryEventQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "description": "The event facet.\n"
                },
                "limit": {
                    "type": "integer",
                    "description": "The number of groups to return.\n"
                },
                "sort": {
                    "$ref": "#/types/datadog:index/DashboardWidgetQueryValueDefinitionRequestQueryEventQueryGroupBySort:DashboardWidgetQueryValueDefinitionRequestQueryEventQueryGroupBySort",
                    "description": "The options for sorting group by results.\n"
                }
            },
            "type": "object",
            "required": [
                "facet"
            ]
        },
        "datadog:index/DashboardWidgetQueryValueDefinitionRequestQueryEventQueryGroupBySort:DashboardWidgetQueryValueDefinitionRequestQueryEventQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "The aggregation methods for the event platform queries. Valid values are `count`, `cardinality`, `median`, `pc75`, `pc90`, `pc95`, `pc98`, `pc99`, `sum`, `min`, `max`, `avg`.\n"
                },
                "metric": {
                    "type": "string",
                    "description": "The metric used for sorting group by results.\n"
                },
                "order": {
                    "type": "string",
                    "description": "Direction of sort. Valid values are `asc`, `desc`.\n"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetQueryValueDefinitionRequestQueryEventQuerySearch:DashboardWidgetQueryValueDefinitionRequestQueryEventQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "description": "The events search string.\n"
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/DashboardWidgetQueryValueDefinitionRequestQueryMetricQuery:DashboardWidgetQueryValueDefinitionRequestQueryMetricQuery": {
            "properties": {
                "aggregator": {
                    "type": "string",
                    "description": "The aggregation methods available for metrics queries. Valid values are `avg`, `min`, `max`, `sum`, `last`, `area`, `l2norm`, `percentile`.\n"
                },
                "crossOrgUuids": {
                    "type": "string",
                    "description": "The source organization UUID for cross organization queries. Feature in Private Beta.\n"
                },
                "dataSource": {
                    "type": "string",
                    "description": "The data source for metrics queries. Defaults to `\"metrics\"`.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the query for use in formulas.\n"
                },
                "query": {
                    "type": "string",
                    "description": "The metrics query definition.\n"
                }
            },
            "type": "object",
            "required": [
                "name",
                "query"
            ]
        },
        "datadog:index/DashboardWidgetQueryValueDefinitionRequestQueryProcessQuery:DashboardWidgetQueryValueDefinitionRequestQueryProcessQuery": {
            "properties": {
                "aggregator": {
                    "type": "string",
                    "description": "The aggregation methods available for metrics queries. Valid values are `avg`, `min`, `max`, `sum`, `last`, `area`, `l2norm`, `percentile`.\n"
                },
                "crossOrgUuids": {
                    "type": "string",
                    "description": "The source organization UUID for cross organization queries. Feature in Private Beta.\n"
                },
                "dataSource": {
                    "type": "string",
                    "description": "The data source for process queries. Valid values are `process`, `container`.\n"
                },
                "isNormalizedCpu": {
                    "type": "boolean",
                    "description": "Whether to normalize the CPU percentages.\n"
                },
                "limit": {
                    "type": "integer",
                    "description": "The number of hits to return.\n"
                },
                "metric": {
                    "type": "string",
                    "description": "The process metric name.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of query for use in formulas.\n"
                },
                "sort": {
                    "type": "string",
                    "description": "The direction of the sort. Valid values are `asc`, `desc`. Defaults to `\"desc\"`.\n"
                },
                "tagFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "An array of tags to filter by.\n"
                },
                "textFilter": {
                    "type": "string",
                    "description": "The text to use as a filter.\n"
                }
            },
            "type": "object",
            "required": [
                "dataSource",
                "metric",
                "name"
            ]
        },
        "datadog:index/DashboardWidgetQueryValueDefinitionRequestQuerySloQuery:DashboardWidgetQueryValueDefinitionRequestQuerySloQuery": {
            "properties": {
                "additionalQueryFilters": {
                    "type": "string",
                    "description": "Additional filters applied to the SLO query.\n"
                },
                "crossOrgUuids": {
                    "type": "string",
                    "description": "The source organization UUID for cross organization queries. Feature in Private Beta.\n"
                },
                "dataSource": {
                    "type": "string",
                    "description": "The data source for SLO queries. Valid values are `slo`.\n"
                },
                "groupMode": {
                    "type": "string",
                    "description": "Group mode to query measures. Valid values are `overall`, `components`. Defaults to `\"overall\"`.\n"
                },
                "measure": {
                    "type": "string",
                    "description": "SLO measures queries. Valid values are `good_events`, `bad_events`, `slo_status`, `error_budget_remaining`, `burn_rate`, `error_budget_burndown`.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of query for use in formulas.\n"
                },
                "sloId": {
                    "type": "string",
                    "description": "ID of an SLO to query.\n"
                },
                "sloQueryType": {
                    "type": "string",
                    "description": "type of the SLO to query. Valid values are `metric`, `time_slice`. Defaults to `\"metric\"`.\n"
                }
            },
            "type": "object",
            "required": [
                "dataSource",
                "measure",
                "sloId"
            ]
        },
        "datadog:index/DashboardWidgetQueryValueDefinitionTimeseriesBackground:DashboardWidgetQueryValueDefinitionTimeseriesBackground": {
            "properties": {
                "type": {
                    "type": "string",
                    "description": "Whether the Timeseries is made using an area or bars. Valid values are `bars`, `area`.\n"
                },
                "yaxis": {
                    "$ref": "#/types/datadog:index/DashboardWidgetQueryValueDefinitionTimeseriesBackgroundYaxis:DashboardWidgetQueryValueDefinitionTimeseriesBackgroundYaxis",
                    "description": "A nested block describing the Y-Axis Controls. Exactly one nested block is allowed using the structure below.\n"
                }
            },
            "type": "object",
            "required": [
                "type"
            ]
        },
        "datadog:index/DashboardWidgetQueryValueDefinitionTimeseriesBackgroundYaxis:DashboardWidgetQueryValueDefinitionTimeseriesBackgroundYaxis": {
            "properties": {
                "includeZero": {
                    "type": "boolean",
                    "description": "Always include zero or fit the axis to the data range.\n"
                },
                "label": {
                    "type": "string",
                    "description": "The label of the axis to display on the graph.\n"
                },
                "max": {
                    "type": "string",
                    "description": "Specify the maximum value to show on the Y-axis.\n"
                },
                "min": {
                    "type": "string",
                    "description": "Specify the minimum value to show on the Y-axis.\n"
                },
                "scale": {
                    "type": "string",
                    "description": "Specify the scale type, options: `linear`, `log`, `pow`, `sqrt`.\n"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetRumQuery:DashboardWidgetRumQuery": {
            "properties": {
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetRumQueryComputeQuery:DashboardWidgetRumQueryComputeQuery",
                    "description": "`compute_query` or `multi_compute` is required. The map keys are listed below.\n"
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetRumQueryGroupBy:DashboardWidgetRumQueryGroupBy"
                    },
                    "description": "Multiple `group_by` blocks are allowed using the structure below.\n"
                },
                "index": {
                    "type": "string",
                    "description": "The name of the index to query.\n"
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetRumQueryMultiCompute:DashboardWidgetRumQueryMultiCompute"
                    },
                    "description": "`compute_query` or `multi_compute` is required. Multiple `multi_compute` blocks are allowed using the structure below.\n"
                },
                "searchQuery": {
                    "type": "string",
                    "description": "The search query to use.\n"
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetRumQueryComputeQuery:DashboardWidgetRumQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "The aggregation method.\n"
                },
                "facet": {
                    "type": "string",
                    "description": "The facet name.\n"
                },
                "interval": {
                    "type": "integer",
                    "description": "Define the time interval in seconds.\n"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetRumQueryGroupBy:DashboardWidgetRumQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "description": "The facet name.\n"
                },
                "limit": {
                    "type": "integer",
                    "description": "The maximum number of items in the group.\n"
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetRumQueryGroupBySortQuery:DashboardWidgetRumQueryGroupBySortQuery",
                    "description": "A list of exactly one element describing the sort query to use.\n"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetRumQueryGroupBySortQuery:DashboardWidgetRumQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "The aggregation method.\n"
                },
                "facet": {
                    "type": "string",
                    "description": "The facet name.\n"
                },
                "order": {
                    "type": "string",
                    "description": "Widget sorting methods. Valid values are `asc`, `desc`.\n"
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetRumQueryMultiCompute:DashboardWidgetRumQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "The aggregation method.\n"
                },
                "facet": {
                    "type": "string",
                    "description": "The facet name.\n"
                },
                "interval": {
                    "type": "integer",
                    "description": "Define the time interval in seconds.\n"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetRunWorkflowDefinition:DashboardWidgetRunWorkflowDefinition": {
            "properties": {
                "customLinks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetRunWorkflowDefinitionCustomLink:DashboardWidgetRunWorkflowDefinitionCustomLink"
                    },
                    "description": "A nested block describing a custom link. Multiple `custom_link` blocks are allowed using the structure below.\n"
                },
                "inputs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetRunWorkflowDefinitionInput:DashboardWidgetRunWorkflowDefinitionInput"
                    },
                    "description": "Array of workflow inputs to map to dashboard template variables.\n"
                },
                "liveSpan": {
                    "type": "string",
                    "description": "The timeframe to use when displaying the widget. Valid values are `1m`, `5m`, `10m`, `15m`, `30m`, `1h`, `4h`, `1d`, `2d`, `1w`, `1mo`, `3mo`, `6mo`, `week_to_date`, `month_to_date`, `1y`, `alert`.\n"
                },
                "title": {
                    "type": "string",
                    "description": "The title of the widget.\n"
                },
                "titleAlign": {
                    "type": "string",
                    "description": "The alignment of the widget's title. Valid values are `center`, `left`, `right`.\n"
                },
                "titleSize": {
                    "type": "string",
                    "description": "The size of the widget's title (defaults to 16).\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "Workflow ID\n"
                }
            },
            "type": "object",
            "required": [
                "workflowId"
            ]
        },
        "datadog:index/DashboardWidgetRunWorkflowDefinitionCustomLink:DashboardWidgetRunWorkflowDefinitionCustomLink": {
            "properties": {
                "isHidden": {
                    "type": "boolean",
                    "description": "The flag for toggling context menu link visibility.\n"
                },
                "label": {
                    "type": "string",
                    "description": "The label for the custom link URL.\n"
                },
                "link": {
                    "type": "string",
                    "description": "The URL of the custom link.\n"
                },
                "overrideLabel": {
                    "type": "string",
                    "description": "The label ID that refers to a context menu link item. When `override_label` is provided, the client request omits the label field.\n"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetRunWorkflowDefinitionInput:DashboardWidgetRunWorkflowDefinitionInput": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Name of the workflow input.\n"
                },
                "value": {
                    "type": "string",
                    "description": "Dashboard template variable. Can be suffixed with `.value` or `.key`.\n"
                }
            },
            "type": "object",
            "required": [
                "name",
                "value"
            ]
        },
        "datadog:index/DashboardWidgetScatterplotDefinition:DashboardWidgetScatterplotDefinition": {
            "properties": {
                "colorByGroups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of groups used for colors.\n"
                },
                "customLinks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetScatterplotDefinitionCustomLink:DashboardWidgetScatterplotDefinitionCustomLink"
                    },
                    "description": "A nested block describing a custom link. Multiple `custom_link` blocks are allowed using the structure below.\n"
                },
                "liveSpan": {
                    "type": "string",
                    "description": "The timeframe to use when displaying the widget. Valid values are `1m`, `5m`, `10m`, `15m`, `30m`, `1h`, `4h`, `1d`, `2d`, `1w`, `1mo`, `3mo`, `6mo`, `week_to_date`, `month_to_date`, `1y`, `alert`.\n"
                },
                "request": {
                    "$ref": "#/types/datadog:index/DashboardWidgetScatterplotDefinitionRequest:DashboardWidgetScatterplotDefinitionRequest",
                    "description": "A nested block describing the request to use when displaying the widget. Exactly one `request` block is allowed using the structure below.\n"
                },
                "title": {
                    "type": "string",
                    "description": "The title of the widget.\n"
                },
                "titleAlign": {
                    "type": "string",
                    "description": "The alignment of the widget's title. Valid values are `center`, `left`, `right`.\n"
                },
                "titleSize": {
                    "type": "string",
                    "description": "The size of the widget's title (defaults to 16).\n"
                },
                "xaxis": {
                    "$ref": "#/types/datadog:index/DashboardWidgetScatterplotDefinitionXaxis:DashboardWidgetScatterplotDefinitionXaxis",
                    "description": "A nested block describing the X-Axis Controls. Exactly one nested block is allowed using the structure below.\n"
                },
                "yaxis": {
                    "$ref": "#/types/datadog:index/DashboardWidgetScatterplotDefinitionYaxis:DashboardWidgetScatterplotDefinitionYaxis",
                    "description": "A nested block describing the Y-Axis Controls. Exactly one nested block is allowed using the structure below.\n"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetScatterplotDefinitionCustomLink:DashboardWidgetScatterplotDefinitionCustomLink": {
            "properties": {
                "isHidden": {
                    "type": "boolean",
                    "description": "The flag for toggling context menu link visibility.\n"
                },
                "label": {
                    "type": "string",
                    "description": "The label for the custom link URL.\n"
                },
                "link": {
                    "type": "string",
                    "description": "The URL of the custom link.\n"
                },
                "overrideLabel": {
                    "type": "string",
                    "description": "The label ID that refers to a context menu link item. When `override_label` is provided, the client request omits the label field.\n"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetScatterplotDefinitionRequest:DashboardWidgetScatterplotDefinitionRequest": {
            "properties": {
                "scatterplotTables": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetScatterplotDefinitionRequestScatterplotTable:DashboardWidgetScatterplotDefinitionRequestScatterplotTable"
                    },
                    "description": "Scatterplot request containing formulas and functions.\n"
                },
                "xes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetScatterplotDefinitionRequestX:DashboardWidgetScatterplotDefinitionRequestX"
                    },
                    "description": "The query used for the X-Axis. Exactly one nested block is allowed using the structure below (exactly one of `q`, `apm_query`, `log_query`, `rum_query`, `security_query`, `apm_stats_query` or `process_query` is required within the block).\n"
                },
                "ys": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetScatterplotDefinitionRequestY:DashboardWidgetScatterplotDefinitionRequestY"
                    },
                    "description": "The query used for the Y-Axis. Exactly one nested block is allowed using the structure below (exactly one of `q`, `apm_query`, `log_query`, `rum_query`, `security_query`, `apm_stats_query` or `process_query` is required within the block).\n"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetScatterplotDefinitionRequestScatterplotTable:DashboardWidgetScatterplotDefinitionRequestScatterplotTable": {
            "properties": {
                "formulas": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetScatterplotDefinitionRequestScatterplotTableFormula:DashboardWidgetScatterplotDefinitionRequestScatterplotTableFormula"
                    }
                },
                "queries": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetScatterplotDefinitionRequestScatterplotTableQuery:DashboardWidgetScatterplotDefinitionRequestScatterplotTableQuery"
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetScatterplotDefinitionRequestScatterplotTableFormula:DashboardWidgetScatterplotDefinitionRequestScatterplotTableFormula": {
            "properties": {
                "alias": {
                    "type": "string",
                    "description": "An expression alias.\n"
                },
                "dimension": {
                    "type": "string",
                    "description": "Dimension of the Scatterplot. Valid values are `x`, `y`, `radius`, `color`.\n"
                },
                "formulaExpression": {
                    "type": "string",
                    "description": "A string expression built from queries, formulas, and functions.\n"
                }
            },
            "type": "object",
            "required": [
                "dimension",
                "formulaExpression"
            ]
        },
        "datadog:index/DashboardWidgetScatterplotDefinitionRequestScatterplotTableQuery:DashboardWidgetScatterplotDefinitionRequestScatterplotTableQuery": {
            "properties": {
                "apmDependencyStatsQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetScatterplotDefinitionRequestScatterplotTableQueryApmDependencyStatsQuery:DashboardWidgetScatterplotDefinitionRequestScatterplotTableQueryApmDependencyStatsQuery",
                    "description": "The APM Dependency Stats query using formulas and functions.\n"
                },
                "apmResourceStatsQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetScatterplotDefinitionRequestScatterplotTableQueryApmResourceStatsQuery:DashboardWidgetScatterplotDefinitionRequestScatterplotTableQueryApmResourceStatsQuery",
                    "description": "The APM Resource Stats query using formulas and functions.\n"
                },
                "cloudCostQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetScatterplotDefinitionRequestScatterplotTableQueryCloudCostQuery:DashboardWidgetScatterplotDefinitionRequestScatterplotTableQueryCloudCostQuery",
                    "description": "The Cloud Cost query using formulas and functions.\n"
                },
                "eventQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetScatterplotDefinitionRequestScatterplotTableQueryEventQuery:DashboardWidgetScatterplotDefinitionRequestScatterplotTableQueryEventQuery",
                    "description": "A timeseries formula and functions events query.\n"
                },
                "metricQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetScatterplotDefinitionRequestScatterplotTableQueryMetricQuery:DashboardWidgetScatterplotDefinitionRequestScatterplotTableQueryMetricQuery",
                    "description": "A timeseries formula and functions metrics query.\n"
                },
                "processQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetScatterplotDefinitionRequestScatterplotTableQueryProcessQuery:DashboardWidgetScatterplotDefinitionRequestScatterplotTableQueryProcessQuery",
                    "description": "The process query using formulas and functions.\n"
                },
                "sloQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetScatterplotDefinitionRequestScatterplotTableQuerySloQuery:DashboardWidgetScatterplotDefinitionRequestScatterplotTableQuerySloQuery",
                    "description": "The SLO query using formulas and functions.\n"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetScatterplotDefinitionRequestScatterplotTableQueryApmDependencyStatsQuery:DashboardWidgetScatterplotDefinitionRequestScatterplotTableQueryApmDependencyStatsQuery": {
            "properties": {
                "crossOrgUuids": {
                    "type": "string",
                    "description": "The source organization UUID for cross organization queries. Feature in Private Beta.\n"
                },
                "dataSource": {
                    "type": "string",
                    "description": "The data source for APM Dependency Stats queries. Valid values are `apm_dependency_stats`.\n"
                },
                "env": {
                    "type": "string",
                    "description": "APM environment.\n"
                },
                "isUpstream": {
                    "type": "boolean",
                    "description": "Determines whether stats for upstream or downstream dependencies should be queried.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of query for use in formulas.\n"
                },
                "operationName": {
                    "type": "string",
                    "description": "Name of operation on service.\n"
                },
                "primaryTagName": {
                    "type": "string",
                    "description": "The name of the second primary tag used within APM; required when `primary_tag_value` is specified. See https://docs.datadoghq.com/tracing/guide/setting*primary*tags*to*scope/#add-a-second-primary-tag-in-datadog.\n"
                },
                "primaryTagValue": {
                    "type": "string",
                    "description": "Filter APM data by the second primary tag. `primary_tag_name` must also be specified.\n"
                },
                "resourceName": {
                    "type": "string",
                    "description": "APM resource.\n"
                },
                "service": {
                    "type": "string",
                    "description": "APM service.\n"
                },
                "stat": {
                    "type": "string",
                    "description": "APM statistic. Valid values are `avg_duration`, `avg_root_duration`, `avg_spans_per_trace`, `error_rate`, `pct_exec_time`, `pct_of_traces`, `total_traces_count`.\n"
                }
            },
            "type": "object",
            "required": [
                "dataSource",
                "env",
                "name",
                "operationName",
                "resourceName",
                "service",
                "stat"
            ]
        },
        "datadog:index/DashboardWidgetScatterplotDefinitionRequestScatterplotTableQueryApmResourceStatsQuery:DashboardWidgetScatterplotDefinitionRequestScatterplotTableQueryApmResourceStatsQuery": {
            "properties": {
                "crossOrgUuids": {
                    "type": "string",
                    "description": "The source organization UUID for cross organization queries. Feature in Private Beta.\n"
                },
                "dataSource": {
                    "type": "string",
                    "description": "The data source for APM Resource Stats queries. Valid values are `apm_resource_stats`.\n"
                },
                "env": {
                    "type": "string",
                    "description": "APM environment.\n"
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Array of fields to group results by.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of query for use in formulas.\n"
                },
                "operationName": {
                    "type": "string",
                    "description": "Name of operation on service.\n"
                },
                "primaryTagName": {
                    "type": "string",
                    "description": "The name of the second primary tag used within APM; required when `primary_tag_value` is specified. See https://docs.datadoghq.com/tracing/guide/setting*primary*tags*to*scope/#add-a-second-primary-tag-in-datadog.\n"
                },
                "primaryTagValue": {
                    "type": "string",
                    "description": "Filter APM data by the second primary tag. `primary_tag_name` must also be specified.\n"
                },
                "resourceName": {
                    "type": "string",
                    "description": "APM resource.\n"
                },
                "service": {
                    "type": "string",
                    "description": "APM service.\n"
                },
                "stat": {
                    "type": "string",
                    "description": "APM statistic. Valid values are `errors`, `error_rate`, `hits`, `latency_avg`, `latency_distribution`, `latency_max`, `latency_p50`, `latency_p75`, `latency_p90`, `latency_p95`, `latency_p99`.\n"
                }
            },
            "type": "object",
            "required": [
                "dataSource",
                "env",
                "name",
                "service",
                "stat"
            ]
        },
        "datadog:index/DashboardWidgetScatterplotDefinitionRequestScatterplotTableQueryCloudCostQuery:DashboardWidgetScatterplotDefinitionRequestScatterplotTableQueryCloudCostQuery": {
            "properties": {
                "aggregator": {
                    "type": "string",
                    "description": "The aggregation methods available for cloud cost queries. Valid values are `avg`, `last`, `max`, `min`, `sum`, `percentile`.\n"
                },
                "crossOrgUuids": {
                    "type": "string",
                    "description": "The source organization UUID for cross organization queries. Feature in Private Beta.\n"
                },
                "dataSource": {
                    "type": "string",
                    "description": "The data source for cloud cost queries. Valid values are `cloud_cost`.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the query for use in formulas.\n"
                },
                "query": {
                    "type": "string",
                    "description": "The cloud cost query definition.\n"
                }
            },
            "type": "object",
            "required": [
                "dataSource",
                "name",
                "query"
            ]
        },
        "datadog:index/DashboardWidgetScatterplotDefinitionRequestScatterplotTableQueryEventQuery:DashboardWidgetScatterplotDefinitionRequestScatterplotTableQueryEventQuery": {
            "properties": {
                "computes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetScatterplotDefinitionRequestScatterplotTableQueryEventQueryCompute:DashboardWidgetScatterplotDefinitionRequestScatterplotTableQueryEventQueryCompute"
                    },
                    "description": "The compute options.\n"
                },
                "crossOrgUuids": {
                    "type": "string",
                    "description": "The source organization UUID for cross organization queries. Feature in Private Beta.\n"
                },
                "dataSource": {
                    "type": "string",
                    "description": "The data source for event platform-based queries. Valid values are `logs`, `spans`, `network`, `rum`, `security_signals`, `profiles`, `audit`, `events`, `ci_tests`, `ci_pipelines`, `incident_analytics`.\n"
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetScatterplotDefinitionRequestScatterplotTableQueryEventQueryGroupBy:DashboardWidgetScatterplotDefinitionRequestScatterplotTableQueryEventQueryGroupBy"
                    },
                    "description": "Group by options.\n"
                },
                "indexes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "An array of index names to query in the stream.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of query for use in formulas.\n"
                },
                "search": {
                    "$ref": "#/types/datadog:index/DashboardWidgetScatterplotDefinitionRequestScatterplotTableQueryEventQuerySearch:DashboardWidgetScatterplotDefinitionRequestScatterplotTableQueryEventQuerySearch",
                    "description": "The search options.\n"
                },
                "storage": {
                    "type": "string",
                    "description": "Storage location (private beta).\n"
                }
            },
            "type": "object",
            "required": [
                "computes",
                "dataSource",
                "name"
            ]
        },
        "datadog:index/DashboardWidgetScatterplotDefinitionRequestScatterplotTableQueryEventQueryCompute:DashboardWidgetScatterplotDefinitionRequestScatterplotTableQueryEventQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "The aggregation methods for event platform queries. Valid values are `count`, `cardinality`, `median`, `pc75`, `pc90`, `pc95`, `pc98`, `pc99`, `sum`, `min`, `max`, `avg`.\n"
                },
                "interval": {
                    "type": "integer",
                    "description": "A time interval in milliseconds.\n"
                },
                "metric": {
                    "type": "string",
                    "description": "The measurable attribute to compute.\n"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetScatterplotDefinitionRequestScatterplotTableQueryEventQueryGroupBy:DashboardWidgetScatterplotDefinitionRequestScatterplotTableQueryEventQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "description": "The event facet.\n"
                },
                "limit": {
                    "type": "integer",
                    "description": "The number of groups to return.\n"
                },
                "sort": {
                    "$ref": "#/types/datadog:index/DashboardWidgetScatterplotDefinitionRequestScatterplotTableQueryEventQueryGroupBySort:DashboardWidgetScatterplotDefinitionRequestScatterplotTableQueryEventQueryGroupBySort",
                    "description": "The options for sorting group by results.\n"
                }
            },
            "type": "object",
            "required": [
                "facet"
            ]
        },
        "datadog:index/DashboardWidgetScatterplotDefinitionRequestScatterplotTableQueryEventQueryGroupBySort:DashboardWidgetScatterplotDefinitionRequestScatterplotTableQueryEventQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "The aggregation methods for the event platform queries. Valid values are `count`, `cardinality`, `median`, `pc75`, `pc90`, `pc95`, `pc98`, `pc99`, `sum`, `min`, `max`, `avg`.\n"
                },
                "metric": {
                    "type": "string",
                    "description": "The metric used for sorting group by results.\n"
                },
                "order": {
                    "type": "string",
                    "description": "Direction of sort. Valid values are `asc`, `desc`.\n"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetScatterplotDefinitionRequestScatterplotTableQueryEventQuerySearch:DashboardWidgetScatterplotDefinitionRequestScatterplotTableQueryEventQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "description": "The events search string.\n"
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/DashboardWidgetScatterplotDefinitionRequestScatterplotTableQueryMetricQuery:DashboardWidgetScatterplotDefinitionRequestScatterplotTableQueryMetricQuery": {
            "properties": {
                "aggregator": {
                    "type": "string",
                    "description": "The aggregation methods available for metrics queries. Valid values are `avg`, `min`, `max`, `sum`, `last`, `area`, `l2norm`, `percentile`.\n"
                },
                "crossOrgUuids": {
                    "type": "string",
                    "description": "The source organization UUID for cross organization queries. Feature in Private Beta.\n"
                },
                "dataSource": {
                    "type": "string",
                    "description": "The data source for metrics queries. Defaults to `\"metrics\"`.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the query for use in formulas.\n"
                },
                "query": {
                    "type": "string",
                    "description": "The metrics query definition.\n"
                }
            },
            "type": "object",
            "required": [
                "name",
                "query"
            ]
        },
        "datadog:index/DashboardWidgetScatterplotDefinitionRequestScatterplotTableQueryProcessQuery:DashboardWidgetScatterplotDefinitionRequestScatterplotTableQueryProcessQuery": {
            "properties": {
                "aggregator": {
                    "type": "string",
                    "description": "The aggregation methods available for metrics queries. Valid values are `avg`, `min`, `max`, `sum`, `last`, `area`, `l2norm`, `percentile`.\n"
                },
                "crossOrgUuids": {
                    "type": "string",
                    "description": "The source organization UUID for cross organization queries. Feature in Private Beta.\n"
                },
                "dataSource": {
                    "type": "string",
                    "description": "The data source for process queries. Valid values are `process`, `container`.\n"
                },
                "isNormalizedCpu": {
                    "type": "boolean",
                    "description": "Whether to normalize the CPU percentages.\n"
                },
                "limit": {
                    "type": "integer",
                    "description": "The number of hits to return.\n"
                },
                "metric": {
                    "type": "string",
                    "description": "The process metric name.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of query for use in formulas.\n"
                },
                "sort": {
                    "type": "string",
                    "description": "The direction of the sort. Valid values are `asc`, `desc`. Defaults to `\"desc\"`.\n"
                },
                "tagFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "An array of tags to filter by.\n"
                },
                "textFilter": {
                    "type": "string",
                    "description": "The text to use as a filter.\n"
                }
            },
            "type": "object",
            "required": [
                "dataSource",
                "metric",
                "name"
            ]
        },
        "datadog:index/DashboardWidgetScatterplotDefinitionRequestScatterplotTableQuerySloQuery:DashboardWidgetScatterplotDefinitionRequestScatterplotTableQuerySloQuery": {
            "properties": {
                "additionalQueryFilters": {
                    "type": "string",
                    "description": "Additional filters applied to the SLO query.\n"
                },
                "crossOrgUuids": {
                    "type": "string",
                    "description": "The source organization UUID for cross organization queries. Feature in Private Beta.\n"
                },
                "dataSource": {
                    "type": "string",
                    "description": "The data source for SLO queries. Valid values are `slo`.\n"
                },
                "groupMode": {
                    "type": "string",
                    "description": "Group mode to query measures. Valid values are `overall`, `components`. Defaults to `\"overall\"`.\n"
                },
                "measure": {
                    "type": "string",
                    "description": "SLO measures queries. Valid values are `good_events`, `bad_events`, `slo_status`, `error_budget_remaining`, `burn_rate`, `error_budget_burndown`.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of query for use in formulas.\n"
                },
                "sloId": {
                    "type": "string",
                    "description": "ID of an SLO to query.\n"
                },
                "sloQueryType": {
                    "type": "string",
                    "description": "type of the SLO to query. Valid values are `metric`, `time_slice`. Defaults to `\"metric\"`.\n"
                }
            },
            "type": "object",
            "required": [
                "dataSource",
                "measure",
                "sloId"
            ]
        },
        "datadog:index/DashboardWidgetScatterplotDefinitionRequestX:DashboardWidgetScatterplotDefinitionRequestX": {
            "properties": {
                "aggregator": {
                    "type": "string",
                    "description": "Aggregator used for the request. Valid values are `avg`, `last`, `max`, `min`, `sum`, `percentile`.\n"
                },
                "apmQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetApmQuery:DashboardWidgetApmQuery",
                    "description": "The query to use for this widget.\n"
                },
                "logQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetLogQuery:DashboardWidgetLogQuery",
                    "description": "The query to use for this widget.\n"
                },
                "processQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetScatterplotDefinitionRequestXProcessQuery:DashboardWidgetScatterplotDefinitionRequestXProcessQuery",
                    "description": "The process query to use in the widget. The structure of this block is described below.\n"
                },
                "q": {
                    "type": "string",
                    "description": "The metric query to use for this widget.\n"
                },
                "rumQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetRumQuery:DashboardWidgetRumQuery",
                    "description": "The query to use for this widget.\n"
                },
                "securityQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetSecurityQuery:DashboardWidgetSecurityQuery",
                    "description": "The query to use for this widget.\n"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetScatterplotDefinitionRequestXProcessQuery:DashboardWidgetScatterplotDefinitionRequestXProcessQuery": {
            "properties": {
                "filterBies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of processes.\n"
                },
                "limit": {
                    "type": "integer",
                    "description": "The max number of items in the filter list.\n"
                },
                "metric": {
                    "type": "string",
                    "description": "Your chosen metric.\n"
                },
                "searchBy": {
                    "type": "string",
                    "description": "Your chosen search term.\n"
                }
            },
            "type": "object",
            "required": [
                "metric"
            ]
        },
        "datadog:index/DashboardWidgetScatterplotDefinitionRequestY:DashboardWidgetScatterplotDefinitionRequestY": {
            "properties": {
                "aggregator": {
                    "type": "string",
                    "description": "Aggregator used for the request. Valid values are `avg`, `last`, `max`, `min`, `sum`, `percentile`.\n"
                },
                "apmQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetApmQuery:DashboardWidgetApmQuery",
                    "description": "The query to use for this widget.\n"
                },
                "logQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetLogQuery:DashboardWidgetLogQuery",
                    "description": "The query to use for this widget.\n"
                },
                "processQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetScatterplotDefinitionRequestYProcessQuery:DashboardWidgetScatterplotDefinitionRequestYProcessQuery",
                    "description": "The process query to use in the widget. The structure of this block is described below.\n"
                },
                "q": {
                    "type": "string",
                    "description": "The metric query to use for this widget.\n"
                },
                "rumQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetRumQuery:DashboardWidgetRumQuery",
                    "description": "The query to use for this widget.\n"
                },
                "securityQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetSecurityQuery:DashboardWidgetSecurityQuery",
                    "description": "The query to use for this widget.\n"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetScatterplotDefinitionRequestYProcessQuery:DashboardWidgetScatterplotDefinitionRequestYProcessQuery": {
            "properties": {
                "filterBies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of processes.\n"
                },
                "limit": {
                    "type": "integer",
                    "description": "The max number of items in the filter list.\n"
                },
                "metric": {
                    "type": "string",
                    "description": "Your chosen metric.\n"
                },
                "searchBy": {
                    "type": "string",
                    "description": "Your chosen search term.\n"
                }
            },
            "type": "object",
            "required": [
                "metric"
            ]
        },
        "datadog:index/DashboardWidgetScatterplotDefinitionXaxis:DashboardWidgetScatterplotDefinitionXaxis": {
            "properties": {
                "includeZero": {
                    "type": "boolean",
                    "description": "Always include zero or fit the axis to the data range.\n"
                },
                "label": {
                    "type": "string",
                    "description": "The label of the axis to display on the graph.\n"
                },
                "max": {
                    "type": "string",
                    "description": "Specify the maximum value to show on the Y-axis.\n"
                },
                "min": {
                    "type": "string",
                    "description": "Specify the minimum value to show on the Y-axis.\n"
                },
                "scale": {
                    "type": "string",
                    "description": "Specify the scale type, options: `linear`, `log`, `pow`, `sqrt`.\n"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetScatterplotDefinitionYaxis:DashboardWidgetScatterplotDefinitionYaxis": {
            "properties": {
                "includeZero": {
                    "type": "boolean",
                    "description": "Always include zero or fit the axis to the data range.\n"
                },
                "label": {
                    "type": "string",
                    "description": "The label of the axis to display on the graph.\n"
                },
                "max": {
                    "type": "string",
                    "description": "Specify the maximum value to show on the Y-axis.\n"
                },
                "min": {
                    "type": "string",
                    "description": "Specify the minimum value to show on the Y-axis.\n"
                },
                "scale": {
                    "type": "string",
                    "description": "Specify the scale type, options: `linear`, `log`, `pow`, `sqrt`.\n"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetSecurityQuery:DashboardWidgetSecurityQuery": {
            "properties": {
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetSecurityQueryComputeQuery:DashboardWidgetSecurityQueryComputeQuery",
                    "description": "`compute_query` or `multi_compute` is required. The map keys are listed below.\n"
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetSecurityQueryGroupBy:DashboardWidgetSecurityQueryGroupBy"
                    },
                    "description": "Multiple `group_by` blocks are allowed using the structure below.\n"
                },
                "index": {
                    "type": "string",
                    "description": "The name of the index to query.\n"
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetSecurityQueryMultiCompute:DashboardWidgetSecurityQueryMultiCompute"
                    },
                    "description": "`compute_query` or `multi_compute` is required. Multiple `multi_compute` blocks are allowed using the structure below.\n"
                },
                "searchQuery": {
                    "type": "string",
                    "description": "The search query to use.\n"
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetSecurityQueryComputeQuery:DashboardWidgetSecurityQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "The aggregation method.\n"
                },
                "facet": {
                    "type": "string",
                    "description": "The facet name.\n"
                },
                "interval": {
                    "type": "integer",
                    "description": "Define the time interval in seconds.\n"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetSecurityQueryGroupBy:DashboardWidgetSecurityQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "description": "The facet name.\n"
                },
                "limit": {
                    "type": "integer",
                    "description": "The maximum number of items in the group.\n"
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetSecurityQueryGroupBySortQuery:DashboardWidgetSecurityQueryGroupBySortQuery",
                    "description": "A list of exactly one element describing the sort query to use.\n"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetSecurityQueryGroupBySortQuery:DashboardWidgetSecurityQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "The aggregation method.\n"
                },
                "facet": {
                    "type": "string",
                    "description": "The facet name.\n"
                },
                "order": {
                    "type": "string",
                    "description": "Widget sorting methods. Valid values are `asc`, `desc`.\n"
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetSecurityQueryMultiCompute:DashboardWidgetSecurityQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "The aggregation method.\n"
                },
                "facet": {
                    "type": "string",
                    "description": "The facet name.\n"
                },
                "interval": {
                    "type": "integer",
                    "description": "Define the time interval in seconds.\n"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetServiceLevelObjectiveDefinition:DashboardWidgetServiceLevelObjectiveDefinition": {
            "properties": {
                "additionalQueryFilters": {
                    "type": "string",
                    "description": "Additional filters applied to the SLO query.\n"
                },
                "globalTimeTarget": {
                    "type": "string",
                    "description": "The global time target of the widget.\n"
                },
                "showErrorBudget": {
                    "type": "boolean",
                    "description": "Whether to show the error budget or not.\n"
                },
                "sloId": {
                    "type": "string",
                    "description": "The ID of the service level objective used by the widget.\n"
                },
                "timeWindows": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of time windows to display in the widget. Valid values are `7d`, `30d`, `90d`, `week_to_date`, `previous_week`, `month_to_date`, `previous_month`, `global_time`.\n"
                },
                "title": {
                    "type": "string",
                    "description": "The title of the widget.\n"
                },
                "titleAlign": {
                    "type": "string",
                    "description": "The alignment of the widget's title. Valid values are `center`, `left`, `right`.\n"
                },
                "titleSize": {
                    "type": "string",
                    "description": "The size of the widget's title (defaults to 16).\n"
                },
                "viewMode": {
                    "type": "string",
                    "description": "The view mode for the widget. Valid values are `overall`, `component`, `both`.\n"
                },
                "viewType": {
                    "type": "string",
                    "description": "The type of view to use when displaying the widget. Only `detail` is supported.\n"
                }
            },
            "type": "object",
            "required": [
                "sloId",
                "timeWindows",
                "viewMode",
                "viewType"
            ]
        },
        "datadog:index/DashboardWidgetServicemapDefinition:DashboardWidgetServicemapDefinition": {
            "properties": {
                "customLinks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetServicemapDefinitionCustomLink:DashboardWidgetServicemapDefinitionCustomLink"
                    },
                    "description": "A nested block describing a custom link. Multiple `custom_link` blocks are allowed using the structure below.\n"
                },
                "filters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Your environment and primary tag (or `*` if enabled for your account).\n"
                },
                "service": {
                    "type": "string",
                    "description": "The ID of the service to map.\n"
                },
                "title": {
                    "type": "string",
                    "description": "The title of the widget.\n"
                },
                "titleAlign": {
                    "type": "string",
                    "description": "The alignment of the widget's title. Valid values are `center`, `left`, `right`.\n"
                },
                "titleSize": {
                    "type": "string",
                    "description": "The size of the widget's title (defaults to 16).\n"
                }
            },
            "type": "object",
            "required": [
                "filters",
                "service"
            ]
        },
        "datadog:index/DashboardWidgetServicemapDefinitionCustomLink:DashboardWidgetServicemapDefinitionCustomLink": {
            "properties": {
                "isHidden": {
                    "type": "boolean",
                    "description": "The flag for toggling context menu link visibility.\n"
                },
                "label": {
                    "type": "string",
                    "description": "The label for the custom link URL.\n"
                },
                "link": {
                    "type": "string",
                    "description": "The URL of the custom link.\n"
                },
                "overrideLabel": {
                    "type": "string",
                    "description": "The label ID that refers to a context menu link item. When `override_label` is provided, the client request omits the label field.\n"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetSloListDefinition:DashboardWidgetSloListDefinition": {
            "properties": {
                "request": {
                    "$ref": "#/types/datadog:index/DashboardWidgetSloListDefinitionRequest:DashboardWidgetSloListDefinitionRequest",
                    "description": "A nested block describing the request to use when displaying the widget. Exactly one `request` block is allowed.\n"
                },
                "title": {
                    "type": "string",
                    "description": "The title of the widget.\n"
                },
                "titleAlign": {
                    "type": "string",
                    "description": "The alignment of the widget's title. Valid values are `center`, `left`, `right`.\n"
                },
                "titleSize": {
                    "type": "string",
                    "description": "The size of the widget's title (defaults to 16).\n"
                }
            },
            "type": "object",
            "required": [
                "request"
            ]
        },
        "datadog:index/DashboardWidgetSloListDefinitionRequest:DashboardWidgetSloListDefinitionRequest": {
            "properties": {
                "query": {
                    "$ref": "#/types/datadog:index/DashboardWidgetSloListDefinitionRequestQuery:DashboardWidgetSloListDefinitionRequestQuery",
                    "description": "Updated SLO List widget.\n"
                },
                "requestType": {
                    "type": "string",
                    "description": "The request type for the SLO List request. Valid values are `slo_list`.\n"
                }
            },
            "type": "object",
            "required": [
                "query",
                "requestType"
            ]
        },
        "datadog:index/DashboardWidgetSloListDefinitionRequestQuery:DashboardWidgetSloListDefinitionRequestQuery": {
            "properties": {
                "limit": {
                    "type": "integer",
                    "description": "Maximum number of results to display in the table. Defaults to `100`.\n"
                },
                "queryString": {
                    "type": "string",
                    "description": "Widget query.\n"
                },
                "sort": {
                    "$ref": "#/types/datadog:index/DashboardWidgetSloListDefinitionRequestQuerySort:DashboardWidgetSloListDefinitionRequestQuerySort",
                    "description": "The facet and order to sort the data, for example: `{\"column\": \"status.sli\", \"order\": \"desc\"}`.\n"
                }
            },
            "type": "object",
            "required": [
                "queryString"
            ]
        },
        "datadog:index/DashboardWidgetSloListDefinitionRequestQuerySort:DashboardWidgetSloListDefinitionRequestQuerySort": {
            "properties": {
                "column": {
                    "type": "string",
                    "description": "The facet path for the column.\n"
                },
                "order": {
                    "type": "string",
                    "description": "Widget sorting methods. Valid values are `asc`, `desc`.\n"
                }
            },
            "type": "object",
            "required": [
                "column",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetSplitGraphDefinition:DashboardWidgetSplitGraphDefinition": {
            "properties": {
                "hasUniformYAxes": {
                    "type": "boolean",
                    "description": "Normalize y axes across graphs.\n"
                },
                "liveSpan": {
                    "type": "string",
                    "description": "The timeframe to use when displaying the widget. Valid values are `1m`, `5m`, `10m`, `15m`, `30m`, `1h`, `4h`, `1d`, `2d`, `1w`, `1mo`, `3mo`, `6mo`, `week_to_date`, `month_to_date`, `1y`, `alert`.\n"
                },
                "size": {
                    "type": "string",
                    "description": "Size of the individual graphs in the split.\n"
                },
                "sourceWidgetDefinition": {
                    "$ref": "#/types/datadog:index/DashboardWidgetSplitGraphDefinitionSourceWidgetDefinition:DashboardWidgetSplitGraphDefinitionSourceWidgetDefinition",
                    "description": "The original widget we are splitting on.\n"
                },
                "splitConfig": {
                    "$ref": "#/types/datadog:index/DashboardWidgetSplitGraphDefinitionSplitConfig:DashboardWidgetSplitGraphDefinitionSplitConfig",
                    "description": "Encapsulates all user choices about how to split a graph.\n"
                },
                "title": {
                    "type": "string",
                    "description": "The title of the widget.\n"
                }
            },
            "type": "object",
            "required": [
                "size",
                "sourceWidgetDefinition",
                "splitConfig"
            ]
        },
        "datadog:index/DashboardWidgetSplitGraphDefinitionSourceWidgetDefinition:DashboardWidgetSplitGraphDefinitionSourceWidgetDefinition": {
            "properties": {
                "changeDefinition": {
                    "$ref": "#/types/datadog:index/DashboardWidgetChangeDefinition:DashboardWidgetChangeDefinition",
                    "description": "The definition for a Change widget.\n"
                },
                "geomapDefinition": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGeomapDefinition:DashboardWidgetGeomapDefinition",
                    "description": "The definition for a Geomap widget.\n"
                },
                "queryTableDefinition": {
                    "$ref": "#/types/datadog:index/DashboardWidgetQueryTableDefinition:DashboardWidgetQueryTableDefinition",
                    "description": "The definition for a Query Table widget.\n"
                },
                "queryValueDefinition": {
                    "$ref": "#/types/datadog:index/DashboardWidgetQueryValueDefinition:DashboardWidgetQueryValueDefinition",
                    "description": "The definition for a Query Value widget.\n"
                },
                "scatterplotDefinition": {
                    "$ref": "#/types/datadog:index/DashboardWidgetScatterplotDefinition:DashboardWidgetScatterplotDefinition",
                    "description": "The definition for a Scatterplot widget.\n"
                },
                "sunburstDefinition": {
                    "$ref": "#/types/datadog:index/DashboardWidgetSunburstDefinition:DashboardWidgetSunburstDefinition",
                    "description": "The definition for a Sunburst widget.\n"
                },
                "timeseriesDefinition": {
                    "$ref": "#/types/datadog:index/DashboardWidgetTimeseriesDefinition:DashboardWidgetTimeseriesDefinition",
                    "description": "The definition for a Timeseries widget.\n"
                },
                "toplistDefinition": {
                    "$ref": "#/types/datadog:index/DashboardWidgetToplistDefinition:DashboardWidgetToplistDefinition",
                    "description": "The definition for a Toplist widget.\n"
                },
                "treemapDefinition": {
                    "$ref": "#/types/datadog:index/DashboardWidgetTreemapDefinition:DashboardWidgetTreemapDefinition",
                    "description": "The definition for a Treemap widget.\n"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetSplitGraphDefinitionSplitConfig:DashboardWidgetSplitGraphDefinitionSplitConfig": {
            "properties": {
                "limit": {
                    "type": "integer",
                    "description": "Maximum number of graphs to display in the widget.\n"
                },
                "sort": {
                    "$ref": "#/types/datadog:index/DashboardWidgetSplitGraphDefinitionSplitConfigSort:DashboardWidgetSplitGraphDefinitionSplitConfigSort",
                    "description": "Controls the order in which graphs appear in the split.\n"
                },
                "splitDimensions": {
                    "$ref": "#/types/datadog:index/DashboardWidgetSplitGraphDefinitionSplitConfigSplitDimensions:DashboardWidgetSplitGraphDefinitionSplitConfigSplitDimensions",
                    "description": "The property by which the graph splits\n"
                },
                "staticSplits": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetSplitGraphDefinitionSplitConfigStaticSplit:DashboardWidgetSplitGraphDefinitionSplitConfigStaticSplit"
                    },
                    "description": "The property by which the graph splits\n"
                }
            },
            "type": "object",
            "required": [
                "sort",
                "splitDimensions"
            ]
        },
        "datadog:index/DashboardWidgetSplitGraphDefinitionSplitConfigSort:DashboardWidgetSplitGraphDefinitionSplitConfigSort": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:index/DashboardWidgetSplitGraphDefinitionSplitConfigSortCompute:DashboardWidgetSplitGraphDefinitionSplitConfigSortCompute",
                    "description": "Defines the metric and aggregation used as the sort value\n"
                },
                "order": {
                    "type": "string",
                    "description": "Widget sorting methods. Valid values are `asc`, `desc`.\n"
                }
            },
            "type": "object",
            "required": [
                "order"
            ]
        },
        "datadog:index/DashboardWidgetSplitGraphDefinitionSplitConfigSortCompute:DashboardWidgetSplitGraphDefinitionSplitConfigSortCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "How to aggregate the sort metric for the purposes of ordering.\n"
                },
                "metric": {
                    "type": "string",
                    "description": "The metric to use for sorting graphs.\n"
                }
            },
            "type": "object",
            "required": [
                "metric"
            ]
        },
        "datadog:index/DashboardWidgetSplitGraphDefinitionSplitConfigSplitDimensions:DashboardWidgetSplitGraphDefinitionSplitConfigSplitDimensions": {
            "properties": {
                "oneGraphPer": {
                    "type": "string",
                    "description": "The system interprets this attribute differently depending on the data source of the query being split. For metrics, it's a tag. For the events platform, it's an attribute or tag.\n"
                }
            },
            "type": "object",
            "required": [
                "oneGraphPer"
            ]
        },
        "datadog:index/DashboardWidgetSplitGraphDefinitionSplitConfigStaticSplit:DashboardWidgetSplitGraphDefinitionSplitConfigStaticSplit": {
            "properties": {
                "splitVectors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetSplitGraphDefinitionSplitConfigStaticSplitSplitVector:DashboardWidgetSplitGraphDefinitionSplitConfigStaticSplitSplitVector"
                    },
                    "description": "The split graph list contains a graph for each value of the split dimension.\n"
                }
            },
            "type": "object",
            "required": [
                "splitVectors"
            ]
        },
        "datadog:index/DashboardWidgetSplitGraphDefinitionSplitConfigStaticSplitSplitVector:DashboardWidgetSplitGraphDefinitionSplitConfigStaticSplitSplitVector": {
            "properties": {
                "tagKey": {
                    "type": "string"
                },
                "tagValues": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "type": "object",
            "required": [
                "tagKey",
                "tagValues"
            ]
        },
        "datadog:index/DashboardWidgetSunburstDefinition:DashboardWidgetSunburstDefinition": {
            "properties": {
                "customLinks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetSunburstDefinitionCustomLink:DashboardWidgetSunburstDefinitionCustomLink"
                    },
                    "description": "Nested block describing a custom link. Multiple `custom_link` blocks are allowed with the structure below.\n"
                },
                "hideTotal": {
                    "type": "boolean",
                    "description": "Whether or not to show the total value in the widget.\n"
                },
                "legendInline": {
                    "$ref": "#/types/datadog:index/DashboardWidgetSunburstDefinitionLegendInline:DashboardWidgetSunburstDefinitionLegendInline",
                    "description": "Used to configure the inline legend. Cannot be used in conjunction with legend*table.\n"
                },
                "legendTable": {
                    "$ref": "#/types/datadog:index/DashboardWidgetSunburstDefinitionLegendTable:DashboardWidgetSunburstDefinitionLegendTable",
                    "description": "Used to configure the table legend. Cannot be used in conjunction with legend*inline.\n"
                },
                "liveSpan": {
                    "type": "string",
                    "description": "The timeframe to use when displaying the widget. Valid values are `1m`, `5m`, `10m`, `15m`, `30m`, `1h`, `4h`, `1d`, `2d`, `1w`, `1mo`, `3mo`, `6mo`, `week_to_date`, `month_to_date`, `1y`, `alert`.\n"
                },
                "requests": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetSunburstDefinitionRequest:DashboardWidgetSunburstDefinitionRequest"
                    },
                    "description": "Nested block describing the request to use when displaying the widget. Multiple `request` blocks are allowed with the structure below (exactly one of `q`, `log_query` or `rum_query` is required within the `request` block).\n"
                },
                "title": {
                    "type": "string",
                    "description": "The title of the widget.\n"
                },
                "titleAlign": {
                    "type": "string",
                    "description": "The alignment of the widget's title. One of `left`, `center`, or `right`. Valid values are `center`, `left`, `right`.\n"
                },
                "titleSize": {
                    "type": "string",
                    "description": "The size of the widget's title. Default is 16.\n"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetSunburstDefinitionCustomLink:DashboardWidgetSunburstDefinitionCustomLink": {
            "properties": {
                "isHidden": {
                    "type": "boolean",
                    "description": "The flag for toggling context menu link visibility.\n"
                },
                "label": {
                    "type": "string",
                    "description": "The label for the custom link URL.\n"
                },
                "link": {
                    "type": "string",
                    "description": "The URL of the custom link.\n"
                },
                "overrideLabel": {
                    "type": "string",
                    "description": "The label ID that refers to a context menu link item. When `override_label` is provided, the client request omits the label field.\n"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetSunburstDefinitionLegendInline:DashboardWidgetSunburstDefinitionLegendInline": {
            "properties": {
                "hidePercent": {
                    "type": "boolean",
                    "description": "Whether to hide the percentages of the groups.\n"
                },
                "hideValue": {
                    "type": "boolean",
                    "description": "Whether to hide the values of the groups.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The type of legend (inline or automatic). Valid values are `inline`, `automatic`.\n"
                }
            },
            "type": "object",
            "required": [
                "type"
            ]
        },
        "datadog:index/DashboardWidgetSunburstDefinitionLegendTable:DashboardWidgetSunburstDefinitionLegendTable": {
            "properties": {
                "type": {
                    "type": "string",
                    "description": "The type of legend (table or none). Valid values are `table`, `none`.\n"
                }
            },
            "type": "object",
            "required": [
                "type"
            ]
        },
        "datadog:index/DashboardWidgetSunburstDefinitionRequest:DashboardWidgetSunburstDefinitionRequest": {
            "properties": {
                "apmQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetApmQuery:DashboardWidgetApmQuery",
                    "description": "The query to use for this widget.\n"
                },
                "auditQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetSunburstDefinitionRequestAuditQuery:DashboardWidgetSunburstDefinitionRequestAuditQuery",
                    "description": "The query to use for this widget.\n"
                },
                "formulas": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetSunburstDefinitionRequestFormula:DashboardWidgetSunburstDefinitionRequestFormula"
                    }
                },
                "logQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetLogQuery:DashboardWidgetLogQuery",
                    "description": "The query to use for this widget.\n"
                },
                "networkQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetSunburstDefinitionRequestNetworkQuery:DashboardWidgetSunburstDefinitionRequestNetworkQuery",
                    "description": "The query to use for this widget.\n"
                },
                "processQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetSunburstDefinitionRequestProcessQuery:DashboardWidgetSunburstDefinitionRequestProcessQuery",
                    "description": "The process query to use in the widget. The structure of this block is described below.\n"
                },
                "q": {
                    "type": "string",
                    "description": "The metric query to use for this widget.\n"
                },
                "queries": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetSunburstDefinitionRequestQuery:DashboardWidgetSunburstDefinitionRequestQuery"
                    }
                },
                "rumQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetRumQuery:DashboardWidgetRumQuery",
                    "description": "The query to use for this widget.\n"
                },
                "securityQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetSecurityQuery:DashboardWidgetSecurityQuery",
                    "description": "The query to use for this widget.\n"
                },
                "style": {
                    "$ref": "#/types/datadog:index/DashboardWidgetSunburstDefinitionRequestStyle:DashboardWidgetSunburstDefinitionRequestStyle",
                    "description": "Define style for the widget's request.\n"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetSunburstDefinitionRequestAuditQuery:DashboardWidgetSunburstDefinitionRequestAuditQuery": {
            "properties": {
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetSunburstDefinitionRequestAuditQueryComputeQuery:DashboardWidgetSunburstDefinitionRequestAuditQueryComputeQuery",
                    "description": "`compute_query` or `multi_compute` is required. The map keys are listed below.\n"
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetSunburstDefinitionRequestAuditQueryGroupBy:DashboardWidgetSunburstDefinitionRequestAuditQueryGroupBy"
                    },
                    "description": "Multiple `group_by` blocks are allowed using the structure below.\n"
                },
                "index": {
                    "type": "string",
                    "description": "The name of the index to query.\n"
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetSunburstDefinitionRequestAuditQueryMultiCompute:DashboardWidgetSunburstDefinitionRequestAuditQueryMultiCompute"
                    },
                    "description": "`compute_query` or `multi_compute` is required. Multiple `multi_compute` blocks are allowed using the structure below.\n"
                },
                "searchQuery": {
                    "type": "string",
                    "description": "The search query to use.\n"
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetSunburstDefinitionRequestAuditQueryComputeQuery:DashboardWidgetSunburstDefinitionRequestAuditQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "The aggregation method.\n"
                },
                "facet": {
                    "type": "string",
                    "description": "The facet name.\n"
                },
                "interval": {
                    "type": "integer",
                    "description": "Define the time interval in seconds.\n"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetSunburstDefinitionRequestAuditQueryGroupBy:DashboardWidgetSunburstDefinitionRequestAuditQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "description": "The facet name.\n"
                },
                "limit": {
                    "type": "integer",
                    "description": "The maximum number of items in the group.\n"
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetSunburstDefinitionRequestAuditQueryGroupBySortQuery:DashboardWidgetSunburstDefinitionRequestAuditQueryGroupBySortQuery",
                    "description": "A list of exactly one element describing the sort query to use.\n"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetSunburstDefinitionRequestAuditQueryGroupBySortQuery:DashboardWidgetSunburstDefinitionRequestAuditQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "The aggregation method.\n"
                },
                "facet": {
                    "type": "string",
                    "description": "The facet name.\n"
                },
                "order": {
                    "type": "string",
                    "description": "Widget sorting methods. Valid values are `asc`, `desc`.\n"
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetSunburstDefinitionRequestAuditQueryMultiCompute:DashboardWidgetSunburstDefinitionRequestAuditQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "The aggregation method.\n"
                },
                "facet": {
                    "type": "string",
                    "description": "The facet name.\n"
                },
                "interval": {
                    "type": "integer",
                    "description": "Define the time interval in seconds.\n"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetSunburstDefinitionRequestFormula:DashboardWidgetSunburstDefinitionRequestFormula": {
            "properties": {
                "alias": {
                    "type": "string",
                    "description": "An expression alias.\n"
                },
                "cellDisplayMode": {
                    "type": "string",
                    "description": "A list of display modes for each table cell. Valid values are `number`, `bar`.\n"
                },
                "conditionalFormats": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetSunburstDefinitionRequestFormulaConditionalFormat:DashboardWidgetSunburstDefinitionRequestFormulaConditionalFormat"
                    },
                    "description": "Conditional formats allow you to set the color of your widget content or background depending on the rule applied to your data. Multiple `conditional_formats` blocks are allowed using the structure below.\n"
                },
                "formulaExpression": {
                    "type": "string",
                    "description": "A string expression built from queries, formulas, and functions.\n"
                },
                "limit": {
                    "$ref": "#/types/datadog:index/DashboardWidgetSunburstDefinitionRequestFormulaLimit:DashboardWidgetSunburstDefinitionRequestFormulaLimit",
                    "description": "The options for limiting results returned.\n"
                },
                "style": {
                    "$ref": "#/types/datadog:index/DashboardWidgetSunburstDefinitionRequestFormulaStyle:DashboardWidgetSunburstDefinitionRequestFormulaStyle",
                    "description": "Styling options for widget formulas.\n"
                }
            },
            "type": "object",
            "required": [
                "formulaExpression"
            ]
        },
        "datadog:index/DashboardWidgetSunburstDefinitionRequestFormulaConditionalFormat:DashboardWidgetSunburstDefinitionRequestFormulaConditionalFormat": {
            "properties": {
                "comparator": {
                    "type": "string",
                    "description": "The comparator to use. Valid values are `=`, `\u003e`, `\u003e=`, `\u003c`, `\u003c=`.\n"
                },
                "customBgColor": {
                    "type": "string",
                    "description": "The color palette to apply to the background, same values available as palette.\n"
                },
                "customFgColor": {
                    "type": "string",
                    "description": "The color palette to apply to the foreground, same values available as palette.\n"
                },
                "hideValue": {
                    "type": "boolean",
                    "description": "Setting this to True hides values.\n"
                },
                "imageUrl": {
                    "type": "string",
                    "description": "Displays an image as the background.\n"
                },
                "metric": {
                    "type": "string",
                    "description": "The metric from the request to correlate with this conditional format.\n"
                },
                "palette": {
                    "type": "string",
                    "description": "The color palette to apply. Valid values are `blue`, `custom_bg`, `custom_image`, `custom_text`, `gray_on_white`, `grey`, `green`, `orange`, `red`, `red_on_white`, `white_on_gray`, `white_on_green`, `green_on_white`, `white_on_red`, `white_on_yellow`, `yellow_on_white`, `black_on_light_yellow`, `black_on_light_green`, `black_on_light_red`.\n"
                },
                "timeframe": {
                    "type": "string",
                    "description": "Defines the displayed timeframe.\n"
                },
                "value": {
                    "type": "number",
                    "description": "A value for the comparator.\n"
                }
            },
            "type": "object",
            "required": [
                "comparator",
                "palette",
                "value"
            ]
        },
        "datadog:index/DashboardWidgetSunburstDefinitionRequestFormulaLimit:DashboardWidgetSunburstDefinitionRequestFormulaLimit": {
            "properties": {
                "count": {
                    "type": "integer",
                    "description": "The number of results to return.\n"
                },
                "order": {
                    "type": "string",
                    "description": "The direction of the sort. Valid values are `asc`, `desc`. Defaults to `\"desc\"`.\n"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetSunburstDefinitionRequestFormulaStyle:DashboardWidgetSunburstDefinitionRequestFormulaStyle": {
            "properties": {
                "palette": {
                    "type": "string",
                    "description": "The color palette used to display the formula. A guide to the available color palettes can be found at https://docs.datadoghq.com/dashboards/guide/widget_colors.\n"
                },
                "paletteIndex": {
                    "type": "integer",
                    "description": "Index specifying which color to use within the palette.\n"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetSunburstDefinitionRequestNetworkQuery:DashboardWidgetSunburstDefinitionRequestNetworkQuery": {
            "properties": {
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetSunburstDefinitionRequestNetworkQueryComputeQuery:DashboardWidgetSunburstDefinitionRequestNetworkQueryComputeQuery",
                    "description": "`compute_query` or `multi_compute` is required. The map keys are listed below.\n"
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetSunburstDefinitionRequestNetworkQueryGroupBy:DashboardWidgetSunburstDefinitionRequestNetworkQueryGroupBy"
                    },
                    "description": "Multiple `group_by` blocks are allowed using the structure below.\n"
                },
                "index": {
                    "type": "string",
                    "description": "The name of the index to query.\n"
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetSunburstDefinitionRequestNetworkQueryMultiCompute:DashboardWidgetSunburstDefinitionRequestNetworkQueryMultiCompute"
                    },
                    "description": "`compute_query` or `multi_compute` is required. Multiple `multi_compute` blocks are allowed using the structure below.\n"
                },
                "searchQuery": {
                    "type": "string",
                    "description": "The search query to use.\n"
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetSunburstDefinitionRequestNetworkQueryComputeQuery:DashboardWidgetSunburstDefinitionRequestNetworkQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "The aggregation method.\n"
                },
                "facet": {
                    "type": "string",
                    "description": "The facet name.\n"
                },
                "interval": {
                    "type": "integer",
                    "description": "Define the time interval in seconds.\n"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetSunburstDefinitionRequestNetworkQueryGroupBy:DashboardWidgetSunburstDefinitionRequestNetworkQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "description": "The facet name.\n"
                },
                "limit": {
                    "type": "integer",
                    "description": "The maximum number of items in the group.\n"
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetSunburstDefinitionRequestNetworkQueryGroupBySortQuery:DashboardWidgetSunburstDefinitionRequestNetworkQueryGroupBySortQuery",
                    "description": "A list of exactly one element describing the sort query to use.\n"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetSunburstDefinitionRequestNetworkQueryGroupBySortQuery:DashboardWidgetSunburstDefinitionRequestNetworkQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "The aggregation method.\n"
                },
                "facet": {
                    "type": "string",
                    "description": "The facet name.\n"
                },
                "order": {
                    "type": "string",
                    "description": "Widget sorting methods. Valid values are `asc`, `desc`.\n"
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetSunburstDefinitionRequestNetworkQueryMultiCompute:DashboardWidgetSunburstDefinitionRequestNetworkQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "The aggregation method.\n"
                },
                "facet": {
                    "type": "string",
                    "description": "The facet name.\n"
                },
                "interval": {
                    "type": "integer",
                    "description": "Define the time interval in seconds.\n"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetSunburstDefinitionRequestProcessQuery:DashboardWidgetSunburstDefinitionRequestProcessQuery": {
            "properties": {
                "filterBies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of processes.\n"
                },
                "limit": {
                    "type": "integer",
                    "description": "The max number of items in the filter list.\n"
                },
                "metric": {
                    "type": "string",
                    "description": "Your chosen metric.\n"
                },
                "searchBy": {
                    "type": "string",
                    "description": "Your chosen search term.\n"
                }
            },
            "type": "object",
            "required": [
                "metric"
            ]
        },
        "datadog:index/DashboardWidgetSunburstDefinitionRequestQuery:DashboardWidgetSunburstDefinitionRequestQuery": {
            "properties": {
                "apmDependencyStatsQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetSunburstDefinitionRequestQueryApmDependencyStatsQuery:DashboardWidgetSunburstDefinitionRequestQueryApmDependencyStatsQuery",
                    "description": "The APM Dependency Stats query using formulas and functions.\n"
                },
                "apmResourceStatsQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetSunburstDefinitionRequestQueryApmResourceStatsQuery:DashboardWidgetSunburstDefinitionRequestQueryApmResourceStatsQuery",
                    "description": "The APM Resource Stats query using formulas and functions.\n"
                },
                "cloudCostQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetSunburstDefinitionRequestQueryCloudCostQuery:DashboardWidgetSunburstDefinitionRequestQueryCloudCostQuery",
                    "description": "The Cloud Cost query using formulas and functions.\n"
                },
                "eventQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetSunburstDefinitionRequestQueryEventQuery:DashboardWidgetSunburstDefinitionRequestQueryEventQuery",
                    "description": "A timeseries formula and functions events query.\n"
                },
                "metricQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetSunburstDefinitionRequestQueryMetricQuery:DashboardWidgetSunburstDefinitionRequestQueryMetricQuery",
                    "description": "A timeseries formula and functions metrics query.\n"
                },
                "processQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetSunburstDefinitionRequestQueryProcessQuery:DashboardWidgetSunburstDefinitionRequestQueryProcessQuery",
                    "description": "The process query using formulas and functions.\n"
                },
                "sloQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetSunburstDefinitionRequestQuerySloQuery:DashboardWidgetSunburstDefinitionRequestQuerySloQuery",
                    "description": "The SLO query using formulas and functions.\n"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetSunburstDefinitionRequestQueryApmDependencyStatsQuery:DashboardWidgetSunburstDefinitionRequestQueryApmDependencyStatsQuery": {
            "properties": {
                "crossOrgUuids": {
                    "type": "string",
                    "description": "The source organization UUID for cross organization queries. Feature in Private Beta.\n"
                },
                "dataSource": {
                    "type": "string",
                    "description": "The data source for APM Dependency Stats queries. Valid values are `apm_dependency_stats`.\n"
                },
                "env": {
                    "type": "string",
                    "description": "APM environment.\n"
                },
                "isUpstream": {
                    "type": "boolean",
                    "description": "Determines whether stats for upstream or downstream dependencies should be queried.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of query for use in formulas.\n"
                },
                "operationName": {
                    "type": "string",
                    "description": "Name of operation on service.\n"
                },
                "primaryTagName": {
                    "type": "string",
                    "description": "The name of the second primary tag used within APM; required when `primary_tag_value` is specified. See https://docs.datadoghq.com/tracing/guide/setting*primary*tags*to*scope/#add-a-second-primary-tag-in-datadog.\n"
                },
                "primaryTagValue": {
                    "type": "string",
                    "description": "Filter APM data by the second primary tag. `primary_tag_name` must also be specified.\n"
                },
                "resourceName": {
                    "type": "string",
                    "description": "APM resource.\n"
                },
                "service": {
                    "type": "string",
                    "description": "APM service.\n"
                },
                "stat": {
                    "type": "string",
                    "description": "APM statistic. Valid values are `avg_duration`, `avg_root_duration`, `avg_spans_per_trace`, `error_rate`, `pct_exec_time`, `pct_of_traces`, `total_traces_count`.\n"
                }
            },
            "type": "object",
            "required": [
                "dataSource",
                "env",
                "name",
                "operationName",
                "resourceName",
                "service",
                "stat"
            ]
        },
        "datadog:index/DashboardWidgetSunburstDefinitionRequestQueryApmResourceStatsQuery:DashboardWidgetSunburstDefinitionRequestQueryApmResourceStatsQuery": {
            "properties": {
                "crossOrgUuids": {
                    "type": "string",
                    "description": "The source organization UUID for cross organization queries. Feature in Private Beta.\n"
                },
                "dataSource": {
                    "type": "string",
                    "description": "The data source for APM Resource Stats queries. Valid values are `apm_resource_stats`.\n"
                },
                "env": {
                    "type": "string",
                    "description": "APM environment.\n"
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Array of fields to group results by.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of query for use in formulas.\n"
                },
                "operationName": {
                    "type": "string",
                    "description": "Name of operation on service.\n"
                },
                "primaryTagName": {
                    "type": "string",
                    "description": "The name of the second primary tag used within APM; required when `primary_tag_value` is specified. See https://docs.datadoghq.com/tracing/guide/setting*primary*tags*to*scope/#add-a-second-primary-tag-in-datadog.\n"
                },
                "primaryTagValue": {
                    "type": "string",
                    "description": "Filter APM data by the second primary tag. `primary_tag_name` must also be specified.\n"
                },
                "resourceName": {
                    "type": "string",
                    "description": "APM resource.\n"
                },
                "service": {
                    "type": "string",
                    "description": "APM service.\n"
                },
                "stat": {
                    "type": "string",
                    "description": "APM statistic. Valid values are `errors`, `error_rate`, `hits`, `latency_avg`, `latency_distribution`, `latency_max`, `latency_p50`, `latency_p75`, `latency_p90`, `latency_p95`, `latency_p99`.\n"
                }
            },
            "type": "object",
            "required": [
                "dataSource",
                "env",
                "name",
                "service",
                "stat"
            ]
        },
        "datadog:index/DashboardWidgetSunburstDefinitionRequestQueryCloudCostQuery:DashboardWidgetSunburstDefinitionRequestQueryCloudCostQuery": {
            "properties": {
                "aggregator": {
                    "type": "string",
                    "description": "The aggregation methods available for cloud cost queries. Valid values are `avg`, `last`, `max`, `min`, `sum`, `percentile`.\n"
                },
                "crossOrgUuids": {
                    "type": "string",
                    "description": "The source organization UUID for cross organization queries. Feature in Private Beta.\n"
                },
                "dataSource": {
                    "type": "string",
                    "description": "The data source for cloud cost queries. Valid values are `cloud_cost`.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the query for use in formulas.\n"
                },
                "query": {
                    "type": "string",
                    "description": "The cloud cost query definition.\n"
                }
            },
            "type": "object",
            "required": [
                "dataSource",
                "name",
                "query"
            ]
        },
        "datadog:index/DashboardWidgetSunburstDefinitionRequestQueryEventQuery:DashboardWidgetSunburstDefinitionRequestQueryEventQuery": {
            "properties": {
                "computes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetSunburstDefinitionRequestQueryEventQueryCompute:DashboardWidgetSunburstDefinitionRequestQueryEventQueryCompute"
                    },
                    "description": "The compute options.\n"
                },
                "crossOrgUuids": {
                    "type": "string",
                    "description": "The source organization UUID for cross organization queries. Feature in Private Beta.\n"
                },
                "dataSource": {
                    "type": "string",
                    "description": "The data source for event platform-based queries. Valid values are `logs`, `spans`, `network`, `rum`, `security_signals`, `profiles`, `audit`, `events`, `ci_tests`, `ci_pipelines`, `incident_analytics`.\n"
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetSunburstDefinitionRequestQueryEventQueryGroupBy:DashboardWidgetSunburstDefinitionRequestQueryEventQueryGroupBy"
                    },
                    "description": "Group by options.\n"
                },
                "indexes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "An array of index names to query in the stream.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of query for use in formulas.\n"
                },
                "search": {
                    "$ref": "#/types/datadog:index/DashboardWidgetSunburstDefinitionRequestQueryEventQuerySearch:DashboardWidgetSunburstDefinitionRequestQueryEventQuerySearch",
                    "description": "The search options.\n"
                },
                "storage": {
                    "type": "string",
                    "description": "Storage location (private beta).\n"
                }
            },
            "type": "object",
            "required": [
                "computes",
                "dataSource",
                "name"
            ]
        },
        "datadog:index/DashboardWidgetSunburstDefinitionRequestQueryEventQueryCompute:DashboardWidgetSunburstDefinitionRequestQueryEventQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "The aggregation methods for event platform queries. Valid values are `count`, `cardinality`, `median`, `pc75`, `pc90`, `pc95`, `pc98`, `pc99`, `sum`, `min`, `max`, `avg`.\n"
                },
                "interval": {
                    "type": "integer",
                    "description": "A time interval in milliseconds.\n"
                },
                "metric": {
                    "type": "string",
                    "description": "The measurable attribute to compute.\n"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetSunburstDefinitionRequestQueryEventQueryGroupBy:DashboardWidgetSunburstDefinitionRequestQueryEventQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "description": "The event facet.\n"
                },
                "limit": {
                    "type": "integer",
                    "description": "The number of groups to return.\n"
                },
                "sort": {
                    "$ref": "#/types/datadog:index/DashboardWidgetSunburstDefinitionRequestQueryEventQueryGroupBySort:DashboardWidgetSunburstDefinitionRequestQueryEventQueryGroupBySort",
                    "description": "The options for sorting group by results.\n"
                }
            },
            "type": "object",
            "required": [
                "facet"
            ]
        },
        "datadog:index/DashboardWidgetSunburstDefinitionRequestQueryEventQueryGroupBySort:DashboardWidgetSunburstDefinitionRequestQueryEventQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "The aggregation methods for the event platform queries. Valid values are `count`, `cardinality`, `median`, `pc75`, `pc90`, `pc95`, `pc98`, `pc99`, `sum`, `min`, `max`, `avg`.\n"
                },
                "metric": {
                    "type": "string",
                    "description": "The metric used for sorting group by results.\n"
                },
                "order": {
                    "type": "string",
                    "description": "Direction of sort. Valid values are `asc`, `desc`.\n"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetSunburstDefinitionRequestQueryEventQuerySearch:DashboardWidgetSunburstDefinitionRequestQueryEventQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "description": "The events search string.\n"
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/DashboardWidgetSunburstDefinitionRequestQueryMetricQuery:DashboardWidgetSunburstDefinitionRequestQueryMetricQuery": {
            "properties": {
                "aggregator": {
                    "type": "string",
                    "description": "The aggregation methods available for metrics queries. Valid values are `avg`, `min`, `max`, `sum`, `last`, `area`, `l2norm`, `percentile`.\n"
                },
                "crossOrgUuids": {
                    "type": "string",
                    "description": "The source organization UUID for cross organization queries. Feature in Private Beta.\n"
                },
                "dataSource": {
                    "type": "string",
                    "description": "The data source for metrics queries. Defaults to `\"metrics\"`.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the query for use in formulas.\n"
                },
                "query": {
                    "type": "string",
                    "description": "The metrics query definition.\n"
                }
            },
            "type": "object",
            "required": [
                "name",
                "query"
            ]
        },
        "datadog:index/DashboardWidgetSunburstDefinitionRequestQueryProcessQuery:DashboardWidgetSunburstDefinitionRequestQueryProcessQuery": {
            "properties": {
                "aggregator": {
                    "type": "string",
                    "description": "The aggregation methods available for metrics queries. Valid values are `avg`, `min`, `max`, `sum`, `last`, `area`, `l2norm`, `percentile`.\n"
                },
                "crossOrgUuids": {
                    "type": "string",
                    "description": "The source organization UUID for cross organization queries. Feature in Private Beta.\n"
                },
                "dataSource": {
                    "type": "string",
                    "description": "The data source for process queries. Valid values are `process`, `container`.\n"
                },
                "isNormalizedCpu": {
                    "type": "boolean",
                    "description": "Whether to normalize the CPU percentages.\n"
                },
                "limit": {
                    "type": "integer",
                    "description": "The number of hits to return.\n"
                },
                "metric": {
                    "type": "string",
                    "description": "The process metric name.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of query for use in formulas.\n"
                },
                "sort": {
                    "type": "string",
                    "description": "The direction of the sort. Valid values are `asc`, `desc`. Defaults to `\"desc\"`.\n"
                },
                "tagFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "An array of tags to filter by.\n"
                },
                "textFilter": {
                    "type": "string",
                    "description": "The text to use as a filter.\n"
                }
            },
            "type": "object",
            "required": [
                "dataSource",
                "metric",
                "name"
            ]
        },
        "datadog:index/DashboardWidgetSunburstDefinitionRequestQuerySloQuery:DashboardWidgetSunburstDefinitionRequestQuerySloQuery": {
            "properties": {
                "additionalQueryFilters": {
                    "type": "string",
                    "description": "Additional filters applied to the SLO query.\n"
                },
                "crossOrgUuids": {
                    "type": "string",
                    "description": "The source organization UUID for cross organization queries. Feature in Private Beta.\n"
                },
                "dataSource": {
                    "type": "string",
                    "description": "The data source for SLO queries. Valid values are `slo`.\n"
                },
                "groupMode": {
                    "type": "string",
                    "description": "Group mode to query measures. Valid values are `overall`, `components`. Defaults to `\"overall\"`.\n"
                },
                "measure": {
                    "type": "string",
                    "description": "SLO measures queries. Valid values are `good_events`, `bad_events`, `slo_status`, `error_budget_remaining`, `burn_rate`, `error_budget_burndown`.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of query for use in formulas.\n"
                },
                "sloId": {
                    "type": "string",
                    "description": "ID of an SLO to query.\n"
                },
                "sloQueryType": {
                    "type": "string",
                    "description": "type of the SLO to query. Valid values are `metric`, `time_slice`. Defaults to `\"metric\"`.\n"
                }
            },
            "type": "object",
            "required": [
                "dataSource",
                "measure",
                "sloId"
            ]
        },
        "datadog:index/DashboardWidgetSunburstDefinitionRequestStyle:DashboardWidgetSunburstDefinitionRequestStyle": {
            "properties": {
                "palette": {
                    "type": "string",
                    "description": "A color palette to apply to the widget. The available options are available at: https://docs.datadoghq.com/dashboards/widgets/timeseries/#appearance.\n"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetTimeseriesDefinition:DashboardWidgetTimeseriesDefinition": {
            "properties": {
                "customLinks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetTimeseriesDefinitionCustomLink:DashboardWidgetTimeseriesDefinitionCustomLink"
                    },
                    "description": "A nested block describing a custom link. Multiple `custom_link` blocks are allowed using the structure below.\n"
                },
                "events": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetTimeseriesDefinitionEvent:DashboardWidgetTimeseriesDefinitionEvent"
                    },
                    "description": "The definition of the event to overlay on the graph. Multiple `event` blocks are allowed using the structure below.\n"
                },
                "legendColumns": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of columns to display in the legend. Valid values are `value`, `avg`, `sum`, `min`, `max`.\n"
                },
                "legendLayout": {
                    "type": "string",
                    "description": "The layout of the legend displayed in the widget. Valid values are `auto`, `horizontal`, `vertical`.\n"
                },
                "legendSize": {
                    "type": "string",
                    "description": "The size of the legend displayed in the widget.\n"
                },
                "liveSpan": {
                    "type": "string",
                    "description": "The timeframe to use when displaying the widget. Valid values are `1m`, `5m`, `10m`, `15m`, `30m`, `1h`, `4h`, `1d`, `2d`, `1w`, `1mo`, `3mo`, `6mo`, `week_to_date`, `month_to_date`, `1y`, `alert`.\n"
                },
                "markers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetTimeseriesDefinitionMarker:DashboardWidgetTimeseriesDefinitionMarker"
                    },
                    "description": "A nested block describing the marker to use when displaying the widget. The structure of this block is described below. Multiple `marker` blocks are allowed within a given `tile_def` block.\n"
                },
                "requests": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetTimeseriesDefinitionRequest:DashboardWidgetTimeseriesDefinitionRequest"
                    },
                    "description": "A nested block describing the request to use when displaying the widget. Multiple `request` blocks are allowed using the structure below (exactly one of `q`, `apm_query`, `log_query`, `rum_query`, `network_query`, `security_query` or `process_query` is required within the `request` block).\n"
                },
                "rightYaxis": {
                    "$ref": "#/types/datadog:index/DashboardWidgetTimeseriesDefinitionRightYaxis:DashboardWidgetTimeseriesDefinitionRightYaxis",
                    "description": "A nested block describing the right Y-Axis Controls. See the `on_right_yaxis` property for which request will use this axis. The structure of this block is described below.\n"
                },
                "showLegend": {
                    "type": "boolean",
                    "description": "Whether or not to show the legend on this widget.\n"
                },
                "title": {
                    "type": "string",
                    "description": "The title of the widget.\n"
                },
                "titleAlign": {
                    "type": "string",
                    "description": "The alignment of the widget's title. Valid values are `center`, `left`, `right`.\n"
                },
                "titleSize": {
                    "type": "string",
                    "description": "The size of the widget's title (defaults to 16).\n"
                },
                "yaxis": {
                    "$ref": "#/types/datadog:index/DashboardWidgetTimeseriesDefinitionYaxis:DashboardWidgetTimeseriesDefinitionYaxis",
                    "description": "A nested block describing the Y-Axis Controls. The structure of this block is described below.\n"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetTimeseriesDefinitionCustomLink:DashboardWidgetTimeseriesDefinitionCustomLink": {
            "properties": {
                "isHidden": {
                    "type": "boolean",
                    "description": "The flag for toggling context menu link visibility.\n"
                },
                "label": {
                    "type": "string",
                    "description": "The label for the custom link URL.\n"
                },
                "link": {
                    "type": "string",
                    "description": "The URL of the custom link.\n"
                },
                "overrideLabel": {
                    "type": "string",
                    "description": "The label ID that refers to a context menu link item. When `override_label` is provided, the client request omits the label field.\n"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetTimeseriesDefinitionEvent:DashboardWidgetTimeseriesDefinitionEvent": {
            "properties": {
                "q": {
                    "type": "string",
                    "description": "The event query to use in the widget.\n"
                },
                "tagsExecution": {
                    "type": "string",
                    "description": "The execution method for multi-value filters.\n"
                }
            },
            "type": "object",
            "required": [
                "q"
            ]
        },
        "datadog:index/DashboardWidgetTimeseriesDefinitionMarker:DashboardWidgetTimeseriesDefinitionMarker": {
            "properties": {
                "displayType": {
                    "type": "string",
                    "description": "How the marker lines are displayed, options are one of {`error`, `warning`, `info`, `ok`} combined with one of {`dashed`, `solid`, `bold`}. Example: `error dashed`.\n"
                },
                "label": {
                    "type": "string",
                    "description": "A label for the line or range.\n"
                },
                "value": {
                    "type": "string",
                    "description": "A mathematical expression describing the marker, for example: `y \u003e 1`, `-5 \u003c y \u003c 0`, `y = 19`.\n"
                }
            },
            "type": "object",
            "required": [
                "value"
            ]
        },
        "datadog:index/DashboardWidgetTimeseriesDefinitionRequest:DashboardWidgetTimeseriesDefinitionRequest": {
            "properties": {
                "apmQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetApmQuery:DashboardWidgetApmQuery",
                    "description": "The query to use for this widget.\n"
                },
                "auditQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetTimeseriesDefinitionRequestAuditQuery:DashboardWidgetTimeseriesDefinitionRequestAuditQuery",
                    "description": "The query to use for this widget.\n"
                },
                "displayType": {
                    "type": "string",
                    "description": "How to display the marker lines. Valid values are `area`, `bars`, `line`, `overlay`.\n"
                },
                "formulas": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetTimeseriesDefinitionRequestFormula:DashboardWidgetTimeseriesDefinitionRequestFormula"
                    }
                },
                "logQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetLogQuery:DashboardWidgetLogQuery",
                    "description": "The query to use for this widget.\n"
                },
                "metadatas": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetTimeseriesDefinitionRequestMetadata:DashboardWidgetTimeseriesDefinitionRequestMetadata"
                    },
                    "description": "Used to define expression aliases. Multiple `metadata` blocks are allowed using the structure below.\n"
                },
                "networkQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetTimeseriesDefinitionRequestNetworkQuery:DashboardWidgetTimeseriesDefinitionRequestNetworkQuery",
                    "description": "The query to use for this widget.\n"
                },
                "onRightYaxis": {
                    "type": "boolean",
                    "description": "A Boolean indicating whether the request uses the right or left Y-Axis.\n"
                },
                "processQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetTimeseriesDefinitionRequestProcessQuery:DashboardWidgetTimeseriesDefinitionRequestProcessQuery",
                    "description": "The process query to use in the widget. The structure of this block is described below.\n"
                },
                "q": {
                    "type": "string",
                    "description": "The metric query to use for this widget.\n"
                },
                "queries": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetTimeseriesDefinitionRequestQuery:DashboardWidgetTimeseriesDefinitionRequestQuery"
                    }
                },
                "rumQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetRumQuery:DashboardWidgetRumQuery",
                    "description": "The query to use for this widget.\n"
                },
                "securityQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetSecurityQuery:DashboardWidgetSecurityQuery",
                    "description": "The query to use for this widget.\n"
                },
                "style": {
                    "$ref": "#/types/datadog:index/DashboardWidgetTimeseriesDefinitionRequestStyle:DashboardWidgetTimeseriesDefinitionRequestStyle",
                    "description": "The style of the widget graph. Exactly one `style` block is allowed using the structure below.\n"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetTimeseriesDefinitionRequestAuditQuery:DashboardWidgetTimeseriesDefinitionRequestAuditQuery": {
            "properties": {
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetTimeseriesDefinitionRequestAuditQueryComputeQuery:DashboardWidgetTimeseriesDefinitionRequestAuditQueryComputeQuery",
                    "description": "`compute_query` or `multi_compute` is required. The map keys are listed below.\n"
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetTimeseriesDefinitionRequestAuditQueryGroupBy:DashboardWidgetTimeseriesDefinitionRequestAuditQueryGroupBy"
                    },
                    "description": "Multiple `group_by` blocks are allowed using the structure below.\n"
                },
                "index": {
                    "type": "string",
                    "description": "The name of the index to query.\n"
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetTimeseriesDefinitionRequestAuditQueryMultiCompute:DashboardWidgetTimeseriesDefinitionRequestAuditQueryMultiCompute"
                    },
                    "description": "`compute_query` or `multi_compute` is required. Multiple `multi_compute` blocks are allowed using the structure below.\n"
                },
                "searchQuery": {
                    "type": "string",
                    "description": "The search query to use.\n"
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetTimeseriesDefinitionRequestAuditQueryComputeQuery:DashboardWidgetTimeseriesDefinitionRequestAuditQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "The aggregation method.\n"
                },
                "facet": {
                    "type": "string",
                    "description": "The facet name.\n"
                },
                "interval": {
                    "type": "integer",
                    "description": "Define the time interval in seconds.\n"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetTimeseriesDefinitionRequestAuditQueryGroupBy:DashboardWidgetTimeseriesDefinitionRequestAuditQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "description": "The facet name.\n"
                },
                "limit": {
                    "type": "integer",
                    "description": "The maximum number of items in the group.\n"
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetTimeseriesDefinitionRequestAuditQueryGroupBySortQuery:DashboardWidgetTimeseriesDefinitionRequestAuditQueryGroupBySortQuery",
                    "description": "A list of exactly one element describing the sort query to use.\n"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetTimeseriesDefinitionRequestAuditQueryGroupBySortQuery:DashboardWidgetTimeseriesDefinitionRequestAuditQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "The aggregation method.\n"
                },
                "facet": {
                    "type": "string",
                    "description": "The facet name.\n"
                },
                "order": {
                    "type": "string",
                    "description": "Widget sorting methods. Valid values are `asc`, `desc`.\n"
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetTimeseriesDefinitionRequestAuditQueryMultiCompute:DashboardWidgetTimeseriesDefinitionRequestAuditQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "The aggregation method.\n"
                },
                "facet": {
                    "type": "string",
                    "description": "The facet name.\n"
                },
                "interval": {
                    "type": "integer",
                    "description": "Define the time interval in seconds.\n"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetTimeseriesDefinitionRequestFormula:DashboardWidgetTimeseriesDefinitionRequestFormula": {
            "properties": {
                "alias": {
                    "type": "string",
                    "description": "An expression alias.\n"
                },
                "cellDisplayMode": {
                    "type": "string",
                    "description": "A list of display modes for each table cell. Valid values are `number`, `bar`.\n"
                },
                "conditionalFormats": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetTimeseriesDefinitionRequestFormulaConditionalFormat:DashboardWidgetTimeseriesDefinitionRequestFormulaConditionalFormat"
                    },
                    "description": "Conditional formats allow you to set the color of your widget content or background depending on the rule applied to your data. Multiple `conditional_formats` blocks are allowed using the structure below.\n"
                },
                "formulaExpression": {
                    "type": "string",
                    "description": "A string expression built from queries, formulas, and functions.\n"
                },
                "limit": {
                    "$ref": "#/types/datadog:index/DashboardWidgetTimeseriesDefinitionRequestFormulaLimit:DashboardWidgetTimeseriesDefinitionRequestFormulaLimit",
                    "description": "The options for limiting results returned.\n"
                },
                "style": {
                    "$ref": "#/types/datadog:index/DashboardWidgetTimeseriesDefinitionRequestFormulaStyle:DashboardWidgetTimeseriesDefinitionRequestFormulaStyle",
                    "description": "Styling options for widget formulas.\n"
                }
            },
            "type": "object",
            "required": [
                "formulaExpression"
            ]
        },
        "datadog:index/DashboardWidgetTimeseriesDefinitionRequestFormulaConditionalFormat:DashboardWidgetTimeseriesDefinitionRequestFormulaConditionalFormat": {
            "properties": {
                "comparator": {
                    "type": "string",
                    "description": "The comparator to use. Valid values are `=`, `\u003e`, `\u003e=`, `\u003c`, `\u003c=`.\n"
                },
                "customBgColor": {
                    "type": "string",
                    "description": "The color palette to apply to the background, same values available as palette.\n"
                },
                "customFgColor": {
                    "type": "string",
                    "description": "The color palette to apply to the foreground, same values available as palette.\n"
                },
                "hideValue": {
                    "type": "boolean",
                    "description": "Setting this to True hides values.\n"
                },
                "imageUrl": {
                    "type": "string",
                    "description": "Displays an image as the background.\n"
                },
                "metric": {
                    "type": "string",
                    "description": "The metric from the request to correlate with this conditional format.\n"
                },
                "palette": {
                    "type": "string",
                    "description": "The color palette to apply. Valid values are `blue`, `custom_bg`, `custom_image`, `custom_text`, `gray_on_white`, `grey`, `green`, `orange`, `red`, `red_on_white`, `white_on_gray`, `white_on_green`, `green_on_white`, `white_on_red`, `white_on_yellow`, `yellow_on_white`, `black_on_light_yellow`, `black_on_light_green`, `black_on_light_red`.\n"
                },
                "timeframe": {
                    "type": "string",
                    "description": "Defines the displayed timeframe.\n"
                },
                "value": {
                    "type": "number",
                    "description": "A value for the comparator.\n"
                }
            },
            "type": "object",
            "required": [
                "comparator",
                "palette",
                "value"
            ]
        },
        "datadog:index/DashboardWidgetTimeseriesDefinitionRequestFormulaLimit:DashboardWidgetTimeseriesDefinitionRequestFormulaLimit": {
            "properties": {
                "count": {
                    "type": "integer",
                    "description": "The number of results to return.\n"
                },
                "order": {
                    "type": "string",
                    "description": "The direction of the sort. Valid values are `asc`, `desc`. Defaults to `\"desc\"`.\n"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetTimeseriesDefinitionRequestFormulaStyle:DashboardWidgetTimeseriesDefinitionRequestFormulaStyle": {
            "properties": {
                "palette": {
                    "type": "string",
                    "description": "The color palette used to display the formula. A guide to the available color palettes can be found at https://docs.datadoghq.com/dashboards/guide/widget_colors.\n"
                },
                "paletteIndex": {
                    "type": "integer",
                    "description": "Index specifying which color to use within the palette.\n"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetTimeseriesDefinitionRequestMetadata:DashboardWidgetTimeseriesDefinitionRequestMetadata": {
            "properties": {
                "aliasName": {
                    "type": "string",
                    "description": "The expression alias.\n"
                },
                "expression": {
                    "type": "string",
                    "description": "The expression name.\n"
                }
            },
            "type": "object",
            "required": [
                "expression"
            ]
        },
        "datadog:index/DashboardWidgetTimeseriesDefinitionRequestNetworkQuery:DashboardWidgetTimeseriesDefinitionRequestNetworkQuery": {
            "properties": {
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetTimeseriesDefinitionRequestNetworkQueryComputeQuery:DashboardWidgetTimeseriesDefinitionRequestNetworkQueryComputeQuery",
                    "description": "`compute_query` or `multi_compute` is required. The map keys are listed below.\n"
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetTimeseriesDefinitionRequestNetworkQueryGroupBy:DashboardWidgetTimeseriesDefinitionRequestNetworkQueryGroupBy"
                    },
                    "description": "Multiple `group_by` blocks are allowed using the structure below.\n"
                },
                "index": {
                    "type": "string",
                    "description": "The name of the index to query.\n"
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetTimeseriesDefinitionRequestNetworkQueryMultiCompute:DashboardWidgetTimeseriesDefinitionRequestNetworkQueryMultiCompute"
                    },
                    "description": "`compute_query` or `multi_compute` is required. Multiple `multi_compute` blocks are allowed using the structure below.\n"
                },
                "searchQuery": {
                    "type": "string",
                    "description": "The search query to use.\n"
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetTimeseriesDefinitionRequestNetworkQueryComputeQuery:DashboardWidgetTimeseriesDefinitionRequestNetworkQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "The aggregation method.\n"
                },
                "facet": {
                    "type": "string",
                    "description": "The facet name.\n"
                },
                "interval": {
                    "type": "integer",
                    "description": "Define the time interval in seconds.\n"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetTimeseriesDefinitionRequestNetworkQueryGroupBy:DashboardWidgetTimeseriesDefinitionRequestNetworkQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "description": "The facet name.\n"
                },
                "limit": {
                    "type": "integer",
                    "description": "The maximum number of items in the group.\n"
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetTimeseriesDefinitionRequestNetworkQueryGroupBySortQuery:DashboardWidgetTimeseriesDefinitionRequestNetworkQueryGroupBySortQuery",
                    "description": "A list of exactly one element describing the sort query to use.\n"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetTimeseriesDefinitionRequestNetworkQueryGroupBySortQuery:DashboardWidgetTimeseriesDefinitionRequestNetworkQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "The aggregation method.\n"
                },
                "facet": {
                    "type": "string",
                    "description": "The facet name.\n"
                },
                "order": {
                    "type": "string",
                    "description": "Widget sorting methods. Valid values are `asc`, `desc`.\n"
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetTimeseriesDefinitionRequestNetworkQueryMultiCompute:DashboardWidgetTimeseriesDefinitionRequestNetworkQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "The aggregation method.\n"
                },
                "facet": {
                    "type": "string",
                    "description": "The facet name.\n"
                },
                "interval": {
                    "type": "integer",
                    "description": "Define the time interval in seconds.\n"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetTimeseriesDefinitionRequestProcessQuery:DashboardWidgetTimeseriesDefinitionRequestProcessQuery": {
            "properties": {
                "filterBies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of processes.\n"
                },
                "limit": {
                    "type": "integer",
                    "description": "The max number of items in the filter list.\n"
                },
                "metric": {
                    "type": "string",
                    "description": "Your chosen metric.\n"
                },
                "searchBy": {
                    "type": "string",
                    "description": "Your chosen search term.\n"
                }
            },
            "type": "object",
            "required": [
                "metric"
            ]
        },
        "datadog:index/DashboardWidgetTimeseriesDefinitionRequestQuery:DashboardWidgetTimeseriesDefinitionRequestQuery": {
            "properties": {
                "apmDependencyStatsQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetTimeseriesDefinitionRequestQueryApmDependencyStatsQuery:DashboardWidgetTimeseriesDefinitionRequestQueryApmDependencyStatsQuery",
                    "description": "The APM Dependency Stats query using formulas and functions.\n"
                },
                "apmResourceStatsQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetTimeseriesDefinitionRequestQueryApmResourceStatsQuery:DashboardWidgetTimeseriesDefinitionRequestQueryApmResourceStatsQuery",
                    "description": "The APM Resource Stats query using formulas and functions.\n"
                },
                "cloudCostQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetTimeseriesDefinitionRequestQueryCloudCostQuery:DashboardWidgetTimeseriesDefinitionRequestQueryCloudCostQuery",
                    "description": "The Cloud Cost query using formulas and functions.\n"
                },
                "eventQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetTimeseriesDefinitionRequestQueryEventQuery:DashboardWidgetTimeseriesDefinitionRequestQueryEventQuery",
                    "description": "A timeseries formula and functions events query.\n"
                },
                "metricQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetTimeseriesDefinitionRequestQueryMetricQuery:DashboardWidgetTimeseriesDefinitionRequestQueryMetricQuery",
                    "description": "A timeseries formula and functions metrics query.\n"
                },
                "processQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetTimeseriesDefinitionRequestQueryProcessQuery:DashboardWidgetTimeseriesDefinitionRequestQueryProcessQuery",
                    "description": "The process query using formulas and functions.\n"
                },
                "sloQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetTimeseriesDefinitionRequestQuerySloQuery:DashboardWidgetTimeseriesDefinitionRequestQuerySloQuery",
                    "description": "The SLO query using formulas and functions.\n"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetTimeseriesDefinitionRequestQueryApmDependencyStatsQuery:DashboardWidgetTimeseriesDefinitionRequestQueryApmDependencyStatsQuery": {
            "properties": {
                "crossOrgUuids": {
                    "type": "string",
                    "description": "The source organization UUID for cross organization queries. Feature in Private Beta.\n"
                },
                "dataSource": {
                    "type": "string",
                    "description": "The data source for APM Dependency Stats queries. Valid values are `apm_dependency_stats`.\n"
                },
                "env": {
                    "type": "string",
                    "description": "APM environment.\n"
                },
                "isUpstream": {
                    "type": "boolean",
                    "description": "Determines whether stats for upstream or downstream dependencies should be queried.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of query for use in formulas.\n"
                },
                "operationName": {
                    "type": "string",
                    "description": "Name of operation on service.\n"
                },
                "primaryTagName": {
                    "type": "string",
                    "description": "The name of the second primary tag used within APM; required when `primary_tag_value` is specified. See https://docs.datadoghq.com/tracing/guide/setting*primary*tags*to*scope/#add-a-second-primary-tag-in-datadog.\n"
                },
                "primaryTagValue": {
                    "type": "string",
                    "description": "Filter APM data by the second primary tag. `primary_tag_name` must also be specified.\n"
                },
                "resourceName": {
                    "type": "string",
                    "description": "APM resource.\n"
                },
                "service": {
                    "type": "string",
                    "description": "APM service.\n"
                },
                "stat": {
                    "type": "string",
                    "description": "APM statistic. Valid values are `avg_duration`, `avg_root_duration`, `avg_spans_per_trace`, `error_rate`, `pct_exec_time`, `pct_of_traces`, `total_traces_count`.\n"
                }
            },
            "type": "object",
            "required": [
                "dataSource",
                "env",
                "name",
                "operationName",
                "resourceName",
                "service",
                "stat"
            ]
        },
        "datadog:index/DashboardWidgetTimeseriesDefinitionRequestQueryApmResourceStatsQuery:DashboardWidgetTimeseriesDefinitionRequestQueryApmResourceStatsQuery": {
            "properties": {
                "crossOrgUuids": {
                    "type": "string",
                    "description": "The source organization UUID for cross organization queries. Feature in Private Beta.\n"
                },
                "dataSource": {
                    "type": "string",
                    "description": "The data source for APM Resource Stats queries. Valid values are `apm_resource_stats`.\n"
                },
                "env": {
                    "type": "string",
                    "description": "APM environment.\n"
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Array of fields to group results by.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of query for use in formulas.\n"
                },
                "operationName": {
                    "type": "string",
                    "description": "Name of operation on service.\n"
                },
                "primaryTagName": {
                    "type": "string",
                    "description": "The name of the second primary tag used within APM; required when `primary_tag_value` is specified. See https://docs.datadoghq.com/tracing/guide/setting*primary*tags*to*scope/#add-a-second-primary-tag-in-datadog.\n"
                },
                "primaryTagValue": {
                    "type": "string",
                    "description": "Filter APM data by the second primary tag. `primary_tag_name` must also be specified.\n"
                },
                "resourceName": {
                    "type": "string",
                    "description": "APM resource.\n"
                },
                "service": {
                    "type": "string",
                    "description": "APM service.\n"
                },
                "stat": {
                    "type": "string",
                    "description": "APM statistic. Valid values are `errors`, `error_rate`, `hits`, `latency_avg`, `latency_distribution`, `latency_max`, `latency_p50`, `latency_p75`, `latency_p90`, `latency_p95`, `latency_p99`.\n"
                }
            },
            "type": "object",
            "required": [
                "dataSource",
                "env",
                "name",
                "service",
                "stat"
            ]
        },
        "datadog:index/DashboardWidgetTimeseriesDefinitionRequestQueryCloudCostQuery:DashboardWidgetTimeseriesDefinitionRequestQueryCloudCostQuery": {
            "properties": {
                "aggregator": {
                    "type": "string",
                    "description": "The aggregation methods available for cloud cost queries. Valid values are `avg`, `last`, `max`, `min`, `sum`, `percentile`.\n"
                },
                "crossOrgUuids": {
                    "type": "string",
                    "description": "The source organization UUID for cross organization queries. Feature in Private Beta.\n"
                },
                "dataSource": {
                    "type": "string",
                    "description": "The data source for cloud cost queries. Valid values are `cloud_cost`.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the query for use in formulas.\n"
                },
                "query": {
                    "type": "string",
                    "description": "The cloud cost query definition.\n"
                }
            },
            "type": "object",
            "required": [
                "dataSource",
                "name",
                "query"
            ]
        },
        "datadog:index/DashboardWidgetTimeseriesDefinitionRequestQueryEventQuery:DashboardWidgetTimeseriesDefinitionRequestQueryEventQuery": {
            "properties": {
                "computes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetTimeseriesDefinitionRequestQueryEventQueryCompute:DashboardWidgetTimeseriesDefinitionRequestQueryEventQueryCompute"
                    },
                    "description": "The compute options.\n"
                },
                "crossOrgUuids": {
                    "type": "string",
                    "description": "The source organization UUID for cross organization queries. Feature in Private Beta.\n"
                },
                "dataSource": {
                    "type": "string",
                    "description": "The data source for event platform-based queries. Valid values are `logs`, `spans`, `network`, `rum`, `security_signals`, `profiles`, `audit`, `events`, `ci_tests`, `ci_pipelines`, `incident_analytics`.\n"
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetTimeseriesDefinitionRequestQueryEventQueryGroupBy:DashboardWidgetTimeseriesDefinitionRequestQueryEventQueryGroupBy"
                    },
                    "description": "Group by options.\n"
                },
                "indexes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "An array of index names to query in the stream.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of query for use in formulas.\n"
                },
                "search": {
                    "$ref": "#/types/datadog:index/DashboardWidgetTimeseriesDefinitionRequestQueryEventQuerySearch:DashboardWidgetTimeseriesDefinitionRequestQueryEventQuerySearch",
                    "description": "The search options.\n"
                },
                "storage": {
                    "type": "string",
                    "description": "Storage location (private beta).\n"
                }
            },
            "type": "object",
            "required": [
                "computes",
                "dataSource",
                "name"
            ]
        },
        "datadog:index/DashboardWidgetTimeseriesDefinitionRequestQueryEventQueryCompute:DashboardWidgetTimeseriesDefinitionRequestQueryEventQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "The aggregation methods for event platform queries. Valid values are `count`, `cardinality`, `median`, `pc75`, `pc90`, `pc95`, `pc98`, `pc99`, `sum`, `min`, `max`, `avg`.\n"
                },
                "interval": {
                    "type": "integer",
                    "description": "A time interval in milliseconds.\n"
                },
                "metric": {
                    "type": "string",
                    "description": "The measurable attribute to compute.\n"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetTimeseriesDefinitionRequestQueryEventQueryGroupBy:DashboardWidgetTimeseriesDefinitionRequestQueryEventQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "description": "The event facet.\n"
                },
                "limit": {
                    "type": "integer",
                    "description": "The number of groups to return.\n"
                },
                "sort": {
                    "$ref": "#/types/datadog:index/DashboardWidgetTimeseriesDefinitionRequestQueryEventQueryGroupBySort:DashboardWidgetTimeseriesDefinitionRequestQueryEventQueryGroupBySort",
                    "description": "The options for sorting group by results.\n"
                }
            },
            "type": "object",
            "required": [
                "facet"
            ]
        },
        "datadog:index/DashboardWidgetTimeseriesDefinitionRequestQueryEventQueryGroupBySort:DashboardWidgetTimeseriesDefinitionRequestQueryEventQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "The aggregation methods for the event platform queries. Valid values are `count`, `cardinality`, `median`, `pc75`, `pc90`, `pc95`, `pc98`, `pc99`, `sum`, `min`, `max`, `avg`.\n"
                },
                "metric": {
                    "type": "string",
                    "description": "The metric used for sorting group by results.\n"
                },
                "order": {
                    "type": "string",
                    "description": "Direction of sort. Valid values are `asc`, `desc`.\n"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetTimeseriesDefinitionRequestQueryEventQuerySearch:DashboardWidgetTimeseriesDefinitionRequestQueryEventQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "description": "The events search string.\n"
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/DashboardWidgetTimeseriesDefinitionRequestQueryMetricQuery:DashboardWidgetTimeseriesDefinitionRequestQueryMetricQuery": {
            "properties": {
                "aggregator": {
                    "type": "string",
                    "description": "The aggregation methods available for metrics queries. Valid values are `avg`, `min`, `max`, `sum`, `last`, `area`, `l2norm`, `percentile`.\n"
                },
                "crossOrgUuids": {
                    "type": "string",
                    "description": "The source organization UUID for cross organization queries. Feature in Private Beta.\n"
                },
                "dataSource": {
                    "type": "string",
                    "description": "The data source for metrics queries. Defaults to `\"metrics\"`.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the query for use in formulas.\n"
                },
                "query": {
                    "type": "string",
                    "description": "The metrics query definition.\n"
                }
            },
            "type": "object",
            "required": [
                "name",
                "query"
            ]
        },
        "datadog:index/DashboardWidgetTimeseriesDefinitionRequestQueryProcessQuery:DashboardWidgetTimeseriesDefinitionRequestQueryProcessQuery": {
            "properties": {
                "aggregator": {
                    "type": "string",
                    "description": "The aggregation methods available for metrics queries. Valid values are `avg`, `min`, `max`, `sum`, `last`, `area`, `l2norm`, `percentile`.\n"
                },
                "crossOrgUuids": {
                    "type": "string",
                    "description": "The source organization UUID for cross organization queries. Feature in Private Beta.\n"
                },
                "dataSource": {
                    "type": "string",
                    "description": "The data source for process queries. Valid values are `process`, `container`.\n"
                },
                "isNormalizedCpu": {
                    "type": "boolean",
                    "description": "Whether to normalize the CPU percentages.\n"
                },
                "limit": {
                    "type": "integer",
                    "description": "The number of hits to return.\n"
                },
                "metric": {
                    "type": "string",
                    "description": "The process metric name.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of query for use in formulas.\n"
                },
                "sort": {
                    "type": "string",
                    "description": "The direction of the sort. Valid values are `asc`, `desc`. Defaults to `\"desc\"`.\n"
                },
                "tagFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "An array of tags to filter by.\n"
                },
                "textFilter": {
                    "type": "string",
                    "description": "The text to use as a filter.\n"
                }
            },
            "type": "object",
            "required": [
                "dataSource",
                "metric",
                "name"
            ]
        },
        "datadog:index/DashboardWidgetTimeseriesDefinitionRequestQuerySloQuery:DashboardWidgetTimeseriesDefinitionRequestQuerySloQuery": {
            "properties": {
                "additionalQueryFilters": {
                    "type": "string",
                    "description": "Additional filters applied to the SLO query.\n"
                },
                "crossOrgUuids": {
                    "type": "string",
                    "description": "The source organization UUID for cross organization queries. Feature in Private Beta.\n"
                },
                "dataSource": {
                    "type": "string",
                    "description": "The data source for SLO queries. Valid values are `slo`.\n"
                },
                "groupMode": {
                    "type": "string",
                    "description": "Group mode to query measures. Valid values are `overall`, `components`. Defaults to `\"overall\"`.\n"
                },
                "measure": {
                    "type": "string",
                    "description": "SLO measures queries. Valid values are `good_events`, `bad_events`, `slo_status`, `error_budget_remaining`, `burn_rate`, `error_budget_burndown`.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of query for use in formulas.\n"
                },
                "sloId": {
                    "type": "string",
                    "description": "ID of an SLO to query.\n"
                },
                "sloQueryType": {
                    "type": "string",
                    "description": "type of the SLO to query. Valid values are `metric`, `time_slice`. Defaults to `\"metric\"`.\n"
                }
            },
            "type": "object",
            "required": [
                "dataSource",
                "measure",
                "sloId"
            ]
        },
        "datadog:index/DashboardWidgetTimeseriesDefinitionRequestStyle:DashboardWidgetTimeseriesDefinitionRequestStyle": {
            "properties": {
                "lineType": {
                    "type": "string",
                    "description": "The type of lines displayed. Valid values are `dashed`, `dotted`, `solid`.\n"
                },
                "lineWidth": {
                    "type": "string",
                    "description": "The width of line displayed. Valid values are `normal`, `thick`, `thin`.\n"
                },
                "palette": {
                    "type": "string",
                    "description": "A color palette to apply to the widget. The available options are available at: https://docs.datadoghq.com/dashboards/widgets/timeseries/#appearance.\n"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetTimeseriesDefinitionRightYaxis:DashboardWidgetTimeseriesDefinitionRightYaxis": {
            "properties": {
                "includeZero": {
                    "type": "boolean",
                    "description": "Always include zero or fit the axis to the data range.\n"
                },
                "label": {
                    "type": "string",
                    "description": "The label of the axis to display on the graph.\n"
                },
                "max": {
                    "type": "string",
                    "description": "Specify the maximum value to show on the Y-axis.\n"
                },
                "min": {
                    "type": "string",
                    "description": "Specify the minimum value to show on the Y-axis.\n"
                },
                "scale": {
                    "type": "string",
                    "description": "Specify the scale type, options: `linear`, `log`, `pow`, `sqrt`.\n"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetTimeseriesDefinitionYaxis:DashboardWidgetTimeseriesDefinitionYaxis": {
            "properties": {
                "includeZero": {
                    "type": "boolean",
                    "description": "Always include zero or fit the axis to the data range.\n"
                },
                "label": {
                    "type": "string",
                    "description": "The label of the axis to display on the graph.\n"
                },
                "max": {
                    "type": "string",
                    "description": "Specify the maximum value to show on the Y-axis.\n"
                },
                "min": {
                    "type": "string",
                    "description": "Specify the minimum value to show on the Y-axis.\n"
                },
                "scale": {
                    "type": "string",
                    "description": "Specify the scale type, options: `linear`, `log`, `pow`, `sqrt`.\n"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetToplistDefinition:DashboardWidgetToplistDefinition": {
            "properties": {
                "customLinks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetToplistDefinitionCustomLink:DashboardWidgetToplistDefinitionCustomLink"
                    },
                    "description": "A nested block describing a custom link. Multiple `custom_link` blocks are allowed using the structure below.\n"
                },
                "liveSpan": {
                    "type": "string",
                    "description": "The timeframe to use when displaying the widget. Valid values are `1m`, `5m`, `10m`, `15m`, `30m`, `1h`, `4h`, `1d`, `2d`, `1w`, `1mo`, `3mo`, `6mo`, `week_to_date`, `month_to_date`, `1y`, `alert`.\n"
                },
                "requests": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetToplistDefinitionRequest:DashboardWidgetToplistDefinitionRequest"
                    },
                    "description": "A nested block describing the request to use when displaying the widget. Multiple `request` blocks are allowed using the structure below (exactly one of `q`, `apm_query`, `log_query`, `rum_query`, `security_query` or `process_query` is required within the `request` block).\n"
                },
                "title": {
                    "type": "string",
                    "description": "The title of the widget.\n"
                },
                "titleAlign": {
                    "type": "string",
                    "description": "The alignment of the widget's title. Valid values are `center`, `left`, `right`.\n"
                },
                "titleSize": {
                    "type": "string",
                    "description": "The size of the widget's title (defaults to 16).\n"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetToplistDefinitionCustomLink:DashboardWidgetToplistDefinitionCustomLink": {
            "properties": {
                "isHidden": {
                    "type": "boolean",
                    "description": "The flag for toggling context menu link visibility.\n"
                },
                "label": {
                    "type": "string",
                    "description": "The label for the custom link URL.\n"
                },
                "link": {
                    "type": "string",
                    "description": "The URL of the custom link.\n"
                },
                "overrideLabel": {
                    "type": "string",
                    "description": "The label ID that refers to a context menu link item. When `override_label` is provided, the client request omits the label field.\n"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetToplistDefinitionRequest:DashboardWidgetToplistDefinitionRequest": {
            "properties": {
                "apmQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetApmQuery:DashboardWidgetApmQuery",
                    "description": "The query to use for this widget.\n"
                },
                "auditQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetToplistDefinitionRequestAuditQuery:DashboardWidgetToplistDefinitionRequestAuditQuery",
                    "description": "The query to use for this widget.\n"
                },
                "conditionalFormats": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetToplistDefinitionRequestConditionalFormat:DashboardWidgetToplistDefinitionRequestConditionalFormat"
                    },
                    "description": "Conditional formats allow you to set the color of your widget content or background, depending on a rule applied to your data. Multiple `conditional_formats` blocks are allowed using the structure below.\n"
                },
                "formulas": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetToplistDefinitionRequestFormula:DashboardWidgetToplistDefinitionRequestFormula"
                    }
                },
                "logQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetLogQuery:DashboardWidgetLogQuery",
                    "description": "The query to use for this widget.\n"
                },
                "processQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetToplistDefinitionRequestProcessQuery:DashboardWidgetToplistDefinitionRequestProcessQuery",
                    "description": "The process query to use in the widget. The structure of this block is described below.\n"
                },
                "q": {
                    "type": "string",
                    "description": "The metric query to use for this widget.\n"
                },
                "queries": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetToplistDefinitionRequestQuery:DashboardWidgetToplistDefinitionRequestQuery"
                    }
                },
                "rumQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetRumQuery:DashboardWidgetRumQuery",
                    "description": "The query to use for this widget.\n"
                },
                "securityQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetSecurityQuery:DashboardWidgetSecurityQuery",
                    "description": "The query to use for this widget.\n"
                },
                "style": {
                    "$ref": "#/types/datadog:index/DashboardWidgetToplistDefinitionRequestStyle:DashboardWidgetToplistDefinitionRequestStyle",
                    "description": "Define request for the widget's style.\n"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetToplistDefinitionRequestAuditQuery:DashboardWidgetToplistDefinitionRequestAuditQuery": {
            "properties": {
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetToplistDefinitionRequestAuditQueryComputeQuery:DashboardWidgetToplistDefinitionRequestAuditQueryComputeQuery",
                    "description": "`compute_query` or `multi_compute` is required. The map keys are listed below.\n"
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetToplistDefinitionRequestAuditQueryGroupBy:DashboardWidgetToplistDefinitionRequestAuditQueryGroupBy"
                    },
                    "description": "Multiple `group_by` blocks are allowed using the structure below.\n"
                },
                "index": {
                    "type": "string",
                    "description": "The name of the index to query.\n"
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetToplistDefinitionRequestAuditQueryMultiCompute:DashboardWidgetToplistDefinitionRequestAuditQueryMultiCompute"
                    },
                    "description": "`compute_query` or `multi_compute` is required. Multiple `multi_compute` blocks are allowed using the structure below.\n"
                },
                "searchQuery": {
                    "type": "string",
                    "description": "The search query to use.\n"
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetToplistDefinitionRequestAuditQueryComputeQuery:DashboardWidgetToplistDefinitionRequestAuditQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "The aggregation method.\n"
                },
                "facet": {
                    "type": "string",
                    "description": "The facet name.\n"
                },
                "interval": {
                    "type": "integer",
                    "description": "Define the time interval in seconds.\n"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetToplistDefinitionRequestAuditQueryGroupBy:DashboardWidgetToplistDefinitionRequestAuditQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "description": "The facet name.\n"
                },
                "limit": {
                    "type": "integer",
                    "description": "The maximum number of items in the group.\n"
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetToplistDefinitionRequestAuditQueryGroupBySortQuery:DashboardWidgetToplistDefinitionRequestAuditQueryGroupBySortQuery",
                    "description": "A list of exactly one element describing the sort query to use.\n"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetToplistDefinitionRequestAuditQueryGroupBySortQuery:DashboardWidgetToplistDefinitionRequestAuditQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "The aggregation method.\n"
                },
                "facet": {
                    "type": "string",
                    "description": "The facet name.\n"
                },
                "order": {
                    "type": "string",
                    "description": "Widget sorting methods. Valid values are `asc`, `desc`.\n"
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetToplistDefinitionRequestAuditQueryMultiCompute:DashboardWidgetToplistDefinitionRequestAuditQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "The aggregation method.\n"
                },
                "facet": {
                    "type": "string",
                    "description": "The facet name.\n"
                },
                "interval": {
                    "type": "integer",
                    "description": "Define the time interval in seconds.\n"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetToplistDefinitionRequestConditionalFormat:DashboardWidgetToplistDefinitionRequestConditionalFormat": {
            "properties": {
                "comparator": {
                    "type": "string",
                    "description": "The comparator to use. Valid values are `=`, `\u003e`, `\u003e=`, `\u003c`, `\u003c=`.\n"
                },
                "customBgColor": {
                    "type": "string",
                    "description": "The color palette to apply to the background, same values available as palette.\n"
                },
                "customFgColor": {
                    "type": "string",
                    "description": "The color palette to apply to the foreground, same values available as palette.\n"
                },
                "hideValue": {
                    "type": "boolean",
                    "description": "Setting this to True hides values.\n"
                },
                "imageUrl": {
                    "type": "string",
                    "description": "Displays an image as the background.\n"
                },
                "metric": {
                    "type": "string",
                    "description": "The metric from the request to correlate with this conditional format.\n"
                },
                "palette": {
                    "type": "string",
                    "description": "The color palette to apply. Valid values are `blue`, `custom_bg`, `custom_image`, `custom_text`, `gray_on_white`, `grey`, `green`, `orange`, `red`, `red_on_white`, `white_on_gray`, `white_on_green`, `green_on_white`, `white_on_red`, `white_on_yellow`, `yellow_on_white`, `black_on_light_yellow`, `black_on_light_green`, `black_on_light_red`.\n"
                },
                "timeframe": {
                    "type": "string",
                    "description": "Defines the displayed timeframe.\n"
                },
                "value": {
                    "type": "number",
                    "description": "A value for the comparator.\n"
                }
            },
            "type": "object",
            "required": [
                "comparator",
                "palette",
                "value"
            ]
        },
        "datadog:index/DashboardWidgetToplistDefinitionRequestFormula:DashboardWidgetToplistDefinitionRequestFormula": {
            "properties": {
                "alias": {
                    "type": "string",
                    "description": "An expression alias.\n"
                },
                "cellDisplayMode": {
                    "type": "string",
                    "description": "A list of display modes for each table cell. Valid values are `number`, `bar`.\n"
                },
                "conditionalFormats": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetToplistDefinitionRequestFormulaConditionalFormat:DashboardWidgetToplistDefinitionRequestFormulaConditionalFormat"
                    },
                    "description": "Conditional formats allow you to set the color of your widget content or background depending on the rule applied to your data. Multiple `conditional_formats` blocks are allowed using the structure below.\n"
                },
                "formulaExpression": {
                    "type": "string",
                    "description": "A string expression built from queries, formulas, and functions.\n"
                },
                "limit": {
                    "$ref": "#/types/datadog:index/DashboardWidgetToplistDefinitionRequestFormulaLimit:DashboardWidgetToplistDefinitionRequestFormulaLimit",
                    "description": "The options for limiting results returned.\n"
                },
                "style": {
                    "$ref": "#/types/datadog:index/DashboardWidgetToplistDefinitionRequestFormulaStyle:DashboardWidgetToplistDefinitionRequestFormulaStyle",
                    "description": "Styling options for widget formulas.\n"
                }
            },
            "type": "object",
            "required": [
                "formulaExpression"
            ]
        },
        "datadog:index/DashboardWidgetToplistDefinitionRequestFormulaConditionalFormat:DashboardWidgetToplistDefinitionRequestFormulaConditionalFormat": {
            "properties": {
                "comparator": {
                    "type": "string",
                    "description": "The comparator to use. Valid values are `=`, `\u003e`, `\u003e=`, `\u003c`, `\u003c=`.\n"
                },
                "customBgColor": {
                    "type": "string",
                    "description": "The color palette to apply to the background, same values available as palette.\n"
                },
                "customFgColor": {
                    "type": "string",
                    "description": "The color palette to apply to the foreground, same values available as palette.\n"
                },
                "hideValue": {
                    "type": "boolean",
                    "description": "Setting this to True hides values.\n"
                },
                "imageUrl": {
                    "type": "string",
                    "description": "Displays an image as the background.\n"
                },
                "metric": {
                    "type": "string",
                    "description": "The metric from the request to correlate with this conditional format.\n"
                },
                "palette": {
                    "type": "string",
                    "description": "The color palette to apply. Valid values are `blue`, `custom_bg`, `custom_image`, `custom_text`, `gray_on_white`, `grey`, `green`, `orange`, `red`, `red_on_white`, `white_on_gray`, `white_on_green`, `green_on_white`, `white_on_red`, `white_on_yellow`, `yellow_on_white`, `black_on_light_yellow`, `black_on_light_green`, `black_on_light_red`.\n"
                },
                "timeframe": {
                    "type": "string",
                    "description": "Defines the displayed timeframe.\n"
                },
                "value": {
                    "type": "number",
                    "description": "A value for the comparator.\n"
                }
            },
            "type": "object",
            "required": [
                "comparator",
                "palette",
                "value"
            ]
        },
        "datadog:index/DashboardWidgetToplistDefinitionRequestFormulaLimit:DashboardWidgetToplistDefinitionRequestFormulaLimit": {
            "properties": {
                "count": {
                    "type": "integer",
                    "description": "The number of results to return.\n"
                },
                "order": {
                    "type": "string",
                    "description": "The direction of the sort. Valid values are `asc`, `desc`. Defaults to `\"desc\"`.\n"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetToplistDefinitionRequestFormulaStyle:DashboardWidgetToplistDefinitionRequestFormulaStyle": {
            "properties": {
                "palette": {
                    "type": "string",
                    "description": "The color palette used to display the formula. A guide to the available color palettes can be found at https://docs.datadoghq.com/dashboards/guide/widget_colors.\n"
                },
                "paletteIndex": {
                    "type": "integer",
                    "description": "Index specifying which color to use within the palette.\n"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetToplistDefinitionRequestProcessQuery:DashboardWidgetToplistDefinitionRequestProcessQuery": {
            "properties": {
                "filterBies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of processes.\n"
                },
                "limit": {
                    "type": "integer",
                    "description": "The max number of items in the filter list.\n"
                },
                "metric": {
                    "type": "string",
                    "description": "Your chosen metric.\n"
                },
                "searchBy": {
                    "type": "string",
                    "description": "Your chosen search term.\n"
                }
            },
            "type": "object",
            "required": [
                "metric"
            ]
        },
        "datadog:index/DashboardWidgetToplistDefinitionRequestQuery:DashboardWidgetToplistDefinitionRequestQuery": {
            "properties": {
                "apmDependencyStatsQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetToplistDefinitionRequestQueryApmDependencyStatsQuery:DashboardWidgetToplistDefinitionRequestQueryApmDependencyStatsQuery",
                    "description": "The APM Dependency Stats query using formulas and functions.\n"
                },
                "apmResourceStatsQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetToplistDefinitionRequestQueryApmResourceStatsQuery:DashboardWidgetToplistDefinitionRequestQueryApmResourceStatsQuery",
                    "description": "The APM Resource Stats query using formulas and functions.\n"
                },
                "cloudCostQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetToplistDefinitionRequestQueryCloudCostQuery:DashboardWidgetToplistDefinitionRequestQueryCloudCostQuery",
                    "description": "The Cloud Cost query using formulas and functions.\n"
                },
                "eventQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetToplistDefinitionRequestQueryEventQuery:DashboardWidgetToplistDefinitionRequestQueryEventQuery",
                    "description": "A timeseries formula and functions events query.\n"
                },
                "metricQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetToplistDefinitionRequestQueryMetricQuery:DashboardWidgetToplistDefinitionRequestQueryMetricQuery",
                    "description": "A timeseries formula and functions metrics query.\n"
                },
                "processQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetToplistDefinitionRequestQueryProcessQuery:DashboardWidgetToplistDefinitionRequestQueryProcessQuery",
                    "description": "The process query using formulas and functions.\n"
                },
                "sloQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetToplistDefinitionRequestQuerySloQuery:DashboardWidgetToplistDefinitionRequestQuerySloQuery",
                    "description": "The SLO query using formulas and functions.\n"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetToplistDefinitionRequestQueryApmDependencyStatsQuery:DashboardWidgetToplistDefinitionRequestQueryApmDependencyStatsQuery": {
            "properties": {
                "crossOrgUuids": {
                    "type": "string",
                    "description": "The source organization UUID for cross organization queries. Feature in Private Beta.\n"
                },
                "dataSource": {
                    "type": "string",
                    "description": "The data source for APM Dependency Stats queries. Valid values are `apm_dependency_stats`.\n"
                },
                "env": {
                    "type": "string",
                    "description": "APM environment.\n"
                },
                "isUpstream": {
                    "type": "boolean",
                    "description": "Determines whether stats for upstream or downstream dependencies should be queried.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of query for use in formulas.\n"
                },
                "operationName": {
                    "type": "string",
                    "description": "Name of operation on service.\n"
                },
                "primaryTagName": {
                    "type": "string",
                    "description": "The name of the second primary tag used within APM; required when `primary_tag_value` is specified. See https://docs.datadoghq.com/tracing/guide/setting*primary*tags*to*scope/#add-a-second-primary-tag-in-datadog.\n"
                },
                "primaryTagValue": {
                    "type": "string",
                    "description": "Filter APM data by the second primary tag. `primary_tag_name` must also be specified.\n"
                },
                "resourceName": {
                    "type": "string",
                    "description": "APM resource.\n"
                },
                "service": {
                    "type": "string",
                    "description": "APM service.\n"
                },
                "stat": {
                    "type": "string",
                    "description": "APM statistic. Valid values are `avg_duration`, `avg_root_duration`, `avg_spans_per_trace`, `error_rate`, `pct_exec_time`, `pct_of_traces`, `total_traces_count`.\n"
                }
            },
            "type": "object",
            "required": [
                "dataSource",
                "env",
                "name",
                "operationName",
                "resourceName",
                "service",
                "stat"
            ]
        },
        "datadog:index/DashboardWidgetToplistDefinitionRequestQueryApmResourceStatsQuery:DashboardWidgetToplistDefinitionRequestQueryApmResourceStatsQuery": {
            "properties": {
                "crossOrgUuids": {
                    "type": "string",
                    "description": "The source organization UUID for cross organization queries. Feature in Private Beta.\n"
                },
                "dataSource": {
                    "type": "string",
                    "description": "The data source for APM Resource Stats queries. Valid values are `apm_resource_stats`.\n"
                },
                "env": {
                    "type": "string",
                    "description": "APM environment.\n"
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Array of fields to group results by.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of query for use in formulas.\n"
                },
                "operationName": {
                    "type": "string",
                    "description": "Name of operation on service.\n"
                },
                "primaryTagName": {
                    "type": "string",
                    "description": "The name of the second primary tag used within APM; required when `primary_tag_value` is specified. See https://docs.datadoghq.com/tracing/guide/setting*primary*tags*to*scope/#add-a-second-primary-tag-in-datadog.\n"
                },
                "primaryTagValue": {
                    "type": "string",
                    "description": "Filter APM data by the second primary tag. `primary_tag_name` must also be specified.\n"
                },
                "resourceName": {
                    "type": "string",
                    "description": "APM resource.\n"
                },
                "service": {
                    "type": "string",
                    "description": "APM service.\n"
                },
                "stat": {
                    "type": "string",
                    "description": "APM statistic. Valid values are `errors`, `error_rate`, `hits`, `latency_avg`, `latency_distribution`, `latency_max`, `latency_p50`, `latency_p75`, `latency_p90`, `latency_p95`, `latency_p99`.\n"
                }
            },
            "type": "object",
            "required": [
                "dataSource",
                "env",
                "name",
                "service",
                "stat"
            ]
        },
        "datadog:index/DashboardWidgetToplistDefinitionRequestQueryCloudCostQuery:DashboardWidgetToplistDefinitionRequestQueryCloudCostQuery": {
            "properties": {
                "aggregator": {
                    "type": "string",
                    "description": "The aggregation methods available for cloud cost queries. Valid values are `avg`, `last`, `max`, `min`, `sum`, `percentile`.\n"
                },
                "crossOrgUuids": {
                    "type": "string",
                    "description": "The source organization UUID for cross organization queries. Feature in Private Beta.\n"
                },
                "dataSource": {
                    "type": "string",
                    "description": "The data source for cloud cost queries. Valid values are `cloud_cost`.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the query for use in formulas.\n"
                },
                "query": {
                    "type": "string",
                    "description": "The cloud cost query definition.\n"
                }
            },
            "type": "object",
            "required": [
                "dataSource",
                "name",
                "query"
            ]
        },
        "datadog:index/DashboardWidgetToplistDefinitionRequestQueryEventQuery:DashboardWidgetToplistDefinitionRequestQueryEventQuery": {
            "properties": {
                "computes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetToplistDefinitionRequestQueryEventQueryCompute:DashboardWidgetToplistDefinitionRequestQueryEventQueryCompute"
                    },
                    "description": "The compute options.\n"
                },
                "crossOrgUuids": {
                    "type": "string",
                    "description": "The source organization UUID for cross organization queries. Feature in Private Beta.\n"
                },
                "dataSource": {
                    "type": "string",
                    "description": "The data source for event platform-based queries. Valid values are `logs`, `spans`, `network`, `rum`, `security_signals`, `profiles`, `audit`, `events`, `ci_tests`, `ci_pipelines`, `incident_analytics`.\n"
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetToplistDefinitionRequestQueryEventQueryGroupBy:DashboardWidgetToplistDefinitionRequestQueryEventQueryGroupBy"
                    },
                    "description": "Group by options.\n"
                },
                "indexes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "An array of index names to query in the stream.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of query for use in formulas.\n"
                },
                "search": {
                    "$ref": "#/types/datadog:index/DashboardWidgetToplistDefinitionRequestQueryEventQuerySearch:DashboardWidgetToplistDefinitionRequestQueryEventQuerySearch",
                    "description": "The search options.\n"
                },
                "storage": {
                    "type": "string",
                    "description": "Storage location (private beta).\n"
                }
            },
            "type": "object",
            "required": [
                "computes",
                "dataSource",
                "name"
            ]
        },
        "datadog:index/DashboardWidgetToplistDefinitionRequestQueryEventQueryCompute:DashboardWidgetToplistDefinitionRequestQueryEventQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "The aggregation methods for event platform queries. Valid values are `count`, `cardinality`, `median`, `pc75`, `pc90`, `pc95`, `pc98`, `pc99`, `sum`, `min`, `max`, `avg`.\n"
                },
                "interval": {
                    "type": "integer",
                    "description": "A time interval in milliseconds.\n"
                },
                "metric": {
                    "type": "string",
                    "description": "The measurable attribute to compute.\n"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetToplistDefinitionRequestQueryEventQueryGroupBy:DashboardWidgetToplistDefinitionRequestQueryEventQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "description": "The event facet.\n"
                },
                "limit": {
                    "type": "integer",
                    "description": "The number of groups to return.\n"
                },
                "sort": {
                    "$ref": "#/types/datadog:index/DashboardWidgetToplistDefinitionRequestQueryEventQueryGroupBySort:DashboardWidgetToplistDefinitionRequestQueryEventQueryGroupBySort",
                    "description": "The options for sorting group by results.\n"
                }
            },
            "type": "object",
            "required": [
                "facet"
            ]
        },
        "datadog:index/DashboardWidgetToplistDefinitionRequestQueryEventQueryGroupBySort:DashboardWidgetToplistDefinitionRequestQueryEventQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "The aggregation methods for the event platform queries. Valid values are `count`, `cardinality`, `median`, `pc75`, `pc90`, `pc95`, `pc98`, `pc99`, `sum`, `min`, `max`, `avg`.\n"
                },
                "metric": {
                    "type": "string",
                    "description": "The metric used for sorting group by results.\n"
                },
                "order": {
                    "type": "string",
                    "description": "Direction of sort. Valid values are `asc`, `desc`.\n"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetToplistDefinitionRequestQueryEventQuerySearch:DashboardWidgetToplistDefinitionRequestQueryEventQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "description": "The events search string.\n"
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/DashboardWidgetToplistDefinitionRequestQueryMetricQuery:DashboardWidgetToplistDefinitionRequestQueryMetricQuery": {
            "properties": {
                "aggregator": {
                    "type": "string",
                    "description": "The aggregation methods available for metrics queries. Valid values are `avg`, `min`, `max`, `sum`, `last`, `area`, `l2norm`, `percentile`.\n"
                },
                "crossOrgUuids": {
                    "type": "string",
                    "description": "The source organization UUID for cross organization queries. Feature in Private Beta.\n"
                },
                "dataSource": {
                    "type": "string",
                    "description": "The data source for metrics queries. Defaults to `\"metrics\"`.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the query for use in formulas.\n"
                },
                "query": {
                    "type": "string",
                    "description": "The metrics query definition.\n"
                }
            },
            "type": "object",
            "required": [
                "name",
                "query"
            ]
        },
        "datadog:index/DashboardWidgetToplistDefinitionRequestQueryProcessQuery:DashboardWidgetToplistDefinitionRequestQueryProcessQuery": {
            "properties": {
                "aggregator": {
                    "type": "string",
                    "description": "The aggregation methods available for metrics queries. Valid values are `avg`, `min`, `max`, `sum`, `last`, `area`, `l2norm`, `percentile`.\n"
                },
                "crossOrgUuids": {
                    "type": "string",
                    "description": "The source organization UUID for cross organization queries. Feature in Private Beta.\n"
                },
                "dataSource": {
                    "type": "string",
                    "description": "The data source for process queries. Valid values are `process`, `container`.\n"
                },
                "isNormalizedCpu": {
                    "type": "boolean",
                    "description": "Whether to normalize the CPU percentages.\n"
                },
                "limit": {
                    "type": "integer",
                    "description": "The number of hits to return.\n"
                },
                "metric": {
                    "type": "string",
                    "description": "The process metric name.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of query for use in formulas.\n"
                },
                "sort": {
                    "type": "string",
                    "description": "The direction of the sort. Valid values are `asc`, `desc`. Defaults to `\"desc\"`.\n"
                },
                "tagFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "An array of tags to filter by.\n"
                },
                "textFilter": {
                    "type": "string",
                    "description": "The text to use as a filter.\n"
                }
            },
            "type": "object",
            "required": [
                "dataSource",
                "metric",
                "name"
            ]
        },
        "datadog:index/DashboardWidgetToplistDefinitionRequestQuerySloQuery:DashboardWidgetToplistDefinitionRequestQuerySloQuery": {
            "properties": {
                "additionalQueryFilters": {
                    "type": "string",
                    "description": "Additional filters applied to the SLO query.\n"
                },
                "crossOrgUuids": {
                    "type": "string",
                    "description": "The source organization UUID for cross organization queries. Feature in Private Beta.\n"
                },
                "dataSource": {
                    "type": "string",
                    "description": "The data source for SLO queries. Valid values are `slo`.\n"
                },
                "groupMode": {
                    "type": "string",
                    "description": "Group mode to query measures. Valid values are `overall`, `components`. Defaults to `\"overall\"`.\n"
                },
                "measure": {
                    "type": "string",
                    "description": "SLO measures queries. Valid values are `good_events`, `bad_events`, `slo_status`, `error_budget_remaining`, `burn_rate`, `error_budget_burndown`.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of query for use in formulas.\n"
                },
                "sloId": {
                    "type": "string",
                    "description": "ID of an SLO to query.\n"
                },
                "sloQueryType": {
                    "type": "string",
                    "description": "type of the SLO to query. Valid values are `metric`, `time_slice`. Defaults to `\"metric\"`.\n"
                }
            },
            "type": "object",
            "required": [
                "dataSource",
                "measure",
                "sloId"
            ]
        },
        "datadog:index/DashboardWidgetToplistDefinitionRequestStyle:DashboardWidgetToplistDefinitionRequestStyle": {
            "properties": {
                "palette": {
                    "type": "string",
                    "description": "A color palette to apply to the widget. The available options are available at: https://docs.datadoghq.com/dashboards/widgets/timeseries/#appearance.\n"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetTopologyMapDefinition:DashboardWidgetTopologyMapDefinition": {
            "properties": {
                "customLinks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetTopologyMapDefinitionCustomLink:DashboardWidgetTopologyMapDefinitionCustomLink"
                    },
                    "description": "A nested block describing a custom link. Multiple `custom_link` blocks are allowed using the structure below.\n"
                },
                "requests": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetTopologyMapDefinitionRequest:DashboardWidgetTopologyMapDefinitionRequest"
                    },
                    "description": "A nested block describing the request to use when displaying the widget. Multiple request blocks are allowed using the structure below (`query` and `request_type` are required within the request).\n"
                },
                "title": {
                    "type": "string",
                    "description": "The title of the widget.\n"
                },
                "titleAlign": {
                    "type": "string",
                    "description": "The alignment of the widget's title. Valid values are `center`, `left`, `right`.\n"
                },
                "titleSize": {
                    "type": "string",
                    "description": "The size of the widget's title (defaults to 16).\n"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetTopologyMapDefinitionCustomLink:DashboardWidgetTopologyMapDefinitionCustomLink": {
            "properties": {
                "isHidden": {
                    "type": "boolean",
                    "description": "The flag for toggling context menu link visibility.\n"
                },
                "label": {
                    "type": "string",
                    "description": "The label for the custom link URL.\n"
                },
                "link": {
                    "type": "string",
                    "description": "The URL of the custom link.\n"
                },
                "overrideLabel": {
                    "type": "string",
                    "description": "The label ID that refers to a context menu link item. When `override_label` is provided, the client request omits the label field.\n"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetTopologyMapDefinitionRequest:DashboardWidgetTopologyMapDefinitionRequest": {
            "properties": {
                "queries": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetTopologyMapDefinitionRequestQuery:DashboardWidgetTopologyMapDefinitionRequestQuery"
                    },
                    "description": "The query for a Topology request.\n"
                },
                "requestType": {
                    "type": "string",
                    "description": "The request type for the Topology request ('topology'). Valid values are `topology`.\n"
                }
            },
            "type": "object",
            "required": [
                "queries",
                "requestType"
            ]
        },
        "datadog:index/DashboardWidgetTopologyMapDefinitionRequestQuery:DashboardWidgetTopologyMapDefinitionRequestQuery": {
            "properties": {
                "dataSource": {
                    "type": "string",
                    "description": "The data source for the Topology request ('service*map' or 'data*streams'). Valid values are `data_streams`, `service_map`.\n"
                },
                "filters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Your environment and primary tag (or `*` if enabled for your account).\n"
                },
                "service": {
                    "type": "string",
                    "description": "The ID of the service to map.\n"
                }
            },
            "type": "object",
            "required": [
                "dataSource",
                "filters",
                "service"
            ]
        },
        "datadog:index/DashboardWidgetTraceServiceDefinition:DashboardWidgetTraceServiceDefinition": {
            "properties": {
                "displayFormat": {
                    "type": "string",
                    "description": "The number of columns to display. Valid values are `one_column`, `two_column`, `three_column`.\n"
                },
                "env": {
                    "type": "string",
                    "description": "APM environment.\n"
                },
                "liveSpan": {
                    "type": "string",
                    "description": "The timeframe to use when displaying the widget. Valid values are `1m`, `5m`, `10m`, `15m`, `30m`, `1h`, `4h`, `1d`, `2d`, `1w`, `1mo`, `3mo`, `6mo`, `week_to_date`, `month_to_date`, `1y`, `alert`.\n"
                },
                "service": {
                    "type": "string",
                    "description": "APM service.\n"
                },
                "showBreakdown": {
                    "type": "boolean",
                    "description": "Whether to show the latency breakdown or not.\n"
                },
                "showDistribution": {
                    "type": "boolean",
                    "description": "Whether to show the latency distribution or not.\n"
                },
                "showErrors": {
                    "type": "boolean",
                    "description": "Whether to show the error metrics or not.\n"
                },
                "showHits": {
                    "type": "boolean",
                    "description": "Whether to show the hits metrics or not\n"
                },
                "showLatency": {
                    "type": "boolean",
                    "description": "Whether to show the latency metrics or not.\n"
                },
                "showResourceList": {
                    "type": "boolean",
                    "description": "Whether to show the resource list or not.\n"
                },
                "sizeFormat": {
                    "type": "string",
                    "description": "The size of the widget. Valid values are `small`, `medium`, `large`.\n"
                },
                "spanName": {
                    "type": "string",
                    "description": "APM span name\n"
                },
                "title": {
                    "type": "string",
                    "description": "The title of the widget.\n"
                },
                "titleAlign": {
                    "type": "string",
                    "description": "The alignment of the widget's title. Valid values are `center`, `left`, `right`.\n"
                },
                "titleSize": {
                    "type": "string",
                    "description": "The size of the widget's title (defaults to 16).\n"
                }
            },
            "type": "object",
            "required": [
                "env",
                "service",
                "spanName"
            ]
        },
        "datadog:index/DashboardWidgetTreemapDefinition:DashboardWidgetTreemapDefinition": {
            "properties": {
                "requests": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetTreemapDefinitionRequest:DashboardWidgetTreemapDefinitionRequest"
                    },
                    "description": "Nested block describing the request to use when displaying the widget.\n"
                },
                "title": {
                    "type": "string",
                    "description": "The title of the widget.\n"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetTreemapDefinitionRequest:DashboardWidgetTreemapDefinitionRequest": {
            "properties": {
                "formulas": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetTreemapDefinitionRequestFormula:DashboardWidgetTreemapDefinitionRequestFormula"
                    }
                },
                "queries": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetTreemapDefinitionRequestQuery:DashboardWidgetTreemapDefinitionRequestQuery"
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetTreemapDefinitionRequestFormula:DashboardWidgetTreemapDefinitionRequestFormula": {
            "properties": {
                "alias": {
                    "type": "string",
                    "description": "An expression alias.\n"
                },
                "cellDisplayMode": {
                    "type": "string",
                    "description": "A list of display modes for each table cell. Valid values are `number`, `bar`.\n"
                },
                "conditionalFormats": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetTreemapDefinitionRequestFormulaConditionalFormat:DashboardWidgetTreemapDefinitionRequestFormulaConditionalFormat"
                    },
                    "description": "Conditional formats allow you to set the color of your widget content or background depending on the rule applied to your data. Multiple `conditional_formats` blocks are allowed using the structure below.\n"
                },
                "formulaExpression": {
                    "type": "string",
                    "description": "A string expression built from queries, formulas, and functions.\n"
                },
                "limit": {
                    "$ref": "#/types/datadog:index/DashboardWidgetTreemapDefinitionRequestFormulaLimit:DashboardWidgetTreemapDefinitionRequestFormulaLimit",
                    "description": "The options for limiting results returned.\n"
                },
                "style": {
                    "$ref": "#/types/datadog:index/DashboardWidgetTreemapDefinitionRequestFormulaStyle:DashboardWidgetTreemapDefinitionRequestFormulaStyle",
                    "description": "Styling options for widget formulas.\n"
                }
            },
            "type": "object",
            "required": [
                "formulaExpression"
            ]
        },
        "datadog:index/DashboardWidgetTreemapDefinitionRequestFormulaConditionalFormat:DashboardWidgetTreemapDefinitionRequestFormulaConditionalFormat": {
            "properties": {
                "comparator": {
                    "type": "string",
                    "description": "The comparator to use. Valid values are `=`, `\u003e`, `\u003e=`, `\u003c`, `\u003c=`.\n"
                },
                "customBgColor": {
                    "type": "string",
                    "description": "The color palette to apply to the background, same values available as palette.\n"
                },
                "customFgColor": {
                    "type": "string",
                    "description": "The color palette to apply to the foreground, same values available as palette.\n"
                },
                "hideValue": {
                    "type": "boolean",
                    "description": "Setting this to True hides values.\n"
                },
                "imageUrl": {
                    "type": "string",
                    "description": "Displays an image as the background.\n"
                },
                "metric": {
                    "type": "string",
                    "description": "The metric from the request to correlate with this conditional format.\n"
                },
                "palette": {
                    "type": "string",
                    "description": "The color palette to apply. Valid values are `blue`, `custom_bg`, `custom_image`, `custom_text`, `gray_on_white`, `grey`, `green`, `orange`, `red`, `red_on_white`, `white_on_gray`, `white_on_green`, `green_on_white`, `white_on_red`, `white_on_yellow`, `yellow_on_white`, `black_on_light_yellow`, `black_on_light_green`, `black_on_light_red`.\n"
                },
                "timeframe": {
                    "type": "string",
                    "description": "Defines the displayed timeframe.\n"
                },
                "value": {
                    "type": "number",
                    "description": "A value for the comparator.\n"
                }
            },
            "type": "object",
            "required": [
                "comparator",
                "palette",
                "value"
            ]
        },
        "datadog:index/DashboardWidgetTreemapDefinitionRequestFormulaLimit:DashboardWidgetTreemapDefinitionRequestFormulaLimit": {
            "properties": {
                "count": {
                    "type": "integer",
                    "description": "The number of results to return.\n"
                },
                "order": {
                    "type": "string",
                    "description": "The direction of the sort. Valid values are `asc`, `desc`. Defaults to `\"desc\"`.\n"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetTreemapDefinitionRequestFormulaStyle:DashboardWidgetTreemapDefinitionRequestFormulaStyle": {
            "properties": {
                "palette": {
                    "type": "string",
                    "description": "The color palette used to display the formula. A guide to the available color palettes can be found at https://docs.datadoghq.com/dashboards/guide/widget_colors.\n"
                },
                "paletteIndex": {
                    "type": "integer",
                    "description": "Index specifying which color to use within the palette.\n"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetTreemapDefinitionRequestQuery:DashboardWidgetTreemapDefinitionRequestQuery": {
            "properties": {
                "apmDependencyStatsQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetTreemapDefinitionRequestQueryApmDependencyStatsQuery:DashboardWidgetTreemapDefinitionRequestQueryApmDependencyStatsQuery",
                    "description": "The APM Dependency Stats query using formulas and functions.\n"
                },
                "apmResourceStatsQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetTreemapDefinitionRequestQueryApmResourceStatsQuery:DashboardWidgetTreemapDefinitionRequestQueryApmResourceStatsQuery",
                    "description": "The APM Resource Stats query using formulas and functions.\n"
                },
                "cloudCostQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetTreemapDefinitionRequestQueryCloudCostQuery:DashboardWidgetTreemapDefinitionRequestQueryCloudCostQuery",
                    "description": "The Cloud Cost query using formulas and functions.\n"
                },
                "eventQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetTreemapDefinitionRequestQueryEventQuery:DashboardWidgetTreemapDefinitionRequestQueryEventQuery",
                    "description": "A timeseries formula and functions events query.\n"
                },
                "metricQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetTreemapDefinitionRequestQueryMetricQuery:DashboardWidgetTreemapDefinitionRequestQueryMetricQuery",
                    "description": "A timeseries formula and functions metrics query.\n"
                },
                "processQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetTreemapDefinitionRequestQueryProcessQuery:DashboardWidgetTreemapDefinitionRequestQueryProcessQuery",
                    "description": "The process query using formulas and functions.\n"
                },
                "sloQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetTreemapDefinitionRequestQuerySloQuery:DashboardWidgetTreemapDefinitionRequestQuerySloQuery",
                    "description": "The SLO query using formulas and functions.\n"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetTreemapDefinitionRequestQueryApmDependencyStatsQuery:DashboardWidgetTreemapDefinitionRequestQueryApmDependencyStatsQuery": {
            "properties": {
                "crossOrgUuids": {
                    "type": "string",
                    "description": "The source organization UUID for cross organization queries. Feature in Private Beta.\n"
                },
                "dataSource": {
                    "type": "string",
                    "description": "The data source for APM Dependency Stats queries. Valid values are `apm_dependency_stats`.\n"
                },
                "env": {
                    "type": "string",
                    "description": "APM environment.\n"
                },
                "isUpstream": {
                    "type": "boolean",
                    "description": "Determines whether stats for upstream or downstream dependencies should be queried.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of query for use in formulas.\n"
                },
                "operationName": {
                    "type": "string",
                    "description": "Name of operation on service.\n"
                },
                "primaryTagName": {
                    "type": "string",
                    "description": "The name of the second primary tag used within APM; required when `primary_tag_value` is specified. See https://docs.datadoghq.com/tracing/guide/setting*primary*tags*to*scope/#add-a-second-primary-tag-in-datadog.\n"
                },
                "primaryTagValue": {
                    "type": "string",
                    "description": "Filter APM data by the second primary tag. `primary_tag_name` must also be specified.\n"
                },
                "resourceName": {
                    "type": "string",
                    "description": "APM resource.\n"
                },
                "service": {
                    "type": "string",
                    "description": "APM service.\n"
                },
                "stat": {
                    "type": "string",
                    "description": "APM statistic. Valid values are `avg_duration`, `avg_root_duration`, `avg_spans_per_trace`, `error_rate`, `pct_exec_time`, `pct_of_traces`, `total_traces_count`.\n"
                }
            },
            "type": "object",
            "required": [
                "dataSource",
                "env",
                "name",
                "operationName",
                "resourceName",
                "service",
                "stat"
            ]
        },
        "datadog:index/DashboardWidgetTreemapDefinitionRequestQueryApmResourceStatsQuery:DashboardWidgetTreemapDefinitionRequestQueryApmResourceStatsQuery": {
            "properties": {
                "crossOrgUuids": {
                    "type": "string",
                    "description": "The source organization UUID for cross organization queries. Feature in Private Beta.\n"
                },
                "dataSource": {
                    "type": "string",
                    "description": "The data source for APM Resource Stats queries. Valid values are `apm_resource_stats`.\n"
                },
                "env": {
                    "type": "string",
                    "description": "APM environment.\n"
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Array of fields to group results by.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of query for use in formulas.\n"
                },
                "operationName": {
                    "type": "string",
                    "description": "Name of operation on service.\n"
                },
                "primaryTagName": {
                    "type": "string",
                    "description": "The name of the second primary tag used within APM; required when `primary_tag_value` is specified. See https://docs.datadoghq.com/tracing/guide/setting*primary*tags*to*scope/#add-a-second-primary-tag-in-datadog.\n"
                },
                "primaryTagValue": {
                    "type": "string",
                    "description": "Filter APM data by the second primary tag. `primary_tag_name` must also be specified.\n"
                },
                "resourceName": {
                    "type": "string",
                    "description": "APM resource.\n"
                },
                "service": {
                    "type": "string",
                    "description": "APM service.\n"
                },
                "stat": {
                    "type": "string",
                    "description": "APM statistic. Valid values are `errors`, `error_rate`, `hits`, `latency_avg`, `latency_distribution`, `latency_max`, `latency_p50`, `latency_p75`, `latency_p90`, `latency_p95`, `latency_p99`.\n"
                }
            },
            "type": "object",
            "required": [
                "dataSource",
                "env",
                "name",
                "service",
                "stat"
            ]
        },
        "datadog:index/DashboardWidgetTreemapDefinitionRequestQueryCloudCostQuery:DashboardWidgetTreemapDefinitionRequestQueryCloudCostQuery": {
            "properties": {
                "aggregator": {
                    "type": "string",
                    "description": "The aggregation methods available for cloud cost queries. Valid values are `avg`, `last`, `max`, `min`, `sum`, `percentile`.\n"
                },
                "crossOrgUuids": {
                    "type": "string",
                    "description": "The source organization UUID for cross organization queries. Feature in Private Beta.\n"
                },
                "dataSource": {
                    "type": "string",
                    "description": "The data source for cloud cost queries. Valid values are `cloud_cost`.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the query for use in formulas.\n"
                },
                "query": {
                    "type": "string",
                    "description": "The cloud cost query definition.\n"
                }
            },
            "type": "object",
            "required": [
                "dataSource",
                "name",
                "query"
            ]
        },
        "datadog:index/DashboardWidgetTreemapDefinitionRequestQueryEventQuery:DashboardWidgetTreemapDefinitionRequestQueryEventQuery": {
            "properties": {
                "computes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetTreemapDefinitionRequestQueryEventQueryCompute:DashboardWidgetTreemapDefinitionRequestQueryEventQueryCompute"
                    },
                    "description": "The compute options.\n"
                },
                "crossOrgUuids": {
                    "type": "string",
                    "description": "The source organization UUID for cross organization queries. Feature in Private Beta.\n"
                },
                "dataSource": {
                    "type": "string",
                    "description": "The data source for event platform-based queries. Valid values are `logs`, `spans`, `network`, `rum`, `security_signals`, `profiles`, `audit`, `events`, `ci_tests`, `ci_pipelines`, `incident_analytics`.\n"
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetTreemapDefinitionRequestQueryEventQueryGroupBy:DashboardWidgetTreemapDefinitionRequestQueryEventQueryGroupBy"
                    },
                    "description": "Group by options.\n"
                },
                "indexes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "An array of index names to query in the stream.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of query for use in formulas.\n"
                },
                "search": {
                    "$ref": "#/types/datadog:index/DashboardWidgetTreemapDefinitionRequestQueryEventQuerySearch:DashboardWidgetTreemapDefinitionRequestQueryEventQuerySearch",
                    "description": "The search options.\n"
                },
                "storage": {
                    "type": "string",
                    "description": "Storage location (private beta).\n"
                }
            },
            "type": "object",
            "required": [
                "computes",
                "dataSource",
                "name"
            ]
        },
        "datadog:index/DashboardWidgetTreemapDefinitionRequestQueryEventQueryCompute:DashboardWidgetTreemapDefinitionRequestQueryEventQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "The aggregation methods for event platform queries. Valid values are `count`, `cardinality`, `median`, `pc75`, `pc90`, `pc95`, `pc98`, `pc99`, `sum`, `min`, `max`, `avg`.\n"
                },
                "interval": {
                    "type": "integer",
                    "description": "A time interval in milliseconds.\n"
                },
                "metric": {
                    "type": "string",
                    "description": "The measurable attribute to compute.\n"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetTreemapDefinitionRequestQueryEventQueryGroupBy:DashboardWidgetTreemapDefinitionRequestQueryEventQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "description": "The event facet.\n"
                },
                "limit": {
                    "type": "integer",
                    "description": "The number of groups to return.\n"
                },
                "sort": {
                    "$ref": "#/types/datadog:index/DashboardWidgetTreemapDefinitionRequestQueryEventQueryGroupBySort:DashboardWidgetTreemapDefinitionRequestQueryEventQueryGroupBySort",
                    "description": "The options for sorting group by results.\n"
                }
            },
            "type": "object",
            "required": [
                "facet"
            ]
        },
        "datadog:index/DashboardWidgetTreemapDefinitionRequestQueryEventQueryGroupBySort:DashboardWidgetTreemapDefinitionRequestQueryEventQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "The aggregation methods for the event platform queries. Valid values are `count`, `cardinality`, `median`, `pc75`, `pc90`, `pc95`, `pc98`, `pc99`, `sum`, `min`, `max`, `avg`.\n"
                },
                "metric": {
                    "type": "string",
                    "description": "The metric used for sorting group by results.\n"
                },
                "order": {
                    "type": "string",
                    "description": "Direction of sort. Valid values are `asc`, `desc`.\n"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetTreemapDefinitionRequestQueryEventQuerySearch:DashboardWidgetTreemapDefinitionRequestQueryEventQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "description": "The events search string.\n"
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/DashboardWidgetTreemapDefinitionRequestQueryMetricQuery:DashboardWidgetTreemapDefinitionRequestQueryMetricQuery": {
            "properties": {
                "aggregator": {
                    "type": "string",
                    "description": "The aggregation methods available for metrics queries. Valid values are `avg`, `min`, `max`, `sum`, `last`, `area`, `l2norm`, `percentile`.\n"
                },
                "crossOrgUuids": {
                    "type": "string",
                    "description": "The source organization UUID for cross organization queries. Feature in Private Beta.\n"
                },
                "dataSource": {
                    "type": "string",
                    "description": "The data source for metrics queries. Defaults to `\"metrics\"`.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the query for use in formulas.\n"
                },
                "query": {
                    "type": "string",
                    "description": "The metrics query definition.\n"
                }
            },
            "type": "object",
            "required": [
                "name",
                "query"
            ]
        },
        "datadog:index/DashboardWidgetTreemapDefinitionRequestQueryProcessQuery:DashboardWidgetTreemapDefinitionRequestQueryProcessQuery": {
            "properties": {
                "aggregator": {
                    "type": "string",
                    "description": "The aggregation methods available for metrics queries. Valid values are `avg`, `min`, `max`, `sum`, `last`, `area`, `l2norm`, `percentile`.\n"
                },
                "crossOrgUuids": {
                    "type": "string",
                    "description": "The source organization UUID for cross organization queries. Feature in Private Beta.\n"
                },
                "dataSource": {
                    "type": "string",
                    "description": "The data source for process queries. Valid values are `process`, `container`.\n"
                },
                "isNormalizedCpu": {
                    "type": "boolean",
                    "description": "Whether to normalize the CPU percentages.\n"
                },
                "limit": {
                    "type": "integer",
                    "description": "The number of hits to return.\n"
                },
                "metric": {
                    "type": "string",
                    "description": "The process metric name.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of query for use in formulas.\n"
                },
                "sort": {
                    "type": "string",
                    "description": "The direction of the sort. Valid values are `asc`, `desc`. Defaults to `\"desc\"`.\n"
                },
                "tagFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "An array of tags to filter by.\n"
                },
                "textFilter": {
                    "type": "string",
                    "description": "The text to use as a filter.\n"
                }
            },
            "type": "object",
            "required": [
                "dataSource",
                "metric",
                "name"
            ]
        },
        "datadog:index/DashboardWidgetTreemapDefinitionRequestQuerySloQuery:DashboardWidgetTreemapDefinitionRequestQuerySloQuery": {
            "properties": {
                "additionalQueryFilters": {
                    "type": "string",
                    "description": "Additional filters applied to the SLO query.\n"
                },
                "crossOrgUuids": {
                    "type": "string",
                    "description": "The source organization UUID for cross organization queries. Feature in Private Beta.\n"
                },
                "dataSource": {
                    "type": "string",
                    "description": "The data source for SLO queries. Valid values are `slo`.\n"
                },
                "groupMode": {
                    "type": "string",
                    "description": "Group mode to query measures. Valid values are `overall`, `components`. Defaults to `\"overall\"`.\n"
                },
                "measure": {
                    "type": "string",
                    "description": "SLO measures queries. Valid values are `good_events`, `bad_events`, `slo_status`, `error_budget_remaining`, `burn_rate`, `error_budget_burndown`.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of query for use in formulas.\n"
                },
                "sloId": {
                    "type": "string",
                    "description": "ID of an SLO to query.\n"
                },
                "sloQueryType": {
                    "type": "string",
                    "description": "type of the SLO to query. Valid values are `metric`, `time_slice`. Defaults to `\"metric\"`.\n"
                }
            },
            "type": "object",
            "required": [
                "dataSource",
                "measure",
                "sloId"
            ]
        },
        "datadog:index/DashboardWidgetWidgetLayout:DashboardWidgetWidgetLayout": {
            "properties": {
                "height": {
                    "type": "integer",
                    "description": "The height of the widget.\n"
                },
                "isColumnBreak": {
                    "type": "boolean",
                    "description": "Whether the widget should be the first one on the second column in high density or not. Only one widget in the dashboard should have this property set to `true`.\n"
                },
                "width": {
                    "type": "integer",
                    "description": "The width of the widget.\n"
                },
                "x": {
                    "type": "integer",
                    "description": "The position of the widget on the x (horizontal) axis. Must be greater than or equal to 0.\n"
                },
                "y": {
                    "type": "integer",
                    "description": "The position of the widget on the y (vertical) axis. Must be greater than or equal to 0.\n"
                }
            },
            "type": "object",
            "required": [
                "height",
                "width",
                "x",
                "y"
            ]
        },
        "datadog:index/DowntimeRecurrence:DowntimeRecurrence": {
            "properties": {
                "period": {
                    "type": "integer",
                    "description": "How often to repeat as an integer. For example to repeat every 3 days, select a `type` of `days` and a `period` of `3`.\n"
                },
                "rrule": {
                    "type": "string",
                    "description": "The RRULE standard for defining recurring events. For example, to have a recurring event on the first day of each month, use `FREQ=MONTHLY;INTERVAL=1`. Most common rrule options from the iCalendar Spec are supported. Attributes specifying the duration in RRULE are not supported (for example, `DTSTART`, `DTEND`, `DURATION`). Only applicable when `type` is `rrule`.\n"
                },
                "type": {
                    "type": "string",
                    "description": "One of `days`, `weeks`, `months`, `years`, or `rrule`.\n"
                },
                "untilDate": {
                    "type": "integer",
                    "description": "The date at which the recurrence should end as a POSIX timestamp. `until_occurrences` and `until_date` are mutually exclusive.\n"
                },
                "untilOccurrences": {
                    "type": "integer",
                    "description": "How many times the downtime will be rescheduled. `until_occurrences` and `until_date` are mutually exclusive.\n"
                },
                "weekDays": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of week days to repeat on. Choose from: `Mon`, `Tue`, `Wed`, `Thu`, `Fri`, `Sat` or `Sun`. Only applicable when `type` is `weeks`. First letter must be capitalized.\n"
                }
            },
            "type": "object",
            "required": [
                "type"
            ]
        },
        "datadog:index/DowntimeScheduleMonitorIdentifier:DowntimeScheduleMonitorIdentifier": {
            "properties": {
                "monitorId": {
                    "type": "integer",
                    "description": "ID of the monitor to prevent notifications.\n"
                },
                "monitorTags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of monitor tags. For example, tags that are applied directly to monitors, not tags that are used in monitor queries (which are filtered by the scope parameter), to which the downtime applies. The resulting downtime applies to monitors that match **all** provided monitor tags. Setting `monitor_tags` to `[*]` configures the downtime to mute all monitors for the given scope.\n"
                }
            },
            "type": "object"
        },
        "datadog:index/DowntimeScheduleOneTimeSchedule:DowntimeScheduleOneTimeSchedule": {
            "properties": {
                "end": {
                    "type": "string",
                    "description": "ISO-8601 Datetime to end the downtime. Must include a UTC offset of zero. If not provided, the downtime never ends.\n"
                },
                "start": {
                    "type": "string",
                    "description": "ISO-8601 Datetime to start the downtime. Must include a UTC offset of zero. If not provided, the downtime starts the moment it is created.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "start"
                    ]
                }
            }
        },
        "datadog:index/DowntimeScheduleRecurringSchedule:DowntimeScheduleRecurringSchedule": {
            "properties": {
                "recurrences": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DowntimeScheduleRecurringScheduleRecurrence:DowntimeScheduleRecurringScheduleRecurrence"
                    }
                },
                "timezone": {
                    "type": "string",
                    "description": "The timezone in which to schedule the downtime.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "timezone"
                    ]
                }
            }
        },
        "datadog:index/DowntimeScheduleRecurringScheduleRecurrence:DowntimeScheduleRecurringScheduleRecurrence": {
            "properties": {
                "duration": {
                    "type": "string",
                    "description": "The length of the downtime. Must begin with an integer and end with one of 'm', 'h', d', or 'w'.\n"
                },
                "rrule": {
                    "type": "string",
                    "description": "The `RRULE` standard for defining recurring events. For example, to have a recurring event on the first day of each month, set the type to `rrule` and set the `FREQ` to `MONTHLY` and `BYMONTHDAY` to `1`. Most common `rrule` options from the [iCalendar Spec](https://tools.ietf.org/html/rfc5545) are supported.  **Note**: Attributes specifying the duration in `RRULE` are not supported (for example, `DTSTART`, `DTEND`, `DURATION`). More examples available in this [downtime guide](https://docs.datadoghq.com/monitors/guide/suppress-alert-with-downtimes/?tab=api).\n"
                },
                "start": {
                    "type": "string",
                    "description": "ISO-8601 Datetime to start the downtime. Must not include a UTC offset. If not provided, the downtime starts the moment it is created.\n"
                }
            },
            "type": "object",
            "required": [
                "duration",
                "rrule"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "duration",
                        "rrule",
                        "start"
                    ]
                }
            }
        },
        "datadog:index/IpAllowlistEntry:IpAllowlistEntry": {
            "properties": {
                "cidrBlock": {
                    "type": "string",
                    "description": "IP address or range of addresses.\n"
                },
                "note": {
                    "type": "string",
                    "description": "Note accompanying IP address.\n"
                }
            },
            "type": "object",
            "required": [
                "cidrBlock"
            ]
        },
        "datadog:index/LogsArchiveAzureArchive:LogsArchiveAzureArchive": {
            "properties": {
                "clientId": {
                    "type": "string",
                    "description": "Your client id.\n"
                },
                "container": {
                    "type": "string",
                    "description": "The container where the archive is stored.\n"
                },
                "path": {
                    "type": "string",
                    "description": "The path where the archive is stored.\n"
                },
                "storageAccount": {
                    "type": "string",
                    "description": "The associated storage account.\n"
                },
                "tenantId": {
                    "type": "string",
                    "description": "Your tenant id.\n"
                }
            },
            "type": "object",
            "required": [
                "clientId",
                "container",
                "storageAccount",
                "tenantId"
            ]
        },
        "datadog:index/LogsArchiveGcsArchive:LogsArchiveGcsArchive": {
            "properties": {
                "bucket": {
                    "type": "string",
                    "description": "Name of your GCS bucket.\n"
                },
                "clientEmail": {
                    "type": "string",
                    "description": "Your client email.\n"
                },
                "path": {
                    "type": "string",
                    "description": "Path where the archive is stored.\n"
                },
                "projectId": {
                    "type": "string",
                    "description": "Your project id.\n"
                }
            },
            "type": "object",
            "required": [
                "bucket",
                "clientEmail"
            ]
        },
        "datadog:index/LogsArchiveS3Archive:LogsArchiveS3Archive": {
            "properties": {
                "accountId": {
                    "type": "string",
                    "description": "Your AWS account id.\n"
                },
                "bucket": {
                    "type": "string",
                    "description": "Name of your s3 bucket.\n"
                },
                "path": {
                    "type": "string",
                    "description": "Path where the archive is stored.\n"
                },
                "roleName": {
                    "type": "string",
                    "description": "Your AWS role name\n"
                }
            },
            "type": "object",
            "required": [
                "accountId",
                "bucket",
                "roleName"
            ]
        },
        "datadog:index/LogsCustomDestinationElasticsearchDestination:LogsCustomDestinationElasticsearchDestination": {
            "properties": {
                "basicAuth": {
                    "$ref": "#/types/datadog:index/LogsCustomDestinationElasticsearchDestinationBasicAuth:LogsCustomDestinationElasticsearchDestinationBasicAuth",
                    "description": "Basic access authentication.\n"
                },
                "endpoint": {
                    "type": "string",
                    "description": "The destination for which logs will be forwarded to. Must have HTTPS scheme. Forwarding back to Datadog is not allowed.\n"
                },
                "indexName": {
                    "type": "string",
                    "description": "Name of the Elasticsearch index (must follow [Elasticsearch's criteria](https://www.elastic.co/guide/en/elasticsearch/reference/8.11/indices-create-index.html#indices-create-api-path-params)).\n"
                },
                "indexRotation": {
                    "type": "string",
                    "description": "Date pattern with US locale and UTC timezone to be appended to the index name after adding '-'\n\t\t\t\t\t\t(that is, '${index_name}-${indexPattern}').\n\t\t\t\t\t\tYou can customize the index rotation naming pattern by choosing one of these options:\n\t\t\t\t\t\t- Hourly: 'yyyy-MM-dd-HH' (as an example, it would render: '2022-10-19-09')\n\t\t\t\t\t\t- Daily: 'yyyy-MM-dd' (as an example, it would render: '2022-10-19')\n\t\t\t\t\t\t- Weekly: 'yyyy-'W'ww' (as an example, it would render: '2022-W42')\n\t\t\t\t\t\t- Monthly: 'yyyy-MM' (as an example, it would render: '2022-10')\n\t\t\t\t\t\tIf this field is missing or is blank, it means that the index name will always be the same\n\t\t\t\t\t\t(that is, no rotation).\n"
                }
            },
            "type": "object",
            "required": [
                "basicAuth",
                "endpoint",
                "indexName"
            ]
        },
        "datadog:index/LogsCustomDestinationElasticsearchDestinationBasicAuth:LogsCustomDestinationElasticsearchDestinationBasicAuth": {
            "properties": {
                "password": {
                    "type": "string",
                    "description": "The password of the authentication. This field is not returned by the API.\n",
                    "secret": true
                },
                "username": {
                    "type": "string",
                    "description": "The username of the authentication. This field is not returned by the API.\n",
                    "secret": true
                }
            },
            "type": "object",
            "required": [
                "password",
                "username"
            ]
        },
        "datadog:index/LogsCustomDestinationHttpDestination:LogsCustomDestinationHttpDestination": {
            "properties": {
                "basicAuth": {
                    "$ref": "#/types/datadog:index/LogsCustomDestinationHttpDestinationBasicAuth:LogsCustomDestinationHttpDestinationBasicAuth",
                    "description": "Basic access authentication.\n"
                },
                "customHeaderAuth": {
                    "$ref": "#/types/datadog:index/LogsCustomDestinationHttpDestinationCustomHeaderAuth:LogsCustomDestinationHttpDestinationCustomHeaderAuth",
                    "description": "Custom header access authentication.\n"
                },
                "endpoint": {
                    "type": "string",
                    "description": "The destination for which logs will be forwarded to. Must have HTTPS scheme. Forwarding back to Datadog is not allowed.\n"
                }
            },
            "type": "object",
            "required": [
                "endpoint"
            ]
        },
        "datadog:index/LogsCustomDestinationHttpDestinationBasicAuth:LogsCustomDestinationHttpDestinationBasicAuth": {
            "properties": {
                "password": {
                    "type": "string",
                    "description": "The password of the authentication. This field is not returned by the API.\n",
                    "secret": true
                },
                "username": {
                    "type": "string",
                    "description": "The username of the authentication. This field is not returned by the API.\n",
                    "secret": true
                }
            },
            "type": "object",
            "required": [
                "password",
                "username"
            ]
        },
        "datadog:index/LogsCustomDestinationHttpDestinationCustomHeaderAuth:LogsCustomDestinationHttpDestinationCustomHeaderAuth": {
            "properties": {
                "headerName": {
                    "type": "string",
                    "description": "The header name of the authentication.\n"
                },
                "headerValue": {
                    "type": "string",
                    "description": "The header value of the authentication. This field is not returned by the API.\n",
                    "secret": true
                }
            },
            "type": "object",
            "required": [
                "headerName",
                "headerValue"
            ]
        },
        "datadog:index/LogsCustomDestinationSplunkDestination:LogsCustomDestinationSplunkDestination": {
            "properties": {
                "accessToken": {
                    "type": "string",
                    "description": "Access token of the Splunk HTTP Event Collector. This field is not returned by the API.\n",
                    "secret": true
                },
                "endpoint": {
                    "type": "string",
                    "description": "The destination for which logs will be forwarded to. Must have HTTPS scheme. Forwarding back to Datadog is not allowed.\n"
                }
            },
            "type": "object",
            "required": [
                "accessToken",
                "endpoint"
            ]
        },
        "datadog:index/LogsCustomPipelineFilter:LogsCustomPipelineFilter": {
            "properties": {
                "query": {
                    "type": "string",
                    "description": "Filter criteria of the category.\n"
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/LogsCustomPipelineProcessor:LogsCustomPipelineProcessor": {
            "properties": {
                "arithmeticProcessor": {
                    "$ref": "#/types/datadog:index/LogsCustomPipelineProcessorArithmeticProcessor:LogsCustomPipelineProcessorArithmeticProcessor",
                    "description": "Arithmetic Processor. More information can be found in the [official docs](https://docs.datadoghq.com/logs/processing/processors/?tab=ui#arithmetic-processor)\n"
                },
                "attributeRemapper": {
                    "$ref": "#/types/datadog:index/LogsCustomPipelineProcessorAttributeRemapper:LogsCustomPipelineProcessorAttributeRemapper",
                    "description": "Attribute Remapper Processor. More information can be found in the [official docs](https://docs.datadoghq.com/logs/processing/processors/?tab=ui#remapper)\n"
                },
                "categoryProcessor": {
                    "$ref": "#/types/datadog:index/LogsCustomPipelineProcessorCategoryProcessor:LogsCustomPipelineProcessorCategoryProcessor",
                    "description": "Category Processor. More information can be found in the [official docs](https://docs.datadoghq.com/logs/processing/processors/?tab=ui#category-processor)\n"
                },
                "dateRemapper": {
                    "$ref": "#/types/datadog:index/LogsCustomPipelineProcessorDateRemapper:LogsCustomPipelineProcessorDateRemapper",
                    "description": "Date Remapper Processor. More information can be found in the [official docs](https://docs.datadoghq.com/logs/processing/processors/?tab=ui#log-date-remapper)\n"
                },
                "geoIpParser": {
                    "$ref": "#/types/datadog:index/LogsCustomPipelineProcessorGeoIpParser:LogsCustomPipelineProcessorGeoIpParser",
                    "description": "Date GeoIP Processor. More information can be found in the [official docs](https://docs.datadoghq.com/logs/processing/processors/?tab=ui#geoip-parser)\n"
                },
                "grokParser": {
                    "$ref": "#/types/datadog:index/LogsCustomPipelineProcessorGrokParser:LogsCustomPipelineProcessorGrokParser",
                    "description": "Grok Processor. More information can be found in the [official docs](https://docs.datadoghq.com/logs/processing/processors/?tab=ui#grok-parser)\n"
                },
                "lookupProcessor": {
                    "$ref": "#/types/datadog:index/LogsCustomPipelineProcessorLookupProcessor:LogsCustomPipelineProcessorLookupProcessor",
                    "description": "Lookup Processor. More information can be found in the [official docs](https://docs.datadoghq.com/logs/processing/processors/?tab=ui#lookup-processor)\n"
                },
                "messageRemapper": {
                    "$ref": "#/types/datadog:index/LogsCustomPipelineProcessorMessageRemapper:LogsCustomPipelineProcessorMessageRemapper",
                    "description": "Message Remapper Processor. More information can be found in the [official docs](https://docs.datadoghq.com/logs/processing/processors/?tab=ui#log-message-remapper)\n"
                },
                "pipeline": {
                    "$ref": "#/types/datadog:index/LogsCustomPipelineProcessorPipeline:LogsCustomPipelineProcessorPipeline"
                },
                "referenceTableLookupProcessor": {
                    "$ref": "#/types/datadog:index/LogsCustomPipelineProcessorReferenceTableLookupProcessor:LogsCustomPipelineProcessorReferenceTableLookupProcessor",
                    "description": "Reference Table Lookup Processor. Reference Tables are in public beta. More information can be found in the [official docs](https://docs.datadoghq.com/logs/processing/processors/?tab=ui#lookup-processor)\n"
                },
                "serviceRemapper": {
                    "$ref": "#/types/datadog:index/LogsCustomPipelineProcessorServiceRemapper:LogsCustomPipelineProcessorServiceRemapper",
                    "description": "Service Remapper Processor. More information can be found in the [official docs](https://docs.datadoghq.com/logs/processing/processors/?tab=ui#service-remapper)\n"
                },
                "statusRemapper": {
                    "$ref": "#/types/datadog:index/LogsCustomPipelineProcessorStatusRemapper:LogsCustomPipelineProcessorStatusRemapper",
                    "description": "Status Remapper Processor. More information can be found in the [official docs](https://docs.datadoghq.com/logs/processing/processors/?tab=ui#log-status-remapper)\n"
                },
                "stringBuilderProcessor": {
                    "$ref": "#/types/datadog:index/LogsCustomPipelineProcessorStringBuilderProcessor:LogsCustomPipelineProcessorStringBuilderProcessor",
                    "description": "String Builder Processor. More information can be found in the [official docs](https://docs.datadoghq.com/logs/processing/processors/?tab=ui#string-builder-processor)\n"
                },
                "traceIdRemapper": {
                    "$ref": "#/types/datadog:index/LogsCustomPipelineProcessorTraceIdRemapper:LogsCustomPipelineProcessorTraceIdRemapper",
                    "description": "Trace ID Remapper Processor. More information can be found in the [official docs](https://docs.datadoghq.com/logs/processing/processors/?tab=ui#trace-remapper)\n"
                },
                "urlParser": {
                    "$ref": "#/types/datadog:index/LogsCustomPipelineProcessorUrlParser:LogsCustomPipelineProcessorUrlParser",
                    "description": "URL Parser Processor. More information can be found in the [official docs](https://docs.datadoghq.com/logs/processing/processors/?tab=ui#url-parser)\n"
                },
                "userAgentParser": {
                    "$ref": "#/types/datadog:index/LogsCustomPipelineProcessorUserAgentParser:LogsCustomPipelineProcessorUserAgentParser",
                    "description": "User-Agent Parser Processor. More information can be found in the [official docs](https://docs.datadoghq.com/logs/processing/processors/?tab=ui#user-agent-parser)\n"
                }
            },
            "type": "object"
        },
        "datadog:index/LogsCustomPipelineProcessorArithmeticProcessor:LogsCustomPipelineProcessorArithmeticProcessor": {
            "properties": {
                "expression": {
                    "type": "string",
                    "description": "Arithmetic operation between one or more log attributes.\n"
                },
                "isEnabled": {
                    "type": "boolean",
                    "description": "Boolean value to enable your pipeline.\n"
                },
                "isReplaceMissing": {
                    "type": "boolean",
                    "description": "If true, it replaces all missing attributes of expression by 0, false skips the operation if an attribute is missing.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Your pipeline name.\n"
                },
                "target": {
                    "type": "string",
                    "description": "Name of the attribute that contains the result of the arithmetic operation.\n"
                }
            },
            "type": "object",
            "required": [
                "expression",
                "target"
            ]
        },
        "datadog:index/LogsCustomPipelineProcessorAttributeRemapper:LogsCustomPipelineProcessorAttributeRemapper": {
            "properties": {
                "isEnabled": {
                    "type": "boolean",
                    "description": "If the processor is enabled or not.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the processor\n"
                },
                "overrideOnConflict": {
                    "type": "boolean",
                    "description": "Override the target element if already set.\n"
                },
                "preserveSource": {
                    "type": "boolean",
                    "description": "Remove or preserve the remapped source element.\n"
                },
                "sourceType": {
                    "type": "string",
                    "description": "Defines where the sources are from (log `attribute` or `tag`).\n"
                },
                "sources": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of source attributes or tags.\n"
                },
                "target": {
                    "type": "string",
                    "description": "Final attribute or tag name to remap the sources.\n"
                },
                "targetFormat": {
                    "type": "string",
                    "description": "If the `target_type` of the remapper is `attribute`, try to cast the value to a new specific type. If the cast is not possible, the original type is kept. `string`, `integer`, or `double` are the possible types. If the `target_type` is `tag`, this parameter may not be specified.\n"
                },
                "targetType": {
                    "type": "string",
                    "description": "Defines if the target is a log `attribute` or `tag`.\n"
                }
            },
            "type": "object",
            "required": [
                "sourceType",
                "sources",
                "target",
                "targetType"
            ]
        },
        "datadog:index/LogsCustomPipelineProcessorCategoryProcessor:LogsCustomPipelineProcessorCategoryProcessor": {
            "properties": {
                "categories": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/LogsCustomPipelineProcessorCategoryProcessorCategory:LogsCustomPipelineProcessorCategoryProcessorCategory"
                    },
                    "description": "List of filters to match or exclude a log with their corresponding name to assign a custom value to the log.\n"
                },
                "isEnabled": {
                    "type": "boolean",
                    "description": "If the processor is enabled or not.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the category\n"
                },
                "target": {
                    "type": "string",
                    "description": "Name of the target attribute whose value is defined by the matching category.\n"
                }
            },
            "type": "object",
            "required": [
                "categories",
                "target"
            ]
        },
        "datadog:index/LogsCustomPipelineProcessorCategoryProcessorCategory:LogsCustomPipelineProcessorCategoryProcessorCategory": {
            "properties": {
                "filter": {
                    "$ref": "#/types/datadog:index/LogsCustomPipelineProcessorCategoryProcessorCategoryFilter:LogsCustomPipelineProcessorCategoryProcessorCategoryFilter"
                },
                "name": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "filter",
                "name"
            ]
        },
        "datadog:index/LogsCustomPipelineProcessorCategoryProcessorCategoryFilter:LogsCustomPipelineProcessorCategoryProcessorCategoryFilter": {
            "properties": {
                "query": {
                    "type": "string",
                    "description": "Filter criteria of the category.\n"
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/LogsCustomPipelineProcessorDateRemapper:LogsCustomPipelineProcessorDateRemapper": {
            "properties": {
                "isEnabled": {
                    "type": "boolean",
                    "description": "If the processor is enabled or not.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the processor.\n"
                },
                "sources": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of source attributes.\n"
                }
            },
            "type": "object",
            "required": [
                "sources"
            ]
        },
        "datadog:index/LogsCustomPipelineProcessorGeoIpParser:LogsCustomPipelineProcessorGeoIpParser": {
            "properties": {
                "isEnabled": {
                    "type": "boolean",
                    "description": "If the processor is enabled or not.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the processor.\n"
                },
                "sources": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of source attributes.\n"
                },
                "target": {
                    "type": "string",
                    "description": "Name of the parent attribute that contains all the extracted details from the sources.\n"
                }
            },
            "type": "object",
            "required": [
                "sources",
                "target"
            ]
        },
        "datadog:index/LogsCustomPipelineProcessorGrokParser:LogsCustomPipelineProcessorGrokParser": {
            "properties": {
                "grok": {
                    "$ref": "#/types/datadog:index/LogsCustomPipelineProcessorGrokParserGrok:LogsCustomPipelineProcessorGrokParserGrok"
                },
                "isEnabled": {
                    "type": "boolean",
                    "description": "If the processor is enabled or not.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the processor\n"
                },
                "samples": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of sample logs for this parser. It can save up to 5 samples. Each sample takes up to 5000 characters.\n"
                },
                "source": {
                    "type": "string",
                    "description": "Name of the log attribute to parse.\n"
                }
            },
            "type": "object",
            "required": [
                "grok",
                "source"
            ]
        },
        "datadog:index/LogsCustomPipelineProcessorGrokParserGrok:LogsCustomPipelineProcessorGrokParserGrok": {
            "properties": {
                "matchRules": {
                    "type": "string",
                    "description": "Match rules for your grok parser.\n"
                },
                "supportRules": {
                    "type": "string",
                    "description": "Support rules for your grok parser.\n"
                }
            },
            "type": "object",
            "required": [
                "matchRules",
                "supportRules"
            ]
        },
        "datadog:index/LogsCustomPipelineProcessorLookupProcessor:LogsCustomPipelineProcessorLookupProcessor": {
            "properties": {
                "defaultLookup": {
                    "type": "string",
                    "description": "Default lookup value to use if there is no entry in the lookup table for the value of the source attribute.\n"
                },
                "isEnabled": {
                    "type": "boolean",
                    "description": "If the processor is enabled or not.\n"
                },
                "lookupTables": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of entries of the lookup table using `key,value` format.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the processor\n"
                },
                "source": {
                    "type": "string",
                    "description": "Name of the source attribute used to do the lookup.\n"
                },
                "target": {
                    "type": "string",
                    "description": "Name of the attribute that contains the result of the lookup.\n"
                }
            },
            "type": "object",
            "required": [
                "lookupTables",
                "source",
                "target"
            ]
        },
        "datadog:index/LogsCustomPipelineProcessorMessageRemapper:LogsCustomPipelineProcessorMessageRemapper": {
            "properties": {
                "isEnabled": {
                    "type": "boolean",
                    "description": "If the processor is enabled or not.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the processor.\n"
                },
                "sources": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of source attributes.\n"
                }
            },
            "type": "object",
            "required": [
                "sources"
            ]
        },
        "datadog:index/LogsCustomPipelineProcessorPipeline:LogsCustomPipelineProcessorPipeline": {
            "properties": {
                "filters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/LogsCustomPipelineProcessorPipelineFilter:LogsCustomPipelineProcessorPipelineFilter"
                    }
                },
                "isEnabled": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "processors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/LogsCustomPipelineProcessorPipelineProcessor:LogsCustomPipelineProcessorPipelineProcessor"
                    }
                }
            },
            "type": "object",
            "required": [
                "filters",
                "name"
            ]
        },
        "datadog:index/LogsCustomPipelineProcessorPipelineFilter:LogsCustomPipelineProcessorPipelineFilter": {
            "properties": {
                "query": {
                    "type": "string",
                    "description": "Filter criteria of the category.\n"
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/LogsCustomPipelineProcessorPipelineProcessor:LogsCustomPipelineProcessorPipelineProcessor": {
            "properties": {
                "arithmeticProcessor": {
                    "$ref": "#/types/datadog:index/LogsCustomPipelineProcessorPipelineProcessorArithmeticProcessor:LogsCustomPipelineProcessorPipelineProcessorArithmeticProcessor",
                    "description": "Arithmetic Processor. More information can be found in the [official docs](https://docs.datadoghq.com/logs/processing/processors/?tab=ui#arithmetic-processor)\n"
                },
                "attributeRemapper": {
                    "$ref": "#/types/datadog:index/LogsCustomPipelineProcessorPipelineProcessorAttributeRemapper:LogsCustomPipelineProcessorPipelineProcessorAttributeRemapper",
                    "description": "Attribute Remapper Processor. More information can be found in the [official docs](https://docs.datadoghq.com/logs/processing/processors/?tab=ui#remapper)\n"
                },
                "categoryProcessor": {
                    "$ref": "#/types/datadog:index/LogsCustomPipelineProcessorPipelineProcessorCategoryProcessor:LogsCustomPipelineProcessorPipelineProcessorCategoryProcessor",
                    "description": "Category Processor. More information can be found in the [official docs](https://docs.datadoghq.com/logs/processing/processors/?tab=ui#category-processor)\n"
                },
                "dateRemapper": {
                    "$ref": "#/types/datadog:index/LogsCustomPipelineProcessorPipelineProcessorDateRemapper:LogsCustomPipelineProcessorPipelineProcessorDateRemapper",
                    "description": "Date Remapper Processor. More information can be found in the [official docs](https://docs.datadoghq.com/logs/processing/processors/?tab=ui#log-date-remapper)\n"
                },
                "geoIpParser": {
                    "$ref": "#/types/datadog:index/LogsCustomPipelineProcessorPipelineProcessorGeoIpParser:LogsCustomPipelineProcessorPipelineProcessorGeoIpParser",
                    "description": "Date GeoIP Processor. More information can be found in the [official docs](https://docs.datadoghq.com/logs/processing/processors/?tab=ui#geoip-parser)\n"
                },
                "grokParser": {
                    "$ref": "#/types/datadog:index/LogsCustomPipelineProcessorPipelineProcessorGrokParser:LogsCustomPipelineProcessorPipelineProcessorGrokParser",
                    "description": "Grok Processor. More information can be found in the [official docs](https://docs.datadoghq.com/logs/processing/processors/?tab=ui#grok-parser)\n"
                },
                "lookupProcessor": {
                    "$ref": "#/types/datadog:index/LogsCustomPipelineProcessorPipelineProcessorLookupProcessor:LogsCustomPipelineProcessorPipelineProcessorLookupProcessor",
                    "description": "Lookup Processor. More information can be found in the [official docs](https://docs.datadoghq.com/logs/processing/processors/?tab=ui#lookup-processor)\n"
                },
                "messageRemapper": {
                    "$ref": "#/types/datadog:index/LogsCustomPipelineProcessorPipelineProcessorMessageRemapper:LogsCustomPipelineProcessorPipelineProcessorMessageRemapper",
                    "description": "Message Remapper Processor. More information can be found in the [official docs](https://docs.datadoghq.com/logs/processing/processors/?tab=ui#log-message-remapper)\n"
                },
                "referenceTableLookupProcessor": {
                    "$ref": "#/types/datadog:index/LogsCustomPipelineProcessorPipelineProcessorReferenceTableLookupProcessor:LogsCustomPipelineProcessorPipelineProcessorReferenceTableLookupProcessor",
                    "description": "Reference Table Lookup Processor. Reference Tables are in public beta. More information can be found in the [official docs](https://docs.datadoghq.com/logs/processing/processors/?tab=ui#lookup-processor)\n"
                },
                "serviceRemapper": {
                    "$ref": "#/types/datadog:index/LogsCustomPipelineProcessorPipelineProcessorServiceRemapper:LogsCustomPipelineProcessorPipelineProcessorServiceRemapper",
                    "description": "Service Remapper Processor. More information can be found in the [official docs](https://docs.datadoghq.com/logs/processing/processors/?tab=ui#service-remapper)\n"
                },
                "statusRemapper": {
                    "$ref": "#/types/datadog:index/LogsCustomPipelineProcessorPipelineProcessorStatusRemapper:LogsCustomPipelineProcessorPipelineProcessorStatusRemapper",
                    "description": "Status Remapper Processor. More information can be found in the [official docs](https://docs.datadoghq.com/logs/processing/processors/?tab=ui#log-status-remapper)\n"
                },
                "stringBuilderProcessor": {
                    "$ref": "#/types/datadog:index/LogsCustomPipelineProcessorPipelineProcessorStringBuilderProcessor:LogsCustomPipelineProcessorPipelineProcessorStringBuilderProcessor",
                    "description": "String Builder Processor. More information can be found in the [official docs](https://docs.datadoghq.com/logs/processing/processors/?tab=ui#string-builder-processor)\n"
                },
                "traceIdRemapper": {
                    "$ref": "#/types/datadog:index/LogsCustomPipelineProcessorPipelineProcessorTraceIdRemapper:LogsCustomPipelineProcessorPipelineProcessorTraceIdRemapper",
                    "description": "Trace ID Remapper Processor. More information can be found in the [official docs](https://docs.datadoghq.com/logs/processing/processors/?tab=ui#trace-remapper)\n"
                },
                "urlParser": {
                    "$ref": "#/types/datadog:index/LogsCustomPipelineProcessorPipelineProcessorUrlParser:LogsCustomPipelineProcessorPipelineProcessorUrlParser",
                    "description": "URL Parser Processor. More information can be found in the [official docs](https://docs.datadoghq.com/logs/processing/processors/?tab=ui#url-parser)\n"
                },
                "userAgentParser": {
                    "$ref": "#/types/datadog:index/LogsCustomPipelineProcessorPipelineProcessorUserAgentParser:LogsCustomPipelineProcessorPipelineProcessorUserAgentParser",
                    "description": "User-Agent Parser Processor. More information can be found in the [official docs](https://docs.datadoghq.com/logs/processing/processors/?tab=ui#user-agent-parser)\n"
                }
            },
            "type": "object"
        },
        "datadog:index/LogsCustomPipelineProcessorPipelineProcessorArithmeticProcessor:LogsCustomPipelineProcessorPipelineProcessorArithmeticProcessor": {
            "properties": {
                "expression": {
                    "type": "string",
                    "description": "Arithmetic operation between one or more log attributes.\n"
                },
                "isEnabled": {
                    "type": "boolean",
                    "description": "Boolean value to enable your pipeline.\n"
                },
                "isReplaceMissing": {
                    "type": "boolean",
                    "description": "If true, it replaces all missing attributes of expression by 0, false skips the operation if an attribute is missing.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Your pipeline name.\n"
                },
                "target": {
                    "type": "string",
                    "description": "Name of the attribute that contains the result of the arithmetic operation.\n"
                }
            },
            "type": "object",
            "required": [
                "expression",
                "target"
            ]
        },
        "datadog:index/LogsCustomPipelineProcessorPipelineProcessorAttributeRemapper:LogsCustomPipelineProcessorPipelineProcessorAttributeRemapper": {
            "properties": {
                "isEnabled": {
                    "type": "boolean",
                    "description": "If the processor is enabled or not.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the processor\n"
                },
                "overrideOnConflict": {
                    "type": "boolean",
                    "description": "Override the target element if already set.\n"
                },
                "preserveSource": {
                    "type": "boolean",
                    "description": "Remove or preserve the remapped source element.\n"
                },
                "sourceType": {
                    "type": "string",
                    "description": "Defines where the sources are from (log `attribute` or `tag`).\n"
                },
                "sources": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of source attributes or tags.\n"
                },
                "target": {
                    "type": "string",
                    "description": "Final attribute or tag name to remap the sources.\n"
                },
                "targetFormat": {
                    "type": "string",
                    "description": "If the `target_type` of the remapper is `attribute`, try to cast the value to a new specific type. If the cast is not possible, the original type is kept. `string`, `integer`, or `double` are the possible types. If the `target_type` is `tag`, this parameter may not be specified.\n"
                },
                "targetType": {
                    "type": "string",
                    "description": "Defines if the target is a log `attribute` or `tag`.\n"
                }
            },
            "type": "object",
            "required": [
                "sourceType",
                "sources",
                "target",
                "targetType"
            ]
        },
        "datadog:index/LogsCustomPipelineProcessorPipelineProcessorCategoryProcessor:LogsCustomPipelineProcessorPipelineProcessorCategoryProcessor": {
            "properties": {
                "categories": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/LogsCustomPipelineProcessorPipelineProcessorCategoryProcessorCategory:LogsCustomPipelineProcessorPipelineProcessorCategoryProcessorCategory"
                    },
                    "description": "List of filters to match or exclude a log with their corresponding name to assign a custom value to the log.\n"
                },
                "isEnabled": {
                    "type": "boolean",
                    "description": "If the processor is enabled or not.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the category\n"
                },
                "target": {
                    "type": "string",
                    "description": "Name of the target attribute whose value is defined by the matching category.\n"
                }
            },
            "type": "object",
            "required": [
                "categories",
                "target"
            ]
        },
        "datadog:index/LogsCustomPipelineProcessorPipelineProcessorCategoryProcessorCategory:LogsCustomPipelineProcessorPipelineProcessorCategoryProcessorCategory": {
            "properties": {
                "filter": {
                    "$ref": "#/types/datadog:index/LogsCustomPipelineProcessorPipelineProcessorCategoryProcessorCategoryFilter:LogsCustomPipelineProcessorPipelineProcessorCategoryProcessorCategoryFilter"
                },
                "name": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "filter",
                "name"
            ]
        },
        "datadog:index/LogsCustomPipelineProcessorPipelineProcessorCategoryProcessorCategoryFilter:LogsCustomPipelineProcessorPipelineProcessorCategoryProcessorCategoryFilter": {
            "properties": {
                "query": {
                    "type": "string",
                    "description": "Filter criteria of the category.\n"
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/LogsCustomPipelineProcessorPipelineProcessorDateRemapper:LogsCustomPipelineProcessorPipelineProcessorDateRemapper": {
            "properties": {
                "isEnabled": {
                    "type": "boolean",
                    "description": "If the processor is enabled or not.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the processor.\n"
                },
                "sources": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of source attributes.\n"
                }
            },
            "type": "object",
            "required": [
                "sources"
            ]
        },
        "datadog:index/LogsCustomPipelineProcessorPipelineProcessorGeoIpParser:LogsCustomPipelineProcessorPipelineProcessorGeoIpParser": {
            "properties": {
                "isEnabled": {
                    "type": "boolean",
                    "description": "If the processor is enabled or not.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the processor.\n"
                },
                "sources": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of source attributes.\n"
                },
                "target": {
                    "type": "string",
                    "description": "Name of the parent attribute that contains all the extracted details from the sources.\n"
                }
            },
            "type": "object",
            "required": [
                "sources",
                "target"
            ]
        },
        "datadog:index/LogsCustomPipelineProcessorPipelineProcessorGrokParser:LogsCustomPipelineProcessorPipelineProcessorGrokParser": {
            "properties": {
                "grok": {
                    "$ref": "#/types/datadog:index/LogsCustomPipelineProcessorPipelineProcessorGrokParserGrok:LogsCustomPipelineProcessorPipelineProcessorGrokParserGrok"
                },
                "isEnabled": {
                    "type": "boolean",
                    "description": "If the processor is enabled or not.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the processor\n"
                },
                "samples": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of sample logs for this parser. It can save up to 5 samples. Each sample takes up to 5000 characters.\n"
                },
                "source": {
                    "type": "string",
                    "description": "Name of the log attribute to parse.\n"
                }
            },
            "type": "object",
            "required": [
                "grok",
                "source"
            ]
        },
        "datadog:index/LogsCustomPipelineProcessorPipelineProcessorGrokParserGrok:LogsCustomPipelineProcessorPipelineProcessorGrokParserGrok": {
            "properties": {
                "matchRules": {
                    "type": "string",
                    "description": "Match rules for your grok parser.\n"
                },
                "supportRules": {
                    "type": "string",
                    "description": "Support rules for your grok parser.\n"
                }
            },
            "type": "object",
            "required": [
                "matchRules",
                "supportRules"
            ]
        },
        "datadog:index/LogsCustomPipelineProcessorPipelineProcessorLookupProcessor:LogsCustomPipelineProcessorPipelineProcessorLookupProcessor": {
            "properties": {
                "defaultLookup": {
                    "type": "string",
                    "description": "Default lookup value to use if there is no entry in the lookup table for the value of the source attribute.\n"
                },
                "isEnabled": {
                    "type": "boolean",
                    "description": "If the processor is enabled or not.\n"
                },
                "lookupTables": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of entries of the lookup table using `key,value` format.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the processor\n"
                },
                "source": {
                    "type": "string",
                    "description": "Name of the source attribute used to do the lookup.\n"
                },
                "target": {
                    "type": "string",
                    "description": "Name of the attribute that contains the result of the lookup.\n"
                }
            },
            "type": "object",
            "required": [
                "lookupTables",
                "source",
                "target"
            ]
        },
        "datadog:index/LogsCustomPipelineProcessorPipelineProcessorMessageRemapper:LogsCustomPipelineProcessorPipelineProcessorMessageRemapper": {
            "properties": {
                "isEnabled": {
                    "type": "boolean",
                    "description": "If the processor is enabled or not.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the processor.\n"
                },
                "sources": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of source attributes.\n"
                }
            },
            "type": "object",
            "required": [
                "sources"
            ]
        },
        "datadog:index/LogsCustomPipelineProcessorPipelineProcessorReferenceTableLookupProcessor:LogsCustomPipelineProcessorPipelineProcessorReferenceTableLookupProcessor": {
            "properties": {
                "isEnabled": {
                    "type": "boolean",
                    "description": "If the processor is enabled or not.\n"
                },
                "lookupEnrichmentTable": {
                    "type": "string",
                    "description": "Name of the Reference Table for the source attribute and their associated target attribute values.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the processor\n"
                },
                "source": {
                    "type": "string",
                    "description": "Name of the source attribute used to do the lookup.\n"
                },
                "target": {
                    "type": "string",
                    "description": "Name of the attribute that contains the result of the lookup.\n"
                }
            },
            "type": "object",
            "required": [
                "lookupEnrichmentTable",
                "source",
                "target"
            ]
        },
        "datadog:index/LogsCustomPipelineProcessorPipelineProcessorServiceRemapper:LogsCustomPipelineProcessorPipelineProcessorServiceRemapper": {
            "properties": {
                "isEnabled": {
                    "type": "boolean",
                    "description": "If the processor is enabled or not.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the processor.\n"
                },
                "sources": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of source attributes.\n"
                }
            },
            "type": "object",
            "required": [
                "sources"
            ]
        },
        "datadog:index/LogsCustomPipelineProcessorPipelineProcessorStatusRemapper:LogsCustomPipelineProcessorPipelineProcessorStatusRemapper": {
            "properties": {
                "isEnabled": {
                    "type": "boolean",
                    "description": "If the processor is enabled or not.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the processor.\n"
                },
                "sources": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of source attributes.\n"
                }
            },
            "type": "object",
            "required": [
                "sources"
            ]
        },
        "datadog:index/LogsCustomPipelineProcessorPipelineProcessorStringBuilderProcessor:LogsCustomPipelineProcessorPipelineProcessorStringBuilderProcessor": {
            "properties": {
                "isEnabled": {
                    "type": "boolean",
                    "description": "If the processor is enabled or not.\n"
                },
                "isReplaceMissing": {
                    "type": "boolean",
                    "description": "If it replaces all missing attributes of template by an empty string.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the processor.\n"
                },
                "target": {
                    "type": "string",
                    "description": "The name of the attribute that contains the result of the template.\n"
                },
                "template": {
                    "type": "string",
                    "description": "The formula with one or more attributes and raw text.\n"
                }
            },
            "type": "object",
            "required": [
                "target",
                "template"
            ]
        },
        "datadog:index/LogsCustomPipelineProcessorPipelineProcessorTraceIdRemapper:LogsCustomPipelineProcessorPipelineProcessorTraceIdRemapper": {
            "properties": {
                "isEnabled": {
                    "type": "boolean",
                    "description": "If the processor is enabled or not.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the processor.\n"
                },
                "sources": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of source attributes.\n"
                }
            },
            "type": "object",
            "required": [
                "sources"
            ]
        },
        "datadog:index/LogsCustomPipelineProcessorPipelineProcessorUrlParser:LogsCustomPipelineProcessorPipelineProcessorUrlParser": {
            "properties": {
                "isEnabled": {
                    "type": "boolean",
                    "description": "If the processor is enabled or not.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the processor\n"
                },
                "normalizeEndingSlashes": {
                    "type": "boolean",
                    "description": "Normalize the ending slashes or not.\n"
                },
                "sources": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of source attributes.\n"
                },
                "target": {
                    "type": "string",
                    "description": "Name of the parent attribute that contains all the extracted details from the sources.\n"
                }
            },
            "type": "object",
            "required": [
                "sources",
                "target"
            ]
        },
        "datadog:index/LogsCustomPipelineProcessorPipelineProcessorUserAgentParser:LogsCustomPipelineProcessorPipelineProcessorUserAgentParser": {
            "properties": {
                "isEnabled": {
                    "type": "boolean",
                    "description": "If the processor is enabled or not.\n"
                },
                "isEncoded": {
                    "type": "boolean",
                    "description": "If the source attribute is URL encoded or not.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the processor\n"
                },
                "sources": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of source attributes.\n"
                },
                "target": {
                    "type": "string",
                    "description": "Name of the parent attribute that contains all the extracted details from the sources.\n"
                }
            },
            "type": "object",
            "required": [
                "sources",
                "target"
            ]
        },
        "datadog:index/LogsCustomPipelineProcessorReferenceTableLookupProcessor:LogsCustomPipelineProcessorReferenceTableLookupProcessor": {
            "properties": {
                "isEnabled": {
                    "type": "boolean",
                    "description": "If the processor is enabled or not.\n"
                },
                "lookupEnrichmentTable": {
                    "type": "string",
                    "description": "Name of the Reference Table for the source attribute and their associated target attribute values.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the processor\n"
                },
                "source": {
                    "type": "string",
                    "description": "Name of the source attribute used to do the lookup.\n"
                },
                "target": {
                    "type": "string",
                    "description": "Name of the attribute that contains the result of the lookup.\n"
                }
            },
            "type": "object",
            "required": [
                "lookupEnrichmentTable",
                "source",
                "target"
            ]
        },
        "datadog:index/LogsCustomPipelineProcessorServiceRemapper:LogsCustomPipelineProcessorServiceRemapper": {
            "properties": {
                "isEnabled": {
                    "type": "boolean",
                    "description": "If the processor is enabled or not.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the processor.\n"
                },
                "sources": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of source attributes.\n"
                }
            },
            "type": "object",
            "required": [
                "sources"
            ]
        },
        "datadog:index/LogsCustomPipelineProcessorStatusRemapper:LogsCustomPipelineProcessorStatusRemapper": {
            "properties": {
                "isEnabled": {
                    "type": "boolean",
                    "description": "If the processor is enabled or not.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the processor.\n"
                },
                "sources": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of source attributes.\n"
                }
            },
            "type": "object",
            "required": [
                "sources"
            ]
        },
        "datadog:index/LogsCustomPipelineProcessorStringBuilderProcessor:LogsCustomPipelineProcessorStringBuilderProcessor": {
            "properties": {
                "isEnabled": {
                    "type": "boolean",
                    "description": "If the processor is enabled or not.\n"
                },
                "isReplaceMissing": {
                    "type": "boolean",
                    "description": "If it replaces all missing attributes of template by an empty string.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the processor.\n"
                },
                "target": {
                    "type": "string",
                    "description": "The name of the attribute that contains the result of the template.\n"
                },
                "template": {
                    "type": "string",
                    "description": "The formula with one or more attributes and raw text.\n"
                }
            },
            "type": "object",
            "required": [
                "target",
                "template"
            ]
        },
        "datadog:index/LogsCustomPipelineProcessorTraceIdRemapper:LogsCustomPipelineProcessorTraceIdRemapper": {
            "properties": {
                "isEnabled": {
                    "type": "boolean",
                    "description": "If the processor is enabled or not.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the processor.\n"
                },
                "sources": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of source attributes.\n"
                }
            },
            "type": "object",
            "required": [
                "sources"
            ]
        },
        "datadog:index/LogsCustomPipelineProcessorUrlParser:LogsCustomPipelineProcessorUrlParser": {
            "properties": {
                "isEnabled": {
                    "type": "boolean",
                    "description": "If the processor is enabled or not.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the processor\n"
                },
                "normalizeEndingSlashes": {
                    "type": "boolean",
                    "description": "Normalize the ending slashes or not.\n"
                },
                "sources": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of source attributes.\n"
                },
                "target": {
                    "type": "string",
                    "description": "Name of the parent attribute that contains all the extracted details from the sources.\n"
                }
            },
            "type": "object",
            "required": [
                "sources",
                "target"
            ]
        },
        "datadog:index/LogsCustomPipelineProcessorUserAgentParser:LogsCustomPipelineProcessorUserAgentParser": {
            "properties": {
                "isEnabled": {
                    "type": "boolean",
                    "description": "If the processor is enabled or not.\n"
                },
                "isEncoded": {
                    "type": "boolean",
                    "description": "If the source attribute is URL encoded or not.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the processor\n"
                },
                "sources": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of source attributes.\n"
                },
                "target": {
                    "type": "string",
                    "description": "Name of the parent attribute that contains all the extracted details from the sources.\n"
                }
            },
            "type": "object",
            "required": [
                "sources",
                "target"
            ]
        },
        "datadog:index/LogsIndexDailyLimitReset:LogsIndexDailyLimitReset": {
            "properties": {
                "resetTime": {
                    "type": "string",
                    "description": "String in `HH:00` format representing the time of day the daily limit should be reset. The hours must be between 00 and 23 (inclusive).\n"
                },
                "resetUtcOffset": {
                    "type": "string",
                    "description": "String in `(-|+)HH:00` format representing the UTC offset to apply to the given reset time. The hours must be between -12 and +14 (inclusive).\n"
                }
            },
            "type": "object",
            "required": [
                "resetTime",
                "resetUtcOffset"
            ]
        },
        "datadog:index/LogsIndexExclusionFilter:LogsIndexExclusionFilter": {
            "properties": {
                "filters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/LogsIndexExclusionFilterFilter:LogsIndexExclusionFilterFilter"
                    }
                },
                "isEnabled": {
                    "type": "boolean",
                    "description": "A boolean stating if the exclusion is active or not.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the exclusion filter.\n"
                }
            },
            "type": "object"
        },
        "datadog:index/LogsIndexExclusionFilterFilter:LogsIndexExclusionFilterFilter": {
            "properties": {
                "query": {
                    "type": "string",
                    "description": "Only logs matching the filter criteria and the query of the parent index will be considered for this exclusion filter.\n"
                },
                "sampleRate": {
                    "type": "number",
                    "description": "The fraction of logs excluded by the exclusion filter, when active.\n"
                }
            },
            "type": "object"
        },
        "datadog:index/LogsIndexFilter:LogsIndexFilter": {
            "properties": {
                "query": {
                    "type": "string",
                    "description": "Logs filter criteria. Only logs matching this filter criteria are considered for this index.\n"
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/LogsMetricCompute:LogsMetricCompute": {
            "properties": {
                "aggregationType": {
                    "type": "string",
                    "description": "The type of aggregation to use. This field can't be updated after creation. Valid values are `count`, `distribution`.\n",
                    "willReplaceOnChanges": true
                },
                "includePercentiles": {
                    "type": "boolean",
                    "description": "Toggle to include/exclude percentiles for a distribution metric. Defaults to false. Can only be applied to metrics that have an `aggregation_type` of distribution.\n"
                },
                "path": {
                    "type": "string",
                    "description": "The path to the value the log-based metric will aggregate on (only used if the aggregation type is a \"distribution\"). This field can't be updated after creation.\n",
                    "willReplaceOnChanges": true
                }
            },
            "type": "object",
            "required": [
                "aggregationType"
            ]
        },
        "datadog:index/LogsMetricFilter:LogsMetricFilter": {
            "properties": {
                "query": {
                    "type": "string",
                    "description": "The search query - following the log search syntax.\n"
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/LogsMetricGroupBy:LogsMetricGroupBy": {
            "properties": {
                "path": {
                    "type": "string",
                    "description": "The path to the value the log-based metric will be aggregated over.\n"
                },
                "tagName": {
                    "type": "string",
                    "description": "Name of the tag that gets created.\n"
                }
            },
            "type": "object",
            "required": [
                "path",
                "tagName"
            ]
        },
        "datadog:index/MetricTagConfigurationAggregation:MetricTagConfigurationAggregation": {
            "properties": {
                "space": {
                    "type": "string",
                    "description": "A space aggregation for use in query. Valid values are `avg`, `max`, `min`, `sum`.\n"
                },
                "time": {
                    "type": "string",
                    "description": "A time aggregation for use in query. Valid values are `avg`, `count`, `max`, `min`, `sum`.\n"
                }
            },
            "type": "object",
            "required": [
                "space",
                "time"
            ]
        },
        "datadog:index/MonitorConfigPolicyTagPolicy:MonitorConfigPolicyTagPolicy": {
            "properties": {
                "tagKey": {
                    "type": "string",
                    "description": "The key of the tag\n"
                },
                "tagKeyRequired": {
                    "type": "boolean",
                    "description": "If a tag key is required for monitor creation\n"
                },
                "validTagValues": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Valid values for the tag\n"
                }
            },
            "type": "object",
            "required": [
                "tagKey",
                "tagKeyRequired",
                "validTagValues"
            ]
        },
        "datadog:index/MonitorMonitorThresholdWindows:MonitorMonitorThresholdWindows": {
            "properties": {
                "recoveryWindow": {
                    "type": "string",
                    "description": "Describes how long an anomalous metric must be normal before the alert recovers.\n"
                },
                "triggerWindow": {
                    "type": "string",
                    "description": "Describes how long a metric must be anomalous before an alert triggers.\n"
                }
            },
            "type": "object"
        },
        "datadog:index/MonitorMonitorThresholds:MonitorMonitorThresholds": {
            "properties": {
                "critical": {
                    "type": "string",
                    "description": "The monitor `CRITICAL` threshold. Must be a number.\n"
                },
                "criticalRecovery": {
                    "type": "string",
                    "description": "The monitor `CRITICAL` recovery threshold. Must be a number.\n"
                },
                "ok": {
                    "type": "string",
                    "description": "The monitor `OK` threshold. Only supported in monitor type `service check`. Must be a number.\n"
                },
                "unknown": {
                    "type": "string",
                    "description": "The monitor `UNKNOWN` threshold. Only supported in monitor type `service check`. Must be a number.\n"
                },
                "warning": {
                    "type": "string",
                    "description": "The monitor `WARNING` threshold. Must be a number.\n"
                },
                "warningRecovery": {
                    "type": "string",
                    "description": "The monitor `WARNING` recovery threshold. Must be a number.\n"
                }
            },
            "type": "object"
        },
        "datadog:index/MonitorSchedulingOption:MonitorSchedulingOption": {
            "properties": {
                "customSchedules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/MonitorSchedulingOptionCustomSchedule:MonitorSchedulingOptionCustomSchedule"
                    },
                    "description": "Configuration options for the custom schedules. If `start` is omitted, the monitor creation time will be used.\n"
                },
                "evaluationWindows": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/MonitorSchedulingOptionEvaluationWindow:MonitorSchedulingOptionEvaluationWindow"
                    },
                    "description": "Configuration options for the evaluation window. If `hour_starts` is set, no other fields may be set. Otherwise, `day_starts` and `month_starts` must be set together.\n"
                }
            },
            "type": "object"
        },
        "datadog:index/MonitorSchedulingOptionCustomSchedule:MonitorSchedulingOptionCustomSchedule": {
            "properties": {
                "recurrence": {
                    "$ref": "#/types/datadog:index/MonitorSchedulingOptionCustomScheduleRecurrence:MonitorSchedulingOptionCustomScheduleRecurrence",
                    "description": "A list of recurrence definitions. Length must be 1.\n"
                }
            },
            "type": "object",
            "required": [
                "recurrence"
            ]
        },
        "datadog:index/MonitorSchedulingOptionCustomScheduleRecurrence:MonitorSchedulingOptionCustomScheduleRecurrence": {
            "properties": {
                "rrule": {
                    "type": "string",
                    "description": "Must be a valid `rrule`. See API docs for supported fields\n"
                },
                "start": {
                    "type": "string",
                    "description": "Time to start recurrence cycle. Similar to DTSTART. Expected format 'YYYY-MM-DDThh:mm:ss'\n"
                },
                "timezone": {
                    "type": "string",
                    "description": "'tz database' format. Example: `America/New_York` or `UTC`\n"
                }
            },
            "type": "object",
            "required": [
                "rrule",
                "timezone"
            ]
        },
        "datadog:index/MonitorSchedulingOptionEvaluationWindow:MonitorSchedulingOptionEvaluationWindow": {
            "properties": {
                "dayStarts": {
                    "type": "string",
                    "description": "The time of the day at which a one day cumulative evaluation window starts. Must be defined in UTC time in `HH:mm` format.\n"
                },
                "hourStarts": {
                    "type": "integer",
                    "description": "The minute of the hour at which a one hour cumulative evaluation window starts. Must be between 0 and 59.\n"
                },
                "monthStarts": {
                    "type": "integer",
                    "description": "The day of the month at which a one month cumulative evaluation window starts. Must be a value of 1.\n"
                }
            },
            "type": "object"
        },
        "datadog:index/MonitorVariables:MonitorVariables": {
            "properties": {
                "eventQueries": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/MonitorVariablesEventQuery:MonitorVariablesEventQuery"
                    },
                    "description": "A timeseries formula and functions events query.\n"
                }
            },
            "type": "object"
        },
        "datadog:index/MonitorVariablesEventQuery:MonitorVariablesEventQuery": {
            "properties": {
                "computes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/MonitorVariablesEventQueryCompute:MonitorVariablesEventQueryCompute"
                    },
                    "description": "The compute options.\n"
                },
                "dataSource": {
                    "type": "string",
                    "description": "The data source for event platform-based queries. Valid values are `rum`, `ci_pipelines`, `ci_tests`, `audit`, `events`, `logs`, `spans`, `database_queries`, `network`.\n"
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/MonitorVariablesEventQueryGroupBy:MonitorVariablesEventQueryGroupBy"
                    },
                    "description": "Group by options.\n"
                },
                "indexes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "An array of index names to query in the stream.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of query for use in formulas.\n"
                },
                "search": {
                    "$ref": "#/types/datadog:index/MonitorVariablesEventQuerySearch:MonitorVariablesEventQuerySearch",
                    "description": "The search options.\n"
                }
            },
            "type": "object",
            "required": [
                "computes",
                "dataSource",
                "name",
                "search"
            ]
        },
        "datadog:index/MonitorVariablesEventQueryCompute:MonitorVariablesEventQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "The aggregation methods for event platform queries. Valid values are `count`, `cardinality`, `median`, `pc75`, `pc90`, `pc95`, `pc98`, `pc99`, `sum`, `min`, `max`, `avg`.\n"
                },
                "interval": {
                    "type": "integer",
                    "description": "A time interval in milliseconds.\n"
                },
                "metric": {
                    "type": "string",
                    "description": "The measurable attribute to compute.\n"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/MonitorVariablesEventQueryGroupBy:MonitorVariablesEventQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "description": "The event facet.\n"
                },
                "limit": {
                    "type": "integer",
                    "description": "The number of groups to return.\n"
                },
                "sort": {
                    "$ref": "#/types/datadog:index/MonitorVariablesEventQueryGroupBySort:MonitorVariablesEventQueryGroupBySort",
                    "description": "The options for sorting group by results.\n"
                }
            },
            "type": "object",
            "required": [
                "facet"
            ]
        },
        "datadog:index/MonitorVariablesEventQueryGroupBySort:MonitorVariablesEventQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "The aggregation methods for the event platform queries. Valid values are `count`, `cardinality`, `median`, `pc75`, `pc90`, `pc95`, `pc98`, `pc99`, `sum`, `min`, `max`, `avg`.\n"
                },
                "metric": {
                    "type": "string",
                    "description": "The metric used for sorting group by results.\n"
                },
                "order": {
                    "type": "string",
                    "description": "Direction of sort. Valid values are `asc`, `desc`.\n"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/MonitorVariablesEventQuerySearch:MonitorVariablesEventQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "description": "The events search string.\n"
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/OrganizationSettingsSettings:OrganizationSettingsSettings": {
            "properties": {
                "privateWidgetShare": {
                    "type": "boolean",
                    "description": "Whether or not the organization users can share widgets outside of Datadog. Defaults to `false`.\n"
                },
                "saml": {
                    "$ref": "#/types/datadog:index/OrganizationSettingsSettingsSaml:OrganizationSettingsSettingsSaml",
                    "description": "SAML properties\n"
                },
                "samlAutocreateAccessRole": {
                    "type": "string",
                    "description": "The access role of the user. Options are `st` (standard user), `adm` (admin user), or `ro` (read-only user). Allowed enum values: `st`, `adm` , `ro`, `ERROR` Defaults to `\"st\"`.\n"
                },
                "samlAutocreateUsersDomains": {
                    "$ref": "#/types/datadog:index/OrganizationSettingsSettingsSamlAutocreateUsersDomains:OrganizationSettingsSettingsSamlAutocreateUsersDomains",
                    "description": "List of domains where the SAML automated user creation is enabled.\n"
                },
                "samlCanBeEnabled": {
                    "type": "boolean",
                    "description": "Whether or not SAML can be enabled for this organization.\n"
                },
                "samlIdpEndpoint": {
                    "type": "string",
                    "description": "Identity provider endpoint for SAML authentication.\n"
                },
                "samlIdpInitiatedLogin": {
                    "$ref": "#/types/datadog:index/OrganizationSettingsSettingsSamlIdpInitiatedLogin:OrganizationSettingsSettingsSamlIdpInitiatedLogin",
                    "description": "Whether or not a SAML identity provider metadata file was provided to the Datadog organization.\n"
                },
                "samlIdpMetadataUploaded": {
                    "type": "boolean",
                    "description": "Whether or not a SAML identity provider metadata file was provided to the Datadog organization.\n"
                },
                "samlLoginUrl": {
                    "type": "string",
                    "description": "URL for SAML logging.\n"
                },
                "samlStrictMode": {
                    "$ref": "#/types/datadog:index/OrganizationSettingsSettingsSamlStrictMode:OrganizationSettingsSettingsSamlStrictMode",
                    "description": "Whether or not the SAML strict mode is enabled. If true, all users must log in with SAML.\n"
                }
            },
            "type": "object",
            "required": [
                "saml",
                "samlAutocreateUsersDomains",
                "samlIdpInitiatedLogin",
                "samlStrictMode"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "saml",
                        "samlAutocreateUsersDomains",
                        "samlCanBeEnabled",
                        "samlIdpEndpoint",
                        "samlIdpInitiatedLogin",
                        "samlIdpMetadataUploaded",
                        "samlLoginUrl",
                        "samlStrictMode"
                    ]
                }
            }
        },
        "datadog:index/OrganizationSettingsSettingsSaml:OrganizationSettingsSettingsSaml": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Whether or not SAML is enabled for this organization. Defaults to `false`.\n"
                }
            },
            "type": "object"
        },
        "datadog:index/OrganizationSettingsSettingsSamlAutocreateUsersDomains:OrganizationSettingsSettingsSamlAutocreateUsersDomains": {
            "properties": {
                "domains": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of domains where the SAML automated user creation is enabled.\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Whether or not the automated user creation based on SAML domain is enabled. Defaults to `false`.\n"
                }
            },
            "type": "object"
        },
        "datadog:index/OrganizationSettingsSettingsSamlIdpInitiatedLogin:OrganizationSettingsSettingsSamlIdpInitiatedLogin": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Whether or not a SAML identity provider metadata file was provided to the Datadog organization. Defaults to `false`.\n"
                }
            },
            "type": "object"
        },
        "datadog:index/OrganizationSettingsSettingsSamlStrictMode:OrganizationSettingsSettingsSamlStrictMode": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Whether or not the SAML strict mode is enabled. If true, all users must log in with SAML. Defaults to `false`.\n"
                }
            },
            "type": "object"
        },
        "datadog:index/PowerpackLayout:PowerpackLayout": {
            "properties": {
                "height": {
                    "type": "integer",
                    "description": "The height of the widget.\n"
                },
                "width": {
                    "type": "integer",
                    "description": "The width of the widget.\n"
                },
                "x": {
                    "type": "integer",
                    "description": "The position of the widget on the x (horizontal) axis. Should be greater than or equal to 0.\n"
                },
                "y": {
                    "type": "integer",
                    "description": "The position of the widget on the y (vertical) axis. Should be greater than or equal to 0.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "height",
                        "width",
                        "x",
                        "y"
                    ]
                }
            }
        },
        "datadog:index/PowerpackTemplateVariable:PowerpackTemplateVariable": {
            "properties": {
                "defaults": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "One or many default values for powerpack template variables on load. If more than one default is specified, they will be unioned together with `OR`.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the powerpack template variable.\n"
                }
            },
            "type": "object",
            "required": [
                "name"
            ]
        },
        "datadog:index/PowerpackWidget:PowerpackWidget": {
            "properties": {
                "alertGraphDefinition": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetAlertGraphDefinition:PowerpackWidgetAlertGraphDefinition",
                    "description": "The definition for a Alert Graph widget.\n"
                },
                "alertValueDefinition": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetAlertValueDefinition:PowerpackWidgetAlertValueDefinition",
                    "description": "The definition for a Alert Value widget.\n"
                },
                "changeDefinition": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetChangeDefinition:PowerpackWidgetChangeDefinition",
                    "description": "The definition for a Change widget.\n"
                },
                "checkStatusDefinition": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetCheckStatusDefinition:PowerpackWidgetCheckStatusDefinition",
                    "description": "The definition for a Check Status widget.\n"
                },
                "distributionDefinition": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetDistributionDefinition:PowerpackWidgetDistributionDefinition",
                    "description": "The definition for a Distribution widget.\n"
                },
                "eventStreamDefinition": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetEventStreamDefinition:PowerpackWidgetEventStreamDefinition",
                    "description": "The definition for a Event Stream widget.\n"
                },
                "eventTimelineDefinition": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetEventTimelineDefinition:PowerpackWidgetEventTimelineDefinition",
                    "description": "The definition for a Event Timeline widget.\n"
                },
                "freeTextDefinition": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetFreeTextDefinition:PowerpackWidgetFreeTextDefinition",
                    "description": "The definition for a Free Text widget.\n"
                },
                "geomapDefinition": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetGeomapDefinition:PowerpackWidgetGeomapDefinition",
                    "description": "The definition for a Geomap widget.\n"
                },
                "heatmapDefinition": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetHeatmapDefinition:PowerpackWidgetHeatmapDefinition",
                    "description": "The definition for a Heatmap widget.\n"
                },
                "hostmapDefinition": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetHostmapDefinition:PowerpackWidgetHostmapDefinition",
                    "description": "The definition for a Hostmap widget.\n"
                },
                "id": {
                    "type": "integer",
                    "description": "The ID of the widget.\n"
                },
                "iframeDefinition": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetIframeDefinition:PowerpackWidgetIframeDefinition",
                    "description": "The definition for an Iframe widget.\n"
                },
                "imageDefinition": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetImageDefinition:PowerpackWidgetImageDefinition",
                    "description": "The definition for an Image widget\n"
                },
                "listStreamDefinition": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetListStreamDefinition:PowerpackWidgetListStreamDefinition",
                    "description": "The definition for a List Stream widget.\n"
                },
                "logStreamDefinition": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetLogStreamDefinition:PowerpackWidgetLogStreamDefinition",
                    "description": "The definition for an Log Stream widget.\n"
                },
                "manageStatusDefinition": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetManageStatusDefinition:PowerpackWidgetManageStatusDefinition",
                    "description": "The definition for an Manage Status widget.\n"
                },
                "noteDefinition": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetNoteDefinition:PowerpackWidgetNoteDefinition",
                    "description": "The definition for a Note widget.\n"
                },
                "queryTableDefinition": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetQueryTableDefinition:PowerpackWidgetQueryTableDefinition",
                    "description": "The definition for a Query Table widget.\n"
                },
                "queryValueDefinition": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetQueryValueDefinition:PowerpackWidgetQueryValueDefinition",
                    "description": "The definition for a Query Value widget.\n"
                },
                "runWorkflowDefinition": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetRunWorkflowDefinition:PowerpackWidgetRunWorkflowDefinition",
                    "description": "The definition for a Run Workflow widget.\n"
                },
                "scatterplotDefinition": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetScatterplotDefinition:PowerpackWidgetScatterplotDefinition",
                    "description": "The definition for a Scatterplot widget.\n"
                },
                "serviceLevelObjectiveDefinition": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetServiceLevelObjectiveDefinition:PowerpackWidgetServiceLevelObjectiveDefinition",
                    "description": "The definition for a Service Level Objective widget.\n"
                },
                "servicemapDefinition": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetServicemapDefinition:PowerpackWidgetServicemapDefinition",
                    "description": "The definition for a Service Map widget.\n"
                },
                "sloListDefinition": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetSloListDefinition:PowerpackWidgetSloListDefinition",
                    "description": "The definition for an SLO (Service Level Objective) List widget.\n"
                },
                "sunburstDefinition": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetSunburstDefinition:PowerpackWidgetSunburstDefinition",
                    "description": "The definition for a Sunburst widget.\n"
                },
                "timeseriesDefinition": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetTimeseriesDefinition:PowerpackWidgetTimeseriesDefinition",
                    "description": "The definition for a Timeseries widget.\n"
                },
                "toplistDefinition": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetToplistDefinition:PowerpackWidgetToplistDefinition",
                    "description": "The definition for a Toplist widget.\n"
                },
                "topologyMapDefinition": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetTopologyMapDefinition:PowerpackWidgetTopologyMapDefinition",
                    "description": "The definition for a Topology Map widget.\n"
                },
                "traceServiceDefinition": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetTraceServiceDefinition:PowerpackWidgetTraceServiceDefinition",
                    "description": "The definition for a Trace Service widget.\n"
                },
                "treemapDefinition": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetTreemapDefinition:PowerpackWidgetTreemapDefinition",
                    "description": "The definition for a Treemap widget.\n"
                },
                "widgetLayout": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetWidgetLayout:PowerpackWidgetWidgetLayout",
                    "description": "The layout of the widget on a 'free' dashboard.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "id"
                    ]
                }
            }
        },
        "datadog:index/PowerpackWidgetAlertGraphDefinition:PowerpackWidgetAlertGraphDefinition": {
            "properties": {
                "alertId": {
                    "type": "string",
                    "description": "The ID of the monitor used by the widget.\n"
                },
                "liveSpan": {
                    "type": "string",
                    "description": "The timeframe to use when displaying the widget. Valid values are `1m`, `5m`, `10m`, `15m`, `30m`, `1h`, `4h`, `1d`, `2d`, `1w`, `1mo`, `3mo`, `6mo`, `week_to_date`, `month_to_date`, `1y`, `alert`.\n"
                },
                "title": {
                    "type": "string",
                    "description": "The title of the widget.\n"
                },
                "titleAlign": {
                    "type": "string",
                    "description": "The alignment of the widget's title. Valid values are `center`, `left`, `right`.\n"
                },
                "titleSize": {
                    "type": "string",
                    "description": "The size of the widget's title (defaults to 16).\n"
                },
                "vizType": {
                    "type": "string",
                    "description": "Type of visualization to use when displaying the widget. Valid values are `timeseries`, `toplist`.\n"
                }
            },
            "type": "object",
            "required": [
                "alertId",
                "vizType"
            ]
        },
        "datadog:index/PowerpackWidgetAlertValueDefinition:PowerpackWidgetAlertValueDefinition": {
            "properties": {
                "alertId": {
                    "type": "string",
                    "description": "The ID of the monitor used by the widget.\n"
                },
                "precision": {
                    "type": "integer",
                    "description": "The precision to use when displaying the value. Use `*` for maximum precision.\n"
                },
                "textAlign": {
                    "type": "string",
                    "description": "The alignment of the text in the widget. Valid values are `center`, `left`, `right`.\n"
                },
                "title": {
                    "type": "string",
                    "description": "The title of the widget.\n"
                },
                "titleAlign": {
                    "type": "string",
                    "description": "The alignment of the widget's title. Valid values are `center`, `left`, `right`.\n"
                },
                "titleSize": {
                    "type": "string",
                    "description": "The size of the widget's title (defaults to 16).\n"
                },
                "unit": {
                    "type": "string",
                    "description": "The unit for the value displayed in the widget.\n"
                }
            },
            "type": "object",
            "required": [
                "alertId"
            ]
        },
        "datadog:index/PowerpackWidgetChangeDefinition:PowerpackWidgetChangeDefinition": {
            "properties": {
                "customLinks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/PowerpackWidgetChangeDefinitionCustomLink:PowerpackWidgetChangeDefinitionCustomLink"
                    },
                    "description": "A nested block describing a custom link. Multiple `custom_link` blocks are allowed using the structure below.\n"
                },
                "liveSpan": {
                    "type": "string",
                    "description": "The timeframe to use when displaying the widget. Valid values are `1m`, `5m`, `10m`, `15m`, `30m`, `1h`, `4h`, `1d`, `2d`, `1w`, `1mo`, `3mo`, `6mo`, `week_to_date`, `month_to_date`, `1y`, `alert`.\n"
                },
                "requests": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/PowerpackWidgetChangeDefinitionRequest:PowerpackWidgetChangeDefinitionRequest"
                    },
                    "description": "A nested block describing the request to use when displaying the widget. Multiple request blocks are allowed using the structure below (exactly one of `q`, `apm_query`, `log_query`, `rum_query`, `security_query` or `process_query` is required within the request block).\n"
                },
                "title": {
                    "type": "string",
                    "description": "The title of the widget.\n"
                },
                "titleAlign": {
                    "type": "string",
                    "description": "The alignment of the widget's title. Valid values are `center`, `left`, `right`.\n"
                },
                "titleSize": {
                    "type": "string",
                    "description": "The size of the widget's title (defaults to 16).\n"
                }
            },
            "type": "object"
        },
        "datadog:index/PowerpackWidgetChangeDefinitionCustomLink:PowerpackWidgetChangeDefinitionCustomLink": {
            "properties": {
                "isHidden": {
                    "type": "boolean",
                    "description": "The flag for toggling context menu link visibility.\n"
                },
                "label": {
                    "type": "string",
                    "description": "The label for the custom link URL.\n"
                },
                "link": {
                    "type": "string",
                    "description": "The URL of the custom link.\n"
                },
                "overrideLabel": {
                    "type": "string",
                    "description": "The label ID that refers to a context menu link item. When `override_label` is provided, the client request omits the label field.\n"
                }
            },
            "type": "object"
        },
        "datadog:index/PowerpackWidgetChangeDefinitionRequest:PowerpackWidgetChangeDefinitionRequest": {
            "properties": {
                "apmQuery": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetChangeDefinitionRequestApmQuery:PowerpackWidgetChangeDefinitionRequestApmQuery",
                    "description": "The query to use for this widget.\n"
                },
                "changeType": {
                    "type": "string",
                    "description": "Whether to show absolute or relative change. Valid values are `absolute`, `relative`.\n"
                },
                "compareTo": {
                    "type": "string",
                    "description": "Choose from when to compare current data to. Valid values are `hour_before`, `day_before`, `week_before`, `month_before`.\n"
                },
                "formulas": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/PowerpackWidgetChangeDefinitionRequestFormula:PowerpackWidgetChangeDefinitionRequestFormula"
                    }
                },
                "increaseGood": {
                    "type": "boolean",
                    "description": "A Boolean indicating whether an increase in the value is good (displayed in green) or not (displayed in red).\n"
                },
                "logQuery": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetChangeDefinitionRequestLogQuery:PowerpackWidgetChangeDefinitionRequestLogQuery",
                    "description": "The query to use for this widget.\n"
                },
                "orderBy": {
                    "type": "string",
                    "description": "What to order by. Valid values are `change`, `name`, `present`, `past`.\n"
                },
                "orderDir": {
                    "type": "string",
                    "description": "Widget sorting method. Valid values are `asc`, `desc`.\n"
                },
                "processQuery": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetChangeDefinitionRequestProcessQuery:PowerpackWidgetChangeDefinitionRequestProcessQuery",
                    "description": "The process query to use in the widget. The structure of this block is described below.\n"
                },
                "q": {
                    "type": "string",
                    "description": "The metric query to use for this widget.\n"
                },
                "queries": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/PowerpackWidgetChangeDefinitionRequestQuery:PowerpackWidgetChangeDefinitionRequestQuery"
                    }
                },
                "rumQuery": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetChangeDefinitionRequestRumQuery:PowerpackWidgetChangeDefinitionRequestRumQuery",
                    "description": "The query to use for this widget.\n"
                },
                "securityQuery": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetChangeDefinitionRequestSecurityQuery:PowerpackWidgetChangeDefinitionRequestSecurityQuery",
                    "description": "The query to use for this widget.\n"
                },
                "showPresent": {
                    "type": "boolean",
                    "description": "If set to `true`, displays the current value.\n"
                }
            },
            "type": "object"
        },
        "datadog:index/PowerpackWidgetChangeDefinitionRequestApmQuery:PowerpackWidgetChangeDefinitionRequestApmQuery": {
            "properties": {
                "computeQuery": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetChangeDefinitionRequestApmQueryComputeQuery:PowerpackWidgetChangeDefinitionRequestApmQueryComputeQuery",
                    "description": "`compute_query` or `multi_compute` is required. The map keys are listed below.\n"
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/PowerpackWidgetChangeDefinitionRequestApmQueryGroupBy:PowerpackWidgetChangeDefinitionRequestApmQueryGroupBy"
                    },
                    "description": "Multiple `group_by` blocks are allowed using the structure below.\n"
                },
                "index": {
                    "type": "string",
                    "description": "The name of the index to query.\n"
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/PowerpackWidgetChangeDefinitionRequestApmQueryMultiCompute:PowerpackWidgetChangeDefinitionRequestApmQueryMultiCompute"
                    },
                    "description": "`compute_query` or `multi_compute` is required. Multiple `multi_compute` blocks are allowed using the structure below.\n"
                },
                "searchQuery": {
                    "type": "string",
                    "description": "The search query to use.\n"
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/PowerpackWidgetChangeDefinitionRequestApmQueryComputeQuery:PowerpackWidgetChangeDefinitionRequestApmQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "The aggregation method.\n"
                },
                "facet": {
                    "type": "string",
                    "description": "The facet name.\n"
                },
                "interval": {
                    "type": "integer",
                    "description": "Define the time interval in seconds.\n"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/PowerpackWidgetChangeDefinitionRequestApmQueryGroupBy:PowerpackWidgetChangeDefinitionRequestApmQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "description": "The facet name.\n"
                },
                "limit": {
                    "type": "integer",
                    "description": "The maximum number of items in the group.\n"
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetChangeDefinitionRequestApmQueryGroupBySortQuery:PowerpackWidgetChangeDefinitionRequestApmQueryGroupBySortQuery",
                    "description": "A list of exactly one element describing the sort query to use.\n"
                }
            },
            "type": "object"
        },
        "datadog:index/PowerpackWidgetChangeDefinitionRequestApmQueryGroupBySortQuery:PowerpackWidgetChangeDefinitionRequestApmQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "The aggregation method.\n"
                },
                "facet": {
                    "type": "string",
                    "description": "The facet name.\n"
                },
                "order": {
                    "type": "string",
                    "description": "Widget sorting methods. Valid values are `asc`, `desc`.\n"
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/PowerpackWidgetChangeDefinitionRequestApmQueryMultiCompute:PowerpackWidgetChangeDefinitionRequestApmQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "The aggregation method.\n"
                },
                "facet": {
                    "type": "string",
                    "description": "The facet name.\n"
                },
                "interval": {
                    "type": "integer",
                    "description": "Define the time interval in seconds.\n"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/PowerpackWidgetChangeDefinitionRequestFormula:PowerpackWidgetChangeDefinitionRequestFormula": {
            "properties": {
                "alias": {
                    "type": "string",
                    "description": "An expression alias.\n"
                },
                "cellDisplayMode": {
                    "type": "string",
                    "description": "A list of display modes for each table cell. Valid values are `number`, `bar`.\n"
                },
                "conditionalFormats": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/PowerpackWidgetChangeDefinitionRequestFormulaConditionalFormat:PowerpackWidgetChangeDefinitionRequestFormulaConditionalFormat"
                    },
                    "description": "Conditional formats allow you to set the color of your widget content or background depending on the rule applied to your data. Multiple `conditional_formats` blocks are allowed using the structure below.\n"
                },
                "formulaExpression": {
                    "type": "string",
                    "description": "A string expression built from queries, formulas, and functions.\n"
                },
                "limit": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetChangeDefinitionRequestFormulaLimit:PowerpackWidgetChangeDefinitionRequestFormulaLimit",
                    "description": "The options for limiting results returned.\n"
                },
                "style": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetChangeDefinitionRequestFormulaStyle:PowerpackWidgetChangeDefinitionRequestFormulaStyle",
                    "description": "Styling options for widget formulas.\n"
                }
            },
            "type": "object",
            "required": [
                "formulaExpression"
            ]
        },
        "datadog:index/PowerpackWidgetChangeDefinitionRequestFormulaConditionalFormat:PowerpackWidgetChangeDefinitionRequestFormulaConditionalFormat": {
            "properties": {
                "comparator": {
                    "type": "string",
                    "description": "The comparator to use. Valid values are `=`, `\u003e`, `\u003e=`, `\u003c`, `\u003c=`.\n"
                },
                "customBgColor": {
                    "type": "string",
                    "description": "The color palette to apply to the background, same values available as palette.\n"
                },
                "customFgColor": {
                    "type": "string",
                    "description": "The color palette to apply to the foreground, same values available as palette.\n"
                },
                "hideValue": {
                    "type": "boolean",
                    "description": "Setting this to True hides values.\n"
                },
                "imageUrl": {
                    "type": "string",
                    "description": "Displays an image as the background.\n"
                },
                "metric": {
                    "type": "string",
                    "description": "The metric from the request to correlate with this conditional format.\n"
                },
                "palette": {
                    "type": "string",
                    "description": "The color palette to apply. Valid values are `blue`, `custom_bg`, `custom_image`, `custom_text`, `gray_on_white`, `grey`, `green`, `orange`, `red`, `red_on_white`, `white_on_gray`, `white_on_green`, `green_on_white`, `white_on_red`, `white_on_yellow`, `yellow_on_white`, `black_on_light_yellow`, `black_on_light_green`, `black_on_light_red`.\n"
                },
                "timeframe": {
                    "type": "string",
                    "description": "Defines the displayed timeframe.\n"
                },
                "value": {
                    "type": "number",
                    "description": "A value for the comparator.\n"
                }
            },
            "type": "object",
            "required": [
                "comparator",
                "palette",
                "value"
            ]
        },
        "datadog:index/PowerpackWidgetChangeDefinitionRequestFormulaLimit:PowerpackWidgetChangeDefinitionRequestFormulaLimit": {
            "properties": {
                "count": {
                    "type": "integer",
                    "description": "The number of results to return.\n"
                },
                "order": {
                    "type": "string",
                    "description": "The direction of the sort. Valid values are `asc`, `desc`. Defaults to `\"desc\"`.\n"
                }
            },
            "type": "object"
        },
        "datadog:index/PowerpackWidgetChangeDefinitionRequestFormulaStyle:PowerpackWidgetChangeDefinitionRequestFormulaStyle": {
            "properties": {
                "palette": {
                    "type": "string",
                    "description": "The color palette used to display the formula. A guide to the available color palettes can be found at https://docs.datadoghq.com/dashboards/guide/widget_colors.\n"
                },
                "paletteIndex": {
                    "type": "integer",
                    "description": "Index specifying which color to use within the palette.\n"
                }
            },
            "type": "object"
        },
        "datadog:index/PowerpackWidgetChangeDefinitionRequestLogQuery:PowerpackWidgetChangeDefinitionRequestLogQuery": {
            "properties": {
                "computeQuery": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetChangeDefinitionRequestLogQueryComputeQuery:PowerpackWidgetChangeDefinitionRequestLogQueryComputeQuery",
                    "description": "`compute_query` or `multi_compute` is required. The map keys are listed below.\n"
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/PowerpackWidgetChangeDefinitionRequestLogQueryGroupBy:PowerpackWidgetChangeDefinitionRequestLogQueryGroupBy"
                    },
                    "description": "Multiple `group_by` blocks are allowed using the structure below.\n"
                },
                "index": {
                    "type": "string",
                    "description": "The name of the index to query.\n"
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/PowerpackWidgetChangeDefinitionRequestLogQueryMultiCompute:PowerpackWidgetChangeDefinitionRequestLogQueryMultiCompute"
                    },
                    "description": "`compute_query` or `multi_compute` is required. Multiple `multi_compute` blocks are allowed using the structure below.\n"
                },
                "searchQuery": {
                    "type": "string",
                    "description": "The search query to use.\n"
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/PowerpackWidgetChangeDefinitionRequestLogQueryComputeQuery:PowerpackWidgetChangeDefinitionRequestLogQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "The aggregation method.\n"
                },
                "facet": {
                    "type": "string",
                    "description": "The facet name.\n"
                },
                "interval": {
                    "type": "integer",
                    "description": "Define the time interval in seconds.\n"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/PowerpackWidgetChangeDefinitionRequestLogQueryGroupBy:PowerpackWidgetChangeDefinitionRequestLogQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "description": "The facet name.\n"
                },
                "limit": {
                    "type": "integer",
                    "description": "The maximum number of items in the group.\n"
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetChangeDefinitionRequestLogQueryGroupBySortQuery:PowerpackWidgetChangeDefinitionRequestLogQueryGroupBySortQuery",
                    "description": "A list of exactly one element describing the sort query to use.\n"
                }
            },
            "type": "object"
        },
        "datadog:index/PowerpackWidgetChangeDefinitionRequestLogQueryGroupBySortQuery:PowerpackWidgetChangeDefinitionRequestLogQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "The aggregation method.\n"
                },
                "facet": {
                    "type": "string",
                    "description": "The facet name.\n"
                },
                "order": {
                    "type": "string",
                    "description": "Widget sorting methods. Valid values are `asc`, `desc`.\n"
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/PowerpackWidgetChangeDefinitionRequestLogQueryMultiCompute:PowerpackWidgetChangeDefinitionRequestLogQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "The aggregation method.\n"
                },
                "facet": {
                    "type": "string",
                    "description": "The facet name.\n"
                },
                "interval": {
                    "type": "integer",
                    "description": "Define the time interval in seconds.\n"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/PowerpackWidgetChangeDefinitionRequestProcessQuery:PowerpackWidgetChangeDefinitionRequestProcessQuery": {
            "properties": {
                "filterBies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of processes.\n"
                },
                "limit": {
                    "type": "integer",
                    "description": "The max number of items in the filter list.\n"
                },
                "metric": {
                    "type": "string",
                    "description": "Your chosen metric.\n"
                },
                "searchBy": {
                    "type": "string",
                    "description": "Your chosen search term.\n"
                }
            },
            "type": "object",
            "required": [
                "metric"
            ]
        },
        "datadog:index/PowerpackWidgetChangeDefinitionRequestQuery:PowerpackWidgetChangeDefinitionRequestQuery": {
            "properties": {
                "apmDependencyStatsQuery": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetChangeDefinitionRequestQueryApmDependencyStatsQuery:PowerpackWidgetChangeDefinitionRequestQueryApmDependencyStatsQuery",
                    "description": "The APM Dependency Stats query using formulas and functions.\n"
                },
                "apmResourceStatsQuery": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetChangeDefinitionRequestQueryApmResourceStatsQuery:PowerpackWidgetChangeDefinitionRequestQueryApmResourceStatsQuery",
                    "description": "The APM Resource Stats query using formulas and functions.\n"
                },
                "cloudCostQuery": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetChangeDefinitionRequestQueryCloudCostQuery:PowerpackWidgetChangeDefinitionRequestQueryCloudCostQuery",
                    "description": "The Cloud Cost query using formulas and functions.\n"
                },
                "eventQuery": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetChangeDefinitionRequestQueryEventQuery:PowerpackWidgetChangeDefinitionRequestQueryEventQuery",
                    "description": "A timeseries formula and functions events query.\n"
                },
                "metricQuery": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetChangeDefinitionRequestQueryMetricQuery:PowerpackWidgetChangeDefinitionRequestQueryMetricQuery",
                    "description": "A timeseries formula and functions metrics query.\n"
                },
                "processQuery": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetChangeDefinitionRequestQueryProcessQuery:PowerpackWidgetChangeDefinitionRequestQueryProcessQuery",
                    "description": "The process query using formulas and functions.\n"
                },
                "sloQuery": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetChangeDefinitionRequestQuerySloQuery:PowerpackWidgetChangeDefinitionRequestQuerySloQuery",
                    "description": "The SLO query using formulas and functions.\n"
                }
            },
            "type": "object"
        },
        "datadog:index/PowerpackWidgetChangeDefinitionRequestQueryApmDependencyStatsQuery:PowerpackWidgetChangeDefinitionRequestQueryApmDependencyStatsQuery": {
            "properties": {
                "crossOrgUuids": {
                    "type": "string",
                    "description": "The source organization UUID for cross organization queries. Feature in Private Beta.\n"
                },
                "dataSource": {
                    "type": "string",
                    "description": "The data source for APM Dependency Stats queries. Valid values are `apm_dependency_stats`.\n"
                },
                "env": {
                    "type": "string",
                    "description": "APM environment.\n"
                },
                "isUpstream": {
                    "type": "boolean",
                    "description": "Determines whether stats for upstream or downstream dependencies should be queried.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of query for use in formulas.\n"
                },
                "operationName": {
                    "type": "string",
                    "description": "Name of operation on service.\n"
                },
                "primaryTagName": {
                    "type": "string",
                    "description": "The name of the second primary tag used within APM; required when `primary_tag_value` is specified. See https://docs.datadoghq.com/tracing/guide/setting*primary*tags*to*scope/#add-a-second-primary-tag-in-datadog.\n"
                },
                "primaryTagValue": {
                    "type": "string",
                    "description": "Filter APM data by the second primary tag. `primary_tag_name` must also be specified.\n"
                },
                "resourceName": {
                    "type": "string",
                    "description": "APM resource.\n"
                },
                "service": {
                    "type": "string",
                    "description": "APM service.\n"
                },
                "stat": {
                    "type": "string",
                    "description": "APM statistic. Valid values are `avg_duration`, `avg_root_duration`, `avg_spans_per_trace`, `error_rate`, `pct_exec_time`, `pct_of_traces`, `total_traces_count`.\n"
                }
            },
            "type": "object",
            "required": [
                "dataSource",
                "env",
                "name",
                "operationName",
                "resourceName",
                "service",
                "stat"
            ]
        },
        "datadog:index/PowerpackWidgetChangeDefinitionRequestQueryApmResourceStatsQuery:PowerpackWidgetChangeDefinitionRequestQueryApmResourceStatsQuery": {
            "properties": {
                "crossOrgUuids": {
                    "type": "string",
                    "description": "The source organization UUID for cross organization queries. Feature in Private Beta.\n"
                },
                "dataSource": {
                    "type": "string",
                    "description": "The data source for APM Resource Stats queries. Valid values are `apm_resource_stats`.\n"
                },
                "env": {
                    "type": "string",
                    "description": "APM environment.\n"
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Array of fields to group results by.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of query for use in formulas.\n"
                },
                "operationName": {
                    "type": "string",
                    "description": "Name of operation on service.\n"
                },
                "primaryTagName": {
                    "type": "string",
                    "description": "The name of the second primary tag used within APM; required when `primary_tag_value` is specified. See https://docs.datadoghq.com/tracing/guide/setting*primary*tags*to*scope/#add-a-second-primary-tag-in-datadog.\n"
                },
                "primaryTagValue": {
                    "type": "string",
                    "description": "Filter APM data by the second primary tag. `primary_tag_name` must also be specified.\n"
                },
                "resourceName": {
                    "type": "string",
                    "description": "APM resource.\n"
                },
                "service": {
                    "type": "string",
                    "description": "APM service.\n"
                },
                "stat": {
                    "type": "string",
                    "description": "APM statistic. Valid values are `errors`, `error_rate`, `hits`, `latency_avg`, `latency_distribution`, `latency_max`, `latency_p50`, `latency_p75`, `latency_p90`, `latency_p95`, `latency_p99`.\n"
                }
            },
            "type": "object",
            "required": [
                "dataSource",
                "env",
                "name",
                "service",
                "stat"
            ]
        },
        "datadog:index/PowerpackWidgetChangeDefinitionRequestQueryCloudCostQuery:PowerpackWidgetChangeDefinitionRequestQueryCloudCostQuery": {
            "properties": {
                "aggregator": {
                    "type": "string",
                    "description": "The aggregation methods available for cloud cost queries. Valid values are `avg`, `last`, `max`, `min`, `sum`, `percentile`.\n"
                },
                "crossOrgUuids": {
                    "type": "string",
                    "description": "The source organization UUID for cross organization queries. Feature in Private Beta.\n"
                },
                "dataSource": {
                    "type": "string",
                    "description": "The data source for cloud cost queries. Valid values are `cloud_cost`.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the query for use in formulas.\n"
                },
                "query": {
                    "type": "string",
                    "description": "The cloud cost query definition.\n"
                }
            },
            "type": "object",
            "required": [
                "dataSource",
                "name",
                "query"
            ]
        },
        "datadog:index/PowerpackWidgetChangeDefinitionRequestQueryEventQuery:PowerpackWidgetChangeDefinitionRequestQueryEventQuery": {
            "properties": {
                "computes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/PowerpackWidgetChangeDefinitionRequestQueryEventQueryCompute:PowerpackWidgetChangeDefinitionRequestQueryEventQueryCompute"
                    },
                    "description": "The compute options.\n"
                },
                "crossOrgUuids": {
                    "type": "string",
                    "description": "The source organization UUID for cross organization queries. Feature in Private Beta.\n"
                },
                "dataSource": {
                    "type": "string",
                    "description": "The data source for event platform-based queries. Valid values are `logs`, `spans`, `network`, `rum`, `security_signals`, `profiles`, `audit`, `events`, `ci_tests`, `ci_pipelines`, `incident_analytics`.\n"
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/PowerpackWidgetChangeDefinitionRequestQueryEventQueryGroupBy:PowerpackWidgetChangeDefinitionRequestQueryEventQueryGroupBy"
                    },
                    "description": "Group by options.\n"
                },
                "indexes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "An array of index names to query in the stream.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of query for use in formulas.\n"
                },
                "search": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetChangeDefinitionRequestQueryEventQuerySearch:PowerpackWidgetChangeDefinitionRequestQueryEventQuerySearch",
                    "description": "The search options.\n"
                },
                "storage": {
                    "type": "string",
                    "description": "Storage location (private beta).\n"
                }
            },
            "type": "object",
            "required": [
                "computes",
                "dataSource",
                "name"
            ]
        },
        "datadog:index/PowerpackWidgetChangeDefinitionRequestQueryEventQueryCompute:PowerpackWidgetChangeDefinitionRequestQueryEventQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "The aggregation methods for event platform queries. Valid values are `count`, `cardinality`, `median`, `pc75`, `pc90`, `pc95`, `pc98`, `pc99`, `sum`, `min`, `max`, `avg`.\n"
                },
                "interval": {
                    "type": "integer",
                    "description": "A time interval in milliseconds.\n"
                },
                "metric": {
                    "type": "string",
                    "description": "The measurable attribute to compute.\n"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/PowerpackWidgetChangeDefinitionRequestQueryEventQueryGroupBy:PowerpackWidgetChangeDefinitionRequestQueryEventQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "description": "The event facet.\n"
                },
                "limit": {
                    "type": "integer",
                    "description": "The number of groups to return.\n"
                },
                "sort": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetChangeDefinitionRequestQueryEventQueryGroupBySort:PowerpackWidgetChangeDefinitionRequestQueryEventQueryGroupBySort",
                    "description": "The options for sorting group by results.\n"
                }
            },
            "type": "object",
            "required": [
                "facet"
            ]
        },
        "datadog:index/PowerpackWidgetChangeDefinitionRequestQueryEventQueryGroupBySort:PowerpackWidgetChangeDefinitionRequestQueryEventQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "The aggregation methods for the event platform queries. Valid values are `count`, `cardinality`, `median`, `pc75`, `pc90`, `pc95`, `pc98`, `pc99`, `sum`, `min`, `max`, `avg`.\n"
                },
                "metric": {
                    "type": "string",
                    "description": "The metric used for sorting group by results.\n"
                },
                "order": {
                    "type": "string",
                    "description": "Direction of sort. Valid values are `asc`, `desc`.\n"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/PowerpackWidgetChangeDefinitionRequestQueryEventQuerySearch:PowerpackWidgetChangeDefinitionRequestQueryEventQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "description": "The events search string.\n"
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/PowerpackWidgetChangeDefinitionRequestQueryMetricQuery:PowerpackWidgetChangeDefinitionRequestQueryMetricQuery": {
            "properties": {
                "aggregator": {
                    "type": "string",
                    "description": "The aggregation methods available for metrics queries. Valid values are `avg`, `min`, `max`, `sum`, `last`, `area`, `l2norm`, `percentile`.\n"
                },
                "crossOrgUuids": {
                    "type": "string",
                    "description": "The source organization UUID for cross organization queries. Feature in Private Beta.\n"
                },
                "dataSource": {
                    "type": "string",
                    "description": "The data source for metrics queries. Defaults to `\"metrics\"`.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the query for use in formulas.\n"
                },
                "query": {
                    "type": "string",
                    "description": "The metrics query definition.\n"
                }
            },
            "type": "object",
            "required": [
                "name",
                "query"
            ]
        },
        "datadog:index/PowerpackWidgetChangeDefinitionRequestQueryProcessQuery:PowerpackWidgetChangeDefinitionRequestQueryProcessQuery": {
            "properties": {
                "aggregator": {
                    "type": "string",
                    "description": "The aggregation methods available for metrics queries. Valid values are `avg`, `min`, `max`, `sum`, `last`, `area`, `l2norm`, `percentile`.\n"
                },
                "crossOrgUuids": {
                    "type": "string",
                    "description": "The source organization UUID for cross organization queries. Feature in Private Beta.\n"
                },
                "dataSource": {
                    "type": "string",
                    "description": "The data source for process queries. Valid values are `process`, `container`.\n"
                },
                "isNormalizedCpu": {
                    "type": "boolean",
                    "description": "Whether to normalize the CPU percentages.\n"
                },
                "limit": {
                    "type": "integer",
                    "description": "The number of hits to return.\n"
                },
                "metric": {
                    "type": "string",
                    "description": "The process metric name.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of query for use in formulas.\n"
                },
                "sort": {
                    "type": "string",
                    "description": "The direction of the sort. Valid values are `asc`, `desc`. Defaults to `\"desc\"`.\n"
                },
                "tagFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "An array of tags to filter by.\n"
                },
                "textFilter": {
                    "type": "string",
                    "description": "The text to use as a filter.\n"
                }
            },
            "type": "object",
            "required": [
                "dataSource",
                "metric",
                "name"
            ]
        },
        "datadog:index/PowerpackWidgetChangeDefinitionRequestQuerySloQuery:PowerpackWidgetChangeDefinitionRequestQuerySloQuery": {
            "properties": {
                "additionalQueryFilters": {
                    "type": "string",
                    "description": "Additional filters applied to the SLO query.\n"
                },
                "crossOrgUuids": {
                    "type": "string",
                    "description": "The source organization UUID for cross organization queries. Feature in Private Beta.\n"
                },
                "dataSource": {
                    "type": "string",
                    "description": "The data source for SLO queries. Valid values are `slo`.\n"
                },
                "groupMode": {
                    "type": "string",
                    "description": "Group mode to query measures. Valid values are `overall`, `components`. Defaults to `\"overall\"`.\n"
                },
                "measure": {
                    "type": "string",
                    "description": "SLO measures queries. Valid values are `good_events`, `bad_events`, `slo_status`, `error_budget_remaining`, `burn_rate`, `error_budget_burndown`.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of query for use in formulas.\n"
                },
                "sloId": {
                    "type": "string",
                    "description": "ID of an SLO to query.\n"
                },
                "sloQueryType": {
                    "type": "string",
                    "description": "type of the SLO to query. Valid values are `metric`, `time_slice`. Defaults to `\"metric\"`.\n"
                }
            },
            "type": "object",
            "required": [
                "dataSource",
                "measure",
                "sloId"
            ]
        },
        "datadog:index/PowerpackWidgetChangeDefinitionRequestRumQuery:PowerpackWidgetChangeDefinitionRequestRumQuery": {
            "properties": {
                "computeQuery": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetChangeDefinitionRequestRumQueryComputeQuery:PowerpackWidgetChangeDefinitionRequestRumQueryComputeQuery",
                    "description": "`compute_query` or `multi_compute` is required. The map keys are listed below.\n"
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/PowerpackWidgetChangeDefinitionRequestRumQueryGroupBy:PowerpackWidgetChangeDefinitionRequestRumQueryGroupBy"
                    },
                    "description": "Multiple `group_by` blocks are allowed using the structure below.\n"
                },
                "index": {
                    "type": "string",
                    "description": "The name of the index to query.\n"
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/PowerpackWidgetChangeDefinitionRequestRumQueryMultiCompute:PowerpackWidgetChangeDefinitionRequestRumQueryMultiCompute"
                    },
                    "description": "`compute_query` or `multi_compute` is required. Multiple `multi_compute` blocks are allowed using the structure below.\n"
                },
                "searchQuery": {
                    "type": "string",
                    "description": "The search query to use.\n"
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/PowerpackWidgetChangeDefinitionRequestRumQueryComputeQuery:PowerpackWidgetChangeDefinitionRequestRumQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "The aggregation method.\n"
                },
                "facet": {
                    "type": "string",
                    "description": "The facet name.\n"
                },
                "interval": {
                    "type": "integer",
                    "description": "Define the time interval in seconds.\n"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/PowerpackWidgetChangeDefinitionRequestRumQueryGroupBy:PowerpackWidgetChangeDefinitionRequestRumQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "description": "The facet name.\n"
                },
                "limit": {
                    "type": "integer",
                    "description": "The maximum number of items in the group.\n"
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetChangeDefinitionRequestRumQueryGroupBySortQuery:PowerpackWidgetChangeDefinitionRequestRumQueryGroupBySortQuery",
                    "description": "A list of exactly one element describing the sort query to use.\n"
                }
            },
            "type": "object"
        },
        "datadog:index/PowerpackWidgetChangeDefinitionRequestRumQueryGroupBySortQuery:PowerpackWidgetChangeDefinitionRequestRumQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "The aggregation method.\n"
                },
                "facet": {
                    "type": "string",
                    "description": "The facet name.\n"
                },
                "order": {
                    "type": "string",
                    "description": "Widget sorting methods. Valid values are `asc`, `desc`.\n"
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/PowerpackWidgetChangeDefinitionRequestRumQueryMultiCompute:PowerpackWidgetChangeDefinitionRequestRumQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "The aggregation method.\n"
                },
                "facet": {
                    "type": "string",
                    "description": "The facet name.\n"
                },
                "interval": {
                    "type": "integer",
                    "description": "Define the time interval in seconds.\n"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/PowerpackWidgetChangeDefinitionRequestSecurityQuery:PowerpackWidgetChangeDefinitionRequestSecurityQuery": {
            "properties": {
                "computeQuery": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetChangeDefinitionRequestSecurityQueryComputeQuery:PowerpackWidgetChangeDefinitionRequestSecurityQueryComputeQuery",
                    "description": "`compute_query` or `multi_compute` is required. The map keys are listed below.\n"
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/PowerpackWidgetChangeDefinitionRequestSecurityQueryGroupBy:PowerpackWidgetChangeDefinitionRequestSecurityQueryGroupBy"
                    },
                    "description": "Multiple `group_by` blocks are allowed using the structure below.\n"
                },
                "index": {
                    "type": "string",
                    "description": "The name of the index to query.\n"
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/PowerpackWidgetChangeDefinitionRequestSecurityQueryMultiCompute:PowerpackWidgetChangeDefinitionRequestSecurityQueryMultiCompute"
                    },
                    "description": "`compute_query` or `multi_compute` is required. Multiple `multi_compute` blocks are allowed using the structure below.\n"
                },
                "searchQuery": {
                    "type": "string",
                    "description": "The search query to use.\n"
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/PowerpackWidgetChangeDefinitionRequestSecurityQueryComputeQuery:PowerpackWidgetChangeDefinitionRequestSecurityQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "The aggregation method.\n"
                },
                "facet": {
                    "type": "string",
                    "description": "The facet name.\n"
                },
                "interval": {
                    "type": "integer",
                    "description": "Define the time interval in seconds.\n"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/PowerpackWidgetChangeDefinitionRequestSecurityQueryGroupBy:PowerpackWidgetChangeDefinitionRequestSecurityQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "description": "The facet name.\n"
                },
                "limit": {
                    "type": "integer",
                    "description": "The maximum number of items in the group.\n"
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetChangeDefinitionRequestSecurityQueryGroupBySortQuery:PowerpackWidgetChangeDefinitionRequestSecurityQueryGroupBySortQuery",
                    "description": "A list of exactly one element describing the sort query to use.\n"
                }
            },
            "type": "object"
        },
        "datadog:index/PowerpackWidgetChangeDefinitionRequestSecurityQueryGroupBySortQuery:PowerpackWidgetChangeDefinitionRequestSecurityQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "The aggregation method.\n"
                },
                "facet": {
                    "type": "string",
                    "description": "The facet name.\n"
                },
                "order": {
                    "type": "string",
                    "description": "Widget sorting methods. Valid values are `asc`, `desc`.\n"
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/PowerpackWidgetChangeDefinitionRequestSecurityQueryMultiCompute:PowerpackWidgetChangeDefinitionRequestSecurityQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "The aggregation method.\n"
                },
                "facet": {
                    "type": "string",
                    "description": "The facet name.\n"
                },
                "interval": {
                    "type": "integer",
                    "description": "Define the time interval in seconds.\n"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/PowerpackWidgetCheckStatusDefinition:PowerpackWidgetCheckStatusDefinition": {
            "properties": {
                "check": {
                    "type": "string",
                    "description": "The check to use in the widget.\n"
                },
                "group": {
                    "type": "string",
                    "description": "The check group to use in the widget.\n"
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "When `grouping = \"cluster\"`, indicates a list of tags to use for grouping.\n"
                },
                "grouping": {
                    "type": "string",
                    "description": "The kind of grouping to use. Valid values are `check`, `cluster`.\n"
                },
                "liveSpan": {
                    "type": "string",
                    "description": "The timeframe to use when displaying the widget. Valid values are `1m`, `5m`, `10m`, `15m`, `30m`, `1h`, `4h`, `1d`, `2d`, `1w`, `1mo`, `3mo`, `6mo`, `week_to_date`, `month_to_date`, `1y`, `alert`.\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tags to use in the widget.\n"
                },
                "title": {
                    "type": "string",
                    "description": "The title of the widget.\n"
                },
                "titleAlign": {
                    "type": "string",
                    "description": "The alignment of the widget's title. Valid values are `center`, `left`, `right`.\n"
                },
                "titleSize": {
                    "type": "string",
                    "description": "The size of the widget's title (defaults to 16).\n"
                }
            },
            "type": "object",
            "required": [
                "check",
                "grouping"
            ]
        },
        "datadog:index/PowerpackWidgetDistributionDefinition:PowerpackWidgetDistributionDefinition": {
            "properties": {
                "legendSize": {
                    "type": "string",
                    "description": "The size of the legend displayed in the widget.\n"
                },
                "liveSpan": {
                    "type": "string",
                    "description": "The timeframe to use when displaying the widget. Valid values are `1m`, `5m`, `10m`, `15m`, `30m`, `1h`, `4h`, `1d`, `2d`, `1w`, `1mo`, `3mo`, `6mo`, `week_to_date`, `month_to_date`, `1y`, `alert`.\n"
                },
                "requests": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/PowerpackWidgetDistributionDefinitionRequest:PowerpackWidgetDistributionDefinitionRequest"
                    },
                    "description": "A nested block describing the request to use when displaying the widget. Multiple request blocks are allowed using the structure below (exactly one of `q`, `apm_query`, `log_query`, `rum_query`, `security_query` or `process_query` is required within the request block).\n"
                },
                "showLegend": {
                    "type": "boolean",
                    "description": "Whether or not to show the legend on this widget.\n"
                },
                "title": {
                    "type": "string",
                    "description": "The title of the widget.\n"
                },
                "titleAlign": {
                    "type": "string",
                    "description": "The alignment of the widget's title. Valid values are `center`, `left`, `right`.\n"
                },
                "titleSize": {
                    "type": "string",
                    "description": "The size of the widget's title (defaults to 16).\n"
                }
            },
            "type": "object"
        },
        "datadog:index/PowerpackWidgetDistributionDefinitionRequest:PowerpackWidgetDistributionDefinitionRequest": {
            "properties": {
                "apmQuery": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetDistributionDefinitionRequestApmQuery:PowerpackWidgetDistributionDefinitionRequestApmQuery",
                    "description": "The query to use for this widget.\n"
                },
                "apmStatsQuery": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetDistributionDefinitionRequestApmStatsQuery:PowerpackWidgetDistributionDefinitionRequestApmStatsQuery"
                },
                "logQuery": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetDistributionDefinitionRequestLogQuery:PowerpackWidgetDistributionDefinitionRequestLogQuery",
                    "description": "The query to use for this widget.\n"
                },
                "processQuery": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetDistributionDefinitionRequestProcessQuery:PowerpackWidgetDistributionDefinitionRequestProcessQuery",
                    "description": "The process query to use in the widget. The structure of this block is described below.\n"
                },
                "q": {
                    "type": "string",
                    "description": "The metric query to use for this widget.\n"
                },
                "rumQuery": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetDistributionDefinitionRequestRumQuery:PowerpackWidgetDistributionDefinitionRequestRumQuery",
                    "description": "The query to use for this widget.\n"
                },
                "securityQuery": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetDistributionDefinitionRequestSecurityQuery:PowerpackWidgetDistributionDefinitionRequestSecurityQuery",
                    "description": "The query to use for this widget.\n"
                },
                "style": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetDistributionDefinitionRequestStyle:PowerpackWidgetDistributionDefinitionRequestStyle",
                    "description": "The style of the widget graph. One nested block is allowed using the structure below.\n"
                }
            },
            "type": "object"
        },
        "datadog:index/PowerpackWidgetDistributionDefinitionRequestApmQuery:PowerpackWidgetDistributionDefinitionRequestApmQuery": {
            "properties": {
                "computeQuery": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetDistributionDefinitionRequestApmQueryComputeQuery:PowerpackWidgetDistributionDefinitionRequestApmQueryComputeQuery",
                    "description": "`compute_query` or `multi_compute` is required. The map keys are listed below.\n"
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/PowerpackWidgetDistributionDefinitionRequestApmQueryGroupBy:PowerpackWidgetDistributionDefinitionRequestApmQueryGroupBy"
                    },
                    "description": "Multiple `group_by` blocks are allowed using the structure below.\n"
                },
                "index": {
                    "type": "string",
                    "description": "The name of the index to query.\n"
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/PowerpackWidgetDistributionDefinitionRequestApmQueryMultiCompute:PowerpackWidgetDistributionDefinitionRequestApmQueryMultiCompute"
                    },
                    "description": "`compute_query` or `multi_compute` is required. Multiple `multi_compute` blocks are allowed using the structure below.\n"
                },
                "searchQuery": {
                    "type": "string",
                    "description": "The search query to use.\n"
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/PowerpackWidgetDistributionDefinitionRequestApmQueryComputeQuery:PowerpackWidgetDistributionDefinitionRequestApmQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "The aggregation method.\n"
                },
                "facet": {
                    "type": "string",
                    "description": "The facet name.\n"
                },
                "interval": {
                    "type": "integer",
                    "description": "Define the time interval in seconds.\n"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/PowerpackWidgetDistributionDefinitionRequestApmQueryGroupBy:PowerpackWidgetDistributionDefinitionRequestApmQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "description": "The facet name.\n"
                },
                "limit": {
                    "type": "integer",
                    "description": "The maximum number of items in the group.\n"
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetDistributionDefinitionRequestApmQueryGroupBySortQuery:PowerpackWidgetDistributionDefinitionRequestApmQueryGroupBySortQuery",
                    "description": "A list of exactly one element describing the sort query to use.\n"
                }
            },
            "type": "object"
        },
        "datadog:index/PowerpackWidgetDistributionDefinitionRequestApmQueryGroupBySortQuery:PowerpackWidgetDistributionDefinitionRequestApmQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "The aggregation method.\n"
                },
                "facet": {
                    "type": "string",
                    "description": "The facet name.\n"
                },
                "order": {
                    "type": "string",
                    "description": "Widget sorting methods. Valid values are `asc`, `desc`.\n"
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/PowerpackWidgetDistributionDefinitionRequestApmQueryMultiCompute:PowerpackWidgetDistributionDefinitionRequestApmQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "The aggregation method.\n"
                },
                "facet": {
                    "type": "string",
                    "description": "The facet name.\n"
                },
                "interval": {
                    "type": "integer",
                    "description": "Define the time interval in seconds.\n"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/PowerpackWidgetDistributionDefinitionRequestApmStatsQuery:PowerpackWidgetDistributionDefinitionRequestApmStatsQuery": {
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/PowerpackWidgetDistributionDefinitionRequestApmStatsQueryColumn:PowerpackWidgetDistributionDefinitionRequestApmStatsQueryColumn"
                    },
                    "description": "Column properties used by the front end for display.\n"
                },
                "env": {
                    "type": "string",
                    "description": "The environment name.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The operation name associated with the service.\n"
                },
                "primaryTag": {
                    "type": "string",
                    "description": "The organization's host group name and value.\n"
                },
                "resource": {
                    "type": "string",
                    "description": "The resource name.\n"
                },
                "rowType": {
                    "type": "string",
                    "description": "The level of detail for the request. Valid values are `service`, `resource`, `span`.\n"
                },
                "service": {
                    "type": "string",
                    "description": "The service name.\n"
                }
            },
            "type": "object",
            "required": [
                "env",
                "name",
                "primaryTag",
                "rowType",
                "service"
            ]
        },
        "datadog:index/PowerpackWidgetDistributionDefinitionRequestApmStatsQueryColumn:PowerpackWidgetDistributionDefinitionRequestApmStatsQueryColumn": {
            "properties": {
                "alias": {
                    "type": "string",
                    "description": "A user-assigned alias for the column.\n"
                },
                "cellDisplayMode": {
                    "type": "string",
                    "description": "A list of display modes for each table cell. Valid values are `number`, `bar`.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The column name.\n"
                },
                "order": {
                    "type": "string",
                    "description": "Widget sorting methods. Valid values are `asc`, `desc`.\n"
                }
            },
            "type": "object",
            "required": [
                "name"
            ]
        },
        "datadog:index/PowerpackWidgetDistributionDefinitionRequestLogQuery:PowerpackWidgetDistributionDefinitionRequestLogQuery": {
            "properties": {
                "computeQuery": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetDistributionDefinitionRequestLogQueryComputeQuery:PowerpackWidgetDistributionDefinitionRequestLogQueryComputeQuery",
                    "description": "`compute_query` or `multi_compute` is required. The map keys are listed below.\n"
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/PowerpackWidgetDistributionDefinitionRequestLogQueryGroupBy:PowerpackWidgetDistributionDefinitionRequestLogQueryGroupBy"
                    },
                    "description": "Multiple `group_by` blocks are allowed using the structure below.\n"
                },
                "index": {
                    "type": "string",
                    "description": "The name of the index to query.\n"
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/PowerpackWidgetDistributionDefinitionRequestLogQueryMultiCompute:PowerpackWidgetDistributionDefinitionRequestLogQueryMultiCompute"
                    },
                    "description": "`compute_query` or `multi_compute` is required. Multiple `multi_compute` blocks are allowed using the structure below.\n"
                },
                "searchQuery": {
                    "type": "string",
                    "description": "The search query to use.\n"
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/PowerpackWidgetDistributionDefinitionRequestLogQueryComputeQuery:PowerpackWidgetDistributionDefinitionRequestLogQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "The aggregation method.\n"
                },
                "facet": {
                    "type": "string",
                    "description": "The facet name.\n"
                },
                "interval": {
                    "type": "integer",
                    "description": "Define the time interval in seconds.\n"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/PowerpackWidgetDistributionDefinitionRequestLogQueryGroupBy:PowerpackWidgetDistributionDefinitionRequestLogQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "description": "The facet name.\n"
                },
                "limit": {
                    "type": "integer",
                    "description": "The maximum number of items in the group.\n"
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetDistributionDefinitionRequestLogQueryGroupBySortQuery:PowerpackWidgetDistributionDefinitionRequestLogQueryGroupBySortQuery",
                    "description": "A list of exactly one element describing the sort query to use.\n"
                }
            },
            "type": "object"
        },
        "datadog:index/PowerpackWidgetDistributionDefinitionRequestLogQueryGroupBySortQuery:PowerpackWidgetDistributionDefinitionRequestLogQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "The aggregation method.\n"
                },
                "facet": {
                    "type": "string",
                    "description": "The facet name.\n"
                },
                "order": {
                    "type": "string",
                    "description": "Widget sorting methods. Valid values are `asc`, `desc`.\n"
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/PowerpackWidgetDistributionDefinitionRequestLogQueryMultiCompute:PowerpackWidgetDistributionDefinitionRequestLogQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "The aggregation method.\n"
                },
                "facet": {
                    "type": "string",
                    "description": "The facet name.\n"
                },
                "interval": {
                    "type": "integer",
                    "description": "Define the time interval in seconds.\n"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/PowerpackWidgetDistributionDefinitionRequestProcessQuery:PowerpackWidgetDistributionDefinitionRequestProcessQuery": {
            "properties": {
                "filterBies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of processes.\n"
                },
                "limit": {
                    "type": "integer",
                    "description": "The max number of items in the filter list.\n"
                },
                "metric": {
                    "type": "string",
                    "description": "Your chosen metric.\n"
                },
                "searchBy": {
                    "type": "string",
                    "description": "Your chosen search term.\n"
                }
            },
            "type": "object",
            "required": [
                "metric"
            ]
        },
        "datadog:index/PowerpackWidgetDistributionDefinitionRequestRumQuery:PowerpackWidgetDistributionDefinitionRequestRumQuery": {
            "properties": {
                "computeQuery": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetDistributionDefinitionRequestRumQueryComputeQuery:PowerpackWidgetDistributionDefinitionRequestRumQueryComputeQuery",
                    "description": "`compute_query` or `multi_compute` is required. The map keys are listed below.\n"
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/PowerpackWidgetDistributionDefinitionRequestRumQueryGroupBy:PowerpackWidgetDistributionDefinitionRequestRumQueryGroupBy"
                    },
                    "description": "Multiple `group_by` blocks are allowed using the structure below.\n"
                },
                "index": {
                    "type": "string",
                    "description": "The name of the index to query.\n"
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/PowerpackWidgetDistributionDefinitionRequestRumQueryMultiCompute:PowerpackWidgetDistributionDefinitionRequestRumQueryMultiCompute"
                    },
                    "description": "`compute_query` or `multi_compute` is required. Multiple `multi_compute` blocks are allowed using the structure below.\n"
                },
                "searchQuery": {
                    "type": "string",
                    "description": "The search query to use.\n"
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/PowerpackWidgetDistributionDefinitionRequestRumQueryComputeQuery:PowerpackWidgetDistributionDefinitionRequestRumQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "The aggregation method.\n"
                },
                "facet": {
                    "type": "string",
                    "description": "The facet name.\n"
                },
                "interval": {
                    "type": "integer",
                    "description": "Define the time interval in seconds.\n"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/PowerpackWidgetDistributionDefinitionRequestRumQueryGroupBy:PowerpackWidgetDistributionDefinitionRequestRumQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "description": "The facet name.\n"
                },
                "limit": {
                    "type": "integer",
                    "description": "The maximum number of items in the group.\n"
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetDistributionDefinitionRequestRumQueryGroupBySortQuery:PowerpackWidgetDistributionDefinitionRequestRumQueryGroupBySortQuery",
                    "description": "A list of exactly one element describing the sort query to use.\n"
                }
            },
            "type": "object"
        },
        "datadog:index/PowerpackWidgetDistributionDefinitionRequestRumQueryGroupBySortQuery:PowerpackWidgetDistributionDefinitionRequestRumQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "The aggregation method.\n"
                },
                "facet": {
                    "type": "string",
                    "description": "The facet name.\n"
                },
                "order": {
                    "type": "string",
                    "description": "Widget sorting methods. Valid values are `asc`, `desc`.\n"
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/PowerpackWidgetDistributionDefinitionRequestRumQueryMultiCompute:PowerpackWidgetDistributionDefinitionRequestRumQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "The aggregation method.\n"
                },
                "facet": {
                    "type": "string",
                    "description": "The facet name.\n"
                },
                "interval": {
                    "type": "integer",
                    "description": "Define the time interval in seconds.\n"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/PowerpackWidgetDistributionDefinitionRequestSecurityQuery:PowerpackWidgetDistributionDefinitionRequestSecurityQuery": {
            "properties": {
                "computeQuery": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetDistributionDefinitionRequestSecurityQueryComputeQuery:PowerpackWidgetDistributionDefinitionRequestSecurityQueryComputeQuery",
                    "description": "`compute_query` or `multi_compute` is required. The map keys are listed below.\n"
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/PowerpackWidgetDistributionDefinitionRequestSecurityQueryGroupBy:PowerpackWidgetDistributionDefinitionRequestSecurityQueryGroupBy"
                    },
                    "description": "Multiple `group_by` blocks are allowed using the structure below.\n"
                },
                "index": {
                    "type": "string",
                    "description": "The name of the index to query.\n"
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/PowerpackWidgetDistributionDefinitionRequestSecurityQueryMultiCompute:PowerpackWidgetDistributionDefinitionRequestSecurityQueryMultiCompute"
                    },
                    "description": "`compute_query` or `multi_compute` is required. Multiple `multi_compute` blocks are allowed using the structure below.\n"
                },
                "searchQuery": {
                    "type": "string",
                    "description": "The search query to use.\n"
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/PowerpackWidgetDistributionDefinitionRequestSecurityQueryComputeQuery:PowerpackWidgetDistributionDefinitionRequestSecurityQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "The aggregation method.\n"
                },
                "facet": {
                    "type": "string",
                    "description": "The facet name.\n"
                },
                "interval": {
                    "type": "integer",
                    "description": "Define the time interval in seconds.\n"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/PowerpackWidgetDistributionDefinitionRequestSecurityQueryGroupBy:PowerpackWidgetDistributionDefinitionRequestSecurityQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "description": "The facet name.\n"
                },
                "limit": {
                    "type": "integer",
                    "description": "The maximum number of items in the group.\n"
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetDistributionDefinitionRequestSecurityQueryGroupBySortQuery:PowerpackWidgetDistributionDefinitionRequestSecurityQueryGroupBySortQuery",
                    "description": "A list of exactly one element describing the sort query to use.\n"
                }
            },
            "type": "object"
        },
        "datadog:index/PowerpackWidgetDistributionDefinitionRequestSecurityQueryGroupBySortQuery:PowerpackWidgetDistributionDefinitionRequestSecurityQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "The aggregation method.\n"
                },
                "facet": {
                    "type": "string",
                    "description": "The facet name.\n"
                },
                "order": {
                    "type": "string",
                    "description": "Widget sorting methods. Valid values are `asc`, `desc`.\n"
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/PowerpackWidgetDistributionDefinitionRequestSecurityQueryMultiCompute:PowerpackWidgetDistributionDefinitionRequestSecurityQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "The aggregation method.\n"
                },
                "facet": {
                    "type": "string",
                    "description": "The facet name.\n"
                },
                "interval": {
                    "type": "integer",
                    "description": "Define the time interval in seconds.\n"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/PowerpackWidgetDistributionDefinitionRequestStyle:PowerpackWidgetDistributionDefinitionRequestStyle": {
            "properties": {
                "palette": {
                    "type": "string",
                    "description": "A color palette to apply to the widget. The available options are available at: https://docs.datadoghq.com/dashboards/widgets/timeseries/#appearance.\n"
                }
            },
            "type": "object"
        },
        "datadog:index/PowerpackWidgetEventStreamDefinition:PowerpackWidgetEventStreamDefinition": {
            "properties": {
                "eventSize": {
                    "type": "string",
                    "description": "The size to use to display an event. Valid values are `s`, `l`.\n"
                },
                "liveSpan": {
                    "type": "string",
                    "description": "The timeframe to use when displaying the widget. Valid values are `1m`, `5m`, `10m`, `15m`, `30m`, `1h`, `4h`, `1d`, `2d`, `1w`, `1mo`, `3mo`, `6mo`, `week_to_date`, `month_to_date`, `1y`, `alert`.\n"
                },
                "query": {
                    "type": "string",
                    "description": "The query to use in the widget.\n"
                },
                "tagsExecution": {
                    "type": "string",
                    "description": "The execution method for multi-value filters, options: `and` or `or`.\n"
                },
                "title": {
                    "type": "string",
                    "description": "The title of the widget.\n"
                },
                "titleAlign": {
                    "type": "string",
                    "description": "The alignment of the widget's title. Valid values are `center`, `left`, `right`.\n"
                },
                "titleSize": {
                    "type": "string",
                    "description": "The size of the widget's title (defaults to 16).\n"
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/PowerpackWidgetEventTimelineDefinition:PowerpackWidgetEventTimelineDefinition": {
            "properties": {
                "liveSpan": {
                    "type": "string",
                    "description": "The timeframe to use when displaying the widget. Valid values are `1m`, `5m`, `10m`, `15m`, `30m`, `1h`, `4h`, `1d`, `2d`, `1w`, `1mo`, `3mo`, `6mo`, `week_to_date`, `month_to_date`, `1y`, `alert`.\n"
                },
                "query": {
                    "type": "string",
                    "description": "The query to use in the widget.\n"
                },
                "tagsExecution": {
                    "type": "string",
                    "description": "The execution method for multi-value filters, options: `and` or `or`.\n"
                },
                "title": {
                    "type": "string",
                    "description": "The title of the widget.\n"
                },
                "titleAlign": {
                    "type": "string",
                    "description": "The alignment of the widget's title. Valid values are `center`, `left`, `right`.\n"
                },
                "titleSize": {
                    "type": "string",
                    "description": "The size of the widget's title (defaults to 16).\n"
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/PowerpackWidgetFreeTextDefinition:PowerpackWidgetFreeTextDefinition": {
            "properties": {
                "color": {
                    "type": "string",
                    "description": "The color of the text in the widget.\n"
                },
                "fontSize": {
                    "type": "string",
                    "description": "The size of the text in the widget.\n"
                },
                "text": {
                    "type": "string",
                    "description": "The text to display in the widget.\n"
                },
                "textAlign": {
                    "type": "string",
                    "description": "The alignment of the text in the widget. Valid values are `center`, `left`, `right`.\n"
                }
            },
            "type": "object",
            "required": [
                "text"
            ]
        },
        "datadog:index/PowerpackWidgetGeomapDefinition:PowerpackWidgetGeomapDefinition": {
            "properties": {
                "customLinks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/PowerpackWidgetGeomapDefinitionCustomLink:PowerpackWidgetGeomapDefinitionCustomLink"
                    },
                    "description": "A nested block describing a custom link. Multiple `custom_link` blocks are allowed using the structure below.\n"
                },
                "liveSpan": {
                    "type": "string",
                    "description": "The timeframe to use when displaying the widget. Valid values are `1m`, `5m`, `10m`, `15m`, `30m`, `1h`, `4h`, `1d`, `2d`, `1w`, `1mo`, `3mo`, `6mo`, `week_to_date`, `month_to_date`, `1y`, `alert`.\n"
                },
                "requests": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/PowerpackWidgetGeomapDefinitionRequest:PowerpackWidgetGeomapDefinitionRequest"
                    },
                    "description": "A nested block describing the request to use when displaying the widget. Multiple `request` blocks are allowed using the structure below (exactly one of `q`, `log_query` or `rum_query` is required within the `request` block).\n"
                },
                "style": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetGeomapDefinitionStyle:PowerpackWidgetGeomapDefinitionStyle",
                    "description": "The style of the widget graph. One nested block is allowed using the structure below.\n"
                },
                "title": {
                    "type": "string",
                    "description": "The title of the widget.\n"
                },
                "titleAlign": {
                    "type": "string",
                    "description": "The alignment of the widget's title. Valid values are `center`, `left`, `right`.\n"
                },
                "titleSize": {
                    "type": "string",
                    "description": "The size of the widget's title (defaults to 16).\n"
                },
                "view": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetGeomapDefinitionView:PowerpackWidgetGeomapDefinitionView",
                    "description": "The view of the world that the map should render.\n"
                }
            },
            "type": "object",
            "required": [
                "view"
            ]
        },
        "datadog:index/PowerpackWidgetGeomapDefinitionCustomLink:PowerpackWidgetGeomapDefinitionCustomLink": {
            "properties": {
                "isHidden": {
                    "type": "boolean",
                    "description": "The flag for toggling context menu link visibility.\n"
                },
                "label": {
                    "type": "string",
                    "description": "The label for the custom link URL.\n"
                },
                "link": {
                    "type": "string",
                    "description": "The URL of the custom link.\n"
                },
                "overrideLabel": {
                    "type": "string",
                    "description": "The label ID that refers to a context menu link item. When `override_label` is provided, the client request omits the label field.\n"
                }
            },
            "type": "object"
        },
        "datadog:index/PowerpackWidgetGeomapDefinitionRequest:PowerpackWidgetGeomapDefinitionRequest": {
            "properties": {
                "formulas": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/PowerpackWidgetGeomapDefinitionRequestFormula:PowerpackWidgetGeomapDefinitionRequestFormula"
                    }
                },
                "logQuery": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetGeomapDefinitionRequestLogQuery:PowerpackWidgetGeomapDefinitionRequestLogQuery",
                    "description": "The query to use for this widget.\n"
                },
                "q": {
                    "type": "string",
                    "description": "The metric query to use for this widget.\n"
                },
                "queries": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/PowerpackWidgetGeomapDefinitionRequestQuery:PowerpackWidgetGeomapDefinitionRequestQuery"
                    }
                },
                "rumQuery": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetGeomapDefinitionRequestRumQuery:PowerpackWidgetGeomapDefinitionRequestRumQuery",
                    "description": "The query to use for this widget.\n"
                }
            },
            "type": "object"
        },
        "datadog:index/PowerpackWidgetGeomapDefinitionRequestFormula:PowerpackWidgetGeomapDefinitionRequestFormula": {
            "properties": {
                "alias": {
                    "type": "string",
                    "description": "An expression alias.\n"
                },
                "cellDisplayMode": {
                    "type": "string",
                    "description": "A list of display modes for each table cell. Valid values are `number`, `bar`.\n"
                },
                "conditionalFormats": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/PowerpackWidgetGeomapDefinitionRequestFormulaConditionalFormat:PowerpackWidgetGeomapDefinitionRequestFormulaConditionalFormat"
                    },
                    "description": "Conditional formats allow you to set the color of your widget content or background depending on the rule applied to your data. Multiple `conditional_formats` blocks are allowed using the structure below.\n"
                },
                "formulaExpression": {
                    "type": "string",
                    "description": "A string expression built from queries, formulas, and functions.\n"
                },
                "limit": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetGeomapDefinitionRequestFormulaLimit:PowerpackWidgetGeomapDefinitionRequestFormulaLimit",
                    "description": "The options for limiting results returned.\n"
                },
                "style": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetGeomapDefinitionRequestFormulaStyle:PowerpackWidgetGeomapDefinitionRequestFormulaStyle",
                    "description": "Styling options for widget formulas.\n"
                }
            },
            "type": "object",
            "required": [
                "formulaExpression"
            ]
        },
        "datadog:index/PowerpackWidgetGeomapDefinitionRequestFormulaConditionalFormat:PowerpackWidgetGeomapDefinitionRequestFormulaConditionalFormat": {
            "properties": {
                "comparator": {
                    "type": "string",
                    "description": "The comparator to use. Valid values are `=`, `\u003e`, `\u003e=`, `\u003c`, `\u003c=`.\n"
                },
                "customBgColor": {
                    "type": "string",
                    "description": "The color palette to apply to the background, same values available as palette.\n"
                },
                "customFgColor": {
                    "type": "string",
                    "description": "The color palette to apply to the foreground, same values available as palette.\n"
                },
                "hideValue": {
                    "type": "boolean",
                    "description": "Setting this to True hides values.\n"
                },
                "imageUrl": {
                    "type": "string",
                    "description": "Displays an image as the background.\n"
                },
                "metric": {
                    "type": "string",
                    "description": "The metric from the request to correlate with this conditional format.\n"
                },
                "palette": {
                    "type": "string",
                    "description": "The color palette to apply. Valid values are `blue`, `custom_bg`, `custom_image`, `custom_text`, `gray_on_white`, `grey`, `green`, `orange`, `red`, `red_on_white`, `white_on_gray`, `white_on_green`, `green_on_white`, `white_on_red`, `white_on_yellow`, `yellow_on_white`, `black_on_light_yellow`, `black_on_light_green`, `black_on_light_red`.\n"
                },
                "timeframe": {
                    "type": "string",
                    "description": "Defines the displayed timeframe.\n"
                },
                "value": {
                    "type": "number",
                    "description": "A value for the comparator.\n"
                }
            },
            "type": "object",
            "required": [
                "comparator",
                "palette",
                "value"
            ]
        },
        "datadog:index/PowerpackWidgetGeomapDefinitionRequestFormulaLimit:PowerpackWidgetGeomapDefinitionRequestFormulaLimit": {
            "properties": {
                "count": {
                    "type": "integer",
                    "description": "The number of results to return.\n"
                },
                "order": {
                    "type": "string",
                    "description": "The direction of the sort. Valid values are `asc`, `desc`. Defaults to `\"desc\"`.\n"
                }
            },
            "type": "object"
        },
        "datadog:index/PowerpackWidgetGeomapDefinitionRequestFormulaStyle:PowerpackWidgetGeomapDefinitionRequestFormulaStyle": {
            "properties": {
                "palette": {
                    "type": "string",
                    "description": "The color palette used to display the formula. A guide to the available color palettes can be found at https://docs.datadoghq.com/dashboards/guide/widget_colors.\n"
                },
                "paletteIndex": {
                    "type": "integer",
                    "description": "Index specifying which color to use within the palette.\n"
                }
            },
            "type": "object"
        },
        "datadog:index/PowerpackWidgetGeomapDefinitionRequestLogQuery:PowerpackWidgetGeomapDefinitionRequestLogQuery": {
            "properties": {
                "computeQuery": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetGeomapDefinitionRequestLogQueryComputeQuery:PowerpackWidgetGeomapDefinitionRequestLogQueryComputeQuery",
                    "description": "`compute_query` or `multi_compute` is required. The map keys are listed below.\n"
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/PowerpackWidgetGeomapDefinitionRequestLogQueryGroupBy:PowerpackWidgetGeomapDefinitionRequestLogQueryGroupBy"
                    },
                    "description": "Multiple `group_by` blocks are allowed using the structure below.\n"
                },
                "index": {
                    "type": "string",
                    "description": "The name of the index to query.\n"
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/PowerpackWidgetGeomapDefinitionRequestLogQueryMultiCompute:PowerpackWidgetGeomapDefinitionRequestLogQueryMultiCompute"
                    },
                    "description": "`compute_query` or `multi_compute` is required. Multiple `multi_compute` blocks are allowed using the structure below.\n"
                },
                "searchQuery": {
                    "type": "string",
                    "description": "The search query to use.\n"
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/PowerpackWidgetGeomapDefinitionRequestLogQueryComputeQuery:PowerpackWidgetGeomapDefinitionRequestLogQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "The aggregation method.\n"
                },
                "facet": {
                    "type": "string",
                    "description": "The facet name.\n"
                },
                "interval": {
                    "type": "integer",
                    "description": "Define the time interval in seconds.\n"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/PowerpackWidgetGeomapDefinitionRequestLogQueryGroupBy:PowerpackWidgetGeomapDefinitionRequestLogQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "description": "The facet name.\n"
                },
                "limit": {
                    "type": "integer",
                    "description": "The maximum number of items in the group.\n"
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetGeomapDefinitionRequestLogQueryGroupBySortQuery:PowerpackWidgetGeomapDefinitionRequestLogQueryGroupBySortQuery",
                    "description": "A list of exactly one element describing the sort query to use.\n"
                }
            },
            "type": "object"
        },
        "datadog:index/PowerpackWidgetGeomapDefinitionRequestLogQueryGroupBySortQuery:PowerpackWidgetGeomapDefinitionRequestLogQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "The aggregation method.\n"
                },
                "facet": {
                    "type": "string",
                    "description": "The facet name.\n"
                },
                "order": {
                    "type": "string",
                    "description": "Widget sorting methods. Valid values are `asc`, `desc`.\n"
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/PowerpackWidgetGeomapDefinitionRequestLogQueryMultiCompute:PowerpackWidgetGeomapDefinitionRequestLogQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "The aggregation method.\n"
                },
                "facet": {
                    "type": "string",
                    "description": "The facet name.\n"
                },
                "interval": {
                    "type": "integer",
                    "description": "Define the time interval in seconds.\n"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/PowerpackWidgetGeomapDefinitionRequestQuery:PowerpackWidgetGeomapDefinitionRequestQuery": {
            "properties": {
                "apmDependencyStatsQuery": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetGeomapDefinitionRequestQueryApmDependencyStatsQuery:PowerpackWidgetGeomapDefinitionRequestQueryApmDependencyStatsQuery",
                    "description": "The APM Dependency Stats query using formulas and functions.\n"
                },
                "apmResourceStatsQuery": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetGeomapDefinitionRequestQueryApmResourceStatsQuery:PowerpackWidgetGeomapDefinitionRequestQueryApmResourceStatsQuery",
                    "description": "The APM Resource Stats query using formulas and functions.\n"
                },
                "cloudCostQuery": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetGeomapDefinitionRequestQueryCloudCostQuery:PowerpackWidgetGeomapDefinitionRequestQueryCloudCostQuery",
                    "description": "The Cloud Cost query using formulas and functions.\n"
                },
                "eventQuery": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetGeomapDefinitionRequestQueryEventQuery:PowerpackWidgetGeomapDefinitionRequestQueryEventQuery",
                    "description": "A timeseries formula and functions events query.\n"
                },
                "metricQuery": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetGeomapDefinitionRequestQueryMetricQuery:PowerpackWidgetGeomapDefinitionRequestQueryMetricQuery",
                    "description": "A timeseries formula and functions metrics query.\n"
                },
                "processQuery": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetGeomapDefinitionRequestQueryProcessQuery:PowerpackWidgetGeomapDefinitionRequestQueryProcessQuery",
                    "description": "The process query using formulas and functions.\n"
                },
                "sloQuery": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetGeomapDefinitionRequestQuerySloQuery:PowerpackWidgetGeomapDefinitionRequestQuerySloQuery",
                    "description": "The SLO query using formulas and functions.\n"
                }
            },
            "type": "object"
        },
        "datadog:index/PowerpackWidgetGeomapDefinitionRequestQueryApmDependencyStatsQuery:PowerpackWidgetGeomapDefinitionRequestQueryApmDependencyStatsQuery": {
            "properties": {
                "crossOrgUuids": {
                    "type": "string",
                    "description": "The source organization UUID for cross organization queries. Feature in Private Beta.\n"
                },
                "dataSource": {
                    "type": "string",
                    "description": "The data source for APM Dependency Stats queries. Valid values are `apm_dependency_stats`.\n"
                },
                "env": {
                    "type": "string",
                    "description": "APM environment.\n"
                },
                "isUpstream": {
                    "type": "boolean",
                    "description": "Determines whether stats for upstream or downstream dependencies should be queried.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of query for use in formulas.\n"
                },
                "operationName": {
                    "type": "string",
                    "description": "Name of operation on service.\n"
                },
                "primaryTagName": {
                    "type": "string",
                    "description": "The name of the second primary tag used within APM; required when `primary_tag_value` is specified. See https://docs.datadoghq.com/tracing/guide/setting*primary*tags*to*scope/#add-a-second-primary-tag-in-datadog.\n"
                },
                "primaryTagValue": {
                    "type": "string",
                    "description": "Filter APM data by the second primary tag. `primary_tag_name` must also be specified.\n"
                },
                "resourceName": {
                    "type": "string",
                    "description": "APM resource.\n"
                },
                "service": {
                    "type": "string",
                    "description": "APM service.\n"
                },
                "stat": {
                    "type": "string",
                    "description": "APM statistic. Valid values are `avg_duration`, `avg_root_duration`, `avg_spans_per_trace`, `error_rate`, `pct_exec_time`, `pct_of_traces`, `total_traces_count`.\n"
                }
            },
            "type": "object",
            "required": [
                "dataSource",
                "env",
                "name",
                "operationName",
                "resourceName",
                "service",
                "stat"
            ]
        },
        "datadog:index/PowerpackWidgetGeomapDefinitionRequestQueryApmResourceStatsQuery:PowerpackWidgetGeomapDefinitionRequestQueryApmResourceStatsQuery": {
            "properties": {
                "crossOrgUuids": {
                    "type": "string",
                    "description": "The source organization UUID for cross organization queries. Feature in Private Beta.\n"
                },
                "dataSource": {
                    "type": "string",
                    "description": "The data source for APM Resource Stats queries. Valid values are `apm_resource_stats`.\n"
                },
                "env": {
                    "type": "string",
                    "description": "APM environment.\n"
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Array of fields to group results by.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of query for use in formulas.\n"
                },
                "operationName": {
                    "type": "string",
                    "description": "Name of operation on service.\n"
                },
                "primaryTagName": {
                    "type": "string",
                    "description": "The name of the second primary tag used within APM; required when `primary_tag_value` is specified. See https://docs.datadoghq.com/tracing/guide/setting*primary*tags*to*scope/#add-a-second-primary-tag-in-datadog.\n"
                },
                "primaryTagValue": {
                    "type": "string",
                    "description": "Filter APM data by the second primary tag. `primary_tag_name` must also be specified.\n"
                },
                "resourceName": {
                    "type": "string",
                    "description": "APM resource.\n"
                },
                "service": {
                    "type": "string",
                    "description": "APM service.\n"
                },
                "stat": {
                    "type": "string",
                    "description": "APM statistic. Valid values are `errors`, `error_rate`, `hits`, `latency_avg`, `latency_distribution`, `latency_max`, `latency_p50`, `latency_p75`, `latency_p90`, `latency_p95`, `latency_p99`.\n"
                }
            },
            "type": "object",
            "required": [
                "dataSource",
                "env",
                "name",
                "service",
                "stat"
            ]
        },
        "datadog:index/PowerpackWidgetGeomapDefinitionRequestQueryCloudCostQuery:PowerpackWidgetGeomapDefinitionRequestQueryCloudCostQuery": {
            "properties": {
                "aggregator": {
                    "type": "string",
                    "description": "The aggregation methods available for cloud cost queries. Valid values are `avg`, `last`, `max`, `min`, `sum`, `percentile`.\n"
                },
                "crossOrgUuids": {
                    "type": "string",
                    "description": "The source organization UUID for cross organization queries. Feature in Private Beta.\n"
                },
                "dataSource": {
                    "type": "string",
                    "description": "The data source for cloud cost queries. Valid values are `cloud_cost`.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the query for use in formulas.\n"
                },
                "query": {
                    "type": "string",
                    "description": "The cloud cost query definition.\n"
                }
            },
            "type": "object",
            "required": [
                "dataSource",
                "name",
                "query"
            ]
        },
        "datadog:index/PowerpackWidgetGeomapDefinitionRequestQueryEventQuery:PowerpackWidgetGeomapDefinitionRequestQueryEventQuery": {
            "properties": {
                "computes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/PowerpackWidgetGeomapDefinitionRequestQueryEventQueryCompute:PowerpackWidgetGeomapDefinitionRequestQueryEventQueryCompute"
                    },
                    "description": "The compute options.\n"
                },
                "crossOrgUuids": {
                    "type": "string",
                    "description": "The source organization UUID for cross organization queries. Feature in Private Beta.\n"
                },
                "dataSource": {
                    "type": "string",
                    "description": "The data source for event platform-based queries. Valid values are `logs`, `spans`, `network`, `rum`, `security_signals`, `profiles`, `audit`, `events`, `ci_tests`, `ci_pipelines`, `incident_analytics`.\n"
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/PowerpackWidgetGeomapDefinitionRequestQueryEventQueryGroupBy:PowerpackWidgetGeomapDefinitionRequestQueryEventQueryGroupBy"
                    },
                    "description": "Group by options.\n"
                },
                "indexes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "An array of index names to query in the stream.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of query for use in formulas.\n"
                },
                "search": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetGeomapDefinitionRequestQueryEventQuerySearch:PowerpackWidgetGeomapDefinitionRequestQueryEventQuerySearch",
                    "description": "The search options.\n"
                },
                "storage": {
                    "type": "string",
                    "description": "Storage location (private beta).\n"
                }
            },
            "type": "object",
            "required": [
                "computes",
                "dataSource",
                "name"
            ]
        },
        "datadog:index/PowerpackWidgetGeomapDefinitionRequestQueryEventQueryCompute:PowerpackWidgetGeomapDefinitionRequestQueryEventQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "The aggregation methods for event platform queries. Valid values are `count`, `cardinality`, `median`, `pc75`, `pc90`, `pc95`, `pc98`, `pc99`, `sum`, `min`, `max`, `avg`.\n"
                },
                "interval": {
                    "type": "integer",
                    "description": "A time interval in milliseconds.\n"
                },
                "metric": {
                    "type": "string",
                    "description": "The measurable attribute to compute.\n"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/PowerpackWidgetGeomapDefinitionRequestQueryEventQueryGroupBy:PowerpackWidgetGeomapDefinitionRequestQueryEventQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "description": "The event facet.\n"
                },
                "limit": {
                    "type": "integer",
                    "description": "The number of groups to return.\n"
                },
                "sort": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetGeomapDefinitionRequestQueryEventQueryGroupBySort:PowerpackWidgetGeomapDefinitionRequestQueryEventQueryGroupBySort",
                    "description": "The options for sorting group by results.\n"
                }
            },
            "type": "object",
            "required": [
                "facet"
            ]
        },
        "datadog:index/PowerpackWidgetGeomapDefinitionRequestQueryEventQueryGroupBySort:PowerpackWidgetGeomapDefinitionRequestQueryEventQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "The aggregation methods for the event platform queries. Valid values are `count`, `cardinality`, `median`, `pc75`, `pc90`, `pc95`, `pc98`, `pc99`, `sum`, `min`, `max`, `avg`.\n"
                },
                "metric": {
                    "type": "string",
                    "description": "The metric used for sorting group by results.\n"
                },
                "order": {
                    "type": "string",
                    "description": "Direction of sort. Valid values are `asc`, `desc`.\n"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/PowerpackWidgetGeomapDefinitionRequestQueryEventQuerySearch:PowerpackWidgetGeomapDefinitionRequestQueryEventQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "description": "The events search string.\n"
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/PowerpackWidgetGeomapDefinitionRequestQueryMetricQuery:PowerpackWidgetGeomapDefinitionRequestQueryMetricQuery": {
            "properties": {
                "aggregator": {
                    "type": "string",
                    "description": "The aggregation methods available for metrics queries. Valid values are `avg`, `min`, `max`, `sum`, `last`, `area`, `l2norm`, `percentile`.\n"
                },
                "crossOrgUuids": {
                    "type": "string",
                    "description": "The source organization UUID for cross organization queries. Feature in Private Beta.\n"
                },
                "dataSource": {
                    "type": "string",
                    "description": "The data source for metrics queries. Defaults to `\"metrics\"`.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the query for use in formulas.\n"
                },
                "query": {
                    "type": "string",
                    "description": "The metrics query definition.\n"
                }
            },
            "type": "object",
            "required": [
                "name",
                "query"
            ]
        },
        "datadog:index/PowerpackWidgetGeomapDefinitionRequestQueryProcessQuery:PowerpackWidgetGeomapDefinitionRequestQueryProcessQuery": {
            "properties": {
                "aggregator": {
                    "type": "string",
                    "description": "The aggregation methods available for metrics queries. Valid values are `avg`, `min`, `max`, `sum`, `last`, `area`, `l2norm`, `percentile`.\n"
                },
                "crossOrgUuids": {
                    "type": "string",
                    "description": "The source organization UUID for cross organization queries. Feature in Private Beta.\n"
                },
                "dataSource": {
                    "type": "string",
                    "description": "The data source for process queries. Valid values are `process`, `container`.\n"
                },
                "isNormalizedCpu": {
                    "type": "boolean",
                    "description": "Whether to normalize the CPU percentages.\n"
                },
                "limit": {
                    "type": "integer",
                    "description": "The number of hits to return.\n"
                },
                "metric": {
                    "type": "string",
                    "description": "The process metric name.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of query for use in formulas.\n"
                },
                "sort": {
                    "type": "string",
                    "description": "The direction of the sort. Valid values are `asc`, `desc`. Defaults to `\"desc\"`.\n"
                },
                "tagFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "An array of tags to filter by.\n"
                },
                "textFilter": {
                    "type": "string",
                    "description": "The text to use as a filter.\n"
                }
            },
            "type": "object",
            "required": [
                "dataSource",
                "metric",
                "name"
            ]
        },
        "datadog:index/PowerpackWidgetGeomapDefinitionRequestQuerySloQuery:PowerpackWidgetGeomapDefinitionRequestQuerySloQuery": {
            "properties": {
                "additionalQueryFilters": {
                    "type": "string",
                    "description": "Additional filters applied to the SLO query.\n"
                },
                "crossOrgUuids": {
                    "type": "string",
                    "description": "The source organization UUID for cross organization queries. Feature in Private Beta.\n"
                },
                "dataSource": {
                    "type": "string",
                    "description": "The data source for SLO queries. Valid values are `slo`.\n"
                },
                "groupMode": {
                    "type": "string",
                    "description": "Group mode to query measures. Valid values are `overall`, `components`. Defaults to `\"overall\"`.\n"
                },
                "measure": {
                    "type": "string",
                    "description": "SLO measures queries. Valid values are `good_events`, `bad_events`, `slo_status`, `error_budget_remaining`, `burn_rate`, `error_budget_burndown`.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of query for use in formulas.\n"
                },
                "sloId": {
                    "type": "string",
                    "description": "ID of an SLO to query.\n"
                },
                "sloQueryType": {
                    "type": "string",
                    "description": "type of the SLO to query. Valid values are `metric`, `time_slice`. Defaults to `\"metric\"`.\n"
                }
            },
            "type": "object",
            "required": [
                "dataSource",
                "measure",
                "sloId"
            ]
        },
        "datadog:index/PowerpackWidgetGeomapDefinitionRequestRumQuery:PowerpackWidgetGeomapDefinitionRequestRumQuery": {
            "properties": {
                "computeQuery": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetGeomapDefinitionRequestRumQueryComputeQuery:PowerpackWidgetGeomapDefinitionRequestRumQueryComputeQuery",
                    "description": "`compute_query` or `multi_compute` is required. The map keys are listed below.\n"
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/PowerpackWidgetGeomapDefinitionRequestRumQueryGroupBy:PowerpackWidgetGeomapDefinitionRequestRumQueryGroupBy"
                    },
                    "description": "Multiple `group_by` blocks are allowed using the structure below.\n"
                },
                "index": {
                    "type": "string",
                    "description": "The name of the index to query.\n"
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/PowerpackWidgetGeomapDefinitionRequestRumQueryMultiCompute:PowerpackWidgetGeomapDefinitionRequestRumQueryMultiCompute"
                    },
                    "description": "`compute_query` or `multi_compute` is required. Multiple `multi_compute` blocks are allowed using the structure below.\n"
                },
                "searchQuery": {
                    "type": "string",
                    "description": "The search query to use.\n"
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/PowerpackWidgetGeomapDefinitionRequestRumQueryComputeQuery:PowerpackWidgetGeomapDefinitionRequestRumQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "The aggregation method.\n"
                },
                "facet": {
                    "type": "string",
                    "description": "The facet name.\n"
                },
                "interval": {
                    "type": "integer",
                    "description": "Define the time interval in seconds.\n"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/PowerpackWidgetGeomapDefinitionRequestRumQueryGroupBy:PowerpackWidgetGeomapDefinitionRequestRumQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "description": "The facet name.\n"
                },
                "limit": {
                    "type": "integer",
                    "description": "The maximum number of items in the group.\n"
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetGeomapDefinitionRequestRumQueryGroupBySortQuery:PowerpackWidgetGeomapDefinitionRequestRumQueryGroupBySortQuery",
                    "description": "A list of exactly one element describing the sort query to use.\n"
                }
            },
            "type": "object"
        },
        "datadog:index/PowerpackWidgetGeomapDefinitionRequestRumQueryGroupBySortQuery:PowerpackWidgetGeomapDefinitionRequestRumQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "The aggregation method.\n"
                },
                "facet": {
                    "type": "string",
                    "description": "The facet name.\n"
                },
                "order": {
                    "type": "string",
                    "description": "Widget sorting methods. Valid values are `asc`, `desc`.\n"
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/PowerpackWidgetGeomapDefinitionRequestRumQueryMultiCompute:PowerpackWidgetGeomapDefinitionRequestRumQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "The aggregation method.\n"
                },
                "facet": {
                    "type": "string",
                    "description": "The facet name.\n"
                },
                "interval": {
                    "type": "integer",
                    "description": "Define the time interval in seconds.\n"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/PowerpackWidgetGeomapDefinitionStyle:PowerpackWidgetGeomapDefinitionStyle": {
            "properties": {
                "palette": {
                    "type": "string",
                    "description": "The color palette to apply to the widget.\n"
                },
                "paletteFlip": {
                    "type": "boolean",
                    "description": "A Boolean indicating whether to flip the palette tones.\n"
                }
            },
            "type": "object",
            "required": [
                "palette",
                "paletteFlip"
            ]
        },
        "datadog:index/PowerpackWidgetGeomapDefinitionView:PowerpackWidgetGeomapDefinitionView": {
            "properties": {
                "focus": {
                    "type": "string",
                    "description": "The two-letter ISO code of a country to focus the map on (or `WORLD`).\n"
                }
            },
            "type": "object",
            "required": [
                "focus"
            ]
        },
        "datadog:index/PowerpackWidgetHeatmapDefinition:PowerpackWidgetHeatmapDefinition": {
            "properties": {
                "customLinks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/PowerpackWidgetHeatmapDefinitionCustomLink:PowerpackWidgetHeatmapDefinitionCustomLink"
                    },
                    "description": "A nested block describing a custom link. Multiple `custom_link` blocks are allowed using the structure below.\n"
                },
                "events": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/PowerpackWidgetHeatmapDefinitionEvent:PowerpackWidgetHeatmapDefinitionEvent"
                    },
                    "description": "The definition of the event to overlay on the graph. Multiple `event` blocks are allowed using the structure below.\n"
                },
                "legendSize": {
                    "type": "string",
                    "description": "The size of the legend displayed in the widget.\n"
                },
                "liveSpan": {
                    "type": "string",
                    "description": "The timeframe to use when displaying the widget. Valid values are `1m`, `5m`, `10m`, `15m`, `30m`, `1h`, `4h`, `1d`, `2d`, `1w`, `1mo`, `3mo`, `6mo`, `week_to_date`, `month_to_date`, `1y`, `alert`.\n"
                },
                "requests": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/PowerpackWidgetHeatmapDefinitionRequest:PowerpackWidgetHeatmapDefinitionRequest"
                    },
                    "description": "A nested block describing the request to use when displaying the widget. Multiple `request` blocks are allowed using the structure below (exactly one of `q`, `apm_query`, `log_query`, `rum_query`, `security_query` or `process_query` is required within the request block).\n"
                },
                "showLegend": {
                    "type": "boolean",
                    "description": "Whether or not to show the legend on this widget.\n"
                },
                "title": {
                    "type": "string",
                    "description": "The title of the widget.\n"
                },
                "titleAlign": {
                    "type": "string",
                    "description": "The alignment of the widget's title. Valid values are `center`, `left`, `right`.\n"
                },
                "titleSize": {
                    "type": "string",
                    "description": "The size of the widget's title (defaults to 16).\n"
                },
                "yaxis": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetHeatmapDefinitionYaxis:PowerpackWidgetHeatmapDefinitionYaxis",
                    "description": "A nested block describing the Y-Axis Controls. The structure of this block is described below.\n"
                }
            },
            "type": "object"
        },
        "datadog:index/PowerpackWidgetHeatmapDefinitionCustomLink:PowerpackWidgetHeatmapDefinitionCustomLink": {
            "properties": {
                "isHidden": {
                    "type": "boolean",
                    "description": "The flag for toggling context menu link visibility.\n"
                },
                "label": {
                    "type": "string",
                    "description": "The label for the custom link URL.\n"
                },
                "link": {
                    "type": "string",
                    "description": "The URL of the custom link.\n"
                },
                "overrideLabel": {
                    "type": "string",
                    "description": "The label ID that refers to a context menu link item. When `override_label` is provided, the client request omits the label field.\n"
                }
            },
            "type": "object"
        },
        "datadog:index/PowerpackWidgetHeatmapDefinitionEvent:PowerpackWidgetHeatmapDefinitionEvent": {
            "properties": {
                "q": {
                    "type": "string",
                    "description": "The event query to use in the widget.\n"
                },
                "tagsExecution": {
                    "type": "string",
                    "description": "The execution method for multi-value filters.\n"
                }
            },
            "type": "object",
            "required": [
                "q"
            ]
        },
        "datadog:index/PowerpackWidgetHeatmapDefinitionRequest:PowerpackWidgetHeatmapDefinitionRequest": {
            "properties": {
                "apmQuery": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetHeatmapDefinitionRequestApmQuery:PowerpackWidgetHeatmapDefinitionRequestApmQuery",
                    "description": "The query to use for this widget.\n"
                },
                "formulas": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/PowerpackWidgetHeatmapDefinitionRequestFormula:PowerpackWidgetHeatmapDefinitionRequestFormula"
                    }
                },
                "logQuery": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetHeatmapDefinitionRequestLogQuery:PowerpackWidgetHeatmapDefinitionRequestLogQuery",
                    "description": "The query to use for this widget.\n"
                },
                "processQuery": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetHeatmapDefinitionRequestProcessQuery:PowerpackWidgetHeatmapDefinitionRequestProcessQuery",
                    "description": "The process query to use in the widget. The structure of this block is described below.\n"
                },
                "q": {
                    "type": "string",
                    "description": "The metric query to use for this widget.\n"
                },
                "queries": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/PowerpackWidgetHeatmapDefinitionRequestQuery:PowerpackWidgetHeatmapDefinitionRequestQuery"
                    }
                },
                "rumQuery": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetHeatmapDefinitionRequestRumQuery:PowerpackWidgetHeatmapDefinitionRequestRumQuery",
                    "description": "The query to use for this widget.\n"
                },
                "securityQuery": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetHeatmapDefinitionRequestSecurityQuery:PowerpackWidgetHeatmapDefinitionRequestSecurityQuery",
                    "description": "The query to use for this widget.\n"
                },
                "style": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetHeatmapDefinitionRequestStyle:PowerpackWidgetHeatmapDefinitionRequestStyle",
                    "description": "The style of the widget graph. One nested block is allowed using the structure below.\n"
                }
            },
            "type": "object"
        },
        "datadog:index/PowerpackWidgetHeatmapDefinitionRequestApmQuery:PowerpackWidgetHeatmapDefinitionRequestApmQuery": {
            "properties": {
                "computeQuery": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetHeatmapDefinitionRequestApmQueryComputeQuery:PowerpackWidgetHeatmapDefinitionRequestApmQueryComputeQuery",
                    "description": "`compute_query` or `multi_compute` is required. The map keys are listed below.\n"
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/PowerpackWidgetHeatmapDefinitionRequestApmQueryGroupBy:PowerpackWidgetHeatmapDefinitionRequestApmQueryGroupBy"
                    },
                    "description": "Multiple `group_by` blocks are allowed using the structure below.\n"
                },
                "index": {
                    "type": "string",
                    "description": "The name of the index to query.\n"
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/PowerpackWidgetHeatmapDefinitionRequestApmQueryMultiCompute:PowerpackWidgetHeatmapDefinitionRequestApmQueryMultiCompute"
                    },
                    "description": "`compute_query` or `multi_compute` is required. Multiple `multi_compute` blocks are allowed using the structure below.\n"
                },
                "searchQuery": {
                    "type": "string",
                    "description": "The search query to use.\n"
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/PowerpackWidgetHeatmapDefinitionRequestApmQueryComputeQuery:PowerpackWidgetHeatmapDefinitionRequestApmQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "The aggregation method.\n"
                },
                "facet": {
                    "type": "string",
                    "description": "The facet name.\n"
                },
                "interval": {
                    "type": "integer",
                    "description": "Define the time interval in seconds.\n"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/PowerpackWidgetHeatmapDefinitionRequestApmQueryGroupBy:PowerpackWidgetHeatmapDefinitionRequestApmQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "description": "The facet name.\n"
                },
                "limit": {
                    "type": "integer",
                    "description": "The maximum number of items in the group.\n"
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetHeatmapDefinitionRequestApmQueryGroupBySortQuery:PowerpackWidgetHeatmapDefinitionRequestApmQueryGroupBySortQuery",
                    "description": "A list of exactly one element describing the sort query to use.\n"
                }
            },
            "type": "object"
        },
        "datadog:index/PowerpackWidgetHeatmapDefinitionRequestApmQueryGroupBySortQuery:PowerpackWidgetHeatmapDefinitionRequestApmQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "The aggregation method.\n"
                },
                "facet": {
                    "type": "string",
                    "description": "The facet name.\n"
                },
                "order": {
                    "type": "string",
                    "description": "Widget sorting methods. Valid values are `asc`, `desc`.\n"
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/PowerpackWidgetHeatmapDefinitionRequestApmQueryMultiCompute:PowerpackWidgetHeatmapDefinitionRequestApmQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "The aggregation method.\n"
                },
                "facet": {
                    "type": "string",
                    "description": "The facet name.\n"
                },
                "interval": {
                    "type": "integer",
                    "description": "Define the time interval in seconds.\n"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/PowerpackWidgetHeatmapDefinitionRequestFormula:PowerpackWidgetHeatmapDefinitionRequestFormula": {
            "properties": {
                "alias": {
                    "type": "string",
                    "description": "An expression alias.\n"
                },
                "cellDisplayMode": {
                    "type": "string",
                    "description": "A list of display modes for each table cell. Valid values are `number`, `bar`.\n"
                },
                "conditionalFormats": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/PowerpackWidgetHeatmapDefinitionRequestFormulaConditionalFormat:PowerpackWidgetHeatmapDefinitionRequestFormulaConditionalFormat"
                    },
                    "description": "Conditional formats allow you to set the color of your widget content or background depending on the rule applied to your data. Multiple `conditional_formats` blocks are allowed using the structure below.\n"
                },
                "formulaExpression": {
                    "type": "string",
                    "description": "A string expression built from queries, formulas, and functions.\n"
                },
                "limit": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetHeatmapDefinitionRequestFormulaLimit:PowerpackWidgetHeatmapDefinitionRequestFormulaLimit",
                    "description": "The options for limiting results returned.\n"
                },
                "style": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetHeatmapDefinitionRequestFormulaStyle:PowerpackWidgetHeatmapDefinitionRequestFormulaStyle",
                    "description": "Styling options for widget formulas.\n"
                }
            },
            "type": "object",
            "required": [
                "formulaExpression"
            ]
        },
        "datadog:index/PowerpackWidgetHeatmapDefinitionRequestFormulaConditionalFormat:PowerpackWidgetHeatmapDefinitionRequestFormulaConditionalFormat": {
            "properties": {
                "comparator": {
                    "type": "string",
                    "description": "The comparator to use. Valid values are `=`, `\u003e`, `\u003e=`, `\u003c`, `\u003c=`.\n"
                },
                "customBgColor": {
                    "type": "string",
                    "description": "The color palette to apply to the background, same values available as palette.\n"
                },
                "customFgColor": {
                    "type": "string",
                    "description": "The color palette to apply to the foreground, same values available as palette.\n"
                },
                "hideValue": {
                    "type": "boolean",
                    "description": "Setting this to True hides values.\n"
                },
                "imageUrl": {
                    "type": "string",
                    "description": "Displays an image as the background.\n"
                },
                "metric": {
                    "type": "string",
                    "description": "The metric from the request to correlate with this conditional format.\n"
                },
                "palette": {
                    "type": "string",
                    "description": "The color palette to apply. Valid values are `blue`, `custom_bg`, `custom_image`, `custom_text`, `gray_on_white`, `grey`, `green`, `orange`, `red`, `red_on_white`, `white_on_gray`, `white_on_green`, `green_on_white`, `white_on_red`, `white_on_yellow`, `yellow_on_white`, `black_on_light_yellow`, `black_on_light_green`, `black_on_light_red`.\n"
                },
                "timeframe": {
                    "type": "string",
                    "description": "Defines the displayed timeframe.\n"
                },
                "value": {
                    "type": "number",
                    "description": "A value for the comparator.\n"
                }
            },
            "type": "object",
            "required": [
                "comparator",
                "palette",
                "value"
            ]
        },
        "datadog:index/PowerpackWidgetHeatmapDefinitionRequestFormulaLimit:PowerpackWidgetHeatmapDefinitionRequestFormulaLimit": {
            "properties": {
                "count": {
                    "type": "integer",
                    "description": "The number of results to return.\n"
                },
                "order": {
                    "type": "string",
                    "description": "The direction of the sort. Valid values are `asc`, `desc`. Defaults to `\"desc\"`.\n"
                }
            },
            "type": "object"
        },
        "datadog:index/PowerpackWidgetHeatmapDefinitionRequestFormulaStyle:PowerpackWidgetHeatmapDefinitionRequestFormulaStyle": {
            "properties": {
                "palette": {
                    "type": "string",
                    "description": "The color palette used to display the formula. A guide to the available color palettes can be found at https://docs.datadoghq.com/dashboards/guide/widget_colors.\n"
                },
                "paletteIndex": {
                    "type": "integer",
                    "description": "Index specifying which color to use within the palette.\n"
                }
            },
            "type": "object"
        },
        "datadog:index/PowerpackWidgetHeatmapDefinitionRequestLogQuery:PowerpackWidgetHeatmapDefinitionRequestLogQuery": {
            "properties": {
                "computeQuery": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetHeatmapDefinitionRequestLogQueryComputeQuery:PowerpackWidgetHeatmapDefinitionRequestLogQueryComputeQuery",
                    "description": "`compute_query` or `multi_compute` is required. The map keys are listed below.\n"
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/PowerpackWidgetHeatmapDefinitionRequestLogQueryGroupBy:PowerpackWidgetHeatmapDefinitionRequestLogQueryGroupBy"
                    },
                    "description": "Multiple `group_by` blocks are allowed using the structure below.\n"
                },
                "index": {
                    "type": "string",
                    "description": "The name of the index to query.\n"
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/PowerpackWidgetHeatmapDefinitionRequestLogQueryMultiCompute:PowerpackWidgetHeatmapDefinitionRequestLogQueryMultiCompute"
                    },
                    "description": "`compute_query` or `multi_compute` is required. Multiple `multi_compute` blocks are allowed using the structure below.\n"
                },
                "searchQuery": {
                    "type": "string",
                    "description": "The search query to use.\n"
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/PowerpackWidgetHeatmapDefinitionRequestLogQueryComputeQuery:PowerpackWidgetHeatmapDefinitionRequestLogQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "The aggregation method.\n"
                },
                "facet": {
                    "type": "string",
                    "description": "The facet name.\n"
                },
                "interval": {
                    "type": "integer",
                    "description": "Define the time interval in seconds.\n"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/PowerpackWidgetHeatmapDefinitionRequestLogQueryGroupBy:PowerpackWidgetHeatmapDefinitionRequestLogQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "description": "The facet name.\n"
                },
                "limit": {
                    "type": "integer",
                    "description": "The maximum number of items in the group.\n"
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetHeatmapDefinitionRequestLogQueryGroupBySortQuery:PowerpackWidgetHeatmapDefinitionRequestLogQueryGroupBySortQuery",
                    "description": "A list of exactly one element describing the sort query to use.\n"
                }
            },
            "type": "object"
        },
        "datadog:index/PowerpackWidgetHeatmapDefinitionRequestLogQueryGroupBySortQuery:PowerpackWidgetHeatmapDefinitionRequestLogQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "The aggregation method.\n"
                },
                "facet": {
                    "type": "string",
                    "description": "The facet name.\n"
                },
                "order": {
                    "type": "string",
                    "description": "Widget sorting methods. Valid values are `asc`, `desc`.\n"
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/PowerpackWidgetHeatmapDefinitionRequestLogQueryMultiCompute:PowerpackWidgetHeatmapDefinitionRequestLogQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "The aggregation method.\n"
                },
                "facet": {
                    "type": "string",
                    "description": "The facet name.\n"
                },
                "interval": {
                    "type": "integer",
                    "description": "Define the time interval in seconds.\n"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/PowerpackWidgetHeatmapDefinitionRequestProcessQuery:PowerpackWidgetHeatmapDefinitionRequestProcessQuery": {
            "properties": {
                "filterBies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of processes.\n"
                },
                "limit": {
                    "type": "integer",
                    "description": "The max number of items in the filter list.\n"
                },
                "metric": {
                    "type": "string",
                    "description": "Your chosen metric.\n"
                },
                "searchBy": {
                    "type": "string",
                    "description": "Your chosen search term.\n"
                }
            },
            "type": "object",
            "required": [
                "metric"
            ]
        },
        "datadog:index/PowerpackWidgetHeatmapDefinitionRequestQuery:PowerpackWidgetHeatmapDefinitionRequestQuery": {
            "properties": {
                "apmDependencyStatsQuery": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetHeatmapDefinitionRequestQueryApmDependencyStatsQuery:PowerpackWidgetHeatmapDefinitionRequestQueryApmDependencyStatsQuery",
                    "description": "The APM Dependency Stats query using formulas and functions.\n"
                },
                "apmResourceStatsQuery": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetHeatmapDefinitionRequestQueryApmResourceStatsQuery:PowerpackWidgetHeatmapDefinitionRequestQueryApmResourceStatsQuery",
                    "description": "The APM Resource Stats query using formulas and functions.\n"
                },
                "cloudCostQuery": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetHeatmapDefinitionRequestQueryCloudCostQuery:PowerpackWidgetHeatmapDefinitionRequestQueryCloudCostQuery",
                    "description": "The Cloud Cost query using formulas and functions.\n"
                },
                "eventQuery": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetHeatmapDefinitionRequestQueryEventQuery:PowerpackWidgetHeatmapDefinitionRequestQueryEventQuery",
                    "description": "A timeseries formula and functions events query.\n"
                },
                "metricQuery": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetHeatmapDefinitionRequestQueryMetricQuery:PowerpackWidgetHeatmapDefinitionRequestQueryMetricQuery",
                    "description": "A timeseries formula and functions metrics query.\n"
                },
                "processQuery": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetHeatmapDefinitionRequestQueryProcessQuery:PowerpackWidgetHeatmapDefinitionRequestQueryProcessQuery",
                    "description": "The process query using formulas and functions.\n"
                },
                "sloQuery": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetHeatmapDefinitionRequestQuerySloQuery:PowerpackWidgetHeatmapDefinitionRequestQuerySloQuery",
                    "description": "The SLO query using formulas and functions.\n"
                }
            },
            "type": "object"
        },
        "datadog:index/PowerpackWidgetHeatmapDefinitionRequestQueryApmDependencyStatsQuery:PowerpackWidgetHeatmapDefinitionRequestQueryApmDependencyStatsQuery": {
            "properties": {
                "crossOrgUuids": {
                    "type": "string",
                    "description": "The source organization UUID for cross organization queries. Feature in Private Beta.\n"
                },
                "dataSource": {
                    "type": "string",
                    "description": "The data source for APM Dependency Stats queries. Valid values are `apm_dependency_stats`.\n"
                },
                "env": {
                    "type": "string",
                    "description": "APM environment.\n"
                },
                "isUpstream": {
                    "type": "boolean",
                    "description": "Determines whether stats for upstream or downstream dependencies should be queried.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of query for use in formulas.\n"
                },
                "operationName": {
                    "type": "string",
                    "description": "Name of operation on service.\n"
                },
                "primaryTagName": {
                    "type": "string",
                    "description": "The name of the second primary tag used within APM; required when `primary_tag_value` is specified. See https://docs.datadoghq.com/tracing/guide/setting*primary*tags*to*scope/#add-a-second-primary-tag-in-datadog.\n"
                },
                "primaryTagValue": {
                    "type": "string",
                    "description": "Filter APM data by the second primary tag. `primary_tag_name` must also be specified.\n"
                },
                "resourceName": {
                    "type": "string",
                    "description": "APM resource.\n"
                },
                "service": {
                    "type": "string",
                    "description": "APM service.\n"
                },
                "stat": {
                    "type": "string",
                    "description": "APM statistic. Valid values are `avg_duration`, `avg_root_duration`, `avg_spans_per_trace`, `error_rate`, `pct_exec_time`, `pct_of_traces`, `total_traces_count`.\n"
                }
            },
            "type": "object",
            "required": [
                "dataSource",
                "env",
                "name",
                "operationName",
                "resourceName",
                "service",
                "stat"
            ]
        },
        "datadog:index/PowerpackWidgetHeatmapDefinitionRequestQueryApmResourceStatsQuery:PowerpackWidgetHeatmapDefinitionRequestQueryApmResourceStatsQuery": {
            "properties": {
                "crossOrgUuids": {
                    "type": "string",
                    "description": "The source organization UUID for cross organization queries. Feature in Private Beta.\n"
                },
                "dataSource": {
                    "type": "string",
                    "description": "The data source for APM Resource Stats queries. Valid values are `apm_resource_stats`.\n"
                },
                "env": {
                    "type": "string",
                    "description": "APM environment.\n"
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Array of fields to group results by.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of query for use in formulas.\n"
                },
                "operationName": {
                    "type": "string",
                    "description": "Name of operation on service.\n"
                },
                "primaryTagName": {
                    "type": "string",
                    "description": "The name of the second primary tag used within APM; required when `primary_tag_value` is specified. See https://docs.datadoghq.com/tracing/guide/setting*primary*tags*to*scope/#add-a-second-primary-tag-in-datadog.\n"
                },
                "primaryTagValue": {
                    "type": "string",
                    "description": "Filter APM data by the second primary tag. `primary_tag_name` must also be specified.\n"
                },
                "resourceName": {
                    "type": "string",
                    "description": "APM resource.\n"
                },
                "service": {
                    "type": "string",
                    "description": "APM service.\n"
                },
                "stat": {
                    "type": "string",
                    "description": "APM statistic. Valid values are `errors`, `error_rate`, `hits`, `latency_avg`, `latency_distribution`, `latency_max`, `latency_p50`, `latency_p75`, `latency_p90`, `latency_p95`, `latency_p99`.\n"
                }
            },
            "type": "object",
            "required": [
                "dataSource",
                "env",
                "name",
                "service",
                "stat"
            ]
        },
        "datadog:index/PowerpackWidgetHeatmapDefinitionRequestQueryCloudCostQuery:PowerpackWidgetHeatmapDefinitionRequestQueryCloudCostQuery": {
            "properties": {
                "aggregator": {
                    "type": "string",
                    "description": "The aggregation methods available for cloud cost queries. Valid values are `avg`, `last`, `max`, `min`, `sum`, `percentile`.\n"
                },
                "crossOrgUuids": {
                    "type": "string",
                    "description": "The source organization UUID for cross organization queries. Feature in Private Beta.\n"
                },
                "dataSource": {
                    "type": "string",
                    "description": "The data source for cloud cost queries. Valid values are `cloud_cost`.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the query for use in formulas.\n"
                },
                "query": {
                    "type": "string",
                    "description": "The cloud cost query definition.\n"
                }
            },
            "type": "object",
            "required": [
                "dataSource",
                "name",
                "query"
            ]
        },
        "datadog:index/PowerpackWidgetHeatmapDefinitionRequestQueryEventQuery:PowerpackWidgetHeatmapDefinitionRequestQueryEventQuery": {
            "properties": {
                "computes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/PowerpackWidgetHeatmapDefinitionRequestQueryEventQueryCompute:PowerpackWidgetHeatmapDefinitionRequestQueryEventQueryCompute"
                    },
                    "description": "The compute options.\n"
                },
                "crossOrgUuids": {
                    "type": "string",
                    "description": "The source organization UUID for cross organization queries. Feature in Private Beta.\n"
                },
                "dataSource": {
                    "type": "string",
                    "description": "The data source for event platform-based queries. Valid values are `logs`, `spans`, `network`, `rum`, `security_signals`, `profiles`, `audit`, `events`, `ci_tests`, `ci_pipelines`, `incident_analytics`.\n"
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/PowerpackWidgetHeatmapDefinitionRequestQueryEventQueryGroupBy:PowerpackWidgetHeatmapDefinitionRequestQueryEventQueryGroupBy"
                    },
                    "description": "Group by options.\n"
                },
                "indexes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "An array of index names to query in the stream.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of query for use in formulas.\n"
                },
                "search": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetHeatmapDefinitionRequestQueryEventQuerySearch:PowerpackWidgetHeatmapDefinitionRequestQueryEventQuerySearch",
                    "description": "The search options.\n"
                },
                "storage": {
                    "type": "string",
                    "description": "Storage location (private beta).\n"
                }
            },
            "type": "object",
            "required": [
                "computes",
                "dataSource",
                "name"
            ]
        },
        "datadog:index/PowerpackWidgetHeatmapDefinitionRequestQueryEventQueryCompute:PowerpackWidgetHeatmapDefinitionRequestQueryEventQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "The aggregation methods for event platform queries. Valid values are `count`, `cardinality`, `median`, `pc75`, `pc90`, `pc95`, `pc98`, `pc99`, `sum`, `min`, `max`, `avg`.\n"
                },
                "interval": {
                    "type": "integer",
                    "description": "A time interval in milliseconds.\n"
                },
                "metric": {
                    "type": "string",
                    "description": "The measurable attribute to compute.\n"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/PowerpackWidgetHeatmapDefinitionRequestQueryEventQueryGroupBy:PowerpackWidgetHeatmapDefinitionRequestQueryEventQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "description": "The event facet.\n"
                },
                "limit": {
                    "type": "integer",
                    "description": "The number of groups to return.\n"
                },
                "sort": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetHeatmapDefinitionRequestQueryEventQueryGroupBySort:PowerpackWidgetHeatmapDefinitionRequestQueryEventQueryGroupBySort",
                    "description": "The options for sorting group by results.\n"
                }
            },
            "type": "object",
            "required": [
                "facet"
            ]
        },
        "datadog:index/PowerpackWidgetHeatmapDefinitionRequestQueryEventQueryGroupBySort:PowerpackWidgetHeatmapDefinitionRequestQueryEventQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "The aggregation methods for the event platform queries. Valid values are `count`, `cardinality`, `median`, `pc75`, `pc90`, `pc95`, `pc98`, `pc99`, `sum`, `min`, `max`, `avg`.\n"
                },
                "metric": {
                    "type": "string",
                    "description": "The metric used for sorting group by results.\n"
                },
                "order": {
                    "type": "string",
                    "description": "Direction of sort. Valid values are `asc`, `desc`.\n"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/PowerpackWidgetHeatmapDefinitionRequestQueryEventQuerySearch:PowerpackWidgetHeatmapDefinitionRequestQueryEventQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "description": "The events search string.\n"
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/PowerpackWidgetHeatmapDefinitionRequestQueryMetricQuery:PowerpackWidgetHeatmapDefinitionRequestQueryMetricQuery": {
            "properties": {
                "aggregator": {
                    "type": "string",
                    "description": "The aggregation methods available for metrics queries. Valid values are `avg`, `min`, `max`, `sum`, `last`, `area`, `l2norm`, `percentile`.\n"
                },
                "crossOrgUuids": {
                    "type": "string",
                    "description": "The source organization UUID for cross organization queries. Feature in Private Beta.\n"
                },
                "dataSource": {
                    "type": "string",
                    "description": "The data source for metrics queries. Defaults to `\"metrics\"`.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the query for use in formulas.\n"
                },
                "query": {
                    "type": "string",
                    "description": "The metrics query definition.\n"
                }
            },
            "type": "object",
            "required": [
                "name",
                "query"
            ]
        },
        "datadog:index/PowerpackWidgetHeatmapDefinitionRequestQueryProcessQuery:PowerpackWidgetHeatmapDefinitionRequestQueryProcessQuery": {
            "properties": {
                "aggregator": {
                    "type": "string",
                    "description": "The aggregation methods available for metrics queries. Valid values are `avg`, `min`, `max`, `sum`, `last`, `area`, `l2norm`, `percentile`.\n"
                },
                "crossOrgUuids": {
                    "type": "string",
                    "description": "The source organization UUID for cross organization queries. Feature in Private Beta.\n"
                },
                "dataSource": {
                    "type": "string",
                    "description": "The data source for process queries. Valid values are `process`, `container`.\n"
                },
                "isNormalizedCpu": {
                    "type": "boolean",
                    "description": "Whether to normalize the CPU percentages.\n"
                },
                "limit": {
                    "type": "integer",
                    "description": "The number of hits to return.\n"
                },
                "metric": {
                    "type": "string",
                    "description": "The process metric name.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of query for use in formulas.\n"
                },
                "sort": {
                    "type": "string",
                    "description": "The direction of the sort. Valid values are `asc`, `desc`. Defaults to `\"desc\"`.\n"
                },
                "tagFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "An array of tags to filter by.\n"
                },
                "textFilter": {
                    "type": "string",
                    "description": "The text to use as a filter.\n"
                }
            },
            "type": "object",
            "required": [
                "dataSource",
                "metric",
                "name"
            ]
        },
        "datadog:index/PowerpackWidgetHeatmapDefinitionRequestQuerySloQuery:PowerpackWidgetHeatmapDefinitionRequestQuerySloQuery": {
            "properties": {
                "additionalQueryFilters": {
                    "type": "string",
                    "description": "Additional filters applied to the SLO query.\n"
                },
                "crossOrgUuids": {
                    "type": "string",
                    "description": "The source organization UUID for cross organization queries. Feature in Private Beta.\n"
                },
                "dataSource": {
                    "type": "string",
                    "description": "The data source for SLO queries. Valid values are `slo`.\n"
                },
                "groupMode": {
                    "type": "string",
                    "description": "Group mode to query measures. Valid values are `overall`, `components`. Defaults to `\"overall\"`.\n"
                },
                "measure": {
                    "type": "string",
                    "description": "SLO measures queries. Valid values are `good_events`, `bad_events`, `slo_status`, `error_budget_remaining`, `burn_rate`, `error_budget_burndown`.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of query for use in formulas.\n"
                },
                "sloId": {
                    "type": "string",
                    "description": "ID of an SLO to query.\n"
                },
                "sloQueryType": {
                    "type": "string",
                    "description": "type of the SLO to query. Valid values are `metric`, `time_slice`. Defaults to `\"metric\"`.\n"
                }
            },
            "type": "object",
            "required": [
                "dataSource",
                "measure",
                "sloId"
            ]
        },
        "datadog:index/PowerpackWidgetHeatmapDefinitionRequestRumQuery:PowerpackWidgetHeatmapDefinitionRequestRumQuery": {
            "properties": {
                "computeQuery": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetHeatmapDefinitionRequestRumQueryComputeQuery:PowerpackWidgetHeatmapDefinitionRequestRumQueryComputeQuery",
                    "description": "`compute_query` or `multi_compute` is required. The map keys are listed below.\n"
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/PowerpackWidgetHeatmapDefinitionRequestRumQueryGroupBy:PowerpackWidgetHeatmapDefinitionRequestRumQueryGroupBy"
                    },
                    "description": "Multiple `group_by` blocks are allowed using the structure below.\n"
                },
                "index": {
                    "type": "string",
                    "description": "The name of the index to query.\n"
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/PowerpackWidgetHeatmapDefinitionRequestRumQueryMultiCompute:PowerpackWidgetHeatmapDefinitionRequestRumQueryMultiCompute"
                    },
                    "description": "`compute_query` or `multi_compute` is required. Multiple `multi_compute` blocks are allowed using the structure below.\n"
                },
                "searchQuery": {
                    "type": "string",
                    "description": "The search query to use.\n"
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/PowerpackWidgetHeatmapDefinitionRequestRumQueryComputeQuery:PowerpackWidgetHeatmapDefinitionRequestRumQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "The aggregation method.\n"
                },
                "facet": {
                    "type": "string",
                    "description": "The facet name.\n"
                },
                "interval": {
                    "type": "integer",
                    "description": "Define the time interval in seconds.\n"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/PowerpackWidgetHeatmapDefinitionRequestRumQueryGroupBy:PowerpackWidgetHeatmapDefinitionRequestRumQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "description": "The facet name.\n"
                },
                "limit": {
                    "type": "integer",
                    "description": "The maximum number of items in the group.\n"
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetHeatmapDefinitionRequestRumQueryGroupBySortQuery:PowerpackWidgetHeatmapDefinitionRequestRumQueryGroupBySortQuery",
                    "description": "A list of exactly one element describing the sort query to use.\n"
                }
            },
            "type": "object"
        },
        "datadog:index/PowerpackWidgetHeatmapDefinitionRequestRumQueryGroupBySortQuery:PowerpackWidgetHeatmapDefinitionRequestRumQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "The aggregation method.\n"
                },
                "facet": {
                    "type": "string",
                    "description": "The facet name.\n"
                },
                "order": {
                    "type": "string",
                    "description": "Widget sorting methods. Valid values are `asc`, `desc`.\n"
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/PowerpackWidgetHeatmapDefinitionRequestRumQueryMultiCompute:PowerpackWidgetHeatmapDefinitionRequestRumQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "The aggregation method.\n"
                },
                "facet": {
                    "type": "string",
                    "description": "The facet name.\n"
                },
                "interval": {
                    "type": "integer",
                    "description": "Define the time interval in seconds.\n"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/PowerpackWidgetHeatmapDefinitionRequestSecurityQuery:PowerpackWidgetHeatmapDefinitionRequestSecurityQuery": {
            "properties": {
                "computeQuery": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetHeatmapDefinitionRequestSecurityQueryComputeQuery:PowerpackWidgetHeatmapDefinitionRequestSecurityQueryComputeQuery",
                    "description": "`compute_query` or `multi_compute` is required. The map keys are listed below.\n"
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/PowerpackWidgetHeatmapDefinitionRequestSecurityQueryGroupBy:PowerpackWidgetHeatmapDefinitionRequestSecurityQueryGroupBy"
                    },
                    "description": "Multiple `group_by` blocks are allowed using the structure below.\n"
                },
                "index": {
                    "type": "string",
                    "description": "The name of the index to query.\n"
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/PowerpackWidgetHeatmapDefinitionRequestSecurityQueryMultiCompute:PowerpackWidgetHeatmapDefinitionRequestSecurityQueryMultiCompute"
                    },
                    "description": "`compute_query` or `multi_compute` is required. Multiple `multi_compute` blocks are allowed using the structure below.\n"
                },
                "searchQuery": {
                    "type": "string",
                    "description": "The search query to use.\n"
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/PowerpackWidgetHeatmapDefinitionRequestSecurityQueryComputeQuery:PowerpackWidgetHeatmapDefinitionRequestSecurityQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "The aggregation method.\n"
                },
                "facet": {
                    "type": "string",
                    "description": "The facet name.\n"
                },
                "interval": {
                    "type": "integer",
                    "description": "Define the time interval in seconds.\n"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/PowerpackWidgetHeatmapDefinitionRequestSecurityQueryGroupBy:PowerpackWidgetHeatmapDefinitionRequestSecurityQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "description": "The facet name.\n"
                },
                "limit": {
                    "type": "integer",
                    "description": "The maximum number of items in the group.\n"
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetHeatmapDefinitionRequestSecurityQueryGroupBySortQuery:PowerpackWidgetHeatmapDefinitionRequestSecurityQueryGroupBySortQuery",
                    "description": "A list of exactly one element describing the sort query to use.\n"
                }
            },
            "type": "object"
        },
        "datadog:index/PowerpackWidgetHeatmapDefinitionRequestSecurityQueryGroupBySortQuery:PowerpackWidgetHeatmapDefinitionRequestSecurityQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "The aggregation method.\n"
                },
                "facet": {
                    "type": "string",
                    "description": "The facet name.\n"
                },
                "order": {
                    "type": "string",
                    "description": "Widget sorting methods. Valid values are `asc`, `desc`.\n"
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/PowerpackWidgetHeatmapDefinitionRequestSecurityQueryMultiCompute:PowerpackWidgetHeatmapDefinitionRequestSecurityQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "The aggregation method.\n"
                },
                "facet": {
                    "type": "string",
                    "description": "The facet name.\n"
                },
                "interval": {
                    "type": "integer",
                    "description": "Define the time interval in seconds.\n"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/PowerpackWidgetHeatmapDefinitionRequestStyle:PowerpackWidgetHeatmapDefinitionRequestStyle": {
            "properties": {
                "palette": {
                    "type": "string",
                    "description": "A color palette to apply to the widget. The available options are available at: https://docs.datadoghq.com/dashboards/widgets/timeseries/#appearance.\n"
                }
            },
            "type": "object"
        },
        "datadog:index/PowerpackWidgetHeatmapDefinitionYaxis:PowerpackWidgetHeatmapDefinitionYaxis": {
            "properties": {
                "includeZero": {
                    "type": "boolean",
                    "description": "Always include zero or fit the axis to the data range.\n"
                },
                "label": {
                    "type": "string",
                    "description": "The label of the axis to display on the graph.\n"
                },
                "max": {
                    "type": "string",
                    "description": "Specify the maximum value to show on the Y-axis.\n"
                },
                "min": {
                    "type": "string",
                    "description": "Specify the minimum value to show on the Y-axis.\n"
                },
                "scale": {
                    "type": "string",
                    "description": "Specify the scale type, options: `linear`, `log`, `pow`, `sqrt`.\n"
                }
            },
            "type": "object"
        },
        "datadog:index/PowerpackWidgetHostmapDefinition:PowerpackWidgetHostmapDefinition": {
            "properties": {
                "customLinks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/PowerpackWidgetHostmapDefinitionCustomLink:PowerpackWidgetHostmapDefinitionCustomLink"
                    },
                    "description": "A nested block describing a custom link. Multiple `custom_link` blocks are allowed using the structure below.\n"
                },
                "groups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The list of tags to group nodes by.\n"
                },
                "noGroupHosts": {
                    "type": "boolean",
                    "description": "A Boolean indicating whether to show ungrouped nodes.\n"
                },
                "noMetricHosts": {
                    "type": "boolean",
                    "description": "A Boolean indicating whether to show nodes with no metrics.\n"
                },
                "nodeType": {
                    "type": "string",
                    "description": "The type of node used. Valid values are `host`, `container`.\n"
                },
                "request": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetHostmapDefinitionRequest:PowerpackWidgetHostmapDefinitionRequest",
                    "description": "A nested block describing the request to use when displaying the widget. Multiple `request` blocks are allowed using the structure below.\n"
                },
                "scopes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The list of tags to filter nodes by.\n"
                },
                "style": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetHostmapDefinitionStyle:PowerpackWidgetHostmapDefinitionStyle",
                    "description": "The style of the widget graph. One nested block is allowed using the structure below.\n"
                },
                "title": {
                    "type": "string",
                    "description": "The title of the widget.\n"
                },
                "titleAlign": {
                    "type": "string",
                    "description": "The alignment of the widget's title. Valid values are `center`, `left`, `right`.\n"
                },
                "titleSize": {
                    "type": "string",
                    "description": "The size of the widget's title (defaults to 16).\n"
                }
            },
            "type": "object"
        },
        "datadog:index/PowerpackWidgetHostmapDefinitionCustomLink:PowerpackWidgetHostmapDefinitionCustomLink": {
            "properties": {
                "isHidden": {
                    "type": "boolean",
                    "description": "The flag for toggling context menu link visibility.\n"
                },
                "label": {
                    "type": "string",
                    "description": "The label for the custom link URL.\n"
                },
                "link": {
                    "type": "string",
                    "description": "The URL of the custom link.\n"
                },
                "overrideLabel": {
                    "type": "string",
                    "description": "The label ID that refers to a context menu link item. When `override_label` is provided, the client request omits the label field.\n"
                }
            },
            "type": "object"
        },
        "datadog:index/PowerpackWidgetHostmapDefinitionRequest:PowerpackWidgetHostmapDefinitionRequest": {
            "properties": {
                "fills": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/PowerpackWidgetHostmapDefinitionRequestFill:PowerpackWidgetHostmapDefinitionRequestFill"
                    },
                    "description": "The query used to fill the map. Exactly one nested block is allowed using the structure below (exactly one of `q`, `apm_query`, `log_query`, `rum_query`, `security_query` or `process_query` is required within the request block).\n"
                },
                "sizes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/PowerpackWidgetHostmapDefinitionRequestSize:PowerpackWidgetHostmapDefinitionRequestSize"
                    },
                    "description": "The query used to size the map. Exactly one nested block is allowed using the structure below (exactly one of `q`, `apm_query`, `log_query`, `rum_query`, `security_query` or `process_query` is required within the request block).\n"
                }
            },
            "type": "object"
        },
        "datadog:index/PowerpackWidgetHostmapDefinitionRequestFill:PowerpackWidgetHostmapDefinitionRequestFill": {
            "properties": {
                "apmQuery": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetHostmapDefinitionRequestFillApmQuery:PowerpackWidgetHostmapDefinitionRequestFillApmQuery",
                    "description": "The query to use for this widget.\n"
                },
                "logQuery": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetHostmapDefinitionRequestFillLogQuery:PowerpackWidgetHostmapDefinitionRequestFillLogQuery",
                    "description": "The query to use for this widget.\n"
                },
                "processQuery": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetHostmapDefinitionRequestFillProcessQuery:PowerpackWidgetHostmapDefinitionRequestFillProcessQuery",
                    "description": "The process query to use in the widget. The structure of this block is described below.\n"
                },
                "q": {
                    "type": "string",
                    "description": "The metric query to use for this widget.\n"
                },
                "rumQuery": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetHostmapDefinitionRequestFillRumQuery:PowerpackWidgetHostmapDefinitionRequestFillRumQuery",
                    "description": "The query to use for this widget.\n"
                },
                "securityQuery": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetHostmapDefinitionRequestFillSecurityQuery:PowerpackWidgetHostmapDefinitionRequestFillSecurityQuery",
                    "description": "The query to use for this widget.\n"
                }
            },
            "type": "object"
        },
        "datadog:index/PowerpackWidgetHostmapDefinitionRequestFillApmQuery:PowerpackWidgetHostmapDefinitionRequestFillApmQuery": {
            "properties": {
                "computeQuery": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetHostmapDefinitionRequestFillApmQueryComputeQuery:PowerpackWidgetHostmapDefinitionRequestFillApmQueryComputeQuery",
                    "description": "`compute_query` or `multi_compute` is required. The map keys are listed below.\n"
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/PowerpackWidgetHostmapDefinitionRequestFillApmQueryGroupBy:PowerpackWidgetHostmapDefinitionRequestFillApmQueryGroupBy"
                    },
                    "description": "Multiple `group_by` blocks are allowed using the structure below.\n"
                },
                "index": {
                    "type": "string",
                    "description": "The name of the index to query.\n"
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/PowerpackWidgetHostmapDefinitionRequestFillApmQueryMultiCompute:PowerpackWidgetHostmapDefinitionRequestFillApmQueryMultiCompute"
                    },
                    "description": "`compute_query` or `multi_compute` is required. Multiple `multi_compute` blocks are allowed using the structure below.\n"
                },
                "searchQuery": {
                    "type": "string",
                    "description": "The search query to use.\n"
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/PowerpackWidgetHostmapDefinitionRequestFillApmQueryComputeQuery:PowerpackWidgetHostmapDefinitionRequestFillApmQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "The aggregation method.\n"
                },
                "facet": {
                    "type": "string",
                    "description": "The facet name.\n"
                },
                "interval": {
                    "type": "integer",
                    "description": "Define the time interval in seconds.\n"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/PowerpackWidgetHostmapDefinitionRequestFillApmQueryGroupBy:PowerpackWidgetHostmapDefinitionRequestFillApmQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "description": "The facet name.\n"
                },
                "limit": {
                    "type": "integer",
                    "description": "The maximum number of items in the group.\n"
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetHostmapDefinitionRequestFillApmQueryGroupBySortQuery:PowerpackWidgetHostmapDefinitionRequestFillApmQueryGroupBySortQuery",
                    "description": "A list of exactly one element describing the sort query to use.\n"
                }
            },
            "type": "object"
        },
        "datadog:index/PowerpackWidgetHostmapDefinitionRequestFillApmQueryGroupBySortQuery:PowerpackWidgetHostmapDefinitionRequestFillApmQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "The aggregation method.\n"
                },
                "facet": {
                    "type": "string",
                    "description": "The facet name.\n"
                },
                "order": {
                    "type": "string",
                    "description": "Widget sorting methods. Valid values are `asc`, `desc`.\n"
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/PowerpackWidgetHostmapDefinitionRequestFillApmQueryMultiCompute:PowerpackWidgetHostmapDefinitionRequestFillApmQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "The aggregation method.\n"
                },
                "facet": {
                    "type": "string",
                    "description": "The facet name.\n"
                },
                "interval": {
                    "type": "integer",
                    "description": "Define the time interval in seconds.\n"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/PowerpackWidgetHostmapDefinitionRequestFillLogQuery:PowerpackWidgetHostmapDefinitionRequestFillLogQuery": {
            "properties": {
                "computeQuery": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetHostmapDefinitionRequestFillLogQueryComputeQuery:PowerpackWidgetHostmapDefinitionRequestFillLogQueryComputeQuery",
                    "description": "`compute_query` or `multi_compute` is required. The map keys are listed below.\n"
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/PowerpackWidgetHostmapDefinitionRequestFillLogQueryGroupBy:PowerpackWidgetHostmapDefinitionRequestFillLogQueryGroupBy"
                    },
                    "description": "Multiple `group_by` blocks are allowed using the structure below.\n"
                },
                "index": {
                    "type": "string",
                    "description": "The name of the index to query.\n"
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/PowerpackWidgetHostmapDefinitionRequestFillLogQueryMultiCompute:PowerpackWidgetHostmapDefinitionRequestFillLogQueryMultiCompute"
                    },
                    "description": "`compute_query` or `multi_compute` is required. Multiple `multi_compute` blocks are allowed using the structure below.\n"
                },
                "searchQuery": {
                    "type": "string",
                    "description": "The search query to use.\n"
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/PowerpackWidgetHostmapDefinitionRequestFillLogQueryComputeQuery:PowerpackWidgetHostmapDefinitionRequestFillLogQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "The aggregation method.\n"
                },
                "facet": {
                    "type": "string",
                    "description": "The facet name.\n"
                },
                "interval": {
                    "type": "integer",
                    "description": "Define the time interval in seconds.\n"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/PowerpackWidgetHostmapDefinitionRequestFillLogQueryGroupBy:PowerpackWidgetHostmapDefinitionRequestFillLogQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "description": "The facet name.\n"
                },
                "limit": {
                    "type": "integer",
                    "description": "The maximum number of items in the group.\n"
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetHostmapDefinitionRequestFillLogQueryGroupBySortQuery:PowerpackWidgetHostmapDefinitionRequestFillLogQueryGroupBySortQuery",
                    "description": "A list of exactly one element describing the sort query to use.\n"
                }
            },
            "type": "object"
        },
        "datadog:index/PowerpackWidgetHostmapDefinitionRequestFillLogQueryGroupBySortQuery:PowerpackWidgetHostmapDefinitionRequestFillLogQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "The aggregation method.\n"
                },
                "facet": {
                    "type": "string",
                    "description": "The facet name.\n"
                },
                "order": {
                    "type": "string",
                    "description": "Widget sorting methods. Valid values are `asc`, `desc`.\n"
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/PowerpackWidgetHostmapDefinitionRequestFillLogQueryMultiCompute:PowerpackWidgetHostmapDefinitionRequestFillLogQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "The aggregation method.\n"
                },
                "facet": {
                    "type": "string",
                    "description": "The facet name.\n"
                },
                "interval": {
                    "type": "integer",
                    "description": "Define the time interval in seconds.\n"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/PowerpackWidgetHostmapDefinitionRequestFillProcessQuery:PowerpackWidgetHostmapDefinitionRequestFillProcessQuery": {
            "properties": {
                "filterBies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of processes.\n"
                },
                "limit": {
                    "type": "integer",
                    "description": "The max number of items in the filter list.\n"
                },
                "metric": {
                    "type": "string",
                    "description": "Your chosen metric.\n"
                },
                "searchBy": {
                    "type": "string",
                    "description": "Your chosen search term.\n"
                }
            },
            "type": "object",
            "required": [
                "metric"
            ]
        },
        "datadog:index/PowerpackWidgetHostmapDefinitionRequestFillRumQuery:PowerpackWidgetHostmapDefinitionRequestFillRumQuery": {
            "properties": {
                "computeQuery": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetHostmapDefinitionRequestFillRumQueryComputeQuery:PowerpackWidgetHostmapDefinitionRequestFillRumQueryComputeQuery",
                    "description": "`compute_query` or `multi_compute` is required. The map keys are listed below.\n"
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/PowerpackWidgetHostmapDefinitionRequestFillRumQueryGroupBy:PowerpackWidgetHostmapDefinitionRequestFillRumQueryGroupBy"
                    },
                    "description": "Multiple `group_by` blocks are allowed using the structure below.\n"
                },
                "index": {
                    "type": "string",
                    "description": "The name of the index to query.\n"
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/PowerpackWidgetHostmapDefinitionRequestFillRumQueryMultiCompute:PowerpackWidgetHostmapDefinitionRequestFillRumQueryMultiCompute"
                    },
                    "description": "`compute_query` or `multi_compute` is required. Multiple `multi_compute` blocks are allowed using the structure below.\n"
                },
                "searchQuery": {
                    "type": "string",
                    "description": "The search query to use.\n"
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/PowerpackWidgetHostmapDefinitionRequestFillRumQueryComputeQuery:PowerpackWidgetHostmapDefinitionRequestFillRumQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "The aggregation method.\n"
                },
                "facet": {
                    "type": "string",
                    "description": "The facet name.\n"
                },
                "interval": {
                    "type": "integer",
                    "description": "Define the time interval in seconds.\n"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/PowerpackWidgetHostmapDefinitionRequestFillRumQueryGroupBy:PowerpackWidgetHostmapDefinitionRequestFillRumQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "description": "The facet name.\n"
                },
                "limit": {
                    "type": "integer",
                    "description": "The maximum number of items in the group.\n"
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetHostmapDefinitionRequestFillRumQueryGroupBySortQuery:PowerpackWidgetHostmapDefinitionRequestFillRumQueryGroupBySortQuery",
                    "description": "A list of exactly one element describing the sort query to use.\n"
                }
            },
            "type": "object"
        },
        "datadog:index/PowerpackWidgetHostmapDefinitionRequestFillRumQueryGroupBySortQuery:PowerpackWidgetHostmapDefinitionRequestFillRumQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "The aggregation method.\n"
                },
                "facet": {
                    "type": "string",
                    "description": "The facet name.\n"
                },
                "order": {
                    "type": "string",
                    "description": "Widget sorting methods. Valid values are `asc`, `desc`.\n"
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/PowerpackWidgetHostmapDefinitionRequestFillRumQueryMultiCompute:PowerpackWidgetHostmapDefinitionRequestFillRumQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "The aggregation method.\n"
                },
                "facet": {
                    "type": "string",
                    "description": "The facet name.\n"
                },
                "interval": {
                    "type": "integer",
                    "description": "Define the time interval in seconds.\n"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/PowerpackWidgetHostmapDefinitionRequestFillSecurityQuery:PowerpackWidgetHostmapDefinitionRequestFillSecurityQuery": {
            "properties": {
                "computeQuery": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetHostmapDefinitionRequestFillSecurityQueryComputeQuery:PowerpackWidgetHostmapDefinitionRequestFillSecurityQueryComputeQuery",
                    "description": "`compute_query` or `multi_compute` is required. The map keys are listed below.\n"
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/PowerpackWidgetHostmapDefinitionRequestFillSecurityQueryGroupBy:PowerpackWidgetHostmapDefinitionRequestFillSecurityQueryGroupBy"
                    },
                    "description": "Multiple `group_by` blocks are allowed using the structure below.\n"
                },
                "index": {
                    "type": "string",
                    "description": "The name of the index to query.\n"
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/PowerpackWidgetHostmapDefinitionRequestFillSecurityQueryMultiCompute:PowerpackWidgetHostmapDefinitionRequestFillSecurityQueryMultiCompute"
                    },
                    "description": "`compute_query` or `multi_compute` is required. Multiple `multi_compute` blocks are allowed using the structure below.\n"
                },
                "searchQuery": {
                    "type": "string",
                    "description": "The search query to use.\n"
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/PowerpackWidgetHostmapDefinitionRequestFillSecurityQueryComputeQuery:PowerpackWidgetHostmapDefinitionRequestFillSecurityQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "The aggregation method.\n"
                },
                "facet": {
                    "type": "string",
                    "description": "The facet name.\n"
                },
                "interval": {
                    "type": "integer",
                    "description": "Define the time interval in seconds.\n"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/PowerpackWidgetHostmapDefinitionRequestFillSecurityQueryGroupBy:PowerpackWidgetHostmapDefinitionRequestFillSecurityQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "description": "The facet name.\n"
                },
                "limit": {
                    "type": "integer",
                    "description": "The maximum number of items in the group.\n"
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetHostmapDefinitionRequestFillSecurityQueryGroupBySortQuery:PowerpackWidgetHostmapDefinitionRequestFillSecurityQueryGroupBySortQuery",
                    "description": "A list of exactly one element describing the sort query to use.\n"
                }
            },
            "type": "object"
        },
        "datadog:index/PowerpackWidgetHostmapDefinitionRequestFillSecurityQueryGroupBySortQuery:PowerpackWidgetHostmapDefinitionRequestFillSecurityQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "The aggregation method.\n"
                },
                "facet": {
                    "type": "string",
                    "description": "The facet name.\n"
                },
                "order": {
                    "type": "string",
                    "description": "Widget sorting methods. Valid values are `asc`, `desc`.\n"
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/PowerpackWidgetHostmapDefinitionRequestFillSecurityQueryMultiCompute:PowerpackWidgetHostmapDefinitionRequestFillSecurityQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "The aggregation method.\n"
                },
                "facet": {
                    "type": "string",
                    "description": "The facet name.\n"
                },
                "interval": {
                    "type": "integer",
                    "description": "Define the time interval in seconds.\n"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/PowerpackWidgetHostmapDefinitionRequestSize:PowerpackWidgetHostmapDefinitionRequestSize": {
            "properties": {
                "apmQuery": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetHostmapDefinitionRequestSizeApmQuery:PowerpackWidgetHostmapDefinitionRequestSizeApmQuery",
                    "description": "The query to use for this widget.\n"
                },
                "logQuery": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetHostmapDefinitionRequestSizeLogQuery:PowerpackWidgetHostmapDefinitionRequestSizeLogQuery",
                    "description": "The query to use for this widget.\n"
                },
                "processQuery": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetHostmapDefinitionRequestSizeProcessQuery:PowerpackWidgetHostmapDefinitionRequestSizeProcessQuery",
                    "description": "The process query to use in the widget. The structure of this block is described below.\n"
                },
                "q": {
                    "type": "string",
                    "description": "The metric query to use for this widget.\n"
                },
                "rumQuery": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetHostmapDefinitionRequestSizeRumQuery:PowerpackWidgetHostmapDefinitionRequestSizeRumQuery",
                    "description": "The query to use for this widget.\n"
                },
                "securityQuery": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetHostmapDefinitionRequestSizeSecurityQuery:PowerpackWidgetHostmapDefinitionRequestSizeSecurityQuery",
                    "description": "The query to use for this widget.\n"
                }
            },
            "type": "object"
        },
        "datadog:index/PowerpackWidgetHostmapDefinitionRequestSizeApmQuery:PowerpackWidgetHostmapDefinitionRequestSizeApmQuery": {
            "properties": {
                "computeQuery": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetHostmapDefinitionRequestSizeApmQueryComputeQuery:PowerpackWidgetHostmapDefinitionRequestSizeApmQueryComputeQuery",
                    "description": "`compute_query` or `multi_compute` is required. The map keys are listed below.\n"
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/PowerpackWidgetHostmapDefinitionRequestSizeApmQueryGroupBy:PowerpackWidgetHostmapDefinitionRequestSizeApmQueryGroupBy"
                    },
                    "description": "Multiple `group_by` blocks are allowed using the structure below.\n"
                },
                "index": {
                    "type": "string",
                    "description": "The name of the index to query.\n"
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/PowerpackWidgetHostmapDefinitionRequestSizeApmQueryMultiCompute:PowerpackWidgetHostmapDefinitionRequestSizeApmQueryMultiCompute"
                    },
                    "description": "`compute_query` or `multi_compute` is required. Multiple `multi_compute` blocks are allowed using the structure below.\n"
                },
                "searchQuery": {
                    "type": "string",
                    "description": "The search query to use.\n"
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/PowerpackWidgetHostmapDefinitionRequestSizeApmQueryComputeQuery:PowerpackWidgetHostmapDefinitionRequestSizeApmQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "The aggregation method.\n"
                },
                "facet": {
                    "type": "string",
                    "description": "The facet name.\n"
                },
                "interval": {
                    "type": "integer",
                    "description": "Define the time interval in seconds.\n"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/PowerpackWidgetHostmapDefinitionRequestSizeApmQueryGroupBy:PowerpackWidgetHostmapDefinitionRequestSizeApmQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "description": "The facet name.\n"
                },
                "limit": {
                    "type": "integer",
                    "description": "The maximum number of items in the group.\n"
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetHostmapDefinitionRequestSizeApmQueryGroupBySortQuery:PowerpackWidgetHostmapDefinitionRequestSizeApmQueryGroupBySortQuery",
                    "description": "A list of exactly one element describing the sort query to use.\n"
                }
            },
            "type": "object"
        },
        "datadog:index/PowerpackWidgetHostmapDefinitionRequestSizeApmQueryGroupBySortQuery:PowerpackWidgetHostmapDefinitionRequestSizeApmQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "The aggregation method.\n"
                },
                "facet": {
                    "type": "string",
                    "description": "The facet name.\n"
                },
                "order": {
                    "type": "string",
                    "description": "Widget sorting methods. Valid values are `asc`, `desc`.\n"
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/PowerpackWidgetHostmapDefinitionRequestSizeApmQueryMultiCompute:PowerpackWidgetHostmapDefinitionRequestSizeApmQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "The aggregation method.\n"
                },
                "facet": {
                    "type": "string",
                    "description": "The facet name.\n"
                },
                "interval": {
                    "type": "integer",
                    "description": "Define the time interval in seconds.\n"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/PowerpackWidgetHostmapDefinitionRequestSizeLogQuery:PowerpackWidgetHostmapDefinitionRequestSizeLogQuery": {
            "properties": {
                "computeQuery": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetHostmapDefinitionRequestSizeLogQueryComputeQuery:PowerpackWidgetHostmapDefinitionRequestSizeLogQueryComputeQuery",
                    "description": "`compute_query` or `multi_compute` is required. The map keys are listed below.\n"
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/PowerpackWidgetHostmapDefinitionRequestSizeLogQueryGroupBy:PowerpackWidgetHostmapDefinitionRequestSizeLogQueryGroupBy"
                    },
                    "description": "Multiple `group_by` blocks are allowed using the structure below.\n"
                },
                "index": {
                    "type": "string",
                    "description": "The name of the index to query.\n"
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/PowerpackWidgetHostmapDefinitionRequestSizeLogQueryMultiCompute:PowerpackWidgetHostmapDefinitionRequestSizeLogQueryMultiCompute"
                    },
                    "description": "`compute_query` or `multi_compute` is required. Multiple `multi_compute` blocks are allowed using the structure below.\n"
                },
                "searchQuery": {
                    "type": "string",
                    "description": "The search query to use.\n"
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/PowerpackWidgetHostmapDefinitionRequestSizeLogQueryComputeQuery:PowerpackWidgetHostmapDefinitionRequestSizeLogQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "The aggregation method.\n"
                },
                "facet": {
                    "type": "string",
                    "description": "The facet name.\n"
                },
                "interval": {
                    "type": "integer",
                    "description": "Define the time interval in seconds.\n"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/PowerpackWidgetHostmapDefinitionRequestSizeLogQueryGroupBy:PowerpackWidgetHostmapDefinitionRequestSizeLogQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "description": "The facet name.\n"
                },
                "limit": {
                    "type": "integer",
                    "description": "The maximum number of items in the group.\n"
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetHostmapDefinitionRequestSizeLogQueryGroupBySortQuery:PowerpackWidgetHostmapDefinitionRequestSizeLogQueryGroupBySortQuery",
                    "description": "A list of exactly one element describing the sort query to use.\n"
                }
            },
            "type": "object"
        },
        "datadog:index/PowerpackWidgetHostmapDefinitionRequestSizeLogQueryGroupBySortQuery:PowerpackWidgetHostmapDefinitionRequestSizeLogQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "The aggregation method.\n"
                },
                "facet": {
                    "type": "string",
                    "description": "The facet name.\n"
                },
                "order": {
                    "type": "string",
                    "description": "Widget sorting methods. Valid values are `asc`, `desc`.\n"
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/PowerpackWidgetHostmapDefinitionRequestSizeLogQueryMultiCompute:PowerpackWidgetHostmapDefinitionRequestSizeLogQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "The aggregation method.\n"
                },
                "facet": {
                    "type": "string",
                    "description": "The facet name.\n"
                },
                "interval": {
                    "type": "integer",
                    "description": "Define the time interval in seconds.\n"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/PowerpackWidgetHostmapDefinitionRequestSizeProcessQuery:PowerpackWidgetHostmapDefinitionRequestSizeProcessQuery": {
            "properties": {
                "filterBies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of processes.\n"
                },
                "limit": {
                    "type": "integer",
                    "description": "The max number of items in the filter list.\n"
                },
                "metric": {
                    "type": "string",
                    "description": "Your chosen metric.\n"
                },
                "searchBy": {
                    "type": "string",
                    "description": "Your chosen search term.\n"
                }
            },
            "type": "object",
            "required": [
                "metric"
            ]
        },
        "datadog:index/PowerpackWidgetHostmapDefinitionRequestSizeRumQuery:PowerpackWidgetHostmapDefinitionRequestSizeRumQuery": {
            "properties": {
                "computeQuery": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetHostmapDefinitionRequestSizeRumQueryComputeQuery:PowerpackWidgetHostmapDefinitionRequestSizeRumQueryComputeQuery",
                    "description": "`compute_query` or `multi_compute` is required. The map keys are listed below.\n"
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/PowerpackWidgetHostmapDefinitionRequestSizeRumQueryGroupBy:PowerpackWidgetHostmapDefinitionRequestSizeRumQueryGroupBy"
                    },
                    "description": "Multiple `group_by` blocks are allowed using the structure below.\n"
                },
                "index": {
                    "type": "string",
                    "description": "The name of the index to query.\n"
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/PowerpackWidgetHostmapDefinitionRequestSizeRumQueryMultiCompute:PowerpackWidgetHostmapDefinitionRequestSizeRumQueryMultiCompute"
                    },
                    "description": "`compute_query` or `multi_compute` is required. Multiple `multi_compute` blocks are allowed using the structure below.\n"
                },
                "searchQuery": {
                    "type": "string",
                    "description": "The search query to use.\n"
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/PowerpackWidgetHostmapDefinitionRequestSizeRumQueryComputeQuery:PowerpackWidgetHostmapDefinitionRequestSizeRumQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "The aggregation method.\n"
                },
                "facet": {
                    "type": "string",
                    "description": "The facet name.\n"
                },
                "interval": {
                    "type": "integer",
                    "description": "Define the time interval in seconds.\n"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/PowerpackWidgetHostmapDefinitionRequestSizeRumQueryGroupBy:PowerpackWidgetHostmapDefinitionRequestSizeRumQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "description": "The facet name.\n"
                },
                "limit": {
                    "type": "integer",
                    "description": "The maximum number of items in the group.\n"
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetHostmapDefinitionRequestSizeRumQueryGroupBySortQuery:PowerpackWidgetHostmapDefinitionRequestSizeRumQueryGroupBySortQuery",
                    "description": "A list of exactly one element describing the sort query to use.\n"
                }
            },
            "type": "object"
        },
        "datadog:index/PowerpackWidgetHostmapDefinitionRequestSizeRumQueryGroupBySortQuery:PowerpackWidgetHostmapDefinitionRequestSizeRumQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "The aggregation method.\n"
                },
                "facet": {
                    "type": "string",
                    "description": "The facet name.\n"
                },
                "order": {
                    "type": "string",
                    "description": "Widget sorting methods. Valid values are `asc`, `desc`.\n"
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/PowerpackWidgetHostmapDefinitionRequestSizeRumQueryMultiCompute:PowerpackWidgetHostmapDefinitionRequestSizeRumQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "The aggregation method.\n"
                },
                "facet": {
                    "type": "string",
                    "description": "The facet name.\n"
                },
                "interval": {
                    "type": "integer",
                    "description": "Define the time interval in seconds.\n"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/PowerpackWidgetHostmapDefinitionRequestSizeSecurityQuery:PowerpackWidgetHostmapDefinitionRequestSizeSecurityQuery": {
            "properties": {
                "computeQuery": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetHostmapDefinitionRequestSizeSecurityQueryComputeQuery:PowerpackWidgetHostmapDefinitionRequestSizeSecurityQueryComputeQuery",
                    "description": "`compute_query` or `multi_compute` is required. The map keys are listed below.\n"
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/PowerpackWidgetHostmapDefinitionRequestSizeSecurityQueryGroupBy:PowerpackWidgetHostmapDefinitionRequestSizeSecurityQueryGroupBy"
                    },
                    "description": "Multiple `group_by` blocks are allowed using the structure below.\n"
                },
                "index": {
                    "type": "string",
                    "description": "The name of the index to query.\n"
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/PowerpackWidgetHostmapDefinitionRequestSizeSecurityQueryMultiCompute:PowerpackWidgetHostmapDefinitionRequestSizeSecurityQueryMultiCompute"
                    },
                    "description": "`compute_query` or `multi_compute` is required. Multiple `multi_compute` blocks are allowed using the structure below.\n"
                },
                "searchQuery": {
                    "type": "string",
                    "description": "The search query to use.\n"
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/PowerpackWidgetHostmapDefinitionRequestSizeSecurityQueryComputeQuery:PowerpackWidgetHostmapDefinitionRequestSizeSecurityQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "The aggregation method.\n"
                },
                "facet": {
                    "type": "string",
                    "description": "The facet name.\n"
                },
                "interval": {
                    "type": "integer",
                    "description": "Define the time interval in seconds.\n"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/PowerpackWidgetHostmapDefinitionRequestSizeSecurityQueryGroupBy:PowerpackWidgetHostmapDefinitionRequestSizeSecurityQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "description": "The facet name.\n"
                },
                "limit": {
                    "type": "integer",
                    "description": "The maximum number of items in the group.\n"
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetHostmapDefinitionRequestSizeSecurityQueryGroupBySortQuery:PowerpackWidgetHostmapDefinitionRequestSizeSecurityQueryGroupBySortQuery",
                    "description": "A list of exactly one element describing the sort query to use.\n"
                }
            },
            "type": "object"
        },
        "datadog:index/PowerpackWidgetHostmapDefinitionRequestSizeSecurityQueryGroupBySortQuery:PowerpackWidgetHostmapDefinitionRequestSizeSecurityQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "The aggregation method.\n"
                },
                "facet": {
                    "type": "string",
                    "description": "The facet name.\n"
                },
                "order": {
                    "type": "string",
                    "description": "Widget sorting methods. Valid values are `asc`, `desc`.\n"
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/PowerpackWidgetHostmapDefinitionRequestSizeSecurityQueryMultiCompute:PowerpackWidgetHostmapDefinitionRequestSizeSecurityQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "The aggregation method.\n"
                },
                "facet": {
                    "type": "string",
                    "description": "The facet name.\n"
                },
                "interval": {
                    "type": "integer",
                    "description": "Define the time interval in seconds.\n"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/PowerpackWidgetHostmapDefinitionStyle:PowerpackWidgetHostmapDefinitionStyle": {
            "properties": {
                "fillMax": {
                    "type": "string",
                    "description": "The max value to use to color the map.\n"
                },
                "fillMin": {
                    "type": "string",
                    "description": "The min value to use to color the map.\n"
                },
                "palette": {
                    "type": "string",
                    "description": "A color palette to apply to the widget. The available options are available at: https://docs.datadoghq.com/dashboards/widgets/timeseries/#appearance.\n"
                },
                "paletteFlip": {
                    "type": "boolean",
                    "description": "A Boolean indicating whether to flip the palette tones.\n"
                }
            },
            "type": "object"
        },
        "datadog:index/PowerpackWidgetIframeDefinition:PowerpackWidgetIframeDefinition": {
            "properties": {
                "url": {
                    "type": "string",
                    "description": "The URL to use as a data source for the widget.\n"
                }
            },
            "type": "object",
            "required": [
                "url"
            ]
        },
        "datadog:index/PowerpackWidgetImageDefinition:PowerpackWidgetImageDefinition": {
            "properties": {
                "hasBackground": {
                    "type": "boolean",
                    "description": "Whether to display a background or not. Defaults to `true`.\n"
                },
                "hasBorder": {
                    "type": "boolean",
                    "description": "Whether to display a border or not. Defaults to `true`.\n"
                },
                "horizontalAlign": {
                    "type": "string",
                    "description": "The horizontal alignment for the widget. Valid values are `center`, `left`, `right`.\n"
                },
                "margin": {
                    "type": "string",
                    "description": "The margins to use around the image. Note: `small` and `large` values are deprecated. Valid values are `sm`, `md`, `lg`, `small`, `large`.\n"
                },
                "sizing": {
                    "type": "string",
                    "description": "The preferred method to adapt the dimensions of the image. The values are based on the image `object-fit` CSS properties. Note: `zoom`, `fit` and `center` values are deprecated. Valid values are `fill`, `contain`, `cover`, `none`, `scale-down`, `zoom`, `fit`, `center`.\n"
                },
                "url": {
                    "type": "string",
                    "description": "The URL to use as a data source for the widget.\n"
                },
                "urlDarkTheme": {
                    "type": "string",
                    "description": "The URL in dark mode to use as a data source for the widget.\n"
                },
                "verticalAlign": {
                    "type": "string",
                    "description": "The vertical alignment for the widget. Valid values are `center`, `top`, `bottom`.\n"
                }
            },
            "type": "object",
            "required": [
                "url"
            ]
        },
        "datadog:index/PowerpackWidgetListStreamDefinition:PowerpackWidgetListStreamDefinition": {
            "properties": {
                "requests": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/PowerpackWidgetListStreamDefinitionRequest:PowerpackWidgetListStreamDefinitionRequest"
                    },
                    "description": "Nested block describing the requests to use when displaying the widget. Multiple `request` blocks are allowed with the structure below.\n"
                },
                "title": {
                    "type": "string",
                    "description": "The title of the widget.\n"
                },
                "titleAlign": {
                    "type": "string",
                    "description": "The alignment of the widget's title. Valid values are `center`, `left`, `right`.\n"
                },
                "titleSize": {
                    "type": "string",
                    "description": "The size of the widget's title. Default is 16.\n"
                }
            },
            "type": "object",
            "required": [
                "requests"
            ]
        },
        "datadog:index/PowerpackWidgetListStreamDefinitionRequest:PowerpackWidgetListStreamDefinitionRequest": {
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/PowerpackWidgetListStreamDefinitionRequestColumn:PowerpackWidgetListStreamDefinitionRequestColumn"
                    },
                    "description": "Widget columns.\n"
                },
                "query": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetListStreamDefinitionRequestQuery:PowerpackWidgetListStreamDefinitionRequestQuery",
                    "description": "Updated list stream widget.\n"
                },
                "responseFormat": {
                    "type": "string",
                    "description": "Widget response format. Valid values are `event_list`.\n"
                }
            },
            "type": "object",
            "required": [
                "columns",
                "query",
                "responseFormat"
            ]
        },
        "datadog:index/PowerpackWidgetListStreamDefinitionRequestColumn:PowerpackWidgetListStreamDefinitionRequestColumn": {
            "properties": {
                "field": {
                    "type": "string",
                    "description": "Widget column field.\n"
                },
                "width": {
                    "type": "string",
                    "description": "Widget column width. Valid values are `auto`, `compact`, `full`.\n"
                }
            },
            "type": "object",
            "required": [
                "field",
                "width"
            ]
        },
        "datadog:index/PowerpackWidgetListStreamDefinitionRequestQuery:PowerpackWidgetListStreamDefinitionRequestQuery": {
            "properties": {
                "dataSource": {
                    "type": "string",
                    "description": "Source from which to query items to display in the stream. Valid values are `logs_stream`, `audit_stream`, `ci_pipeline_stream`, `ci_test_stream`, `rum_issue_stream`, `apm_issue_stream`, `trace_stream`, `logs_issue_stream`, `logs_pattern_stream`, `logs_transaction_stream`, `event_stream`, `rum_stream`.\n"
                },
                "eventSize": {
                    "type": "string",
                    "description": "Size of events displayed in widget. Required if `data_source` is `event_stream`. Valid values are `s`, `l`.\n"
                },
                "indexes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of indexes.\n"
                },
                "queryString": {
                    "type": "string",
                    "description": "Widget query.\n"
                },
                "sort": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetListStreamDefinitionRequestQuerySort:PowerpackWidgetListStreamDefinitionRequestQuerySort",
                    "description": "The facet and order to sort the data, for example: `{\"column\": \"time\", \"order\": \"desc\"}`.\n"
                },
                "storage": {
                    "type": "string",
                    "description": "Storage location (private beta).\n"
                }
            },
            "type": "object",
            "required": [
                "dataSource"
            ]
        },
        "datadog:index/PowerpackWidgetListStreamDefinitionRequestQuerySort:PowerpackWidgetListStreamDefinitionRequestQuerySort": {
            "properties": {
                "column": {
                    "type": "string",
                    "description": "The facet path for the column.\n"
                },
                "order": {
                    "type": "string",
                    "description": "Widget sorting methods. Valid values are `asc`, `desc`.\n"
                }
            },
            "type": "object",
            "required": [
                "column",
                "order"
            ]
        },
        "datadog:index/PowerpackWidgetLogStreamDefinition:PowerpackWidgetLogStreamDefinition": {
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Stringified list of columns to use, for example: `[\"column1\",\"column2\",\"column3\"]`.\n"
                },
                "indexes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "An array of index names to query in the stream.\n"
                },
                "liveSpan": {
                    "type": "string",
                    "description": "The timeframe to use when displaying the widget. Valid values are `1m`, `5m`, `10m`, `15m`, `30m`, `1h`, `4h`, `1d`, `2d`, `1w`, `1mo`, `3mo`, `6mo`, `week_to_date`, `month_to_date`, `1y`, `alert`.\n"
                },
                "messageDisplay": {
                    "type": "string",
                    "description": "The number of log lines to display. Valid values are `inline`, `expanded-md`, `expanded-lg`.\n"
                },
                "query": {
                    "type": "string",
                    "description": "The query to use in the widget.\n"
                },
                "showDateColumn": {
                    "type": "boolean",
                    "description": "If the date column should be displayed.\n"
                },
                "showMessageColumn": {
                    "type": "boolean",
                    "description": "If the message column should be displayed.\n"
                },
                "sort": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetLogStreamDefinitionSort:PowerpackWidgetLogStreamDefinitionSort",
                    "description": "The facet and order to sort the data, for example: `{\"column\": \"time\", \"order\": \"desc\"}`.\n"
                },
                "title": {
                    "type": "string",
                    "description": "The title of the widget.\n"
                },
                "titleAlign": {
                    "type": "string",
                    "description": "The alignment of the widget's title. Valid values are `center`, `left`, `right`.\n"
                },
                "titleSize": {
                    "type": "string",
                    "description": "The size of the widget's title (defaults to 16).\n"
                }
            },
            "type": "object"
        },
        "datadog:index/PowerpackWidgetLogStreamDefinitionSort:PowerpackWidgetLogStreamDefinitionSort": {
            "properties": {
                "column": {
                    "type": "string",
                    "description": "The facet path for the column.\n"
                },
                "order": {
                    "type": "string",
                    "description": "Widget sorting methods. Valid values are `asc`, `desc`.\n"
                }
            },
            "type": "object",
            "required": [
                "column",
                "order"
            ]
        },
        "datadog:index/PowerpackWidgetManageStatusDefinition:PowerpackWidgetManageStatusDefinition": {
            "properties": {
                "colorPreference": {
                    "type": "string",
                    "description": "Whether to colorize text or background. Valid values are `background`, `text`.\n"
                },
                "displayFormat": {
                    "type": "string",
                    "description": "The display setting to use. Valid values are `counts`, `countsAndList`, `list`.\n"
                },
                "hideZeroCounts": {
                    "type": "boolean",
                    "description": "A Boolean indicating whether to hide empty categories.\n"
                },
                "query": {
                    "type": "string",
                    "description": "The query to use in the widget.\n"
                },
                "showLastTriggered": {
                    "type": "boolean",
                    "description": "A Boolean indicating whether to show when monitors/groups last triggered.\n"
                },
                "showPriority": {
                    "type": "boolean",
                    "description": "Whether to show the priorities column.\n"
                },
                "sort": {
                    "type": "string",
                    "description": "The method to sort the monitors. Valid values are `name`, `group`, `status`, `tags`, `triggered`, `group,asc`, `group,desc`, `name,asc`, `name,desc`, `status,asc`, `status,desc`, `tags,asc`, `tags,desc`, `triggered,asc`, `triggered,desc`, `priority,asc`, `priority,desc`.\n"
                },
                "summaryType": {
                    "type": "string",
                    "description": "The summary type to use. Valid values are `monitors`, `groups`, `combined`.\n"
                },
                "title": {
                    "type": "string",
                    "description": "The title of the widget.\n"
                },
                "titleAlign": {
                    "type": "string",
                    "description": "The alignment of the widget's title. Valid values are `center`, `left`, `right`.\n"
                },
                "titleSize": {
                    "type": "string",
                    "description": "The size of the widget's title (defaults to 16).\n"
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/PowerpackWidgetNoteDefinition:PowerpackWidgetNoteDefinition": {
            "properties": {
                "backgroundColor": {
                    "type": "string",
                    "description": "The background color of the note.\n"
                },
                "content": {
                    "type": "string",
                    "description": "The content of the note.\n"
                },
                "fontSize": {
                    "type": "string",
                    "description": "The size of the text.\n"
                },
                "hasPadding": {
                    "type": "boolean",
                    "description": "Whether to add padding or not. Defaults to `true`.\n"
                },
                "showTick": {
                    "type": "boolean",
                    "description": "Whether to show a tick or not.\n"
                },
                "textAlign": {
                    "type": "string",
                    "description": "The alignment of the widget's text. Valid values are `center`, `left`, `right`.\n"
                },
                "tickEdge": {
                    "type": "string",
                    "description": "When `tick = true`, a string indicating on which side of the widget the tick should be displayed. Valid values are `bottom`, `left`, `right`, `top`.\n"
                },
                "tickPos": {
                    "type": "string",
                    "description": "When `tick = true`, a string with a percent sign indicating the position of the tick, for example: `tick_pos = \"50%\"` is centered alignment.\n"
                },
                "verticalAlign": {
                    "type": "string",
                    "description": "The vertical alignment for the widget. Valid values are `center`, `top`, `bottom`.\n"
                }
            },
            "type": "object",
            "required": [
                "content"
            ]
        },
        "datadog:index/PowerpackWidgetQueryTableDefinition:PowerpackWidgetQueryTableDefinition": {
            "properties": {
                "customLinks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/PowerpackWidgetQueryTableDefinitionCustomLink:PowerpackWidgetQueryTableDefinitionCustomLink"
                    },
                    "description": "A nested block describing a custom link. Multiple `custom_link` blocks are allowed using the structure below.\n"
                },
                "hasSearchBar": {
                    "type": "string",
                    "description": "Controls the display of the search bar. Valid values are `always`, `never`, `auto`.\n"
                },
                "liveSpan": {
                    "type": "string",
                    "description": "The timeframe to use when displaying the widget. Valid values are `1m`, `5m`, `10m`, `15m`, `30m`, `1h`, `4h`, `1d`, `2d`, `1w`, `1mo`, `3mo`, `6mo`, `week_to_date`, `month_to_date`, `1y`, `alert`.\n"
                },
                "requests": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/PowerpackWidgetQueryTableDefinitionRequest:PowerpackWidgetQueryTableDefinitionRequest"
                    },
                    "description": "A nested block describing the request to use when displaying the widget. Multiple `request` blocks are allowed using the structure below (exactly one of `q`, `apm_query`, `log_query`, `rum_query`, `security_query`, `apm_stats_query` or `process_query` is required within the `request` block).\n"
                },
                "title": {
                    "type": "string",
                    "description": "The title of the widget.\n"
                },
                "titleAlign": {
                    "type": "string",
                    "description": "The alignment of the widget's title. Valid values are `center`, `left`, `right`.\n"
                },
                "titleSize": {
                    "type": "string",
                    "description": "The size of the widget's title (defaults to 16).\n"
                }
            },
            "type": "object"
        },
        "datadog:index/PowerpackWidgetQueryTableDefinitionCustomLink:PowerpackWidgetQueryTableDefinitionCustomLink": {
            "properties": {
                "isHidden": {
                    "type": "boolean",
                    "description": "The flag for toggling context menu link visibility.\n"
                },
                "label": {
                    "type": "string",
                    "description": "The label for the custom link URL.\n"
                },
                "link": {
                    "type": "string",
                    "description": "The URL of the custom link.\n"
                },
                "overrideLabel": {
                    "type": "string",
                    "description": "The label ID that refers to a context menu link item. When `override_label` is provided, the client request omits the label field.\n"
                }
            },
            "type": "object"
        },
        "datadog:index/PowerpackWidgetQueryTableDefinitionRequest:PowerpackWidgetQueryTableDefinitionRequest": {
            "properties": {
                "aggregator": {
                    "type": "string",
                    "description": "The aggregator to use for time aggregation. Valid values are `avg`, `last`, `max`, `min`, `sum`, `percentile`.\n"
                },
                "alias": {
                    "type": "string",
                    "description": "The alias for the column name (defaults to metric name).\n"
                },
                "apmQuery": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetQueryTableDefinitionRequestApmQuery:PowerpackWidgetQueryTableDefinitionRequestApmQuery",
                    "description": "The query to use for this widget.\n"
                },
                "apmStatsQuery": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetQueryTableDefinitionRequestApmStatsQuery:PowerpackWidgetQueryTableDefinitionRequestApmStatsQuery"
                },
                "cellDisplayModes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of display modes for each table cell. List items one of `number`, `bar`. Valid values are `number`, `bar`.\n"
                },
                "conditionalFormats": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/PowerpackWidgetQueryTableDefinitionRequestConditionalFormat:PowerpackWidgetQueryTableDefinitionRequestConditionalFormat"
                    },
                    "description": "Conditional formats allow you to set the color of your widget content or background, depending on the rule applied to your data. Multiple `conditional_formats` blocks are allowed using the structure below.\n"
                },
                "formulas": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/PowerpackWidgetQueryTableDefinitionRequestFormula:PowerpackWidgetQueryTableDefinitionRequestFormula"
                    }
                },
                "limit": {
                    "type": "integer",
                    "description": "The number of lines to show in the table.\n"
                },
                "logQuery": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetQueryTableDefinitionRequestLogQuery:PowerpackWidgetQueryTableDefinitionRequestLogQuery",
                    "description": "The query to use for this widget.\n"
                },
                "order": {
                    "type": "string",
                    "description": "The sort order for the rows. Valid values are `asc`, `desc`.\n"
                },
                "processQuery": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetQueryTableDefinitionRequestProcessQuery:PowerpackWidgetQueryTableDefinitionRequestProcessQuery",
                    "description": "The process query to use in the widget. The structure of this block is described below.\n"
                },
                "q": {
                    "type": "string",
                    "description": "The metric query to use for this widget.\n"
                },
                "queries": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/PowerpackWidgetQueryTableDefinitionRequestQuery:PowerpackWidgetQueryTableDefinitionRequestQuery"
                    }
                },
                "rumQuery": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetQueryTableDefinitionRequestRumQuery:PowerpackWidgetQueryTableDefinitionRequestRumQuery",
                    "description": "The query to use for this widget.\n"
                },
                "securityQuery": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetQueryTableDefinitionRequestSecurityQuery:PowerpackWidgetQueryTableDefinitionRequestSecurityQuery",
                    "description": "The query to use for this widget.\n"
                }
            },
            "type": "object"
        },
        "datadog:index/PowerpackWidgetQueryTableDefinitionRequestApmQuery:PowerpackWidgetQueryTableDefinitionRequestApmQuery": {
            "properties": {
                "computeQuery": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetQueryTableDefinitionRequestApmQueryComputeQuery:PowerpackWidgetQueryTableDefinitionRequestApmQueryComputeQuery",
                    "description": "`compute_query` or `multi_compute` is required. The map keys are listed below.\n"
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/PowerpackWidgetQueryTableDefinitionRequestApmQueryGroupBy:PowerpackWidgetQueryTableDefinitionRequestApmQueryGroupBy"
                    },
                    "description": "Multiple `group_by` blocks are allowed using the structure below.\n"
                },
                "index": {
                    "type": "string",
                    "description": "The name of the index to query.\n"
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/PowerpackWidgetQueryTableDefinitionRequestApmQueryMultiCompute:PowerpackWidgetQueryTableDefinitionRequestApmQueryMultiCompute"
                    },
                    "description": "`compute_query` or `multi_compute` is required. Multiple `multi_compute` blocks are allowed using the structure below.\n"
                },
                "searchQuery": {
                    "type": "string",
                    "description": "The search query to use.\n"
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/PowerpackWidgetQueryTableDefinitionRequestApmQueryComputeQuery:PowerpackWidgetQueryTableDefinitionRequestApmQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "The aggregation method.\n"
                },
                "facet": {
                    "type": "string",
                    "description": "The facet name.\n"
                },
                "interval": {
                    "type": "integer",
                    "description": "Define the time interval in seconds.\n"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/PowerpackWidgetQueryTableDefinitionRequestApmQueryGroupBy:PowerpackWidgetQueryTableDefinitionRequestApmQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "description": "The facet name.\n"
                },
                "limit": {
                    "type": "integer",
                    "description": "The maximum number of items in the group.\n"
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetQueryTableDefinitionRequestApmQueryGroupBySortQuery:PowerpackWidgetQueryTableDefinitionRequestApmQueryGroupBySortQuery",
                    "description": "A list of exactly one element describing the sort query to use.\n"
                }
            },
            "type": "object"
        },
        "datadog:index/PowerpackWidgetQueryTableDefinitionRequestApmQueryGroupBySortQuery:PowerpackWidgetQueryTableDefinitionRequestApmQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "The aggregation method.\n"
                },
                "facet": {
                    "type": "string",
                    "description": "The facet name.\n"
                },
                "order": {
                    "type": "string",
                    "description": "Widget sorting methods. Valid values are `asc`, `desc`.\n"
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/PowerpackWidgetQueryTableDefinitionRequestApmQueryMultiCompute:PowerpackWidgetQueryTableDefinitionRequestApmQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "The aggregation method.\n"
                },
                "facet": {
                    "type": "string",
                    "description": "The facet name.\n"
                },
                "interval": {
                    "type": "integer",
                    "description": "Define the time interval in seconds.\n"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/PowerpackWidgetQueryTableDefinitionRequestApmStatsQuery:PowerpackWidgetQueryTableDefinitionRequestApmStatsQuery": {
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/PowerpackWidgetQueryTableDefinitionRequestApmStatsQueryColumn:PowerpackWidgetQueryTableDefinitionRequestApmStatsQueryColumn"
                    },
                    "description": "Column properties used by the front end for display.\n"
                },
                "env": {
                    "type": "string",
                    "description": "The environment name.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The operation name associated with the service.\n"
                },
                "primaryTag": {
                    "type": "string",
                    "description": "The organization's host group name and value.\n"
                },
                "resource": {
                    "type": "string",
                    "description": "The resource name.\n"
                },
                "rowType": {
                    "type": "string",
                    "description": "The level of detail for the request. Valid values are `service`, `resource`, `span`.\n"
                },
                "service": {
                    "type": "string",
                    "description": "The service name.\n"
                }
            },
            "type": "object",
            "required": [
                "env",
                "name",
                "primaryTag",
                "rowType",
                "service"
            ]
        },
        "datadog:index/PowerpackWidgetQueryTableDefinitionRequestApmStatsQueryColumn:PowerpackWidgetQueryTableDefinitionRequestApmStatsQueryColumn": {
            "properties": {
                "alias": {
                    "type": "string",
                    "description": "A user-assigned alias for the column.\n"
                },
                "cellDisplayMode": {
                    "type": "string",
                    "description": "A list of display modes for each table cell. Valid values are `number`, `bar`.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The column name.\n"
                },
                "order": {
                    "type": "string",
                    "description": "Widget sorting methods. Valid values are `asc`, `desc`.\n"
                }
            },
            "type": "object",
            "required": [
                "name"
            ]
        },
        "datadog:index/PowerpackWidgetQueryTableDefinitionRequestConditionalFormat:PowerpackWidgetQueryTableDefinitionRequestConditionalFormat": {
            "properties": {
                "comparator": {
                    "type": "string",
                    "description": "The comparator to use. Valid values are `=`, `\u003e`, `\u003e=`, `\u003c`, `\u003c=`.\n"
                },
                "customBgColor": {
                    "type": "string",
                    "description": "The color palette to apply to the background, same values available as palette.\n"
                },
                "customFgColor": {
                    "type": "string",
                    "description": "The color palette to apply to the foreground, same values available as palette.\n"
                },
                "hideValue": {
                    "type": "boolean",
                    "description": "Setting this to True hides values.\n"
                },
                "imageUrl": {
                    "type": "string",
                    "description": "Displays an image as the background.\n"
                },
                "metric": {
                    "type": "string",
                    "description": "The metric from the request to correlate with this conditional format.\n"
                },
                "palette": {
                    "type": "string",
                    "description": "The color palette to apply. Valid values are `blue`, `custom_bg`, `custom_image`, `custom_text`, `gray_on_white`, `grey`, `green`, `orange`, `red`, `red_on_white`, `white_on_gray`, `white_on_green`, `green_on_white`, `white_on_red`, `white_on_yellow`, `yellow_on_white`, `black_on_light_yellow`, `black_on_light_green`, `black_on_light_red`.\n"
                },
                "timeframe": {
                    "type": "string",
                    "description": "Defines the displayed timeframe.\n"
                },
                "value": {
                    "type": "number",
                    "description": "A value for the comparator.\n"
                }
            },
            "type": "object",
            "required": [
                "comparator",
                "palette",
                "value"
            ]
        },
        "datadog:index/PowerpackWidgetQueryTableDefinitionRequestFormula:PowerpackWidgetQueryTableDefinitionRequestFormula": {
            "properties": {
                "alias": {
                    "type": "string",
                    "description": "An expression alias.\n"
                },
                "cellDisplayMode": {
                    "type": "string",
                    "description": "A list of display modes for each table cell. Valid values are `number`, `bar`.\n"
                },
                "conditionalFormats": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/PowerpackWidgetQueryTableDefinitionRequestFormulaConditionalFormat:PowerpackWidgetQueryTableDefinitionRequestFormulaConditionalFormat"
                    },
                    "description": "Conditional formats allow you to set the color of your widget content or background depending on the rule applied to your data. Multiple `conditional_formats` blocks are allowed using the structure below.\n"
                },
                "formulaExpression": {
                    "type": "string",
                    "description": "A string expression built from queries, formulas, and functions.\n"
                },
                "limit": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetQueryTableDefinitionRequestFormulaLimit:PowerpackWidgetQueryTableDefinitionRequestFormulaLimit",
                    "description": "The options for limiting results returned.\n"
                },
                "style": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetQueryTableDefinitionRequestFormulaStyle:PowerpackWidgetQueryTableDefinitionRequestFormulaStyle",
                    "description": "Styling options for widget formulas.\n"
                }
            },
            "type": "object",
            "required": [
                "formulaExpression"
            ]
        },
        "datadog:index/PowerpackWidgetQueryTableDefinitionRequestFormulaConditionalFormat:PowerpackWidgetQueryTableDefinitionRequestFormulaConditionalFormat": {
            "properties": {
                "comparator": {
                    "type": "string",
                    "description": "The comparator to use. Valid values are `=`, `\u003e`, `\u003e=`, `\u003c`, `\u003c=`.\n"
                },
                "customBgColor": {
                    "type": "string",
                    "description": "The color palette to apply to the background, same values available as palette.\n"
                },
                "customFgColor": {
                    "type": "string",
                    "description": "The color palette to apply to the foreground, same values available as palette.\n"
                },
                "hideValue": {
                    "type": "boolean",
                    "description": "Setting this to True hides values.\n"
                },
                "imageUrl": {
                    "type": "string",
                    "description": "Displays an image as the background.\n"
                },
                "metric": {
                    "type": "string",
                    "description": "The metric from the request to correlate with this conditional format.\n"
                },
                "palette": {
                    "type": "string",
                    "description": "The color palette to apply. Valid values are `blue`, `custom_bg`, `custom_image`, `custom_text`, `gray_on_white`, `grey`, `green`, `orange`, `red`, `red_on_white`, `white_on_gray`, `white_on_green`, `green_on_white`, `white_on_red`, `white_on_yellow`, `yellow_on_white`, `black_on_light_yellow`, `black_on_light_green`, `black_on_light_red`.\n"
                },
                "timeframe": {
                    "type": "string",
                    "description": "Defines the displayed timeframe.\n"
                },
                "value": {
                    "type": "number",
                    "description": "A value for the comparator.\n"
                }
            },
            "type": "object",
            "required": [
                "comparator",
                "palette",
                "value"
            ]
        },
        "datadog:index/PowerpackWidgetQueryTableDefinitionRequestFormulaLimit:PowerpackWidgetQueryTableDefinitionRequestFormulaLimit": {
            "properties": {
                "count": {
                    "type": "integer",
                    "description": "The number of results to return.\n"
                },
                "order": {
                    "type": "string",
                    "description": "The direction of the sort. Valid values are `asc`, `desc`. Defaults to `\"desc\"`.\n"
                }
            },
            "type": "object"
        },
        "datadog:index/PowerpackWidgetQueryTableDefinitionRequestFormulaStyle:PowerpackWidgetQueryTableDefinitionRequestFormulaStyle": {
            "properties": {
                "palette": {
                    "type": "string",
                    "description": "The color palette used to display the formula. A guide to the available color palettes can be found at https://docs.datadoghq.com/dashboards/guide/widget_colors.\n"
                },
                "paletteIndex": {
                    "type": "integer",
                    "description": "Index specifying which color to use within the palette.\n"
                }
            },
            "type": "object"
        },
        "datadog:index/PowerpackWidgetQueryTableDefinitionRequestLogQuery:PowerpackWidgetQueryTableDefinitionRequestLogQuery": {
            "properties": {
                "computeQuery": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetQueryTableDefinitionRequestLogQueryComputeQuery:PowerpackWidgetQueryTableDefinitionRequestLogQueryComputeQuery",
                    "description": "`compute_query` or `multi_compute` is required. The map keys are listed below.\n"
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/PowerpackWidgetQueryTableDefinitionRequestLogQueryGroupBy:PowerpackWidgetQueryTableDefinitionRequestLogQueryGroupBy"
                    },
                    "description": "Multiple `group_by` blocks are allowed using the structure below.\n"
                },
                "index": {
                    "type": "string",
                    "description": "The name of the index to query.\n"
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/PowerpackWidgetQueryTableDefinitionRequestLogQueryMultiCompute:PowerpackWidgetQueryTableDefinitionRequestLogQueryMultiCompute"
                    },
                    "description": "`compute_query` or `multi_compute` is required. Multiple `multi_compute` blocks are allowed using the structure below.\n"
                },
                "searchQuery": {
                    "type": "string",
                    "description": "The search query to use.\n"
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/PowerpackWidgetQueryTableDefinitionRequestLogQueryComputeQuery:PowerpackWidgetQueryTableDefinitionRequestLogQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "The aggregation method.\n"
                },
                "facet": {
                    "type": "string",
                    "description": "The facet name.\n"
                },
                "interval": {
                    "type": "integer",
                    "description": "Define the time interval in seconds.\n"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/PowerpackWidgetQueryTableDefinitionRequestLogQueryGroupBy:PowerpackWidgetQueryTableDefinitionRequestLogQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "description": "The facet name.\n"
                },
                "limit": {
                    "type": "integer",
                    "description": "The maximum number of items in the group.\n"
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetQueryTableDefinitionRequestLogQueryGroupBySortQuery:PowerpackWidgetQueryTableDefinitionRequestLogQueryGroupBySortQuery",
                    "description": "A list of exactly one element describing the sort query to use.\n"
                }
            },
            "type": "object"
        },
        "datadog:index/PowerpackWidgetQueryTableDefinitionRequestLogQueryGroupBySortQuery:PowerpackWidgetQueryTableDefinitionRequestLogQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "The aggregation method.\n"
                },
                "facet": {
                    "type": "string",
                    "description": "The facet name.\n"
                },
                "order": {
                    "type": "string",
                    "description": "Widget sorting methods. Valid values are `asc`, `desc`.\n"
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/PowerpackWidgetQueryTableDefinitionRequestLogQueryMultiCompute:PowerpackWidgetQueryTableDefinitionRequestLogQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "The aggregation method.\n"
                },
                "facet": {
                    "type": "string",
                    "description": "The facet name.\n"
                },
                "interval": {
                    "type": "integer",
                    "description": "Define the time interval in seconds.\n"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/PowerpackWidgetQueryTableDefinitionRequestProcessQuery:PowerpackWidgetQueryTableDefinitionRequestProcessQuery": {
            "properties": {
                "filterBies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of processes.\n"
                },
                "limit": {
                    "type": "integer",
                    "description": "The max number of items in the filter list.\n"
                },
                "metric": {
                    "type": "string",
                    "description": "Your chosen metric.\n"
                },
                "searchBy": {
                    "type": "string",
                    "description": "Your chosen search term.\n"
                }
            },
            "type": "object",
            "required": [
                "metric"
            ]
        },
        "datadog:index/PowerpackWidgetQueryTableDefinitionRequestQuery:PowerpackWidgetQueryTableDefinitionRequestQuery": {
            "properties": {
                "apmDependencyStatsQuery": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetQueryTableDefinitionRequestQueryApmDependencyStatsQuery:PowerpackWidgetQueryTableDefinitionRequestQueryApmDependencyStatsQuery",
                    "description": "The APM Dependency Stats query using formulas and functions.\n"
                },
                "apmResourceStatsQuery": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetQueryTableDefinitionRequestQueryApmResourceStatsQuery:PowerpackWidgetQueryTableDefinitionRequestQueryApmResourceStatsQuery",
                    "description": "The APM Resource Stats query using formulas and functions.\n"
                },
                "cloudCostQuery": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetQueryTableDefinitionRequestQueryCloudCostQuery:PowerpackWidgetQueryTableDefinitionRequestQueryCloudCostQuery",
                    "description": "The Cloud Cost query using formulas and functions.\n"
                },
                "eventQuery": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetQueryTableDefinitionRequestQueryEventQuery:PowerpackWidgetQueryTableDefinitionRequestQueryEventQuery",
                    "description": "A timeseries formula and functions events query.\n"
                },
                "metricQuery": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetQueryTableDefinitionRequestQueryMetricQuery:PowerpackWidgetQueryTableDefinitionRequestQueryMetricQuery",
                    "description": "A timeseries formula and functions metrics query.\n"
                },
                "processQuery": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetQueryTableDefinitionRequestQueryProcessQuery:PowerpackWidgetQueryTableDefinitionRequestQueryProcessQuery",
                    "description": "The process query using formulas and functions.\n"
                },
                "sloQuery": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetQueryTableDefinitionRequestQuerySloQuery:PowerpackWidgetQueryTableDefinitionRequestQuerySloQuery",
                    "description": "The SLO query using formulas and functions.\n"
                }
            },
            "type": "object"
        },
        "datadog:index/PowerpackWidgetQueryTableDefinitionRequestQueryApmDependencyStatsQuery:PowerpackWidgetQueryTableDefinitionRequestQueryApmDependencyStatsQuery": {
            "properties": {
                "crossOrgUuids": {
                    "type": "string",
                    "description": "The source organization UUID for cross organization queries. Feature in Private Beta.\n"
                },
                "dataSource": {
                    "type": "string",
                    "description": "The data source for APM Dependency Stats queries. Valid values are `apm_dependency_stats`.\n"
                },
                "env": {
                    "type": "string",
                    "description": "APM environment.\n"
                },
                "isUpstream": {
                    "type": "boolean",
                    "description": "Determines whether stats for upstream or downstream dependencies should be queried.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of query for use in formulas.\n"
                },
                "operationName": {
                    "type": "string",
                    "description": "Name of operation on service.\n"
                },
                "primaryTagName": {
                    "type": "string",
                    "description": "The name of the second primary tag used within APM; required when `primary_tag_value` is specified. See https://docs.datadoghq.com/tracing/guide/setting*primary*tags*to*scope/#add-a-second-primary-tag-in-datadog.\n"
                },
                "primaryTagValue": {
                    "type": "string",
                    "description": "Filter APM data by the second primary tag. `primary_tag_name` must also be specified.\n"
                },
                "resourceName": {
                    "type": "string",
                    "description": "APM resource.\n"
                },
                "service": {
                    "type": "string",
                    "description": "APM service.\n"
                },
                "stat": {
                    "type": "string",
                    "description": "APM statistic. Valid values are `avg_duration`, `avg_root_duration`, `avg_spans_per_trace`, `error_rate`, `pct_exec_time`, `pct_of_traces`, `total_traces_count`.\n"
                }
            },
            "type": "object",
            "required": [
                "dataSource",
                "env",
                "name",
                "operationName",
                "resourceName",
                "service",
                "stat"
            ]
        },
        "datadog:index/PowerpackWidgetQueryTableDefinitionRequestQueryApmResourceStatsQuery:PowerpackWidgetQueryTableDefinitionRequestQueryApmResourceStatsQuery": {
            "properties": {
                "crossOrgUuids": {
                    "type": "string",
                    "description": "The source organization UUID for cross organization queries. Feature in Private Beta.\n"
                },
                "dataSource": {
                    "type": "string",
                    "description": "The data source for APM Resource Stats queries. Valid values are `apm_resource_stats`.\n"
                },
                "env": {
                    "type": "string",
                    "description": "APM environment.\n"
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Array of fields to group results by.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of query for use in formulas.\n"
                },
                "operationName": {
                    "type": "string",
                    "description": "Name of operation on service.\n"
                },
                "primaryTagName": {
                    "type": "string",
                    "description": "The name of the second primary tag used within APM; required when `primary_tag_value` is specified. See https://docs.datadoghq.com/tracing/guide/setting*primary*tags*to*scope/#add-a-second-primary-tag-in-datadog.\n"
                },
                "primaryTagValue": {
                    "type": "string",
                    "description": "Filter APM data by the second primary tag. `primary_tag_name` must also be specified.\n"
                },
                "resourceName": {
                    "type": "string",
                    "description": "APM resource.\n"
                },
                "service": {
                    "type": "string",
                    "description": "APM service.\n"
                },
                "stat": {
                    "type": "string",
                    "description": "APM statistic. Valid values are `errors`, `error_rate`, `hits`, `latency_avg`, `latency_distribution`, `latency_max`, `latency_p50`, `latency_p75`, `latency_p90`, `latency_p95`, `latency_p99`.\n"
                }
            },
            "type": "object",
            "required": [
                "dataSource",
                "env",
                "name",
                "service",
                "stat"
            ]
        },
        "datadog:index/PowerpackWidgetQueryTableDefinitionRequestQueryCloudCostQuery:PowerpackWidgetQueryTableDefinitionRequestQueryCloudCostQuery": {
            "properties": {
                "aggregator": {
                    "type": "string",
                    "description": "The aggregation methods available for cloud cost queries. Valid values are `avg`, `last`, `max`, `min`, `sum`, `percentile`.\n"
                },
                "crossOrgUuids": {
                    "type": "string",
                    "description": "The source organization UUID for cross organization queries. Feature in Private Beta.\n"
                },
                "dataSource": {
                    "type": "string",
                    "description": "The data source for cloud cost queries. Valid values are `cloud_cost`.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the query for use in formulas.\n"
                },
                "query": {
                    "type": "string",
                    "description": "The cloud cost query definition.\n"
                }
            },
            "type": "object",
            "required": [
                "dataSource",
                "name",
                "query"
            ]
        },
        "datadog:index/PowerpackWidgetQueryTableDefinitionRequestQueryEventQuery:PowerpackWidgetQueryTableDefinitionRequestQueryEventQuery": {
            "properties": {
                "computes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/PowerpackWidgetQueryTableDefinitionRequestQueryEventQueryCompute:PowerpackWidgetQueryTableDefinitionRequestQueryEventQueryCompute"
                    },
                    "description": "The compute options.\n"
                },
                "crossOrgUuids": {
                    "type": "string",
                    "description": "The source organization UUID for cross organization queries. Feature in Private Beta.\n"
                },
                "dataSource": {
                    "type": "string",
                    "description": "The data source for event platform-based queries. Valid values are `logs`, `spans`, `network`, `rum`, `security_signals`, `profiles`, `audit`, `events`, `ci_tests`, `ci_pipelines`, `incident_analytics`.\n"
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/PowerpackWidgetQueryTableDefinitionRequestQueryEventQueryGroupBy:PowerpackWidgetQueryTableDefinitionRequestQueryEventQueryGroupBy"
                    },
                    "description": "Group by options.\n"
                },
                "indexes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "An array of index names to query in the stream.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of query for use in formulas.\n"
                },
                "search": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetQueryTableDefinitionRequestQueryEventQuerySearch:PowerpackWidgetQueryTableDefinitionRequestQueryEventQuerySearch",
                    "description": "The search options.\n"
                },
                "storage": {
                    "type": "string",
                    "description": "Storage location (private beta).\n"
                }
            },
            "type": "object",
            "required": [
                "computes",
                "dataSource",
                "name"
            ]
        },
        "datadog:index/PowerpackWidgetQueryTableDefinitionRequestQueryEventQueryCompute:PowerpackWidgetQueryTableDefinitionRequestQueryEventQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "The aggregation methods for event platform queries. Valid values are `count`, `cardinality`, `median`, `pc75`, `pc90`, `pc95`, `pc98`, `pc99`, `sum`, `min`, `max`, `avg`.\n"
                },
                "interval": {
                    "type": "integer",
                    "description": "A time interval in milliseconds.\n"
                },
                "metric": {
                    "type": "string",
                    "description": "The measurable attribute to compute.\n"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/PowerpackWidgetQueryTableDefinitionRequestQueryEventQueryGroupBy:PowerpackWidgetQueryTableDefinitionRequestQueryEventQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "description": "The event facet.\n"
                },
                "limit": {
                    "type": "integer",
                    "description": "The number of groups to return.\n"
                },
                "sort": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetQueryTableDefinitionRequestQueryEventQueryGroupBySort:PowerpackWidgetQueryTableDefinitionRequestQueryEventQueryGroupBySort",
                    "description": "The options for sorting group by results.\n"
                }
            },
            "type": "object",
            "required": [
                "facet"
            ]
        },
        "datadog:index/PowerpackWidgetQueryTableDefinitionRequestQueryEventQueryGroupBySort:PowerpackWidgetQueryTableDefinitionRequestQueryEventQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "The aggregation methods for the event platform queries. Valid values are `count`, `cardinality`, `median`, `pc75`, `pc90`, `pc95`, `pc98`, `pc99`, `sum`, `min`, `max`, `avg`.\n"
                },
                "metric": {
                    "type": "string",
                    "description": "The metric used for sorting group by results.\n"
                },
                "order": {
                    "type": "string",
                    "description": "Direction of sort. Valid values are `asc`, `desc`.\n"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/PowerpackWidgetQueryTableDefinitionRequestQueryEventQuerySearch:PowerpackWidgetQueryTableDefinitionRequestQueryEventQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "description": "The events search string.\n"
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/PowerpackWidgetQueryTableDefinitionRequestQueryMetricQuery:PowerpackWidgetQueryTableDefinitionRequestQueryMetricQuery": {
            "properties": {
                "aggregator": {
                    "type": "string",
                    "description": "The aggregation methods available for metrics queries. Valid values are `avg`, `min`, `max`, `sum`, `last`, `area`, `l2norm`, `percentile`.\n"
                },
                "crossOrgUuids": {
                    "type": "string",
                    "description": "The source organization UUID for cross organization queries. Feature in Private Beta.\n"
                },
                "dataSource": {
                    "type": "string",
                    "description": "The data source for metrics queries. Defaults to `\"metrics\"`.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the query for use in formulas.\n"
                },
                "query": {
                    "type": "string",
                    "description": "The metrics query definition.\n"
                }
            },
            "type": "object",
            "required": [
                "name",
                "query"
            ]
        },
        "datadog:index/PowerpackWidgetQueryTableDefinitionRequestQueryProcessQuery:PowerpackWidgetQueryTableDefinitionRequestQueryProcessQuery": {
            "properties": {
                "aggregator": {
                    "type": "string",
                    "description": "The aggregation methods available for metrics queries. Valid values are `avg`, `min`, `max`, `sum`, `last`, `area`, `l2norm`, `percentile`.\n"
                },
                "crossOrgUuids": {
                    "type": "string",
                    "description": "The source organization UUID for cross organization queries. Feature in Private Beta.\n"
                },
                "dataSource": {
                    "type": "string",
                    "description": "The data source for process queries. Valid values are `process`, `container`.\n"
                },
                "isNormalizedCpu": {
                    "type": "boolean",
                    "description": "Whether to normalize the CPU percentages.\n"
                },
                "limit": {
                    "type": "integer",
                    "description": "The number of hits to return.\n"
                },
                "metric": {
                    "type": "string",
                    "description": "The process metric name.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of query for use in formulas.\n"
                },
                "sort": {
                    "type": "string",
                    "description": "The direction of the sort. Valid values are `asc`, `desc`. Defaults to `\"desc\"`.\n"
                },
                "tagFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "An array of tags to filter by.\n"
                },
                "textFilter": {
                    "type": "string",
                    "description": "The text to use as a filter.\n"
                }
            },
            "type": "object",
            "required": [
                "dataSource",
                "metric",
                "name"
            ]
        },
        "datadog:index/PowerpackWidgetQueryTableDefinitionRequestQuerySloQuery:PowerpackWidgetQueryTableDefinitionRequestQuerySloQuery": {
            "properties": {
                "additionalQueryFilters": {
                    "type": "string",
                    "description": "Additional filters applied to the SLO query.\n"
                },
                "crossOrgUuids": {
                    "type": "string",
                    "description": "The source organization UUID for cross organization queries. Feature in Private Beta.\n"
                },
                "dataSource": {
                    "type": "string",
                    "description": "The data source for SLO queries. Valid values are `slo`.\n"
                },
                "groupMode": {
                    "type": "string",
                    "description": "Group mode to query measures. Valid values are `overall`, `components`. Defaults to `\"overall\"`.\n"
                },
                "measure": {
                    "type": "string",
                    "description": "SLO measures queries. Valid values are `good_events`, `bad_events`, `slo_status`, `error_budget_remaining`, `burn_rate`, `error_budget_burndown`.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of query for use in formulas.\n"
                },
                "sloId": {
                    "type": "string",
                    "description": "ID of an SLO to query.\n"
                },
                "sloQueryType": {
                    "type": "string",
                    "description": "type of the SLO to query. Valid values are `metric`, `time_slice`. Defaults to `\"metric\"`.\n"
                }
            },
            "type": "object",
            "required": [
                "dataSource",
                "measure",
                "sloId"
            ]
        },
        "datadog:index/PowerpackWidgetQueryTableDefinitionRequestRumQuery:PowerpackWidgetQueryTableDefinitionRequestRumQuery": {
            "properties": {
                "computeQuery": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetQueryTableDefinitionRequestRumQueryComputeQuery:PowerpackWidgetQueryTableDefinitionRequestRumQueryComputeQuery",
                    "description": "`compute_query` or `multi_compute` is required. The map keys are listed below.\n"
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/PowerpackWidgetQueryTableDefinitionRequestRumQueryGroupBy:PowerpackWidgetQueryTableDefinitionRequestRumQueryGroupBy"
                    },
                    "description": "Multiple `group_by` blocks are allowed using the structure below.\n"
                },
                "index": {
                    "type": "string",
                    "description": "The name of the index to query.\n"
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/PowerpackWidgetQueryTableDefinitionRequestRumQueryMultiCompute:PowerpackWidgetQueryTableDefinitionRequestRumQueryMultiCompute"
                    },
                    "description": "`compute_query` or `multi_compute` is required. Multiple `multi_compute` blocks are allowed using the structure below.\n"
                },
                "searchQuery": {
                    "type": "string",
                    "description": "The search query to use.\n"
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/PowerpackWidgetQueryTableDefinitionRequestRumQueryComputeQuery:PowerpackWidgetQueryTableDefinitionRequestRumQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "The aggregation method.\n"
                },
                "facet": {
                    "type": "string",
                    "description": "The facet name.\n"
                },
                "interval": {
                    "type": "integer",
                    "description": "Define the time interval in seconds.\n"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/PowerpackWidgetQueryTableDefinitionRequestRumQueryGroupBy:PowerpackWidgetQueryTableDefinitionRequestRumQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "description": "The facet name.\n"
                },
                "limit": {
                    "type": "integer",
                    "description": "The maximum number of items in the group.\n"
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetQueryTableDefinitionRequestRumQueryGroupBySortQuery:PowerpackWidgetQueryTableDefinitionRequestRumQueryGroupBySortQuery",
                    "description": "A list of exactly one element describing the sort query to use.\n"
                }
            },
            "type": "object"
        },
        "datadog:index/PowerpackWidgetQueryTableDefinitionRequestRumQueryGroupBySortQuery:PowerpackWidgetQueryTableDefinitionRequestRumQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "The aggregation method.\n"
                },
                "facet": {
                    "type": "string",
                    "description": "The facet name.\n"
                },
                "order": {
                    "type": "string",
                    "description": "Widget sorting methods. Valid values are `asc`, `desc`.\n"
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/PowerpackWidgetQueryTableDefinitionRequestRumQueryMultiCompute:PowerpackWidgetQueryTableDefinitionRequestRumQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "The aggregation method.\n"
                },
                "facet": {
                    "type": "string",
                    "description": "The facet name.\n"
                },
                "interval": {
                    "type": "integer",
                    "description": "Define the time interval in seconds.\n"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/PowerpackWidgetQueryTableDefinitionRequestSecurityQuery:PowerpackWidgetQueryTableDefinitionRequestSecurityQuery": {
            "properties": {
                "computeQuery": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetQueryTableDefinitionRequestSecurityQueryComputeQuery:PowerpackWidgetQueryTableDefinitionRequestSecurityQueryComputeQuery",
                    "description": "`compute_query` or `multi_compute` is required. The map keys are listed below.\n"
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/PowerpackWidgetQueryTableDefinitionRequestSecurityQueryGroupBy:PowerpackWidgetQueryTableDefinitionRequestSecurityQueryGroupBy"
                    },
                    "description": "Multiple `group_by` blocks are allowed using the structure below.\n"
                },
                "index": {
                    "type": "string",
                    "description": "The name of the index to query.\n"
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/PowerpackWidgetQueryTableDefinitionRequestSecurityQueryMultiCompute:PowerpackWidgetQueryTableDefinitionRequestSecurityQueryMultiCompute"
                    },
                    "description": "`compute_query` or `multi_compute` is required. Multiple `multi_compute` blocks are allowed using the structure below.\n"
                },
                "searchQuery": {
                    "type": "string",
                    "description": "The search query to use.\n"
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/PowerpackWidgetQueryTableDefinitionRequestSecurityQueryComputeQuery:PowerpackWidgetQueryTableDefinitionRequestSecurityQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "The aggregation method.\n"
                },
                "facet": {
                    "type": "string",
                    "description": "The facet name.\n"
                },
                "interval": {
                    "type": "integer",
                    "description": "Define the time interval in seconds.\n"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/PowerpackWidgetQueryTableDefinitionRequestSecurityQueryGroupBy:PowerpackWidgetQueryTableDefinitionRequestSecurityQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "description": "The facet name.\n"
                },
                "limit": {
                    "type": "integer",
                    "description": "The maximum number of items in the group.\n"
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetQueryTableDefinitionRequestSecurityQueryGroupBySortQuery:PowerpackWidgetQueryTableDefinitionRequestSecurityQueryGroupBySortQuery",
                    "description": "A list of exactly one element describing the sort query to use.\n"
                }
            },
            "type": "object"
        },
        "datadog:index/PowerpackWidgetQueryTableDefinitionRequestSecurityQueryGroupBySortQuery:PowerpackWidgetQueryTableDefinitionRequestSecurityQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "The aggregation method.\n"
                },
                "facet": {
                    "type": "string",
                    "description": "The facet name.\n"
                },
                "order": {
                    "type": "string",
                    "description": "Widget sorting methods. Valid values are `asc`, `desc`.\n"
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/PowerpackWidgetQueryTableDefinitionRequestSecurityQueryMultiCompute:PowerpackWidgetQueryTableDefinitionRequestSecurityQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "The aggregation method.\n"
                },
                "facet": {
                    "type": "string",
                    "description": "The facet name.\n"
                },
                "interval": {
                    "type": "integer",
                    "description": "Define the time interval in seconds.\n"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/PowerpackWidgetQueryValueDefinition:PowerpackWidgetQueryValueDefinition": {
            "properties": {
                "autoscale": {
                    "type": "boolean",
                    "description": "A Boolean indicating whether to automatically scale the tile.\n"
                },
                "customLinks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/PowerpackWidgetQueryValueDefinitionCustomLink:PowerpackWidgetQueryValueDefinitionCustomLink"
                    },
                    "description": "A nested block describing a custom link. Multiple `custom_link` blocks are allowed using the structure below.\n"
                },
                "customUnit": {
                    "type": "string",
                    "description": "The unit for the value displayed in the widget.\n"
                },
                "liveSpan": {
                    "type": "string",
                    "description": "The timeframe to use when displaying the widget. Valid values are `1m`, `5m`, `10m`, `15m`, `30m`, `1h`, `4h`, `1d`, `2d`, `1w`, `1mo`, `3mo`, `6mo`, `week_to_date`, `month_to_date`, `1y`, `alert`.\n"
                },
                "precision": {
                    "type": "integer",
                    "description": "The precision to use when displaying the tile.\n"
                },
                "requests": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/PowerpackWidgetQueryValueDefinitionRequest:PowerpackWidgetQueryValueDefinitionRequest"
                    },
                    "description": "A nested block describing the request to use when displaying the widget. Multiple `request` blocks are allowed using the structure below (exactly one of `q`, `apm_query`, `log_query`, `rum_query`, `security_query` or `process_query` is required within the `request` block).\n"
                },
                "textAlign": {
                    "type": "string",
                    "description": "The alignment of the widget's text. Valid values are `center`, `left`, `right`.\n"
                },
                "timeseriesBackground": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetQueryValueDefinitionTimeseriesBackground:PowerpackWidgetQueryValueDefinitionTimeseriesBackground",
                    "description": "Set a timeseries on the widget background.\n"
                },
                "title": {
                    "type": "string",
                    "description": "The title of the widget.\n"
                },
                "titleAlign": {
                    "type": "string",
                    "description": "The alignment of the widget's title. Valid values are `center`, `left`, `right`.\n"
                },
                "titleSize": {
                    "type": "string",
                    "description": "The size of the widget's title (defaults to 16).\n"
                }
            },
            "type": "object"
        },
        "datadog:index/PowerpackWidgetQueryValueDefinitionCustomLink:PowerpackWidgetQueryValueDefinitionCustomLink": {
            "properties": {
                "isHidden": {
                    "type": "boolean",
                    "description": "The flag for toggling context menu link visibility.\n"
                },
                "label": {
                    "type": "string",
                    "description": "The label for the custom link URL.\n"
                },
                "link": {
                    "type": "string",
                    "description": "The URL of the custom link.\n"
                },
                "overrideLabel": {
                    "type": "string",
                    "description": "The label ID that refers to a context menu link item. When `override_label` is provided, the client request omits the label field.\n"
                }
            },
            "type": "object"
        },
        "datadog:index/PowerpackWidgetQueryValueDefinitionRequest:PowerpackWidgetQueryValueDefinitionRequest": {
            "properties": {
                "aggregator": {
                    "type": "string",
                    "description": "The aggregator to use for time aggregation. Valid values are `avg`, `last`, `max`, `min`, `sum`, `percentile`.\n"
                },
                "apmQuery": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetQueryValueDefinitionRequestApmQuery:PowerpackWidgetQueryValueDefinitionRequestApmQuery",
                    "description": "The query to use for this widget.\n"
                },
                "auditQuery": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetQueryValueDefinitionRequestAuditQuery:PowerpackWidgetQueryValueDefinitionRequestAuditQuery",
                    "description": "The query to use for this widget.\n"
                },
                "conditionalFormats": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/PowerpackWidgetQueryValueDefinitionRequestConditionalFormat:PowerpackWidgetQueryValueDefinitionRequestConditionalFormat"
                    },
                    "description": "Conditional formats allow you to set the color of your widget content or background depending on the rule applied to your data. Multiple `conditional_formats` blocks are allowed using the structure below.\n"
                },
                "formulas": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/PowerpackWidgetQueryValueDefinitionRequestFormula:PowerpackWidgetQueryValueDefinitionRequestFormula"
                    }
                },
                "logQuery": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetQueryValueDefinitionRequestLogQuery:PowerpackWidgetQueryValueDefinitionRequestLogQuery",
                    "description": "The query to use for this widget.\n"
                },
                "processQuery": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetQueryValueDefinitionRequestProcessQuery:PowerpackWidgetQueryValueDefinitionRequestProcessQuery",
                    "description": "The process query to use in the widget. The structure of this block is described below.\n"
                },
                "q": {
                    "type": "string",
                    "description": "The metric query to use for this widget.\n"
                },
                "queries": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/PowerpackWidgetQueryValueDefinitionRequestQuery:PowerpackWidgetQueryValueDefinitionRequestQuery"
                    }
                },
                "rumQuery": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetQueryValueDefinitionRequestRumQuery:PowerpackWidgetQueryValueDefinitionRequestRumQuery",
                    "description": "The query to use for this widget.\n"
                },
                "securityQuery": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetQueryValueDefinitionRequestSecurityQuery:PowerpackWidgetQueryValueDefinitionRequestSecurityQuery",
                    "description": "The query to use for this widget.\n"
                }
            },
            "type": "object"
        },
        "datadog:index/PowerpackWidgetQueryValueDefinitionRequestApmQuery:PowerpackWidgetQueryValueDefinitionRequestApmQuery": {
            "properties": {
                "computeQuery": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetQueryValueDefinitionRequestApmQueryComputeQuery:PowerpackWidgetQueryValueDefinitionRequestApmQueryComputeQuery",
                    "description": "`compute_query` or `multi_compute` is required. The map keys are listed below.\n"
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/PowerpackWidgetQueryValueDefinitionRequestApmQueryGroupBy:PowerpackWidgetQueryValueDefinitionRequestApmQueryGroupBy"
                    },
                    "description": "Multiple `group_by` blocks are allowed using the structure below.\n"
                },
                "index": {
                    "type": "string",
                    "description": "The name of the index to query.\n"
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/PowerpackWidgetQueryValueDefinitionRequestApmQueryMultiCompute:PowerpackWidgetQueryValueDefinitionRequestApmQueryMultiCompute"
                    },
                    "description": "`compute_query` or `multi_compute` is required. Multiple `multi_compute` blocks are allowed using the structure below.\n"
                },
                "searchQuery": {
                    "type": "string",
                    "description": "The search query to use.\n"
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/PowerpackWidgetQueryValueDefinitionRequestApmQueryComputeQuery:PowerpackWidgetQueryValueDefinitionRequestApmQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "The aggregation method.\n"
                },
                "facet": {
                    "type": "string",
                    "description": "The facet name.\n"
                },
                "interval": {
                    "type": "integer",
                    "description": "Define the time interval in seconds.\n"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/PowerpackWidgetQueryValueDefinitionRequestApmQueryGroupBy:PowerpackWidgetQueryValueDefinitionRequestApmQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "description": "The facet name.\n"
                },
                "limit": {
                    "type": "integer",
                    "description": "The maximum number of items in the group.\n"
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetQueryValueDefinitionRequestApmQueryGroupBySortQuery:PowerpackWidgetQueryValueDefinitionRequestApmQueryGroupBySortQuery",
                    "description": "A list of exactly one element describing the sort query to use.\n"
                }
            },
            "type": "object"
        },
        "datadog:index/PowerpackWidgetQueryValueDefinitionRequestApmQueryGroupBySortQuery:PowerpackWidgetQueryValueDefinitionRequestApmQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "The aggregation method.\n"
                },
                "facet": {
                    "type": "string",
                    "description": "The facet name.\n"
                },
                "order": {
                    "type": "string",
                    "description": "Widget sorting methods. Valid values are `asc`, `desc`.\n"
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/PowerpackWidgetQueryValueDefinitionRequestApmQueryMultiCompute:PowerpackWidgetQueryValueDefinitionRequestApmQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "The aggregation method.\n"
                },
                "facet": {
                    "type": "string",
                    "description": "The facet name.\n"
                },
                "interval": {
                    "type": "integer",
                    "description": "Define the time interval in seconds.\n"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/PowerpackWidgetQueryValueDefinitionRequestAuditQuery:PowerpackWidgetQueryValueDefinitionRequestAuditQuery": {
            "properties": {
                "computeQuery": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetQueryValueDefinitionRequestAuditQueryComputeQuery:PowerpackWidgetQueryValueDefinitionRequestAuditQueryComputeQuery",
                    "description": "`compute_query` or `multi_compute` is required. The map keys are listed below.\n"
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/PowerpackWidgetQueryValueDefinitionRequestAuditQueryGroupBy:PowerpackWidgetQueryValueDefinitionRequestAuditQueryGroupBy"
                    },
                    "description": "Multiple `group_by` blocks are allowed using the structure below.\n"
                },
                "index": {
                    "type": "string",
                    "description": "The name of the index to query.\n"
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/PowerpackWidgetQueryValueDefinitionRequestAuditQueryMultiCompute:PowerpackWidgetQueryValueDefinitionRequestAuditQueryMultiCompute"
                    },
                    "description": "`compute_query` or `multi_compute` is required. Multiple `multi_compute` blocks are allowed using the structure below.\n"
                },
                "searchQuery": {
                    "type": "string",
                    "description": "The search query to use.\n"
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/PowerpackWidgetQueryValueDefinitionRequestAuditQueryComputeQuery:PowerpackWidgetQueryValueDefinitionRequestAuditQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "The aggregation method.\n"
                },
                "facet": {
                    "type": "string",
                    "description": "The facet name.\n"
                },
                "interval": {
                    "type": "integer",
                    "description": "Define the time interval in seconds.\n"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/PowerpackWidgetQueryValueDefinitionRequestAuditQueryGroupBy:PowerpackWidgetQueryValueDefinitionRequestAuditQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "description": "The facet name.\n"
                },
                "limit": {
                    "type": "integer",
                    "description": "The maximum number of items in the group.\n"
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetQueryValueDefinitionRequestAuditQueryGroupBySortQuery:PowerpackWidgetQueryValueDefinitionRequestAuditQueryGroupBySortQuery",
                    "description": "A list of exactly one element describing the sort query to use.\n"
                }
            },
            "type": "object"
        },
        "datadog:index/PowerpackWidgetQueryValueDefinitionRequestAuditQueryGroupBySortQuery:PowerpackWidgetQueryValueDefinitionRequestAuditQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "The aggregation method.\n"
                },
                "facet": {
                    "type": "string",
                    "description": "The facet name.\n"
                },
                "order": {
                    "type": "string",
                    "description": "Widget sorting methods. Valid values are `asc`, `desc`.\n"
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/PowerpackWidgetQueryValueDefinitionRequestAuditQueryMultiCompute:PowerpackWidgetQueryValueDefinitionRequestAuditQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "The aggregation method.\n"
                },
                "facet": {
                    "type": "string",
                    "description": "The facet name.\n"
                },
                "interval": {
                    "type": "integer",
                    "description": "Define the time interval in seconds.\n"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/PowerpackWidgetQueryValueDefinitionRequestConditionalFormat:PowerpackWidgetQueryValueDefinitionRequestConditionalFormat": {
            "properties": {
                "comparator": {
                    "type": "string",
                    "description": "The comparator to use. Valid values are `=`, `\u003e`, `\u003e=`, `\u003c`, `\u003c=`.\n"
                },
                "customBgColor": {
                    "type": "string",
                    "description": "The color palette to apply to the background, same values available as palette.\n"
                },
                "customFgColor": {
                    "type": "string",
                    "description": "The color palette to apply to the foreground, same values available as palette.\n"
                },
                "hideValue": {
                    "type": "boolean",
                    "description": "Setting this to True hides values.\n"
                },
                "imageUrl": {
                    "type": "string",
                    "description": "Displays an image as the background.\n"
                },
                "metric": {
                    "type": "string",
                    "description": "The metric from the request to correlate with this conditional format.\n"
                },
                "palette": {
                    "type": "string",
                    "description": "The color palette to apply. Valid values are `blue`, `custom_bg`, `custom_image`, `custom_text`, `gray_on_white`, `grey`, `green`, `orange`, `red`, `red_on_white`, `white_on_gray`, `white_on_green`, `green_on_white`, `white_on_red`, `white_on_yellow`, `yellow_on_white`, `black_on_light_yellow`, `black_on_light_green`, `black_on_light_red`.\n"
                },
                "timeframe": {
                    "type": "string",
                    "description": "Defines the displayed timeframe.\n"
                },
                "value": {
                    "type": "number",
                    "description": "A value for the comparator.\n"
                }
            },
            "type": "object",
            "required": [
                "comparator",
                "palette",
                "value"
            ]
        },
        "datadog:index/PowerpackWidgetQueryValueDefinitionRequestFormula:PowerpackWidgetQueryValueDefinitionRequestFormula": {
            "properties": {
                "alias": {
                    "type": "string",
                    "description": "An expression alias.\n"
                },
                "cellDisplayMode": {
                    "type": "string",
                    "description": "A list of display modes for each table cell. Valid values are `number`, `bar`.\n"
                },
                "conditionalFormats": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/PowerpackWidgetQueryValueDefinitionRequestFormulaConditionalFormat:PowerpackWidgetQueryValueDefinitionRequestFormulaConditionalFormat"
                    },
                    "description": "Conditional formats allow you to set the color of your widget content or background depending on the rule applied to your data. Multiple `conditional_formats` blocks are allowed using the structure below.\n"
                },
                "formulaExpression": {
                    "type": "string",
                    "description": "A string expression built from queries, formulas, and functions.\n"
                },
                "limit": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetQueryValueDefinitionRequestFormulaLimit:PowerpackWidgetQueryValueDefinitionRequestFormulaLimit",
                    "description": "The options for limiting results returned.\n"
                },
                "style": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetQueryValueDefinitionRequestFormulaStyle:PowerpackWidgetQueryValueDefinitionRequestFormulaStyle",
                    "description": "Styling options for widget formulas.\n"
                }
            },
            "type": "object",
            "required": [
                "formulaExpression"
            ]
        },
        "datadog:index/PowerpackWidgetQueryValueDefinitionRequestFormulaConditionalFormat:PowerpackWidgetQueryValueDefinitionRequestFormulaConditionalFormat": {
            "properties": {
                "comparator": {
                    "type": "string",
                    "description": "The comparator to use. Valid values are `=`, `\u003e`, `\u003e=`, `\u003c`, `\u003c=`.\n"
                },
                "customBgColor": {
                    "type": "string",
                    "description": "The color palette to apply to the background, same values available as palette.\n"
                },
                "customFgColor": {
                    "type": "string",
                    "description": "The color palette to apply to the foreground, same values available as palette.\n"
                },
                "hideValue": {
                    "type": "boolean",
                    "description": "Setting this to True hides values.\n"
                },
                "imageUrl": {
                    "type": "string",
                    "description": "Displays an image as the background.\n"
                },
                "metric": {
                    "type": "string",
                    "description": "The metric from the request to correlate with this conditional format.\n"
                },
                "palette": {
                    "type": "string",
                    "description": "The color palette to apply. Valid values are `blue`, `custom_bg`, `custom_image`, `custom_text`, `gray_on_white`, `grey`, `green`, `orange`, `red`, `red_on_white`, `white_on_gray`, `white_on_green`, `green_on_white`, `white_on_red`, `white_on_yellow`, `yellow_on_white`, `black_on_light_yellow`, `black_on_light_green`, `black_on_light_red`.\n"
                },
                "timeframe": {
                    "type": "string",
                    "description": "Defines the displayed timeframe.\n"
                },
                "value": {
                    "type": "number",
                    "description": "A value for the comparator.\n"
                }
            },
            "type": "object",
            "required": [
                "comparator",
                "palette",
                "value"
            ]
        },
        "datadog:index/PowerpackWidgetQueryValueDefinitionRequestFormulaLimit:PowerpackWidgetQueryValueDefinitionRequestFormulaLimit": {
            "properties": {
                "count": {
                    "type": "integer",
                    "description": "The number of results to return.\n"
                },
                "order": {
                    "type": "string",
                    "description": "The direction of the sort. Valid values are `asc`, `desc`. Defaults to `\"desc\"`.\n"
                }
            },
            "type": "object"
        },
        "datadog:index/PowerpackWidgetQueryValueDefinitionRequestFormulaStyle:PowerpackWidgetQueryValueDefinitionRequestFormulaStyle": {
            "properties": {
                "palette": {
                    "type": "string",
                    "description": "The color palette used to display the formula. A guide to the available color palettes can be found at https://docs.datadoghq.com/dashboards/guide/widget_colors.\n"
                },
                "paletteIndex": {
                    "type": "integer",
                    "description": "Index specifying which color to use within the palette.\n"
                }
            },
            "type": "object"
        },
        "datadog:index/PowerpackWidgetQueryValueDefinitionRequestLogQuery:PowerpackWidgetQueryValueDefinitionRequestLogQuery": {
            "properties": {
                "computeQuery": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetQueryValueDefinitionRequestLogQueryComputeQuery:PowerpackWidgetQueryValueDefinitionRequestLogQueryComputeQuery",
                    "description": "`compute_query` or `multi_compute` is required. The map keys are listed below.\n"
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/PowerpackWidgetQueryValueDefinitionRequestLogQueryGroupBy:PowerpackWidgetQueryValueDefinitionRequestLogQueryGroupBy"
                    },
                    "description": "Multiple `group_by` blocks are allowed using the structure below.\n"
                },
                "index": {
                    "type": "string",
                    "description": "The name of the index to query.\n"
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/PowerpackWidgetQueryValueDefinitionRequestLogQueryMultiCompute:PowerpackWidgetQueryValueDefinitionRequestLogQueryMultiCompute"
                    },
                    "description": "`compute_query` or `multi_compute` is required. Multiple `multi_compute` blocks are allowed using the structure below.\n"
                },
                "searchQuery": {
                    "type": "string",
                    "description": "The search query to use.\n"
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/PowerpackWidgetQueryValueDefinitionRequestLogQueryComputeQuery:PowerpackWidgetQueryValueDefinitionRequestLogQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "The aggregation method.\n"
                },
                "facet": {
                    "type": "string",
                    "description": "The facet name.\n"
                },
                "interval": {
                    "type": "integer",
                    "description": "Define the time interval in seconds.\n"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/PowerpackWidgetQueryValueDefinitionRequestLogQueryGroupBy:PowerpackWidgetQueryValueDefinitionRequestLogQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "description": "The facet name.\n"
                },
                "limit": {
                    "type": "integer",
                    "description": "The maximum number of items in the group.\n"
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetQueryValueDefinitionRequestLogQueryGroupBySortQuery:PowerpackWidgetQueryValueDefinitionRequestLogQueryGroupBySortQuery",
                    "description": "A list of exactly one element describing the sort query to use.\n"
                }
            },
            "type": "object"
        },
        "datadog:index/PowerpackWidgetQueryValueDefinitionRequestLogQueryGroupBySortQuery:PowerpackWidgetQueryValueDefinitionRequestLogQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "The aggregation method.\n"
                },
                "facet": {
                    "type": "string",
                    "description": "The facet name.\n"
                },
                "order": {
                    "type": "string",
                    "description": "Widget sorting methods. Valid values are `asc`, `desc`.\n"
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/PowerpackWidgetQueryValueDefinitionRequestLogQueryMultiCompute:PowerpackWidgetQueryValueDefinitionRequestLogQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "The aggregation method.\n"
                },
                "facet": {
                    "type": "string",
                    "description": "The facet name.\n"
                },
                "interval": {
                    "type": "integer",
                    "description": "Define the time interval in seconds.\n"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/PowerpackWidgetQueryValueDefinitionRequestProcessQuery:PowerpackWidgetQueryValueDefinitionRequestProcessQuery": {
            "properties": {
                "filterBies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of processes.\n"
                },
                "limit": {
                    "type": "integer",
                    "description": "The max number of items in the filter list.\n"
                },
                "metric": {
                    "type": "string",
                    "description": "Your chosen metric.\n"
                },
                "searchBy": {
                    "type": "string",
                    "description": "Your chosen search term.\n"
                }
            },
            "type": "object",
            "required": [
                "metric"
            ]
        },
        "datadog:index/PowerpackWidgetQueryValueDefinitionRequestQuery:PowerpackWidgetQueryValueDefinitionRequestQuery": {
            "properties": {
                "apmDependencyStatsQuery": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetQueryValueDefinitionRequestQueryApmDependencyStatsQuery:PowerpackWidgetQueryValueDefinitionRequestQueryApmDependencyStatsQuery",
                    "description": "The APM Dependency Stats query using formulas and functions.\n"
                },
                "apmResourceStatsQuery": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetQueryValueDefinitionRequestQueryApmResourceStatsQuery:PowerpackWidgetQueryValueDefinitionRequestQueryApmResourceStatsQuery",
                    "description": "The APM Resource Stats query using formulas and functions.\n"
                },
                "cloudCostQuery": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetQueryValueDefinitionRequestQueryCloudCostQuery:PowerpackWidgetQueryValueDefinitionRequestQueryCloudCostQuery",
                    "description": "The Cloud Cost query using formulas and functions.\n"
                },
                "eventQuery": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetQueryValueDefinitionRequestQueryEventQuery:PowerpackWidgetQueryValueDefinitionRequestQueryEventQuery",
                    "description": "A timeseries formula and functions events query.\n"
                },
                "metricQuery": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetQueryValueDefinitionRequestQueryMetricQuery:PowerpackWidgetQueryValueDefinitionRequestQueryMetricQuery",
                    "description": "A timeseries formula and functions metrics query.\n"
                },
                "processQuery": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetQueryValueDefinitionRequestQueryProcessQuery:PowerpackWidgetQueryValueDefinitionRequestQueryProcessQuery",
                    "description": "The process query using formulas and functions.\n"
                },
                "sloQuery": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetQueryValueDefinitionRequestQuerySloQuery:PowerpackWidgetQueryValueDefinitionRequestQuerySloQuery",
                    "description": "The SLO query using formulas and functions.\n"
                }
            },
            "type": "object"
        },
        "datadog:index/PowerpackWidgetQueryValueDefinitionRequestQueryApmDependencyStatsQuery:PowerpackWidgetQueryValueDefinitionRequestQueryApmDependencyStatsQuery": {
            "properties": {
                "crossOrgUuids": {
                    "type": "string",
                    "description": "The source organization UUID for cross organization queries. Feature in Private Beta.\n"
                },
                "dataSource": {
                    "type": "string",
                    "description": "The data source for APM Dependency Stats queries. Valid values are `apm_dependency_stats`.\n"
                },
                "env": {
                    "type": "string",
                    "description": "APM environment.\n"
                },
                "isUpstream": {
                    "type": "boolean",
                    "description": "Determines whether stats for upstream or downstream dependencies should be queried.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of query for use in formulas.\n"
                },
                "operationName": {
                    "type": "string",
                    "description": "Name of operation on service.\n"
                },
                "primaryTagName": {
                    "type": "string",
                    "description": "The name of the second primary tag used within APM; required when `primary_tag_value` is specified. See https://docs.datadoghq.com/tracing/guide/setting*primary*tags*to*scope/#add-a-second-primary-tag-in-datadog.\n"
                },
                "primaryTagValue": {
                    "type": "string",
                    "description": "Filter APM data by the second primary tag. `primary_tag_name` must also be specified.\n"
                },
                "resourceName": {
                    "type": "string",
                    "description": "APM resource.\n"
                },
                "service": {
                    "type": "string",
                    "description": "APM service.\n"
                },
                "stat": {
                    "type": "string",
                    "description": "APM statistic. Valid values are `avg_duration`, `avg_root_duration`, `avg_spans_per_trace`, `error_rate`, `pct_exec_time`, `pct_of_traces`, `total_traces_count`.\n"
                }
            },
            "type": "object",
            "required": [
                "dataSource",
                "env",
                "name",
                "operationName",
                "resourceName",
                "service",
                "stat"
            ]
        },
        "datadog:index/PowerpackWidgetQueryValueDefinitionRequestQueryApmResourceStatsQuery:PowerpackWidgetQueryValueDefinitionRequestQueryApmResourceStatsQuery": {
            "properties": {
                "crossOrgUuids": {
                    "type": "string",
                    "description": "The source organization UUID for cross organization queries. Feature in Private Beta.\n"
                },
                "dataSource": {
                    "type": "string",
                    "description": "The data source for APM Resource Stats queries. Valid values are `apm_resource_stats`.\n"
                },
                "env": {
                    "type": "string",
                    "description": "APM environment.\n"
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Array of fields to group results by.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of query for use in formulas.\n"
                },
                "operationName": {
                    "type": "string",
                    "description": "Name of operation on service.\n"
                },
                "primaryTagName": {
                    "type": "string",
                    "description": "The name of the second primary tag used within APM; required when `primary_tag_value` is specified. See https://docs.datadoghq.com/tracing/guide/setting*primary*tags*to*scope/#add-a-second-primary-tag-in-datadog.\n"
                },
                "primaryTagValue": {
                    "type": "string",
                    "description": "Filter APM data by the second primary tag. `primary_tag_name` must also be specified.\n"
                },
                "resourceName": {
                    "type": "string",
                    "description": "APM resource.\n"
                },
                "service": {
                    "type": "string",
                    "description": "APM service.\n"
                },
                "stat": {
                    "type": "string",
                    "description": "APM statistic. Valid values are `errors`, `error_rate`, `hits`, `latency_avg`, `latency_distribution`, `latency_max`, `latency_p50`, `latency_p75`, `latency_p90`, `latency_p95`, `latency_p99`.\n"
                }
            },
            "type": "object",
            "required": [
                "dataSource",
                "env",
                "name",
                "service",
                "stat"
            ]
        },
        "datadog:index/PowerpackWidgetQueryValueDefinitionRequestQueryCloudCostQuery:PowerpackWidgetQueryValueDefinitionRequestQueryCloudCostQuery": {
            "properties": {
                "aggregator": {
                    "type": "string",
                    "description": "The aggregation methods available for cloud cost queries. Valid values are `avg`, `last`, `max`, `min`, `sum`, `percentile`.\n"
                },
                "crossOrgUuids": {
                    "type": "string",
                    "description": "The source organization UUID for cross organization queries. Feature in Private Beta.\n"
                },
                "dataSource": {
                    "type": "string",
                    "description": "The data source for cloud cost queries. Valid values are `cloud_cost`.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the query for use in formulas.\n"
                },
                "query": {
                    "type": "string",
                    "description": "The cloud cost query definition.\n"
                }
            },
            "type": "object",
            "required": [
                "dataSource",
                "name",
                "query"
            ]
        },
        "datadog:index/PowerpackWidgetQueryValueDefinitionRequestQueryEventQuery:PowerpackWidgetQueryValueDefinitionRequestQueryEventQuery": {
            "properties": {
                "computes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/PowerpackWidgetQueryValueDefinitionRequestQueryEventQueryCompute:PowerpackWidgetQueryValueDefinitionRequestQueryEventQueryCompute"
                    },
                    "description": "The compute options.\n"
                },
                "crossOrgUuids": {
                    "type": "string",
                    "description": "The source organization UUID for cross organization queries. Feature in Private Beta.\n"
                },
                "dataSource": {
                    "type": "string",
                    "description": "The data source for event platform-based queries. Valid values are `logs`, `spans`, `network`, `rum`, `security_signals`, `profiles`, `audit`, `events`, `ci_tests`, `ci_pipelines`, `incident_analytics`.\n"
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/PowerpackWidgetQueryValueDefinitionRequestQueryEventQueryGroupBy:PowerpackWidgetQueryValueDefinitionRequestQueryEventQueryGroupBy"
                    },
                    "description": "Group by options.\n"
                },
                "indexes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "An array of index names to query in the stream.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of query for use in formulas.\n"
                },
                "search": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetQueryValueDefinitionRequestQueryEventQuerySearch:PowerpackWidgetQueryValueDefinitionRequestQueryEventQuerySearch",
                    "description": "The search options.\n"
                },
                "storage": {
                    "type": "string",
                    "description": "Storage location (private beta).\n"
                }
            },
            "type": "object",
            "required": [
                "computes",
                "dataSource",
                "name"
            ]
        },
        "datadog:index/PowerpackWidgetQueryValueDefinitionRequestQueryEventQueryCompute:PowerpackWidgetQueryValueDefinitionRequestQueryEventQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "The aggregation methods for event platform queries. Valid values are `count`, `cardinality`, `median`, `pc75`, `pc90`, `pc95`, `pc98`, `pc99`, `sum`, `min`, `max`, `avg`.\n"
                },
                "interval": {
                    "type": "integer",
                    "description": "A time interval in milliseconds.\n"
                },
                "metric": {
                    "type": "string",
                    "description": "The measurable attribute to compute.\n"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/PowerpackWidgetQueryValueDefinitionRequestQueryEventQueryGroupBy:PowerpackWidgetQueryValueDefinitionRequestQueryEventQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "description": "The event facet.\n"
                },
                "limit": {
                    "type": "integer",
                    "description": "The number of groups to return.\n"
                },
                "sort": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetQueryValueDefinitionRequestQueryEventQueryGroupBySort:PowerpackWidgetQueryValueDefinitionRequestQueryEventQueryGroupBySort",
                    "description": "The options for sorting group by results.\n"
                }
            },
            "type": "object",
            "required": [
                "facet"
            ]
        },
        "datadog:index/PowerpackWidgetQueryValueDefinitionRequestQueryEventQueryGroupBySort:PowerpackWidgetQueryValueDefinitionRequestQueryEventQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "The aggregation methods for the event platform queries. Valid values are `count`, `cardinality`, `median`, `pc75`, `pc90`, `pc95`, `pc98`, `pc99`, `sum`, `min`, `max`, `avg`.\n"
                },
                "metric": {
                    "type": "string",
                    "description": "The metric used for sorting group by results.\n"
                },
                "order": {
                    "type": "string",
                    "description": "Direction of sort. Valid values are `asc`, `desc`.\n"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/PowerpackWidgetQueryValueDefinitionRequestQueryEventQuerySearch:PowerpackWidgetQueryValueDefinitionRequestQueryEventQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "description": "The events search string.\n"
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/PowerpackWidgetQueryValueDefinitionRequestQueryMetricQuery:PowerpackWidgetQueryValueDefinitionRequestQueryMetricQuery": {
            "properties": {
                "aggregator": {
                    "type": "string",
                    "description": "The aggregation methods available for metrics queries. Valid values are `avg`, `min`, `max`, `sum`, `last`, `area`, `l2norm`, `percentile`.\n"
                },
                "crossOrgUuids": {
                    "type": "string",
                    "description": "The source organization UUID for cross organization queries. Feature in Private Beta.\n"
                },
                "dataSource": {
                    "type": "string",
                    "description": "The data source for metrics queries. Defaults to `\"metrics\"`.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the query for use in formulas.\n"
                },
                "query": {
                    "type": "string",
                    "description": "The metrics query definition.\n"
                }
            },
            "type": "object",
            "required": [
                "name",
                "query"
            ]
        },
        "datadog:index/PowerpackWidgetQueryValueDefinitionRequestQueryProcessQuery:PowerpackWidgetQueryValueDefinitionRequestQueryProcessQuery": {
            "properties": {
                "aggregator": {
                    "type": "string",
                    "description": "The aggregation methods available for metrics queries. Valid values are `avg`, `min`, `max`, `sum`, `last`, `area`, `l2norm`, `percentile`.\n"
                },
                "crossOrgUuids": {
                    "type": "string",
                    "description": "The source organization UUID for cross organization queries. Feature in Private Beta.\n"
                },
                "dataSource": {
                    "type": "string",
                    "description": "The data source for process queries. Valid values are `process`, `container`.\n"
                },
                "isNormalizedCpu": {
                    "type": "boolean",
                    "description": "Whether to normalize the CPU percentages.\n"
                },
                "limit": {
                    "type": "integer",
                    "description": "The number of hits to return.\n"
                },
                "metric": {
                    "type": "string",
                    "description": "The process metric name.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of query for use in formulas.\n"
                },
                "sort": {
                    "type": "string",
                    "description": "The direction of the sort. Valid values are `asc`, `desc`. Defaults to `\"desc\"`.\n"
                },
                "tagFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "An array of tags to filter by.\n"
                },
                "textFilter": {
                    "type": "string",
                    "description": "The text to use as a filter.\n"
                }
            },
            "type": "object",
            "required": [
                "dataSource",
                "metric",
                "name"
            ]
        },
        "datadog:index/PowerpackWidgetQueryValueDefinitionRequestQuerySloQuery:PowerpackWidgetQueryValueDefinitionRequestQuerySloQuery": {
            "properties": {
                "additionalQueryFilters": {
                    "type": "string",
                    "description": "Additional filters applied to the SLO query.\n"
                },
                "crossOrgUuids": {
                    "type": "string",
                    "description": "The source organization UUID for cross organization queries. Feature in Private Beta.\n"
                },
                "dataSource": {
                    "type": "string",
                    "description": "The data source for SLO queries. Valid values are `slo`.\n"
                },
                "groupMode": {
                    "type": "string",
                    "description": "Group mode to query measures. Valid values are `overall`, `components`. Defaults to `\"overall\"`.\n"
                },
                "measure": {
                    "type": "string",
                    "description": "SLO measures queries. Valid values are `good_events`, `bad_events`, `slo_status`, `error_budget_remaining`, `burn_rate`, `error_budget_burndown`.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of query for use in formulas.\n"
                },
                "sloId": {
                    "type": "string",
                    "description": "ID of an SLO to query.\n"
                },
                "sloQueryType": {
                    "type": "string",
                    "description": "type of the SLO to query. Valid values are `metric`, `time_slice`. Defaults to `\"metric\"`.\n"
                }
            },
            "type": "object",
            "required": [
                "dataSource",
                "measure",
                "sloId"
            ]
        },
        "datadog:index/PowerpackWidgetQueryValueDefinitionRequestRumQuery:PowerpackWidgetQueryValueDefinitionRequestRumQuery": {
            "properties": {
                "computeQuery": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetQueryValueDefinitionRequestRumQueryComputeQuery:PowerpackWidgetQueryValueDefinitionRequestRumQueryComputeQuery",
                    "description": "`compute_query` or `multi_compute` is required. The map keys are listed below.\n"
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/PowerpackWidgetQueryValueDefinitionRequestRumQueryGroupBy:PowerpackWidgetQueryValueDefinitionRequestRumQueryGroupBy"
                    },
                    "description": "Multiple `group_by` blocks are allowed using the structure below.\n"
                },
                "index": {
                    "type": "string",
                    "description": "The name of the index to query.\n"
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/PowerpackWidgetQueryValueDefinitionRequestRumQueryMultiCompute:PowerpackWidgetQueryValueDefinitionRequestRumQueryMultiCompute"
                    },
                    "description": "`compute_query` or `multi_compute` is required. Multiple `multi_compute` blocks are allowed using the structure below.\n"
                },
                "searchQuery": {
                    "type": "string",
                    "description": "The search query to use.\n"
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/PowerpackWidgetQueryValueDefinitionRequestRumQueryComputeQuery:PowerpackWidgetQueryValueDefinitionRequestRumQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "The aggregation method.\n"
                },
                "facet": {
                    "type": "string",
                    "description": "The facet name.\n"
                },
                "interval": {
                    "type": "integer",
                    "description": "Define the time interval in seconds.\n"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/PowerpackWidgetQueryValueDefinitionRequestRumQueryGroupBy:PowerpackWidgetQueryValueDefinitionRequestRumQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "description": "The facet name.\n"
                },
                "limit": {
                    "type": "integer",
                    "description": "The maximum number of items in the group.\n"
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetQueryValueDefinitionRequestRumQueryGroupBySortQuery:PowerpackWidgetQueryValueDefinitionRequestRumQueryGroupBySortQuery",
                    "description": "A list of exactly one element describing the sort query to use.\n"
                }
            },
            "type": "object"
        },
        "datadog:index/PowerpackWidgetQueryValueDefinitionRequestRumQueryGroupBySortQuery:PowerpackWidgetQueryValueDefinitionRequestRumQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "The aggregation method.\n"
                },
                "facet": {
                    "type": "string",
                    "description": "The facet name.\n"
                },
                "order": {
                    "type": "string",
                    "description": "Widget sorting methods. Valid values are `asc`, `desc`.\n"
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/PowerpackWidgetQueryValueDefinitionRequestRumQueryMultiCompute:PowerpackWidgetQueryValueDefinitionRequestRumQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "The aggregation method.\n"
                },
                "facet": {
                    "type": "string",
                    "description": "The facet name.\n"
                },
                "interval": {
                    "type": "integer",
                    "description": "Define the time interval in seconds.\n"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/PowerpackWidgetQueryValueDefinitionRequestSecurityQuery:PowerpackWidgetQueryValueDefinitionRequestSecurityQuery": {
            "properties": {
                "computeQuery": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetQueryValueDefinitionRequestSecurityQueryComputeQuery:PowerpackWidgetQueryValueDefinitionRequestSecurityQueryComputeQuery",
                    "description": "`compute_query` or `multi_compute` is required. The map keys are listed below.\n"
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/PowerpackWidgetQueryValueDefinitionRequestSecurityQueryGroupBy:PowerpackWidgetQueryValueDefinitionRequestSecurityQueryGroupBy"
                    },
                    "description": "Multiple `group_by` blocks are allowed using the structure below.\n"
                },
                "index": {
                    "type": "string",
                    "description": "The name of the index to query.\n"
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/PowerpackWidgetQueryValueDefinitionRequestSecurityQueryMultiCompute:PowerpackWidgetQueryValueDefinitionRequestSecurityQueryMultiCompute"
                    },
                    "description": "`compute_query` or `multi_compute` is required. Multiple `multi_compute` blocks are allowed using the structure below.\n"
                },
                "searchQuery": {
                    "type": "string",
                    "description": "The search query to use.\n"
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/PowerpackWidgetQueryValueDefinitionRequestSecurityQueryComputeQuery:PowerpackWidgetQueryValueDefinitionRequestSecurityQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "The aggregation method.\n"
                },
                "facet": {
                    "type": "string",
                    "description": "The facet name.\n"
                },
                "interval": {
                    "type": "integer",
                    "description": "Define the time interval in seconds.\n"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/PowerpackWidgetQueryValueDefinitionRequestSecurityQueryGroupBy:PowerpackWidgetQueryValueDefinitionRequestSecurityQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "description": "The facet name.\n"
                },
                "limit": {
                    "type": "integer",
                    "description": "The maximum number of items in the group.\n"
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetQueryValueDefinitionRequestSecurityQueryGroupBySortQuery:PowerpackWidgetQueryValueDefinitionRequestSecurityQueryGroupBySortQuery",
                    "description": "A list of exactly one element describing the sort query to use.\n"
                }
            },
            "type": "object"
        },
        "datadog:index/PowerpackWidgetQueryValueDefinitionRequestSecurityQueryGroupBySortQuery:PowerpackWidgetQueryValueDefinitionRequestSecurityQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "The aggregation method.\n"
                },
                "facet": {
                    "type": "string",
                    "description": "The facet name.\n"
                },
                "order": {
                    "type": "string",
                    "description": "Widget sorting methods. Valid values are `asc`, `desc`.\n"
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/PowerpackWidgetQueryValueDefinitionRequestSecurityQueryMultiCompute:PowerpackWidgetQueryValueDefinitionRequestSecurityQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "The aggregation method.\n"
                },
                "facet": {
                    "type": "string",
                    "description": "The facet name.\n"
                },
                "interval": {
                    "type": "integer",
                    "description": "Define the time interval in seconds.\n"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/PowerpackWidgetQueryValueDefinitionTimeseriesBackground:PowerpackWidgetQueryValueDefinitionTimeseriesBackground": {
            "properties": {
                "type": {
                    "type": "string",
                    "description": "Whether the Timeseries is made using an area or bars. Valid values are `bars`, `area`.\n"
                },
                "yaxis": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetQueryValueDefinitionTimeseriesBackgroundYaxis:PowerpackWidgetQueryValueDefinitionTimeseriesBackgroundYaxis",
                    "description": "A nested block describing the Y-Axis Controls. Exactly one nested block is allowed using the structure below.\n"
                }
            },
            "type": "object",
            "required": [
                "type"
            ]
        },
        "datadog:index/PowerpackWidgetQueryValueDefinitionTimeseriesBackgroundYaxis:PowerpackWidgetQueryValueDefinitionTimeseriesBackgroundYaxis": {
            "properties": {
                "includeZero": {
                    "type": "boolean",
                    "description": "Always include zero or fit the axis to the data range.\n"
                },
                "label": {
                    "type": "string",
                    "description": "The label of the axis to display on the graph.\n"
                },
                "max": {
                    "type": "string",
                    "description": "Specify the maximum value to show on the Y-axis.\n"
                },
                "min": {
                    "type": "string",
                    "description": "Specify the minimum value to show on the Y-axis.\n"
                },
                "scale": {
                    "type": "string",
                    "description": "Specify the scale type, options: `linear`, `log`, `pow`, `sqrt`.\n"
                }
            },
            "type": "object"
        },
        "datadog:index/PowerpackWidgetRunWorkflowDefinition:PowerpackWidgetRunWorkflowDefinition": {
            "properties": {
                "customLinks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/PowerpackWidgetRunWorkflowDefinitionCustomLink:PowerpackWidgetRunWorkflowDefinitionCustomLink"
                    },
                    "description": "A nested block describing a custom link. Multiple `custom_link` blocks are allowed using the structure below.\n"
                },
                "inputs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/PowerpackWidgetRunWorkflowDefinitionInput:PowerpackWidgetRunWorkflowDefinitionInput"
                    },
                    "description": "Array of workflow inputs to map to dashboard template variables.\n"
                },
                "liveSpan": {
                    "type": "string",
                    "description": "The timeframe to use when displaying the widget. Valid values are `1m`, `5m`, `10m`, `15m`, `30m`, `1h`, `4h`, `1d`, `2d`, `1w`, `1mo`, `3mo`, `6mo`, `week_to_date`, `month_to_date`, `1y`, `alert`.\n"
                },
                "title": {
                    "type": "string",
                    "description": "The title of the widget.\n"
                },
                "titleAlign": {
                    "type": "string",
                    "description": "The alignment of the widget's title. Valid values are `center`, `left`, `right`.\n"
                },
                "titleSize": {
                    "type": "string",
                    "description": "The size of the widget's title (defaults to 16).\n"
                },
                "workflowId": {
                    "type": "string",
                    "description": "Workflow ID\n"
                }
            },
            "type": "object",
            "required": [
                "workflowId"
            ]
        },
        "datadog:index/PowerpackWidgetRunWorkflowDefinitionCustomLink:PowerpackWidgetRunWorkflowDefinitionCustomLink": {
            "properties": {
                "isHidden": {
                    "type": "boolean",
                    "description": "The flag for toggling context menu link visibility.\n"
                },
                "label": {
                    "type": "string",
                    "description": "The label for the custom link URL.\n"
                },
                "link": {
                    "type": "string",
                    "description": "The URL of the custom link.\n"
                },
                "overrideLabel": {
                    "type": "string",
                    "description": "The label ID that refers to a context menu link item. When `override_label` is provided, the client request omits the label field.\n"
                }
            },
            "type": "object"
        },
        "datadog:index/PowerpackWidgetRunWorkflowDefinitionInput:PowerpackWidgetRunWorkflowDefinitionInput": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Name of the workflow input.\n"
                },
                "value": {
                    "type": "string",
                    "description": "Dashboard template variable. Can be suffixed with `.value` or `.key`.\n"
                }
            },
            "type": "object",
            "required": [
                "name",
                "value"
            ]
        },
        "datadog:index/PowerpackWidgetScatterplotDefinition:PowerpackWidgetScatterplotDefinition": {
            "properties": {
                "colorByGroups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of groups used for colors.\n"
                },
                "customLinks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/PowerpackWidgetScatterplotDefinitionCustomLink:PowerpackWidgetScatterplotDefinitionCustomLink"
                    },
                    "description": "A nested block describing a custom link. Multiple `custom_link` blocks are allowed using the structure below.\n"
                },
                "liveSpan": {
                    "type": "string",
                    "description": "The timeframe to use when displaying the widget. Valid values are `1m`, `5m`, `10m`, `15m`, `30m`, `1h`, `4h`, `1d`, `2d`, `1w`, `1mo`, `3mo`, `6mo`, `week_to_date`, `month_to_date`, `1y`, `alert`.\n"
                },
                "request": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetScatterplotDefinitionRequest:PowerpackWidgetScatterplotDefinitionRequest",
                    "description": "A nested block describing the request to use when displaying the widget. Exactly one `request` block is allowed using the structure below.\n"
                },
                "title": {
                    "type": "string",
                    "description": "The title of the widget.\n"
                },
                "titleAlign": {
                    "type": "string",
                    "description": "The alignment of the widget's title. Valid values are `center`, `left`, `right`.\n"
                },
                "titleSize": {
                    "type": "string",
                    "description": "The size of the widget's title (defaults to 16).\n"
                },
                "xaxis": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetScatterplotDefinitionXaxis:PowerpackWidgetScatterplotDefinitionXaxis",
                    "description": "A nested block describing the X-Axis Controls. Exactly one nested block is allowed using the structure below.\n"
                },
                "yaxis": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetScatterplotDefinitionYaxis:PowerpackWidgetScatterplotDefinitionYaxis",
                    "description": "A nested block describing the Y-Axis Controls. Exactly one nested block is allowed using the structure below.\n"
                }
            },
            "type": "object"
        },
        "datadog:index/PowerpackWidgetScatterplotDefinitionCustomLink:PowerpackWidgetScatterplotDefinitionCustomLink": {
            "properties": {
                "isHidden": {
                    "type": "boolean",
                    "description": "The flag for toggling context menu link visibility.\n"
                },
                "label": {
                    "type": "string",
                    "description": "The label for the custom link URL.\n"
                },
                "link": {
                    "type": "string",
                    "description": "The URL of the custom link.\n"
                },
                "overrideLabel": {
                    "type": "string",
                    "description": "The label ID that refers to a context menu link item. When `override_label` is provided, the client request omits the label field.\n"
                }
            },
            "type": "object"
        },
        "datadog:index/PowerpackWidgetScatterplotDefinitionRequest:PowerpackWidgetScatterplotDefinitionRequest": {
            "properties": {
                "scatterplotTables": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/PowerpackWidgetScatterplotDefinitionRequestScatterplotTable:PowerpackWidgetScatterplotDefinitionRequestScatterplotTable"
                    },
                    "description": "Scatterplot request containing formulas and functions.\n"
                },
                "xes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/PowerpackWidgetScatterplotDefinitionRequestX:PowerpackWidgetScatterplotDefinitionRequestX"
                    },
                    "description": "The query used for the X-Axis. Exactly one nested block is allowed using the structure below (exactly one of `q`, `apm_query`, `log_query`, `rum_query`, `security_query`, `apm_stats_query` or `process_query` is required within the block).\n"
                },
                "ys": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/PowerpackWidgetScatterplotDefinitionRequestY:PowerpackWidgetScatterplotDefinitionRequestY"
                    },
                    "description": "The query used for the Y-Axis. Exactly one nested block is allowed using the structure below (exactly one of `q`, `apm_query`, `log_query`, `rum_query`, `security_query`, `apm_stats_query` or `process_query` is required within the block).\n"
                }
            },
            "type": "object"
        },
        "datadog:index/PowerpackWidgetScatterplotDefinitionRequestScatterplotTable:PowerpackWidgetScatterplotDefinitionRequestScatterplotTable": {
            "properties": {
                "formulas": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/PowerpackWidgetScatterplotDefinitionRequestScatterplotTableFormula:PowerpackWidgetScatterplotDefinitionRequestScatterplotTableFormula"
                    }
                },
                "queries": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/PowerpackWidgetScatterplotDefinitionRequestScatterplotTableQuery:PowerpackWidgetScatterplotDefinitionRequestScatterplotTableQuery"
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/PowerpackWidgetScatterplotDefinitionRequestScatterplotTableFormula:PowerpackWidgetScatterplotDefinitionRequestScatterplotTableFormula": {
            "properties": {
                "alias": {
                    "type": "string",
                    "description": "An expression alias.\n"
                },
                "dimension": {
                    "type": "string",
                    "description": "Dimension of the Scatterplot. Valid values are `x`, `y`, `radius`, `color`.\n"
                },
                "formulaExpression": {
                    "type": "string",
                    "description": "A string expression built from queries, formulas, and functions.\n"
                }
            },
            "type": "object",
            "required": [
                "dimension",
                "formulaExpression"
            ]
        },
        "datadog:index/PowerpackWidgetScatterplotDefinitionRequestScatterplotTableQuery:PowerpackWidgetScatterplotDefinitionRequestScatterplotTableQuery": {
            "properties": {
                "apmDependencyStatsQuery": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetScatterplotDefinitionRequestScatterplotTableQueryApmDependencyStatsQuery:PowerpackWidgetScatterplotDefinitionRequestScatterplotTableQueryApmDependencyStatsQuery",
                    "description": "The APM Dependency Stats query using formulas and functions.\n"
                },
                "apmResourceStatsQuery": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetScatterplotDefinitionRequestScatterplotTableQueryApmResourceStatsQuery:PowerpackWidgetScatterplotDefinitionRequestScatterplotTableQueryApmResourceStatsQuery",
                    "description": "The APM Resource Stats query using formulas and functions.\n"
                },
                "cloudCostQuery": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetScatterplotDefinitionRequestScatterplotTableQueryCloudCostQuery:PowerpackWidgetScatterplotDefinitionRequestScatterplotTableQueryCloudCostQuery",
                    "description": "The Cloud Cost query using formulas and functions.\n"
                },
                "eventQuery": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetScatterplotDefinitionRequestScatterplotTableQueryEventQuery:PowerpackWidgetScatterplotDefinitionRequestScatterplotTableQueryEventQuery",
                    "description": "A timeseries formula and functions events query.\n"
                },
                "metricQuery": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetScatterplotDefinitionRequestScatterplotTableQueryMetricQuery:PowerpackWidgetScatterplotDefinitionRequestScatterplotTableQueryMetricQuery",
                    "description": "A timeseries formula and functions metrics query.\n"
                },
                "processQuery": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetScatterplotDefinitionRequestScatterplotTableQueryProcessQuery:PowerpackWidgetScatterplotDefinitionRequestScatterplotTableQueryProcessQuery",
                    "description": "The process query using formulas and functions.\n"
                },
                "sloQuery": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetScatterplotDefinitionRequestScatterplotTableQuerySloQuery:PowerpackWidgetScatterplotDefinitionRequestScatterplotTableQuerySloQuery",
                    "description": "The SLO query using formulas and functions.\n"
                }
            },
            "type": "object"
        },
        "datadog:index/PowerpackWidgetScatterplotDefinitionRequestScatterplotTableQueryApmDependencyStatsQuery:PowerpackWidgetScatterplotDefinitionRequestScatterplotTableQueryApmDependencyStatsQuery": {
            "properties": {
                "crossOrgUuids": {
                    "type": "string",
                    "description": "The source organization UUID for cross organization queries. Feature in Private Beta.\n"
                },
                "dataSource": {
                    "type": "string",
                    "description": "The data source for APM Dependency Stats queries. Valid values are `apm_dependency_stats`.\n"
                },
                "env": {
                    "type": "string",
                    "description": "APM environment.\n"
                },
                "isUpstream": {
                    "type": "boolean",
                    "description": "Determines whether stats for upstream or downstream dependencies should be queried.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of query for use in formulas.\n"
                },
                "operationName": {
                    "type": "string",
                    "description": "Name of operation on service.\n"
                },
                "primaryTagName": {
                    "type": "string",
                    "description": "The name of the second primary tag used within APM; required when `primary_tag_value` is specified. See https://docs.datadoghq.com/tracing/guide/setting*primary*tags*to*scope/#add-a-second-primary-tag-in-datadog.\n"
                },
                "primaryTagValue": {
                    "type": "string",
                    "description": "Filter APM data by the second primary tag. `primary_tag_name` must also be specified.\n"
                },
                "resourceName": {
                    "type": "string",
                    "description": "APM resource.\n"
                },
                "service": {
                    "type": "string",
                    "description": "APM service.\n"
                },
                "stat": {
                    "type": "string",
                    "description": "APM statistic. Valid values are `avg_duration`, `avg_root_duration`, `avg_spans_per_trace`, `error_rate`, `pct_exec_time`, `pct_of_traces`, `total_traces_count`.\n"
                }
            },
            "type": "object",
            "required": [
                "dataSource",
                "env",
                "name",
                "operationName",
                "resourceName",
                "service",
                "stat"
            ]
        },
        "datadog:index/PowerpackWidgetScatterplotDefinitionRequestScatterplotTableQueryApmResourceStatsQuery:PowerpackWidgetScatterplotDefinitionRequestScatterplotTableQueryApmResourceStatsQuery": {
            "properties": {
                "crossOrgUuids": {
                    "type": "string",
                    "description": "The source organization UUID for cross organization queries. Feature in Private Beta.\n"
                },
                "dataSource": {
                    "type": "string",
                    "description": "The data source for APM Resource Stats queries. Valid values are `apm_resource_stats`.\n"
                },
                "env": {
                    "type": "string",
                    "description": "APM environment.\n"
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Array of fields to group results by.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of query for use in formulas.\n"
                },
                "operationName": {
                    "type": "string",
                    "description": "Name of operation on service.\n"
                },
                "primaryTagName": {
                    "type": "string",
                    "description": "The name of the second primary tag used within APM; required when `primary_tag_value` is specified. See https://docs.datadoghq.com/tracing/guide/setting*primary*tags*to*scope/#add-a-second-primary-tag-in-datadog.\n"
                },
                "primaryTagValue": {
                    "type": "string",
                    "description": "Filter APM data by the second primary tag. `primary_tag_name` must also be specified.\n"
                },
                "resourceName": {
                    "type": "string",
                    "description": "APM resource.\n"
                },
                "service": {
                    "type": "string",
                    "description": "APM service.\n"
                },
                "stat": {
                    "type": "string",
                    "description": "APM statistic. Valid values are `errors`, `error_rate`, `hits`, `latency_avg`, `latency_distribution`, `latency_max`, `latency_p50`, `latency_p75`, `latency_p90`, `latency_p95`, `latency_p99`.\n"
                }
            },
            "type": "object",
            "required": [
                "dataSource",
                "env",
                "name",
                "service",
                "stat"
            ]
        },
        "datadog:index/PowerpackWidgetScatterplotDefinitionRequestScatterplotTableQueryCloudCostQuery:PowerpackWidgetScatterplotDefinitionRequestScatterplotTableQueryCloudCostQuery": {
            "properties": {
                "aggregator": {
                    "type": "string",
                    "description": "The aggregation methods available for cloud cost queries. Valid values are `avg`, `last`, `max`, `min`, `sum`, `percentile`.\n"
                },
                "crossOrgUuids": {
                    "type": "string",
                    "description": "The source organization UUID for cross organization queries. Feature in Private Beta.\n"
                },
                "dataSource": {
                    "type": "string",
                    "description": "The data source for cloud cost queries. Valid values are `cloud_cost`.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the query for use in formulas.\n"
                },
                "query": {
                    "type": "string",
                    "description": "The cloud cost query definition.\n"
                }
            },
            "type": "object",
            "required": [
                "dataSource",
                "name",
                "query"
            ]
        },
        "datadog:index/PowerpackWidgetScatterplotDefinitionRequestScatterplotTableQueryEventQuery:PowerpackWidgetScatterplotDefinitionRequestScatterplotTableQueryEventQuery": {
            "properties": {
                "computes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/PowerpackWidgetScatterplotDefinitionRequestScatterplotTableQueryEventQueryCompute:PowerpackWidgetScatterplotDefinitionRequestScatterplotTableQueryEventQueryCompute"
                    },
                    "description": "The compute options.\n"
                },
                "crossOrgUuids": {
                    "type": "string",
                    "description": "The source organization UUID for cross organization queries. Feature in Private Beta.\n"
                },
                "dataSource": {
                    "type": "string",
                    "description": "The data source for event platform-based queries. Valid values are `logs`, `spans`, `network`, `rum`, `security_signals`, `profiles`, `audit`, `events`, `ci_tests`, `ci_pipelines`, `incident_analytics`.\n"
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/PowerpackWidgetScatterplotDefinitionRequestScatterplotTableQueryEventQueryGroupBy:PowerpackWidgetScatterplotDefinitionRequestScatterplotTableQueryEventQueryGroupBy"
                    },
                    "description": "Group by options.\n"
                },
                "indexes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "An array of index names to query in the stream.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of query for use in formulas.\n"
                },
                "search": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetScatterplotDefinitionRequestScatterplotTableQueryEventQuerySearch:PowerpackWidgetScatterplotDefinitionRequestScatterplotTableQueryEventQuerySearch",
                    "description": "The search options.\n"
                },
                "storage": {
                    "type": "string",
                    "description": "Storage location (private beta).\n"
                }
            },
            "type": "object",
            "required": [
                "computes",
                "dataSource",
                "name"
            ]
        },
        "datadog:index/PowerpackWidgetScatterplotDefinitionRequestScatterplotTableQueryEventQueryCompute:PowerpackWidgetScatterplotDefinitionRequestScatterplotTableQueryEventQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "The aggregation methods for event platform queries. Valid values are `count`, `cardinality`, `median`, `pc75`, `pc90`, `pc95`, `pc98`, `pc99`, `sum`, `min`, `max`, `avg`.\n"
                },
                "interval": {
                    "type": "integer",
                    "description": "A time interval in milliseconds.\n"
                },
                "metric": {
                    "type": "string",
                    "description": "The measurable attribute to compute.\n"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/PowerpackWidgetScatterplotDefinitionRequestScatterplotTableQueryEventQueryGroupBy:PowerpackWidgetScatterplotDefinitionRequestScatterplotTableQueryEventQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "description": "The event facet.\n"
                },
                "limit": {
                    "type": "integer",
                    "description": "The number of groups to return.\n"
                },
                "sort": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetScatterplotDefinitionRequestScatterplotTableQueryEventQueryGroupBySort:PowerpackWidgetScatterplotDefinitionRequestScatterplotTableQueryEventQueryGroupBySort",
                    "description": "The options for sorting group by results.\n"
                }
            },
            "type": "object",
            "required": [
                "facet"
            ]
        },
        "datadog:index/PowerpackWidgetScatterplotDefinitionRequestScatterplotTableQueryEventQueryGroupBySort:PowerpackWidgetScatterplotDefinitionRequestScatterplotTableQueryEventQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "The aggregation methods for the event platform queries. Valid values are `count`, `cardinality`, `median`, `pc75`, `pc90`, `pc95`, `pc98`, `pc99`, `sum`, `min`, `max`, `avg`.\n"
                },
                "metric": {
                    "type": "string",
                    "description": "The metric used for sorting group by results.\n"
                },
                "order": {
                    "type": "string",
                    "description": "Direction of sort. Valid values are `asc`, `desc`.\n"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/PowerpackWidgetScatterplotDefinitionRequestScatterplotTableQueryEventQuerySearch:PowerpackWidgetScatterplotDefinitionRequestScatterplotTableQueryEventQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "description": "The events search string.\n"
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/PowerpackWidgetScatterplotDefinitionRequestScatterplotTableQueryMetricQuery:PowerpackWidgetScatterplotDefinitionRequestScatterplotTableQueryMetricQuery": {
            "properties": {
                "aggregator": {
                    "type": "string",
                    "description": "The aggregation methods available for metrics queries. Valid values are `avg`, `min`, `max`, `sum`, `last`, `area`, `l2norm`, `percentile`.\n"
                },
                "crossOrgUuids": {
                    "type": "string",
                    "description": "The source organization UUID for cross organization queries. Feature in Private Beta.\n"
                },
                "dataSource": {
                    "type": "string",
                    "description": "The data source for metrics queries. Defaults to `\"metrics\"`.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the query for use in formulas.\n"
                },
                "query": {
                    "type": "string",
                    "description": "The metrics query definition.\n"
                }
            },
            "type": "object",
            "required": [
                "name",
                "query"
            ]
        },
        "datadog:index/PowerpackWidgetScatterplotDefinitionRequestScatterplotTableQueryProcessQuery:PowerpackWidgetScatterplotDefinitionRequestScatterplotTableQueryProcessQuery": {
            "properties": {
                "aggregator": {
                    "type": "string",
                    "description": "The aggregation methods available for metrics queries. Valid values are `avg`, `min`, `max`, `sum`, `last`, `area`, `l2norm`, `percentile`.\n"
                },
                "crossOrgUuids": {
                    "type": "string",
                    "description": "The source organization UUID for cross organization queries. Feature in Private Beta.\n"
                },
                "dataSource": {
                    "type": "string",
                    "description": "The data source for process queries. Valid values are `process`, `container`.\n"
                },
                "isNormalizedCpu": {
                    "type": "boolean",
                    "description": "Whether to normalize the CPU percentages.\n"
                },
                "limit": {
                    "type": "integer",
                    "description": "The number of hits to return.\n"
                },
                "metric": {
                    "type": "string",
                    "description": "The process metric name.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of query for use in formulas.\n"
                },
                "sort": {
                    "type": "string",
                    "description": "The direction of the sort. Valid values are `asc`, `desc`. Defaults to `\"desc\"`.\n"
                },
                "tagFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "An array of tags to filter by.\n"
                },
                "textFilter": {
                    "type": "string",
                    "description": "The text to use as a filter.\n"
                }
            },
            "type": "object",
            "required": [
                "dataSource",
                "metric",
                "name"
            ]
        },
        "datadog:index/PowerpackWidgetScatterplotDefinitionRequestScatterplotTableQuerySloQuery:PowerpackWidgetScatterplotDefinitionRequestScatterplotTableQuerySloQuery": {
            "properties": {
                "additionalQueryFilters": {
                    "type": "string",
                    "description": "Additional filters applied to the SLO query.\n"
                },
                "crossOrgUuids": {
                    "type": "string",
                    "description": "The source organization UUID for cross organization queries. Feature in Private Beta.\n"
                },
                "dataSource": {
                    "type": "string",
                    "description": "The data source for SLO queries. Valid values are `slo`.\n"
                },
                "groupMode": {
                    "type": "string",
                    "description": "Group mode to query measures. Valid values are `overall`, `components`. Defaults to `\"overall\"`.\n"
                },
                "measure": {
                    "type": "string",
                    "description": "SLO measures queries. Valid values are `good_events`, `bad_events`, `slo_status`, `error_budget_remaining`, `burn_rate`, `error_budget_burndown`.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of query for use in formulas.\n"
                },
                "sloId": {
                    "type": "string",
                    "description": "ID of an SLO to query.\n"
                },
                "sloQueryType": {
                    "type": "string",
                    "description": "type of the SLO to query. Valid values are `metric`, `time_slice`. Defaults to `\"metric\"`.\n"
                }
            },
            "type": "object",
            "required": [
                "dataSource",
                "measure",
                "sloId"
            ]
        },
        "datadog:index/PowerpackWidgetScatterplotDefinitionRequestX:PowerpackWidgetScatterplotDefinitionRequestX": {
            "properties": {
                "aggregator": {
                    "type": "string",
                    "description": "Aggregator used for the request. Valid values are `avg`, `last`, `max`, `min`, `sum`, `percentile`.\n"
                },
                "apmQuery": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetScatterplotDefinitionRequestXApmQuery:PowerpackWidgetScatterplotDefinitionRequestXApmQuery",
                    "description": "The query to use for this widget.\n"
                },
                "logQuery": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetScatterplotDefinitionRequestXLogQuery:PowerpackWidgetScatterplotDefinitionRequestXLogQuery",
                    "description": "The query to use for this widget.\n"
                },
                "processQuery": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetScatterplotDefinitionRequestXProcessQuery:PowerpackWidgetScatterplotDefinitionRequestXProcessQuery",
                    "description": "The process query to use in the widget. The structure of this block is described below.\n"
                },
                "q": {
                    "type": "string",
                    "description": "The metric query to use for this widget.\n"
                },
                "rumQuery": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetScatterplotDefinitionRequestXRumQuery:PowerpackWidgetScatterplotDefinitionRequestXRumQuery",
                    "description": "The query to use for this widget.\n"
                },
                "securityQuery": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetScatterplotDefinitionRequestXSecurityQuery:PowerpackWidgetScatterplotDefinitionRequestXSecurityQuery",
                    "description": "The query to use for this widget.\n"
                }
            },
            "type": "object"
        },
        "datadog:index/PowerpackWidgetScatterplotDefinitionRequestXApmQuery:PowerpackWidgetScatterplotDefinitionRequestXApmQuery": {
            "properties": {
                "computeQuery": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetScatterplotDefinitionRequestXApmQueryComputeQuery:PowerpackWidgetScatterplotDefinitionRequestXApmQueryComputeQuery",
                    "description": "`compute_query` or `multi_compute` is required. The map keys are listed below.\n"
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/PowerpackWidgetScatterplotDefinitionRequestXApmQueryGroupBy:PowerpackWidgetScatterplotDefinitionRequestXApmQueryGroupBy"
                    },
                    "description": "Multiple `group_by` blocks are allowed using the structure below.\n"
                },
                "index": {
                    "type": "string",
                    "description": "The name of the index to query.\n"
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/PowerpackWidgetScatterplotDefinitionRequestXApmQueryMultiCompute:PowerpackWidgetScatterplotDefinitionRequestXApmQueryMultiCompute"
                    },
                    "description": "`compute_query` or `multi_compute` is required. Multiple `multi_compute` blocks are allowed using the structure below.\n"
                },
                "searchQuery": {
                    "type": "string",
                    "description": "The search query to use.\n"
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/PowerpackWidgetScatterplotDefinitionRequestXApmQueryComputeQuery:PowerpackWidgetScatterplotDefinitionRequestXApmQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "The aggregation method.\n"
                },
                "facet": {
                    "type": "string",
                    "description": "The facet name.\n"
                },
                "interval": {
                    "type": "integer",
                    "description": "Define the time interval in seconds.\n"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/PowerpackWidgetScatterplotDefinitionRequestXApmQueryGroupBy:PowerpackWidgetScatterplotDefinitionRequestXApmQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "description": "The facet name.\n"
                },
                "limit": {
                    "type": "integer",
                    "description": "The maximum number of items in the group.\n"
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetScatterplotDefinitionRequestXApmQueryGroupBySortQuery:PowerpackWidgetScatterplotDefinitionRequestXApmQueryGroupBySortQuery",
                    "description": "A list of exactly one element describing the sort query to use.\n"
                }
            },
            "type": "object"
        },
        "datadog:index/PowerpackWidgetScatterplotDefinitionRequestXApmQueryGroupBySortQuery:PowerpackWidgetScatterplotDefinitionRequestXApmQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "The aggregation method.\n"
                },
                "facet": {
                    "type": "string",
                    "description": "The facet name.\n"
                },
                "order": {
                    "type": "string",
                    "description": "Widget sorting methods. Valid values are `asc`, `desc`.\n"
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/PowerpackWidgetScatterplotDefinitionRequestXApmQueryMultiCompute:PowerpackWidgetScatterplotDefinitionRequestXApmQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "The aggregation method.\n"
                },
                "facet": {
                    "type": "string",
                    "description": "The facet name.\n"
                },
                "interval": {
                    "type": "integer",
                    "description": "Define the time interval in seconds.\n"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/PowerpackWidgetScatterplotDefinitionRequestXLogQuery:PowerpackWidgetScatterplotDefinitionRequestXLogQuery": {
            "properties": {
                "computeQuery": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetScatterplotDefinitionRequestXLogQueryComputeQuery:PowerpackWidgetScatterplotDefinitionRequestXLogQueryComputeQuery",
                    "description": "`compute_query` or `multi_compute` is required. The map keys are listed below.\n"
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/PowerpackWidgetScatterplotDefinitionRequestXLogQueryGroupBy:PowerpackWidgetScatterplotDefinitionRequestXLogQueryGroupBy"
                    },
                    "description": "Multiple `group_by` blocks are allowed using the structure below.\n"
                },
                "index": {
                    "type": "string",
                    "description": "The name of the index to query.\n"
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/PowerpackWidgetScatterplotDefinitionRequestXLogQueryMultiCompute:PowerpackWidgetScatterplotDefinitionRequestXLogQueryMultiCompute"
                    },
                    "description": "`compute_query` or `multi_compute` is required. Multiple `multi_compute` blocks are allowed using the structure below.\n"
                },
                "searchQuery": {
                    "type": "string",
                    "description": "The search query to use.\n"
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/PowerpackWidgetScatterplotDefinitionRequestXLogQueryComputeQuery:PowerpackWidgetScatterplotDefinitionRequestXLogQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "The aggregation method.\n"
                },
                "facet": {
                    "type": "string",
                    "description": "The facet name.\n"
                },
                "interval": {
                    "type": "integer",
                    "description": "Define the time interval in seconds.\n"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/PowerpackWidgetScatterplotDefinitionRequestXLogQueryGroupBy:PowerpackWidgetScatterplotDefinitionRequestXLogQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "description": "The facet name.\n"
                },
                "limit": {
                    "type": "integer",
                    "description": "The maximum number of items in the group.\n"
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetScatterplotDefinitionRequestXLogQueryGroupBySortQuery:PowerpackWidgetScatterplotDefinitionRequestXLogQueryGroupBySortQuery",
                    "description": "A list of exactly one element describing the sort query to use.\n"
                }
            },
            "type": "object"
        },
        "datadog:index/PowerpackWidgetScatterplotDefinitionRequestXLogQueryGroupBySortQuery:PowerpackWidgetScatterplotDefinitionRequestXLogQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "The aggregation method.\n"
                },
                "facet": {
                    "type": "string",
                    "description": "The facet name.\n"
                },
                "order": {
                    "type": "string",
                    "description": "Widget sorting methods. Valid values are `asc`, `desc`.\n"
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/PowerpackWidgetScatterplotDefinitionRequestXLogQueryMultiCompute:PowerpackWidgetScatterplotDefinitionRequestXLogQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "The aggregation method.\n"
                },
                "facet": {
                    "type": "string",
                    "description": "The facet name.\n"
                },
                "interval": {
                    "type": "integer",
                    "description": "Define the time interval in seconds.\n"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/PowerpackWidgetScatterplotDefinitionRequestXProcessQuery:PowerpackWidgetScatterplotDefinitionRequestXProcessQuery": {
            "properties": {
                "filterBies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of processes.\n"
                },
                "limit": {
                    "type": "integer",
                    "description": "The max number of items in the filter list.\n"
                },
                "metric": {
                    "type": "string",
                    "description": "Your chosen metric.\n"
                },
                "searchBy": {
                    "type": "string",
                    "description": "Your chosen search term.\n"
                }
            },
            "type": "object",
            "required": [
                "metric"
            ]
        },
        "datadog:index/PowerpackWidgetScatterplotDefinitionRequestXRumQuery:PowerpackWidgetScatterplotDefinitionRequestXRumQuery": {
            "properties": {
                "computeQuery": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetScatterplotDefinitionRequestXRumQueryComputeQuery:PowerpackWidgetScatterplotDefinitionRequestXRumQueryComputeQuery",
                    "description": "`compute_query` or `multi_compute` is required. The map keys are listed below.\n"
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/PowerpackWidgetScatterplotDefinitionRequestXRumQueryGroupBy:PowerpackWidgetScatterplotDefinitionRequestXRumQueryGroupBy"
                    },
                    "description": "Multiple `group_by` blocks are allowed using the structure below.\n"
                },
                "index": {
                    "type": "string",
                    "description": "The name of the index to query.\n"
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/PowerpackWidgetScatterplotDefinitionRequestXRumQueryMultiCompute:PowerpackWidgetScatterplotDefinitionRequestXRumQueryMultiCompute"
                    },
                    "description": "`compute_query` or `multi_compute` is required. Multiple `multi_compute` blocks are allowed using the structure below.\n"
                },
                "searchQuery": {
                    "type": "string",
                    "description": "The search query to use.\n"
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/PowerpackWidgetScatterplotDefinitionRequestXRumQueryComputeQuery:PowerpackWidgetScatterplotDefinitionRequestXRumQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "The aggregation method.\n"
                },
                "facet": {
                    "type": "string",
                    "description": "The facet name.\n"
                },
                "interval": {
                    "type": "integer",
                    "description": "Define the time interval in seconds.\n"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/PowerpackWidgetScatterplotDefinitionRequestXRumQueryGroupBy:PowerpackWidgetScatterplotDefinitionRequestXRumQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "description": "The facet name.\n"
                },
                "limit": {
                    "type": "integer",
                    "description": "The maximum number of items in the group.\n"
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetScatterplotDefinitionRequestXRumQueryGroupBySortQuery:PowerpackWidgetScatterplotDefinitionRequestXRumQueryGroupBySortQuery",
                    "description": "A list of exactly one element describing the sort query to use.\n"
                }
            },
            "type": "object"
        },
        "datadog:index/PowerpackWidgetScatterplotDefinitionRequestXRumQueryGroupBySortQuery:PowerpackWidgetScatterplotDefinitionRequestXRumQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "The aggregation method.\n"
                },
                "facet": {
                    "type": "string",
                    "description": "The facet name.\n"
                },
                "order": {
                    "type": "string",
                    "description": "Widget sorting methods. Valid values are `asc`, `desc`.\n"
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/PowerpackWidgetScatterplotDefinitionRequestXRumQueryMultiCompute:PowerpackWidgetScatterplotDefinitionRequestXRumQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "The aggregation method.\n"
                },
                "facet": {
                    "type": "string",
                    "description": "The facet name.\n"
                },
                "interval": {
                    "type": "integer",
                    "description": "Define the time interval in seconds.\n"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/PowerpackWidgetScatterplotDefinitionRequestXSecurityQuery:PowerpackWidgetScatterplotDefinitionRequestXSecurityQuery": {
            "properties": {
                "computeQuery": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetScatterplotDefinitionRequestXSecurityQueryComputeQuery:PowerpackWidgetScatterplotDefinitionRequestXSecurityQueryComputeQuery",
                    "description": "`compute_query` or `multi_compute` is required. The map keys are listed below.\n"
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/PowerpackWidgetScatterplotDefinitionRequestXSecurityQueryGroupBy:PowerpackWidgetScatterplotDefinitionRequestXSecurityQueryGroupBy"
                    },
                    "description": "Multiple `group_by` blocks are allowed using the structure below.\n"
                },
                "index": {
                    "type": "string",
                    "description": "The name of the index to query.\n"
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/PowerpackWidgetScatterplotDefinitionRequestXSecurityQueryMultiCompute:PowerpackWidgetScatterplotDefinitionRequestXSecurityQueryMultiCompute"
                    },
                    "description": "`compute_query` or `multi_compute` is required. Multiple `multi_compute` blocks are allowed using the structure below.\n"
                },
                "searchQuery": {
                    "type": "string",
                    "description": "The search query to use.\n"
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/PowerpackWidgetScatterplotDefinitionRequestXSecurityQueryComputeQuery:PowerpackWidgetScatterplotDefinitionRequestXSecurityQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "The aggregation method.\n"
                },
                "facet": {
                    "type": "string",
                    "description": "The facet name.\n"
                },
                "interval": {
                    "type": "integer",
                    "description": "Define the time interval in seconds.\n"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/PowerpackWidgetScatterplotDefinitionRequestXSecurityQueryGroupBy:PowerpackWidgetScatterplotDefinitionRequestXSecurityQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "description": "The facet name.\n"
                },
                "limit": {
                    "type": "integer",
                    "description": "The maximum number of items in the group.\n"
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetScatterplotDefinitionRequestXSecurityQueryGroupBySortQuery:PowerpackWidgetScatterplotDefinitionRequestXSecurityQueryGroupBySortQuery",
                    "description": "A list of exactly one element describing the sort query to use.\n"
                }
            },
            "type": "object"
        },
        "datadog:index/PowerpackWidgetScatterplotDefinitionRequestXSecurityQueryGroupBySortQuery:PowerpackWidgetScatterplotDefinitionRequestXSecurityQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "The aggregation method.\n"
                },
                "facet": {
                    "type": "string",
                    "description": "The facet name.\n"
                },
                "order": {
                    "type": "string",
                    "description": "Widget sorting methods. Valid values are `asc`, `desc`.\n"
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/PowerpackWidgetScatterplotDefinitionRequestXSecurityQueryMultiCompute:PowerpackWidgetScatterplotDefinitionRequestXSecurityQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "The aggregation method.\n"
                },
                "facet": {
                    "type": "string",
                    "description": "The facet name.\n"
                },
                "interval": {
                    "type": "integer",
                    "description": "Define the time interval in seconds.\n"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/PowerpackWidgetScatterplotDefinitionRequestY:PowerpackWidgetScatterplotDefinitionRequestY": {
            "properties": {
                "aggregator": {
                    "type": "string",
                    "description": "Aggregator used for the request. Valid values are `avg`, `last`, `max`, `min`, `sum`, `percentile`.\n"
                },
                "apmQuery": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetScatterplotDefinitionRequestYApmQuery:PowerpackWidgetScatterplotDefinitionRequestYApmQuery",
                    "description": "The query to use for this widget.\n"
                },
                "logQuery": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetScatterplotDefinitionRequestYLogQuery:PowerpackWidgetScatterplotDefinitionRequestYLogQuery",
                    "description": "The query to use for this widget.\n"
                },
                "processQuery": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetScatterplotDefinitionRequestYProcessQuery:PowerpackWidgetScatterplotDefinitionRequestYProcessQuery",
                    "description": "The process query to use in the widget. The structure of this block is described below.\n"
                },
                "q": {
                    "type": "string",
                    "description": "The metric query to use for this widget.\n"
                },
                "rumQuery": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetScatterplotDefinitionRequestYRumQuery:PowerpackWidgetScatterplotDefinitionRequestYRumQuery",
                    "description": "The query to use for this widget.\n"
                },
                "securityQuery": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetScatterplotDefinitionRequestYSecurityQuery:PowerpackWidgetScatterplotDefinitionRequestYSecurityQuery",
                    "description": "The query to use for this widget.\n"
                }
            },
            "type": "object"
        },
        "datadog:index/PowerpackWidgetScatterplotDefinitionRequestYApmQuery:PowerpackWidgetScatterplotDefinitionRequestYApmQuery": {
            "properties": {
                "computeQuery": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetScatterplotDefinitionRequestYApmQueryComputeQuery:PowerpackWidgetScatterplotDefinitionRequestYApmQueryComputeQuery",
                    "description": "`compute_query` or `multi_compute` is required. The map keys are listed below.\n"
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/PowerpackWidgetScatterplotDefinitionRequestYApmQueryGroupBy:PowerpackWidgetScatterplotDefinitionRequestYApmQueryGroupBy"
                    },
                    "description": "Multiple `group_by` blocks are allowed using the structure below.\n"
                },
                "index": {
                    "type": "string",
                    "description": "The name of the index to query.\n"
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/PowerpackWidgetScatterplotDefinitionRequestYApmQueryMultiCompute:PowerpackWidgetScatterplotDefinitionRequestYApmQueryMultiCompute"
                    },
                    "description": "`compute_query` or `multi_compute` is required. Multiple `multi_compute` blocks are allowed using the structure below.\n"
                },
                "searchQuery": {
                    "type": "string",
                    "description": "The search query to use.\n"
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/PowerpackWidgetScatterplotDefinitionRequestYApmQueryComputeQuery:PowerpackWidgetScatterplotDefinitionRequestYApmQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "The aggregation method.\n"
                },
                "facet": {
                    "type": "string",
                    "description": "The facet name.\n"
                },
                "interval": {
                    "type": "integer",
                    "description": "Define the time interval in seconds.\n"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/PowerpackWidgetScatterplotDefinitionRequestYApmQueryGroupBy:PowerpackWidgetScatterplotDefinitionRequestYApmQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "description": "The facet name.\n"
                },
                "limit": {
                    "type": "integer",
                    "description": "The maximum number of items in the group.\n"
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetScatterplotDefinitionRequestYApmQueryGroupBySortQuery:PowerpackWidgetScatterplotDefinitionRequestYApmQueryGroupBySortQuery",
                    "description": "A list of exactly one element describing the sort query to use.\n"
                }
            },
            "type": "object"
        },
        "datadog:index/PowerpackWidgetScatterplotDefinitionRequestYApmQueryGroupBySortQuery:PowerpackWidgetScatterplotDefinitionRequestYApmQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "The aggregation method.\n"
                },
                "facet": {
                    "type": "string",
                    "description": "The facet name.\n"
                },
                "order": {
                    "type": "string",
                    "description": "Widget sorting methods. Valid values are `asc`, `desc`.\n"
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/PowerpackWidgetScatterplotDefinitionRequestYApmQueryMultiCompute:PowerpackWidgetScatterplotDefinitionRequestYApmQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "The aggregation method.\n"
                },
                "facet": {
                    "type": "string",
                    "description": "The facet name.\n"
                },
                "interval": {
                    "type": "integer",
                    "description": "Define the time interval in seconds.\n"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/PowerpackWidgetScatterplotDefinitionRequestYLogQuery:PowerpackWidgetScatterplotDefinitionRequestYLogQuery": {
            "properties": {
                "computeQuery": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetScatterplotDefinitionRequestYLogQueryComputeQuery:PowerpackWidgetScatterplotDefinitionRequestYLogQueryComputeQuery",
                    "description": "`compute_query` or `multi_compute` is required. The map keys are listed below.\n"
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/PowerpackWidgetScatterplotDefinitionRequestYLogQueryGroupBy:PowerpackWidgetScatterplotDefinitionRequestYLogQueryGroupBy"
                    },
                    "description": "Multiple `group_by` blocks are allowed using the structure below.\n"
                },
                "index": {
                    "type": "string",
                    "description": "The name of the index to query.\n"
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/PowerpackWidgetScatterplotDefinitionRequestYLogQueryMultiCompute:PowerpackWidgetScatterplotDefinitionRequestYLogQueryMultiCompute"
                    },
                    "description": "`compute_query` or `multi_compute` is required. Multiple `multi_compute` blocks are allowed using the structure below.\n"
                },
                "searchQuery": {
                    "type": "string",
                    "description": "The search query to use.\n"
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/PowerpackWidgetScatterplotDefinitionRequestYLogQueryComputeQuery:PowerpackWidgetScatterplotDefinitionRequestYLogQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "The aggregation method.\n"
                },
                "facet": {
                    "type": "string",
                    "description": "The facet name.\n"
                },
                "interval": {
                    "type": "integer",
                    "description": "Define the time interval in seconds.\n"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/PowerpackWidgetScatterplotDefinitionRequestYLogQueryGroupBy:PowerpackWidgetScatterplotDefinitionRequestYLogQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "description": "The facet name.\n"
                },
                "limit": {
                    "type": "integer",
                    "description": "The maximum number of items in the group.\n"
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetScatterplotDefinitionRequestYLogQueryGroupBySortQuery:PowerpackWidgetScatterplotDefinitionRequestYLogQueryGroupBySortQuery",
                    "description": "A list of exactly one element describing the sort query to use.\n"
                }
            },
            "type": "object"
        },
        "datadog:index/PowerpackWidgetScatterplotDefinitionRequestYLogQueryGroupBySortQuery:PowerpackWidgetScatterplotDefinitionRequestYLogQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "The aggregation method.\n"
                },
                "facet": {
                    "type": "string",
                    "description": "The facet name.\n"
                },
                "order": {
                    "type": "string",
                    "description": "Widget sorting methods. Valid values are `asc`, `desc`.\n"
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/PowerpackWidgetScatterplotDefinitionRequestYLogQueryMultiCompute:PowerpackWidgetScatterplotDefinitionRequestYLogQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "The aggregation method.\n"
                },
                "facet": {
                    "type": "string",
                    "description": "The facet name.\n"
                },
                "interval": {
                    "type": "integer",
                    "description": "Define the time interval in seconds.\n"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/PowerpackWidgetScatterplotDefinitionRequestYProcessQuery:PowerpackWidgetScatterplotDefinitionRequestYProcessQuery": {
            "properties": {
                "filterBies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of processes.\n"
                },
                "limit": {
                    "type": "integer",
                    "description": "The max number of items in the filter list.\n"
                },
                "metric": {
                    "type": "string",
                    "description": "Your chosen metric.\n"
                },
                "searchBy": {
                    "type": "string",
                    "description": "Your chosen search term.\n"
                }
            },
            "type": "object",
            "required": [
                "metric"
            ]
        },
        "datadog:index/PowerpackWidgetScatterplotDefinitionRequestYRumQuery:PowerpackWidgetScatterplotDefinitionRequestYRumQuery": {
            "properties": {
                "computeQuery": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetScatterplotDefinitionRequestYRumQueryComputeQuery:PowerpackWidgetScatterplotDefinitionRequestYRumQueryComputeQuery",
                    "description": "`compute_query` or `multi_compute` is required. The map keys are listed below.\n"
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/PowerpackWidgetScatterplotDefinitionRequestYRumQueryGroupBy:PowerpackWidgetScatterplotDefinitionRequestYRumQueryGroupBy"
                    },
                    "description": "Multiple `group_by` blocks are allowed using the structure below.\n"
                },
                "index": {
                    "type": "string",
                    "description": "The name of the index to query.\n"
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/PowerpackWidgetScatterplotDefinitionRequestYRumQueryMultiCompute:PowerpackWidgetScatterplotDefinitionRequestYRumQueryMultiCompute"
                    },
                    "description": "`compute_query` or `multi_compute` is required. Multiple `multi_compute` blocks are allowed using the structure below.\n"
                },
                "searchQuery": {
                    "type": "string",
                    "description": "The search query to use.\n"
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/PowerpackWidgetScatterplotDefinitionRequestYRumQueryComputeQuery:PowerpackWidgetScatterplotDefinitionRequestYRumQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "The aggregation method.\n"
                },
                "facet": {
                    "type": "string",
                    "description": "The facet name.\n"
                },
                "interval": {
                    "type": "integer",
                    "description": "Define the time interval in seconds.\n"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/PowerpackWidgetScatterplotDefinitionRequestYRumQueryGroupBy:PowerpackWidgetScatterplotDefinitionRequestYRumQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "description": "The facet name.\n"
                },
                "limit": {
                    "type": "integer",
                    "description": "The maximum number of items in the group.\n"
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetScatterplotDefinitionRequestYRumQueryGroupBySortQuery:PowerpackWidgetScatterplotDefinitionRequestYRumQueryGroupBySortQuery",
                    "description": "A list of exactly one element describing the sort query to use.\n"
                }
            },
            "type": "object"
        },
        "datadog:index/PowerpackWidgetScatterplotDefinitionRequestYRumQueryGroupBySortQuery:PowerpackWidgetScatterplotDefinitionRequestYRumQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "The aggregation method.\n"
                },
                "facet": {
                    "type": "string",
                    "description": "The facet name.\n"
                },
                "order": {
                    "type": "string",
                    "description": "Widget sorting methods. Valid values are `asc`, `desc`.\n"
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/PowerpackWidgetScatterplotDefinitionRequestYRumQueryMultiCompute:PowerpackWidgetScatterplotDefinitionRequestYRumQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "The aggregation method.\n"
                },
                "facet": {
                    "type": "string",
                    "description": "The facet name.\n"
                },
                "interval": {
                    "type": "integer",
                    "description": "Define the time interval in seconds.\n"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/PowerpackWidgetScatterplotDefinitionRequestYSecurityQuery:PowerpackWidgetScatterplotDefinitionRequestYSecurityQuery": {
            "properties": {
                "computeQuery": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetScatterplotDefinitionRequestYSecurityQueryComputeQuery:PowerpackWidgetScatterplotDefinitionRequestYSecurityQueryComputeQuery",
                    "description": "`compute_query` or `multi_compute` is required. The map keys are listed below.\n"
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/PowerpackWidgetScatterplotDefinitionRequestYSecurityQueryGroupBy:PowerpackWidgetScatterplotDefinitionRequestYSecurityQueryGroupBy"
                    },
                    "description": "Multiple `group_by` blocks are allowed using the structure below.\n"
                },
                "index": {
                    "type": "string",
                    "description": "The name of the index to query.\n"
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/PowerpackWidgetScatterplotDefinitionRequestYSecurityQueryMultiCompute:PowerpackWidgetScatterplotDefinitionRequestYSecurityQueryMultiCompute"
                    },
                    "description": "`compute_query` or `multi_compute` is required. Multiple `multi_compute` blocks are allowed using the structure below.\n"
                },
                "searchQuery": {
                    "type": "string",
                    "description": "The search query to use.\n"
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/PowerpackWidgetScatterplotDefinitionRequestYSecurityQueryComputeQuery:PowerpackWidgetScatterplotDefinitionRequestYSecurityQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "The aggregation method.\n"
                },
                "facet": {
                    "type": "string",
                    "description": "The facet name.\n"
                },
                "interval": {
                    "type": "integer",
                    "description": "Define the time interval in seconds.\n"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/PowerpackWidgetScatterplotDefinitionRequestYSecurityQueryGroupBy:PowerpackWidgetScatterplotDefinitionRequestYSecurityQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "description": "The facet name.\n"
                },
                "limit": {
                    "type": "integer",
                    "description": "The maximum number of items in the group.\n"
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetScatterplotDefinitionRequestYSecurityQueryGroupBySortQuery:PowerpackWidgetScatterplotDefinitionRequestYSecurityQueryGroupBySortQuery",
                    "description": "A list of exactly one element describing the sort query to use.\n"
                }
            },
            "type": "object"
        },
        "datadog:index/PowerpackWidgetScatterplotDefinitionRequestYSecurityQueryGroupBySortQuery:PowerpackWidgetScatterplotDefinitionRequestYSecurityQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "The aggregation method.\n"
                },
                "facet": {
                    "type": "string",
                    "description": "The facet name.\n"
                },
                "order": {
                    "type": "string",
                    "description": "Widget sorting methods. Valid values are `asc`, `desc`.\n"
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/PowerpackWidgetScatterplotDefinitionRequestYSecurityQueryMultiCompute:PowerpackWidgetScatterplotDefinitionRequestYSecurityQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "The aggregation method.\n"
                },
                "facet": {
                    "type": "string",
                    "description": "The facet name.\n"
                },
                "interval": {
                    "type": "integer",
                    "description": "Define the time interval in seconds.\n"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/PowerpackWidgetScatterplotDefinitionXaxis:PowerpackWidgetScatterplotDefinitionXaxis": {
            "properties": {
                "includeZero": {
                    "type": "boolean",
                    "description": "Always include zero or fit the axis to the data range.\n"
                },
                "label": {
                    "type": "string",
                    "description": "The label of the axis to display on the graph.\n"
                },
                "max": {
                    "type": "string",
                    "description": "Specify the maximum value to show on the Y-axis.\n"
                },
                "min": {
                    "type": "string",
                    "description": "Specify the minimum value to show on the Y-axis.\n"
                },
                "scale": {
                    "type": "string",
                    "description": "Specify the scale type, options: `linear`, `log`, `pow`, `sqrt`.\n"
                }
            },
            "type": "object"
        },
        "datadog:index/PowerpackWidgetScatterplotDefinitionYaxis:PowerpackWidgetScatterplotDefinitionYaxis": {
            "properties": {
                "includeZero": {
                    "type": "boolean",
                    "description": "Always include zero or fit the axis to the data range.\n"
                },
                "label": {
                    "type": "string",
                    "description": "The label of the axis to display on the graph.\n"
                },
                "max": {
                    "type": "string",
                    "description": "Specify the maximum value to show on the Y-axis.\n"
                },
                "min": {
                    "type": "string",
                    "description": "Specify the minimum value to show on the Y-axis.\n"
                },
                "scale": {
                    "type": "string",
                    "description": "Specify the scale type, options: `linear`, `log`, `pow`, `sqrt`.\n"
                }
            },
            "type": "object"
        },
        "datadog:index/PowerpackWidgetServiceLevelObjectiveDefinition:PowerpackWidgetServiceLevelObjectiveDefinition": {
            "properties": {
                "additionalQueryFilters": {
                    "type": "string",
                    "description": "Additional filters applied to the SLO query.\n"
                },
                "globalTimeTarget": {
                    "type": "string",
                    "description": "The global time target of the widget.\n"
                },
                "showErrorBudget": {
                    "type": "boolean",
                    "description": "Whether to show the error budget or not.\n"
                },
                "sloId": {
                    "type": "string",
                    "description": "The ID of the service level objective used by the widget.\n"
                },
                "timeWindows": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of time windows to display in the widget. Valid values are `7d`, `30d`, `90d`, `week_to_date`, `previous_week`, `month_to_date`, `previous_month`, `global_time`.\n"
                },
                "title": {
                    "type": "string",
                    "description": "The title of the widget.\n"
                },
                "titleAlign": {
                    "type": "string",
                    "description": "The alignment of the widget's title. Valid values are `center`, `left`, `right`.\n"
                },
                "titleSize": {
                    "type": "string",
                    "description": "The size of the widget's title (defaults to 16).\n"
                },
                "viewMode": {
                    "type": "string",
                    "description": "The view mode for the widget. Valid values are `overall`, `component`, `both`.\n"
                },
                "viewType": {
                    "type": "string",
                    "description": "The type of view to use when displaying the widget. Only `detail` is supported.\n"
                }
            },
            "type": "object",
            "required": [
                "sloId",
                "timeWindows",
                "viewMode",
                "viewType"
            ]
        },
        "datadog:index/PowerpackWidgetServicemapDefinition:PowerpackWidgetServicemapDefinition": {
            "properties": {
                "customLinks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/PowerpackWidgetServicemapDefinitionCustomLink:PowerpackWidgetServicemapDefinitionCustomLink"
                    },
                    "description": "A nested block describing a custom link. Multiple `custom_link` blocks are allowed using the structure below.\n"
                },
                "filters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Your environment and primary tag (or `*` if enabled for your account).\n"
                },
                "service": {
                    "type": "string",
                    "description": "The ID of the service to map.\n"
                },
                "title": {
                    "type": "string",
                    "description": "The title of the widget.\n"
                },
                "titleAlign": {
                    "type": "string",
                    "description": "The alignment of the widget's title. Valid values are `center`, `left`, `right`.\n"
                },
                "titleSize": {
                    "type": "string",
                    "description": "The size of the widget's title (defaults to 16).\n"
                }
            },
            "type": "object",
            "required": [
                "filters",
                "service"
            ]
        },
        "datadog:index/PowerpackWidgetServicemapDefinitionCustomLink:PowerpackWidgetServicemapDefinitionCustomLink": {
            "properties": {
                "isHidden": {
                    "type": "boolean",
                    "description": "The flag for toggling context menu link visibility.\n"
                },
                "label": {
                    "type": "string",
                    "description": "The label for the custom link URL.\n"
                },
                "link": {
                    "type": "string",
                    "description": "The URL of the custom link.\n"
                },
                "overrideLabel": {
                    "type": "string",
                    "description": "The label ID that refers to a context menu link item. When `override_label` is provided, the client request omits the label field.\n"
                }
            },
            "type": "object"
        },
        "datadog:index/PowerpackWidgetSloListDefinition:PowerpackWidgetSloListDefinition": {
            "properties": {
                "request": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetSloListDefinitionRequest:PowerpackWidgetSloListDefinitionRequest",
                    "description": "A nested block describing the request to use when displaying the widget. Exactly one `request` block is allowed.\n"
                },
                "title": {
                    "type": "string",
                    "description": "The title of the widget.\n"
                },
                "titleAlign": {
                    "type": "string",
                    "description": "The alignment of the widget's title. Valid values are `center`, `left`, `right`.\n"
                },
                "titleSize": {
                    "type": "string",
                    "description": "The size of the widget's title (defaults to 16).\n"
                }
            },
            "type": "object",
            "required": [
                "request"
            ]
        },
        "datadog:index/PowerpackWidgetSloListDefinitionRequest:PowerpackWidgetSloListDefinitionRequest": {
            "properties": {
                "query": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetSloListDefinitionRequestQuery:PowerpackWidgetSloListDefinitionRequestQuery",
                    "description": "Updated SLO List widget.\n"
                },
                "requestType": {
                    "type": "string",
                    "description": "The request type for the SLO List request. Valid values are `slo_list`.\n"
                }
            },
            "type": "object",
            "required": [
                "query",
                "requestType"
            ]
        },
        "datadog:index/PowerpackWidgetSloListDefinitionRequestQuery:PowerpackWidgetSloListDefinitionRequestQuery": {
            "properties": {
                "limit": {
                    "type": "integer",
                    "description": "Maximum number of results to display in the table. Defaults to `100`.\n"
                },
                "queryString": {
                    "type": "string",
                    "description": "Widget query.\n"
                },
                "sort": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetSloListDefinitionRequestQuerySort:PowerpackWidgetSloListDefinitionRequestQuerySort",
                    "description": "The facet and order to sort the data, for example: `{\"column\": \"status.sli\", \"order\": \"desc\"}`.\n"
                }
            },
            "type": "object",
            "required": [
                "queryString"
            ]
        },
        "datadog:index/PowerpackWidgetSloListDefinitionRequestQuerySort:PowerpackWidgetSloListDefinitionRequestQuerySort": {
            "properties": {
                "column": {
                    "type": "string",
                    "description": "The facet path for the column.\n"
                },
                "order": {
                    "type": "string",
                    "description": "Widget sorting methods. Valid values are `asc`, `desc`.\n"
                }
            },
            "type": "object",
            "required": [
                "column",
                "order"
            ]
        },
        "datadog:index/PowerpackWidgetSunburstDefinition:PowerpackWidgetSunburstDefinition": {
            "properties": {
                "customLinks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/PowerpackWidgetSunburstDefinitionCustomLink:PowerpackWidgetSunburstDefinitionCustomLink"
                    },
                    "description": "Nested block describing a custom link. Multiple `custom_link` blocks are allowed with the structure below.\n"
                },
                "hideTotal": {
                    "type": "boolean",
                    "description": "Whether or not to show the total value in the widget.\n"
                },
                "legendInline": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetSunburstDefinitionLegendInline:PowerpackWidgetSunburstDefinitionLegendInline",
                    "description": "Used to configure the inline legend. Cannot be used in conjunction with legend*table.\n"
                },
                "legendTable": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetSunburstDefinitionLegendTable:PowerpackWidgetSunburstDefinitionLegendTable",
                    "description": "Used to configure the table legend. Cannot be used in conjunction with legend*inline.\n"
                },
                "liveSpan": {
                    "type": "string",
                    "description": "The timeframe to use when displaying the widget. Valid values are `1m`, `5m`, `10m`, `15m`, `30m`, `1h`, `4h`, `1d`, `2d`, `1w`, `1mo`, `3mo`, `6mo`, `week_to_date`, `month_to_date`, `1y`, `alert`.\n"
                },
                "requests": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/PowerpackWidgetSunburstDefinitionRequest:PowerpackWidgetSunburstDefinitionRequest"
                    },
                    "description": "Nested block describing the request to use when displaying the widget. Multiple `request` blocks are allowed with the structure below (exactly one of `q`, `log_query` or `rum_query` is required within the `request` block).\n"
                },
                "title": {
                    "type": "string",
                    "description": "The title of the widget.\n"
                },
                "titleAlign": {
                    "type": "string",
                    "description": "The alignment of the widget's title. One of `left`, `center`, or `right`. Valid values are `center`, `left`, `right`.\n"
                },
                "titleSize": {
                    "type": "string",
                    "description": "The size of the widget's title. Default is 16.\n"
                }
            },
            "type": "object"
        },
        "datadog:index/PowerpackWidgetSunburstDefinitionCustomLink:PowerpackWidgetSunburstDefinitionCustomLink": {
            "properties": {
                "isHidden": {
                    "type": "boolean",
                    "description": "The flag for toggling context menu link visibility.\n"
                },
                "label": {
                    "type": "string",
                    "description": "The label for the custom link URL.\n"
                },
                "link": {
                    "type": "string",
                    "description": "The URL of the custom link.\n"
                },
                "overrideLabel": {
                    "type": "string",
                    "description": "The label ID that refers to a context menu link item. When `override_label` is provided, the client request omits the label field.\n"
                }
            },
            "type": "object"
        },
        "datadog:index/PowerpackWidgetSunburstDefinitionLegendInline:PowerpackWidgetSunburstDefinitionLegendInline": {
            "properties": {
                "hidePercent": {
                    "type": "boolean",
                    "description": "Whether to hide the percentages of the groups.\n"
                },
                "hideValue": {
                    "type": "boolean",
                    "description": "Whether to hide the values of the groups.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The type of legend (inline or automatic). Valid values are `inline`, `automatic`.\n"
                }
            },
            "type": "object",
            "required": [
                "type"
            ]
        },
        "datadog:index/PowerpackWidgetSunburstDefinitionLegendTable:PowerpackWidgetSunburstDefinitionLegendTable": {
            "properties": {
                "type": {
                    "type": "string",
                    "description": "The type of legend (table or none). Valid values are `table`, `none`.\n"
                }
            },
            "type": "object",
            "required": [
                "type"
            ]
        },
        "datadog:index/PowerpackWidgetSunburstDefinitionRequest:PowerpackWidgetSunburstDefinitionRequest": {
            "properties": {
                "apmQuery": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetSunburstDefinitionRequestApmQuery:PowerpackWidgetSunburstDefinitionRequestApmQuery",
                    "description": "The query to use for this widget.\n"
                },
                "auditQuery": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetSunburstDefinitionRequestAuditQuery:PowerpackWidgetSunburstDefinitionRequestAuditQuery",
                    "description": "The query to use for this widget.\n"
                },
                "formulas": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/PowerpackWidgetSunburstDefinitionRequestFormula:PowerpackWidgetSunburstDefinitionRequestFormula"
                    }
                },
                "logQuery": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetSunburstDefinitionRequestLogQuery:PowerpackWidgetSunburstDefinitionRequestLogQuery",
                    "description": "The query to use for this widget.\n"
                },
                "networkQuery": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetSunburstDefinitionRequestNetworkQuery:PowerpackWidgetSunburstDefinitionRequestNetworkQuery",
                    "description": "The query to use for this widget.\n"
                },
                "processQuery": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetSunburstDefinitionRequestProcessQuery:PowerpackWidgetSunburstDefinitionRequestProcessQuery",
                    "description": "The process query to use in the widget. The structure of this block is described below.\n"
                },
                "q": {
                    "type": "string",
                    "description": "The metric query to use for this widget.\n"
                },
                "queries": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/PowerpackWidgetSunburstDefinitionRequestQuery:PowerpackWidgetSunburstDefinitionRequestQuery"
                    }
                },
                "rumQuery": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetSunburstDefinitionRequestRumQuery:PowerpackWidgetSunburstDefinitionRequestRumQuery",
                    "description": "The query to use for this widget.\n"
                },
                "securityQuery": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetSunburstDefinitionRequestSecurityQuery:PowerpackWidgetSunburstDefinitionRequestSecurityQuery",
                    "description": "The query to use for this widget.\n"
                },
                "style": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetSunburstDefinitionRequestStyle:PowerpackWidgetSunburstDefinitionRequestStyle",
                    "description": "Define style for the widget's request.\n"
                }
            },
            "type": "object"
        },
        "datadog:index/PowerpackWidgetSunburstDefinitionRequestApmQuery:PowerpackWidgetSunburstDefinitionRequestApmQuery": {
            "properties": {
                "computeQuery": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetSunburstDefinitionRequestApmQueryComputeQuery:PowerpackWidgetSunburstDefinitionRequestApmQueryComputeQuery",
                    "description": "`compute_query` or `multi_compute` is required. The map keys are listed below.\n"
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/PowerpackWidgetSunburstDefinitionRequestApmQueryGroupBy:PowerpackWidgetSunburstDefinitionRequestApmQueryGroupBy"
                    },
                    "description": "Multiple `group_by` blocks are allowed using the structure below.\n"
                },
                "index": {
                    "type": "string",
                    "description": "The name of the index to query.\n"
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/PowerpackWidgetSunburstDefinitionRequestApmQueryMultiCompute:PowerpackWidgetSunburstDefinitionRequestApmQueryMultiCompute"
                    },
                    "description": "`compute_query` or `multi_compute` is required. Multiple `multi_compute` blocks are allowed using the structure below.\n"
                },
                "searchQuery": {
                    "type": "string",
                    "description": "The search query to use.\n"
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/PowerpackWidgetSunburstDefinitionRequestApmQueryComputeQuery:PowerpackWidgetSunburstDefinitionRequestApmQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "The aggregation method.\n"
                },
                "facet": {
                    "type": "string",
                    "description": "The facet name.\n"
                },
                "interval": {
                    "type": "integer",
                    "description": "Define the time interval in seconds.\n"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/PowerpackWidgetSunburstDefinitionRequestApmQueryGroupBy:PowerpackWidgetSunburstDefinitionRequestApmQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "description": "The facet name.\n"
                },
                "limit": {
                    "type": "integer",
                    "description": "The maximum number of items in the group.\n"
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetSunburstDefinitionRequestApmQueryGroupBySortQuery:PowerpackWidgetSunburstDefinitionRequestApmQueryGroupBySortQuery",
                    "description": "A list of exactly one element describing the sort query to use.\n"
                }
            },
            "type": "object"
        },
        "datadog:index/PowerpackWidgetSunburstDefinitionRequestApmQueryGroupBySortQuery:PowerpackWidgetSunburstDefinitionRequestApmQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "The aggregation method.\n"
                },
                "facet": {
                    "type": "string",
                    "description": "The facet name.\n"
                },
                "order": {
                    "type": "string",
                    "description": "Widget sorting methods. Valid values are `asc`, `desc`.\n"
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/PowerpackWidgetSunburstDefinitionRequestApmQueryMultiCompute:PowerpackWidgetSunburstDefinitionRequestApmQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "The aggregation method.\n"
                },
                "facet": {
                    "type": "string",
                    "description": "The facet name.\n"
                },
                "interval": {
                    "type": "integer",
                    "description": "Define the time interval in seconds.\n"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/PowerpackWidgetSunburstDefinitionRequestAuditQuery:PowerpackWidgetSunburstDefinitionRequestAuditQuery": {
            "properties": {
                "computeQuery": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetSunburstDefinitionRequestAuditQueryComputeQuery:PowerpackWidgetSunburstDefinitionRequestAuditQueryComputeQuery",
                    "description": "`compute_query` or `multi_compute` is required. The map keys are listed below.\n"
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/PowerpackWidgetSunburstDefinitionRequestAuditQueryGroupBy:PowerpackWidgetSunburstDefinitionRequestAuditQueryGroupBy"
                    },
                    "description": "Multiple `group_by` blocks are allowed using the structure below.\n"
                },
                "index": {
                    "type": "string",
                    "description": "The name of the index to query.\n"
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/PowerpackWidgetSunburstDefinitionRequestAuditQueryMultiCompute:PowerpackWidgetSunburstDefinitionRequestAuditQueryMultiCompute"
                    },
                    "description": "`compute_query` or `multi_compute` is required. Multiple `multi_compute` blocks are allowed using the structure below.\n"
                },
                "searchQuery": {
                    "type": "string",
                    "description": "The search query to use.\n"
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/PowerpackWidgetSunburstDefinitionRequestAuditQueryComputeQuery:PowerpackWidgetSunburstDefinitionRequestAuditQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "The aggregation method.\n"
                },
                "facet": {
                    "type": "string",
                    "description": "The facet name.\n"
                },
                "interval": {
                    "type": "integer",
                    "description": "Define the time interval in seconds.\n"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/PowerpackWidgetSunburstDefinitionRequestAuditQueryGroupBy:PowerpackWidgetSunburstDefinitionRequestAuditQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "description": "The facet name.\n"
                },
                "limit": {
                    "type": "integer",
                    "description": "The maximum number of items in the group.\n"
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetSunburstDefinitionRequestAuditQueryGroupBySortQuery:PowerpackWidgetSunburstDefinitionRequestAuditQueryGroupBySortQuery",
                    "description": "A list of exactly one element describing the sort query to use.\n"
                }
            },
            "type": "object"
        },
        "datadog:index/PowerpackWidgetSunburstDefinitionRequestAuditQueryGroupBySortQuery:PowerpackWidgetSunburstDefinitionRequestAuditQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "The aggregation method.\n"
                },
                "facet": {
                    "type": "string",
                    "description": "The facet name.\n"
                },
                "order": {
                    "type": "string",
                    "description": "Widget sorting methods. Valid values are `asc`, `desc`.\n"
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/PowerpackWidgetSunburstDefinitionRequestAuditQueryMultiCompute:PowerpackWidgetSunburstDefinitionRequestAuditQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "The aggregation method.\n"
                },
                "facet": {
                    "type": "string",
                    "description": "The facet name.\n"
                },
                "interval": {
                    "type": "integer",
                    "description": "Define the time interval in seconds.\n"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/PowerpackWidgetSunburstDefinitionRequestFormula:PowerpackWidgetSunburstDefinitionRequestFormula": {
            "properties": {
                "alias": {
                    "type": "string",
                    "description": "An expression alias.\n"
                },
                "cellDisplayMode": {
                    "type": "string",
                    "description": "A list of display modes for each table cell. Valid values are `number`, `bar`.\n"
                },
                "conditionalFormats": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/PowerpackWidgetSunburstDefinitionRequestFormulaConditionalFormat:PowerpackWidgetSunburstDefinitionRequestFormulaConditionalFormat"
                    },
                    "description": "Conditional formats allow you to set the color of your widget content or background depending on the rule applied to your data. Multiple `conditional_formats` blocks are allowed using the structure below.\n"
                },
                "formulaExpression": {
                    "type": "string",
                    "description": "A string expression built from queries, formulas, and functions.\n"
                },
                "limit": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetSunburstDefinitionRequestFormulaLimit:PowerpackWidgetSunburstDefinitionRequestFormulaLimit",
                    "description": "The options for limiting results returned.\n"
                },
                "style": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetSunburstDefinitionRequestFormulaStyle:PowerpackWidgetSunburstDefinitionRequestFormulaStyle",
                    "description": "Styling options for widget formulas.\n"
                }
            },
            "type": "object",
            "required": [
                "formulaExpression"
            ]
        },
        "datadog:index/PowerpackWidgetSunburstDefinitionRequestFormulaConditionalFormat:PowerpackWidgetSunburstDefinitionRequestFormulaConditionalFormat": {
            "properties": {
                "comparator": {
                    "type": "string",
                    "description": "The comparator to use. Valid values are `=`, `\u003e`, `\u003e=`, `\u003c`, `\u003c=`.\n"
                },
                "customBgColor": {
                    "type": "string",
                    "description": "The color palette to apply to the background, same values available as palette.\n"
                },
                "customFgColor": {
                    "type": "string",
                    "description": "The color palette to apply to the foreground, same values available as palette.\n"
                },
                "hideValue": {
                    "type": "boolean",
                    "description": "Setting this to True hides values.\n"
                },
                "imageUrl": {
                    "type": "string",
                    "description": "Displays an image as the background.\n"
                },
                "metric": {
                    "type": "string",
                    "description": "The metric from the request to correlate with this conditional format.\n"
                },
                "palette": {
                    "type": "string",
                    "description": "The color palette to apply. Valid values are `blue`, `custom_bg`, `custom_image`, `custom_text`, `gray_on_white`, `grey`, `green`, `orange`, `red`, `red_on_white`, `white_on_gray`, `white_on_green`, `green_on_white`, `white_on_red`, `white_on_yellow`, `yellow_on_white`, `black_on_light_yellow`, `black_on_light_green`, `black_on_light_red`.\n"
                },
                "timeframe": {
                    "type": "string",
                    "description": "Defines the displayed timeframe.\n"
                },
                "value": {
                    "type": "number",
                    "description": "A value for the comparator.\n"
                }
            },
            "type": "object",
            "required": [
                "comparator",
                "palette",
                "value"
            ]
        },
        "datadog:index/PowerpackWidgetSunburstDefinitionRequestFormulaLimit:PowerpackWidgetSunburstDefinitionRequestFormulaLimit": {
            "properties": {
                "count": {
                    "type": "integer",
                    "description": "The number of results to return.\n"
                },
                "order": {
                    "type": "string",
                    "description": "The direction of the sort. Valid values are `asc`, `desc`. Defaults to `\"desc\"`.\n"
                }
            },
            "type": "object"
        },
        "datadog:index/PowerpackWidgetSunburstDefinitionRequestFormulaStyle:PowerpackWidgetSunburstDefinitionRequestFormulaStyle": {
            "properties": {
                "palette": {
                    "type": "string",
                    "description": "The color palette used to display the formula. A guide to the available color palettes can be found at https://docs.datadoghq.com/dashboards/guide/widget_colors.\n"
                },
                "paletteIndex": {
                    "type": "integer",
                    "description": "Index specifying which color to use within the palette.\n"
                }
            },
            "type": "object"
        },
        "datadog:index/PowerpackWidgetSunburstDefinitionRequestLogQuery:PowerpackWidgetSunburstDefinitionRequestLogQuery": {
            "properties": {
                "computeQuery": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetSunburstDefinitionRequestLogQueryComputeQuery:PowerpackWidgetSunburstDefinitionRequestLogQueryComputeQuery",
                    "description": "`compute_query` or `multi_compute` is required. The map keys are listed below.\n"
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/PowerpackWidgetSunburstDefinitionRequestLogQueryGroupBy:PowerpackWidgetSunburstDefinitionRequestLogQueryGroupBy"
                    },
                    "description": "Multiple `group_by` blocks are allowed using the structure below.\n"
                },
                "index": {
                    "type": "string",
                    "description": "The name of the index to query.\n"
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/PowerpackWidgetSunburstDefinitionRequestLogQueryMultiCompute:PowerpackWidgetSunburstDefinitionRequestLogQueryMultiCompute"
                    },
                    "description": "`compute_query` or `multi_compute` is required. Multiple `multi_compute` blocks are allowed using the structure below.\n"
                },
                "searchQuery": {
                    "type": "string",
                    "description": "The search query to use.\n"
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/PowerpackWidgetSunburstDefinitionRequestLogQueryComputeQuery:PowerpackWidgetSunburstDefinitionRequestLogQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "The aggregation method.\n"
                },
                "facet": {
                    "type": "string",
                    "description": "The facet name.\n"
                },
                "interval": {
                    "type": "integer",
                    "description": "Define the time interval in seconds.\n"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/PowerpackWidgetSunburstDefinitionRequestLogQueryGroupBy:PowerpackWidgetSunburstDefinitionRequestLogQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "description": "The facet name.\n"
                },
                "limit": {
                    "type": "integer",
                    "description": "The maximum number of items in the group.\n"
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetSunburstDefinitionRequestLogQueryGroupBySortQuery:PowerpackWidgetSunburstDefinitionRequestLogQueryGroupBySortQuery",
                    "description": "A list of exactly one element describing the sort query to use.\n"
                }
            },
            "type": "object"
        },
        "datadog:index/PowerpackWidgetSunburstDefinitionRequestLogQueryGroupBySortQuery:PowerpackWidgetSunburstDefinitionRequestLogQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "The aggregation method.\n"
                },
                "facet": {
                    "type": "string",
                    "description": "The facet name.\n"
                },
                "order": {
                    "type": "string",
                    "description": "Widget sorting methods. Valid values are `asc`, `desc`.\n"
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/PowerpackWidgetSunburstDefinitionRequestLogQueryMultiCompute:PowerpackWidgetSunburstDefinitionRequestLogQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "The aggregation method.\n"
                },
                "facet": {
                    "type": "string",
                    "description": "The facet name.\n"
                },
                "interval": {
                    "type": "integer",
                    "description": "Define the time interval in seconds.\n"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/PowerpackWidgetSunburstDefinitionRequestNetworkQuery:PowerpackWidgetSunburstDefinitionRequestNetworkQuery": {
            "properties": {
                "computeQuery": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetSunburstDefinitionRequestNetworkQueryComputeQuery:PowerpackWidgetSunburstDefinitionRequestNetworkQueryComputeQuery",
                    "description": "`compute_query` or `multi_compute` is required. The map keys are listed below.\n"
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/PowerpackWidgetSunburstDefinitionRequestNetworkQueryGroupBy:PowerpackWidgetSunburstDefinitionRequestNetworkQueryGroupBy"
                    },
                    "description": "Multiple `group_by` blocks are allowed using the structure below.\n"
                },
                "index": {
                    "type": "string",
                    "description": "The name of the index to query.\n"
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/PowerpackWidgetSunburstDefinitionRequestNetworkQueryMultiCompute:PowerpackWidgetSunburstDefinitionRequestNetworkQueryMultiCompute"
                    },
                    "description": "`compute_query` or `multi_compute` is required. Multiple `multi_compute` blocks are allowed using the structure below.\n"
                },
                "searchQuery": {
                    "type": "string",
                    "description": "The search query to use.\n"
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/PowerpackWidgetSunburstDefinitionRequestNetworkQueryComputeQuery:PowerpackWidgetSunburstDefinitionRequestNetworkQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "The aggregation method.\n"
                },
                "facet": {
                    "type": "string",
                    "description": "The facet name.\n"
                },
                "interval": {
                    "type": "integer",
                    "description": "Define the time interval in seconds.\n"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/PowerpackWidgetSunburstDefinitionRequestNetworkQueryGroupBy:PowerpackWidgetSunburstDefinitionRequestNetworkQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "description": "The facet name.\n"
                },
                "limit": {
                    "type": "integer",
                    "description": "The maximum number of items in the group.\n"
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetSunburstDefinitionRequestNetworkQueryGroupBySortQuery:PowerpackWidgetSunburstDefinitionRequestNetworkQueryGroupBySortQuery",
                    "description": "A list of exactly one element describing the sort query to use.\n"
                }
            },
            "type": "object"
        },
        "datadog:index/PowerpackWidgetSunburstDefinitionRequestNetworkQueryGroupBySortQuery:PowerpackWidgetSunburstDefinitionRequestNetworkQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "The aggregation method.\n"
                },
                "facet": {
                    "type": "string",
                    "description": "The facet name.\n"
                },
                "order": {
                    "type": "string",
                    "description": "Widget sorting methods. Valid values are `asc`, `desc`.\n"
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/PowerpackWidgetSunburstDefinitionRequestNetworkQueryMultiCompute:PowerpackWidgetSunburstDefinitionRequestNetworkQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "The aggregation method.\n"
                },
                "facet": {
                    "type": "string",
                    "description": "The facet name.\n"
                },
                "interval": {
                    "type": "integer",
                    "description": "Define the time interval in seconds.\n"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/PowerpackWidgetSunburstDefinitionRequestProcessQuery:PowerpackWidgetSunburstDefinitionRequestProcessQuery": {
            "properties": {
                "filterBies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of processes.\n"
                },
                "limit": {
                    "type": "integer",
                    "description": "The max number of items in the filter list.\n"
                },
                "metric": {
                    "type": "string",
                    "description": "Your chosen metric.\n"
                },
                "searchBy": {
                    "type": "string",
                    "description": "Your chosen search term.\n"
                }
            },
            "type": "object",
            "required": [
                "metric"
            ]
        },
        "datadog:index/PowerpackWidgetSunburstDefinitionRequestQuery:PowerpackWidgetSunburstDefinitionRequestQuery": {
            "properties": {
                "apmDependencyStatsQuery": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetSunburstDefinitionRequestQueryApmDependencyStatsQuery:PowerpackWidgetSunburstDefinitionRequestQueryApmDependencyStatsQuery",
                    "description": "The APM Dependency Stats query using formulas and functions.\n"
                },
                "apmResourceStatsQuery": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetSunburstDefinitionRequestQueryApmResourceStatsQuery:PowerpackWidgetSunburstDefinitionRequestQueryApmResourceStatsQuery",
                    "description": "The APM Resource Stats query using formulas and functions.\n"
                },
                "cloudCostQuery": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetSunburstDefinitionRequestQueryCloudCostQuery:PowerpackWidgetSunburstDefinitionRequestQueryCloudCostQuery",
                    "description": "The Cloud Cost query using formulas and functions.\n"
                },
                "eventQuery": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetSunburstDefinitionRequestQueryEventQuery:PowerpackWidgetSunburstDefinitionRequestQueryEventQuery",
                    "description": "A timeseries formula and functions events query.\n"
                },
                "metricQuery": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetSunburstDefinitionRequestQueryMetricQuery:PowerpackWidgetSunburstDefinitionRequestQueryMetricQuery",
                    "description": "A timeseries formula and functions metrics query.\n"
                },
                "processQuery": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetSunburstDefinitionRequestQueryProcessQuery:PowerpackWidgetSunburstDefinitionRequestQueryProcessQuery",
                    "description": "The process query using formulas and functions.\n"
                },
                "sloQuery": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetSunburstDefinitionRequestQuerySloQuery:PowerpackWidgetSunburstDefinitionRequestQuerySloQuery",
                    "description": "The SLO query using formulas and functions.\n"
                }
            },
            "type": "object"
        },
        "datadog:index/PowerpackWidgetSunburstDefinitionRequestQueryApmDependencyStatsQuery:PowerpackWidgetSunburstDefinitionRequestQueryApmDependencyStatsQuery": {
            "properties": {
                "crossOrgUuids": {
                    "type": "string",
                    "description": "The source organization UUID for cross organization queries. Feature in Private Beta.\n"
                },
                "dataSource": {
                    "type": "string",
                    "description": "The data source for APM Dependency Stats queries. Valid values are `apm_dependency_stats`.\n"
                },
                "env": {
                    "type": "string",
                    "description": "APM environment.\n"
                },
                "isUpstream": {
                    "type": "boolean",
                    "description": "Determines whether stats for upstream or downstream dependencies should be queried.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of query for use in formulas.\n"
                },
                "operationName": {
                    "type": "string",
                    "description": "Name of operation on service.\n"
                },
                "primaryTagName": {
                    "type": "string",
                    "description": "The name of the second primary tag used within APM; required when `primary_tag_value` is specified. See https://docs.datadoghq.com/tracing/guide/setting*primary*tags*to*scope/#add-a-second-primary-tag-in-datadog.\n"
                },
                "primaryTagValue": {
                    "type": "string",
                    "description": "Filter APM data by the second primary tag. `primary_tag_name` must also be specified.\n"
                },
                "resourceName": {
                    "type": "string",
                    "description": "APM resource.\n"
                },
                "service": {
                    "type": "string",
                    "description": "APM service.\n"
                },
                "stat": {
                    "type": "string",
                    "description": "APM statistic. Valid values are `avg_duration`, `avg_root_duration`, `avg_spans_per_trace`, `error_rate`, `pct_exec_time`, `pct_of_traces`, `total_traces_count`.\n"
                }
            },
            "type": "object",
            "required": [
                "dataSource",
                "env",
                "name",
                "operationName",
                "resourceName",
                "service",
                "stat"
            ]
        },
        "datadog:index/PowerpackWidgetSunburstDefinitionRequestQueryApmResourceStatsQuery:PowerpackWidgetSunburstDefinitionRequestQueryApmResourceStatsQuery": {
            "properties": {
                "crossOrgUuids": {
                    "type": "string",
                    "description": "The source organization UUID for cross organization queries. Feature in Private Beta.\n"
                },
                "dataSource": {
                    "type": "string",
                    "description": "The data source for APM Resource Stats queries. Valid values are `apm_resource_stats`.\n"
                },
                "env": {
                    "type": "string",
                    "description": "APM environment.\n"
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Array of fields to group results by.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of query for use in formulas.\n"
                },
                "operationName": {
                    "type": "string",
                    "description": "Name of operation on service.\n"
                },
                "primaryTagName": {
                    "type": "string",
                    "description": "The name of the second primary tag used within APM; required when `primary_tag_value` is specified. See https://docs.datadoghq.com/tracing/guide/setting*primary*tags*to*scope/#add-a-second-primary-tag-in-datadog.\n"
                },
                "primaryTagValue": {
                    "type": "string",
                    "description": "Filter APM data by the second primary tag. `primary_tag_name` must also be specified.\n"
                },
                "resourceName": {
                    "type": "string",
                    "description": "APM resource.\n"
                },
                "service": {
                    "type": "string",
                    "description": "APM service.\n"
                },
                "stat": {
                    "type": "string",
                    "description": "APM statistic. Valid values are `errors`, `error_rate`, `hits`, `latency_avg`, `latency_distribution`, `latency_max`, `latency_p50`, `latency_p75`, `latency_p90`, `latency_p95`, `latency_p99`.\n"
                }
            },
            "type": "object",
            "required": [
                "dataSource",
                "env",
                "name",
                "service",
                "stat"
            ]
        },
        "datadog:index/PowerpackWidgetSunburstDefinitionRequestQueryCloudCostQuery:PowerpackWidgetSunburstDefinitionRequestQueryCloudCostQuery": {
            "properties": {
                "aggregator": {
                    "type": "string",
                    "description": "The aggregation methods available for cloud cost queries. Valid values are `avg`, `last`, `max`, `min`, `sum`, `percentile`.\n"
                },
                "crossOrgUuids": {
                    "type": "string",
                    "description": "The source organization UUID for cross organization queries. Feature in Private Beta.\n"
                },
                "dataSource": {
                    "type": "string",
                    "description": "The data source for cloud cost queries. Valid values are `cloud_cost`.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the query for use in formulas.\n"
                },
                "query": {
                    "type": "string",
                    "description": "The cloud cost query definition.\n"
                }
            },
            "type": "object",
            "required": [
                "dataSource",
                "name",
                "query"
            ]
        },
        "datadog:index/PowerpackWidgetSunburstDefinitionRequestQueryEventQuery:PowerpackWidgetSunburstDefinitionRequestQueryEventQuery": {
            "properties": {
                "computes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/PowerpackWidgetSunburstDefinitionRequestQueryEventQueryCompute:PowerpackWidgetSunburstDefinitionRequestQueryEventQueryCompute"
                    },
                    "description": "The compute options.\n"
                },
                "crossOrgUuids": {
                    "type": "string",
                    "description": "The source organization UUID for cross organization queries. Feature in Private Beta.\n"
                },
                "dataSource": {
                    "type": "string",
                    "description": "The data source for event platform-based queries. Valid values are `logs`, `spans`, `network`, `rum`, `security_signals`, `profiles`, `audit`, `events`, `ci_tests`, `ci_pipelines`, `incident_analytics`.\n"
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/PowerpackWidgetSunburstDefinitionRequestQueryEventQueryGroupBy:PowerpackWidgetSunburstDefinitionRequestQueryEventQueryGroupBy"
                    },
                    "description": "Group by options.\n"
                },
                "indexes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "An array of index names to query in the stream.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of query for use in formulas.\n"
                },
                "search": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetSunburstDefinitionRequestQueryEventQuerySearch:PowerpackWidgetSunburstDefinitionRequestQueryEventQuerySearch",
                    "description": "The search options.\n"
                },
                "storage": {
                    "type": "string",
                    "description": "Storage location (private beta).\n"
                }
            },
            "type": "object",
            "required": [
                "computes",
                "dataSource",
                "name"
            ]
        },
        "datadog:index/PowerpackWidgetSunburstDefinitionRequestQueryEventQueryCompute:PowerpackWidgetSunburstDefinitionRequestQueryEventQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "The aggregation methods for event platform queries. Valid values are `count`, `cardinality`, `median`, `pc75`, `pc90`, `pc95`, `pc98`, `pc99`, `sum`, `min`, `max`, `avg`.\n"
                },
                "interval": {
                    "type": "integer",
                    "description": "A time interval in milliseconds.\n"
                },
                "metric": {
                    "type": "string",
                    "description": "The measurable attribute to compute.\n"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/PowerpackWidgetSunburstDefinitionRequestQueryEventQueryGroupBy:PowerpackWidgetSunburstDefinitionRequestQueryEventQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "description": "The event facet.\n"
                },
                "limit": {
                    "type": "integer",
                    "description": "The number of groups to return.\n"
                },
                "sort": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetSunburstDefinitionRequestQueryEventQueryGroupBySort:PowerpackWidgetSunburstDefinitionRequestQueryEventQueryGroupBySort",
                    "description": "The options for sorting group by results.\n"
                }
            },
            "type": "object",
            "required": [
                "facet"
            ]
        },
        "datadog:index/PowerpackWidgetSunburstDefinitionRequestQueryEventQueryGroupBySort:PowerpackWidgetSunburstDefinitionRequestQueryEventQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "The aggregation methods for the event platform queries. Valid values are `count`, `cardinality`, `median`, `pc75`, `pc90`, `pc95`, `pc98`, `pc99`, `sum`, `min`, `max`, `avg`.\n"
                },
                "metric": {
                    "type": "string",
                    "description": "The metric used for sorting group by results.\n"
                },
                "order": {
                    "type": "string",
                    "description": "Direction of sort. Valid values are `asc`, `desc`.\n"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/PowerpackWidgetSunburstDefinitionRequestQueryEventQuerySearch:PowerpackWidgetSunburstDefinitionRequestQueryEventQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "description": "The events search string.\n"
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/PowerpackWidgetSunburstDefinitionRequestQueryMetricQuery:PowerpackWidgetSunburstDefinitionRequestQueryMetricQuery": {
            "properties": {
                "aggregator": {
                    "type": "string",
                    "description": "The aggregation methods available for metrics queries. Valid values are `avg`, `min`, `max`, `sum`, `last`, `area`, `l2norm`, `percentile`.\n"
                },
                "crossOrgUuids": {
                    "type": "string",
                    "description": "The source organization UUID for cross organization queries. Feature in Private Beta.\n"
                },
                "dataSource": {
                    "type": "string",
                    "description": "The data source for metrics queries. Defaults to `\"metrics\"`.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the query for use in formulas.\n"
                },
                "query": {
                    "type": "string",
                    "description": "The metrics query definition.\n"
                }
            },
            "type": "object",
            "required": [
                "name",
                "query"
            ]
        },
        "datadog:index/PowerpackWidgetSunburstDefinitionRequestQueryProcessQuery:PowerpackWidgetSunburstDefinitionRequestQueryProcessQuery": {
            "properties": {
                "aggregator": {
                    "type": "string",
                    "description": "The aggregation methods available for metrics queries. Valid values are `avg`, `min`, `max`, `sum`, `last`, `area`, `l2norm`, `percentile`.\n"
                },
                "crossOrgUuids": {
                    "type": "string",
                    "description": "The source organization UUID for cross organization queries. Feature in Private Beta.\n"
                },
                "dataSource": {
                    "type": "string",
                    "description": "The data source for process queries. Valid values are `process`, `container`.\n"
                },
                "isNormalizedCpu": {
                    "type": "boolean",
                    "description": "Whether to normalize the CPU percentages.\n"
                },
                "limit": {
                    "type": "integer",
                    "description": "The number of hits to return.\n"
                },
                "metric": {
                    "type": "string",
                    "description": "The process metric name.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of query for use in formulas.\n"
                },
                "sort": {
                    "type": "string",
                    "description": "The direction of the sort. Valid values are `asc`, `desc`. Defaults to `\"desc\"`.\n"
                },
                "tagFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "An array of tags to filter by.\n"
                },
                "textFilter": {
                    "type": "string",
                    "description": "The text to use as a filter.\n"
                }
            },
            "type": "object",
            "required": [
                "dataSource",
                "metric",
                "name"
            ]
        },
        "datadog:index/PowerpackWidgetSunburstDefinitionRequestQuerySloQuery:PowerpackWidgetSunburstDefinitionRequestQuerySloQuery": {
            "properties": {
                "additionalQueryFilters": {
                    "type": "string",
                    "description": "Additional filters applied to the SLO query.\n"
                },
                "crossOrgUuids": {
                    "type": "string",
                    "description": "The source organization UUID for cross organization queries. Feature in Private Beta.\n"
                },
                "dataSource": {
                    "type": "string",
                    "description": "The data source for SLO queries. Valid values are `slo`.\n"
                },
                "groupMode": {
                    "type": "string",
                    "description": "Group mode to query measures. Valid values are `overall`, `components`. Defaults to `\"overall\"`.\n"
                },
                "measure": {
                    "type": "string",
                    "description": "SLO measures queries. Valid values are `good_events`, `bad_events`, `slo_status`, `error_budget_remaining`, `burn_rate`, `error_budget_burndown`.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of query for use in formulas.\n"
                },
                "sloId": {
                    "type": "string",
                    "description": "ID of an SLO to query.\n"
                },
                "sloQueryType": {
                    "type": "string",
                    "description": "type of the SLO to query. Valid values are `metric`, `time_slice`. Defaults to `\"metric\"`.\n"
                }
            },
            "type": "object",
            "required": [
                "dataSource",
                "measure",
                "sloId"
            ]
        },
        "datadog:index/PowerpackWidgetSunburstDefinitionRequestRumQuery:PowerpackWidgetSunburstDefinitionRequestRumQuery": {
            "properties": {
                "computeQuery": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetSunburstDefinitionRequestRumQueryComputeQuery:PowerpackWidgetSunburstDefinitionRequestRumQueryComputeQuery",
                    "description": "`compute_query` or `multi_compute` is required. The map keys are listed below.\n"
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/PowerpackWidgetSunburstDefinitionRequestRumQueryGroupBy:PowerpackWidgetSunburstDefinitionRequestRumQueryGroupBy"
                    },
                    "description": "Multiple `group_by` blocks are allowed using the structure below.\n"
                },
                "index": {
                    "type": "string",
                    "description": "The name of the index to query.\n"
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/PowerpackWidgetSunburstDefinitionRequestRumQueryMultiCompute:PowerpackWidgetSunburstDefinitionRequestRumQueryMultiCompute"
                    },
                    "description": "`compute_query` or `multi_compute` is required. Multiple `multi_compute` blocks are allowed using the structure below.\n"
                },
                "searchQuery": {
                    "type": "string",
                    "description": "The search query to use.\n"
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/PowerpackWidgetSunburstDefinitionRequestRumQueryComputeQuery:PowerpackWidgetSunburstDefinitionRequestRumQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "The aggregation method.\n"
                },
                "facet": {
                    "type": "string",
                    "description": "The facet name.\n"
                },
                "interval": {
                    "type": "integer",
                    "description": "Define the time interval in seconds.\n"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/PowerpackWidgetSunburstDefinitionRequestRumQueryGroupBy:PowerpackWidgetSunburstDefinitionRequestRumQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "description": "The facet name.\n"
                },
                "limit": {
                    "type": "integer",
                    "description": "The maximum number of items in the group.\n"
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetSunburstDefinitionRequestRumQueryGroupBySortQuery:PowerpackWidgetSunburstDefinitionRequestRumQueryGroupBySortQuery",
                    "description": "A list of exactly one element describing the sort query to use.\n"
                }
            },
            "type": "object"
        },
        "datadog:index/PowerpackWidgetSunburstDefinitionRequestRumQueryGroupBySortQuery:PowerpackWidgetSunburstDefinitionRequestRumQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "The aggregation method.\n"
                },
                "facet": {
                    "type": "string",
                    "description": "The facet name.\n"
                },
                "order": {
                    "type": "string",
                    "description": "Widget sorting methods. Valid values are `asc`, `desc`.\n"
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/PowerpackWidgetSunburstDefinitionRequestRumQueryMultiCompute:PowerpackWidgetSunburstDefinitionRequestRumQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "The aggregation method.\n"
                },
                "facet": {
                    "type": "string",
                    "description": "The facet name.\n"
                },
                "interval": {
                    "type": "integer",
                    "description": "Define the time interval in seconds.\n"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/PowerpackWidgetSunburstDefinitionRequestSecurityQuery:PowerpackWidgetSunburstDefinitionRequestSecurityQuery": {
            "properties": {
                "computeQuery": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetSunburstDefinitionRequestSecurityQueryComputeQuery:PowerpackWidgetSunburstDefinitionRequestSecurityQueryComputeQuery",
                    "description": "`compute_query` or `multi_compute` is required. The map keys are listed below.\n"
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/PowerpackWidgetSunburstDefinitionRequestSecurityQueryGroupBy:PowerpackWidgetSunburstDefinitionRequestSecurityQueryGroupBy"
                    },
                    "description": "Multiple `group_by` blocks are allowed using the structure below.\n"
                },
                "index": {
                    "type": "string",
                    "description": "The name of the index to query.\n"
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/PowerpackWidgetSunburstDefinitionRequestSecurityQueryMultiCompute:PowerpackWidgetSunburstDefinitionRequestSecurityQueryMultiCompute"
                    },
                    "description": "`compute_query` or `multi_compute` is required. Multiple `multi_compute` blocks are allowed using the structure below.\n"
                },
                "searchQuery": {
                    "type": "string",
                    "description": "The search query to use.\n"
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/PowerpackWidgetSunburstDefinitionRequestSecurityQueryComputeQuery:PowerpackWidgetSunburstDefinitionRequestSecurityQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "The aggregation method.\n"
                },
                "facet": {
                    "type": "string",
                    "description": "The facet name.\n"
                },
                "interval": {
                    "type": "integer",
                    "description": "Define the time interval in seconds.\n"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/PowerpackWidgetSunburstDefinitionRequestSecurityQueryGroupBy:PowerpackWidgetSunburstDefinitionRequestSecurityQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "description": "The facet name.\n"
                },
                "limit": {
                    "type": "integer",
                    "description": "The maximum number of items in the group.\n"
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetSunburstDefinitionRequestSecurityQueryGroupBySortQuery:PowerpackWidgetSunburstDefinitionRequestSecurityQueryGroupBySortQuery",
                    "description": "A list of exactly one element describing the sort query to use.\n"
                }
            },
            "type": "object"
        },
        "datadog:index/PowerpackWidgetSunburstDefinitionRequestSecurityQueryGroupBySortQuery:PowerpackWidgetSunburstDefinitionRequestSecurityQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "The aggregation method.\n"
                },
                "facet": {
                    "type": "string",
                    "description": "The facet name.\n"
                },
                "order": {
                    "type": "string",
                    "description": "Widget sorting methods. Valid values are `asc`, `desc`.\n"
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/PowerpackWidgetSunburstDefinitionRequestSecurityQueryMultiCompute:PowerpackWidgetSunburstDefinitionRequestSecurityQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "The aggregation method.\n"
                },
                "facet": {
                    "type": "string",
                    "description": "The facet name.\n"
                },
                "interval": {
                    "type": "integer",
                    "description": "Define the time interval in seconds.\n"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/PowerpackWidgetSunburstDefinitionRequestStyle:PowerpackWidgetSunburstDefinitionRequestStyle": {
            "properties": {
                "palette": {
                    "type": "string",
                    "description": "A color palette to apply to the widget. The available options are available at: https://docs.datadoghq.com/dashboards/widgets/timeseries/#appearance.\n"
                }
            },
            "type": "object"
        },
        "datadog:index/PowerpackWidgetTimeseriesDefinition:PowerpackWidgetTimeseriesDefinition": {
            "properties": {
                "customLinks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/PowerpackWidgetTimeseriesDefinitionCustomLink:PowerpackWidgetTimeseriesDefinitionCustomLink"
                    },
                    "description": "A nested block describing a custom link. Multiple `custom_link` blocks are allowed using the structure below.\n"
                },
                "events": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/PowerpackWidgetTimeseriesDefinitionEvent:PowerpackWidgetTimeseriesDefinitionEvent"
                    },
                    "description": "The definition of the event to overlay on the graph. Multiple `event` blocks are allowed using the structure below.\n"
                },
                "legendColumns": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of columns to display in the legend. Valid values are `value`, `avg`, `sum`, `min`, `max`.\n"
                },
                "legendLayout": {
                    "type": "string",
                    "description": "The layout of the legend displayed in the widget. Valid values are `auto`, `horizontal`, `vertical`.\n"
                },
                "legendSize": {
                    "type": "string",
                    "description": "The size of the legend displayed in the widget.\n"
                },
                "liveSpan": {
                    "type": "string",
                    "description": "The timeframe to use when displaying the widget. Valid values are `1m`, `5m`, `10m`, `15m`, `30m`, `1h`, `4h`, `1d`, `2d`, `1w`, `1mo`, `3mo`, `6mo`, `week_to_date`, `month_to_date`, `1y`, `alert`.\n"
                },
                "markers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/PowerpackWidgetTimeseriesDefinitionMarker:PowerpackWidgetTimeseriesDefinitionMarker"
                    },
                    "description": "A nested block describing the marker to use when displaying the widget. The structure of this block is described below. Multiple `marker` blocks are allowed within a given `tile_def` block.\n"
                },
                "requests": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/PowerpackWidgetTimeseriesDefinitionRequest:PowerpackWidgetTimeseriesDefinitionRequest"
                    },
                    "description": "A nested block describing the request to use when displaying the widget. Multiple `request` blocks are allowed using the structure below (exactly one of `q`, `apm_query`, `log_query`, `rum_query`, `network_query`, `security_query` or `process_query` is required within the `request` block).\n"
                },
                "rightYaxis": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetTimeseriesDefinitionRightYaxis:PowerpackWidgetTimeseriesDefinitionRightYaxis",
                    "description": "A nested block describing the right Y-Axis Controls. See the `on_right_yaxis` property for which request will use this axis. The structure of this block is described below.\n"
                },
                "showLegend": {
                    "type": "boolean",
                    "description": "Whether or not to show the legend on this widget.\n"
                },
                "title": {
                    "type": "string",
                    "description": "The title of the widget.\n"
                },
                "titleAlign": {
                    "type": "string",
                    "description": "The alignment of the widget's title. Valid values are `center`, `left`, `right`.\n"
                },
                "titleSize": {
                    "type": "string",
                    "description": "The size of the widget's title (defaults to 16).\n"
                },
                "yaxis": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetTimeseriesDefinitionYaxis:PowerpackWidgetTimeseriesDefinitionYaxis",
                    "description": "A nested block describing the Y-Axis Controls. The structure of this block is described below.\n"
                }
            },
            "type": "object"
        },
        "datadog:index/PowerpackWidgetTimeseriesDefinitionCustomLink:PowerpackWidgetTimeseriesDefinitionCustomLink": {
            "properties": {
                "isHidden": {
                    "type": "boolean",
                    "description": "The flag for toggling context menu link visibility.\n"
                },
                "label": {
                    "type": "string",
                    "description": "The label for the custom link URL.\n"
                },
                "link": {
                    "type": "string",
                    "description": "The URL of the custom link.\n"
                },
                "overrideLabel": {
                    "type": "string",
                    "description": "The label ID that refers to a context menu link item. When `override_label` is provided, the client request omits the label field.\n"
                }
            },
            "type": "object"
        },
        "datadog:index/PowerpackWidgetTimeseriesDefinitionEvent:PowerpackWidgetTimeseriesDefinitionEvent": {
            "properties": {
                "q": {
                    "type": "string",
                    "description": "The event query to use in the widget.\n"
                },
                "tagsExecution": {
                    "type": "string",
                    "description": "The execution method for multi-value filters.\n"
                }
            },
            "type": "object",
            "required": [
                "q"
            ]
        },
        "datadog:index/PowerpackWidgetTimeseriesDefinitionMarker:PowerpackWidgetTimeseriesDefinitionMarker": {
            "properties": {
                "displayType": {
                    "type": "string",
                    "description": "How the marker lines are displayed, options are one of {`error`, `warning`, `info`, `ok`} combined with one of {`dashed`, `solid`, `bold`}. Example: `error dashed`.\n"
                },
                "label": {
                    "type": "string",
                    "description": "A label for the line or range.\n"
                },
                "value": {
                    "type": "string",
                    "description": "A mathematical expression describing the marker, for example: `y \u003e 1`, `-5 \u003c y \u003c 0`, `y = 19`.\n"
                }
            },
            "type": "object",
            "required": [
                "value"
            ]
        },
        "datadog:index/PowerpackWidgetTimeseriesDefinitionRequest:PowerpackWidgetTimeseriesDefinitionRequest": {
            "properties": {
                "apmQuery": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetTimeseriesDefinitionRequestApmQuery:PowerpackWidgetTimeseriesDefinitionRequestApmQuery",
                    "description": "The query to use for this widget.\n"
                },
                "auditQuery": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetTimeseriesDefinitionRequestAuditQuery:PowerpackWidgetTimeseriesDefinitionRequestAuditQuery",
                    "description": "The query to use for this widget.\n"
                },
                "displayType": {
                    "type": "string",
                    "description": "How to display the marker lines. Valid values are `area`, `bars`, `line`, `overlay`.\n"
                },
                "formulas": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/PowerpackWidgetTimeseriesDefinitionRequestFormula:PowerpackWidgetTimeseriesDefinitionRequestFormula"
                    }
                },
                "logQuery": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetTimeseriesDefinitionRequestLogQuery:PowerpackWidgetTimeseriesDefinitionRequestLogQuery",
                    "description": "The query to use for this widget.\n"
                },
                "metadatas": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/PowerpackWidgetTimeseriesDefinitionRequestMetadata:PowerpackWidgetTimeseriesDefinitionRequestMetadata"
                    },
                    "description": "Used to define expression aliases. Multiple `metadata` blocks are allowed using the structure below.\n"
                },
                "networkQuery": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetTimeseriesDefinitionRequestNetworkQuery:PowerpackWidgetTimeseriesDefinitionRequestNetworkQuery",
                    "description": "The query to use for this widget.\n"
                },
                "onRightYaxis": {
                    "type": "boolean",
                    "description": "A Boolean indicating whether the request uses the right or left Y-Axis.\n"
                },
                "processQuery": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetTimeseriesDefinitionRequestProcessQuery:PowerpackWidgetTimeseriesDefinitionRequestProcessQuery",
                    "description": "The process query to use in the widget. The structure of this block is described below.\n"
                },
                "q": {
                    "type": "string",
                    "description": "The metric query to use for this widget.\n"
                },
                "queries": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/PowerpackWidgetTimeseriesDefinitionRequestQuery:PowerpackWidgetTimeseriesDefinitionRequestQuery"
                    }
                },
                "rumQuery": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetTimeseriesDefinitionRequestRumQuery:PowerpackWidgetTimeseriesDefinitionRequestRumQuery",
                    "description": "The query to use for this widget.\n"
                },
                "securityQuery": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetTimeseriesDefinitionRequestSecurityQuery:PowerpackWidgetTimeseriesDefinitionRequestSecurityQuery",
                    "description": "The query to use for this widget.\n"
                },
                "style": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetTimeseriesDefinitionRequestStyle:PowerpackWidgetTimeseriesDefinitionRequestStyle",
                    "description": "The style of the widget graph. Exactly one `style` block is allowed using the structure below.\n"
                }
            },
            "type": "object"
        },
        "datadog:index/PowerpackWidgetTimeseriesDefinitionRequestApmQuery:PowerpackWidgetTimeseriesDefinitionRequestApmQuery": {
            "properties": {
                "computeQuery": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetTimeseriesDefinitionRequestApmQueryComputeQuery:PowerpackWidgetTimeseriesDefinitionRequestApmQueryComputeQuery",
                    "description": "`compute_query` or `multi_compute` is required. The map keys are listed below.\n"
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/PowerpackWidgetTimeseriesDefinitionRequestApmQueryGroupBy:PowerpackWidgetTimeseriesDefinitionRequestApmQueryGroupBy"
                    },
                    "description": "Multiple `group_by` blocks are allowed using the structure below.\n"
                },
                "index": {
                    "type": "string",
                    "description": "The name of the index to query.\n"
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/PowerpackWidgetTimeseriesDefinitionRequestApmQueryMultiCompute:PowerpackWidgetTimeseriesDefinitionRequestApmQueryMultiCompute"
                    },
                    "description": "`compute_query` or `multi_compute` is required. Multiple `multi_compute` blocks are allowed using the structure below.\n"
                },
                "searchQuery": {
                    "type": "string",
                    "description": "The search query to use.\n"
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/PowerpackWidgetTimeseriesDefinitionRequestApmQueryComputeQuery:PowerpackWidgetTimeseriesDefinitionRequestApmQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "The aggregation method.\n"
                },
                "facet": {
                    "type": "string",
                    "description": "The facet name.\n"
                },
                "interval": {
                    "type": "integer",
                    "description": "Define the time interval in seconds.\n"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/PowerpackWidgetTimeseriesDefinitionRequestApmQueryGroupBy:PowerpackWidgetTimeseriesDefinitionRequestApmQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "description": "The facet name.\n"
                },
                "limit": {
                    "type": "integer",
                    "description": "The maximum number of items in the group.\n"
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetTimeseriesDefinitionRequestApmQueryGroupBySortQuery:PowerpackWidgetTimeseriesDefinitionRequestApmQueryGroupBySortQuery",
                    "description": "A list of exactly one element describing the sort query to use.\n"
                }
            },
            "type": "object"
        },
        "datadog:index/PowerpackWidgetTimeseriesDefinitionRequestApmQueryGroupBySortQuery:PowerpackWidgetTimeseriesDefinitionRequestApmQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "The aggregation method.\n"
                },
                "facet": {
                    "type": "string",
                    "description": "The facet name.\n"
                },
                "order": {
                    "type": "string",
                    "description": "Widget sorting methods. Valid values are `asc`, `desc`.\n"
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/PowerpackWidgetTimeseriesDefinitionRequestApmQueryMultiCompute:PowerpackWidgetTimeseriesDefinitionRequestApmQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "The aggregation method.\n"
                },
                "facet": {
                    "type": "string",
                    "description": "The facet name.\n"
                },
                "interval": {
                    "type": "integer",
                    "description": "Define the time interval in seconds.\n"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/PowerpackWidgetTimeseriesDefinitionRequestAuditQuery:PowerpackWidgetTimeseriesDefinitionRequestAuditQuery": {
            "properties": {
                "computeQuery": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetTimeseriesDefinitionRequestAuditQueryComputeQuery:PowerpackWidgetTimeseriesDefinitionRequestAuditQueryComputeQuery",
                    "description": "`compute_query` or `multi_compute` is required. The map keys are listed below.\n"
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/PowerpackWidgetTimeseriesDefinitionRequestAuditQueryGroupBy:PowerpackWidgetTimeseriesDefinitionRequestAuditQueryGroupBy"
                    },
                    "description": "Multiple `group_by` blocks are allowed using the structure below.\n"
                },
                "index": {
                    "type": "string",
                    "description": "The name of the index to query.\n"
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/PowerpackWidgetTimeseriesDefinitionRequestAuditQueryMultiCompute:PowerpackWidgetTimeseriesDefinitionRequestAuditQueryMultiCompute"
                    },
                    "description": "`compute_query` or `multi_compute` is required. Multiple `multi_compute` blocks are allowed using the structure below.\n"
                },
                "searchQuery": {
                    "type": "string",
                    "description": "The search query to use.\n"
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/PowerpackWidgetTimeseriesDefinitionRequestAuditQueryComputeQuery:PowerpackWidgetTimeseriesDefinitionRequestAuditQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "The aggregation method.\n"
                },
                "facet": {
                    "type": "string",
                    "description": "The facet name.\n"
                },
                "interval": {
                    "type": "integer",
                    "description": "Define the time interval in seconds.\n"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/PowerpackWidgetTimeseriesDefinitionRequestAuditQueryGroupBy:PowerpackWidgetTimeseriesDefinitionRequestAuditQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "description": "The facet name.\n"
                },
                "limit": {
                    "type": "integer",
                    "description": "The maximum number of items in the group.\n"
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetTimeseriesDefinitionRequestAuditQueryGroupBySortQuery:PowerpackWidgetTimeseriesDefinitionRequestAuditQueryGroupBySortQuery",
                    "description": "A list of exactly one element describing the sort query to use.\n"
                }
            },
            "type": "object"
        },
        "datadog:index/PowerpackWidgetTimeseriesDefinitionRequestAuditQueryGroupBySortQuery:PowerpackWidgetTimeseriesDefinitionRequestAuditQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "The aggregation method.\n"
                },
                "facet": {
                    "type": "string",
                    "description": "The facet name.\n"
                },
                "order": {
                    "type": "string",
                    "description": "Widget sorting methods. Valid values are `asc`, `desc`.\n"
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/PowerpackWidgetTimeseriesDefinitionRequestAuditQueryMultiCompute:PowerpackWidgetTimeseriesDefinitionRequestAuditQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "The aggregation method.\n"
                },
                "facet": {
                    "type": "string",
                    "description": "The facet name.\n"
                },
                "interval": {
                    "type": "integer",
                    "description": "Define the time interval in seconds.\n"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/PowerpackWidgetTimeseriesDefinitionRequestFormula:PowerpackWidgetTimeseriesDefinitionRequestFormula": {
            "properties": {
                "alias": {
                    "type": "string",
                    "description": "An expression alias.\n"
                },
                "cellDisplayMode": {
                    "type": "string",
                    "description": "A list of display modes for each table cell. Valid values are `number`, `bar`.\n"
                },
                "conditionalFormats": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/PowerpackWidgetTimeseriesDefinitionRequestFormulaConditionalFormat:PowerpackWidgetTimeseriesDefinitionRequestFormulaConditionalFormat"
                    },
                    "description": "Conditional formats allow you to set the color of your widget content or background depending on the rule applied to your data. Multiple `conditional_formats` blocks are allowed using the structure below.\n"
                },
                "formulaExpression": {
                    "type": "string",
                    "description": "A string expression built from queries, formulas, and functions.\n"
                },
                "limit": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetTimeseriesDefinitionRequestFormulaLimit:PowerpackWidgetTimeseriesDefinitionRequestFormulaLimit",
                    "description": "The options for limiting results returned.\n"
                },
                "style": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetTimeseriesDefinitionRequestFormulaStyle:PowerpackWidgetTimeseriesDefinitionRequestFormulaStyle",
                    "description": "Styling options for widget formulas.\n"
                }
            },
            "type": "object",
            "required": [
                "formulaExpression"
            ]
        },
        "datadog:index/PowerpackWidgetTimeseriesDefinitionRequestFormulaConditionalFormat:PowerpackWidgetTimeseriesDefinitionRequestFormulaConditionalFormat": {
            "properties": {
                "comparator": {
                    "type": "string",
                    "description": "The comparator to use. Valid values are `=`, `\u003e`, `\u003e=`, `\u003c`, `\u003c=`.\n"
                },
                "customBgColor": {
                    "type": "string",
                    "description": "The color palette to apply to the background, same values available as palette.\n"
                },
                "customFgColor": {
                    "type": "string",
                    "description": "The color palette to apply to the foreground, same values available as palette.\n"
                },
                "hideValue": {
                    "type": "boolean",
                    "description": "Setting this to True hides values.\n"
                },
                "imageUrl": {
                    "type": "string",
                    "description": "Displays an image as the background.\n"
                },
                "metric": {
                    "type": "string",
                    "description": "The metric from the request to correlate with this conditional format.\n"
                },
                "palette": {
                    "type": "string",
                    "description": "The color palette to apply. Valid values are `blue`, `custom_bg`, `custom_image`, `custom_text`, `gray_on_white`, `grey`, `green`, `orange`, `red`, `red_on_white`, `white_on_gray`, `white_on_green`, `green_on_white`, `white_on_red`, `white_on_yellow`, `yellow_on_white`, `black_on_light_yellow`, `black_on_light_green`, `black_on_light_red`.\n"
                },
                "timeframe": {
                    "type": "string",
                    "description": "Defines the displayed timeframe.\n"
                },
                "value": {
                    "type": "number",
                    "description": "A value for the comparator.\n"
                }
            },
            "type": "object",
            "required": [
                "comparator",
                "palette",
                "value"
            ]
        },
        "datadog:index/PowerpackWidgetTimeseriesDefinitionRequestFormulaLimit:PowerpackWidgetTimeseriesDefinitionRequestFormulaLimit": {
            "properties": {
                "count": {
                    "type": "integer",
                    "description": "The number of results to return.\n"
                },
                "order": {
                    "type": "string",
                    "description": "The direction of the sort. Valid values are `asc`, `desc`. Defaults to `\"desc\"`.\n"
                }
            },
            "type": "object"
        },
        "datadog:index/PowerpackWidgetTimeseriesDefinitionRequestFormulaStyle:PowerpackWidgetTimeseriesDefinitionRequestFormulaStyle": {
            "properties": {
                "palette": {
                    "type": "string",
                    "description": "The color palette used to display the formula. A guide to the available color palettes can be found at https://docs.datadoghq.com/dashboards/guide/widget_colors.\n"
                },
                "paletteIndex": {
                    "type": "integer",
                    "description": "Index specifying which color to use within the palette.\n"
                }
            },
            "type": "object"
        },
        "datadog:index/PowerpackWidgetTimeseriesDefinitionRequestLogQuery:PowerpackWidgetTimeseriesDefinitionRequestLogQuery": {
            "properties": {
                "computeQuery": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetTimeseriesDefinitionRequestLogQueryComputeQuery:PowerpackWidgetTimeseriesDefinitionRequestLogQueryComputeQuery",
                    "description": "`compute_query` or `multi_compute` is required. The map keys are listed below.\n"
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/PowerpackWidgetTimeseriesDefinitionRequestLogQueryGroupBy:PowerpackWidgetTimeseriesDefinitionRequestLogQueryGroupBy"
                    },
                    "description": "Multiple `group_by` blocks are allowed using the structure below.\n"
                },
                "index": {
                    "type": "string",
                    "description": "The name of the index to query.\n"
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/PowerpackWidgetTimeseriesDefinitionRequestLogQueryMultiCompute:PowerpackWidgetTimeseriesDefinitionRequestLogQueryMultiCompute"
                    },
                    "description": "`compute_query` or `multi_compute` is required. Multiple `multi_compute` blocks are allowed using the structure below.\n"
                },
                "searchQuery": {
                    "type": "string",
                    "description": "The search query to use.\n"
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/PowerpackWidgetTimeseriesDefinitionRequestLogQueryComputeQuery:PowerpackWidgetTimeseriesDefinitionRequestLogQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "The aggregation method.\n"
                },
                "facet": {
                    "type": "string",
                    "description": "The facet name.\n"
                },
                "interval": {
                    "type": "integer",
                    "description": "Define the time interval in seconds.\n"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/PowerpackWidgetTimeseriesDefinitionRequestLogQueryGroupBy:PowerpackWidgetTimeseriesDefinitionRequestLogQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "description": "The facet name.\n"
                },
                "limit": {
                    "type": "integer",
                    "description": "The maximum number of items in the group.\n"
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetTimeseriesDefinitionRequestLogQueryGroupBySortQuery:PowerpackWidgetTimeseriesDefinitionRequestLogQueryGroupBySortQuery",
                    "description": "A list of exactly one element describing the sort query to use.\n"
                }
            },
            "type": "object"
        },
        "datadog:index/PowerpackWidgetTimeseriesDefinitionRequestLogQueryGroupBySortQuery:PowerpackWidgetTimeseriesDefinitionRequestLogQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "The aggregation method.\n"
                },
                "facet": {
                    "type": "string",
                    "description": "The facet name.\n"
                },
                "order": {
                    "type": "string",
                    "description": "Widget sorting methods. Valid values are `asc`, `desc`.\n"
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/PowerpackWidgetTimeseriesDefinitionRequestLogQueryMultiCompute:PowerpackWidgetTimeseriesDefinitionRequestLogQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "The aggregation method.\n"
                },
                "facet": {
                    "type": "string",
                    "description": "The facet name.\n"
                },
                "interval": {
                    "type": "integer",
                    "description": "Define the time interval in seconds.\n"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/PowerpackWidgetTimeseriesDefinitionRequestMetadata:PowerpackWidgetTimeseriesDefinitionRequestMetadata": {
            "properties": {
                "aliasName": {
                    "type": "string",
                    "description": "The expression alias.\n"
                },
                "expression": {
                    "type": "string",
                    "description": "The expression name.\n"
                }
            },
            "type": "object",
            "required": [
                "expression"
            ]
        },
        "datadog:index/PowerpackWidgetTimeseriesDefinitionRequestNetworkQuery:PowerpackWidgetTimeseriesDefinitionRequestNetworkQuery": {
            "properties": {
                "computeQuery": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryComputeQuery:PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryComputeQuery",
                    "description": "`compute_query` or `multi_compute` is required. The map keys are listed below.\n"
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryGroupBy:PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryGroupBy"
                    },
                    "description": "Multiple `group_by` blocks are allowed using the structure below.\n"
                },
                "index": {
                    "type": "string",
                    "description": "The name of the index to query.\n"
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryMultiCompute:PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryMultiCompute"
                    },
                    "description": "`compute_query` or `multi_compute` is required. Multiple `multi_compute` blocks are allowed using the structure below.\n"
                },
                "searchQuery": {
                    "type": "string",
                    "description": "The search query to use.\n"
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryComputeQuery:PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "The aggregation method.\n"
                },
                "facet": {
                    "type": "string",
                    "description": "The facet name.\n"
                },
                "interval": {
                    "type": "integer",
                    "description": "Define the time interval in seconds.\n"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryGroupBy:PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "description": "The facet name.\n"
                },
                "limit": {
                    "type": "integer",
                    "description": "The maximum number of items in the group.\n"
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryGroupBySortQuery:PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryGroupBySortQuery",
                    "description": "A list of exactly one element describing the sort query to use.\n"
                }
            },
            "type": "object"
        },
        "datadog:index/PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryGroupBySortQuery:PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "The aggregation method.\n"
                },
                "facet": {
                    "type": "string",
                    "description": "The facet name.\n"
                },
                "order": {
                    "type": "string",
                    "description": "Widget sorting methods. Valid values are `asc`, `desc`.\n"
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryMultiCompute:PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "The aggregation method.\n"
                },
                "facet": {
                    "type": "string",
                    "description": "The facet name.\n"
                },
                "interval": {
                    "type": "integer",
                    "description": "Define the time interval in seconds.\n"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/PowerpackWidgetTimeseriesDefinitionRequestProcessQuery:PowerpackWidgetTimeseriesDefinitionRequestProcessQuery": {
            "properties": {
                "filterBies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of processes.\n"
                },
                "limit": {
                    "type": "integer",
                    "description": "The max number of items in the filter list.\n"
                },
                "metric": {
                    "type": "string",
                    "description": "Your chosen metric.\n"
                },
                "searchBy": {
                    "type": "string",
                    "description": "Your chosen search term.\n"
                }
            },
            "type": "object",
            "required": [
                "metric"
            ]
        },
        "datadog:index/PowerpackWidgetTimeseriesDefinitionRequestQuery:PowerpackWidgetTimeseriesDefinitionRequestQuery": {
            "properties": {
                "apmDependencyStatsQuery": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetTimeseriesDefinitionRequestQueryApmDependencyStatsQuery:PowerpackWidgetTimeseriesDefinitionRequestQueryApmDependencyStatsQuery",
                    "description": "The APM Dependency Stats query using formulas and functions.\n"
                },
                "apmResourceStatsQuery": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetTimeseriesDefinitionRequestQueryApmResourceStatsQuery:PowerpackWidgetTimeseriesDefinitionRequestQueryApmResourceStatsQuery",
                    "description": "The APM Resource Stats query using formulas and functions.\n"
                },
                "cloudCostQuery": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetTimeseriesDefinitionRequestQueryCloudCostQuery:PowerpackWidgetTimeseriesDefinitionRequestQueryCloudCostQuery",
                    "description": "The Cloud Cost query using formulas and functions.\n"
                },
                "eventQuery": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetTimeseriesDefinitionRequestQueryEventQuery:PowerpackWidgetTimeseriesDefinitionRequestQueryEventQuery",
                    "description": "A timeseries formula and functions events query.\n"
                },
                "metricQuery": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetTimeseriesDefinitionRequestQueryMetricQuery:PowerpackWidgetTimeseriesDefinitionRequestQueryMetricQuery",
                    "description": "A timeseries formula and functions metrics query.\n"
                },
                "processQuery": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetTimeseriesDefinitionRequestQueryProcessQuery:PowerpackWidgetTimeseriesDefinitionRequestQueryProcessQuery",
                    "description": "The process query using formulas and functions.\n"
                },
                "sloQuery": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetTimeseriesDefinitionRequestQuerySloQuery:PowerpackWidgetTimeseriesDefinitionRequestQuerySloQuery",
                    "description": "The SLO query using formulas and functions.\n"
                }
            },
            "type": "object"
        },
        "datadog:index/PowerpackWidgetTimeseriesDefinitionRequestQueryApmDependencyStatsQuery:PowerpackWidgetTimeseriesDefinitionRequestQueryApmDependencyStatsQuery": {
            "properties": {
                "crossOrgUuids": {
                    "type": "string",
                    "description": "The source organization UUID for cross organization queries. Feature in Private Beta.\n"
                },
                "dataSource": {
                    "type": "string",
                    "description": "The data source for APM Dependency Stats queries. Valid values are `apm_dependency_stats`.\n"
                },
                "env": {
                    "type": "string",
                    "description": "APM environment.\n"
                },
                "isUpstream": {
                    "type": "boolean",
                    "description": "Determines whether stats for upstream or downstream dependencies should be queried.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of query for use in formulas.\n"
                },
                "operationName": {
                    "type": "string",
                    "description": "Name of operation on service.\n"
                },
                "primaryTagName": {
                    "type": "string",
                    "description": "The name of the second primary tag used within APM; required when `primary_tag_value` is specified. See https://docs.datadoghq.com/tracing/guide/setting*primary*tags*to*scope/#add-a-second-primary-tag-in-datadog.\n"
                },
                "primaryTagValue": {
                    "type": "string",
                    "description": "Filter APM data by the second primary tag. `primary_tag_name` must also be specified.\n"
                },
                "resourceName": {
                    "type": "string",
                    "description": "APM resource.\n"
                },
                "service": {
                    "type": "string",
                    "description": "APM service.\n"
                },
                "stat": {
                    "type": "string",
                    "description": "APM statistic. Valid values are `avg_duration`, `avg_root_duration`, `avg_spans_per_trace`, `error_rate`, `pct_exec_time`, `pct_of_traces`, `total_traces_count`.\n"
                }
            },
            "type": "object",
            "required": [
                "dataSource",
                "env",
                "name",
                "operationName",
                "resourceName",
                "service",
                "stat"
            ]
        },
        "datadog:index/PowerpackWidgetTimeseriesDefinitionRequestQueryApmResourceStatsQuery:PowerpackWidgetTimeseriesDefinitionRequestQueryApmResourceStatsQuery": {
            "properties": {
                "crossOrgUuids": {
                    "type": "string",
                    "description": "The source organization UUID for cross organization queries. Feature in Private Beta.\n"
                },
                "dataSource": {
                    "type": "string",
                    "description": "The data source for APM Resource Stats queries. Valid values are `apm_resource_stats`.\n"
                },
                "env": {
                    "type": "string",
                    "description": "APM environment.\n"
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Array of fields to group results by.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of query for use in formulas.\n"
                },
                "operationName": {
                    "type": "string",
                    "description": "Name of operation on service.\n"
                },
                "primaryTagName": {
                    "type": "string",
                    "description": "The name of the second primary tag used within APM; required when `primary_tag_value` is specified. See https://docs.datadoghq.com/tracing/guide/setting*primary*tags*to*scope/#add-a-second-primary-tag-in-datadog.\n"
                },
                "primaryTagValue": {
                    "type": "string",
                    "description": "Filter APM data by the second primary tag. `primary_tag_name` must also be specified.\n"
                },
                "resourceName": {
                    "type": "string",
                    "description": "APM resource.\n"
                },
                "service": {
                    "type": "string",
                    "description": "APM service.\n"
                },
                "stat": {
                    "type": "string",
                    "description": "APM statistic. Valid values are `errors`, `error_rate`, `hits`, `latency_avg`, `latency_distribution`, `latency_max`, `latency_p50`, `latency_p75`, `latency_p90`, `latency_p95`, `latency_p99`.\n"
                }
            },
            "type": "object",
            "required": [
                "dataSource",
                "env",
                "name",
                "service",
                "stat"
            ]
        },
        "datadog:index/PowerpackWidgetTimeseriesDefinitionRequestQueryCloudCostQuery:PowerpackWidgetTimeseriesDefinitionRequestQueryCloudCostQuery": {
            "properties": {
                "aggregator": {
                    "type": "string",
                    "description": "The aggregation methods available for cloud cost queries. Valid values are `avg`, `last`, `max`, `min`, `sum`, `percentile`.\n"
                },
                "crossOrgUuids": {
                    "type": "string",
                    "description": "The source organization UUID for cross organization queries. Feature in Private Beta.\n"
                },
                "dataSource": {
                    "type": "string",
                    "description": "The data source for cloud cost queries. Valid values are `cloud_cost`.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the query for use in formulas.\n"
                },
                "query": {
                    "type": "string",
                    "description": "The cloud cost query definition.\n"
                }
            },
            "type": "object",
            "required": [
                "dataSource",
                "name",
                "query"
            ]
        },
        "datadog:index/PowerpackWidgetTimeseriesDefinitionRequestQueryEventQuery:PowerpackWidgetTimeseriesDefinitionRequestQueryEventQuery": {
            "properties": {
                "computes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryCompute:PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryCompute"
                    },
                    "description": "The compute options.\n"
                },
                "crossOrgUuids": {
                    "type": "string",
                    "description": "The source organization UUID for cross organization queries. Feature in Private Beta.\n"
                },
                "dataSource": {
                    "type": "string",
                    "description": "The data source for event platform-based queries. Valid values are `logs`, `spans`, `network`, `rum`, `security_signals`, `profiles`, `audit`, `events`, `ci_tests`, `ci_pipelines`, `incident_analytics`.\n"
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryGroupBy:PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryGroupBy"
                    },
                    "description": "Group by options.\n"
                },
                "indexes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "An array of index names to query in the stream.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of query for use in formulas.\n"
                },
                "search": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetTimeseriesDefinitionRequestQueryEventQuerySearch:PowerpackWidgetTimeseriesDefinitionRequestQueryEventQuerySearch",
                    "description": "The search options.\n"
                },
                "storage": {
                    "type": "string",
                    "description": "Storage location (private beta).\n"
                }
            },
            "type": "object",
            "required": [
                "computes",
                "dataSource",
                "name"
            ]
        },
        "datadog:index/PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryCompute:PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "The aggregation methods for event platform queries. Valid values are `count`, `cardinality`, `median`, `pc75`, `pc90`, `pc95`, `pc98`, `pc99`, `sum`, `min`, `max`, `avg`.\n"
                },
                "interval": {
                    "type": "integer",
                    "description": "A time interval in milliseconds.\n"
                },
                "metric": {
                    "type": "string",
                    "description": "The measurable attribute to compute.\n"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryGroupBy:PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "description": "The event facet.\n"
                },
                "limit": {
                    "type": "integer",
                    "description": "The number of groups to return.\n"
                },
                "sort": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryGroupBySort:PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryGroupBySort",
                    "description": "The options for sorting group by results.\n"
                }
            },
            "type": "object",
            "required": [
                "facet"
            ]
        },
        "datadog:index/PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryGroupBySort:PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "The aggregation methods for the event platform queries. Valid values are `count`, `cardinality`, `median`, `pc75`, `pc90`, `pc95`, `pc98`, `pc99`, `sum`, `min`, `max`, `avg`.\n"
                },
                "metric": {
                    "type": "string",
                    "description": "The metric used for sorting group by results.\n"
                },
                "order": {
                    "type": "string",
                    "description": "Direction of sort. Valid values are `asc`, `desc`.\n"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/PowerpackWidgetTimeseriesDefinitionRequestQueryEventQuerySearch:PowerpackWidgetTimeseriesDefinitionRequestQueryEventQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "description": "The events search string.\n"
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/PowerpackWidgetTimeseriesDefinitionRequestQueryMetricQuery:PowerpackWidgetTimeseriesDefinitionRequestQueryMetricQuery": {
            "properties": {
                "aggregator": {
                    "type": "string",
                    "description": "The aggregation methods available for metrics queries. Valid values are `avg`, `min`, `max`, `sum`, `last`, `area`, `l2norm`, `percentile`.\n"
                },
                "crossOrgUuids": {
                    "type": "string",
                    "description": "The source organization UUID for cross organization queries. Feature in Private Beta.\n"
                },
                "dataSource": {
                    "type": "string",
                    "description": "The data source for metrics queries. Defaults to `\"metrics\"`.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the query for use in formulas.\n"
                },
                "query": {
                    "type": "string",
                    "description": "The metrics query definition.\n"
                }
            },
            "type": "object",
            "required": [
                "name",
                "query"
            ]
        },
        "datadog:index/PowerpackWidgetTimeseriesDefinitionRequestQueryProcessQuery:PowerpackWidgetTimeseriesDefinitionRequestQueryProcessQuery": {
            "properties": {
                "aggregator": {
                    "type": "string",
                    "description": "The aggregation methods available for metrics queries. Valid values are `avg`, `min`, `max`, `sum`, `last`, `area`, `l2norm`, `percentile`.\n"
                },
                "crossOrgUuids": {
                    "type": "string",
                    "description": "The source organization UUID for cross organization queries. Feature in Private Beta.\n"
                },
                "dataSource": {
                    "type": "string",
                    "description": "The data source for process queries. Valid values are `process`, `container`.\n"
                },
                "isNormalizedCpu": {
                    "type": "boolean",
                    "description": "Whether to normalize the CPU percentages.\n"
                },
                "limit": {
                    "type": "integer",
                    "description": "The number of hits to return.\n"
                },
                "metric": {
                    "type": "string",
                    "description": "The process metric name.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of query for use in formulas.\n"
                },
                "sort": {
                    "type": "string",
                    "description": "The direction of the sort. Valid values are `asc`, `desc`. Defaults to `\"desc\"`.\n"
                },
                "tagFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "An array of tags to filter by.\n"
                },
                "textFilter": {
                    "type": "string",
                    "description": "The text to use as a filter.\n"
                }
            },
            "type": "object",
            "required": [
                "dataSource",
                "metric",
                "name"
            ]
        },
        "datadog:index/PowerpackWidgetTimeseriesDefinitionRequestQuerySloQuery:PowerpackWidgetTimeseriesDefinitionRequestQuerySloQuery": {
            "properties": {
                "additionalQueryFilters": {
                    "type": "string",
                    "description": "Additional filters applied to the SLO query.\n"
                },
                "crossOrgUuids": {
                    "type": "string",
                    "description": "The source organization UUID for cross organization queries. Feature in Private Beta.\n"
                },
                "dataSource": {
                    "type": "string",
                    "description": "The data source for SLO queries. Valid values are `slo`.\n"
                },
                "groupMode": {
                    "type": "string",
                    "description": "Group mode to query measures. Valid values are `overall`, `components`. Defaults to `\"overall\"`.\n"
                },
                "measure": {
                    "type": "string",
                    "description": "SLO measures queries. Valid values are `good_events`, `bad_events`, `slo_status`, `error_budget_remaining`, `burn_rate`, `error_budget_burndown`.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of query for use in formulas.\n"
                },
                "sloId": {
                    "type": "string",
                    "description": "ID of an SLO to query.\n"
                },
                "sloQueryType": {
                    "type": "string",
                    "description": "type of the SLO to query. Valid values are `metric`, `time_slice`. Defaults to `\"metric\"`.\n"
                }
            },
            "type": "object",
            "required": [
                "dataSource",
                "measure",
                "sloId"
            ]
        },
        "datadog:index/PowerpackWidgetTimeseriesDefinitionRequestRumQuery:PowerpackWidgetTimeseriesDefinitionRequestRumQuery": {
            "properties": {
                "computeQuery": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetTimeseriesDefinitionRequestRumQueryComputeQuery:PowerpackWidgetTimeseriesDefinitionRequestRumQueryComputeQuery",
                    "description": "`compute_query` or `multi_compute` is required. The map keys are listed below.\n"
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/PowerpackWidgetTimeseriesDefinitionRequestRumQueryGroupBy:PowerpackWidgetTimeseriesDefinitionRequestRumQueryGroupBy"
                    },
                    "description": "Multiple `group_by` blocks are allowed using the structure below.\n"
                },
                "index": {
                    "type": "string",
                    "description": "The name of the index to query.\n"
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/PowerpackWidgetTimeseriesDefinitionRequestRumQueryMultiCompute:PowerpackWidgetTimeseriesDefinitionRequestRumQueryMultiCompute"
                    },
                    "description": "`compute_query` or `multi_compute` is required. Multiple `multi_compute` blocks are allowed using the structure below.\n"
                },
                "searchQuery": {
                    "type": "string",
                    "description": "The search query to use.\n"
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/PowerpackWidgetTimeseriesDefinitionRequestRumQueryComputeQuery:PowerpackWidgetTimeseriesDefinitionRequestRumQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "The aggregation method.\n"
                },
                "facet": {
                    "type": "string",
                    "description": "The facet name.\n"
                },
                "interval": {
                    "type": "integer",
                    "description": "Define the time interval in seconds.\n"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/PowerpackWidgetTimeseriesDefinitionRequestRumQueryGroupBy:PowerpackWidgetTimeseriesDefinitionRequestRumQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "description": "The facet name.\n"
                },
                "limit": {
                    "type": "integer",
                    "description": "The maximum number of items in the group.\n"
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetTimeseriesDefinitionRequestRumQueryGroupBySortQuery:PowerpackWidgetTimeseriesDefinitionRequestRumQueryGroupBySortQuery",
                    "description": "A list of exactly one element describing the sort query to use.\n"
                }
            },
            "type": "object"
        },
        "datadog:index/PowerpackWidgetTimeseriesDefinitionRequestRumQueryGroupBySortQuery:PowerpackWidgetTimeseriesDefinitionRequestRumQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "The aggregation method.\n"
                },
                "facet": {
                    "type": "string",
                    "description": "The facet name.\n"
                },
                "order": {
                    "type": "string",
                    "description": "Widget sorting methods. Valid values are `asc`, `desc`.\n"
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/PowerpackWidgetTimeseriesDefinitionRequestRumQueryMultiCompute:PowerpackWidgetTimeseriesDefinitionRequestRumQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "The aggregation method.\n"
                },
                "facet": {
                    "type": "string",
                    "description": "The facet name.\n"
                },
                "interval": {
                    "type": "integer",
                    "description": "Define the time interval in seconds.\n"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/PowerpackWidgetTimeseriesDefinitionRequestSecurityQuery:PowerpackWidgetTimeseriesDefinitionRequestSecurityQuery": {
            "properties": {
                "computeQuery": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryComputeQuery:PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryComputeQuery",
                    "description": "`compute_query` or `multi_compute` is required. The map keys are listed below.\n"
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryGroupBy:PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryGroupBy"
                    },
                    "description": "Multiple `group_by` blocks are allowed using the structure below.\n"
                },
                "index": {
                    "type": "string",
                    "description": "The name of the index to query.\n"
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryMultiCompute:PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryMultiCompute"
                    },
                    "description": "`compute_query` or `multi_compute` is required. Multiple `multi_compute` blocks are allowed using the structure below.\n"
                },
                "searchQuery": {
                    "type": "string",
                    "description": "The search query to use.\n"
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryComputeQuery:PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "The aggregation method.\n"
                },
                "facet": {
                    "type": "string",
                    "description": "The facet name.\n"
                },
                "interval": {
                    "type": "integer",
                    "description": "Define the time interval in seconds.\n"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryGroupBy:PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "description": "The facet name.\n"
                },
                "limit": {
                    "type": "integer",
                    "description": "The maximum number of items in the group.\n"
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryGroupBySortQuery:PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryGroupBySortQuery",
                    "description": "A list of exactly one element describing the sort query to use.\n"
                }
            },
            "type": "object"
        },
        "datadog:index/PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryGroupBySortQuery:PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "The aggregation method.\n"
                },
                "facet": {
                    "type": "string",
                    "description": "The facet name.\n"
                },
                "order": {
                    "type": "string",
                    "description": "Widget sorting methods. Valid values are `asc`, `desc`.\n"
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryMultiCompute:PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "The aggregation method.\n"
                },
                "facet": {
                    "type": "string",
                    "description": "The facet name.\n"
                },
                "interval": {
                    "type": "integer",
                    "description": "Define the time interval in seconds.\n"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/PowerpackWidgetTimeseriesDefinitionRequestStyle:PowerpackWidgetTimeseriesDefinitionRequestStyle": {
            "properties": {
                "lineType": {
                    "type": "string",
                    "description": "The type of lines displayed. Valid values are `dashed`, `dotted`, `solid`.\n"
                },
                "lineWidth": {
                    "type": "string",
                    "description": "The width of line displayed. Valid values are `normal`, `thick`, `thin`.\n"
                },
                "palette": {
                    "type": "string",
                    "description": "A color palette to apply to the widget. The available options are available at: https://docs.datadoghq.com/dashboards/widgets/timeseries/#appearance.\n"
                }
            },
            "type": "object"
        },
        "datadog:index/PowerpackWidgetTimeseriesDefinitionRightYaxis:PowerpackWidgetTimeseriesDefinitionRightYaxis": {
            "properties": {
                "includeZero": {
                    "type": "boolean",
                    "description": "Always include zero or fit the axis to the data range.\n"
                },
                "label": {
                    "type": "string",
                    "description": "The label of the axis to display on the graph.\n"
                },
                "max": {
                    "type": "string",
                    "description": "Specify the maximum value to show on the Y-axis.\n"
                },
                "min": {
                    "type": "string",
                    "description": "Specify the minimum value to show on the Y-axis.\n"
                },
                "scale": {
                    "type": "string",
                    "description": "Specify the scale type, options: `linear`, `log`, `pow`, `sqrt`.\n"
                }
            },
            "type": "object"
        },
        "datadog:index/PowerpackWidgetTimeseriesDefinitionYaxis:PowerpackWidgetTimeseriesDefinitionYaxis": {
            "properties": {
                "includeZero": {
                    "type": "boolean",
                    "description": "Always include zero or fit the axis to the data range.\n"
                },
                "label": {
                    "type": "string",
                    "description": "The label of the axis to display on the graph.\n"
                },
                "max": {
                    "type": "string",
                    "description": "Specify the maximum value to show on the Y-axis.\n"
                },
                "min": {
                    "type": "string",
                    "description": "Specify the minimum value to show on the Y-axis.\n"
                },
                "scale": {
                    "type": "string",
                    "description": "Specify the scale type, options: `linear`, `log`, `pow`, `sqrt`.\n"
                }
            },
            "type": "object"
        },
        "datadog:index/PowerpackWidgetToplistDefinition:PowerpackWidgetToplistDefinition": {
            "properties": {
                "customLinks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/PowerpackWidgetToplistDefinitionCustomLink:PowerpackWidgetToplistDefinitionCustomLink"
                    },
                    "description": "A nested block describing a custom link. Multiple `custom_link` blocks are allowed using the structure below.\n"
                },
                "liveSpan": {
                    "type": "string",
                    "description": "The timeframe to use when displaying the widget. Valid values are `1m`, `5m`, `10m`, `15m`, `30m`, `1h`, `4h`, `1d`, `2d`, `1w`, `1mo`, `3mo`, `6mo`, `week_to_date`, `month_to_date`, `1y`, `alert`.\n"
                },
                "requests": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/PowerpackWidgetToplistDefinitionRequest:PowerpackWidgetToplistDefinitionRequest"
                    },
                    "description": "A nested block describing the request to use when displaying the widget. Multiple `request` blocks are allowed using the structure below (exactly one of `q`, `apm_query`, `log_query`, `rum_query`, `security_query` or `process_query` is required within the `request` block).\n"
                },
                "title": {
                    "type": "string",
                    "description": "The title of the widget.\n"
                },
                "titleAlign": {
                    "type": "string",
                    "description": "The alignment of the widget's title. Valid values are `center`, `left`, `right`.\n"
                },
                "titleSize": {
                    "type": "string",
                    "description": "The size of the widget's title (defaults to 16).\n"
                }
            },
            "type": "object"
        },
        "datadog:index/PowerpackWidgetToplistDefinitionCustomLink:PowerpackWidgetToplistDefinitionCustomLink": {
            "properties": {
                "isHidden": {
                    "type": "boolean",
                    "description": "The flag for toggling context menu link visibility.\n"
                },
                "label": {
                    "type": "string",
                    "description": "The label for the custom link URL.\n"
                },
                "link": {
                    "type": "string",
                    "description": "The URL of the custom link.\n"
                },
                "overrideLabel": {
                    "type": "string",
                    "description": "The label ID that refers to a context menu link item. When `override_label` is provided, the client request omits the label field.\n"
                }
            },
            "type": "object"
        },
        "datadog:index/PowerpackWidgetToplistDefinitionRequest:PowerpackWidgetToplistDefinitionRequest": {
            "properties": {
                "apmQuery": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetToplistDefinitionRequestApmQuery:PowerpackWidgetToplistDefinitionRequestApmQuery",
                    "description": "The query to use for this widget.\n"
                },
                "auditQuery": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetToplistDefinitionRequestAuditQuery:PowerpackWidgetToplistDefinitionRequestAuditQuery",
                    "description": "The query to use for this widget.\n"
                },
                "conditionalFormats": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/PowerpackWidgetToplistDefinitionRequestConditionalFormat:PowerpackWidgetToplistDefinitionRequestConditionalFormat"
                    },
                    "description": "Conditional formats allow you to set the color of your widget content or background, depending on a rule applied to your data. Multiple `conditional_formats` blocks are allowed using the structure below.\n"
                },
                "formulas": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/PowerpackWidgetToplistDefinitionRequestFormula:PowerpackWidgetToplistDefinitionRequestFormula"
                    }
                },
                "logQuery": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetToplistDefinitionRequestLogQuery:PowerpackWidgetToplistDefinitionRequestLogQuery",
                    "description": "The query to use for this widget.\n"
                },
                "processQuery": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetToplistDefinitionRequestProcessQuery:PowerpackWidgetToplistDefinitionRequestProcessQuery",
                    "description": "The process query to use in the widget. The structure of this block is described below.\n"
                },
                "q": {
                    "type": "string",
                    "description": "The metric query to use for this widget.\n"
                },
                "queries": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/PowerpackWidgetToplistDefinitionRequestQuery:PowerpackWidgetToplistDefinitionRequestQuery"
                    }
                },
                "rumQuery": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetToplistDefinitionRequestRumQuery:PowerpackWidgetToplistDefinitionRequestRumQuery",
                    "description": "The query to use for this widget.\n"
                },
                "securityQuery": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetToplistDefinitionRequestSecurityQuery:PowerpackWidgetToplistDefinitionRequestSecurityQuery",
                    "description": "The query to use for this widget.\n"
                },
                "style": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetToplistDefinitionRequestStyle:PowerpackWidgetToplistDefinitionRequestStyle",
                    "description": "Define request for the widget's style.\n"
                }
            },
            "type": "object"
        },
        "datadog:index/PowerpackWidgetToplistDefinitionRequestApmQuery:PowerpackWidgetToplistDefinitionRequestApmQuery": {
            "properties": {
                "computeQuery": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetToplistDefinitionRequestApmQueryComputeQuery:PowerpackWidgetToplistDefinitionRequestApmQueryComputeQuery",
                    "description": "`compute_query` or `multi_compute` is required. The map keys are listed below.\n"
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/PowerpackWidgetToplistDefinitionRequestApmQueryGroupBy:PowerpackWidgetToplistDefinitionRequestApmQueryGroupBy"
                    },
                    "description": "Multiple `group_by` blocks are allowed using the structure below.\n"
                },
                "index": {
                    "type": "string",
                    "description": "The name of the index to query.\n"
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/PowerpackWidgetToplistDefinitionRequestApmQueryMultiCompute:PowerpackWidgetToplistDefinitionRequestApmQueryMultiCompute"
                    },
                    "description": "`compute_query` or `multi_compute` is required. Multiple `multi_compute` blocks are allowed using the structure below.\n"
                },
                "searchQuery": {
                    "type": "string",
                    "description": "The search query to use.\n"
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/PowerpackWidgetToplistDefinitionRequestApmQueryComputeQuery:PowerpackWidgetToplistDefinitionRequestApmQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "The aggregation method.\n"
                },
                "facet": {
                    "type": "string",
                    "description": "The facet name.\n"
                },
                "interval": {
                    "type": "integer",
                    "description": "Define the time interval in seconds.\n"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/PowerpackWidgetToplistDefinitionRequestApmQueryGroupBy:PowerpackWidgetToplistDefinitionRequestApmQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "description": "The facet name.\n"
                },
                "limit": {
                    "type": "integer",
                    "description": "The maximum number of items in the group.\n"
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetToplistDefinitionRequestApmQueryGroupBySortQuery:PowerpackWidgetToplistDefinitionRequestApmQueryGroupBySortQuery",
                    "description": "A list of exactly one element describing the sort query to use.\n"
                }
            },
            "type": "object"
        },
        "datadog:index/PowerpackWidgetToplistDefinitionRequestApmQueryGroupBySortQuery:PowerpackWidgetToplistDefinitionRequestApmQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "The aggregation method.\n"
                },
                "facet": {
                    "type": "string",
                    "description": "The facet name.\n"
                },
                "order": {
                    "type": "string",
                    "description": "Widget sorting methods. Valid values are `asc`, `desc`.\n"
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/PowerpackWidgetToplistDefinitionRequestApmQueryMultiCompute:PowerpackWidgetToplistDefinitionRequestApmQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "The aggregation method.\n"
                },
                "facet": {
                    "type": "string",
                    "description": "The facet name.\n"
                },
                "interval": {
                    "type": "integer",
                    "description": "Define the time interval in seconds.\n"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/PowerpackWidgetToplistDefinitionRequestAuditQuery:PowerpackWidgetToplistDefinitionRequestAuditQuery": {
            "properties": {
                "computeQuery": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetToplistDefinitionRequestAuditQueryComputeQuery:PowerpackWidgetToplistDefinitionRequestAuditQueryComputeQuery",
                    "description": "`compute_query` or `multi_compute` is required. The map keys are listed below.\n"
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/PowerpackWidgetToplistDefinitionRequestAuditQueryGroupBy:PowerpackWidgetToplistDefinitionRequestAuditQueryGroupBy"
                    },
                    "description": "Multiple `group_by` blocks are allowed using the structure below.\n"
                },
                "index": {
                    "type": "string",
                    "description": "The name of the index to query.\n"
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/PowerpackWidgetToplistDefinitionRequestAuditQueryMultiCompute:PowerpackWidgetToplistDefinitionRequestAuditQueryMultiCompute"
                    },
                    "description": "`compute_query` or `multi_compute` is required. Multiple `multi_compute` blocks are allowed using the structure below.\n"
                },
                "searchQuery": {
                    "type": "string",
                    "description": "The search query to use.\n"
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/PowerpackWidgetToplistDefinitionRequestAuditQueryComputeQuery:PowerpackWidgetToplistDefinitionRequestAuditQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "The aggregation method.\n"
                },
                "facet": {
                    "type": "string",
                    "description": "The facet name.\n"
                },
                "interval": {
                    "type": "integer",
                    "description": "Define the time interval in seconds.\n"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/PowerpackWidgetToplistDefinitionRequestAuditQueryGroupBy:PowerpackWidgetToplistDefinitionRequestAuditQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "description": "The facet name.\n"
                },
                "limit": {
                    "type": "integer",
                    "description": "The maximum number of items in the group.\n"
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetToplistDefinitionRequestAuditQueryGroupBySortQuery:PowerpackWidgetToplistDefinitionRequestAuditQueryGroupBySortQuery",
                    "description": "A list of exactly one element describing the sort query to use.\n"
                }
            },
            "type": "object"
        },
        "datadog:index/PowerpackWidgetToplistDefinitionRequestAuditQueryGroupBySortQuery:PowerpackWidgetToplistDefinitionRequestAuditQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "The aggregation method.\n"
                },
                "facet": {
                    "type": "string",
                    "description": "The facet name.\n"
                },
                "order": {
                    "type": "string",
                    "description": "Widget sorting methods. Valid values are `asc`, `desc`.\n"
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/PowerpackWidgetToplistDefinitionRequestAuditQueryMultiCompute:PowerpackWidgetToplistDefinitionRequestAuditQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "The aggregation method.\n"
                },
                "facet": {
                    "type": "string",
                    "description": "The facet name.\n"
                },
                "interval": {
                    "type": "integer",
                    "description": "Define the time interval in seconds.\n"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/PowerpackWidgetToplistDefinitionRequestConditionalFormat:PowerpackWidgetToplistDefinitionRequestConditionalFormat": {
            "properties": {
                "comparator": {
                    "type": "string",
                    "description": "The comparator to use. Valid values are `=`, `\u003e`, `\u003e=`, `\u003c`, `\u003c=`.\n"
                },
                "customBgColor": {
                    "type": "string",
                    "description": "The color palette to apply to the background, same values available as palette.\n"
                },
                "customFgColor": {
                    "type": "string",
                    "description": "The color palette to apply to the foreground, same values available as palette.\n"
                },
                "hideValue": {
                    "type": "boolean",
                    "description": "Setting this to True hides values.\n"
                },
                "imageUrl": {
                    "type": "string",
                    "description": "Displays an image as the background.\n"
                },
                "metric": {
                    "type": "string",
                    "description": "The metric from the request to correlate with this conditional format.\n"
                },
                "palette": {
                    "type": "string",
                    "description": "The color palette to apply. Valid values are `blue`, `custom_bg`, `custom_image`, `custom_text`, `gray_on_white`, `grey`, `green`, `orange`, `red`, `red_on_white`, `white_on_gray`, `white_on_green`, `green_on_white`, `white_on_red`, `white_on_yellow`, `yellow_on_white`, `black_on_light_yellow`, `black_on_light_green`, `black_on_light_red`.\n"
                },
                "timeframe": {
                    "type": "string",
                    "description": "Defines the displayed timeframe.\n"
                },
                "value": {
                    "type": "number",
                    "description": "A value for the comparator.\n"
                }
            },
            "type": "object",
            "required": [
                "comparator",
                "palette",
                "value"
            ]
        },
        "datadog:index/PowerpackWidgetToplistDefinitionRequestFormula:PowerpackWidgetToplistDefinitionRequestFormula": {
            "properties": {
                "alias": {
                    "type": "string",
                    "description": "An expression alias.\n"
                },
                "cellDisplayMode": {
                    "type": "string",
                    "description": "A list of display modes for each table cell. Valid values are `number`, `bar`.\n"
                },
                "conditionalFormats": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/PowerpackWidgetToplistDefinitionRequestFormulaConditionalFormat:PowerpackWidgetToplistDefinitionRequestFormulaConditionalFormat"
                    },
                    "description": "Conditional formats allow you to set the color of your widget content or background depending on the rule applied to your data. Multiple `conditional_formats` blocks are allowed using the structure below.\n"
                },
                "formulaExpression": {
                    "type": "string",
                    "description": "A string expression built from queries, formulas, and functions.\n"
                },
                "limit": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetToplistDefinitionRequestFormulaLimit:PowerpackWidgetToplistDefinitionRequestFormulaLimit",
                    "description": "The options for limiting results returned.\n"
                },
                "style": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetToplistDefinitionRequestFormulaStyle:PowerpackWidgetToplistDefinitionRequestFormulaStyle",
                    "description": "Styling options for widget formulas.\n"
                }
            },
            "type": "object",
            "required": [
                "formulaExpression"
            ]
        },
        "datadog:index/PowerpackWidgetToplistDefinitionRequestFormulaConditionalFormat:PowerpackWidgetToplistDefinitionRequestFormulaConditionalFormat": {
            "properties": {
                "comparator": {
                    "type": "string",
                    "description": "The comparator to use. Valid values are `=`, `\u003e`, `\u003e=`, `\u003c`, `\u003c=`.\n"
                },
                "customBgColor": {
                    "type": "string",
                    "description": "The color palette to apply to the background, same values available as palette.\n"
                },
                "customFgColor": {
                    "type": "string",
                    "description": "The color palette to apply to the foreground, same values available as palette.\n"
                },
                "hideValue": {
                    "type": "boolean",
                    "description": "Setting this to True hides values.\n"
                },
                "imageUrl": {
                    "type": "string",
                    "description": "Displays an image as the background.\n"
                },
                "metric": {
                    "type": "string",
                    "description": "The metric from the request to correlate with this conditional format.\n"
                },
                "palette": {
                    "type": "string",
                    "description": "The color palette to apply. Valid values are `blue`, `custom_bg`, `custom_image`, `custom_text`, `gray_on_white`, `grey`, `green`, `orange`, `red`, `red_on_white`, `white_on_gray`, `white_on_green`, `green_on_white`, `white_on_red`, `white_on_yellow`, `yellow_on_white`, `black_on_light_yellow`, `black_on_light_green`, `black_on_light_red`.\n"
                },
                "timeframe": {
                    "type": "string",
                    "description": "Defines the displayed timeframe.\n"
                },
                "value": {
                    "type": "number",
                    "description": "A value for the comparator.\n"
                }
            },
            "type": "object",
            "required": [
                "comparator",
                "palette",
                "value"
            ]
        },
        "datadog:index/PowerpackWidgetToplistDefinitionRequestFormulaLimit:PowerpackWidgetToplistDefinitionRequestFormulaLimit": {
            "properties": {
                "count": {
                    "type": "integer",
                    "description": "The number of results to return.\n"
                },
                "order": {
                    "type": "string",
                    "description": "The direction of the sort. Valid values are `asc`, `desc`. Defaults to `\"desc\"`.\n"
                }
            },
            "type": "object"
        },
        "datadog:index/PowerpackWidgetToplistDefinitionRequestFormulaStyle:PowerpackWidgetToplistDefinitionRequestFormulaStyle": {
            "properties": {
                "palette": {
                    "type": "string",
                    "description": "The color palette used to display the formula. A guide to the available color palettes can be found at https://docs.datadoghq.com/dashboards/guide/widget_colors.\n"
                },
                "paletteIndex": {
                    "type": "integer",
                    "description": "Index specifying which color to use within the palette.\n"
                }
            },
            "type": "object"
        },
        "datadog:index/PowerpackWidgetToplistDefinitionRequestLogQuery:PowerpackWidgetToplistDefinitionRequestLogQuery": {
            "properties": {
                "computeQuery": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetToplistDefinitionRequestLogQueryComputeQuery:PowerpackWidgetToplistDefinitionRequestLogQueryComputeQuery",
                    "description": "`compute_query` or `multi_compute` is required. The map keys are listed below.\n"
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/PowerpackWidgetToplistDefinitionRequestLogQueryGroupBy:PowerpackWidgetToplistDefinitionRequestLogQueryGroupBy"
                    },
                    "description": "Multiple `group_by` blocks are allowed using the structure below.\n"
                },
                "index": {
                    "type": "string",
                    "description": "The name of the index to query.\n"
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/PowerpackWidgetToplistDefinitionRequestLogQueryMultiCompute:PowerpackWidgetToplistDefinitionRequestLogQueryMultiCompute"
                    },
                    "description": "`compute_query` or `multi_compute` is required. Multiple `multi_compute` blocks are allowed using the structure below.\n"
                },
                "searchQuery": {
                    "type": "string",
                    "description": "The search query to use.\n"
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/PowerpackWidgetToplistDefinitionRequestLogQueryComputeQuery:PowerpackWidgetToplistDefinitionRequestLogQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "The aggregation method.\n"
                },
                "facet": {
                    "type": "string",
                    "description": "The facet name.\n"
                },
                "interval": {
                    "type": "integer",
                    "description": "Define the time interval in seconds.\n"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/PowerpackWidgetToplistDefinitionRequestLogQueryGroupBy:PowerpackWidgetToplistDefinitionRequestLogQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "description": "The facet name.\n"
                },
                "limit": {
                    "type": "integer",
                    "description": "The maximum number of items in the group.\n"
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetToplistDefinitionRequestLogQueryGroupBySortQuery:PowerpackWidgetToplistDefinitionRequestLogQueryGroupBySortQuery",
                    "description": "A list of exactly one element describing the sort query to use.\n"
                }
            },
            "type": "object"
        },
        "datadog:index/PowerpackWidgetToplistDefinitionRequestLogQueryGroupBySortQuery:PowerpackWidgetToplistDefinitionRequestLogQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "The aggregation method.\n"
                },
                "facet": {
                    "type": "string",
                    "description": "The facet name.\n"
                },
                "order": {
                    "type": "string",
                    "description": "Widget sorting methods. Valid values are `asc`, `desc`.\n"
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/PowerpackWidgetToplistDefinitionRequestLogQueryMultiCompute:PowerpackWidgetToplistDefinitionRequestLogQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "The aggregation method.\n"
                },
                "facet": {
                    "type": "string",
                    "description": "The facet name.\n"
                },
                "interval": {
                    "type": "integer",
                    "description": "Define the time interval in seconds.\n"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/PowerpackWidgetToplistDefinitionRequestProcessQuery:PowerpackWidgetToplistDefinitionRequestProcessQuery": {
            "properties": {
                "filterBies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of processes.\n"
                },
                "limit": {
                    "type": "integer",
                    "description": "The max number of items in the filter list.\n"
                },
                "metric": {
                    "type": "string",
                    "description": "Your chosen metric.\n"
                },
                "searchBy": {
                    "type": "string",
                    "description": "Your chosen search term.\n"
                }
            },
            "type": "object",
            "required": [
                "metric"
            ]
        },
        "datadog:index/PowerpackWidgetToplistDefinitionRequestQuery:PowerpackWidgetToplistDefinitionRequestQuery": {
            "properties": {
                "apmDependencyStatsQuery": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetToplistDefinitionRequestQueryApmDependencyStatsQuery:PowerpackWidgetToplistDefinitionRequestQueryApmDependencyStatsQuery",
                    "description": "The APM Dependency Stats query using formulas and functions.\n"
                },
                "apmResourceStatsQuery": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetToplistDefinitionRequestQueryApmResourceStatsQuery:PowerpackWidgetToplistDefinitionRequestQueryApmResourceStatsQuery",
                    "description": "The APM Resource Stats query using formulas and functions.\n"
                },
                "cloudCostQuery": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetToplistDefinitionRequestQueryCloudCostQuery:PowerpackWidgetToplistDefinitionRequestQueryCloudCostQuery",
                    "description": "The Cloud Cost query using formulas and functions.\n"
                },
                "eventQuery": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetToplistDefinitionRequestQueryEventQuery:PowerpackWidgetToplistDefinitionRequestQueryEventQuery",
                    "description": "A timeseries formula and functions events query.\n"
                },
                "metricQuery": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetToplistDefinitionRequestQueryMetricQuery:PowerpackWidgetToplistDefinitionRequestQueryMetricQuery",
                    "description": "A timeseries formula and functions metrics query.\n"
                },
                "processQuery": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetToplistDefinitionRequestQueryProcessQuery:PowerpackWidgetToplistDefinitionRequestQueryProcessQuery",
                    "description": "The process query using formulas and functions.\n"
                },
                "sloQuery": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetToplistDefinitionRequestQuerySloQuery:PowerpackWidgetToplistDefinitionRequestQuerySloQuery",
                    "description": "The SLO query using formulas and functions.\n"
                }
            },
            "type": "object"
        },
        "datadog:index/PowerpackWidgetToplistDefinitionRequestQueryApmDependencyStatsQuery:PowerpackWidgetToplistDefinitionRequestQueryApmDependencyStatsQuery": {
            "properties": {
                "crossOrgUuids": {
                    "type": "string",
                    "description": "The source organization UUID for cross organization queries. Feature in Private Beta.\n"
                },
                "dataSource": {
                    "type": "string",
                    "description": "The data source for APM Dependency Stats queries. Valid values are `apm_dependency_stats`.\n"
                },
                "env": {
                    "type": "string",
                    "description": "APM environment.\n"
                },
                "isUpstream": {
                    "type": "boolean",
                    "description": "Determines whether stats for upstream or downstream dependencies should be queried.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of query for use in formulas.\n"
                },
                "operationName": {
                    "type": "string",
                    "description": "Name of operation on service.\n"
                },
                "primaryTagName": {
                    "type": "string",
                    "description": "The name of the second primary tag used within APM; required when `primary_tag_value` is specified. See https://docs.datadoghq.com/tracing/guide/setting*primary*tags*to*scope/#add-a-second-primary-tag-in-datadog.\n"
                },
                "primaryTagValue": {
                    "type": "string",
                    "description": "Filter APM data by the second primary tag. `primary_tag_name` must also be specified.\n"
                },
                "resourceName": {
                    "type": "string",
                    "description": "APM resource.\n"
                },
                "service": {
                    "type": "string",
                    "description": "APM service.\n"
                },
                "stat": {
                    "type": "string",
                    "description": "APM statistic. Valid values are `avg_duration`, `avg_root_duration`, `avg_spans_per_trace`, `error_rate`, `pct_exec_time`, `pct_of_traces`, `total_traces_count`.\n"
                }
            },
            "type": "object",
            "required": [
                "dataSource",
                "env",
                "name",
                "operationName",
                "resourceName",
                "service",
                "stat"
            ]
        },
        "datadog:index/PowerpackWidgetToplistDefinitionRequestQueryApmResourceStatsQuery:PowerpackWidgetToplistDefinitionRequestQueryApmResourceStatsQuery": {
            "properties": {
                "crossOrgUuids": {
                    "type": "string",
                    "description": "The source organization UUID for cross organization queries. Feature in Private Beta.\n"
                },
                "dataSource": {
                    "type": "string",
                    "description": "The data source for APM Resource Stats queries. Valid values are `apm_resource_stats`.\n"
                },
                "env": {
                    "type": "string",
                    "description": "APM environment.\n"
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Array of fields to group results by.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of query for use in formulas.\n"
                },
                "operationName": {
                    "type": "string",
                    "description": "Name of operation on service.\n"
                },
                "primaryTagName": {
                    "type": "string",
                    "description": "The name of the second primary tag used within APM; required when `primary_tag_value` is specified. See https://docs.datadoghq.com/tracing/guide/setting*primary*tags*to*scope/#add-a-second-primary-tag-in-datadog.\n"
                },
                "primaryTagValue": {
                    "type": "string",
                    "description": "Filter APM data by the second primary tag. `primary_tag_name` must also be specified.\n"
                },
                "resourceName": {
                    "type": "string",
                    "description": "APM resource.\n"
                },
                "service": {
                    "type": "string",
                    "description": "APM service.\n"
                },
                "stat": {
                    "type": "string",
                    "description": "APM statistic. Valid values are `errors`, `error_rate`, `hits`, `latency_avg`, `latency_distribution`, `latency_max`, `latency_p50`, `latency_p75`, `latency_p90`, `latency_p95`, `latency_p99`.\n"
                }
            },
            "type": "object",
            "required": [
                "dataSource",
                "env",
                "name",
                "service",
                "stat"
            ]
        },
        "datadog:index/PowerpackWidgetToplistDefinitionRequestQueryCloudCostQuery:PowerpackWidgetToplistDefinitionRequestQueryCloudCostQuery": {
            "properties": {
                "aggregator": {
                    "type": "string",
                    "description": "The aggregation methods available for cloud cost queries. Valid values are `avg`, `last`, `max`, `min`, `sum`, `percentile`.\n"
                },
                "crossOrgUuids": {
                    "type": "string",
                    "description": "The source organization UUID for cross organization queries. Feature in Private Beta.\n"
                },
                "dataSource": {
                    "type": "string",
                    "description": "The data source for cloud cost queries. Valid values are `cloud_cost`.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the query for use in formulas.\n"
                },
                "query": {
                    "type": "string",
                    "description": "The cloud cost query definition.\n"
                }
            },
            "type": "object",
            "required": [
                "dataSource",
                "name",
                "query"
            ]
        },
        "datadog:index/PowerpackWidgetToplistDefinitionRequestQueryEventQuery:PowerpackWidgetToplistDefinitionRequestQueryEventQuery": {
            "properties": {
                "computes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/PowerpackWidgetToplistDefinitionRequestQueryEventQueryCompute:PowerpackWidgetToplistDefinitionRequestQueryEventQueryCompute"
                    },
                    "description": "The compute options.\n"
                },
                "crossOrgUuids": {
                    "type": "string",
                    "description": "The source organization UUID for cross organization queries. Feature in Private Beta.\n"
                },
                "dataSource": {
                    "type": "string",
                    "description": "The data source for event platform-based queries. Valid values are `logs`, `spans`, `network`, `rum`, `security_signals`, `profiles`, `audit`, `events`, `ci_tests`, `ci_pipelines`, `incident_analytics`.\n"
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/PowerpackWidgetToplistDefinitionRequestQueryEventQueryGroupBy:PowerpackWidgetToplistDefinitionRequestQueryEventQueryGroupBy"
                    },
                    "description": "Group by options.\n"
                },
                "indexes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "An array of index names to query in the stream.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of query for use in formulas.\n"
                },
                "search": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetToplistDefinitionRequestQueryEventQuerySearch:PowerpackWidgetToplistDefinitionRequestQueryEventQuerySearch",
                    "description": "The search options.\n"
                },
                "storage": {
                    "type": "string",
                    "description": "Storage location (private beta).\n"
                }
            },
            "type": "object",
            "required": [
                "computes",
                "dataSource",
                "name"
            ]
        },
        "datadog:index/PowerpackWidgetToplistDefinitionRequestQueryEventQueryCompute:PowerpackWidgetToplistDefinitionRequestQueryEventQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "The aggregation methods for event platform queries. Valid values are `count`, `cardinality`, `median`, `pc75`, `pc90`, `pc95`, `pc98`, `pc99`, `sum`, `min`, `max`, `avg`.\n"
                },
                "interval": {
                    "type": "integer",
                    "description": "A time interval in milliseconds.\n"
                },
                "metric": {
                    "type": "string",
                    "description": "The measurable attribute to compute.\n"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/PowerpackWidgetToplistDefinitionRequestQueryEventQueryGroupBy:PowerpackWidgetToplistDefinitionRequestQueryEventQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "description": "The event facet.\n"
                },
                "limit": {
                    "type": "integer",
                    "description": "The number of groups to return.\n"
                },
                "sort": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetToplistDefinitionRequestQueryEventQueryGroupBySort:PowerpackWidgetToplistDefinitionRequestQueryEventQueryGroupBySort",
                    "description": "The options for sorting group by results.\n"
                }
            },
            "type": "object",
            "required": [
                "facet"
            ]
        },
        "datadog:index/PowerpackWidgetToplistDefinitionRequestQueryEventQueryGroupBySort:PowerpackWidgetToplistDefinitionRequestQueryEventQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "The aggregation methods for the event platform queries. Valid values are `count`, `cardinality`, `median`, `pc75`, `pc90`, `pc95`, `pc98`, `pc99`, `sum`, `min`, `max`, `avg`.\n"
                },
                "metric": {
                    "type": "string",
                    "description": "The metric used for sorting group by results.\n"
                },
                "order": {
                    "type": "string",
                    "description": "Direction of sort. Valid values are `asc`, `desc`.\n"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/PowerpackWidgetToplistDefinitionRequestQueryEventQuerySearch:PowerpackWidgetToplistDefinitionRequestQueryEventQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "description": "The events search string.\n"
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/PowerpackWidgetToplistDefinitionRequestQueryMetricQuery:PowerpackWidgetToplistDefinitionRequestQueryMetricQuery": {
            "properties": {
                "aggregator": {
                    "type": "string",
                    "description": "The aggregation methods available for metrics queries. Valid values are `avg`, `min`, `max`, `sum`, `last`, `area`, `l2norm`, `percentile`.\n"
                },
                "crossOrgUuids": {
                    "type": "string",
                    "description": "The source organization UUID for cross organization queries. Feature in Private Beta.\n"
                },
                "dataSource": {
                    "type": "string",
                    "description": "The data source for metrics queries. Defaults to `\"metrics\"`.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the query for use in formulas.\n"
                },
                "query": {
                    "type": "string",
                    "description": "The metrics query definition.\n"
                }
            },
            "type": "object",
            "required": [
                "name",
                "query"
            ]
        },
        "datadog:index/PowerpackWidgetToplistDefinitionRequestQueryProcessQuery:PowerpackWidgetToplistDefinitionRequestQueryProcessQuery": {
            "properties": {
                "aggregator": {
                    "type": "string",
                    "description": "The aggregation methods available for metrics queries. Valid values are `avg`, `min`, `max`, `sum`, `last`, `area`, `l2norm`, `percentile`.\n"
                },
                "crossOrgUuids": {
                    "type": "string",
                    "description": "The source organization UUID for cross organization queries. Feature in Private Beta.\n"
                },
                "dataSource": {
                    "type": "string",
                    "description": "The data source for process queries. Valid values are `process`, `container`.\n"
                },
                "isNormalizedCpu": {
                    "type": "boolean",
                    "description": "Whether to normalize the CPU percentages.\n"
                },
                "limit": {
                    "type": "integer",
                    "description": "The number of hits to return.\n"
                },
                "metric": {
                    "type": "string",
                    "description": "The process metric name.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of query for use in formulas.\n"
                },
                "sort": {
                    "type": "string",
                    "description": "The direction of the sort. Valid values are `asc`, `desc`. Defaults to `\"desc\"`.\n"
                },
                "tagFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "An array of tags to filter by.\n"
                },
                "textFilter": {
                    "type": "string",
                    "description": "The text to use as a filter.\n"
                }
            },
            "type": "object",
            "required": [
                "dataSource",
                "metric",
                "name"
            ]
        },
        "datadog:index/PowerpackWidgetToplistDefinitionRequestQuerySloQuery:PowerpackWidgetToplistDefinitionRequestQuerySloQuery": {
            "properties": {
                "additionalQueryFilters": {
                    "type": "string",
                    "description": "Additional filters applied to the SLO query.\n"
                },
                "crossOrgUuids": {
                    "type": "string",
                    "description": "The source organization UUID for cross organization queries. Feature in Private Beta.\n"
                },
                "dataSource": {
                    "type": "string",
                    "description": "The data source for SLO queries. Valid values are `slo`.\n"
                },
                "groupMode": {
                    "type": "string",
                    "description": "Group mode to query measures. Valid values are `overall`, `components`. Defaults to `\"overall\"`.\n"
                },
                "measure": {
                    "type": "string",
                    "description": "SLO measures queries. Valid values are `good_events`, `bad_events`, `slo_status`, `error_budget_remaining`, `burn_rate`, `error_budget_burndown`.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of query for use in formulas.\n"
                },
                "sloId": {
                    "type": "string",
                    "description": "ID of an SLO to query.\n"
                },
                "sloQueryType": {
                    "type": "string",
                    "description": "type of the SLO to query. Valid values are `metric`, `time_slice`. Defaults to `\"metric\"`.\n"
                }
            },
            "type": "object",
            "required": [
                "dataSource",
                "measure",
                "sloId"
            ]
        },
        "datadog:index/PowerpackWidgetToplistDefinitionRequestRumQuery:PowerpackWidgetToplistDefinitionRequestRumQuery": {
            "properties": {
                "computeQuery": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetToplistDefinitionRequestRumQueryComputeQuery:PowerpackWidgetToplistDefinitionRequestRumQueryComputeQuery",
                    "description": "`compute_query` or `multi_compute` is required. The map keys are listed below.\n"
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/PowerpackWidgetToplistDefinitionRequestRumQueryGroupBy:PowerpackWidgetToplistDefinitionRequestRumQueryGroupBy"
                    },
                    "description": "Multiple `group_by` blocks are allowed using the structure below.\n"
                },
                "index": {
                    "type": "string",
                    "description": "The name of the index to query.\n"
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/PowerpackWidgetToplistDefinitionRequestRumQueryMultiCompute:PowerpackWidgetToplistDefinitionRequestRumQueryMultiCompute"
                    },
                    "description": "`compute_query` or `multi_compute` is required. Multiple `multi_compute` blocks are allowed using the structure below.\n"
                },
                "searchQuery": {
                    "type": "string",
                    "description": "The search query to use.\n"
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/PowerpackWidgetToplistDefinitionRequestRumQueryComputeQuery:PowerpackWidgetToplistDefinitionRequestRumQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "The aggregation method.\n"
                },
                "facet": {
                    "type": "string",
                    "description": "The facet name.\n"
                },
                "interval": {
                    "type": "integer",
                    "description": "Define the time interval in seconds.\n"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/PowerpackWidgetToplistDefinitionRequestRumQueryGroupBy:PowerpackWidgetToplistDefinitionRequestRumQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "description": "The facet name.\n"
                },
                "limit": {
                    "type": "integer",
                    "description": "The maximum number of items in the group.\n"
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetToplistDefinitionRequestRumQueryGroupBySortQuery:PowerpackWidgetToplistDefinitionRequestRumQueryGroupBySortQuery",
                    "description": "A list of exactly one element describing the sort query to use.\n"
                }
            },
            "type": "object"
        },
        "datadog:index/PowerpackWidgetToplistDefinitionRequestRumQueryGroupBySortQuery:PowerpackWidgetToplistDefinitionRequestRumQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "The aggregation method.\n"
                },
                "facet": {
                    "type": "string",
                    "description": "The facet name.\n"
                },
                "order": {
                    "type": "string",
                    "description": "Widget sorting methods. Valid values are `asc`, `desc`.\n"
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/PowerpackWidgetToplistDefinitionRequestRumQueryMultiCompute:PowerpackWidgetToplistDefinitionRequestRumQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "The aggregation method.\n"
                },
                "facet": {
                    "type": "string",
                    "description": "The facet name.\n"
                },
                "interval": {
                    "type": "integer",
                    "description": "Define the time interval in seconds.\n"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/PowerpackWidgetToplistDefinitionRequestSecurityQuery:PowerpackWidgetToplistDefinitionRequestSecurityQuery": {
            "properties": {
                "computeQuery": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetToplistDefinitionRequestSecurityQueryComputeQuery:PowerpackWidgetToplistDefinitionRequestSecurityQueryComputeQuery",
                    "description": "`compute_query` or `multi_compute` is required. The map keys are listed below.\n"
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/PowerpackWidgetToplistDefinitionRequestSecurityQueryGroupBy:PowerpackWidgetToplistDefinitionRequestSecurityQueryGroupBy"
                    },
                    "description": "Multiple `group_by` blocks are allowed using the structure below.\n"
                },
                "index": {
                    "type": "string",
                    "description": "The name of the index to query.\n"
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/PowerpackWidgetToplistDefinitionRequestSecurityQueryMultiCompute:PowerpackWidgetToplistDefinitionRequestSecurityQueryMultiCompute"
                    },
                    "description": "`compute_query` or `multi_compute` is required. Multiple `multi_compute` blocks are allowed using the structure below.\n"
                },
                "searchQuery": {
                    "type": "string",
                    "description": "The search query to use.\n"
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/PowerpackWidgetToplistDefinitionRequestSecurityQueryComputeQuery:PowerpackWidgetToplistDefinitionRequestSecurityQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "The aggregation method.\n"
                },
                "facet": {
                    "type": "string",
                    "description": "The facet name.\n"
                },
                "interval": {
                    "type": "integer",
                    "description": "Define the time interval in seconds.\n"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/PowerpackWidgetToplistDefinitionRequestSecurityQueryGroupBy:PowerpackWidgetToplistDefinitionRequestSecurityQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "description": "The facet name.\n"
                },
                "limit": {
                    "type": "integer",
                    "description": "The maximum number of items in the group.\n"
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetToplistDefinitionRequestSecurityQueryGroupBySortQuery:PowerpackWidgetToplistDefinitionRequestSecurityQueryGroupBySortQuery",
                    "description": "A list of exactly one element describing the sort query to use.\n"
                }
            },
            "type": "object"
        },
        "datadog:index/PowerpackWidgetToplistDefinitionRequestSecurityQueryGroupBySortQuery:PowerpackWidgetToplistDefinitionRequestSecurityQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "The aggregation method.\n"
                },
                "facet": {
                    "type": "string",
                    "description": "The facet name.\n"
                },
                "order": {
                    "type": "string",
                    "description": "Widget sorting methods. Valid values are `asc`, `desc`.\n"
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/PowerpackWidgetToplistDefinitionRequestSecurityQueryMultiCompute:PowerpackWidgetToplistDefinitionRequestSecurityQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "The aggregation method.\n"
                },
                "facet": {
                    "type": "string",
                    "description": "The facet name.\n"
                },
                "interval": {
                    "type": "integer",
                    "description": "Define the time interval in seconds.\n"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/PowerpackWidgetToplistDefinitionRequestStyle:PowerpackWidgetToplistDefinitionRequestStyle": {
            "properties": {
                "palette": {
                    "type": "string",
                    "description": "A color palette to apply to the widget. The available options are available at: https://docs.datadoghq.com/dashboards/widgets/timeseries/#appearance.\n"
                }
            },
            "type": "object"
        },
        "datadog:index/PowerpackWidgetTopologyMapDefinition:PowerpackWidgetTopologyMapDefinition": {
            "properties": {
                "customLinks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/PowerpackWidgetTopologyMapDefinitionCustomLink:PowerpackWidgetTopologyMapDefinitionCustomLink"
                    },
                    "description": "A nested block describing a custom link. Multiple `custom_link` blocks are allowed using the structure below.\n"
                },
                "requests": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/PowerpackWidgetTopologyMapDefinitionRequest:PowerpackWidgetTopologyMapDefinitionRequest"
                    },
                    "description": "A nested block describing the request to use when displaying the widget. Multiple request blocks are allowed using the structure below (`query` and `request_type` are required within the request).\n"
                },
                "title": {
                    "type": "string",
                    "description": "The title of the widget.\n"
                },
                "titleAlign": {
                    "type": "string",
                    "description": "The alignment of the widget's title. Valid values are `center`, `left`, `right`.\n"
                },
                "titleSize": {
                    "type": "string",
                    "description": "The size of the widget's title (defaults to 16).\n"
                }
            },
            "type": "object"
        },
        "datadog:index/PowerpackWidgetTopologyMapDefinitionCustomLink:PowerpackWidgetTopologyMapDefinitionCustomLink": {
            "properties": {
                "isHidden": {
                    "type": "boolean",
                    "description": "The flag for toggling context menu link visibility.\n"
                },
                "label": {
                    "type": "string",
                    "description": "The label for the custom link URL.\n"
                },
                "link": {
                    "type": "string",
                    "description": "The URL of the custom link.\n"
                },
                "overrideLabel": {
                    "type": "string",
                    "description": "The label ID that refers to a context menu link item. When `override_label` is provided, the client request omits the label field.\n"
                }
            },
            "type": "object"
        },
        "datadog:index/PowerpackWidgetTopologyMapDefinitionRequest:PowerpackWidgetTopologyMapDefinitionRequest": {
            "properties": {
                "queries": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/PowerpackWidgetTopologyMapDefinitionRequestQuery:PowerpackWidgetTopologyMapDefinitionRequestQuery"
                    },
                    "description": "The query for a Topology request.\n"
                },
                "requestType": {
                    "type": "string",
                    "description": "The request type for the Topology request ('topology'). Valid values are `topology`.\n"
                }
            },
            "type": "object",
            "required": [
                "queries",
                "requestType"
            ]
        },
        "datadog:index/PowerpackWidgetTopologyMapDefinitionRequestQuery:PowerpackWidgetTopologyMapDefinitionRequestQuery": {
            "properties": {
                "dataSource": {
                    "type": "string",
                    "description": "The data source for the Topology request ('service*map' or 'data*streams'). Valid values are `data_streams`, `service_map`.\n"
                },
                "filters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Your environment and primary tag (or `*` if enabled for your account).\n"
                },
                "service": {
                    "type": "string",
                    "description": "The ID of the service to map.\n"
                }
            },
            "type": "object",
            "required": [
                "dataSource",
                "filters",
                "service"
            ]
        },
        "datadog:index/PowerpackWidgetTraceServiceDefinition:PowerpackWidgetTraceServiceDefinition": {
            "properties": {
                "displayFormat": {
                    "type": "string",
                    "description": "The number of columns to display. Valid values are `one_column`, `two_column`, `three_column`.\n"
                },
                "env": {
                    "type": "string",
                    "description": "APM environment.\n"
                },
                "liveSpan": {
                    "type": "string",
                    "description": "The timeframe to use when displaying the widget. Valid values are `1m`, `5m`, `10m`, `15m`, `30m`, `1h`, `4h`, `1d`, `2d`, `1w`, `1mo`, `3mo`, `6mo`, `week_to_date`, `month_to_date`, `1y`, `alert`.\n"
                },
                "service": {
                    "type": "string",
                    "description": "APM service.\n"
                },
                "showBreakdown": {
                    "type": "boolean",
                    "description": "Whether to show the latency breakdown or not.\n"
                },
                "showDistribution": {
                    "type": "boolean",
                    "description": "Whether to show the latency distribution or not.\n"
                },
                "showErrors": {
                    "type": "boolean",
                    "description": "Whether to show the error metrics or not.\n"
                },
                "showHits": {
                    "type": "boolean",
                    "description": "Whether to show the hits metrics or not\n"
                },
                "showLatency": {
                    "type": "boolean",
                    "description": "Whether to show the latency metrics or not.\n"
                },
                "showResourceList": {
                    "type": "boolean",
                    "description": "Whether to show the resource list or not.\n"
                },
                "sizeFormat": {
                    "type": "string",
                    "description": "The size of the widget. Valid values are `small`, `medium`, `large`.\n"
                },
                "spanName": {
                    "type": "string",
                    "description": "APM span name\n"
                },
                "title": {
                    "type": "string",
                    "description": "The title of the widget.\n"
                },
                "titleAlign": {
                    "type": "string",
                    "description": "The alignment of the widget's title. Valid values are `center`, `left`, `right`.\n"
                },
                "titleSize": {
                    "type": "string",
                    "description": "The size of the widget's title (defaults to 16).\n"
                }
            },
            "type": "object",
            "required": [
                "env",
                "service",
                "spanName"
            ]
        },
        "datadog:index/PowerpackWidgetTreemapDefinition:PowerpackWidgetTreemapDefinition": {
            "properties": {
                "requests": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/PowerpackWidgetTreemapDefinitionRequest:PowerpackWidgetTreemapDefinitionRequest"
                    },
                    "description": "Nested block describing the request to use when displaying the widget.\n"
                },
                "title": {
                    "type": "string",
                    "description": "The title of the widget.\n"
                }
            },
            "type": "object"
        },
        "datadog:index/PowerpackWidgetTreemapDefinitionRequest:PowerpackWidgetTreemapDefinitionRequest": {
            "properties": {
                "formulas": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/PowerpackWidgetTreemapDefinitionRequestFormula:PowerpackWidgetTreemapDefinitionRequestFormula"
                    }
                },
                "queries": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/PowerpackWidgetTreemapDefinitionRequestQuery:PowerpackWidgetTreemapDefinitionRequestQuery"
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/PowerpackWidgetTreemapDefinitionRequestFormula:PowerpackWidgetTreemapDefinitionRequestFormula": {
            "properties": {
                "alias": {
                    "type": "string",
                    "description": "An expression alias.\n"
                },
                "cellDisplayMode": {
                    "type": "string",
                    "description": "A list of display modes for each table cell. Valid values are `number`, `bar`.\n"
                },
                "conditionalFormats": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/PowerpackWidgetTreemapDefinitionRequestFormulaConditionalFormat:PowerpackWidgetTreemapDefinitionRequestFormulaConditionalFormat"
                    },
                    "description": "Conditional formats allow you to set the color of your widget content or background depending on the rule applied to your data. Multiple `conditional_formats` blocks are allowed using the structure below.\n"
                },
                "formulaExpression": {
                    "type": "string",
                    "description": "A string expression built from queries, formulas, and functions.\n"
                },
                "limit": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetTreemapDefinitionRequestFormulaLimit:PowerpackWidgetTreemapDefinitionRequestFormulaLimit",
                    "description": "The options for limiting results returned.\n"
                },
                "style": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetTreemapDefinitionRequestFormulaStyle:PowerpackWidgetTreemapDefinitionRequestFormulaStyle",
                    "description": "Styling options for widget formulas.\n"
                }
            },
            "type": "object",
            "required": [
                "formulaExpression"
            ]
        },
        "datadog:index/PowerpackWidgetTreemapDefinitionRequestFormulaConditionalFormat:PowerpackWidgetTreemapDefinitionRequestFormulaConditionalFormat": {
            "properties": {
                "comparator": {
                    "type": "string",
                    "description": "The comparator to use. Valid values are `=`, `\u003e`, `\u003e=`, `\u003c`, `\u003c=`.\n"
                },
                "customBgColor": {
                    "type": "string",
                    "description": "The color palette to apply to the background, same values available as palette.\n"
                },
                "customFgColor": {
                    "type": "string",
                    "description": "The color palette to apply to the foreground, same values available as palette.\n"
                },
                "hideValue": {
                    "type": "boolean",
                    "description": "Setting this to True hides values.\n"
                },
                "imageUrl": {
                    "type": "string",
                    "description": "Displays an image as the background.\n"
                },
                "metric": {
                    "type": "string",
                    "description": "The metric from the request to correlate with this conditional format.\n"
                },
                "palette": {
                    "type": "string",
                    "description": "The color palette to apply. Valid values are `blue`, `custom_bg`, `custom_image`, `custom_text`, `gray_on_white`, `grey`, `green`, `orange`, `red`, `red_on_white`, `white_on_gray`, `white_on_green`, `green_on_white`, `white_on_red`, `white_on_yellow`, `yellow_on_white`, `black_on_light_yellow`, `black_on_light_green`, `black_on_light_red`.\n"
                },
                "timeframe": {
                    "type": "string",
                    "description": "Defines the displayed timeframe.\n"
                },
                "value": {
                    "type": "number",
                    "description": "A value for the comparator.\n"
                }
            },
            "type": "object",
            "required": [
                "comparator",
                "palette",
                "value"
            ]
        },
        "datadog:index/PowerpackWidgetTreemapDefinitionRequestFormulaLimit:PowerpackWidgetTreemapDefinitionRequestFormulaLimit": {
            "properties": {
                "count": {
                    "type": "integer",
                    "description": "The number of results to return.\n"
                },
                "order": {
                    "type": "string",
                    "description": "The direction of the sort. Valid values are `asc`, `desc`. Defaults to `\"desc\"`.\n"
                }
            },
            "type": "object"
        },
        "datadog:index/PowerpackWidgetTreemapDefinitionRequestFormulaStyle:PowerpackWidgetTreemapDefinitionRequestFormulaStyle": {
            "properties": {
                "palette": {
                    "type": "string",
                    "description": "The color palette used to display the formula. A guide to the available color palettes can be found at https://docs.datadoghq.com/dashboards/guide/widget_colors.\n"
                },
                "paletteIndex": {
                    "type": "integer",
                    "description": "Index specifying which color to use within the palette.\n"
                }
            },
            "type": "object"
        },
        "datadog:index/PowerpackWidgetTreemapDefinitionRequestQuery:PowerpackWidgetTreemapDefinitionRequestQuery": {
            "properties": {
                "apmDependencyStatsQuery": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetTreemapDefinitionRequestQueryApmDependencyStatsQuery:PowerpackWidgetTreemapDefinitionRequestQueryApmDependencyStatsQuery",
                    "description": "The APM Dependency Stats query using formulas and functions.\n"
                },
                "apmResourceStatsQuery": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetTreemapDefinitionRequestQueryApmResourceStatsQuery:PowerpackWidgetTreemapDefinitionRequestQueryApmResourceStatsQuery",
                    "description": "The APM Resource Stats query using formulas and functions.\n"
                },
                "cloudCostQuery": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetTreemapDefinitionRequestQueryCloudCostQuery:PowerpackWidgetTreemapDefinitionRequestQueryCloudCostQuery",
                    "description": "The Cloud Cost query using formulas and functions.\n"
                },
                "eventQuery": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetTreemapDefinitionRequestQueryEventQuery:PowerpackWidgetTreemapDefinitionRequestQueryEventQuery",
                    "description": "A timeseries formula and functions events query.\n"
                },
                "metricQuery": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetTreemapDefinitionRequestQueryMetricQuery:PowerpackWidgetTreemapDefinitionRequestQueryMetricQuery",
                    "description": "A timeseries formula and functions metrics query.\n"
                },
                "processQuery": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetTreemapDefinitionRequestQueryProcessQuery:PowerpackWidgetTreemapDefinitionRequestQueryProcessQuery",
                    "description": "The process query using formulas and functions.\n"
                },
                "sloQuery": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetTreemapDefinitionRequestQuerySloQuery:PowerpackWidgetTreemapDefinitionRequestQuerySloQuery",
                    "description": "The SLO query using formulas and functions.\n"
                }
            },
            "type": "object"
        },
        "datadog:index/PowerpackWidgetTreemapDefinitionRequestQueryApmDependencyStatsQuery:PowerpackWidgetTreemapDefinitionRequestQueryApmDependencyStatsQuery": {
            "properties": {
                "crossOrgUuids": {
                    "type": "string",
                    "description": "The source organization UUID for cross organization queries. Feature in Private Beta.\n"
                },
                "dataSource": {
                    "type": "string",
                    "description": "The data source for APM Dependency Stats queries. Valid values are `apm_dependency_stats`.\n"
                },
                "env": {
                    "type": "string",
                    "description": "APM environment.\n"
                },
                "isUpstream": {
                    "type": "boolean",
                    "description": "Determines whether stats for upstream or downstream dependencies should be queried.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of query for use in formulas.\n"
                },
                "operationName": {
                    "type": "string",
                    "description": "Name of operation on service.\n"
                },
                "primaryTagName": {
                    "type": "string",
                    "description": "The name of the second primary tag used within APM; required when `primary_tag_value` is specified. See https://docs.datadoghq.com/tracing/guide/setting*primary*tags*to*scope/#add-a-second-primary-tag-in-datadog.\n"
                },
                "primaryTagValue": {
                    "type": "string",
                    "description": "Filter APM data by the second primary tag. `primary_tag_name` must also be specified.\n"
                },
                "resourceName": {
                    "type": "string",
                    "description": "APM resource.\n"
                },
                "service": {
                    "type": "string",
                    "description": "APM service.\n"
                },
                "stat": {
                    "type": "string",
                    "description": "APM statistic. Valid values are `avg_duration`, `avg_root_duration`, `avg_spans_per_trace`, `error_rate`, `pct_exec_time`, `pct_of_traces`, `total_traces_count`.\n"
                }
            },
            "type": "object",
            "required": [
                "dataSource",
                "env",
                "name",
                "operationName",
                "resourceName",
                "service",
                "stat"
            ]
        },
        "datadog:index/PowerpackWidgetTreemapDefinitionRequestQueryApmResourceStatsQuery:PowerpackWidgetTreemapDefinitionRequestQueryApmResourceStatsQuery": {
            "properties": {
                "crossOrgUuids": {
                    "type": "string",
                    "description": "The source organization UUID for cross organization queries. Feature in Private Beta.\n"
                },
                "dataSource": {
                    "type": "string",
                    "description": "The data source for APM Resource Stats queries. Valid values are `apm_resource_stats`.\n"
                },
                "env": {
                    "type": "string",
                    "description": "APM environment.\n"
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Array of fields to group results by.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of query for use in formulas.\n"
                },
                "operationName": {
                    "type": "string",
                    "description": "Name of operation on service.\n"
                },
                "primaryTagName": {
                    "type": "string",
                    "description": "The name of the second primary tag used within APM; required when `primary_tag_value` is specified. See https://docs.datadoghq.com/tracing/guide/setting*primary*tags*to*scope/#add-a-second-primary-tag-in-datadog.\n"
                },
                "primaryTagValue": {
                    "type": "string",
                    "description": "Filter APM data by the second primary tag. `primary_tag_name` must also be specified.\n"
                },
                "resourceName": {
                    "type": "string",
                    "description": "APM resource.\n"
                },
                "service": {
                    "type": "string",
                    "description": "APM service.\n"
                },
                "stat": {
                    "type": "string",
                    "description": "APM statistic. Valid values are `errors`, `error_rate`, `hits`, `latency_avg`, `latency_distribution`, `latency_max`, `latency_p50`, `latency_p75`, `latency_p90`, `latency_p95`, `latency_p99`.\n"
                }
            },
            "type": "object",
            "required": [
                "dataSource",
                "env",
                "name",
                "service",
                "stat"
            ]
        },
        "datadog:index/PowerpackWidgetTreemapDefinitionRequestQueryCloudCostQuery:PowerpackWidgetTreemapDefinitionRequestQueryCloudCostQuery": {
            "properties": {
                "aggregator": {
                    "type": "string",
                    "description": "The aggregation methods available for cloud cost queries. Valid values are `avg`, `last`, `max`, `min`, `sum`, `percentile`.\n"
                },
                "crossOrgUuids": {
                    "type": "string",
                    "description": "The source organization UUID for cross organization queries. Feature in Private Beta.\n"
                },
                "dataSource": {
                    "type": "string",
                    "description": "The data source for cloud cost queries. Valid values are `cloud_cost`.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the query for use in formulas.\n"
                },
                "query": {
                    "type": "string",
                    "description": "The cloud cost query definition.\n"
                }
            },
            "type": "object",
            "required": [
                "dataSource",
                "name",
                "query"
            ]
        },
        "datadog:index/PowerpackWidgetTreemapDefinitionRequestQueryEventQuery:PowerpackWidgetTreemapDefinitionRequestQueryEventQuery": {
            "properties": {
                "computes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/PowerpackWidgetTreemapDefinitionRequestQueryEventQueryCompute:PowerpackWidgetTreemapDefinitionRequestQueryEventQueryCompute"
                    },
                    "description": "The compute options.\n"
                },
                "crossOrgUuids": {
                    "type": "string",
                    "description": "The source organization UUID for cross organization queries. Feature in Private Beta.\n"
                },
                "dataSource": {
                    "type": "string",
                    "description": "The data source for event platform-based queries. Valid values are `logs`, `spans`, `network`, `rum`, `security_signals`, `profiles`, `audit`, `events`, `ci_tests`, `ci_pipelines`, `incident_analytics`.\n"
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/PowerpackWidgetTreemapDefinitionRequestQueryEventQueryGroupBy:PowerpackWidgetTreemapDefinitionRequestQueryEventQueryGroupBy"
                    },
                    "description": "Group by options.\n"
                },
                "indexes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "An array of index names to query in the stream.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of query for use in formulas.\n"
                },
                "search": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetTreemapDefinitionRequestQueryEventQuerySearch:PowerpackWidgetTreemapDefinitionRequestQueryEventQuerySearch",
                    "description": "The search options.\n"
                },
                "storage": {
                    "type": "string",
                    "description": "Storage location (private beta).\n"
                }
            },
            "type": "object",
            "required": [
                "computes",
                "dataSource",
                "name"
            ]
        },
        "datadog:index/PowerpackWidgetTreemapDefinitionRequestQueryEventQueryCompute:PowerpackWidgetTreemapDefinitionRequestQueryEventQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "The aggregation methods for event platform queries. Valid values are `count`, `cardinality`, `median`, `pc75`, `pc90`, `pc95`, `pc98`, `pc99`, `sum`, `min`, `max`, `avg`.\n"
                },
                "interval": {
                    "type": "integer",
                    "description": "A time interval in milliseconds.\n"
                },
                "metric": {
                    "type": "string",
                    "description": "The measurable attribute to compute.\n"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/PowerpackWidgetTreemapDefinitionRequestQueryEventQueryGroupBy:PowerpackWidgetTreemapDefinitionRequestQueryEventQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "description": "The event facet.\n"
                },
                "limit": {
                    "type": "integer",
                    "description": "The number of groups to return.\n"
                },
                "sort": {
                    "$ref": "#/types/datadog:index/PowerpackWidgetTreemapDefinitionRequestQueryEventQueryGroupBySort:PowerpackWidgetTreemapDefinitionRequestQueryEventQueryGroupBySort",
                    "description": "The options for sorting group by results.\n"
                }
            },
            "type": "object",
            "required": [
                "facet"
            ]
        },
        "datadog:index/PowerpackWidgetTreemapDefinitionRequestQueryEventQueryGroupBySort:PowerpackWidgetTreemapDefinitionRequestQueryEventQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "The aggregation methods for the event platform queries. Valid values are `count`, `cardinality`, `median`, `pc75`, `pc90`, `pc95`, `pc98`, `pc99`, `sum`, `min`, `max`, `avg`.\n"
                },
                "metric": {
                    "type": "string",
                    "description": "The metric used for sorting group by results.\n"
                },
                "order": {
                    "type": "string",
                    "description": "Direction of sort. Valid values are `asc`, `desc`.\n"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/PowerpackWidgetTreemapDefinitionRequestQueryEventQuerySearch:PowerpackWidgetTreemapDefinitionRequestQueryEventQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "description": "The events search string.\n"
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/PowerpackWidgetTreemapDefinitionRequestQueryMetricQuery:PowerpackWidgetTreemapDefinitionRequestQueryMetricQuery": {
            "properties": {
                "aggregator": {
                    "type": "string",
                    "description": "The aggregation methods available for metrics queries. Valid values are `avg`, `min`, `max`, `sum`, `last`, `area`, `l2norm`, `percentile`.\n"
                },
                "crossOrgUuids": {
                    "type": "string",
                    "description": "The source organization UUID for cross organization queries. Feature in Private Beta.\n"
                },
                "dataSource": {
                    "type": "string",
                    "description": "The data source for metrics queries. Defaults to `\"metrics\"`.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the query for use in formulas.\n"
                },
                "query": {
                    "type": "string",
                    "description": "The metrics query definition.\n"
                }
            },
            "type": "object",
            "required": [
                "name",
                "query"
            ]
        },
        "datadog:index/PowerpackWidgetTreemapDefinitionRequestQueryProcessQuery:PowerpackWidgetTreemapDefinitionRequestQueryProcessQuery": {
            "properties": {
                "aggregator": {
                    "type": "string",
                    "description": "The aggregation methods available for metrics queries. Valid values are `avg`, `min`, `max`, `sum`, `last`, `area`, `l2norm`, `percentile`.\n"
                },
                "crossOrgUuids": {
                    "type": "string",
                    "description": "The source organization UUID for cross organization queries. Feature in Private Beta.\n"
                },
                "dataSource": {
                    "type": "string",
                    "description": "The data source for process queries. Valid values are `process`, `container`.\n"
                },
                "isNormalizedCpu": {
                    "type": "boolean",
                    "description": "Whether to normalize the CPU percentages.\n"
                },
                "limit": {
                    "type": "integer",
                    "description": "The number of hits to return.\n"
                },
                "metric": {
                    "type": "string",
                    "description": "The process metric name.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of query for use in formulas.\n"
                },
                "sort": {
                    "type": "string",
                    "description": "The direction of the sort. Valid values are `asc`, `desc`. Defaults to `\"desc\"`.\n"
                },
                "tagFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "An array of tags to filter by.\n"
                },
                "textFilter": {
                    "type": "string",
                    "description": "The text to use as a filter.\n"
                }
            },
            "type": "object",
            "required": [
                "dataSource",
                "metric",
                "name"
            ]
        },
        "datadog:index/PowerpackWidgetTreemapDefinitionRequestQuerySloQuery:PowerpackWidgetTreemapDefinitionRequestQuerySloQuery": {
            "properties": {
                "additionalQueryFilters": {
                    "type": "string",
                    "description": "Additional filters applied to the SLO query.\n"
                },
                "crossOrgUuids": {
                    "type": "string",
                    "description": "The source organization UUID for cross organization queries. Feature in Private Beta.\n"
                },
                "dataSource": {
                    "type": "string",
                    "description": "The data source for SLO queries. Valid values are `slo`.\n"
                },
                "groupMode": {
                    "type": "string",
                    "description": "Group mode to query measures. Valid values are `overall`, `components`. Defaults to `\"overall\"`.\n"
                },
                "measure": {
                    "type": "string",
                    "description": "SLO measures queries. Valid values are `good_events`, `bad_events`, `slo_status`, `error_budget_remaining`, `burn_rate`, `error_budget_burndown`.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of query for use in formulas.\n"
                },
                "sloId": {
                    "type": "string",
                    "description": "ID of an SLO to query.\n"
                },
                "sloQueryType": {
                    "type": "string",
                    "description": "type of the SLO to query. Valid values are `metric`, `time_slice`. Defaults to `\"metric\"`.\n"
                }
            },
            "type": "object",
            "required": [
                "dataSource",
                "measure",
                "sloId"
            ]
        },
        "datadog:index/PowerpackWidgetWidgetLayout:PowerpackWidgetWidgetLayout": {
            "properties": {
                "height": {
                    "type": "integer",
                    "description": "The height of the widget.\n"
                },
                "isColumnBreak": {
                    "type": "boolean",
                    "description": "Whether the widget should be the first one on the second column in high density or not. Only one widget in the dashboard should have this property set to `true`.\n"
                },
                "width": {
                    "type": "integer",
                    "description": "The width of the widget.\n"
                },
                "x": {
                    "type": "integer",
                    "description": "The position of the widget on the x (horizontal) axis. Must be greater than or equal to 0.\n"
                },
                "y": {
                    "type": "integer",
                    "description": "The position of the widget on the y (vertical) axis. Must be greater than or equal to 0.\n"
                }
            },
            "type": "object",
            "required": [
                "height",
                "width",
                "x",
                "y"
            ]
        },
        "datadog:index/ProviderDefaultTags:ProviderDefaultTags": {
            "properties": {
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "[Experimental - Monitors only] Resource tags to be applied by default across all resources.\n"
                }
            },
            "type": "object"
        },
        "datadog:index/RestrictionPolicyBinding:RestrictionPolicyBinding": {
            "properties": {
                "principals": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "An array of principals. A principal is a subject or group of subjects. Each principal is formatted as `type:id`. Supported types: `role` and `org`. The org ID can be obtained through the api/v2/users API.\n"
                },
                "relation": {
                    "type": "string",
                    "description": "The role/level of access. See this page for more details https://docs.datadoghq.com/api/latest/restriction-policies/#supported-relations-for-resources\n"
                }
            },
            "type": "object",
            "required": [
                "principals",
                "relation"
            ]
        },
        "datadog:index/RolePermission:RolePermission": {
            "properties": {
                "id": {
                    "type": "string",
                    "description": "ID of the permission to assign.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the permission.\n"
                }
            },
            "type": "object",
            "required": [
                "id"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "id",
                        "name"
                    ]
                }
            }
        },
        "datadog:index/SecurityMonitoringDefaultRuleCase:SecurityMonitoringDefaultRuleCase": {
            "properties": {
                "notifications": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Notification targets for each rule case.\n"
                },
                "status": {
                    "type": "string",
                    "description": "Status of the rule case to match. Valid values are `info`, `low`, `medium`, `high`, `critical`.\n"
                }
            },
            "type": "object",
            "required": [
                "notifications",
                "status"
            ]
        },
        "datadog:index/SecurityMonitoringDefaultRuleFilter:SecurityMonitoringDefaultRuleFilter": {
            "properties": {
                "action": {
                    "type": "string",
                    "description": "The type of filtering action. Allowed enum values: require, suppress Valid values are `require`, `suppress`.\n"
                },
                "query": {
                    "type": "string",
                    "description": "Query for selecting logs to apply the filtering action.\n"
                }
            },
            "type": "object",
            "required": [
                "action",
                "query"
            ]
        },
        "datadog:index/SecurityMonitoringDefaultRuleOptions:SecurityMonitoringDefaultRuleOptions": {
            "properties": {
                "decreaseCriticalityBasedOnEnv": {
                    "type": "boolean",
                    "description": "If true, signals in non-production environments have a lower severity than what is defined by the rule case, which can reduce noise. The decrement is applied when the environment tag of the signal starts with `staging`, `test`, or `dev`. Only available when the rule type is `log_detection`. Defaults to `false`.\n"
                }
            },
            "type": "object"
        },
        "datadog:index/SecurityMonitoringFilterExclusionFilter:SecurityMonitoringFilterExclusionFilter": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Exclusion filter name.\n"
                },
                "query": {
                    "type": "string",
                    "description": "Exclusion filter query. Logs that match this query are excluded from the security filter.\n"
                }
            },
            "type": "object",
            "required": [
                "name",
                "query"
            ]
        },
        "datadog:index/SecurityMonitoringRuleCase:SecurityMonitoringRuleCase": {
            "properties": {
                "condition": {
                    "type": "string",
                    "description": "A rule case contains logical operations (`\u003e`,`\u003e=`, `\u0026\u0026`, `||`) to determine if a signal should be generated based on the event counts in the previously defined queries.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the case.\n"
                },
                "notifications": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Notification targets for each rule case.\n"
                },
                "status": {
                    "type": "string",
                    "description": "Severity of the Security Signal. Valid values are `info`, `low`, `medium`, `high`, `critical`.\n"
                }
            },
            "type": "object",
            "required": [
                "status"
            ]
        },
        "datadog:index/SecurityMonitoringRuleFilter:SecurityMonitoringRuleFilter": {
            "properties": {
                "action": {
                    "type": "string",
                    "description": "The type of filtering action. Valid values are `require`, `suppress`.\n"
                },
                "query": {
                    "type": "string",
                    "description": "Query for selecting logs to apply the filtering action.\n"
                }
            },
            "type": "object",
            "required": [
                "action",
                "query"
            ]
        },
        "datadog:index/SecurityMonitoringRuleOptions:SecurityMonitoringRuleOptions": {
            "properties": {
                "decreaseCriticalityBasedOnEnv": {
                    "type": "boolean",
                    "description": "If true, signals in non-production environments have a lower severity than what is defined by the rule case, which can reduce noise. The decrement is applied when the environment tag of the signal starts with `staging`, `test`, or `dev`. Only available when the rule type is `log_detection`. Defaults to `false`.\n"
                },
                "detectionMethod": {
                    "type": "string",
                    "description": "The detection method. Valid values are `threshold`, `new_value`, `anomaly_detection`, `impossible_travel`, `hardcoded`, `third_party`, `anomaly_threshold`. Defaults to `\"threshold\"`.\n"
                },
                "evaluationWindow": {
                    "type": "integer",
                    "description": "A time window is specified to match when at least one of the cases matches true. This is a sliding window and evaluates in real time. Valid values are `0`, `60`, `300`, `600`, `900`, `1800`, `3600`, `7200`.\n"
                },
                "impossibleTravelOptions": {
                    "$ref": "#/types/datadog:index/SecurityMonitoringRuleOptionsImpossibleTravelOptions:SecurityMonitoringRuleOptionsImpossibleTravelOptions",
                    "description": "Options for rules using the impossible travel detection method.\n"
                },
                "keepAlive": {
                    "type": "integer",
                    "description": "Once a signal is generated, the signal will remain “open” if a case is matched at least once within this keep alive window (in seconds). Valid values are `0`, `60`, `300`, `600`, `900`, `1800`, `3600`, `7200`, `10800`, `21600`.\n"
                },
                "maxSignalDuration": {
                    "type": "integer",
                    "description": "A signal will “close” regardless of the query being matched once the time exceeds the maximum duration (in seconds). This time is calculated from the first seen timestamp. Valid values are `0`, `60`, `300`, `600`, `900`, `1800`, `3600`, `7200`, `10800`, `21600`, `43200`, `86400`.\n"
                },
                "newValueOptions": {
                    "$ref": "#/types/datadog:index/SecurityMonitoringRuleOptionsNewValueOptions:SecurityMonitoringRuleOptionsNewValueOptions",
                    "description": "New value rules specific options.\n"
                },
                "thirdPartyRuleOptions": {
                    "$ref": "#/types/datadog:index/SecurityMonitoringRuleOptionsThirdPartyRuleOptions:SecurityMonitoringRuleOptionsThirdPartyRuleOptions",
                    "description": "Options for rules using the third-party detection method.\n"
                }
            },
            "type": "object"
        },
        "datadog:index/SecurityMonitoringRuleOptionsImpossibleTravelOptions:SecurityMonitoringRuleOptionsImpossibleTravelOptions": {
            "properties": {
                "baselineUserLocations": {
                    "type": "boolean",
                    "description": "If true, signals are suppressed for the first 24 hours. During that time, Datadog learns the user's regular access locations. This can be helpful to reduce noise and infer VPN usage or credentialed API access. Defaults to `false`.\n"
                }
            },
            "type": "object"
        },
        "datadog:index/SecurityMonitoringRuleOptionsNewValueOptions:SecurityMonitoringRuleOptionsNewValueOptions": {
            "properties": {
                "forgetAfter": {
                    "type": "integer",
                    "description": "The duration in days after which a learned value is forgotten. Valid values are `1`, `2`, `7`, `14`, `21`, `28`.\n"
                },
                "learningDuration": {
                    "type": "integer",
                    "description": "The duration in days during which values are learned, and after which signals will be generated for values that weren't learned. If set to 0, a signal will be generated for all new values after the first value is learned. Valid values are `0`, `1`, `7`. Defaults to `1`.\n"
                },
                "learningMethod": {
                    "type": "string",
                    "description": "The learning method used to determine when signals should be generated for values that weren't learned. Valid values are `duration`, `threshold`. Defaults to `\"duration\"`.\n"
                },
                "learningThreshold": {
                    "type": "integer",
                    "description": "A number of occurrences after which signals are generated for values that weren't learned. Valid values are `0`, `1`. Defaults to `0`.\n"
                }
            },
            "type": "object",
            "required": [
                "forgetAfter"
            ]
        },
        "datadog:index/SecurityMonitoringRuleOptionsThirdPartyRuleOptions:SecurityMonitoringRuleOptionsThirdPartyRuleOptions": {
            "properties": {
                "defaultNotifications": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Notification targets for the default rule case, when none of the third-party cases match.\n"
                },
                "defaultStatus": {
                    "type": "string",
                    "description": "Severity of the default rule case, when none of the third-party cases match. Valid values are `info`, `low`, `medium`, `high`, `critical`.\n"
                },
                "rootQueries": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/SecurityMonitoringRuleOptionsThirdPartyRuleOptionsRootQuery:SecurityMonitoringRuleOptionsThirdPartyRuleOptionsRootQuery"
                    },
                    "description": "Queries to be combined with third-party case queries. Each of them can have different group by fields, to aggregate differently based on the type of alert.\n"
                },
                "signalTitleTemplate": {
                    "type": "string",
                    "description": "A template for the signal title; if omitted, the title is generated based on the case name.\n"
                }
            },
            "type": "object",
            "required": [
                "defaultStatus",
                "rootQueries"
            ]
        },
        "datadog:index/SecurityMonitoringRuleOptionsThirdPartyRuleOptionsRootQuery:SecurityMonitoringRuleOptionsThirdPartyRuleOptionsRootQuery": {
            "properties": {
                "groupByFields": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Fields to group by. If empty, each log triggers a signal.\n"
                },
                "query": {
                    "type": "string",
                    "description": "Query to filter logs.\n"
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/SecurityMonitoringRuleQuery:SecurityMonitoringRuleQuery": {
            "properties": {
                "agentRules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/SecurityMonitoringRuleQueryAgentRule:SecurityMonitoringRuleQueryAgentRule"
                    },
                    "description": "**Deprecated**. It won't be applied anymore. **Deprecated.** `agent_rule` has been deprecated in favor of new Agent Rule resource.\n",
                    "deprecationMessage": "`agent_rule` has been deprecated in favor of new Agent Rule resource."
                },
                "aggregation": {
                    "type": "string",
                    "description": "The aggregation type. For Signal Correlation rules, it must be event_count. Valid values are `count`, `cardinality`, `sum`, `max`, `new_value`, `geo_data`, `event_count`, `none`. Defaults to `\"count\"`.\n"
                },
                "distinctFields": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Field for which the cardinality is measured. Sent as an array.\n"
                },
                "groupByFields": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Fields to group by.\n"
                },
                "metric": {
                    "type": "string",
                    "description": "The target field to aggregate over when using the `sum`, `max`, or `geo_data` aggregations. **Deprecated.** Configure `metrics` instead. This attribute will be removed in the next major version of the provider.\n",
                    "deprecationMessage": "Configure `metrics` instead. This attribute will be removed in the next major version of the provider."
                },
                "metrics": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Group of target fields to aggregate over when using the `sum`, `max`, `geo_data`, or `new_value` aggregations. The `sum`, `max`, and `geo_data` aggregations only accept one value in this list, whereas the `new_value` aggregation accepts up to five values.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the query. Not compatible with `new_value` aggregations.\n"
                },
                "query": {
                    "type": "string",
                    "description": "Query to run on logs.\n"
                }
            },
            "type": "object",
            "required": [
                "query"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "metrics",
                        "query"
                    ]
                }
            }
        },
        "datadog:index/SecurityMonitoringRuleQueryAgentRule:SecurityMonitoringRuleQueryAgentRule": {
            "properties": {
                "agentRuleId": {
                    "type": "string",
                    "description": "**Deprecated**. It won't be applied anymore.\n"
                },
                "expression": {
                    "type": "string",
                    "description": "**Deprecated**. It won't be applied anymore.\n"
                }
            },
            "type": "object",
            "required": [
                "agentRuleId",
                "expression"
            ]
        },
        "datadog:index/SecurityMonitoringRuleSignalQuery:SecurityMonitoringRuleSignalQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "The aggregation type. For Signal Correlation rules, it must be event_count. Valid values are `count`, `cardinality`, `sum`, `max`, `new_value`, `geo_data`, `event_count`, `none`. Defaults to `\"event_count\"`.\n"
                },
                "correlatedByFields": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Fields to correlate by.\n"
                },
                "correlatedQueryIndex": {
                    "type": "string",
                    "description": "Index of the rule query used to retrieve the correlated field. An empty string applies correlation on the non-projected per query attributes of the rule. Defaults to `\"\"`.\n"
                },
                "defaultRuleId": {
                    "type": "string",
                    "description": "Default Rule ID of the signal to correlate. This value is READ-ONLY.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the query. Not compatible with `new_value` aggregations.\n"
                },
                "ruleId": {
                    "type": "string",
                    "description": "Rule ID of the signal to correlate.\n"
                }
            },
            "type": "object",
            "required": [
                "ruleId"
            ]
        },
        "datadog:index/SecurityMonitoringRuleThirdPartyCase:SecurityMonitoringRuleThirdPartyCase": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Name of the case.\n"
                },
                "notifications": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Notification targets for each rule case.\n"
                },
                "query": {
                    "type": "string",
                    "description": "A query to associate a third-party event to this case.\n"
                },
                "status": {
                    "type": "string",
                    "description": "Severity of the Security Signal. Valid values are `info`, `low`, `medium`, `high`, `critical`.\n"
                }
            },
            "type": "object",
            "required": [
                "status"
            ]
        },
        "datadog:index/SensitiveDataScannerGroupFilter:SensitiveDataScannerGroupFilter": {
            "properties": {
                "query": {
                    "type": "string",
                    "description": "Query to filter the events.\n"
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/SensitiveDataScannerRuleIncludedKeywordConfiguration:SensitiveDataScannerRuleIncludedKeywordConfiguration": {
            "properties": {
                "characterCount": {
                    "type": "integer",
                    "description": "Number of characters before the match to find a keyword validating the match. It must be between 1 and 50 (inclusive).\n"
                },
                "keywords": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Keyword list that is checked during scanning in order to validate a match. The number of keywords in the list must be lower than or equal to 30.\n"
                }
            },
            "type": "object",
            "required": [
                "characterCount",
                "keywords"
            ]
        },
        "datadog:index/SensitiveDataScannerRuleTextReplacement:SensitiveDataScannerRuleTextReplacement": {
            "properties": {
                "numberOfChars": {
                    "type": "integer",
                    "description": "Required if type == 'partial*replacement*from*beginning' or 'partial*replacement*from*end'. It must be \u003e 0.\n"
                },
                "replacementString": {
                    "type": "string",
                    "description": "Required if type == 'replacement_string'.\n"
                },
                "type": {
                    "type": "string",
                    "description": "Type of the replacement text. None means no replacement. hash means the data will be stubbed. replacement*string means that one can chose a text to replace the data. partial*replacement*from*beginning allows a user to partially replace the data from the beginning, and partial*replacement*from_end on the other hand, allows to replace data from the end. Valid values are `none`, `hash`, `replacement_string`, `partial_replacement_from_beginning`, `partial_replacement_from_end`.\n"
                }
            },
            "type": "object",
            "required": [
                "type"
            ]
        },
        "datadog:index/ServiceLevelObjectiveQuery:ServiceLevelObjectiveQuery": {
            "properties": {
                "denominator": {
                    "type": "string",
                    "description": "The sum of the `total` events.\n"
                },
                "numerator": {
                    "type": "string",
                    "description": "The sum of all the `good` events.\n"
                }
            },
            "type": "object",
            "required": [
                "denominator",
                "numerator"
            ]
        },
        "datadog:index/ServiceLevelObjectiveSliSpecification:ServiceLevelObjectiveSliSpecification": {
            "properties": {
                "timeSlice": {
                    "$ref": "#/types/datadog:index/ServiceLevelObjectiveSliSpecificationTimeSlice:ServiceLevelObjectiveSliSpecificationTimeSlice",
                    "description": "The time slice condition, composed of 3 parts: 1. The timeseries query, 2. The comparator, and 3. The threshold. Optionally, a fourth part, the query interval, can be provided.\n"
                }
            },
            "type": "object",
            "required": [
                "timeSlice"
            ]
        },
        "datadog:index/ServiceLevelObjectiveSliSpecificationTimeSlice:ServiceLevelObjectiveSliSpecificationTimeSlice": {
            "properties": {
                "comparator": {
                    "type": "string",
                    "description": "The comparator used to compare the SLI value to the threshold. Valid values are `\u003e`, `\u003e=`, `\u003c`, `\u003c=`.\n"
                },
                "query": {
                    "$ref": "#/types/datadog:index/ServiceLevelObjectiveSliSpecificationTimeSliceQuery:ServiceLevelObjectiveSliSpecificationTimeSliceQuery",
                    "description": "A timeseries query, containing named data-source-specific queries and a formula involving the named queries.\n"
                },
                "queryIntervalSeconds": {
                    "type": "integer",
                    "description": "The interval used when querying data, which defines the size of a time slice. Valid values are `60`, `300`. Defaults to `300`.\n"
                },
                "threshold": {
                    "type": "number",
                    "description": "The threshold value to which each SLI value will be compared.\n"
                }
            },
            "type": "object",
            "required": [
                "comparator",
                "query",
                "threshold"
            ]
        },
        "datadog:index/ServiceLevelObjectiveSliSpecificationTimeSliceQuery:ServiceLevelObjectiveSliSpecificationTimeSliceQuery": {
            "properties": {
                "formula": {
                    "$ref": "#/types/datadog:index/ServiceLevelObjectiveSliSpecificationTimeSliceQueryFormula:ServiceLevelObjectiveSliSpecificationTimeSliceQueryFormula",
                    "description": "A list that contains exactly one formula, as only a single formula may be used to define a timeseries query for a time-slice SLO.\n"
                },
                "queries": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/ServiceLevelObjectiveSliSpecificationTimeSliceQueryQuery:ServiceLevelObjectiveSliSpecificationTimeSliceQueryQuery"
                    },
                    "description": "A list of data-source-specific queries that are in the formula.\n"
                }
            },
            "type": "object",
            "required": [
                "formula",
                "queries"
            ]
        },
        "datadog:index/ServiceLevelObjectiveSliSpecificationTimeSliceQueryFormula:ServiceLevelObjectiveSliSpecificationTimeSliceQueryFormula": {
            "properties": {
                "formulaExpression": {
                    "type": "string",
                    "description": "The formula string, which is an expression involving named queries.\n"
                }
            },
            "type": "object",
            "required": [
                "formulaExpression"
            ]
        },
        "datadog:index/ServiceLevelObjectiveSliSpecificationTimeSliceQueryQuery:ServiceLevelObjectiveSliSpecificationTimeSliceQueryQuery": {
            "properties": {
                "metricQuery": {
                    "$ref": "#/types/datadog:index/ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryMetricQuery:ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryMetricQuery",
                    "description": "A timeseries formula and functions metrics query.\n"
                }
            },
            "type": "object"
        },
        "datadog:index/ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryMetricQuery:ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryMetricQuery": {
            "properties": {
                "dataSource": {
                    "type": "string",
                    "description": "The data source for metrics queries. Defaults to `\"metrics\"`.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the query for use in formulas.\n"
                },
                "query": {
                    "type": "string",
                    "description": "The metrics query definition.\n"
                }
            },
            "type": "object",
            "required": [
                "name",
                "query"
            ]
        },
        "datadog:index/ServiceLevelObjectiveThreshold:ServiceLevelObjectiveThreshold": {
            "properties": {
                "target": {
                    "type": "number",
                    "description": "The objective's target in `(0,100)`.\n"
                },
                "targetDisplay": {
                    "type": "string",
                    "description": "A string representation of the target that indicates its precision. It uses trailing zeros to show significant decimal places (e.g. `98.00`).\n"
                },
                "timeframe": {
                    "type": "string",
                    "description": "The time frame for the objective. The mapping from these types to the types found in the Datadog Web UI can be found in the Datadog API documentation page. Valid values are `7d`, `30d`, `90d`, `custom`.\n"
                },
                "warning": {
                    "type": "number",
                    "description": "The objective's warning value in `(0,100)`. This must be greater than the target value.\n"
                },
                "warningDisplay": {
                    "type": "string",
                    "description": "A string representation of the warning target (see the description of the target_display field for details).\n"
                }
            },
            "type": "object",
            "required": [
                "target",
                "timeframe"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "target",
                        "targetDisplay",
                        "timeframe",
                        "warningDisplay"
                    ]
                }
            }
        },
        "datadog:index/SpansMetricCompute:SpansMetricCompute": {
            "properties": {
                "aggregationType": {
                    "type": "string",
                    "description": "The type of aggregation to use. This field can't be updated after creation.\n"
                },
                "includePercentiles": {
                    "type": "boolean",
                    "description": "Toggle to include or exclude percentile aggregations for distribution metrics. Only present when the `aggregation_type` is `distribution`.\n"
                },
                "path": {
                    "type": "string",
                    "description": "The path to the value the span-based metric will aggregate on (only used if the aggregation type is a \"distribution\"). This field can't be updated after creation.\n"
                }
            },
            "type": "object",
            "required": [
                "aggregationType"
            ]
        },
        "datadog:index/SpansMetricFilter:SpansMetricFilter": {
            "properties": {
                "query": {
                    "type": "string",
                    "description": "The search query - following the span search syntax. Defaults to `\"*\"`.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "query"
                    ]
                }
            }
        },
        "datadog:index/SpansMetricGroupBy:SpansMetricGroupBy": {
            "properties": {
                "path": {
                    "type": "string",
                    "description": "The path to the value the span-based metric will be aggregated over.\n"
                },
                "tagName": {
                    "type": "string",
                    "description": "Eventual name of the tag that gets created. By default, the path attribute is used as the tag name.\n"
                }
            },
            "type": "object",
            "required": [
                "path"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "path",
                        "tagName"
                    ]
                }
            }
        },
        "datadog:index/SyntheticsGlobalVariableOptions:SyntheticsGlobalVariableOptions": {
            "properties": {
                "totpParameters": {
                    "$ref": "#/types/datadog:index/SyntheticsGlobalVariableOptionsTotpParameters:SyntheticsGlobalVariableOptionsTotpParameters",
                    "description": "Parameters needed for MFA/TOTP.\n"
                }
            },
            "type": "object"
        },
        "datadog:index/SyntheticsGlobalVariableOptionsTotpParameters:SyntheticsGlobalVariableOptionsTotpParameters": {
            "properties": {
                "digits": {
                    "type": "integer",
                    "description": "Number of digits for the OTP.\n"
                },
                "refreshInterval": {
                    "type": "integer",
                    "description": "Interval for which to refresh the token (in seconds).\n"
                }
            },
            "type": "object",
            "required": [
                "digits",
                "refreshInterval"
            ]
        },
        "datadog:index/SyntheticsGlobalVariableParseTestOptions:SyntheticsGlobalVariableParseTestOptions": {
            "properties": {
                "field": {
                    "type": "string",
                    "description": "Required when type = `http_header`. Defines the header to use to extract the value\n"
                },
                "localVariableName": {
                    "type": "string",
                    "description": "When type is `local_variable`, name of the local variable to use to extract the value.\n"
                },
                "parser": {
                    "$ref": "#/types/datadog:index/SyntheticsGlobalVariableParseTestOptionsParser:SyntheticsGlobalVariableParseTestOptionsParser"
                },
                "type": {
                    "type": "string",
                    "description": "Defines the source to use to extract the value. Valid values are `http_body`, `http_header`, `http_status_code`, `local_variable`.\n"
                }
            },
            "type": "object",
            "required": [
                "type"
            ]
        },
        "datadog:index/SyntheticsGlobalVariableParseTestOptionsParser:SyntheticsGlobalVariableParseTestOptionsParser": {
            "properties": {
                "type": {
                    "type": "string",
                    "description": "Type of parser to extract the value. Valid values are `raw`, `json_path`, `regex`, `x_path`.\n"
                },
                "value": {
                    "type": "string",
                    "description": "Value for the parser to use, required for type `json_path` or `regex`.\n"
                }
            },
            "type": "object",
            "required": [
                "type"
            ]
        },
        "datadog:index/SyntheticsPrivateLocationMetadata:SyntheticsPrivateLocationMetadata": {
            "properties": {
                "restrictedRoles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of role identifiers pulled from the Roles API to restrict read and write access.\n"
                }
            },
            "type": "object"
        },
        "datadog:index/SyntheticsTestApiStep:SyntheticsTestApiStep": {
            "properties": {
                "allowFailure": {
                    "type": "boolean",
                    "description": "Determines whether or not to continue with test if this step fails.\n"
                },
                "assertions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/SyntheticsTestApiStepAssertion:SyntheticsTestApiStepAssertion"
                    },
                    "description": "Assertions used for the test. Multiple `assertion` blocks are allowed with the structure below.\n"
                },
                "extractedValues": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/SyntheticsTestApiStepExtractedValue:SyntheticsTestApiStepExtractedValue"
                    },
                    "description": "Values to parse and save as variables from the response.\n"
                },
                "isCritical": {
                    "type": "boolean",
                    "description": "Determines whether or not to consider the entire test as failed if this step fails. Can be used only if `allow_failure` is `true`.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the step.\n"
                },
                "requestBasicauth": {
                    "$ref": "#/types/datadog:index/SyntheticsTestApiStepRequestBasicauth:SyntheticsTestApiStepRequestBasicauth",
                    "description": "The HTTP basic authentication credentials. Exactly one nested block is allowed with the structure below.\n"
                },
                "requestClientCertificate": {
                    "$ref": "#/types/datadog:index/SyntheticsTestApiStepRequestClientCertificate:SyntheticsTestApiStepRequestClientCertificate",
                    "description": "Client certificate to use when performing the test request. Exactly one nested block is allowed with the structure below.\n"
                },
                "requestDefinition": {
                    "$ref": "#/types/datadog:index/SyntheticsTestApiStepRequestDefinition:SyntheticsTestApiStepRequestDefinition",
                    "description": "The request for the api step.\n"
                },
                "requestFiles": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/SyntheticsTestApiStepRequestFile:SyntheticsTestApiStepRequestFile"
                    },
                    "description": "Files to be used as part of the request in the test.\n"
                },
                "requestHeaders": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Header name and value map.\n"
                },
                "requestMetadata": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Metadata to include when performing the gRPC request.\n"
                },
                "requestProxy": {
                    "$ref": "#/types/datadog:index/SyntheticsTestApiStepRequestProxy:SyntheticsTestApiStepRequestProxy",
                    "description": "The proxy to perform the test.\n"
                },
                "requestQuery": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Query arguments name and value map.\n"
                },
                "retry": {
                    "$ref": "#/types/datadog:index/SyntheticsTestApiStepRetry:SyntheticsTestApiStepRetry"
                },
                "subtype": {
                    "type": "string",
                    "description": "The subtype of the Synthetic multi-step API test step. Valid values are `http`, `grpc`, `wait`. Defaults to `\"http\"`.\n"
                },
                "value": {
                    "type": "integer",
                    "description": "The time to wait in seconds. Minimum value: 0. Maximum value: 180.\n"
                }
            },
            "type": "object",
            "required": [
                "name"
            ]
        },
        "datadog:index/SyntheticsTestApiStepAssertion:SyntheticsTestApiStepAssertion": {
            "properties": {
                "operator": {
                    "type": "string",
                    "description": "Assertion operator. **Note** Only some combinations of `type` and `operator` are valid (please refer to [Datadog documentation](https://docs.datadoghq.com/api/latest/synthetics/#create-a-test)).\n"
                },
                "property": {
                    "type": "string",
                    "description": "If assertion type is `header`, this is the header name.\n"
                },
                "target": {
                    "type": "string",
                    "description": "Expected value. Depends on the assertion type, refer to [Datadog documentation](https://docs.datadoghq.com/api/latest/synthetics/#create-a-test) for details.\n"
                },
                "targetjsonpath": {
                    "$ref": "#/types/datadog:index/SyntheticsTestApiStepAssertionTargetjsonpath:SyntheticsTestApiStepAssertionTargetjsonpath",
                    "description": "Expected structure if `operator` is `validatesJSONPath`. Exactly one nested block is allowed with the structure below.\n"
                },
                "targetjsonschema": {
                    "$ref": "#/types/datadog:index/SyntheticsTestApiStepAssertionTargetjsonschema:SyntheticsTestApiStepAssertionTargetjsonschema",
                    "description": "Expected structure if `operator` is `validatesJSONSchema`. Exactly one nested block is allowed with the structure below.\n"
                },
                "targetxpath": {
                    "$ref": "#/types/datadog:index/SyntheticsTestApiStepAssertionTargetxpath:SyntheticsTestApiStepAssertionTargetxpath",
                    "description": "Expected structure if `operator` is `validatesXPath`. Exactly one nested block is allowed with the structure below.\n"
                },
                "timingsScope": {
                    "type": "string",
                    "description": "Timings scope for response time assertions. Valid values are `all`, `withoutDNS`.\n"
                },
                "type": {
                    "type": "string",
                    "description": "Type of assertion. **Note** Only some combinations of `type` and `operator` are valid (please refer to [Datadog documentation](https://docs.datadoghq.com/api/latest/synthetics/#create-a-test)). Valid values are `body`, `header`, `statusCode`, `certificate`, `responseTime`, `property`, `recordEvery`, `recordSome`, `tlsVersion`, `minTlsVersion`, `latency`, `packetLossPercentage`, `packetsReceived`, `networkHop`, `receivedMessage`, `grpcHealthcheckStatus`, `grpcMetadata`, `grpcProto`, `connection`, `bodyHash`.\n"
                }
            },
            "type": "object",
            "required": [
                "operator",
                "type"
            ]
        },
        "datadog:index/SyntheticsTestApiStepAssertionTargetjsonpath:SyntheticsTestApiStepAssertionTargetjsonpath": {
            "properties": {
                "elementsoperator": {
                    "type": "string",
                    "description": "The element from the list of results to assert on. Select from `firstElementMatches` (the first element in the list), `everyElementMatches` (every element in the list), `atLeastOneElementMatches` (at least one element in the list), or `serializationMatches` (the serialized value of the list). Defaults to `firstElementMatches`. Defaults to `\"firstElementMatches\"`.\n"
                },
                "jsonpath": {
                    "type": "string",
                    "description": "The JSON path to assert.\n"
                },
                "operator": {
                    "type": "string",
                    "description": "The specific operator to use on the path.\n"
                },
                "targetvalue": {
                    "type": "string",
                    "description": "Expected matching value.\n"
                }
            },
            "type": "object",
            "required": [
                "jsonpath",
                "operator"
            ]
        },
        "datadog:index/SyntheticsTestApiStepAssertionTargetjsonschema:SyntheticsTestApiStepAssertionTargetjsonschema": {
            "properties": {
                "jsonschema": {
                    "type": "string",
                    "description": "The JSON Schema to validate the body against.\n"
                },
                "metaschema": {
                    "type": "string",
                    "description": "The meta schema to use for the JSON Schema. Defaults to `\"draft-07\"`.\n"
                }
            },
            "type": "object",
            "required": [
                "jsonschema"
            ]
        },
        "datadog:index/SyntheticsTestApiStepAssertionTargetxpath:SyntheticsTestApiStepAssertionTargetxpath": {
            "properties": {
                "operator": {
                    "type": "string",
                    "description": "The specific operator to use on the path.\n"
                },
                "targetvalue": {
                    "type": "string",
                    "description": "Expected matching value.\n"
                },
                "xpath": {
                    "type": "string",
                    "description": "The xpath to assert.\n"
                }
            },
            "type": "object",
            "required": [
                "operator",
                "xpath"
            ]
        },
        "datadog:index/SyntheticsTestApiStepExtractedValue:SyntheticsTestApiStepExtractedValue": {
            "properties": {
                "field": {
                    "type": "string",
                    "description": "When type is `http_header` or `grpc_metadata`, name of the header or metadatum to extract.\n"
                },
                "name": {
                    "type": "string"
                },
                "parser": {
                    "$ref": "#/types/datadog:index/SyntheticsTestApiStepExtractedValueParser:SyntheticsTestApiStepExtractedValueParser"
                },
                "secure": {
                    "type": "boolean",
                    "description": "Determines whether or not the extracted value will be obfuscated.\n"
                },
                "type": {
                    "type": "string",
                    "description": "Property of the Synthetics Test Response to use for the variable. Valid values are `grpc_message`, `grpc_metadata`, `http_body`, `http_header`, `http_status_code`.\n"
                }
            },
            "type": "object",
            "required": [
                "name",
                "parser",
                "type"
            ]
        },
        "datadog:index/SyntheticsTestApiStepExtractedValueParser:SyntheticsTestApiStepExtractedValueParser": {
            "properties": {
                "type": {
                    "type": "string",
                    "description": "Type of parser for a Synthetics global variable from a synthetics test. Valid values are `raw`, `json_path`, `regex`, `x_path`.\n"
                },
                "value": {
                    "type": "string",
                    "description": "Regex or JSON path used for the parser. Not used with type `raw`.\n"
                }
            },
            "type": "object",
            "required": [
                "type"
            ]
        },
        "datadog:index/SyntheticsTestApiStepRequestBasicauth:SyntheticsTestApiStepRequestBasicauth": {
            "properties": {
                "accessKey": {
                    "type": "string",
                    "description": "Access key for `SIGV4` authentication.\n",
                    "secret": true
                },
                "accessTokenUrl": {
                    "type": "string",
                    "description": "Access token url for `oauth-client` or `oauth-rop` authentication.\n"
                },
                "audience": {
                    "type": "string",
                    "description": "Audience for `oauth-client` or `oauth-rop` authentication. Defaults to `\"\"`.\n"
                },
                "clientId": {
                    "type": "string",
                    "description": "Client ID for `oauth-client` or `oauth-rop` authentication.\n"
                },
                "clientSecret": {
                    "type": "string",
                    "description": "Client secret for `oauth-client` or `oauth-rop` authentication.\n",
                    "secret": true
                },
                "domain": {
                    "type": "string",
                    "description": "Domain for `ntlm` authentication.\n"
                },
                "password": {
                    "type": "string",
                    "description": "Password for authentication.\n",
                    "secret": true
                },
                "region": {
                    "type": "string",
                    "description": "Region for `SIGV4` authentication.\n"
                },
                "resource": {
                    "type": "string",
                    "description": "Resource for `oauth-client` or `oauth-rop` authentication. Defaults to `\"\"`.\n"
                },
                "scope": {
                    "type": "string",
                    "description": "Scope for `oauth-client` or `oauth-rop` authentication. Defaults to `\"\"`.\n"
                },
                "secretKey": {
                    "type": "string",
                    "description": "Secret key for `SIGV4` authentication.\n",
                    "secret": true
                },
                "serviceName": {
                    "type": "string",
                    "description": "Service name for `SIGV4` authentication.\n"
                },
                "sessionToken": {
                    "type": "string",
                    "description": "Session token for `SIGV4` authentication.\n"
                },
                "tokenApiAuthentication": {
                    "type": "string",
                    "description": "Token API Authentication for `oauth-client` or `oauth-rop` authentication. Valid values are `header`, `body`.\n"
                },
                "type": {
                    "type": "string",
                    "description": "Type of basic authentication to use when performing the test. Defaults to `\"web\"`.\n"
                },
                "username": {
                    "type": "string",
                    "description": "Username for authentication.\n"
                },
                "workstation": {
                    "type": "string",
                    "description": "Workstation for `ntlm` authentication.\n"
                }
            },
            "type": "object"
        },
        "datadog:index/SyntheticsTestApiStepRequestClientCertificate:SyntheticsTestApiStepRequestClientCertificate": {
            "properties": {
                "cert": {
                    "$ref": "#/types/datadog:index/SyntheticsTestApiStepRequestClientCertificateCert:SyntheticsTestApiStepRequestClientCertificateCert"
                },
                "key": {
                    "$ref": "#/types/datadog:index/SyntheticsTestApiStepRequestClientCertificateKey:SyntheticsTestApiStepRequestClientCertificateKey"
                }
            },
            "type": "object",
            "required": [
                "cert",
                "key"
            ]
        },
        "datadog:index/SyntheticsTestApiStepRequestClientCertificateCert:SyntheticsTestApiStepRequestClientCertificateCert": {
            "properties": {
                "content": {
                    "type": "string",
                    "description": "Content of the certificate.\n",
                    "secret": true
                },
                "filename": {
                    "type": "string",
                    "description": "File name for the certificate.\n"
                }
            },
            "type": "object",
            "required": [
                "content"
            ]
        },
        "datadog:index/SyntheticsTestApiStepRequestClientCertificateKey:SyntheticsTestApiStepRequestClientCertificateKey": {
            "properties": {
                "content": {
                    "type": "string",
                    "description": "Content of the certificate.\n",
                    "secret": true
                },
                "filename": {
                    "type": "string",
                    "description": "File name for the certificate.\n"
                }
            },
            "type": "object",
            "required": [
                "content"
            ]
        },
        "datadog:index/SyntheticsTestApiStepRequestDefinition:SyntheticsTestApiStepRequestDefinition": {
            "properties": {
                "allowInsecure": {
                    "type": "boolean",
                    "description": "Allows loading insecure content for a request in an API test or in a multistep API test step.\n"
                },
                "body": {
                    "type": "string",
                    "description": "The request body.\n"
                },
                "bodyType": {
                    "type": "string",
                    "description": "Type of the request body. Valid values are `text/plain`, `application/json`, `text/xml`, `text/html`, `application/x-www-form-urlencoded`, `graphql`, `application/octet-stream`, `multipart/form-data`.\n"
                },
                "callType": {
                    "type": "string",
                    "description": "The type of gRPC call to perform. Valid values are `healthcheck`, `unary`.\n"
                },
                "certificateDomains": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "By default, the client certificate is applied on the domain of the starting URL for browser tests. If you want your client certificate to be applied on other domains instead, add them in `certificate_domains`.\n"
                },
                "dnsServer": {
                    "type": "string",
                    "description": "DNS server to use for DNS tests (`subtype = \"dns\"`).\n"
                },
                "dnsServerPort": {
                    "type": "string",
                    "description": "DNS server port to use for DNS tests.\n"
                },
                "followRedirects": {
                    "type": "boolean",
                    "description": "Determines whether or not the API HTTP test should follow redirects.\n"
                },
                "host": {
                    "type": "string",
                    "description": "Host name to perform the test with.\n"
                },
                "httpVersion": {
                    "type": "string",
                    "description": "HTTP version to use for an HTTP request in an API test or step. Valid values are `http1`, `http2`, `any`. Defaults to `\"any\"`.\n"
                },
                "message": {
                    "type": "string",
                    "description": "For UDP and websocket tests, message to send with the request.\n"
                },
                "method": {
                    "type": "string",
                    "description": "Either the HTTP method/verb to use or a gRPC method available on the service set in the `service` field. Required if `subtype` is `HTTP` or if `subtype` is `grpc` and `callType` is `unary`.\n"
                },
                "noSavingResponseBody": {
                    "type": "boolean",
                    "description": "Determines whether or not to save the response body.\n"
                },
                "numberOfPackets": {
                    "type": "integer",
                    "description": "Number of pings to use per test for ICMP tests (`subtype = \"icmp\"`) between 0 and 10.\n"
                },
                "persistCookies": {
                    "type": "boolean",
                    "description": "Persist cookies across redirects.\n"
                },
                "plainProtoFile": {
                    "type": "string",
                    "description": "The content of a proto file as a string.\n"
                },
                "port": {
                    "type": "string",
                    "description": "Port to use when performing the test.\n"
                },
                "protoJsonDescriptor": {
                    "type": "string",
                    "description": "A protobuf JSON descriptor. **Deprecated.** Use `plain_proto_file` instead.\n",
                    "deprecationMessage": "Use `plain_proto_file` instead."
                },
                "servername": {
                    "type": "string",
                    "description": "For SSL tests, it specifies on which server you want to initiate the TLS handshake, allowing the server to present one of multiple possible certificates on the same IP address and TCP port number.\n"
                },
                "service": {
                    "type": "string",
                    "description": "The gRPC service on which you want to perform the gRPC call.\n"
                },
                "shouldTrackHops": {
                    "type": "boolean",
                    "description": "This will turn on a traceroute probe to discover all gateways along the path to the host destination. For ICMP tests (`subtype = \"icmp\"`).\n"
                },
                "timeout": {
                    "type": "integer",
                    "description": "Timeout in seconds for the test.\n"
                },
                "url": {
                    "type": "string",
                    "description": "The URL to send the request to.\n"
                }
            },
            "type": "object"
        },
        "datadog:index/SyntheticsTestApiStepRequestFile:SyntheticsTestApiStepRequestFile": {
            "properties": {
                "bucketKey": {
                    "type": "string",
                    "description": "Bucket key of the file.\n"
                },
                "content": {
                    "type": "string",
                    "description": "Content of the file.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the file.\n"
                },
                "originalFileName": {
                    "type": "string",
                    "description": "Original name of the file.\n"
                },
                "size": {
                    "type": "integer",
                    "description": "Size of the file.\n"
                },
                "type": {
                    "type": "string",
                    "description": "Type of the file.\n"
                }
            },
            "type": "object",
            "required": [
                "name",
                "size",
                "type"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "bucketKey",
                        "name",
                        "size",
                        "type"
                    ]
                }
            }
        },
        "datadog:index/SyntheticsTestApiStepRequestProxy:SyntheticsTestApiStepRequestProxy": {
            "properties": {
                "headers": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Header name and value map.\n"
                },
                "url": {
                    "type": "string",
                    "description": "URL of the proxy to perform the test.\n"
                }
            },
            "type": "object",
            "required": [
                "url"
            ]
        },
        "datadog:index/SyntheticsTestApiStepRetry:SyntheticsTestApiStepRetry": {
            "properties": {
                "count": {
                    "type": "integer",
                    "description": "Number of retries needed to consider a location as failed before sending a notification alert. Defaults to `0`.\n"
                },
                "interval": {
                    "type": "integer",
                    "description": "Interval between a failed test and the next retry in milliseconds. Defaults to `300`.\n"
                }
            },
            "type": "object"
        },
        "datadog:index/SyntheticsTestAssertion:SyntheticsTestAssertion": {
            "properties": {
                "operator": {
                    "type": "string",
                    "description": "Assertion operator. **Note** Only some combinations of `type` and `operator` are valid (please refer to [Datadog documentation](https://docs.datadoghq.com/api/latest/synthetics/#create-a-test)).\n"
                },
                "property": {
                    "type": "string",
                    "description": "If assertion type is `header`, this is the header name.\n"
                },
                "target": {
                    "type": "string",
                    "description": "Expected value. Depends on the assertion type, refer to [Datadog documentation](https://docs.datadoghq.com/api/latest/synthetics/#create-a-test) for details.\n"
                },
                "targetjsonpath": {
                    "$ref": "#/types/datadog:index/SyntheticsTestAssertionTargetjsonpath:SyntheticsTestAssertionTargetjsonpath",
                    "description": "Expected structure if `operator` is `validatesJSONPath`. Exactly one nested block is allowed with the structure below.\n"
                },
                "targetjsonschema": {
                    "$ref": "#/types/datadog:index/SyntheticsTestAssertionTargetjsonschema:SyntheticsTestAssertionTargetjsonschema",
                    "description": "Expected structure if `operator` is `validatesJSONSchema`. Exactly one nested block is allowed with the structure below.\n"
                },
                "targetxpath": {
                    "$ref": "#/types/datadog:index/SyntheticsTestAssertionTargetxpath:SyntheticsTestAssertionTargetxpath",
                    "description": "Expected structure if `operator` is `validatesXPath`. Exactly one nested block is allowed with the structure below.\n"
                },
                "timingsScope": {
                    "type": "string",
                    "description": "Timings scope for response time assertions. Valid values are `all`, `withoutDNS`.\n"
                },
                "type": {
                    "type": "string",
                    "description": "Type of assertion. **Note** Only some combinations of `type` and `operator` are valid (please refer to [Datadog documentation](https://docs.datadoghq.com/api/latest/synthetics/#create-a-test)). Valid values are `body`, `header`, `statusCode`, `certificate`, `responseTime`, `property`, `recordEvery`, `recordSome`, `tlsVersion`, `minTlsVersion`, `latency`, `packetLossPercentage`, `packetsReceived`, `networkHop`, `receivedMessage`, `grpcHealthcheckStatus`, `grpcMetadata`, `grpcProto`, `connection`, `bodyHash`.\n"
                }
            },
            "type": "object",
            "required": [
                "operator",
                "type"
            ]
        },
        "datadog:index/SyntheticsTestAssertionTargetjsonpath:SyntheticsTestAssertionTargetjsonpath": {
            "properties": {
                "elementsoperator": {
                    "type": "string",
                    "description": "The element from the list of results to assert on. Select from `firstElementMatches` (the first element in the list), `everyElementMatches` (every element in the list), `atLeastOneElementMatches` (at least one element in the list), or `serializationMatches` (the serialized value of the list). Defaults to `firstElementMatches`. Defaults to `\"firstElementMatches\"`.\n"
                },
                "jsonpath": {
                    "type": "string",
                    "description": "The JSON path to assert.\n"
                },
                "operator": {
                    "type": "string",
                    "description": "The specific operator to use on the path.\n"
                },
                "targetvalue": {
                    "type": "string",
                    "description": "Expected matching value.\n"
                }
            },
            "type": "object",
            "required": [
                "jsonpath",
                "operator"
            ]
        },
        "datadog:index/SyntheticsTestAssertionTargetjsonschema:SyntheticsTestAssertionTargetjsonschema": {
            "properties": {
                "jsonschema": {
                    "type": "string",
                    "description": "The JSON Schema to validate the body against.\n"
                },
                "metaschema": {
                    "type": "string",
                    "description": "The meta schema to use for the JSON Schema. Defaults to `\"draft-07\"`.\n"
                }
            },
            "type": "object",
            "required": [
                "jsonschema"
            ]
        },
        "datadog:index/SyntheticsTestAssertionTargetxpath:SyntheticsTestAssertionTargetxpath": {
            "properties": {
                "operator": {
                    "type": "string",
                    "description": "The specific operator to use on the path.\n"
                },
                "targetvalue": {
                    "type": "string",
                    "description": "Expected matching value.\n"
                },
                "xpath": {
                    "type": "string",
                    "description": "The xpath to assert.\n"
                }
            },
            "type": "object",
            "required": [
                "operator",
                "xpath"
            ]
        },
        "datadog:index/SyntheticsTestBrowserStep:SyntheticsTestBrowserStep": {
            "properties": {
                "allowFailure": {
                    "type": "boolean",
                    "description": "Determines if the step should be allowed to fail.\n"
                },
                "forceElementUpdate": {
                    "type": "boolean",
                    "description": "Force update of the \"element\" parameter for the step\n"
                },
                "isCritical": {
                    "type": "boolean",
                    "description": "Determines whether or not to consider the entire test as failed if this step fails. Can be used only if `allow_failure` is `true`.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the step.\n"
                },
                "noScreenshot": {
                    "type": "boolean",
                    "description": "Prevents saving screenshots of the step.\n"
                },
                "params": {
                    "$ref": "#/types/datadog:index/SyntheticsTestBrowserStepParams:SyntheticsTestBrowserStepParams",
                    "description": "Parameters for the step.\n"
                },
                "timeout": {
                    "type": "integer",
                    "description": "Used to override the default timeout of a step.\n"
                },
                "type": {
                    "type": "string",
                    "description": "Type of the step. Valid values are `assertCurrentUrl`, `assertElementAttribute`, `assertElementContent`, `assertElementPresent`, `assertEmail`, `assertFileDownload`, `assertFromJavascript`, `assertPageContains`, `assertPageLacks`, `click`, `extractFromJavascript`, `extractVariable`, `goToEmailLink`, `goToUrl`, `goToUrlAndMeasureTti`, `hover`, `playSubTest`, `pressKey`, `refresh`, `runApiTest`, `scroll`, `selectOption`, `typeText`, `uploadFiles`, `wait`.\n"
                }
            },
            "type": "object",
            "required": [
                "name",
                "params",
                "type"
            ]
        },
        "datadog:index/SyntheticsTestBrowserStepParams:SyntheticsTestBrowserStepParams": {
            "properties": {
                "attribute": {
                    "type": "string",
                    "description": "Name of the attribute to use for an \"assert attribute\" step.\n"
                },
                "check": {
                    "type": "string",
                    "description": "Check type to use for an assertion step. Valid values are `equals`, `notEquals`, `contains`, `notContains`, `startsWith`, `notStartsWith`, `greater`, `lower`, `greaterEquals`, `lowerEquals`, `matchRegex`, `between`, `isEmpty`, `notIsEmpty`.\n"
                },
                "clickType": {
                    "type": "string",
                    "description": "Type of click to use for a \"click\" step.\n"
                },
                "code": {
                    "type": "string",
                    "description": "Javascript code to use for the step.\n"
                },
                "delay": {
                    "type": "integer",
                    "description": "Delay between each key stroke for a \"type test\" step.\n"
                },
                "element": {
                    "type": "string",
                    "description": "Element to use for the step, JSON encoded string.\n"
                },
                "elementUserLocator": {
                    "$ref": "#/types/datadog:index/SyntheticsTestBrowserStepParamsElementUserLocator:SyntheticsTestBrowserStepParamsElementUserLocator",
                    "description": "Custom user selector to use for the step.\n"
                },
                "email": {
                    "type": "string",
                    "description": "Details of the email for an \"assert email\" step, JSON encoded string.\n"
                },
                "file": {
                    "type": "string",
                    "description": "JSON encoded string used for an \"assert download\" step. Refer to the examples for a usage example showing the schema.\n"
                },
                "files": {
                    "type": "string",
                    "description": "Details of the files for an \"upload files\" step, JSON encoded string.\n"
                },
                "modifiers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Modifier to use for a \"press key\" step.\n"
                },
                "playingTabId": {
                    "type": "string",
                    "description": "ID of the tab to play the subtest.\n"
                },
                "request": {
                    "type": "string",
                    "description": "Request for an API step.\n"
                },
                "subtestPublicId": {
                    "type": "string",
                    "description": "ID of the Synthetics test to use as subtest.\n"
                },
                "value": {
                    "type": "string",
                    "description": "Value of the step.\n"
                },
                "variable": {
                    "$ref": "#/types/datadog:index/SyntheticsTestBrowserStepParamsVariable:SyntheticsTestBrowserStepParamsVariable",
                    "description": "Details of the variable to extract.\n"
                },
                "withClick": {
                    "type": "boolean",
                    "description": "For \"file upload\" steps.\n"
                },
                "x": {
                    "type": "integer",
                    "description": "X coordinates for a \"scroll step\".\n"
                },
                "y": {
                    "type": "integer",
                    "description": "Y coordinates for a \"scroll step\".\n"
                }
            },
            "type": "object"
        },
        "datadog:index/SyntheticsTestBrowserStepParamsElementUserLocator:SyntheticsTestBrowserStepParamsElementUserLocator": {
            "properties": {
                "failTestOnCannotLocate": {
                    "type": "boolean",
                    "description": "Defaults to `false`.\n"
                },
                "value": {
                    "$ref": "#/types/datadog:index/SyntheticsTestBrowserStepParamsElementUserLocatorValue:SyntheticsTestBrowserStepParamsElementUserLocatorValue"
                }
            },
            "type": "object",
            "required": [
                "value"
            ]
        },
        "datadog:index/SyntheticsTestBrowserStepParamsElementUserLocatorValue:SyntheticsTestBrowserStepParamsElementUserLocatorValue": {
            "properties": {
                "type": {
                    "type": "string",
                    "description": "Defaults to `\"css\"`.\n"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "value"
            ]
        },
        "datadog:index/SyntheticsTestBrowserStepParamsVariable:SyntheticsTestBrowserStepParamsVariable": {
            "properties": {
                "example": {
                    "type": "string",
                    "description": "Example of the extracted variable. Defaults to `\"\"`.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the extracted variable.\n"
                }
            },
            "type": "object"
        },
        "datadog:index/SyntheticsTestBrowserVariable:SyntheticsTestBrowserVariable": {
            "properties": {
                "example": {
                    "type": "string",
                    "description": "Example for the variable. Defaults to `\"\"`.\n"
                },
                "id": {
                    "type": "string",
                    "description": "ID of the global variable to use. This is actually only used (and required) in the case of using a variable of type `global`.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the variable.\n"
                },
                "pattern": {
                    "type": "string",
                    "description": "Pattern of the variable. Defaults to `\"\"`.\n"
                },
                "secure": {
                    "type": "boolean",
                    "description": "Determines whether or not the browser test variable is obfuscated. Can only be used with a browser variable of type `text`\n"
                },
                "type": {
                    "type": "string",
                    "description": "Type of browser test variable. Valid values are `element`, `email`, `global`, `javascript`, `text`.\n"
                }
            },
            "type": "object",
            "required": [
                "name",
                "type"
            ]
        },
        "datadog:index/SyntheticsTestConfigVariable:SyntheticsTestConfigVariable": {
            "properties": {
                "example": {
                    "type": "string"
                },
                "id": {
                    "type": "string",
                    "description": "When type = `global`, ID of the global variable to use.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the variable.\n"
                },
                "pattern": {
                    "type": "string"
                },
                "secure": {
                    "type": "boolean",
                    "description": "Whether the value of this variable will be obfuscated in test results. Defaults to `false`.\n"
                },
                "type": {
                    "type": "string",
                    "description": "Type of test configuration variable. Valid values are `global`, `text`.\n"
                }
            },
            "type": "object",
            "required": [
                "name",
                "type"
            ]
        },
        "datadog:index/SyntheticsTestOptionsList:SyntheticsTestOptionsList": {
            "properties": {
                "acceptSelfSigned": {
                    "type": "boolean",
                    "description": "For SSL test, whether or not the test should allow self signed certificates.\n"
                },
                "allowInsecure": {
                    "type": "boolean",
                    "description": "Allows loading insecure content for a request in an API test or in a multistep API test step.\n"
                },
                "checkCertificateRevocation": {
                    "type": "boolean",
                    "description": "For SSL test, whether or not the test should fail on revoked certificate in stapled OCSP.\n"
                },
                "ci": {
                    "$ref": "#/types/datadog:index/SyntheticsTestOptionsListCi:SyntheticsTestOptionsListCi",
                    "description": "CI/CD options for a Synthetic test.\n"
                },
                "disableCors": {
                    "type": "boolean",
                    "description": "Disable Cross-Origin Resource Sharing for browser tests.\n"
                },
                "disableCsp": {
                    "type": "boolean",
                    "description": "Disable Content Security Policy for browser tests.\n"
                },
                "followRedirects": {
                    "type": "boolean",
                    "description": "Determines whether or not the API HTTP test should follow redirects.\n"
                },
                "httpVersion": {
                    "type": "string",
                    "description": "HTTP version to use for an HTTP request in an API test or step. Valid values are `http1`, `http2`, `any`. Defaults to `\"any\"`.\n"
                },
                "ignoreServerCertificateError": {
                    "type": "boolean",
                    "description": "Ignore server certificate error for browser tests.\n"
                },
                "initialNavigationTimeout": {
                    "type": "integer",
                    "description": "Timeout before declaring the initial step as failed (in seconds) for browser tests.\n"
                },
                "minFailureDuration": {
                    "type": "integer",
                    "description": "Minimum amount of time in failure required to trigger an alert (in seconds). Default is `0`.\n"
                },
                "minLocationFailed": {
                    "type": "integer",
                    "description": "Minimum number of locations in failure required to trigger an alert. Defaults to `1`.\n"
                },
                "monitorName": {
                    "type": "string",
                    "description": "The monitor name is used for the alert title as well as for all monitor dashboard widgets and SLOs.\n"
                },
                "monitorOptions": {
                    "$ref": "#/types/datadog:index/SyntheticsTestOptionsListMonitorOptions:SyntheticsTestOptionsListMonitorOptions"
                },
                "monitorPriority": {
                    "type": "integer"
                },
                "noScreenshot": {
                    "type": "boolean",
                    "description": "Prevents saving screenshots of the steps.\n"
                },
                "restrictedRoles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of role identifiers pulled from the Roles API to restrict read and write access.\n"
                },
                "retry": {
                    "$ref": "#/types/datadog:index/SyntheticsTestOptionsListRetry:SyntheticsTestOptionsListRetry"
                },
                "rumSettings": {
                    "$ref": "#/types/datadog:index/SyntheticsTestOptionsListRumSettings:SyntheticsTestOptionsListRumSettings",
                    "description": "The RUM data collection settings for the Synthetic browser test.\n"
                },
                "scheduling": {
                    "$ref": "#/types/datadog:index/SyntheticsTestOptionsListScheduling:SyntheticsTestOptionsListScheduling",
                    "description": "Object containing timeframes and timezone used for advanced scheduling.\n"
                },
                "tickEvery": {
                    "type": "integer",
                    "description": "How often the test should run (in seconds).\n"
                }
            },
            "type": "object",
            "required": [
                "tickEvery"
            ]
        },
        "datadog:index/SyntheticsTestOptionsListCi:SyntheticsTestOptionsListCi": {
            "properties": {
                "executionRule": {
                    "type": "string",
                    "description": "Execution rule for a Synthetics test. Valid values are `blocking`, `non_blocking`, `skipped`.\n"
                }
            },
            "type": "object"
        },
        "datadog:index/SyntheticsTestOptionsListMonitorOptions:SyntheticsTestOptionsListMonitorOptions": {
            "properties": {
                "renotifyInterval": {
                    "type": "integer",
                    "description": "Specify a renotification frequency in minutes. Values available by default are `0`, `10`, `20`, `30`, `40`, `50`, `60`, `90`, `120`, `180`, `240`, `300`, `360`, `720`, `1440`. Defaults to `0`.\n"
                }
            },
            "type": "object"
        },
        "datadog:index/SyntheticsTestOptionsListRetry:SyntheticsTestOptionsListRetry": {
            "properties": {
                "count": {
                    "type": "integer",
                    "description": "Number of retries needed to consider a location as failed before sending a notification alert. Defaults to `0`.\n"
                },
                "interval": {
                    "type": "integer",
                    "description": "Interval between a failed test and the next retry in milliseconds. Defaults to `300`.\n"
                }
            },
            "type": "object"
        },
        "datadog:index/SyntheticsTestOptionsListRumSettings:SyntheticsTestOptionsListRumSettings": {
            "properties": {
                "applicationId": {
                    "type": "string",
                    "description": "RUM application ID used to collect RUM data for the browser test.\n"
                },
                "clientTokenId": {
                    "type": "integer",
                    "description": "RUM application API key ID used to collect RUM data for the browser test.\n",
                    "secret": true
                },
                "isEnabled": {
                    "type": "boolean",
                    "description": "Determines whether RUM data is collected during test runs.\n"
                }
            },
            "type": "object",
            "required": [
                "isEnabled"
            ]
        },
        "datadog:index/SyntheticsTestOptionsListScheduling:SyntheticsTestOptionsListScheduling": {
            "properties": {
                "timeframes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/SyntheticsTestOptionsListSchedulingTimeframe:SyntheticsTestOptionsListSchedulingTimeframe"
                    },
                    "description": "Array containing objects describing the scheduling pattern to apply to each day.\n"
                },
                "timezone": {
                    "type": "string",
                    "description": "Timezone in which the timeframe is based.\n"
                }
            },
            "type": "object",
            "required": [
                "timeframes",
                "timezone"
            ]
        },
        "datadog:index/SyntheticsTestOptionsListSchedulingTimeframe:SyntheticsTestOptionsListSchedulingTimeframe": {
            "properties": {
                "day": {
                    "type": "integer",
                    "description": "Number representing the day of the week\n"
                },
                "from": {
                    "type": "string",
                    "description": "The hour of the day on which scheduling starts.\n"
                },
                "to": {
                    "type": "string",
                    "description": "The hour of the day on which scheduling ends.\n"
                }
            },
            "type": "object",
            "required": [
                "day",
                "from",
                "to"
            ]
        },
        "datadog:index/SyntheticsTestRequestBasicauth:SyntheticsTestRequestBasicauth": {
            "properties": {
                "accessKey": {
                    "type": "string",
                    "description": "Access key for `SIGV4` authentication.\n",
                    "secret": true
                },
                "accessTokenUrl": {
                    "type": "string",
                    "description": "Access token url for `oauth-client` or `oauth-rop` authentication.\n"
                },
                "audience": {
                    "type": "string",
                    "description": "Audience for `oauth-client` or `oauth-rop` authentication. Defaults to `\"\"`.\n"
                },
                "clientId": {
                    "type": "string",
                    "description": "Client ID for `oauth-client` or `oauth-rop` authentication.\n"
                },
                "clientSecret": {
                    "type": "string",
                    "description": "Client secret for `oauth-client` or `oauth-rop` authentication.\n",
                    "secret": true
                },
                "domain": {
                    "type": "string",
                    "description": "Domain for `ntlm` authentication.\n"
                },
                "password": {
                    "type": "string",
                    "description": "Password for authentication.\n",
                    "secret": true
                },
                "region": {
                    "type": "string",
                    "description": "Region for `SIGV4` authentication.\n"
                },
                "resource": {
                    "type": "string",
                    "description": "Resource for `oauth-client` or `oauth-rop` authentication. Defaults to `\"\"`.\n"
                },
                "scope": {
                    "type": "string",
                    "description": "Scope for `oauth-client` or `oauth-rop` authentication. Defaults to `\"\"`.\n"
                },
                "secretKey": {
                    "type": "string",
                    "description": "Secret key for `SIGV4` authentication.\n",
                    "secret": true
                },
                "serviceName": {
                    "type": "string",
                    "description": "Service name for `SIGV4` authentication.\n"
                },
                "sessionToken": {
                    "type": "string",
                    "description": "Session token for `SIGV4` authentication.\n"
                },
                "tokenApiAuthentication": {
                    "type": "string",
                    "description": "Token API Authentication for `oauth-client` or `oauth-rop` authentication. Valid values are `header`, `body`.\n"
                },
                "type": {
                    "type": "string",
                    "description": "Type of basic authentication to use when performing the test. Defaults to `\"web\"`.\n"
                },
                "username": {
                    "type": "string",
                    "description": "Username for authentication.\n"
                },
                "workstation": {
                    "type": "string",
                    "description": "Workstation for `ntlm` authentication.\n"
                }
            },
            "type": "object"
        },
        "datadog:index/SyntheticsTestRequestClientCertificate:SyntheticsTestRequestClientCertificate": {
            "properties": {
                "cert": {
                    "$ref": "#/types/datadog:index/SyntheticsTestRequestClientCertificateCert:SyntheticsTestRequestClientCertificateCert"
                },
                "key": {
                    "$ref": "#/types/datadog:index/SyntheticsTestRequestClientCertificateKey:SyntheticsTestRequestClientCertificateKey"
                }
            },
            "type": "object",
            "required": [
                "cert",
                "key"
            ]
        },
        "datadog:index/SyntheticsTestRequestClientCertificateCert:SyntheticsTestRequestClientCertificateCert": {
            "properties": {
                "content": {
                    "type": "string",
                    "description": "Content of the certificate.\n",
                    "secret": true
                },
                "filename": {
                    "type": "string",
                    "description": "File name for the certificate.\n"
                }
            },
            "type": "object",
            "required": [
                "content"
            ]
        },
        "datadog:index/SyntheticsTestRequestClientCertificateKey:SyntheticsTestRequestClientCertificateKey": {
            "properties": {
                "content": {
                    "type": "string",
                    "description": "Content of the certificate.\n",
                    "secret": true
                },
                "filename": {
                    "type": "string",
                    "description": "File name for the certificate.\n"
                }
            },
            "type": "object",
            "required": [
                "content"
            ]
        },
        "datadog:index/SyntheticsTestRequestDefinition:SyntheticsTestRequestDefinition": {
            "properties": {
                "body": {
                    "type": "string",
                    "description": "The request body.\n"
                },
                "bodyType": {
                    "type": "string",
                    "description": "Type of the request body. Valid values are `text/plain`, `application/json`, `text/xml`, `text/html`, `application/x-www-form-urlencoded`, `graphql`, `application/octet-stream`, `multipart/form-data`.\n"
                },
                "callType": {
                    "type": "string",
                    "description": "The type of gRPC call to perform. Valid values are `healthcheck`, `unary`.\n"
                },
                "certificateDomains": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "By default, the client certificate is applied on the domain of the starting URL for browser tests. If you want your client certificate to be applied on other domains instead, add them in `certificate_domains`.\n"
                },
                "dnsServer": {
                    "type": "string",
                    "description": "DNS server to use for DNS tests (`subtype = \"dns\"`).\n"
                },
                "dnsServerPort": {
                    "type": "string",
                    "description": "DNS server port to use for DNS tests.\n"
                },
                "host": {
                    "type": "string",
                    "description": "Host name to perform the test with.\n"
                },
                "httpVersion": {
                    "type": "string",
                    "description": "HTTP version to use for an HTTP request in an API test or step. **Deprecated.** Use `http_version` in the `options_list` field instead.\n",
                    "deprecationMessage": "Use `http_version` in the `options_list` field instead."
                },
                "message": {
                    "type": "string",
                    "description": "For UDP and websocket tests, message to send with the request.\n"
                },
                "method": {
                    "type": "string",
                    "description": "Either the HTTP method/verb to use or a gRPC method available on the service set in the `service` field. Required if `subtype` is `HTTP` or if `subtype` is `grpc` and `callType` is `unary`.\n"
                },
                "noSavingResponseBody": {
                    "type": "boolean",
                    "description": "Determines whether or not to save the response body.\n"
                },
                "numberOfPackets": {
                    "type": "integer",
                    "description": "Number of pings to use per test for ICMP tests (`subtype = \"icmp\"`) between 0 and 10.\n"
                },
                "persistCookies": {
                    "type": "boolean",
                    "description": "Persist cookies across redirects.\n"
                },
                "plainProtoFile": {
                    "type": "string",
                    "description": "The content of a proto file as a string.\n"
                },
                "port": {
                    "type": "string",
                    "description": "Port to use when performing the test.\n"
                },
                "protoJsonDescriptor": {
                    "type": "string",
                    "description": "A protobuf JSON descriptor. **Deprecated.** Use `plain_proto_file` instead.\n",
                    "deprecationMessage": "Use `plain_proto_file` instead."
                },
                "servername": {
                    "type": "string",
                    "description": "For SSL tests, it specifies on which server you want to initiate the TLS handshake, allowing the server to present one of multiple possible certificates on the same IP address and TCP port number.\n"
                },
                "service": {
                    "type": "string",
                    "description": "The gRPC service on which you want to perform the gRPC call.\n"
                },
                "shouldTrackHops": {
                    "type": "boolean",
                    "description": "This will turn on a traceroute probe to discover all gateways along the path to the host destination. For ICMP tests (`subtype = \"icmp\"`).\n"
                },
                "timeout": {
                    "type": "integer",
                    "description": "Timeout in seconds for the test.\n"
                },
                "url": {
                    "type": "string",
                    "description": "The URL to send the request to.\n"
                }
            },
            "type": "object"
        },
        "datadog:index/SyntheticsTestRequestFile:SyntheticsTestRequestFile": {
            "properties": {
                "bucketKey": {
                    "type": "string",
                    "description": "Bucket key of the file.\n"
                },
                "content": {
                    "type": "string",
                    "description": "Content of the file.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the file.\n"
                },
                "originalFileName": {
                    "type": "string",
                    "description": "Original name of the file.\n"
                },
                "size": {
                    "type": "integer",
                    "description": "Size of the file.\n"
                },
                "type": {
                    "type": "string",
                    "description": "Type of the file.\n"
                }
            },
            "type": "object",
            "required": [
                "name",
                "size",
                "type"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "bucketKey",
                        "name",
                        "size",
                        "type"
                    ]
                }
            }
        },
        "datadog:index/SyntheticsTestRequestProxy:SyntheticsTestRequestProxy": {
            "properties": {
                "headers": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Header name and value map.\n"
                },
                "url": {
                    "type": "string",
                    "description": "URL of the proxy to perform the test.\n"
                }
            },
            "type": "object",
            "required": [
                "url"
            ]
        },
        "datadog:index/getCloudWorkloadSecurityAgentRulesAgentRule:getCloudWorkloadSecurityAgentRulesAgentRule": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "The description of the Agent rule.\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Whether the Agent rule is enabled.\n"
                },
                "expression": {
                    "type": "string",
                    "description": "The SECL expression of the Agent rule.\n"
                },
                "id": {
                    "type": "string",
                    "description": "The id of the Agent rule.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the Agent rule.\n"
                }
            },
            "type": "object",
            "required": [
                "description",
                "enabled",
                "expression",
                "id",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "datadog:index/getCsmThreatsAgentRulesAgentRule:getCsmThreatsAgentRulesAgentRule": {
            "properties": {
                "description": {
                    "type": "string"
                },
                "enabled": {
                    "type": "boolean"
                },
                "expression": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "description",
                "enabled",
                "expression",
                "id",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "datadog:index/getHostsHostList:getHostsHostList": {
            "properties": {
                "aliases": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "apps": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "awsName": {
                    "type": "string"
                },
                "hostName": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "isMuted": {
                    "type": "boolean"
                },
                "lastReportedTime": {
                    "type": "integer"
                },
                "meta": {
                    "$ref": "#/types/datadog:index/getHostsHostListMeta:getHostsHostListMeta"
                },
                "metrics": {
                    "$ref": "#/types/datadog:index/getHostsHostListMetrics:getHostsHostListMetrics"
                },
                "muteTimeout": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "sources": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "tagsBySource": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "up": {
                    "type": "boolean"
                }
            },
            "type": "object",
            "required": [
                "aliases",
                "apps",
                "awsName",
                "hostName",
                "id",
                "isMuted",
                "lastReportedTime",
                "meta",
                "metrics",
                "muteTimeout",
                "name",
                "sources",
                "tagsBySource",
                "up"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "datadog:index/getHostsHostListMeta:getHostsHostListMeta": {
            "properties": {
                "agentVersion": {
                    "type": "string"
                },
                "cpuCores": {
                    "type": "integer"
                },
                "gohai": {
                    "type": "string"
                },
                "machine": {
                    "type": "string"
                },
                "platform": {
                    "type": "string"
                },
                "processor": {
                    "type": "string"
                },
                "pythonVersion": {
                    "type": "string"
                },
                "socketFqdn": {
                    "type": "string"
                },
                "socketHostname": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "agentVersion",
                "cpuCores",
                "gohai",
                "machine",
                "platform",
                "processor",
                "pythonVersion",
                "socketFqdn",
                "socketHostname"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "datadog:index/getHostsHostListMetrics:getHostsHostListMetrics": {
            "properties": {
                "cpu": {
                    "type": "number"
                },
                "iowait": {
                    "type": "number"
                },
                "load": {
                    "type": "number"
                }
            },
            "type": "object",
            "required": [
                "cpu",
                "iowait",
                "load"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "datadog:index/getLogsIndexesLogsIndex:getLogsIndexesLogsIndex": {
            "properties": {
                "dailyLimit": {
                    "type": "integer",
                    "description": "The number of log events you can send in this index per day before you are rate-limited.\n"
                },
                "dailyLimitResets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/getLogsIndexesLogsIndexDailyLimitReset:getLogsIndexesLogsIndexDailyLimitReset"
                    },
                    "description": "Object containing options to override the default daily limit reset time.\n"
                },
                "dailyLimitWarningThresholdPercentage": {
                    "type": "number",
                    "description": "The percentage threshold of the daily quota at which a Datadog warning event is generated.\n"
                },
                "exclusionFilters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/getLogsIndexesLogsIndexExclusionFilter:getLogsIndexesLogsIndexExclusionFilter"
                    },
                    "description": "List of exclusion filters.\n"
                },
                "filters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/getLogsIndexesLogsIndexFilter:getLogsIndexesLogsIndexFilter"
                    },
                    "description": "Logs filter\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the index.\n"
                },
                "retentionDays": {
                    "type": "integer",
                    "description": "The number of days before logs are deleted from this index.\n"
                }
            },
            "type": "object",
            "required": [
                "dailyLimit",
                "dailyLimitResets",
                "dailyLimitWarningThresholdPercentage",
                "exclusionFilters",
                "filters",
                "name",
                "retentionDays"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "datadog:index/getLogsIndexesLogsIndexDailyLimitReset:getLogsIndexesLogsIndexDailyLimitReset": {
            "properties": {
                "resetTime": {
                    "type": "string",
                    "description": "String in `HH:00` format representing the time of day the daily limit should be reset. The hours between 00 and 23 (inclusive).\n"
                },
                "resetUtcOffset": {
                    "type": "string",
                    "description": "String in `(-|+)HH:00` format representing the UTC offset to apply to the given reset time. The hours between -12 and +14 (inclusive).\n"
                }
            },
            "type": "object",
            "required": [
                "resetTime",
                "resetUtcOffset"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "datadog:index/getLogsIndexesLogsIndexExclusionFilter:getLogsIndexesLogsIndexExclusionFilter": {
            "properties": {
                "filters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/getLogsIndexesLogsIndexExclusionFilterFilter:getLogsIndexesLogsIndexExclusionFilterFilter"
                    }
                },
                "isEnabled": {
                    "type": "boolean",
                    "description": "A boolean stating if the exclusion is active or not.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the exclusion filter.\n"
                }
            },
            "type": "object",
            "required": [
                "isEnabled",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "datadog:index/getLogsIndexesLogsIndexExclusionFilterFilter:getLogsIndexesLogsIndexExclusionFilterFilter": {
            "properties": {
                "query": {
                    "type": "string",
                    "description": "Only logs matching the filter criteria and the query of the parent index will be considered for this exclusion filter.\n"
                },
                "sampleRate": {
                    "type": "number",
                    "description": "The fraction of logs excluded by the exclusion filter, when active.\n"
                }
            },
            "type": "object",
            "required": [
                "query",
                "sampleRate"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "datadog:index/getLogsIndexesLogsIndexFilter:getLogsIndexesLogsIndexFilter": {
            "properties": {
                "query": {
                    "type": "string",
                    "description": "Logs filter criteria. Only logs matching this filter criteria are considered for this index.\n"
                }
            },
            "type": "object",
            "required": [
                "query"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "datadog:index/getLogsPipelinesLogsPipeline:getLogsPipelinesLogsPipeline": {
            "properties": {
                "filters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/getLogsPipelinesLogsPipelineFilter:getLogsPipelinesLogsPipelineFilter"
                    },
                    "description": "Pipelines filter\n"
                },
                "id": {
                    "type": "string",
                    "description": "ID of the pipeline\n"
                },
                "isEnabled": {
                    "type": "boolean",
                    "description": "Whether or not the pipeline is enabled.\n"
                },
                "isReadOnly": {
                    "type": "boolean",
                    "description": "Whether or not the pipeline can be edited.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the pipeline.\n"
                },
                "type": {
                    "type": "string",
                    "description": "Whether or not the pipeline can be edited.\n"
                }
            },
            "type": "object",
            "required": [
                "filters",
                "id",
                "isEnabled",
                "isReadOnly",
                "name",
                "type"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "datadog:index/getLogsPipelinesLogsPipelineFilter:getLogsPipelinesLogsPipelineFilter": {
            "properties": {
                "query": {
                    "type": "string",
                    "description": "Pipeline filter criteria.\n"
                }
            },
            "type": "object",
            "required": [
                "query"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "datadog:index/getMonitorConfigPoliciesMonitorConfigPolicy:getMonitorConfigPoliciesMonitorConfigPolicy": {
            "properties": {
                "id": {
                    "type": "string",
                    "description": "ID of the monitor config policy\n"
                },
                "policyType": {
                    "type": "string",
                    "description": "The monitor config policy type\n"
                },
                "tagPolicy": {
                    "$ref": "#/types/datadog:index/getMonitorConfigPoliciesMonitorConfigPolicyTagPolicy:getMonitorConfigPoliciesMonitorConfigPolicyTagPolicy",
                    "description": "Config for a tag policy. Only set if `policy_type` is `tag`.\n"
                }
            },
            "type": "object",
            "required": [
                "id",
                "policyType",
                "tagPolicy"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "datadog:index/getMonitorConfigPoliciesMonitorConfigPolicyTagPolicy:getMonitorConfigPoliciesMonitorConfigPolicyTagPolicy": {
            "properties": {
                "tagKey": {
                    "type": "string",
                    "description": "The key of the tag\n"
                },
                "tagKeyRequired": {
                    "type": "boolean",
                    "description": "If a tag key is required for monitor creation\n"
                },
                "validTagValues": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Valid values for the tag\n"
                }
            },
            "type": "object",
            "required": [
                "tagKey",
                "tagKeyRequired",
                "validTagValues"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "datadog:index/getMonitorMonitorThreshold:getMonitorMonitorThreshold": {
            "properties": {
                "critical": {
                    "type": "string"
                },
                "criticalRecovery": {
                    "type": "string"
                },
                "ok": {
                    "type": "string"
                },
                "unknown": {
                    "type": "string"
                },
                "warning": {
                    "type": "string"
                },
                "warningRecovery": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "critical",
                "criticalRecovery",
                "ok",
                "unknown",
                "warning",
                "warningRecovery"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "datadog:index/getMonitorMonitorThresholdWindow:getMonitorMonitorThresholdWindow": {
            "properties": {
                "recoveryWindow": {
                    "type": "string"
                },
                "triggerWindow": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "recoveryWindow",
                "triggerWindow"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "datadog:index/getMonitorSchedulingOption:getMonitorSchedulingOption": {
            "properties": {
                "customSchedules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/getMonitorSchedulingOptionCustomSchedule:getMonitorSchedulingOptionCustomSchedule"
                    },
                    "description": "Configuration options for the custom schedules. If `start` is omitted, the monitor creation time will be used.\n"
                },
                "evaluationWindows": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/getMonitorSchedulingOptionEvaluationWindow:getMonitorSchedulingOptionEvaluationWindow"
                    },
                    "description": "Configuration options for the evaluation window. If `hour_starts` is set, no other fields may be set. Otherwise, `day_starts` and `month_starts` must be set together.\n"
                }
            },
            "type": "object",
            "required": [
                "customSchedules",
                "evaluationWindows"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "datadog:index/getMonitorSchedulingOptionCustomSchedule:getMonitorSchedulingOptionCustomSchedule": {
            "properties": {
                "recurrences": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/getMonitorSchedulingOptionCustomScheduleRecurrence:getMonitorSchedulingOptionCustomScheduleRecurrence"
                    },
                    "description": "A list of recurrence definitions. Length must be 1.\n"
                }
            },
            "type": "object",
            "required": [
                "recurrences"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "datadog:index/getMonitorSchedulingOptionCustomScheduleRecurrence:getMonitorSchedulingOptionCustomScheduleRecurrence": {
            "properties": {
                "rrule": {
                    "type": "string",
                    "description": "Must be a valid rrule. See api docs for supported fields\n"
                },
                "start": {
                    "type": "string",
                    "description": "Time to start recurrence cycle. Similar to DTSTART. Expected format 'YYYY-MM-DDThh:mm:ss'\n"
                },
                "timezone": {
                    "type": "string",
                    "description": "'tz database' format. ex: 'America/New_York' or UTC\n"
                }
            },
            "type": "object",
            "required": [
                "rrule",
                "start",
                "timezone"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "datadog:index/getMonitorSchedulingOptionEvaluationWindow:getMonitorSchedulingOptionEvaluationWindow": {
            "properties": {
                "dayStarts": {
                    "type": "string",
                    "description": "The time of the day at which a one day cumulative evaluation window starts. Must be defined in UTC time in `HH:mm` format.\n"
                },
                "hourStarts": {
                    "type": "integer",
                    "description": "The minute of the hour at which a one hour cumulative evaluation window starts. Must be between 0 and 59.\n"
                },
                "monthStarts": {
                    "type": "integer",
                    "description": "The day of the month at which a one month cumulative evaluation window starts. Must be a value of 1.\n"
                }
            },
            "type": "object",
            "required": [
                "dayStarts",
                "hourStarts",
                "monthStarts"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "datadog:index/getMonitorsMonitor:getMonitorsMonitor": {
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "ID of the monitor\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the monitor\n"
                },
                "type": {
                    "type": "string",
                    "description": "Type of the monitor.\n"
                }
            },
            "type": "object",
            "required": [
                "id",
                "name",
                "type"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "datadog:index/getRoleUsersRoleUser:getRoleUsersRoleUser": {
            "properties": {
                "roleId": {
                    "type": "string"
                },
                "userId": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "roleId",
                "userId"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "datadog:index/getRolesRole:getRolesRole": {
            "properties": {
                "id": {
                    "type": "string",
                    "description": "ID of the Datadog role\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the Datadog role\n"
                },
                "userCount": {
                    "type": "integer",
                    "description": "Number of users that have this role.\n"
                }
            },
            "type": "object",
            "required": [
                "id",
                "name",
                "userCount"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "datadog:index/getSecurityMonitoringFiltersFilter:getSecurityMonitoringFiltersFilter": {
            "properties": {
                "exclusionFilters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/getSecurityMonitoringFiltersFilterExclusionFilter:getSecurityMonitoringFiltersFilterExclusionFilter"
                    },
                    "description": "Exclusion filters to exclude some logs from the security filter.\n"
                },
                "filteredDataType": {
                    "type": "string",
                    "description": "The filtered data type.\n"
                },
                "isEnabled": {
                    "type": "boolean",
                    "description": "Whether the security filter is enabled.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the security filter.\n"
                },
                "query": {
                    "type": "string",
                    "description": "The query of the security filter.\n"
                },
                "version": {
                    "type": "integer",
                    "description": "The version of the security filter.\n"
                }
            },
            "type": "object",
            "required": [
                "isEnabled",
                "name",
                "query",
                "version"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "datadog:index/getSecurityMonitoringFiltersFilterExclusionFilter:getSecurityMonitoringFiltersFilterExclusionFilter": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Exclusion filter name.\n"
                },
                "query": {
                    "type": "string",
                    "description": "Exclusion filter query. Logs that match this query are excluded from the security filter.\n"
                }
            },
            "type": "object",
            "required": [
                "name",
                "query"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "datadog:index/getSecurityMonitoringRulesRule:getSecurityMonitoringRulesRule": {
            "properties": {
                "cases": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/getSecurityMonitoringRulesRuleCase:getSecurityMonitoringRulesRuleCase"
                    },
                    "description": "Cases for generating signals.\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Whether the rule is enabled.\n"
                },
                "filters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/getSecurityMonitoringRulesRuleFilter:getSecurityMonitoringRulesRuleFilter"
                    },
                    "description": "Additional queries to filter matched events before they are processed. **Note**: This field is deprecated for log detection, signal correlation, and workload security rules.\n"
                },
                "hasExtendedTitle": {
                    "type": "boolean",
                    "description": "Whether the notifications include the triggering group-by values in their title.\n"
                },
                "message": {
                    "type": "string",
                    "description": "Message for generated signals.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the rule.\n"
                },
                "options": {
                    "$ref": "#/types/datadog:index/getSecurityMonitoringRulesRuleOptions:getSecurityMonitoringRulesRuleOptions",
                    "description": "Options on rules.\n"
                },
                "queries": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/getSecurityMonitoringRulesRuleQuery:getSecurityMonitoringRulesRuleQuery"
                    },
                    "description": "Queries for selecting logs which are part of the rule.\n"
                },
                "signalQueries": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/getSecurityMonitoringRulesRuleSignalQuery:getSecurityMonitoringRulesRuleSignalQuery"
                    },
                    "description": "Queries for selecting logs which are part of the rule.\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Tags for generated signals.\n"
                },
                "thirdPartyCases": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/getSecurityMonitoringRulesRuleThirdPartyCase:getSecurityMonitoringRulesRuleThirdPartyCase"
                    },
                    "description": "Cases for generating signals for third-party rules. Only required and accepted for third-party rules\n"
                },
                "type": {
                    "type": "string",
                    "description": "The rule type.\n"
                }
            },
            "type": "object",
            "required": [
                "message",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "datadog:index/getSecurityMonitoringRulesRuleCase:getSecurityMonitoringRulesRuleCase": {
            "properties": {
                "condition": {
                    "type": "string",
                    "description": "A rule case contains logical operations (`\u003e`,`\u003e=`, `\u0026\u0026`, `||`) to determine if a signal should be generated based on the event counts in the previously defined queries.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the case.\n"
                },
                "notifications": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Notification targets for each rule case.\n"
                },
                "status": {
                    "type": "string",
                    "description": "Severity of the Security Signal.\n"
                }
            },
            "type": "object",
            "required": [
                "status"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "datadog:index/getSecurityMonitoringRulesRuleFilter:getSecurityMonitoringRulesRuleFilter": {
            "properties": {
                "action": {
                    "type": "string",
                    "description": "The type of filtering action.\n"
                },
                "query": {
                    "type": "string",
                    "description": "Query for selecting logs to apply the filtering action.\n"
                }
            },
            "type": "object",
            "required": [
                "action",
                "query"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "datadog:index/getSecurityMonitoringRulesRuleOptions:getSecurityMonitoringRulesRuleOptions": {
            "properties": {
                "decreaseCriticalityBasedOnEnv": {
                    "type": "boolean",
                    "description": "If true, signals in non-production environments have a lower severity than what is defined by the rule case, which can reduce noise. The decrement is applied when the environment tag of the signal starts with `staging`, `test`, or `dev`. Only available when the rule type is `log_detection`.\n"
                },
                "detectionMethod": {
                    "type": "string",
                    "description": "The detection method.\n"
                },
                "evaluationWindow": {
                    "type": "integer",
                    "description": "A time window is specified to match when at least one of the cases matches true. This is a sliding window and evaluates in real time.\n"
                },
                "impossibleTravelOptions": {
                    "$ref": "#/types/datadog:index/getSecurityMonitoringRulesRuleOptionsImpossibleTravelOptions:getSecurityMonitoringRulesRuleOptionsImpossibleTravelOptions",
                    "description": "Options for rules using the impossible travel detection method.\n"
                },
                "keepAlive": {
                    "type": "integer",
                    "description": "Once a signal is generated, the signal will remain “open” if a case is matched at least once within this keep alive window (in seconds).\n"
                },
                "maxSignalDuration": {
                    "type": "integer",
                    "description": "A signal will “close” regardless of the query being matched once the time exceeds the maximum duration (in seconds). This time is calculated from the first seen timestamp.\n"
                },
                "newValueOptions": {
                    "$ref": "#/types/datadog:index/getSecurityMonitoringRulesRuleOptionsNewValueOptions:getSecurityMonitoringRulesRuleOptionsNewValueOptions",
                    "description": "New value rules specific options.\n"
                },
                "thirdPartyRuleOptions": {
                    "$ref": "#/types/datadog:index/getSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptions:getSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptions",
                    "description": "Options for rules using the third-party detection method.\n"
                }
            },
            "type": "object"
        },
        "datadog:index/getSecurityMonitoringRulesRuleOptionsImpossibleTravelOptions:getSecurityMonitoringRulesRuleOptionsImpossibleTravelOptions": {
            "properties": {
                "baselineUserLocations": {
                    "type": "boolean",
                    "description": "If true, signals are suppressed for the first 24 hours. During that time, Datadog learns the user's regular access locations. This can be helpful to reduce noise and infer VPN usage or credentialed API access.\n"
                }
            },
            "type": "object"
        },
        "datadog:index/getSecurityMonitoringRulesRuleOptionsNewValueOptions:getSecurityMonitoringRulesRuleOptionsNewValueOptions": {
            "properties": {
                "forgetAfter": {
                    "type": "integer",
                    "description": "The duration in days after which a learned value is forgotten.\n"
                },
                "learningDuration": {
                    "type": "integer",
                    "description": "The duration in days during which values are learned, and after which signals will be generated for values that weren't learned. If set to 0, a signal will be generated for all new values after the first value is learned.\n"
                },
                "learningMethod": {
                    "type": "string",
                    "description": "The learning method used to determine when signals should be generated for values that weren't learned.\n"
                },
                "learningThreshold": {
                    "type": "integer",
                    "description": "A number of occurrences after which signals are generated for values that weren't learned.\n"
                }
            },
            "type": "object",
            "required": [
                "forgetAfter"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "datadog:index/getSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptions:getSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptions": {
            "properties": {
                "defaultNotifications": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Notification targets for the default rule case, when none of the third-party cases match.\n"
                },
                "defaultStatus": {
                    "type": "string",
                    "description": "Severity of the default rule case, when none of the third-party cases match.\n"
                },
                "rootQueries": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/getSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsRootQuery:getSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsRootQuery"
                    },
                    "description": "Queries to be combined with third-party case queries. Each of them can have different group by fields, to aggregate differently based on the type of alert.\n"
                },
                "signalTitleTemplate": {
                    "type": "string",
                    "description": "A template for the signal title; if omitted, the title is generated based on the case name.\n"
                }
            },
            "type": "object",
            "required": [
                "defaultStatus",
                "rootQueries"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "datadog:index/getSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsRootQuery:getSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsRootQuery": {
            "properties": {
                "groupByFields": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Fields to group by. If empty, each log triggers a signal.\n"
                },
                "query": {
                    "type": "string",
                    "description": "Query to filter logs.\n"
                }
            },
            "type": "object",
            "required": [
                "query"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "datadog:index/getSecurityMonitoringRulesRuleQuery:getSecurityMonitoringRulesRuleQuery": {
            "properties": {
                "agentRules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/getSecurityMonitoringRulesRuleQueryAgentRule:getSecurityMonitoringRulesRuleQueryAgentRule"
                    },
                    "description": "**Deprecated**. It won't be applied anymore.\n",
                    "deprecationMessage": "`agent_rule` has been deprecated in favor of new Agent Rule resource."
                },
                "aggregation": {
                    "type": "string",
                    "description": "The aggregation type. For Signal Correlation rules, it must be event_count.\n"
                },
                "distinctFields": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Field for which the cardinality is measured. Sent as an array.\n"
                },
                "groupByFields": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Fields to group by.\n"
                },
                "metric": {
                    "type": "string",
                    "description": "The target field to aggregate over when using the `sum`, `max`, or `geo_data` aggregations.\n",
                    "deprecationMessage": "Configure `metrics` instead. This attribute will be removed in the next major version of the provider."
                },
                "metrics": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Group of target fields to aggregate over when using the `sum`, `max`, `geo_data`, or `new_value` aggregations. The `sum`, `max`, and `geo_data` aggregations only accept one value in this list, whereas the `new_value` aggregation accepts up to five values.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the query. Not compatible with `new_value` aggregations.\n"
                },
                "query": {
                    "type": "string",
                    "description": "Query to run on logs.\n"
                }
            },
            "type": "object",
            "required": [
                "metrics",
                "query"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "datadog:index/getSecurityMonitoringRulesRuleQueryAgentRule:getSecurityMonitoringRulesRuleQueryAgentRule": {
            "properties": {
                "agentRuleId": {
                    "type": "string",
                    "description": "**Deprecated**. It won't be applied anymore.\n"
                },
                "expression": {
                    "type": "string",
                    "description": "**Deprecated**. It won't be applied anymore.\n"
                }
            },
            "type": "object",
            "required": [
                "agentRuleId",
                "expression"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "datadog:index/getSecurityMonitoringRulesRuleSignalQuery:getSecurityMonitoringRulesRuleSignalQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "The aggregation type. For Signal Correlation rules, it must be event_count.\n"
                },
                "correlatedByFields": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Fields to correlate by.\n"
                },
                "correlatedQueryIndex": {
                    "type": "string",
                    "description": "Index of the rule query used to retrieve the correlated field. An empty string applies correlation on the non-projected per query attributes of the rule.\n"
                },
                "defaultRuleId": {
                    "type": "string",
                    "description": "Default Rule ID of the signal to correlate. This value is READ-ONLY.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the query. Not compatible with `new_value` aggregations.\n"
                },
                "ruleId": {
                    "type": "string",
                    "description": "Rule ID of the signal to correlate.\n"
                }
            },
            "type": "object",
            "required": [
                "ruleId"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "datadog:index/getSecurityMonitoringRulesRuleThirdPartyCase:getSecurityMonitoringRulesRuleThirdPartyCase": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Name of the case.\n"
                },
                "notifications": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Notification targets for each rule case.\n"
                },
                "query": {
                    "type": "string",
                    "description": "A query to associate a third-party event to this case.\n"
                },
                "status": {
                    "type": "string",
                    "description": "Severity of the Security Signal.\n"
                }
            },
            "type": "object",
            "required": [
                "status"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "datadog:index/getSecurityMonitoringSuppressionsSuppression:getSecurityMonitoringSuppressionsSuppression": {
            "properties": {
                "dataExclusionQuery": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "enabled": {
                    "type": "boolean"
                },
                "expirationDate": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "ruleQuery": {
                    "type": "string"
                },
                "suppressionQuery": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "dataExclusionQuery",
                "description",
                "enabled",
                "expirationDate",
                "id",
                "name",
                "ruleQuery",
                "suppressionQuery"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "datadog:index/getServiceLevelObjectiveQuery:getServiceLevelObjectiveQuery": {
            "properties": {
                "denominator": {
                    "type": "string",
                    "description": "The sum of the `total` events.\n"
                },
                "numerator": {
                    "type": "string",
                    "description": "The sum of all the `good` events.\n"
                }
            },
            "type": "object",
            "required": [
                "denominator",
                "numerator"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "datadog:index/getServiceLevelObjectivesSlo:getServiceLevelObjectivesSlo": {
            "properties": {
                "id": {
                    "type": "string",
                    "description": "ID of the Datadog service level objective\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the Datadog service level objective\n"
                },
                "type": {
                    "type": "string",
                    "description": "The type of the service level objective. The mapping from these types to the types found in the Datadog Web UI can be found in the Datadog API [documentation page](https://docs.datadoghq.com/api/v1/service-level-objectives/#create-a-slo-object). Available options to choose from are: `metric` and `monitor`.\n"
                }
            },
            "type": "object",
            "required": [
                "id",
                "name",
                "type"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "datadog:index/getTeamMembershipsTeamMembership:getTeamMembershipsTeamMembership": {
            "properties": {
                "id": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                },
                "teamId": {
                    "type": "string"
                },
                "userId": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "id",
                "role",
                "teamId",
                "userId"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "datadog:index/getUsersUser:getUsersUser": {
            "properties": {
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "email",
                "id",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "datadog:slack/ChannelDisplay:ChannelDisplay": {
            "properties": {
                "message": {
                    "type": "boolean",
                    "description": "Show the main body of the alert event. Defaults to `true`.\n"
                },
                "notified": {
                    "type": "boolean",
                    "description": "Show the list of @-handles in the alert event. Defaults to `true`.\n"
                },
                "snapshot": {
                    "type": "boolean",
                    "description": "Show the alert event's snapshot image. Defaults to `true`.\n"
                },
                "tags": {
                    "type": "boolean",
                    "description": "Show the scopes on which the monitor alerted. Defaults to `true`.\n"
                }
            },
            "type": "object"
        }
    },
    "provider": {
        "description": "The provider type for the datadog package. By default, resources use package-wide configuration\nsettings, however an explicit `Provider` instance may be created and passed during resource\nconstruction to achieve fine-grained programmatic control over provider settings. See the\n[documentation](https://www.pulumi.com/docs/reference/programming-model/#providers) for more information.\n",
        "properties": {
            "apiKey": {
                "type": "string",
                "description": "(Required unless validate is false) Datadog API key. This can also be set via the DD_API_KEY environment variable.\n",
                "secret": true
            },
            "apiUrl": {
                "type": "string",
                "description": "The API URL. This can also be set via the DD_HOST environment variable, and defaults to `https://api.datadoghq.com`.\nNote that this URL must not end with the `/api/` path. For example, `https://api.datadoghq.com/` is a correct value,\nwhile `https://api.datadoghq.com/api/` is not. And if you're working with \"EU\" version of Datadog, use\n`https://api.datadoghq.eu/`. Other Datadog region examples: `https://api.us5.datadoghq.com/`,\n`https://api.us3.datadoghq.com/` and `https://api.ddog-gov.com/`. See https://docs.datadoghq.com/getting_started/site/\nfor all available regions.\n"
            },
            "appKey": {
                "type": "string",
                "description": "(Required unless validate is false) Datadog APP key. This can also be set via the DD_APP_KEY environment variable.\n",
                "secret": true
            },
            "defaultTags": {
                "$ref": "#/types/datadog:index/ProviderDefaultTags:ProviderDefaultTags",
                "description": "[Experimental - Monitors only] Configuration block containing settings to apply default resource tags across all\nresources.\n"
            },
            "httpClientRetryBackoffBase": {
                "type": "integer",
                "description": "The HTTP request retry back off base. Defaults to 2.\n"
            },
            "httpClientRetryBackoffMultiplier": {
                "type": "integer",
                "description": "The HTTP request retry back off multiplier. Defaults to 2.\n"
            },
            "httpClientRetryEnabled": {
                "type": "string",
                "description": "Enables request retries on HTTP status codes 429 and 5xx. Valid values are [`true`, `false`]. Defaults to `true`.\n"
            },
            "httpClientRetryMaxRetries": {
                "type": "integer",
                "description": "The HTTP request maximum retry number. Defaults to 3.\n"
            },
            "httpClientRetryTimeout": {
                "type": "integer",
                "description": "The HTTP request retry timeout period. Defaults to 60 seconds.\n"
            },
            "validate": {
                "type": "string",
                "description": "Enables validation of the provided API key during provider initialization. Valid values are [`true`, `false`]. Default\nis true. When false, api_key won't be checked.\n"
            }
        },
        "inputProperties": {
            "apiKey": {
                "type": "string",
                "description": "(Required unless validate is false) Datadog API key. This can also be set via the DD_API_KEY environment variable.\n",
                "secret": true
            },
            "apiUrl": {
                "type": "string",
                "description": "The API URL. This can also be set via the DD_HOST environment variable, and defaults to `https://api.datadoghq.com`.\nNote that this URL must not end with the `/api/` path. For example, `https://api.datadoghq.com/` is a correct value,\nwhile `https://api.datadoghq.com/api/` is not. And if you're working with \"EU\" version of Datadog, use\n`https://api.datadoghq.eu/`. Other Datadog region examples: `https://api.us5.datadoghq.com/`,\n`https://api.us3.datadoghq.com/` and `https://api.ddog-gov.com/`. See https://docs.datadoghq.com/getting_started/site/\nfor all available regions.\n"
            },
            "appKey": {
                "type": "string",
                "description": "(Required unless validate is false) Datadog APP key. This can also be set via the DD_APP_KEY environment variable.\n",
                "secret": true
            },
            "defaultTags": {
                "$ref": "#/types/datadog:index/ProviderDefaultTags:ProviderDefaultTags",
                "description": "[Experimental - Monitors only] Configuration block containing settings to apply default resource tags across all\nresources.\n"
            },
            "httpClientRetryBackoffBase": {
                "type": "integer",
                "description": "The HTTP request retry back off base. Defaults to 2.\n"
            },
            "httpClientRetryBackoffMultiplier": {
                "type": "integer",
                "description": "The HTTP request retry back off multiplier. Defaults to 2.\n"
            },
            "httpClientRetryEnabled": {
                "type": "string",
                "description": "Enables request retries on HTTP status codes 429 and 5xx. Valid values are [`true`, `false`]. Defaults to `true`.\n"
            },
            "httpClientRetryMaxRetries": {
                "type": "integer",
                "description": "The HTTP request maximum retry number. Defaults to 3.\n"
            },
            "httpClientRetryTimeout": {
                "type": "integer",
                "description": "The HTTP request retry timeout period. Defaults to 60 seconds.\n"
            },
            "validate": {
                "type": "string",
                "description": "Enables validation of the provided API key during provider initialization. Valid values are [`true`, `false`]. Default\nis true. When false, api_key won't be checked.\n"
            }
        }
    },
    "resources": {
        "datadog:aws/integration:Integration": {
            "description": "Provides a Datadog - Amazon Web Services integration resource. This can be used to create and manage Datadog - Amazon Web Services integration.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as datadog from \"@pulumi/datadog\";\n\n// Create a new Datadog - Amazon Web Services integration\nconst sandbox = new datadog.aws.Integration(\"sandbox\", {\n    accountId: \"1234567890\",\n    roleName: \"DatadogAWSIntegrationRole\",\n    filterTags: [\"key:value\"],\n    hostTags: [\n        \"key:value\",\n        \"key2:value2\",\n    ],\n    accountSpecificNamespaceRules: {\n        auto_scaling: \"false\",\n        opsworks: \"false\",\n    },\n    excludedRegions: [\n        \"us-east-1\",\n        \"us-west-2\",\n    ],\n});\n```\n```python\nimport pulumi\nimport pulumi_datadog as datadog\n\n# Create a new Datadog - Amazon Web Services integration\nsandbox = datadog.aws.Integration(\"sandbox\",\n    account_id=\"1234567890\",\n    role_name=\"DatadogAWSIntegrationRole\",\n    filter_tags=[\"key:value\"],\n    host_tags=[\n        \"key:value\",\n        \"key2:value2\",\n    ],\n    account_specific_namespace_rules={\n        \"auto_scaling\": \"false\",\n        \"opsworks\": \"false\",\n    },\n    excluded_regions=[\n        \"us-east-1\",\n        \"us-west-2\",\n    ])\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Datadog = Pulumi.Datadog;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    // Create a new Datadog - Amazon Web Services integration\n    var sandbox = new Datadog.Aws.Integration(\"sandbox\", new()\n    {\n        AccountId = \"1234567890\",\n        RoleName = \"DatadogAWSIntegrationRole\",\n        FilterTags = new[]\n        {\n            \"key:value\",\n        },\n        HostTags = new[]\n        {\n            \"key:value\",\n            \"key2:value2\",\n        },\n        AccountSpecificNamespaceRules = \n        {\n            { \"auto_scaling\", \"false\" },\n            { \"opsworks\", \"false\" },\n        },\n        ExcludedRegions = new[]\n        {\n            \"us-east-1\",\n            \"us-west-2\",\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-datadog/sdk/v4/go/datadog/aws\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t// Create a new Datadog - Amazon Web Services integration\n\t\t_, err := aws.NewIntegration(ctx, \"sandbox\", \u0026aws.IntegrationArgs{\n\t\t\tAccountId: pulumi.String(\"1234567890\"),\n\t\t\tRoleName:  pulumi.String(\"DatadogAWSIntegrationRole\"),\n\t\t\tFilterTags: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"key:value\"),\n\t\t\t},\n\t\t\tHostTags: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"key:value\"),\n\t\t\t\tpulumi.String(\"key2:value2\"),\n\t\t\t},\n\t\t\tAccountSpecificNamespaceRules: pulumi.StringMap{\n\t\t\t\t\"auto_scaling\": pulumi.String(\"false\"),\n\t\t\t\t\"opsworks\":     pulumi.String(\"false\"),\n\t\t\t},\n\t\t\tExcludedRegions: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"us-east-1\"),\n\t\t\t\tpulumi.String(\"us-west-2\"),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.datadog.aws.Integration;\nimport com.pulumi.datadog.aws.IntegrationArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        // Create a new Datadog - Amazon Web Services integration\n        var sandbox = new Integration(\"sandbox\", IntegrationArgs.builder()\n            .accountId(\"1234567890\")\n            .roleName(\"DatadogAWSIntegrationRole\")\n            .filterTags(\"key:value\")\n            .hostTags(            \n                \"key:value\",\n                \"key2:value2\")\n            .accountSpecificNamespaceRules(Map.ofEntries(\n                Map.entry(\"auto_scaling\", false),\n                Map.entry(\"opsworks\", false)\n            ))\n            .excludedRegions(            \n                \"us-east-1\",\n                \"us-west-2\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  # Create a new Datadog - Amazon Web Services integration\n  sandbox:\n    type: datadog:aws:Integration\n    properties:\n      accountId: '1234567890'\n      roleName: DatadogAWSIntegrationRole\n      filterTags:\n        - key:value\n      hostTags:\n        - key:value\n        - key2:value2\n      accountSpecificNamespaceRules:\n        auto_scaling: false\n        opsworks: false\n      excludedRegions:\n        - us-east-1\n        - us-west-2\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\nAmazon Web Services integrations can be imported using their account ID and role name separated with a colon (:), while the external_id should be passed by setting an environment variable called EXTERNAL_ID\n\n```sh\n$ pulumi import datadog:aws/integration:Integration EXTERNAL_ID=${external_id} datadog_integration_aws.test ${account_id}:${role_name}\n```\n\n",
            "properties": {
                "accessKeyId": {
                    "type": "string",
                    "description": "Your AWS access key ID. Only required if your AWS account is a GovCloud or China account.\n"
                },
                "accountId": {
                    "type": "string",
                    "description": "Your AWS Account ID without dashes.\n"
                },
                "accountSpecificNamespaceRules": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Enables or disables metric collection for specific AWS namespaces for this AWS account only. A list of namespaces can be found at the [available namespace rules API endpoint](https://docs.datadoghq.com/api/v1/aws-integration/#list-namespace-rules).\n"
                },
                "cspmResourceCollectionEnabled": {
                    "type": "string",
                    "description": "Whether Datadog collects cloud security posture management resources from your AWS account. This includes additional resources not covered under the general resource_collection.\n"
                },
                "excludedRegions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "An array of AWS regions to exclude from metrics collection.\n"
                },
                "extendedResourceCollectionEnabled": {
                    "type": "string",
                    "description": "Whether Datadog collects additional attributes and configuration information about the resources in your AWS account. Required for `cspm_resource_collection_enabled`.\n"
                },
                "externalId": {
                    "type": "string"
                },
                "filterTags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Array of EC2 tags (in the form `key:value`) defines a filter that Datadog uses when collecting metrics from EC2. Wildcards, such as `?` (for single characters) and `*` (for multiple characters) can also be used. Only hosts that match one of the defined tags will be imported into Datadog. The rest will be ignored. Host matching a given tag can also be excluded by adding `!` before the tag. e.x. `env:production,instance-type:c1.*,!region:us-east-1`.\n"
                },
                "hostTags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Array of tags (in the form `key:value`) to add to all hosts and metrics reporting through this integration.\n"
                },
                "metricsCollectionEnabled": {
                    "type": "string",
                    "description": "Whether Datadog collects metrics for this AWS account.\n"
                },
                "resourceCollectionEnabled": {
                    "type": "string",
                    "description": "Whether Datadog collects a standard set of resources from your AWS account. **Deprecated.** Deprecated in favor of `extended_resource_collection_enabled`.\n",
                    "deprecationMessage": "Deprecated in favor of `extended_resource_collection_enabled`."
                },
                "roleName": {
                    "type": "string",
                    "description": "Your Datadog role delegation name.\n"
                },
                "secretAccessKey": {
                    "type": "string",
                    "description": "Your AWS secret access key. Only required if your AWS account is a GovCloud or China account.\n",
                    "secret": true
                }
            },
            "required": [
                "cspmResourceCollectionEnabled",
                "extendedResourceCollectionEnabled",
                "externalId",
                "metricsCollectionEnabled",
                "resourceCollectionEnabled"
            ],
            "inputProperties": {
                "accessKeyId": {
                    "type": "string",
                    "description": "Your AWS access key ID. Only required if your AWS account is a GovCloud or China account.\n"
                },
                "accountId": {
                    "type": "string",
                    "description": "Your AWS Account ID without dashes.\n"
                },
                "accountSpecificNamespaceRules": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Enables or disables metric collection for specific AWS namespaces for this AWS account only. A list of namespaces can be found at the [available namespace rules API endpoint](https://docs.datadoghq.com/api/v1/aws-integration/#list-namespace-rules).\n"
                },
                "cspmResourceCollectionEnabled": {
                    "type": "string",
                    "description": "Whether Datadog collects cloud security posture management resources from your AWS account. This includes additional resources not covered under the general resource_collection.\n"
                },
                "excludedRegions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "An array of AWS regions to exclude from metrics collection.\n"
                },
                "extendedResourceCollectionEnabled": {
                    "type": "string",
                    "description": "Whether Datadog collects additional attributes and configuration information about the resources in your AWS account. Required for `cspm_resource_collection_enabled`.\n"
                },
                "filterTags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Array of EC2 tags (in the form `key:value`) defines a filter that Datadog uses when collecting metrics from EC2. Wildcards, such as `?` (for single characters) and `*` (for multiple characters) can also be used. Only hosts that match one of the defined tags will be imported into Datadog. The rest will be ignored. Host matching a given tag can also be excluded by adding `!` before the tag. e.x. `env:production,instance-type:c1.*,!region:us-east-1`.\n"
                },
                "hostTags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Array of tags (in the form `key:value`) to add to all hosts and metrics reporting through this integration.\n"
                },
                "metricsCollectionEnabled": {
                    "type": "string",
                    "description": "Whether Datadog collects metrics for this AWS account.\n"
                },
                "resourceCollectionEnabled": {
                    "type": "string",
                    "description": "Whether Datadog collects a standard set of resources from your AWS account. **Deprecated.** Deprecated in favor of `extended_resource_collection_enabled`.\n",
                    "deprecationMessage": "Deprecated in favor of `extended_resource_collection_enabled`."
                },
                "roleName": {
                    "type": "string",
                    "description": "Your Datadog role delegation name.\n"
                },
                "secretAccessKey": {
                    "type": "string",
                    "description": "Your AWS secret access key. Only required if your AWS account is a GovCloud or China account.\n",
                    "secret": true
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Integration resources.\n",
                "properties": {
                    "accessKeyId": {
                        "type": "string",
                        "description": "Your AWS access key ID. Only required if your AWS account is a GovCloud or China account.\n"
                    },
                    "accountId": {
                        "type": "string",
                        "description": "Your AWS Account ID without dashes.\n"
                    },
                    "accountSpecificNamespaceRules": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "Enables or disables metric collection for specific AWS namespaces for this AWS account only. A list of namespaces can be found at the [available namespace rules API endpoint](https://docs.datadoghq.com/api/v1/aws-integration/#list-namespace-rules).\n"
                    },
                    "cspmResourceCollectionEnabled": {
                        "type": "string",
                        "description": "Whether Datadog collects cloud security posture management resources from your AWS account. This includes additional resources not covered under the general resource_collection.\n"
                    },
                    "excludedRegions": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "An array of AWS regions to exclude from metrics collection.\n"
                    },
                    "extendedResourceCollectionEnabled": {
                        "type": "string",
                        "description": "Whether Datadog collects additional attributes and configuration information about the resources in your AWS account. Required for `cspm_resource_collection_enabled`.\n"
                    },
                    "externalId": {
                        "type": "string"
                    },
                    "filterTags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Array of EC2 tags (in the form `key:value`) defines a filter that Datadog uses when collecting metrics from EC2. Wildcards, such as `?` (for single characters) and `*` (for multiple characters) can also be used. Only hosts that match one of the defined tags will be imported into Datadog. The rest will be ignored. Host matching a given tag can also be excluded by adding `!` before the tag. e.x. `env:production,instance-type:c1.*,!region:us-east-1`.\n"
                    },
                    "hostTags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Array of tags (in the form `key:value`) to add to all hosts and metrics reporting through this integration.\n"
                    },
                    "metricsCollectionEnabled": {
                        "type": "string",
                        "description": "Whether Datadog collects metrics for this AWS account.\n"
                    },
                    "resourceCollectionEnabled": {
                        "type": "string",
                        "description": "Whether Datadog collects a standard set of resources from your AWS account. **Deprecated.** Deprecated in favor of `extended_resource_collection_enabled`.\n",
                        "deprecationMessage": "Deprecated in favor of `extended_resource_collection_enabled`."
                    },
                    "roleName": {
                        "type": "string",
                        "description": "Your Datadog role delegation name.\n"
                    },
                    "secretAccessKey": {
                        "type": "string",
                        "description": "Your AWS secret access key. Only required if your AWS account is a GovCloud or China account.\n",
                        "secret": true
                    }
                },
                "type": "object"
            }
        },
        "datadog:aws/integrationEventBridge:IntegrationEventBridge": {
            "description": "Provides a Datadog - Amazon Web Services integration EventBridge resource. This can be used to create and manage Event Sources for each Datadog integrated AWS account.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as datadog from \"@pulumi/datadog\";\n\n// Create new integration_aws_event_bridge resource\nconst foo = new datadog.aws.IntegrationEventBridge(\"foo\", {\n    accountId: \"123456789012\",\n    createEventBus: true,\n    eventGeneratorName: \"app-alerts\",\n    region: \"us-east-1\",\n});\n```\n```python\nimport pulumi\nimport pulumi_datadog as datadog\n\n# Create new integration_aws_event_bridge resource\nfoo = datadog.aws.IntegrationEventBridge(\"foo\",\n    account_id=\"123456789012\",\n    create_event_bus=True,\n    event_generator_name=\"app-alerts\",\n    region=\"us-east-1\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Datadog = Pulumi.Datadog;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    // Create new integration_aws_event_bridge resource\n    var foo = new Datadog.Aws.IntegrationEventBridge(\"foo\", new()\n    {\n        AccountId = \"123456789012\",\n        CreateEventBus = true,\n        EventGeneratorName = \"app-alerts\",\n        Region = \"us-east-1\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-datadog/sdk/v4/go/datadog/aws\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t// Create new integration_aws_event_bridge resource\n\t\t_, err := aws.NewIntegrationEventBridge(ctx, \"foo\", \u0026aws.IntegrationEventBridgeArgs{\n\t\t\tAccountId:          pulumi.String(\"123456789012\"),\n\t\t\tCreateEventBus:     pulumi.Bool(true),\n\t\t\tEventGeneratorName: pulumi.String(\"app-alerts\"),\n\t\t\tRegion:             pulumi.String(\"us-east-1\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.datadog.aws.IntegrationEventBridge;\nimport com.pulumi.datadog.aws.IntegrationEventBridgeArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        // Create new integration_aws_event_bridge resource\n        var foo = new IntegrationEventBridge(\"foo\", IntegrationEventBridgeArgs.builder()\n            .accountId(\"123456789012\")\n            .createEventBus(true)\n            .eventGeneratorName(\"app-alerts\")\n            .region(\"us-east-1\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  # Create new integration_aws_event_bridge resource\n  foo:\n    type: datadog:aws:IntegrationEventBridge\n    properties:\n      accountId: '123456789012'\n      createEventBus: true\n      eventGeneratorName: app-alerts\n      region: us-east-1\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\nAmazon Web Service EventBridge integrations are imported using the Event Source name as listed for an integrated AWS account in Datadog\n\n```sh\n$ pulumi import datadog:aws/integrationEventBridge:IntegrationEventBridge foo event-source-name-abc12345\n```\n\n",
            "properties": {
                "accountId": {
                    "type": "string",
                    "description": "Your AWS Account ID without dashes.\n"
                },
                "createEventBus": {
                    "type": "boolean",
                    "description": "True if Datadog should create the event bus in addition to the event source. Requires the `events:CreateEventBus` permission. Defaults to `true`.\n"
                },
                "eventGeneratorName": {
                    "type": "string",
                    "description": "The given part of the event source name, which is then combined with an assigned suffix to form the full name.\n"
                },
                "region": {
                    "type": "string",
                    "description": "The event source's [AWS region](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints).\n"
                }
            },
            "required": [
                "accountId",
                "createEventBus",
                "eventGeneratorName",
                "region"
            ],
            "inputProperties": {
                "accountId": {
                    "type": "string",
                    "description": "Your AWS Account ID without dashes.\n"
                },
                "createEventBus": {
                    "type": "boolean",
                    "description": "True if Datadog should create the event bus in addition to the event source. Requires the `events:CreateEventBus` permission. Defaults to `true`.\n"
                },
                "eventGeneratorName": {
                    "type": "string",
                    "description": "The given part of the event source name, which is then combined with an assigned suffix to form the full name.\n"
                },
                "region": {
                    "type": "string",
                    "description": "The event source's [AWS region](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints).\n"
                }
            },
            "requiredInputs": [
                "accountId",
                "eventGeneratorName",
                "region"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering IntegrationEventBridge resources.\n",
                "properties": {
                    "accountId": {
                        "type": "string",
                        "description": "Your AWS Account ID without dashes.\n"
                    },
                    "createEventBus": {
                        "type": "boolean",
                        "description": "True if Datadog should create the event bus in addition to the event source. Requires the `events:CreateEventBus` permission. Defaults to `true`.\n"
                    },
                    "eventGeneratorName": {
                        "type": "string",
                        "description": "The given part of the event source name, which is then combined with an assigned suffix to form the full name.\n"
                    },
                    "region": {
                        "type": "string",
                        "description": "The event source's [AWS region](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints).\n"
                    }
                },
                "type": "object"
            }
        },
        "datadog:aws/integrationLambdaArn:IntegrationLambdaArn": {
            "description": "Provides a Datadog - Amazon Web Services integration Lambda ARN resource. This can be used to create and manage the log collection Lambdas for an account.\n\nUpdate operations are currently not supported with datadog API so any change forces a new resource.\n\n**Note**: If you are using AWS GovCloud or the AWS China* region, update the `lambda_arn` parameter for your environment.\n\n *\\*All use of Datadog Services in (or in connection with environments within) mainland China is subject to the disclaimer published in the \u003ca href=\"https://www.datadoghq.com/legal/restricted-service-locations/\"\u003eRestricted Service Locations\u003c/a\u003e section on our website.*\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as datadog from \"@pulumi/datadog\";\n\n// Create a new Datadog - Amazon Web Services integration Lambda ARN\nconst mainCollector = new datadog.aws.IntegrationLambdaArn(\"main_collector\", {\n    accountId: \"1234567890\",\n    lambdaArn: \"arn:aws:lambda:us-east-1:1234567890:function:datadog-forwarder-Forwarder\",\n});\n```\n```python\nimport pulumi\nimport pulumi_datadog as datadog\n\n# Create a new Datadog - Amazon Web Services integration Lambda ARN\nmain_collector = datadog.aws.IntegrationLambdaArn(\"main_collector\",\n    account_id=\"1234567890\",\n    lambda_arn=\"arn:aws:lambda:us-east-1:1234567890:function:datadog-forwarder-Forwarder\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Datadog = Pulumi.Datadog;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    // Create a new Datadog - Amazon Web Services integration Lambda ARN\n    var mainCollector = new Datadog.Aws.IntegrationLambdaArn(\"main_collector\", new()\n    {\n        AccountId = \"1234567890\",\n        LambdaArn = \"arn:aws:lambda:us-east-1:1234567890:function:datadog-forwarder-Forwarder\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-datadog/sdk/v4/go/datadog/aws\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t// Create a new Datadog - Amazon Web Services integration Lambda ARN\n\t\t_, err := aws.NewIntegrationLambdaArn(ctx, \"main_collector\", \u0026aws.IntegrationLambdaArnArgs{\n\t\t\tAccountId: pulumi.String(\"1234567890\"),\n\t\t\tLambdaArn: pulumi.String(\"arn:aws:lambda:us-east-1:1234567890:function:datadog-forwarder-Forwarder\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.datadog.aws.IntegrationLambdaArn;\nimport com.pulumi.datadog.aws.IntegrationLambdaArnArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        // Create a new Datadog - Amazon Web Services integration Lambda ARN\n        var mainCollector = new IntegrationLambdaArn(\"mainCollector\", IntegrationLambdaArnArgs.builder()\n            .accountId(\"1234567890\")\n            .lambdaArn(\"arn:aws:lambda:us-east-1:1234567890:function:datadog-forwarder-Forwarder\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  # Create a new Datadog - Amazon Web Services integration Lambda ARN\n  mainCollector:\n    type: datadog:aws:IntegrationLambdaArn\n    name: main_collector\n    properties:\n      accountId: '1234567890'\n      lambdaArn: arn:aws:lambda:us-east-1:1234567890:function:datadog-forwarder-Forwarder\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\nAmazon Web Services Lambda ARN integrations can be imported using their account_id and lambda_arn separated with a space (` `).\n\n```sh\n$ pulumi import datadog:aws/integrationLambdaArn:IntegrationLambdaArn test \"1234567890 arn:aws:lambda:us-east-1:1234567890:function:datadog-forwarder-Forwarder\"\n```\n\n",
            "properties": {
                "accountId": {
                    "type": "string",
                    "description": "Your AWS Account ID without dashes.\n"
                },
                "lambdaArn": {
                    "type": "string",
                    "description": "The ARN of the Datadog forwarder Lambda.\n"
                }
            },
            "required": [
                "accountId",
                "lambdaArn"
            ],
            "inputProperties": {
                "accountId": {
                    "type": "string",
                    "description": "Your AWS Account ID without dashes.\n",
                    "willReplaceOnChanges": true
                },
                "lambdaArn": {
                    "type": "string",
                    "description": "The ARN of the Datadog forwarder Lambda.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "accountId",
                "lambdaArn"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering IntegrationLambdaArn resources.\n",
                "properties": {
                    "accountId": {
                        "type": "string",
                        "description": "Your AWS Account ID without dashes.\n",
                        "willReplaceOnChanges": true
                    },
                    "lambdaArn": {
                        "type": "string",
                        "description": "The ARN of the Datadog forwarder Lambda.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "datadog:aws/integrationLogCollection:IntegrationLogCollection": {
            "description": "Provides a Datadog - Amazon Web Services integration log collection resource. This can be used to manage which AWS services logs are collected from for an account.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as datadog from \"@pulumi/datadog\";\n\n// Create a new Datadog - Amazon Web Services integration log collection\nconst main = new datadog.aws.IntegrationLogCollection(\"main\", {\n    accountId: \"1234567890\",\n    services: [\"lambda\"],\n});\n```\n```python\nimport pulumi\nimport pulumi_datadog as datadog\n\n# Create a new Datadog - Amazon Web Services integration log collection\nmain = datadog.aws.IntegrationLogCollection(\"main\",\n    account_id=\"1234567890\",\n    services=[\"lambda\"])\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Datadog = Pulumi.Datadog;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    // Create a new Datadog - Amazon Web Services integration log collection\n    var main = new Datadog.Aws.IntegrationLogCollection(\"main\", new()\n    {\n        AccountId = \"1234567890\",\n        Services = new[]\n        {\n            \"lambda\",\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-datadog/sdk/v4/go/datadog/aws\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t// Create a new Datadog - Amazon Web Services integration log collection\n\t\t_, err := aws.NewIntegrationLogCollection(ctx, \"main\", \u0026aws.IntegrationLogCollectionArgs{\n\t\t\tAccountId: pulumi.String(\"1234567890\"),\n\t\t\tServices: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"lambda\"),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.datadog.aws.IntegrationLogCollection;\nimport com.pulumi.datadog.aws.IntegrationLogCollectionArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        // Create a new Datadog - Amazon Web Services integration log collection\n        var main = new IntegrationLogCollection(\"main\", IntegrationLogCollectionArgs.builder()\n            .accountId(\"1234567890\")\n            .services(\"lambda\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  # Create a new Datadog - Amazon Web Services integration log collection\n  main:\n    type: datadog:aws:IntegrationLogCollection\n    properties:\n      accountId: '1234567890'\n      services:\n        - lambda\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\nAmazon Web Services log collection integrations can be imported using the `account ID`.\n\n```sh\n$ pulumi import datadog:aws/integrationLogCollection:IntegrationLogCollection test 1234567890\n```\n\n",
            "properties": {
                "accountId": {
                    "type": "string",
                    "description": "Your AWS Account ID without dashes.\n"
                },
                "services": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of services to collect logs from. See the [api docs](https://docs.datadoghq.com/api/v1/aws-logs-integration/#get-list-of-aws-log-ready-services) for more details on which services are supported.\n"
                }
            },
            "required": [
                "accountId",
                "services"
            ],
            "inputProperties": {
                "accountId": {
                    "type": "string",
                    "description": "Your AWS Account ID without dashes.\n",
                    "willReplaceOnChanges": true
                },
                "services": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of services to collect logs from. See the [api docs](https://docs.datadoghq.com/api/v1/aws-logs-integration/#get-list-of-aws-log-ready-services) for more details on which services are supported.\n"
                }
            },
            "requiredInputs": [
                "accountId",
                "services"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering IntegrationLogCollection resources.\n",
                "properties": {
                    "accountId": {
                        "type": "string",
                        "description": "Your AWS Account ID without dashes.\n",
                        "willReplaceOnChanges": true
                    },
                    "services": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of services to collect logs from. See the [api docs](https://docs.datadoghq.com/api/v1/aws-logs-integration/#get-list-of-aws-log-ready-services) for more details on which services are supported.\n"
                    }
                },
                "type": "object"
            }
        },
        "datadog:aws/integrationTagFilter:IntegrationTagFilter": {
            "description": "Provides a Datadog AWS tag filter resource. This can be used to create and manage Datadog AWS tag filters.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as datadog from \"@pulumi/datadog\";\n\n// Create a new Datadog - Amazon Web Services integration tag filter\nconst foo = new datadog.aws.IntegrationTagFilter(\"foo\", {\n    accountId: \"123456789010\",\n    namespace: \"sqs\",\n    tagFilterStr: \"key:value\",\n});\n```\n```python\nimport pulumi\nimport pulumi_datadog as datadog\n\n# Create a new Datadog - Amazon Web Services integration tag filter\nfoo = datadog.aws.IntegrationTagFilter(\"foo\",\n    account_id=\"123456789010\",\n    namespace=\"sqs\",\n    tag_filter_str=\"key:value\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Datadog = Pulumi.Datadog;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    // Create a new Datadog - Amazon Web Services integration tag filter\n    var foo = new Datadog.Aws.IntegrationTagFilter(\"foo\", new()\n    {\n        AccountId = \"123456789010\",\n        Namespace = \"sqs\",\n        TagFilterStr = \"key:value\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-datadog/sdk/v4/go/datadog/aws\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t// Create a new Datadog - Amazon Web Services integration tag filter\n\t\t_, err := aws.NewIntegrationTagFilter(ctx, \"foo\", \u0026aws.IntegrationTagFilterArgs{\n\t\t\tAccountId:    pulumi.String(\"123456789010\"),\n\t\t\tNamespace:    pulumi.String(\"sqs\"),\n\t\t\tTagFilterStr: pulumi.String(\"key:value\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.datadog.aws.IntegrationTagFilter;\nimport com.pulumi.datadog.aws.IntegrationTagFilterArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        // Create a new Datadog - Amazon Web Services integration tag filter\n        var foo = new IntegrationTagFilter(\"foo\", IntegrationTagFilterArgs.builder()\n            .accountId(\"123456789010\")\n            .namespace(\"sqs\")\n            .tagFilterStr(\"key:value\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  # Create a new Datadog - Amazon Web Services integration tag filter\n  foo:\n    type: datadog:aws:IntegrationTagFilter\n    properties:\n      accountId: '123456789010'\n      namespace: sqs\n      tagFilterStr: key:value\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\nAmazon Web Services log filter resource can be imported using their account ID and namespace separated with a colon (:).\n\n```sh\n$ pulumi import datadog:aws/integrationTagFilter:IntegrationTagFilter foo ${account_id}:${namespace}\n```\n\n",
            "properties": {
                "accountId": {
                    "type": "string",
                    "description": "Your AWS Account ID without dashes.\n"
                },
                "namespace": {
                    "type": "string",
                    "description": "The namespace associated with the tag filter entry. Valid values are `elb`, `application_elb`, `sqs`, `rds`, `custom`, `network_elb`, `lambda`.\n"
                },
                "tagFilterStr": {
                    "type": "string",
                    "description": "The tag filter string.\n"
                }
            },
            "required": [
                "accountId",
                "namespace",
                "tagFilterStr"
            ],
            "inputProperties": {
                "accountId": {
                    "type": "string",
                    "description": "Your AWS Account ID without dashes.\n"
                },
                "namespace": {
                    "type": "string",
                    "description": "The namespace associated with the tag filter entry. Valid values are `elb`, `application_elb`, `sqs`, `rds`, `custom`, `network_elb`, `lambda`.\n",
                    "willReplaceOnChanges": true
                },
                "tagFilterStr": {
                    "type": "string",
                    "description": "The tag filter string.\n"
                }
            },
            "requiredInputs": [
                "accountId",
                "namespace",
                "tagFilterStr"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering IntegrationTagFilter resources.\n",
                "properties": {
                    "accountId": {
                        "type": "string",
                        "description": "Your AWS Account ID without dashes.\n"
                    },
                    "namespace": {
                        "type": "string",
                        "description": "The namespace associated with the tag filter entry. Valid values are `elb`, `application_elb`, `sqs`, `rds`, `custom`, `network_elb`, `lambda`.\n",
                        "willReplaceOnChanges": true
                    },
                    "tagFilterStr": {
                        "type": "string",
                        "description": "The tag filter string.\n"
                    }
                },
                "type": "object"
            }
        },
        "datadog:azure/integration:Integration": {
            "description": "Provides a Datadog - Microsoft Azure integration resource. This can be used to create and manage the integrations.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as datadog from \"@pulumi/datadog\";\n\n// Create a new Datadog - Microsoft Azure integration\nconst sandbox = new datadog.azure.Integration(\"sandbox\", {\n    tenantName: \"\u003cazure_tenant_name\u003e\",\n    clientId: \"\u003cazure_client_id\u003e\",\n    clientSecret: \"\u003cazure_client_secret_key\u003e\",\n    hostFilters: \"examplefilter:true,example:true\",\n    appServicePlanFilters: \"examplefilter:true,example:another\",\n    containerAppFilters: \"examplefilter:true,example:one_more\",\n    automute: true,\n    cspmEnabled: true,\n    customMetricsEnabled: false,\n});\n```\n```python\nimport pulumi\nimport pulumi_datadog as datadog\n\n# Create a new Datadog - Microsoft Azure integration\nsandbox = datadog.azure.Integration(\"sandbox\",\n    tenant_name=\"\u003cazure_tenant_name\u003e\",\n    client_id=\"\u003cazure_client_id\u003e\",\n    client_secret=\"\u003cazure_client_secret_key\u003e\",\n    host_filters=\"examplefilter:true,example:true\",\n    app_service_plan_filters=\"examplefilter:true,example:another\",\n    container_app_filters=\"examplefilter:true,example:one_more\",\n    automute=True,\n    cspm_enabled=True,\n    custom_metrics_enabled=False)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Datadog = Pulumi.Datadog;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    // Create a new Datadog - Microsoft Azure integration\n    var sandbox = new Datadog.Azure.Integration(\"sandbox\", new()\n    {\n        TenantName = \"\u003cazure_tenant_name\u003e\",\n        ClientId = \"\u003cazure_client_id\u003e\",\n        ClientSecret = \"\u003cazure_client_secret_key\u003e\",\n        HostFilters = \"examplefilter:true,example:true\",\n        AppServicePlanFilters = \"examplefilter:true,example:another\",\n        ContainerAppFilters = \"examplefilter:true,example:one_more\",\n        Automute = true,\n        CspmEnabled = true,\n        CustomMetricsEnabled = false,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-datadog/sdk/v4/go/datadog/azure\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t// Create a new Datadog - Microsoft Azure integration\n\t\t_, err := azure.NewIntegration(ctx, \"sandbox\", \u0026azure.IntegrationArgs{\n\t\t\tTenantName:            pulumi.String(\"\u003cazure_tenant_name\u003e\"),\n\t\t\tClientId:              pulumi.String(\"\u003cazure_client_id\u003e\"),\n\t\t\tClientSecret:          pulumi.String(\"\u003cazure_client_secret_key\u003e\"),\n\t\t\tHostFilters:           pulumi.String(\"examplefilter:true,example:true\"),\n\t\t\tAppServicePlanFilters: pulumi.String(\"examplefilter:true,example:another\"),\n\t\t\tContainerAppFilters:   pulumi.String(\"examplefilter:true,example:one_more\"),\n\t\t\tAutomute:              pulumi.Bool(true),\n\t\t\tCspmEnabled:           pulumi.Bool(true),\n\t\t\tCustomMetricsEnabled:  pulumi.Bool(false),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.datadog.azure.Integration;\nimport com.pulumi.datadog.azure.IntegrationArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        // Create a new Datadog - Microsoft Azure integration\n        var sandbox = new Integration(\"sandbox\", IntegrationArgs.builder()\n            .tenantName(\"\u003cazure_tenant_name\u003e\")\n            .clientId(\"\u003cazure_client_id\u003e\")\n            .clientSecret(\"\u003cazure_client_secret_key\u003e\")\n            .hostFilters(\"examplefilter:true,example:true\")\n            .appServicePlanFilters(\"examplefilter:true,example:another\")\n            .containerAppFilters(\"examplefilter:true,example:one_more\")\n            .automute(true)\n            .cspmEnabled(true)\n            .customMetricsEnabled(false)\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  # Create a new Datadog - Microsoft Azure integration\n  sandbox:\n    type: datadog:azure:Integration\n    properties:\n      tenantName: \u003cazure_tenant_name\u003e\n      clientId: \u003cazure_client_id\u003e\n      clientSecret: \u003cazure_client_secret_key\u003e\n      hostFilters: examplefilter:true,example:true\n      appServicePlanFilters: examplefilter:true,example:another\n      containerAppFilters: examplefilter:true,example:one_more\n      automute: true\n      cspmEnabled: true\n      customMetricsEnabled: false\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\nMicrosoft Azure integrations can be imported using their `tenant name` and `client` id separated with a colon (`:`).\n\n```sh\n$ pulumi import datadog:azure/integration:Integration sandbox ${tenant_name}:${client_id}\n```\n\n",
            "properties": {
                "appServicePlanFilters": {
                    "type": "string",
                    "description": "This comma-separated list of tags (in the form `key:value,key:value`) defines a filter that Datadog uses when collecting metrics from Azure App Service Plans. Only App Service Plans that match one of the defined tags are imported into Datadog. The rest, including the apps and functions running on them, are ignored. This also filters the metrics for any App or Function running on the App Service Plan(s). Defaults to `\"\"`.\n"
                },
                "automute": {
                    "type": "boolean",
                    "description": "Silence monitors for expected Azure VM shutdowns. Defaults to `false`.\n"
                },
                "clientId": {
                    "type": "string",
                    "description": "Your Azure web application ID.\n"
                },
                "clientSecret": {
                    "type": "string",
                    "description": "(Required for Initial Creation) Your Azure web application secret key.\n",
                    "secret": true
                },
                "containerAppFilters": {
                    "type": "string",
                    "description": "This comma-separated list of tags (in the form `key:value,key:value`) defines a filter that Datadog uses when collecting metrics from Azure Container Apps. Only Container Apps that match one of the defined tags are imported into Datadog. Defaults to `\"\"`.\n"
                },
                "cspmEnabled": {
                    "type": "boolean",
                    "description": "When enabled, Datadog’s Cloud Security Management product scans resource configurations monitored by this app registration.\nNote: This requires `resource_collection_enabled` to be set to true. Defaults to `false`.\n"
                },
                "customMetricsEnabled": {
                    "type": "boolean",
                    "description": "Enable custom metrics for your organization. Defaults to `false`.\n"
                },
                "hostFilters": {
                    "type": "string",
                    "description": "String of host tag(s) (in the form `key:value,key:value`) defines a filter that Datadog will use when collecting metrics from Azure. Limit the Azure instances that are pulled into Datadog by using tags. Only hosts that match one of the defined tags are imported into Datadog. e.x. `env:production,deploymentgroup:red` Defaults to `\"\"`.\n"
                },
                "resourceCollectionEnabled": {
                    "type": "boolean",
                    "description": "When enabled, Datadog collects metadata and configuration info from cloud resources (such as compute instances, databases, and load balancers) monitored by this app registration.\n"
                },
                "tenantName": {
                    "type": "string",
                    "description": "Your Azure Active Directory ID.\n"
                }
            },
            "required": [
                "appServicePlanFilters",
                "automute",
                "clientId",
                "clientSecret",
                "containerAppFilters",
                "cspmEnabled",
                "customMetricsEnabled",
                "hostFilters",
                "resourceCollectionEnabled",
                "tenantName"
            ],
            "inputProperties": {
                "appServicePlanFilters": {
                    "type": "string",
                    "description": "This comma-separated list of tags (in the form `key:value,key:value`) defines a filter that Datadog uses when collecting metrics from Azure App Service Plans. Only App Service Plans that match one of the defined tags are imported into Datadog. The rest, including the apps and functions running on them, are ignored. This also filters the metrics for any App or Function running on the App Service Plan(s). Defaults to `\"\"`.\n"
                },
                "automute": {
                    "type": "boolean",
                    "description": "Silence monitors for expected Azure VM shutdowns. Defaults to `false`.\n"
                },
                "clientId": {
                    "type": "string",
                    "description": "Your Azure web application ID.\n"
                },
                "clientSecret": {
                    "type": "string",
                    "description": "(Required for Initial Creation) Your Azure web application secret key.\n",
                    "secret": true
                },
                "containerAppFilters": {
                    "type": "string",
                    "description": "This comma-separated list of tags (in the form `key:value,key:value`) defines a filter that Datadog uses when collecting metrics from Azure Container Apps. Only Container Apps that match one of the defined tags are imported into Datadog. Defaults to `\"\"`.\n"
                },
                "cspmEnabled": {
                    "type": "boolean",
                    "description": "When enabled, Datadog’s Cloud Security Management product scans resource configurations monitored by this app registration.\nNote: This requires `resource_collection_enabled` to be set to true. Defaults to `false`.\n"
                },
                "customMetricsEnabled": {
                    "type": "boolean",
                    "description": "Enable custom metrics for your organization. Defaults to `false`.\n"
                },
                "hostFilters": {
                    "type": "string",
                    "description": "String of host tag(s) (in the form `key:value,key:value`) defines a filter that Datadog will use when collecting metrics from Azure. Limit the Azure instances that are pulled into Datadog by using tags. Only hosts that match one of the defined tags are imported into Datadog. e.x. `env:production,deploymentgroup:red` Defaults to `\"\"`.\n"
                },
                "resourceCollectionEnabled": {
                    "type": "boolean",
                    "description": "When enabled, Datadog collects metadata and configuration info from cloud resources (such as compute instances, databases, and load balancers) monitored by this app registration.\n"
                },
                "tenantName": {
                    "type": "string",
                    "description": "Your Azure Active Directory ID.\n"
                }
            },
            "requiredInputs": [
                "clientId",
                "clientSecret",
                "tenantName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Integration resources.\n",
                "properties": {
                    "appServicePlanFilters": {
                        "type": "string",
                        "description": "This comma-separated list of tags (in the form `key:value,key:value`) defines a filter that Datadog uses when collecting metrics from Azure App Service Plans. Only App Service Plans that match one of the defined tags are imported into Datadog. The rest, including the apps and functions running on them, are ignored. This also filters the metrics for any App or Function running on the App Service Plan(s). Defaults to `\"\"`.\n"
                    },
                    "automute": {
                        "type": "boolean",
                        "description": "Silence monitors for expected Azure VM shutdowns. Defaults to `false`.\n"
                    },
                    "clientId": {
                        "type": "string",
                        "description": "Your Azure web application ID.\n"
                    },
                    "clientSecret": {
                        "type": "string",
                        "description": "(Required for Initial Creation) Your Azure web application secret key.\n",
                        "secret": true
                    },
                    "containerAppFilters": {
                        "type": "string",
                        "description": "This comma-separated list of tags (in the form `key:value,key:value`) defines a filter that Datadog uses when collecting metrics from Azure Container Apps. Only Container Apps that match one of the defined tags are imported into Datadog. Defaults to `\"\"`.\n"
                    },
                    "cspmEnabled": {
                        "type": "boolean",
                        "description": "When enabled, Datadog’s Cloud Security Management product scans resource configurations monitored by this app registration.\nNote: This requires `resource_collection_enabled` to be set to true. Defaults to `false`.\n"
                    },
                    "customMetricsEnabled": {
                        "type": "boolean",
                        "description": "Enable custom metrics for your organization. Defaults to `false`.\n"
                    },
                    "hostFilters": {
                        "type": "string",
                        "description": "String of host tag(s) (in the form `key:value,key:value`) defines a filter that Datadog will use when collecting metrics from Azure. Limit the Azure instances that are pulled into Datadog by using tags. Only hosts that match one of the defined tags are imported into Datadog. e.x. `env:production,deploymentgroup:red` Defaults to `\"\"`.\n"
                    },
                    "resourceCollectionEnabled": {
                        "type": "boolean",
                        "description": "When enabled, Datadog collects metadata and configuration info from cloud resources (such as compute instances, databases, and load balancers) monitored by this app registration.\n"
                    },
                    "tenantName": {
                        "type": "string",
                        "description": "Your Azure Active Directory ID.\n"
                    }
                },
                "type": "object"
            }
        },
        "datadog:cloudflare/integrationAccount:IntegrationAccount": {
            "description": "Provides a Datadog IntegrationCloudflareAccount resource. This can be used to create and manage Datadog integration_cloudflare_account.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as datadog from \"@pulumi/datadog\";\n\n// Create new integration_cloudflare_account resource\nconst foo = new datadog.cloudflare.IntegrationAccount(\"foo\", {\n    apiKey: \"12345678910abc\",\n    email: \"test-email@example.com\",\n    name: \"test-name\",\n});\n```\n```python\nimport pulumi\nimport pulumi_datadog as datadog\n\n# Create new integration_cloudflare_account resource\nfoo = datadog.cloudflare.IntegrationAccount(\"foo\",\n    api_key=\"12345678910abc\",\n    email=\"test-email@example.com\",\n    name=\"test-name\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Datadog = Pulumi.Datadog;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    // Create new integration_cloudflare_account resource\n    var foo = new Datadog.Cloudflare.IntegrationAccount(\"foo\", new()\n    {\n        ApiKey = \"12345678910abc\",\n        Email = \"test-email@example.com\",\n        Name = \"test-name\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-datadog/sdk/v4/go/datadog/cloudflare\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t// Create new integration_cloudflare_account resource\n\t\t_, err := cloudflare.NewIntegrationAccount(ctx, \"foo\", \u0026cloudflare.IntegrationAccountArgs{\n\t\t\tApiKey: pulumi.String(\"12345678910abc\"),\n\t\t\tEmail:  pulumi.String(\"test-email@example.com\"),\n\t\t\tName:   pulumi.String(\"test-name\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.datadog.cloudflare.IntegrationAccount;\nimport com.pulumi.datadog.cloudflare.IntegrationAccountArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        // Create new integration_cloudflare_account resource\n        var foo = new IntegrationAccount(\"foo\", IntegrationAccountArgs.builder()\n            .apiKey(\"12345678910abc\")\n            .email(\"test-email@example.com\")\n            .name(\"test-name\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  # Create new integration_cloudflare_account resource\n  foo:\n    type: datadog:cloudflare:IntegrationAccount\n    properties:\n      apiKey: 12345678910abc\n      email: test-email@example.com\n      name: test-name\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\n```sh\n$ pulumi import datadog:cloudflare/integrationAccount:IntegrationAccount new_list \"\u003cID\u003e\"\n```\n\n",
            "properties": {
                "apiKey": {
                    "type": "string",
                    "description": "The API key (or token) for the Cloudflare account.\n",
                    "secret": true
                },
                "email": {
                    "type": "string",
                    "description": "The email associated with the Cloudflare account. If an API key is provided (and not a token), this field is also required.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the Cloudflare account.\n"
                }
            },
            "required": [
                "apiKey",
                "name"
            ],
            "inputProperties": {
                "apiKey": {
                    "type": "string",
                    "description": "The API key (or token) for the Cloudflare account.\n",
                    "secret": true
                },
                "email": {
                    "type": "string",
                    "description": "The email associated with the Cloudflare account. If an API key is provided (and not a token), this field is also required.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the Cloudflare account.\n"
                }
            },
            "requiredInputs": [
                "apiKey",
                "name"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering IntegrationAccount resources.\n",
                "properties": {
                    "apiKey": {
                        "type": "string",
                        "description": "The API key (or token) for the Cloudflare account.\n",
                        "secret": true
                    },
                    "email": {
                        "type": "string",
                        "description": "The email associated with the Cloudflare account. If an API key is provided (and not a token), this field is also required.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the Cloudflare account.\n"
                    }
                },
                "type": "object"
            }
        },
        "datadog:confluent/integrationAccount:IntegrationAccount": {
            "description": "Provides a Datadog IntegrationConfluentAccount resource. This can be used to create and manage Datadog integration_confluent_account.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as datadog from \"@pulumi/datadog\";\n\n// Create new integration_confluent_account resource\nconst foo = new datadog.confluent.IntegrationAccount(\"foo\", {\n    apiKey: \"TESTAPIKEY123\",\n    apiSecret: \"test-api-secret-123\",\n    tags: [\n        \"mytag\",\n        \"mytag2:myvalue\",\n    ],\n});\n```\n```python\nimport pulumi\nimport pulumi_datadog as datadog\n\n# Create new integration_confluent_account resource\nfoo = datadog.confluent.IntegrationAccount(\"foo\",\n    api_key=\"TESTAPIKEY123\",\n    api_secret=\"test-api-secret-123\",\n    tags=[\n        \"mytag\",\n        \"mytag2:myvalue\",\n    ])\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Datadog = Pulumi.Datadog;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    // Create new integration_confluent_account resource\n    var foo = new Datadog.Confluent.IntegrationAccount(\"foo\", new()\n    {\n        ApiKey = \"TESTAPIKEY123\",\n        ApiSecret = \"test-api-secret-123\",\n        Tags = new[]\n        {\n            \"mytag\",\n            \"mytag2:myvalue\",\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-datadog/sdk/v4/go/datadog/confluent\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t// Create new integration_confluent_account resource\n\t\t_, err := confluent.NewIntegrationAccount(ctx, \"foo\", \u0026confluent.IntegrationAccountArgs{\n\t\t\tApiKey:    pulumi.String(\"TESTAPIKEY123\"),\n\t\t\tApiSecret: pulumi.String(\"test-api-secret-123\"),\n\t\t\tTags: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"mytag\"),\n\t\t\t\tpulumi.String(\"mytag2:myvalue\"),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.datadog.confluent.IntegrationAccount;\nimport com.pulumi.datadog.confluent.IntegrationAccountArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        // Create new integration_confluent_account resource\n        var foo = new IntegrationAccount(\"foo\", IntegrationAccountArgs.builder()\n            .apiKey(\"TESTAPIKEY123\")\n            .apiSecret(\"test-api-secret-123\")\n            .tags(            \n                \"mytag\",\n                \"mytag2:myvalue\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  # Create new integration_confluent_account resource\n  foo:\n    type: datadog:confluent:IntegrationAccount\n    properties:\n      apiKey: TESTAPIKEY123\n      apiSecret: test-api-secret-123\n      tags:\n        - mytag\n        - mytag2:myvalue\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\nConfluent account ID can be retrieved using the ListConfluentAccounts endpoint\n\nhttps://docs.datadoghq.com/api/latest/confluent-cloud/#list-confluent-accounts\n\n```sh\n$ pulumi import datadog:confluent/integrationAccount:IntegrationAccount new_list \"\u003cID\u003e\"\n```\n\n",
            "properties": {
                "apiKey": {
                    "type": "string",
                    "description": "The API key associated with your Confluent account.\n"
                },
                "apiSecret": {
                    "type": "string",
                    "description": "The API secret associated with your Confluent account.\n",
                    "secret": true
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of strings representing tags. Can be a single key, or key-value pairs separated by a colon.\n"
                }
            },
            "required": [
                "apiKey",
                "apiSecret"
            ],
            "inputProperties": {
                "apiKey": {
                    "type": "string",
                    "description": "The API key associated with your Confluent account.\n"
                },
                "apiSecret": {
                    "type": "string",
                    "description": "The API secret associated with your Confluent account.\n",
                    "secret": true
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of strings representing tags. Can be a single key, or key-value pairs separated by a colon.\n"
                }
            },
            "requiredInputs": [
                "apiKey",
                "apiSecret"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering IntegrationAccount resources.\n",
                "properties": {
                    "apiKey": {
                        "type": "string",
                        "description": "The API key associated with your Confluent account.\n"
                    },
                    "apiSecret": {
                        "type": "string",
                        "description": "The API secret associated with your Confluent account.\n",
                        "secret": true
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of strings representing tags. Can be a single key, or key-value pairs separated by a colon.\n"
                    }
                },
                "type": "object"
            }
        },
        "datadog:confluent/integrationResource:IntegrationResource": {
            "description": "Provides a Datadog IntegrationConfluentResource resource. This can be used to create and manage Datadog integration_confluent_resource.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as datadog from \"@pulumi/datadog\";\n\nconst foo = new datadog.confluent.IntegrationAccount(\"foo\", {\n    apiKey: \"TESTAPIKEY123\",\n    apiSecret: \"test-api-secret-123\",\n    tags: [\n        \"mytag\",\n        \"mytag2:myvalue\",\n    ],\n});\n// Create new integration_confluent_resource resource\nconst fooIntegrationResource = new datadog.confluent.IntegrationResource(\"foo\", {\n    accountId: foo.id,\n    resourceId: \"123456\",\n    resourceType: \"kafka\",\n    tags: [\n        \"mytag\",\n        \"mytag2:myvalue\",\n    ],\n});\n```\n```python\nimport pulumi\nimport pulumi_datadog as datadog\n\nfoo = datadog.confluent.IntegrationAccount(\"foo\",\n    api_key=\"TESTAPIKEY123\",\n    api_secret=\"test-api-secret-123\",\n    tags=[\n        \"mytag\",\n        \"mytag2:myvalue\",\n    ])\n# Create new integration_confluent_resource resource\nfoo_integration_resource = datadog.confluent.IntegrationResource(\"foo\",\n    account_id=foo.id,\n    resource_id=\"123456\",\n    resource_type=\"kafka\",\n    tags=[\n        \"mytag\",\n        \"mytag2:myvalue\",\n    ])\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Datadog = Pulumi.Datadog;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var foo = new Datadog.Confluent.IntegrationAccount(\"foo\", new()\n    {\n        ApiKey = \"TESTAPIKEY123\",\n        ApiSecret = \"test-api-secret-123\",\n        Tags = new[]\n        {\n            \"mytag\",\n            \"mytag2:myvalue\",\n        },\n    });\n\n    // Create new integration_confluent_resource resource\n    var fooIntegrationResource = new Datadog.Confluent.IntegrationResource(\"foo\", new()\n    {\n        AccountId = foo.Id,\n        ResourceId = \"123456\",\n        ResourceType = \"kafka\",\n        Tags = new[]\n        {\n            \"mytag\",\n            \"mytag2:myvalue\",\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-datadog/sdk/v4/go/datadog/confluent\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tfoo, err := confluent.NewIntegrationAccount(ctx, \"foo\", \u0026confluent.IntegrationAccountArgs{\n\t\t\tApiKey:    pulumi.String(\"TESTAPIKEY123\"),\n\t\t\tApiSecret: pulumi.String(\"test-api-secret-123\"),\n\t\t\tTags: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"mytag\"),\n\t\t\t\tpulumi.String(\"mytag2:myvalue\"),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t// Create new integration_confluent_resource resource\n\t\t_, err = confluent.NewIntegrationResource(ctx, \"foo\", \u0026confluent.IntegrationResourceArgs{\n\t\t\tAccountId:    foo.ID(),\n\t\t\tResourceId:   pulumi.String(\"123456\"),\n\t\t\tResourceType: pulumi.String(\"kafka\"),\n\t\t\tTags: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"mytag\"),\n\t\t\t\tpulumi.String(\"mytag2:myvalue\"),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.datadog.confluent.IntegrationAccount;\nimport com.pulumi.datadog.confluent.IntegrationAccountArgs;\nimport com.pulumi.datadog.confluent.IntegrationResource;\nimport com.pulumi.datadog.confluent.IntegrationResourceArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var foo = new IntegrationAccount(\"foo\", IntegrationAccountArgs.builder()\n            .apiKey(\"TESTAPIKEY123\")\n            .apiSecret(\"test-api-secret-123\")\n            .tags(            \n                \"mytag\",\n                \"mytag2:myvalue\")\n            .build());\n\n        // Create new integration_confluent_resource resource\n        var fooIntegrationResource = new IntegrationResource(\"fooIntegrationResource\", IntegrationResourceArgs.builder()\n            .accountId(foo.id())\n            .resourceId(\"123456\")\n            .resourceType(\"kafka\")\n            .tags(            \n                \"mytag\",\n                \"mytag2:myvalue\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  foo:\n    type: datadog:confluent:IntegrationAccount\n    properties:\n      apiKey: TESTAPIKEY123\n      apiSecret: test-api-secret-123\n      tags:\n        - mytag\n        - mytag2:myvalue\n  # Create new integration_confluent_resource resource\n  fooIntegrationResource:\n    type: datadog:confluent:IntegrationResource\n    name: foo\n    properties:\n      accountId: ${foo.id}\n      resourceId: '123456'\n      resourceType: kafka\n      tags:\n        - mytag\n        - mytag2:myvalue\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\n```sh\n$ pulumi import datadog:confluent/integrationResource:IntegrationResource new_list \"confluent_account_id:confluent_resource_id\"\n```\n\n",
            "properties": {
                "accountId": {
                    "type": "string",
                    "description": "Confluent Account ID.\n"
                },
                "enableCustomMetrics": {
                    "type": "boolean",
                    "description": "Enable the `custom.consumer_lag_offset` metric, which contains extra metric tags. Defaults to `false`.\n"
                },
                "resourceId": {
                    "type": "string",
                    "description": "The ID associated with a Confluent resource.\n"
                },
                "resourceType": {
                    "type": "string",
                    "description": "The resource type of the Resource. Can be `kafka`, `connector`, `ksql`, or `schema_registry`.\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of strings representing tags. Can be a single key, or key-value pairs separated by a colon.\n"
                }
            },
            "required": [
                "accountId",
                "enableCustomMetrics",
                "resourceId"
            ],
            "inputProperties": {
                "accountId": {
                    "type": "string",
                    "description": "Confluent Account ID.\n"
                },
                "enableCustomMetrics": {
                    "type": "boolean",
                    "description": "Enable the `custom.consumer_lag_offset` metric, which contains extra metric tags. Defaults to `false`.\n"
                },
                "resourceId": {
                    "type": "string",
                    "description": "The ID associated with a Confluent resource.\n"
                },
                "resourceType": {
                    "type": "string",
                    "description": "The resource type of the Resource. Can be `kafka`, `connector`, `ksql`, or `schema_registry`.\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of strings representing tags. Can be a single key, or key-value pairs separated by a colon.\n"
                }
            },
            "requiredInputs": [
                "accountId",
                "resourceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering IntegrationResource resources.\n",
                "properties": {
                    "accountId": {
                        "type": "string",
                        "description": "Confluent Account ID.\n"
                    },
                    "enableCustomMetrics": {
                        "type": "boolean",
                        "description": "Enable the `custom.consumer_lag_offset` metric, which contains extra metric tags. Defaults to `false`.\n"
                    },
                    "resourceId": {
                        "type": "string",
                        "description": "The ID associated with a Confluent resource.\n"
                    },
                    "resourceType": {
                        "type": "string",
                        "description": "The resource type of the Resource. Can be `kafka`, `connector`, `ksql`, or `schema_registry`.\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of strings representing tags. Can be a single key, or key-value pairs separated by a colon.\n"
                    }
                },
                "type": "object"
            }
        },
        "datadog:fastly/integrationAccount:IntegrationAccount": {
            "description": "Provides a Datadog IntegrationFastlyAccount resource. This can be used to create and manage Datadog integration_fastly_account.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as datadog from \"@pulumi/datadog\";\n\n// Create new integration_fastly_account resource\nconst foo = new datadog.fastly.IntegrationAccount(\"foo\", {\n    apiKey: \"ABCDEFG123\",\n    name: \"test-name\",\n});\n```\n```python\nimport pulumi\nimport pulumi_datadog as datadog\n\n# Create new integration_fastly_account resource\nfoo = datadog.fastly.IntegrationAccount(\"foo\",\n    api_key=\"ABCDEFG123\",\n    name=\"test-name\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Datadog = Pulumi.Datadog;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    // Create new integration_fastly_account resource\n    var foo = new Datadog.Fastly.IntegrationAccount(\"foo\", new()\n    {\n        ApiKey = \"ABCDEFG123\",\n        Name = \"test-name\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-datadog/sdk/v4/go/datadog/fastly\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t// Create new integration_fastly_account resource\n\t\t_, err := fastly.NewIntegrationAccount(ctx, \"foo\", \u0026fastly.IntegrationAccountArgs{\n\t\t\tApiKey: pulumi.String(\"ABCDEFG123\"),\n\t\t\tName:   pulumi.String(\"test-name\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.datadog.fastly.IntegrationAccount;\nimport com.pulumi.datadog.fastly.IntegrationAccountArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        // Create new integration_fastly_account resource\n        var foo = new IntegrationAccount(\"foo\", IntegrationAccountArgs.builder()\n            .apiKey(\"ABCDEFG123\")\n            .name(\"test-name\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  # Create new integration_fastly_account resource\n  foo:\n    type: datadog:fastly:IntegrationAccount\n    properties:\n      apiKey: ABCDEFG123\n      name: test-name\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\n```sh\n$ pulumi import datadog:fastly/integrationAccount:IntegrationAccount new_list \"a8f5f167f44f4964e6c998dee827110c\"\n```\n\n",
            "properties": {
                "apiKey": {
                    "type": "string",
                    "description": "The API key for the Fastly account.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the Fastly account.\n"
                }
            },
            "required": [
                "apiKey",
                "name"
            ],
            "inputProperties": {
                "apiKey": {
                    "type": "string",
                    "description": "The API key for the Fastly account.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the Fastly account.\n"
                }
            },
            "requiredInputs": [
                "apiKey",
                "name"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering IntegrationAccount resources.\n",
                "properties": {
                    "apiKey": {
                        "type": "string",
                        "description": "The API key for the Fastly account.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the Fastly account.\n"
                    }
                },
                "type": "object"
            }
        },
        "datadog:fastly/integrationService:IntegrationService": {
            "description": "Provides a Datadog IntegrationFastlyService resource. This can be used to create and manage Datadog integration_fastly_service.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as datadog from \"@pulumi/datadog\";\n\nconst foo = new datadog.fastly.IntegrationAccount(\"foo\", {\n    apiKey: \"ABCDEFG123\",\n    name: \"test-name\",\n});\n// Create new integration_fastly_service resource\nconst fooIntegrationService = new datadog.fastly.IntegrationService(\"foo\", {\n    accountId: foo.id,\n    tags: [\n        \"mytag\",\n        \"mytag2:myvalue\",\n    ],\n    serviceId: \"my-service-id\",\n});\n```\n```python\nimport pulumi\nimport pulumi_datadog as datadog\n\nfoo = datadog.fastly.IntegrationAccount(\"foo\",\n    api_key=\"ABCDEFG123\",\n    name=\"test-name\")\n# Create new integration_fastly_service resource\nfoo_integration_service = datadog.fastly.IntegrationService(\"foo\",\n    account_id=foo.id,\n    tags=[\n        \"mytag\",\n        \"mytag2:myvalue\",\n    ],\n    service_id=\"my-service-id\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Datadog = Pulumi.Datadog;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var foo = new Datadog.Fastly.IntegrationAccount(\"foo\", new()\n    {\n        ApiKey = \"ABCDEFG123\",\n        Name = \"test-name\",\n    });\n\n    // Create new integration_fastly_service resource\n    var fooIntegrationService = new Datadog.Fastly.IntegrationService(\"foo\", new()\n    {\n        AccountId = foo.Id,\n        Tags = new[]\n        {\n            \"mytag\",\n            \"mytag2:myvalue\",\n        },\n        ServiceId = \"my-service-id\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-datadog/sdk/v4/go/datadog/fastly\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tfoo, err := fastly.NewIntegrationAccount(ctx, \"foo\", \u0026fastly.IntegrationAccountArgs{\n\t\t\tApiKey: pulumi.String(\"ABCDEFG123\"),\n\t\t\tName:   pulumi.String(\"test-name\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t// Create new integration_fastly_service resource\n\t\t_, err = fastly.NewIntegrationService(ctx, \"foo\", \u0026fastly.IntegrationServiceArgs{\n\t\t\tAccountId: foo.ID(),\n\t\t\tTags: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"mytag\"),\n\t\t\t\tpulumi.String(\"mytag2:myvalue\"),\n\t\t\t},\n\t\t\tServiceId: pulumi.String(\"my-service-id\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.datadog.fastly.IntegrationAccount;\nimport com.pulumi.datadog.fastly.IntegrationAccountArgs;\nimport com.pulumi.datadog.fastly.IntegrationService;\nimport com.pulumi.datadog.fastly.IntegrationServiceArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var foo = new IntegrationAccount(\"foo\", IntegrationAccountArgs.builder()\n            .apiKey(\"ABCDEFG123\")\n            .name(\"test-name\")\n            .build());\n\n        // Create new integration_fastly_service resource\n        var fooIntegrationService = new IntegrationService(\"fooIntegrationService\", IntegrationServiceArgs.builder()\n            .accountId(foo.id())\n            .tags(            \n                \"mytag\",\n                \"mytag2:myvalue\")\n            .serviceId(\"my-service-id\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  foo:\n    type: datadog:fastly:IntegrationAccount\n    properties:\n      apiKey: ABCDEFG123\n      name: test-name\n  # Create new integration_fastly_service resource\n  fooIntegrationService:\n    type: datadog:fastly:IntegrationService\n    name: foo\n    properties:\n      accountId: ${foo.id}\n      tags:\n        - mytag\n        - mytag2:myvalue\n      serviceId: my-service-id\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\n```sh\n$ pulumi import datadog:fastly/integrationService:IntegrationService new_list \"account-id:service-id\"\n```\n\n",
            "properties": {
                "accountId": {
                    "type": "string",
                    "description": "Fastly Account id.\n"
                },
                "serviceId": {
                    "type": "string",
                    "description": "The ID of the Fastly service.\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tags for the Fastly service.\n"
                }
            },
            "required": [
                "serviceId"
            ],
            "inputProperties": {
                "accountId": {
                    "type": "string",
                    "description": "Fastly Account id.\n"
                },
                "serviceId": {
                    "type": "string",
                    "description": "The ID of the Fastly service.\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tags for the Fastly service.\n"
                }
            },
            "requiredInputs": [
                "serviceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering IntegrationService resources.\n",
                "properties": {
                    "accountId": {
                        "type": "string",
                        "description": "Fastly Account id.\n"
                    },
                    "serviceId": {
                        "type": "string",
                        "description": "The ID of the Fastly service.\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of tags for the Fastly service.\n"
                    }
                },
                "type": "object"
            }
        },
        "datadog:gcp/integration:Integration": {
            "description": "This resource is deprecated—use the `datadog.gcp.IntegrationSts` resource instead. Provides a Datadog - Google Cloud Platform integration resource. This can be used to create and manage Datadog - Google Cloud Platform integration.\n\n## Import\n\nGoogle Cloud Platform integrations can be imported using their project ID, e.g.\n\n```sh\n$ pulumi import datadog:gcp/integration:Integration awesome_gcp_project_integration project_id\n```\n\n",
            "properties": {
                "automute": {
                    "type": "boolean",
                    "description": "Silence monitors for expected GCE instance shutdowns. Defaults to `false`.\n"
                },
                "clientEmail": {
                    "type": "string",
                    "description": "Your email found in your JSON service account key.\n"
                },
                "clientId": {
                    "type": "string",
                    "description": "Your ID found in your JSON service account key.\n"
                },
                "cspmResourceCollectionEnabled": {
                    "type": "boolean",
                    "description": "Whether Datadog collects cloud security posture management resources from your GCP project. If enabled, requires `resource_collection_enabled` to also be enabled. Defaults to `false`.\n"
                },
                "hostFilters": {
                    "type": "string",
                    "description": "Limit the GCE instances that are pulled into Datadog by using tags. Only hosts that match one of the defined tags are imported into Datadog. Defaults to `\"\"`.\n"
                },
                "isSecurityCommandCenterEnabled": {
                    "type": "boolean",
                    "description": "When enabled, Datadog will attempt to collect Security Command Center Findings. Note: This requires additional permissions on the service account. Defaults to `false`.\n"
                },
                "privateKey": {
                    "type": "string",
                    "description": "Your private key name found in your JSON service account key.\n",
                    "secret": true
                },
                "privateKeyId": {
                    "type": "string",
                    "description": "Your private key ID found in your JSON service account key.\n"
                },
                "projectId": {
                    "type": "string",
                    "description": "Your Google Cloud project ID found in your JSON service account key.\n"
                },
                "resourceCollectionEnabled": {
                    "type": "boolean",
                    "description": "When enabled, Datadog scans for all resources in your GCP environment.\n"
                }
            },
            "required": [
                "automute",
                "clientEmail",
                "clientId",
                "cspmResourceCollectionEnabled",
                "hostFilters",
                "isSecurityCommandCenterEnabled",
                "privateKey",
                "privateKeyId",
                "projectId",
                "resourceCollectionEnabled"
            ],
            "inputProperties": {
                "automute": {
                    "type": "boolean",
                    "description": "Silence monitors for expected GCE instance shutdowns. Defaults to `false`.\n"
                },
                "clientEmail": {
                    "type": "string",
                    "description": "Your email found in your JSON service account key.\n"
                },
                "clientId": {
                    "type": "string",
                    "description": "Your ID found in your JSON service account key.\n"
                },
                "cspmResourceCollectionEnabled": {
                    "type": "boolean",
                    "description": "Whether Datadog collects cloud security posture management resources from your GCP project. If enabled, requires `resource_collection_enabled` to also be enabled. Defaults to `false`.\n"
                },
                "hostFilters": {
                    "type": "string",
                    "description": "Limit the GCE instances that are pulled into Datadog by using tags. Only hosts that match one of the defined tags are imported into Datadog. Defaults to `\"\"`.\n"
                },
                "isSecurityCommandCenterEnabled": {
                    "type": "boolean",
                    "description": "When enabled, Datadog will attempt to collect Security Command Center Findings. Note: This requires additional permissions on the service account. Defaults to `false`.\n"
                },
                "privateKey": {
                    "type": "string",
                    "description": "Your private key name found in your JSON service account key.\n",
                    "secret": true
                },
                "privateKeyId": {
                    "type": "string",
                    "description": "Your private key ID found in your JSON service account key.\n"
                },
                "projectId": {
                    "type": "string",
                    "description": "Your Google Cloud project ID found in your JSON service account key.\n"
                },
                "resourceCollectionEnabled": {
                    "type": "boolean",
                    "description": "When enabled, Datadog scans for all resources in your GCP environment.\n"
                }
            },
            "requiredInputs": [
                "clientEmail",
                "clientId",
                "privateKey",
                "privateKeyId",
                "projectId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Integration resources.\n",
                "properties": {
                    "automute": {
                        "type": "boolean",
                        "description": "Silence monitors for expected GCE instance shutdowns. Defaults to `false`.\n"
                    },
                    "clientEmail": {
                        "type": "string",
                        "description": "Your email found in your JSON service account key.\n"
                    },
                    "clientId": {
                        "type": "string",
                        "description": "Your ID found in your JSON service account key.\n"
                    },
                    "cspmResourceCollectionEnabled": {
                        "type": "boolean",
                        "description": "Whether Datadog collects cloud security posture management resources from your GCP project. If enabled, requires `resource_collection_enabled` to also be enabled. Defaults to `false`.\n"
                    },
                    "hostFilters": {
                        "type": "string",
                        "description": "Limit the GCE instances that are pulled into Datadog by using tags. Only hosts that match one of the defined tags are imported into Datadog. Defaults to `\"\"`.\n"
                    },
                    "isSecurityCommandCenterEnabled": {
                        "type": "boolean",
                        "description": "When enabled, Datadog will attempt to collect Security Command Center Findings. Note: This requires additional permissions on the service account. Defaults to `false`.\n"
                    },
                    "privateKey": {
                        "type": "string",
                        "description": "Your private key name found in your JSON service account key.\n",
                        "secret": true
                    },
                    "privateKeyId": {
                        "type": "string",
                        "description": "Your private key ID found in your JSON service account key.\n"
                    },
                    "projectId": {
                        "type": "string",
                        "description": "Your Google Cloud project ID found in your JSON service account key.\n"
                    },
                    "resourceCollectionEnabled": {
                        "type": "boolean",
                        "description": "When enabled, Datadog scans for all resources in your GCP environment.\n"
                    }
                },
                "type": "object"
            }
        },
        "datadog:gcp/integrationSts:IntegrationSts": {
            "description": "Provides a Datadog Integration GCP Sts resource. This can be used to create and manage Datadog - Google Cloud Platform integration.\n\n## Import\n\n```sh\n$ pulumi import datadog:gcp/integrationSts:IntegrationSts foo \"9c303af3-b963-45e0-8c8f-469b9e1a213f\"\n```\n\n",
            "properties": {
                "accountTags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Tags to be associated with GCP metrics and service checks from your account.\n"
                },
                "automute": {
                    "type": "boolean",
                    "description": "Silence monitors for expected GCE instance shutdowns.\n"
                },
                "clientEmail": {
                    "type": "string",
                    "description": "Your service account email address.\n"
                },
                "delegateAccountEmail": {
                    "type": "string",
                    "description": "Datadog's STS Delegate Email.\n"
                },
                "hostFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Your Host Filters.\n"
                },
                "isCspmEnabled": {
                    "type": "boolean",
                    "description": "Whether Datadog collects cloud security posture management resources from your GCP project. If enabled, requires `resource_collection_enabled` to also be enabled.\n"
                },
                "isSecurityCommandCenterEnabled": {
                    "type": "boolean",
                    "description": "When enabled, Datadog will attempt to collect Security Command Center Findings. Note: This requires additional permissions on the service account. Defaults to `false`.\n"
                },
                "resourceCollectionEnabled": {
                    "type": "boolean",
                    "description": "When enabled, Datadog scans for all resources in your GCP environment.\n"
                }
            },
            "required": [
                "automute",
                "clientEmail",
                "delegateAccountEmail",
                "isCspmEnabled",
                "isSecurityCommandCenterEnabled",
                "resourceCollectionEnabled"
            ],
            "inputProperties": {
                "accountTags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Tags to be associated with GCP metrics and service checks from your account.\n"
                },
                "automute": {
                    "type": "boolean",
                    "description": "Silence monitors for expected GCE instance shutdowns.\n"
                },
                "clientEmail": {
                    "type": "string",
                    "description": "Your service account email address.\n"
                },
                "hostFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Your Host Filters.\n"
                },
                "isCspmEnabled": {
                    "type": "boolean",
                    "description": "Whether Datadog collects cloud security posture management resources from your GCP project. If enabled, requires `resource_collection_enabled` to also be enabled.\n"
                },
                "isSecurityCommandCenterEnabled": {
                    "type": "boolean",
                    "description": "When enabled, Datadog will attempt to collect Security Command Center Findings. Note: This requires additional permissions on the service account. Defaults to `false`.\n"
                },
                "resourceCollectionEnabled": {
                    "type": "boolean",
                    "description": "When enabled, Datadog scans for all resources in your GCP environment.\n"
                }
            },
            "requiredInputs": [
                "clientEmail"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering IntegrationSts resources.\n",
                "properties": {
                    "accountTags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Tags to be associated with GCP metrics and service checks from your account.\n"
                    },
                    "automute": {
                        "type": "boolean",
                        "description": "Silence monitors for expected GCE instance shutdowns.\n"
                    },
                    "clientEmail": {
                        "type": "string",
                        "description": "Your service account email address.\n"
                    },
                    "delegateAccountEmail": {
                        "type": "string",
                        "description": "Datadog's STS Delegate Email.\n"
                    },
                    "hostFilters": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Your Host Filters.\n"
                    },
                    "isCspmEnabled": {
                        "type": "boolean",
                        "description": "Whether Datadog collects cloud security posture management resources from your GCP project. If enabled, requires `resource_collection_enabled` to also be enabled.\n"
                    },
                    "isSecurityCommandCenterEnabled": {
                        "type": "boolean",
                        "description": "When enabled, Datadog will attempt to collect Security Command Center Findings. Note: This requires additional permissions on the service account. Defaults to `false`.\n"
                    },
                    "resourceCollectionEnabled": {
                        "type": "boolean",
                        "description": "When enabled, Datadog scans for all resources in your GCP environment.\n"
                    }
                },
                "type": "object"
            }
        },
        "datadog:index/apiKey:ApiKey": {
            "description": "Provides a Datadog API Key resource. This can be used to create and manage Datadog API Keys. Import functionality for this resource is deprecated and will be removed in a future release with prior notice. Securely store your API keys using a secret management system or use this resource to create and manage new API keys.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as datadog from \"@pulumi/datadog\";\n\n// Create a new Datadog API Key\nconst foo = new datadog.ApiKey(\"foo\", {name: \"foo-application\"});\n```\n```python\nimport pulumi\nimport pulumi_datadog as datadog\n\n# Create a new Datadog API Key\nfoo = datadog.ApiKey(\"foo\", name=\"foo-application\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Datadog = Pulumi.Datadog;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    // Create a new Datadog API Key\n    var foo = new Datadog.ApiKey(\"foo\", new()\n    {\n        Name = \"foo-application\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-datadog/sdk/v4/go/datadog\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t// Create a new Datadog API Key\n\t\t_, err := datadog.NewApiKey(ctx, \"foo\", \u0026datadog.ApiKeyArgs{\n\t\t\tName: pulumi.String(\"foo-application\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.datadog.ApiKey;\nimport com.pulumi.datadog.ApiKeyArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        // Create a new Datadog API Key\n        var foo = new ApiKey(\"foo\", ApiKeyArgs.builder()\n            .name(\"foo-application\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  # Create a new Datadog API Key\n  foo:\n    type: datadog:ApiKey\n    properties:\n      name: foo-application\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\n```sh\n$ pulumi import datadog:index/apiKey:ApiKey foo 11111111-2222-3333-4444-555555555555\n```\n\n",
            "properties": {
                "key": {
                    "type": "string",
                    "description": "The value of the API Key.\n",
                    "secret": true
                },
                "name": {
                    "type": "string",
                    "description": "Name for API Key.\n"
                }
            },
            "required": [
                "key",
                "name"
            ],
            "inputProperties": {
                "name": {
                    "type": "string",
                    "description": "Name for API Key.\n"
                }
            },
            "requiredInputs": [
                "name"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ApiKey resources.\n",
                "properties": {
                    "key": {
                        "type": "string",
                        "description": "The value of the API Key.\n",
                        "secret": true
                    },
                    "name": {
                        "type": "string",
                        "description": "Name for API Key.\n"
                    }
                },
                "type": "object"
            }
        },
        "datadog:index/apmRetentionFilter:ApmRetentionFilter": {
            "description": "The object describing the configuration of the retention filter to create/update.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.datadog.ApmRetentionFilter;\nimport com.pulumi.datadog.ApmRetentionFilterArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        // Create APM retention filter\n        var foo = new ApmRetentionFilter(\"foo\", ApmRetentionFilterArgs.builder()\n            .name(\"Sample order\")\n            .rate(\"1.0\")\n            .filter(ApmRetentionFilterFilterArgs.builder()\n                .query(\"service:sample AND env:production AND @http.method:GET AND app:sampleapp AND @http.status_code:200 AND @duration:\u003e600000000\")\n                .build())\n            .filterType(\"spans-sampling-processor\")\n            .enabled(false)\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  # Create APM retention filter\n  foo:\n    type: datadog:ApmRetentionFilter\n    properties:\n      name: Sample order\n      rate: '1.0'\n      filter:\n        - query: service:sample AND env:production AND @http.method:GET AND app:sampleapp AND @http.status_code:200 AND @duration:\u003e600000000\n      filterType: spans-sampling-processor\n      enabled: false\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\nImport existing APM retention filter \n\n```sh\n$ pulumi import datadog:index/apmRetentionFilter:ApmRetentionFilter foo \u003cfilter_id\u003e\n```\n\n",
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "the status of the retention filter.\n"
                },
                "filter": {
                    "$ref": "#/types/datadog:index/ApmRetentionFilterFilter:ApmRetentionFilterFilter",
                    "description": "The spans filter. Spans matching this filter will be indexed and stored.\n"
                },
                "filterType": {
                    "type": "string",
                    "description": "The type of the retention filter, currently only spans-processing-sampling is available. Valid values are `spans-sampling-processor`.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the retention filter.\n"
                },
                "rate": {
                    "type": "string",
                    "description": "Sample rate to apply to spans going through this retention filter as a string, a value of 1.0 keeps all spans matching the query.\n"
                }
            },
            "required": [
                "enabled",
                "filterType",
                "name",
                "rate"
            ],
            "inputProperties": {
                "enabled": {
                    "type": "boolean",
                    "description": "the status of the retention filter.\n"
                },
                "filter": {
                    "$ref": "#/types/datadog:index/ApmRetentionFilterFilter:ApmRetentionFilterFilter",
                    "description": "The spans filter. Spans matching this filter will be indexed and stored.\n"
                },
                "filterType": {
                    "type": "string",
                    "description": "The type of the retention filter, currently only spans-processing-sampling is available. Valid values are `spans-sampling-processor`.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the retention filter.\n"
                },
                "rate": {
                    "type": "string",
                    "description": "Sample rate to apply to spans going through this retention filter as a string, a value of 1.0 keeps all spans matching the query.\n"
                }
            },
            "requiredInputs": [
                "enabled",
                "filterType",
                "name",
                "rate"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ApmRetentionFilter resources.\n",
                "properties": {
                    "enabled": {
                        "type": "boolean",
                        "description": "the status of the retention filter.\n"
                    },
                    "filter": {
                        "$ref": "#/types/datadog:index/ApmRetentionFilterFilter:ApmRetentionFilterFilter",
                        "description": "The spans filter. Spans matching this filter will be indexed and stored.\n"
                    },
                    "filterType": {
                        "type": "string",
                        "description": "The type of the retention filter, currently only spans-processing-sampling is available. Valid values are `spans-sampling-processor`.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the retention filter.\n"
                    },
                    "rate": {
                        "type": "string",
                        "description": "Sample rate to apply to spans going through this retention filter as a string, a value of 1.0 keeps all spans matching the query.\n"
                    }
                },
                "type": "object"
            }
        },
        "datadog:index/apmRetentionFilterOrder:ApmRetentionFilterOrder": {
            "description": "Provides a Datadog [APM Retention Filters API](https://docs.datadoghq.com/api/v2/apm-retention-filters/) resource, which is used to manage Datadog APM retention filters order.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.datadog.ApmRetentionFilter;\nimport com.pulumi.datadog.ApmRetentionFilterArgs;\nimport com.pulumi.datadog.ApmRetentionFilterOrder;\nimport com.pulumi.datadog.ApmRetentionFilterOrderArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        // Create APM retention filter\n        var foo = new ApmRetentionFilter(\"foo\", ApmRetentionFilterArgs.builder()\n            .name(\"Sample order\")\n            .rate(\"1.0\")\n            .filter(ApmRetentionFilterFilterArgs.builder()\n                .query(\"*\")\n                .build())\n            .filterType(\"spans-sampling-processor\")\n            .enabled(false)\n            .build());\n\n        // Create APM reention filter order\n        var bar = new ApmRetentionFilterOrder(\"bar\", ApmRetentionFilterOrderArgs.builder()\n            .filterIds(foo.id())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  # Create APM retention filter\n  foo:\n    type: datadog:ApmRetentionFilter\n    properties:\n      name: Sample order\n      rate: '1.0'\n      filter:\n        - query: '*'\n      filterType: spans-sampling-processor\n      enabled: false\n  # Create APM reention filter order\n  bar:\n    type: datadog:ApmRetentionFilterOrder\n    properties:\n      filterIds:\n        - ${foo.id}\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\nImport existing APM retention filter order\n\nNote: Value of \u003cfoo\u003e can be anything as this id is not stored by the resource\n\n```sh\n$ pulumi import datadog:index/apmRetentionFilterOrder:ApmRetentionFilterOrder bar \u003cfoo\u003e\n```\n\n",
            "properties": {
                "filterIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The filter IDs list. The order of filters IDs in this attribute defines the overall APM retention filters order.\n"
                }
            },
            "required": [
                "filterIds"
            ],
            "inputProperties": {
                "filterIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The filter IDs list. The order of filters IDs in this attribute defines the overall APM retention filters order.\n"
                }
            },
            "requiredInputs": [
                "filterIds"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ApmRetentionFilterOrder resources.\n",
                "properties": {
                    "filterIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The filter IDs list. The order of filters IDs in this attribute defines the overall APM retention filters order.\n"
                    }
                },
                "type": "object"
            }
        },
        "datadog:index/applicationKey:ApplicationKey": {
            "description": "Provides a Datadog Application Key resource. This can be used to create and manage Datadog Application Keys. Import functionality for this resource is deprecated and will be removed in a future release with prior notice. Securely store your application keys using a secret management system or use this resource to create and manage new application keys.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as datadog from \"@pulumi/datadog\";\n\n// Create a new Datadog Application Key\nconst foo = new datadog.ApplicationKey(\"foo\", {name: \"foo-application\"});\n```\n```python\nimport pulumi\nimport pulumi_datadog as datadog\n\n# Create a new Datadog Application Key\nfoo = datadog.ApplicationKey(\"foo\", name=\"foo-application\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Datadog = Pulumi.Datadog;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    // Create a new Datadog Application Key\n    var foo = new Datadog.ApplicationKey(\"foo\", new()\n    {\n        Name = \"foo-application\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-datadog/sdk/v4/go/datadog\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t// Create a new Datadog Application Key\n\t\t_, err := datadog.NewApplicationKey(ctx, \"foo\", \u0026datadog.ApplicationKeyArgs{\n\t\t\tName: pulumi.String(\"foo-application\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.datadog.ApplicationKey;\nimport com.pulumi.datadog.ApplicationKeyArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        // Create a new Datadog Application Key\n        var foo = new ApplicationKey(\"foo\", ApplicationKeyArgs.builder()\n            .name(\"foo-application\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  # Create a new Datadog Application Key\n  foo:\n    type: datadog:ApplicationKey\n    properties:\n      name: foo-application\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\n```sh\n$ pulumi import datadog:index/applicationKey:ApplicationKey foo 11111111-2222-3333-4444-555555555555\n```\n\n",
            "properties": {
                "key": {
                    "type": "string",
                    "description": "The value of the Application Key.\n",
                    "secret": true
                },
                "name": {
                    "type": "string",
                    "description": "Name for Application Key.\n"
                }
            },
            "required": [
                "key",
                "name"
            ],
            "inputProperties": {
                "name": {
                    "type": "string",
                    "description": "Name for Application Key.\n"
                }
            },
            "requiredInputs": [
                "name"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ApplicationKey resources.\n",
                "properties": {
                    "key": {
                        "type": "string",
                        "description": "The value of the Application Key.\n",
                        "secret": true
                    },
                    "name": {
                        "type": "string",
                        "description": "Name for Application Key.\n"
                    }
                },
                "type": "object"
            }
        },
        "datadog:index/authnMapping:AuthnMapping": {
            "description": "Provides a Datadog AuthN Mappings resource. This feature lets you automatically assign roles to users based on their SAML attributes.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as datadog from \"@pulumi/datadog\";\n\n// Source the role\nconst roRole = datadog.getRole({\n    filter: \"Datadog Read Only Role\",\n});\n// Create a new AuthN mapping\nconst devRoRoleMapping = new datadog.AuthnMapping(\"dev_ro_role_mapping\", {\n    key: \"Member-of\",\n    value: \"Development\",\n    role: roRole.then(roRole =\u003e roRole.id),\n});\n```\n```python\nimport pulumi\nimport pulumi_datadog as datadog\n\n# Source the role\nro_role = datadog.get_role(filter=\"Datadog Read Only Role\")\n# Create a new AuthN mapping\ndev_ro_role_mapping = datadog.AuthnMapping(\"dev_ro_role_mapping\",\n    key=\"Member-of\",\n    value=\"Development\",\n    role=ro_role.id)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Datadog = Pulumi.Datadog;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    // Source the role\n    var roRole = Datadog.GetRole.Invoke(new()\n    {\n        Filter = \"Datadog Read Only Role\",\n    });\n\n    // Create a new AuthN mapping\n    var devRoRoleMapping = new Datadog.AuthnMapping(\"dev_ro_role_mapping\", new()\n    {\n        Key = \"Member-of\",\n        Value = \"Development\",\n        Role = roRole.Apply(getRoleResult =\u003e getRoleResult.Id),\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-datadog/sdk/v4/go/datadog\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t// Source the role\n\t\troRole, err := datadog.LookupRole(ctx, \u0026datadog.LookupRoleArgs{\n\t\t\tFilter: \"Datadog Read Only Role\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t// Create a new AuthN mapping\n\t\t_, err = datadog.NewAuthnMapping(ctx, \"dev_ro_role_mapping\", \u0026datadog.AuthnMappingArgs{\n\t\t\tKey:   pulumi.String(\"Member-of\"),\n\t\t\tValue: pulumi.String(\"Development\"),\n\t\t\tRole:  pulumi.String(roRole.Id),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.datadog.DatadogFunctions;\nimport com.pulumi.datadog.inputs.GetRoleArgs;\nimport com.pulumi.datadog.AuthnMapping;\nimport com.pulumi.datadog.AuthnMappingArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        // Source the role\n        final var roRole = DatadogFunctions.getRole(GetRoleArgs.builder()\n            .filter(\"Datadog Read Only Role\")\n            .build());\n\n        // Create a new AuthN mapping\n        var devRoRoleMapping = new AuthnMapping(\"devRoRoleMapping\", AuthnMappingArgs.builder()\n            .key(\"Member-of\")\n            .value(\"Development\")\n            .role(roRole.applyValue(getRoleResult -\u003e getRoleResult.id()))\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  # Create a new AuthN mapping\n  devRoRoleMapping:\n    type: datadog:AuthnMapping\n    name: dev_ro_role_mapping\n    properties:\n      key: Member-of\n      value: Development\n      role: ${roRole.id}\nvariables:\n  # Source the role\n  roRole:\n    fn::invoke:\n      Function: datadog:getRole\n      Arguments:\n        filter: Datadog Read Only Role\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\nAuthN mappings can be imported using their ID, e.g.\n\n```sh\n$ pulumi import datadog:index/authnMapping:AuthnMapping dev_ro_mapping 000000-0000-0000-0000-000000000000\n```\n\n",
            "properties": {
                "key": {
                    "type": "string",
                    "description": "Identity provider key.\n"
                },
                "role": {
                    "type": "string",
                    "description": "The ID of a role to attach to all users with the corresponding key and value. Cannot be used in conjunction with `team`.\n"
                },
                "team": {
                    "type": "string",
                    "description": "The ID of a team to add all users with the corresponding key and value to. Cannot be used in conjunction with `role`.\n"
                },
                "value": {
                    "type": "string",
                    "description": "Identity provider value.\n"
                }
            },
            "required": [
                "key",
                "value"
            ],
            "inputProperties": {
                "key": {
                    "type": "string",
                    "description": "Identity provider key.\n"
                },
                "role": {
                    "type": "string",
                    "description": "The ID of a role to attach to all users with the corresponding key and value. Cannot be used in conjunction with `team`.\n"
                },
                "team": {
                    "type": "string",
                    "description": "The ID of a team to add all users with the corresponding key and value to. Cannot be used in conjunction with `role`.\n"
                },
                "value": {
                    "type": "string",
                    "description": "Identity provider value.\n"
                }
            },
            "requiredInputs": [
                "key",
                "value"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AuthnMapping resources.\n",
                "properties": {
                    "key": {
                        "type": "string",
                        "description": "Identity provider key.\n"
                    },
                    "role": {
                        "type": "string",
                        "description": "The ID of a role to attach to all users with the corresponding key and value. Cannot be used in conjunction with `team`.\n"
                    },
                    "team": {
                        "type": "string",
                        "description": "The ID of a team to add all users with the corresponding key and value to. Cannot be used in conjunction with `role`.\n"
                    },
                    "value": {
                        "type": "string",
                        "description": "Identity provider value.\n"
                    }
                },
                "type": "object"
            }
        },
        "datadog:index/childOrganization:ChildOrganization": {
            "description": "Provides a Datadog Child Organization resource. This can be used to create Datadog Child Organizations. To manage created organization use `datadog.OrganizationSettings`.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as datadog from \"@pulumi/datadog\";\n\n// Create a new Datadog Child Organization\nconst organization = new datadog.ChildOrganization(\"organization\", {name: \"foo-organization\"});\n```\n```python\nimport pulumi\nimport pulumi_datadog as datadog\n\n# Create a new Datadog Child Organization\norganization = datadog.ChildOrganization(\"organization\", name=\"foo-organization\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Datadog = Pulumi.Datadog;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    // Create a new Datadog Child Organization\n    var organization = new Datadog.ChildOrganization(\"organization\", new()\n    {\n        Name = \"foo-organization\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-datadog/sdk/v4/go/datadog\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t// Create a new Datadog Child Organization\n\t\t_, err := datadog.NewChildOrganization(ctx, \"organization\", \u0026datadog.ChildOrganizationArgs{\n\t\t\tName: pulumi.String(\"foo-organization\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.datadog.ChildOrganization;\nimport com.pulumi.datadog.ChildOrganizationArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        // Create a new Datadog Child Organization\n        var organization = new ChildOrganization(\"organization\", ChildOrganizationArgs.builder()\n            .name(\"foo-organization\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  # Create a new Datadog Child Organization\n  organization:\n    type: datadog:ChildOrganization\n    properties:\n      name: foo-organization\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "properties": {
                "apiKeys": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/ChildOrganizationApiKey:ChildOrganizationApiKey"
                    },
                    "description": "Datadog API key.\n"
                },
                "applicationKeys": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/ChildOrganizationApplicationKey:ChildOrganizationApplicationKey"
                    },
                    "description": "An application key with its associated metadata.\n"
                },
                "description": {
                    "type": "string",
                    "description": "Description of the organization.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name for Child Organization after creation.\n"
                },
                "publicId": {
                    "type": "string",
                    "description": "The `public_id` of the organization you are operating within.\n"
                },
                "settings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/ChildOrganizationSetting:ChildOrganizationSetting"
                    },
                    "description": "Organization settings\n"
                },
                "users": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/ChildOrganizationUser:ChildOrganizationUser"
                    },
                    "description": "Information about a user\n"
                }
            },
            "required": [
                "apiKeys",
                "applicationKeys",
                "description",
                "name",
                "publicId",
                "settings",
                "users"
            ],
            "inputProperties": {
                "name": {
                    "type": "string",
                    "description": "Name for Child Organization after creation.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "name"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ChildOrganization resources.\n",
                "properties": {
                    "apiKeys": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/datadog:index/ChildOrganizationApiKey:ChildOrganizationApiKey"
                        },
                        "description": "Datadog API key.\n"
                    },
                    "applicationKeys": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/datadog:index/ChildOrganizationApplicationKey:ChildOrganizationApplicationKey"
                        },
                        "description": "An application key with its associated metadata.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "Description of the organization.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name for Child Organization after creation.\n",
                        "willReplaceOnChanges": true
                    },
                    "publicId": {
                        "type": "string",
                        "description": "The `public_id` of the organization you are operating within.\n"
                    },
                    "settings": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/datadog:index/ChildOrganizationSetting:ChildOrganizationSetting"
                        },
                        "description": "Organization settings\n"
                    },
                    "users": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/datadog:index/ChildOrganizationUser:ChildOrganizationUser"
                        },
                        "description": "Information about a user\n"
                    }
                },
                "type": "object"
            }
        },
        "datadog:index/cloudConfigurationRule:CloudConfigurationRule": {
            "description": "Provides a Datadog Cloud Configuration Rule resource.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as datadog from \"@pulumi/datadog\";\n\nconst myrule = new datadog.CloudConfigurationRule(\"myrule\", {\n    name: \"My cloud configuration rule\",\n    message: \"Rule has triggered\",\n    enabled: true,\n    policy: `package datadog\n\nimport data.datadog.output as dd_output\n\nimport future.keywords.contains\nimport future.keywords.if\nimport future.keywords.in\n\neval(resource) = \"skip\" if {\n    # Logic that evaluates to true if the resource should be skipped\n    true\n} else = \"pass\" {\n    # Logic that evaluates to true if the resource is compliant\n    true\n} else = \"fail\" {\n    # Logic that evaluates to true if the resource is not compliant\n    true\n}\n\n# This part remains unchanged for all rules\nresults contains result if {\n    some resource in input.resources[input.main_resource_type]\n    result := dd_output.format(resource, eval(resource))\n}\n`,\n    resourceType: \"aws_s3_bucket\",\n    relatedResourceTypes: [],\n    severity: \"high\",\n    groupBies: [\"@resource\"],\n    notifications: [\"@channel\"],\n    tags: [\"some:tag\"],\n});\n```\n```python\nimport pulumi\nimport pulumi_datadog as datadog\n\nmyrule = datadog.CloudConfigurationRule(\"myrule\",\n    name=\"My cloud configuration rule\",\n    message=\"Rule has triggered\",\n    enabled=True,\n    policy=\"\"\"package datadog\n\nimport data.datadog.output as dd_output\n\nimport future.keywords.contains\nimport future.keywords.if\nimport future.keywords.in\n\neval(resource) = \"skip\" if {\n    # Logic that evaluates to true if the resource should be skipped\n    true\n} else = \"pass\" {\n    # Logic that evaluates to true if the resource is compliant\n    true\n} else = \"fail\" {\n    # Logic that evaluates to true if the resource is not compliant\n    true\n}\n\n# This part remains unchanged for all rules\nresults contains result if {\n    some resource in input.resources[input.main_resource_type]\n    result := dd_output.format(resource, eval(resource))\n}\n\"\"\",\n    resource_type=\"aws_s3_bucket\",\n    related_resource_types=[],\n    severity=\"high\",\n    group_bies=[\"@resource\"],\n    notifications=[\"@channel\"],\n    tags=[\"some:tag\"])\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Datadog = Pulumi.Datadog;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var myrule = new Datadog.CloudConfigurationRule(\"myrule\", new()\n    {\n        Name = \"My cloud configuration rule\",\n        Message = \"Rule has triggered\",\n        Enabled = true,\n        Policy = @\"package datadog\n\nimport data.datadog.output as dd_output\n\nimport future.keywords.contains\nimport future.keywords.if\nimport future.keywords.in\n\neval(resource) = \"\"skip\"\" if {\n    # Logic that evaluates to true if the resource should be skipped\n    true\n} else = \"\"pass\"\" {\n    # Logic that evaluates to true if the resource is compliant\n    true\n} else = \"\"fail\"\" {\n    # Logic that evaluates to true if the resource is not compliant\n    true\n}\n\n# This part remains unchanged for all rules\nresults contains result if {\n    some resource in input.resources[input.main_resource_type]\n    result := dd_output.format(resource, eval(resource))\n}\n\",\n        ResourceType = \"aws_s3_bucket\",\n        RelatedResourceTypes = new[] {},\n        Severity = \"high\",\n        GroupBies = new[]\n        {\n            \"@resource\",\n        },\n        Notifications = new[]\n        {\n            \"@channel\",\n        },\n        Tags = new[]\n        {\n            \"some:tag\",\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-datadog/sdk/v4/go/datadog\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := datadog.NewCloudConfigurationRule(ctx, \"myrule\", \u0026datadog.CloudConfigurationRuleArgs{\n\t\t\tName:    pulumi.String(\"My cloud configuration rule\"),\n\t\t\tMessage: pulumi.String(\"Rule has triggered\"),\n\t\t\tEnabled: pulumi.Bool(true),\n\t\t\tPolicy: pulumi.String(`package datadog\n\nimport data.datadog.output as dd_output\n\nimport future.keywords.contains\nimport future.keywords.if\nimport future.keywords.in\n\neval(resource) = \"skip\" if {\n    # Logic that evaluates to true if the resource should be skipped\n    true\n} else = \"pass\" {\n    # Logic that evaluates to true if the resource is compliant\n    true\n} else = \"fail\" {\n    # Logic that evaluates to true if the resource is not compliant\n    true\n}\n\n# This part remains unchanged for all rules\nresults contains result if {\n    some resource in input.resources[input.main_resource_type]\n    result := dd_output.format(resource, eval(resource))\n}\n`),\n\t\t\tResourceType:         pulumi.String(\"aws_s3_bucket\"),\n\t\t\tRelatedResourceTypes: pulumi.StringArray{},\n\t\t\tSeverity:             pulumi.String(\"high\"),\n\t\t\tGroupBies: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"@resource\"),\n\t\t\t},\n\t\t\tNotifications: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"@channel\"),\n\t\t\t},\n\t\t\tTags: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"some:tag\"),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.datadog.CloudConfigurationRule;\nimport com.pulumi.datadog.CloudConfigurationRuleArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var myrule = new CloudConfigurationRule(\"myrule\", CloudConfigurationRuleArgs.builder()\n            .name(\"My cloud configuration rule\")\n            .message(\"Rule has triggered\")\n            .enabled(true)\n            .policy(\"\"\"\npackage datadog\n\nimport data.datadog.output as dd_output\n\nimport future.keywords.contains\nimport future.keywords.if\nimport future.keywords.in\n\neval(resource) = \"skip\" if {\n    # Logic that evaluates to true if the resource should be skipped\n    true\n} else = \"pass\" {\n    # Logic that evaluates to true if the resource is compliant\n    true\n} else = \"fail\" {\n    # Logic that evaluates to true if the resource is not compliant\n    true\n}\n\n# This part remains unchanged for all rules\nresults contains result if {\n    some resource in input.resources[input.main_resource_type]\n    result := dd_output.format(resource, eval(resource))\n}\n            \"\"\")\n            .resourceType(\"aws_s3_bucket\")\n            .relatedResourceTypes()\n            .severity(\"high\")\n            .groupBies(\"@resource\")\n            .notifications(\"@channel\")\n            .tags(\"some:tag\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  myrule:\n    type: datadog:CloudConfigurationRule\n    properties:\n      name: My cloud configuration rule\n      message: Rule has triggered\n      enabled: true\n      policy: |\n        package datadog\n\n        import data.datadog.output as dd_output\n\n        import future.keywords.contains\n        import future.keywords.if\n        import future.keywords.in\n\n        eval(resource) = \"skip\" if {\n            # Logic that evaluates to true if the resource should be skipped\n            true\n        } else = \"pass\" {\n            # Logic that evaluates to true if the resource is compliant\n            true\n        } else = \"fail\" {\n            # Logic that evaluates to true if the resource is not compliant\n            true\n        }\n\n        # This part remains unchanged for all rules\n        results contains result if {\n            some resource in input.resources[input.main_resource_type]\n            result := dd_output.format(resource, eval(resource))\n        }\n      resourceType: aws_s3_bucket\n      relatedResourceTypes: []\n      severity: high\n      groupBies:\n        - '@resource'\n      notifications:\n        - '@channel'\n      tags:\n        - some:tag\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\nSecurity monitoring rules can be imported using ID, e.g.\n\n```sh\n$ pulumi import datadog:index/cloudConfigurationRule:CloudConfigurationRule my_rule m0o-hto-lkb\n```\n\n",
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Whether the cloud configuration rule is enabled.\n"
                },
                "filters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/CloudConfigurationRuleFilter:CloudConfigurationRuleFilter"
                    },
                    "description": "Additional queries to filter matched events before they are processed. Defaults to empty list\n"
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Defaults to empty list. This function will be deprecated soon. Use the notification rules function instead. Fields to group by when generating signals, e.g. @resource.\n"
                },
                "message": {
                    "type": "string",
                    "description": "The message associated to the rule that will be shown in findings and signals.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the cloud configuration rule.\n"
                },
                "notifications": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "This function will be deprecated soon. Use the notification rules function instead. Notification targets for signals. Defaults to empty list.\n"
                },
                "policy": {
                    "type": "string",
                    "description": "Policy written in Rego format.\n"
                },
                "relatedResourceTypes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Related resource types to be checked by the rule. Defaults to empty list.\n"
                },
                "resourceType": {
                    "type": "string",
                    "description": "Main resource type to be checked by the rule.\n"
                },
                "severity": {
                    "type": "string",
                    "description": "Severity of the rule and associated signals. Valid values are `info`, `low`, `medium`, `high`, `critical`.\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Tags of the rule, propagated to findings and signals. Defaults to empty list.\n"
                }
            },
            "required": [
                "enabled",
                "message",
                "name",
                "policy",
                "resourceType",
                "severity"
            ],
            "inputProperties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Whether the cloud configuration rule is enabled.\n"
                },
                "filters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/CloudConfigurationRuleFilter:CloudConfigurationRuleFilter"
                    },
                    "description": "Additional queries to filter matched events before they are processed. Defaults to empty list\n"
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Defaults to empty list. This function will be deprecated soon. Use the notification rules function instead. Fields to group by when generating signals, e.g. @resource.\n"
                },
                "message": {
                    "type": "string",
                    "description": "The message associated to the rule that will be shown in findings and signals.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the cloud configuration rule.\n"
                },
                "notifications": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "This function will be deprecated soon. Use the notification rules function instead. Notification targets for signals. Defaults to empty list.\n"
                },
                "policy": {
                    "type": "string",
                    "description": "Policy written in Rego format.\n"
                },
                "relatedResourceTypes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Related resource types to be checked by the rule. Defaults to empty list.\n"
                },
                "resourceType": {
                    "type": "string",
                    "description": "Main resource type to be checked by the rule.\n"
                },
                "severity": {
                    "type": "string",
                    "description": "Severity of the rule and associated signals. Valid values are `info`, `low`, `medium`, `high`, `critical`.\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Tags of the rule, propagated to findings and signals. Defaults to empty list.\n"
                }
            },
            "requiredInputs": [
                "enabled",
                "message",
                "name",
                "policy",
                "resourceType",
                "severity"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering CloudConfigurationRule resources.\n",
                "properties": {
                    "enabled": {
                        "type": "boolean",
                        "description": "Whether the cloud configuration rule is enabled.\n"
                    },
                    "filters": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/datadog:index/CloudConfigurationRuleFilter:CloudConfigurationRuleFilter"
                        },
                        "description": "Additional queries to filter matched events before they are processed. Defaults to empty list\n"
                    },
                    "groupBies": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Defaults to empty list. This function will be deprecated soon. Use the notification rules function instead. Fields to group by when generating signals, e.g. @resource.\n"
                    },
                    "message": {
                        "type": "string",
                        "description": "The message associated to the rule that will be shown in findings and signals.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the cloud configuration rule.\n"
                    },
                    "notifications": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "This function will be deprecated soon. Use the notification rules function instead. Notification targets for signals. Defaults to empty list.\n"
                    },
                    "policy": {
                        "type": "string",
                        "description": "Policy written in Rego format.\n"
                    },
                    "relatedResourceTypes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Related resource types to be checked by the rule. Defaults to empty list.\n"
                    },
                    "resourceType": {
                        "type": "string",
                        "description": "Main resource type to be checked by the rule.\n"
                    },
                    "severity": {
                        "type": "string",
                        "description": "Severity of the rule and associated signals. Valid values are `info`, `low`, `medium`, `high`, `critical`.\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Tags of the rule, propagated to findings and signals. Defaults to empty list.\n"
                    }
                },
                "type": "object"
            }
        },
        "datadog:index/cloudWorkloadSecurityAgentRule:CloudWorkloadSecurityAgentRule": {
            "description": "## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as datadog from \"@pulumi/datadog\";\n\nconst myAgentRule = new datadog.CloudWorkloadSecurityAgentRule(\"my_agent_rule\", {\n    name: \"my_agent_rule\",\n    description: \"My agent rule\",\n    enabled: true,\n    expression: \"exec.file.name == \\\"java\\\"\",\n});\n```\n```python\nimport pulumi\nimport pulumi_datadog as datadog\n\nmy_agent_rule = datadog.CloudWorkloadSecurityAgentRule(\"my_agent_rule\",\n    name=\"my_agent_rule\",\n    description=\"My agent rule\",\n    enabled=True,\n    expression=\"exec.file.name == \\\"java\\\"\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Datadog = Pulumi.Datadog;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var myAgentRule = new Datadog.CloudWorkloadSecurityAgentRule(\"my_agent_rule\", new()\n    {\n        Name = \"my_agent_rule\",\n        Description = \"My agent rule\",\n        Enabled = true,\n        Expression = \"exec.file.name == \\\"java\\\"\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-datadog/sdk/v4/go/datadog\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := datadog.NewCloudWorkloadSecurityAgentRule(ctx, \"my_agent_rule\", \u0026datadog.CloudWorkloadSecurityAgentRuleArgs{\n\t\t\tName:        pulumi.String(\"my_agent_rule\"),\n\t\t\tDescription: pulumi.String(\"My agent rule\"),\n\t\t\tEnabled:     pulumi.Bool(true),\n\t\t\tExpression:  pulumi.String(\"exec.file.name == \\\"java\\\"\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.datadog.CloudWorkloadSecurityAgentRule;\nimport com.pulumi.datadog.CloudWorkloadSecurityAgentRuleArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var myAgentRule = new CloudWorkloadSecurityAgentRule(\"myAgentRule\", CloudWorkloadSecurityAgentRuleArgs.builder()\n            .name(\"my_agent_rule\")\n            .description(\"My agent rule\")\n            .enabled(true)\n            .expression(\"exec.file.name == \\\"java\\\"\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  myAgentRule:\n    type: datadog:CloudWorkloadSecurityAgentRule\n    name: my_agent_rule\n    properties:\n      name: my_agent_rule\n      description: My agent rule\n      enabled: true\n      expression: exec.file.name == \"java\"\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\nCloud Workload Security Agent rules can be imported using ID, e.g.\n\n```sh\n$ pulumi import datadog:index/cloudWorkloadSecurityAgentRule:CloudWorkloadSecurityAgentRule my_agent_rule m0o-hto-lkb\n```\n\n",
            "properties": {
                "description": {
                    "type": "string",
                    "description": "The description of the Agent rule. Defaults to `\"\"`.\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Whether the Agent rule is enabled. Defaults to `true`.\n"
                },
                "expression": {
                    "type": "string",
                    "description": "The SECL expression of the Agent rule.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the Agent rule.\n"
                }
            },
            "required": [
                "expression",
                "name"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "The description of the Agent rule. Defaults to `\"\"`.\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Whether the Agent rule is enabled. Defaults to `true`.\n"
                },
                "expression": {
                    "type": "string",
                    "description": "The SECL expression of the Agent rule.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the Agent rule.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "expression",
                "name"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering CloudWorkloadSecurityAgentRule resources.\n",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "The description of the Agent rule. Defaults to `\"\"`.\n"
                    },
                    "enabled": {
                        "type": "boolean",
                        "description": "Whether the Agent rule is enabled. Defaults to `true`.\n"
                    },
                    "expression": {
                        "type": "string",
                        "description": "The SECL expression of the Agent rule.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the Agent rule.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "datadog:index/csmThreatsAgentRule:CsmThreatsAgentRule": {
            "description": "Provides a Datadog CSM Threats Agent Rule API resource.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as datadog from \"@pulumi/datadog\";\n\nconst myAgentRule = new datadog.CsmThreatsAgentRule(\"my_agent_rule\", {\n    name: \"my_agent_rule\",\n    enabled: true,\n    description: \"im a rule\",\n    expression: \"open.file.name == \\\"etc/shadow/password\\\"\",\n});\n```\n```python\nimport pulumi\nimport pulumi_datadog as datadog\n\nmy_agent_rule = datadog.CsmThreatsAgentRule(\"my_agent_rule\",\n    name=\"my_agent_rule\",\n    enabled=True,\n    description=\"im a rule\",\n    expression=\"open.file.name == \\\"etc/shadow/password\\\"\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Datadog = Pulumi.Datadog;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var myAgentRule = new Datadog.CsmThreatsAgentRule(\"my_agent_rule\", new()\n    {\n        Name = \"my_agent_rule\",\n        Enabled = true,\n        Description = \"im a rule\",\n        Expression = \"open.file.name == \\\"etc/shadow/password\\\"\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-datadog/sdk/v4/go/datadog\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := datadog.NewCsmThreatsAgentRule(ctx, \"my_agent_rule\", \u0026datadog.CsmThreatsAgentRuleArgs{\n\t\t\tName:        pulumi.String(\"my_agent_rule\"),\n\t\t\tEnabled:     pulumi.Bool(true),\n\t\t\tDescription: pulumi.String(\"im a rule\"),\n\t\t\tExpression:  pulumi.String(\"open.file.name == \\\"etc/shadow/password\\\"\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.datadog.CsmThreatsAgentRule;\nimport com.pulumi.datadog.CsmThreatsAgentRuleArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var myAgentRule = new CsmThreatsAgentRule(\"myAgentRule\", CsmThreatsAgentRuleArgs.builder()\n            .name(\"my_agent_rule\")\n            .enabled(true)\n            .description(\"im a rule\")\n            .expression(\"open.file.name == \\\"etc/shadow/password\\\"\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  myAgentRule:\n    type: datadog:CsmThreatsAgentRule\n    name: my_agent_rule\n    properties:\n      name: my_agent_rule\n      enabled: true\n      description: im a rule\n      expression: open.file.name == \"etc/shadow/password\"\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\nCSM Agent Rules can be imported using ID. For example:\n\n```sh\n$ pulumi import datadog:index/csmThreatsAgentRule:CsmThreatsAgentRule my_agent_rule m0o-hto-lkb\n```\n\n",
            "properties": {
                "description": {
                    "type": "string",
                    "description": "A description for the Agent rule. Defaults to `\"\"`.\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Indicates Whether the Agent rule is enabled.\n"
                },
                "expression": {
                    "type": "string",
                    "description": "The SECL expression of the Agent rule\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the Agent rule.\n"
                }
            },
            "required": [
                "description",
                "enabled",
                "expression",
                "name"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "A description for the Agent rule. Defaults to `\"\"`.\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Indicates Whether the Agent rule is enabled.\n"
                },
                "expression": {
                    "type": "string",
                    "description": "The SECL expression of the Agent rule\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the Agent rule.\n"
                }
            },
            "requiredInputs": [
                "enabled",
                "expression",
                "name"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering CsmThreatsAgentRule resources.\n",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "A description for the Agent rule. Defaults to `\"\"`.\n"
                    },
                    "enabled": {
                        "type": "boolean",
                        "description": "Indicates Whether the Agent rule is enabled.\n"
                    },
                    "expression": {
                        "type": "string",
                        "description": "The SECL expression of the Agent rule\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the Agent rule.\n"
                    }
                },
                "type": "object"
            }
        },
        "datadog:index/dashboard:Dashboard": {
            "description": "Provides a Datadog dashboard resource. This can be used to create and manage Datadog dashboards.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as datadog from \"@pulumi/datadog\";\n\n// Example Ordered Layout\nconst orderedDashboard = new datadog.Dashboard(\"ordered_dashboard\", {\n    title: \"Ordered Layout Dashboard\",\n    description: \"Created using the Datadog provider in Pulumi\",\n    layoutType: \"ordered\",\n    widgets: [\n        {\n            alertGraphDefinition: {\n                alertId: \"895605\",\n                vizType: \"timeseries\",\n                title: \"Widget Title\",\n                liveSpan: \"1h\",\n            },\n        },\n        {\n            alertValueDefinition: {\n                alertId: \"895605\",\n                precision: 3,\n                unit: \"b\",\n                textAlign: \"center\",\n                title: \"Widget Title\",\n            },\n        },\n        {\n            alertValueDefinition: {\n                alertId: \"895605\",\n                precision: 3,\n                unit: \"b\",\n                textAlign: \"center\",\n                title: \"Widget Title\",\n            },\n        },\n        {\n            changeDefinition: {\n                requests: [{\n                    q: \"avg:system.load.1{env:staging} by {account}\",\n                    changeType: \"absolute\",\n                    compareTo: \"week_before\",\n                    increaseGood: true,\n                    orderBy: \"name\",\n                    orderDir: \"desc\",\n                    showPresent: true,\n                }],\n                title: \"Widget Title\",\n                liveSpan: \"1h\",\n            },\n        },\n        {\n            distributionDefinition: {\n                requests: [{\n                    q: \"avg:system.load.1{env:staging} by {account}\",\n                    style: {\n                        palette: \"warm\",\n                    },\n                }],\n                title: \"Widget Title\",\n                liveSpan: \"1h\",\n            },\n        },\n        {\n            checkStatusDefinition: {\n                check: \"aws.ecs.agent_connected\",\n                grouping: \"cluster\",\n                groupBies: [\n                    \"account\",\n                    \"cluster\",\n                ],\n                tags: [\n                    \"account:demo\",\n                    \"cluster:awseb-ruthebdog-env-8-dn3m6u3gvk\",\n                ],\n                title: \"Widget Title\",\n                liveSpan: \"1h\",\n            },\n        },\n        {\n            heatmapDefinition: {\n                requests: [{\n                    q: \"avg:system.load.1{env:staging} by {account}\",\n                    style: {\n                        palette: \"warm\",\n                    },\n                }],\n                yaxis: {\n                    min: \"1\",\n                    max: \"2\",\n                    includeZero: true,\n                    scale: \"sqrt\",\n                },\n                title: \"Widget Title\",\n                liveSpan: \"1h\",\n            },\n        },\n        {\n            hostmapDefinition: {\n                request: {\n                    fills: [{\n                        q: \"avg:system.load.1{*} by {host}\",\n                    }],\n                    sizes: [{\n                        q: \"avg:memcache.uptime{*} by {host}\",\n                    }],\n                },\n                nodeType: \"container\",\n                groups: [\n                    \"host\",\n                    \"region\",\n                ],\n                noGroupHosts: true,\n                noMetricHosts: true,\n                scopes: [\n                    \"region:us-east-1\",\n                    \"aws_account:727006795293\",\n                ],\n                style: {\n                    palette: \"yellow_to_green\",\n                    paletteFlip: true,\n                    fillMin: \"10\",\n                    fillMax: \"20\",\n                },\n                title: \"Widget Title\",\n            },\n        },\n        {\n            noteDefinition: {\n                content: \"note text\",\n                backgroundColor: \"pink\",\n                fontSize: \"14\",\n                textAlign: \"center\",\n                showTick: true,\n                tickEdge: \"left\",\n                tickPos: \"50%\",\n            },\n        },\n        {\n            queryValueDefinition: {\n                requests: [{\n                    q: \"avg:system.load.1{env:staging} by {account}\",\n                    aggregator: \"sum\",\n                    conditionalFormats: [\n                        {\n                            comparator: \"\u003c\",\n                            value: 2,\n                            palette: \"white_on_green\",\n                        },\n                        {\n                            comparator: \"\u003e\",\n                            value: 2.2,\n                            palette: \"white_on_red\",\n                        },\n                    ],\n                }],\n                autoscale: true,\n                customUnit: \"xx\",\n                precision: 4,\n                textAlign: \"right\",\n                title: \"Widget Title\",\n                liveSpan: \"1h\",\n            },\n        },\n        {\n            queryTableDefinition: {\n                requests: [{\n                    q: \"avg:system.load.1{env:staging} by {account}\",\n                    aggregator: \"sum\",\n                    limit: 10,\n                    conditionalFormats: [\n                        {\n                            comparator: \"\u003c\",\n                            value: 2,\n                            palette: \"white_on_green\",\n                        },\n                        {\n                            comparator: \"\u003e\",\n                            value: 2.2,\n                            palette: \"white_on_red\",\n                        },\n                    ],\n                }],\n                title: \"Widget Title\",\n                liveSpan: \"1h\",\n            },\n        },\n        {\n            scatterplotDefinition: {\n                request: {\n                    xes: [{\n                        q: \"avg:system.cpu.user{*} by {service, account}\",\n                        aggregator: \"max\",\n                    }],\n                    ys: [{\n                        q: \"avg:system.mem.used{*} by {service, account}\",\n                        aggregator: \"min\",\n                    }],\n                },\n                colorByGroups: [\n                    \"account\",\n                    \"apm-role-group\",\n                ],\n                xaxis: {\n                    includeZero: true,\n                    label: \"x\",\n                    min: \"1\",\n                    max: \"2000\",\n                    scale: \"pow\",\n                },\n                yaxis: {\n                    includeZero: false,\n                    label: \"y\",\n                    min: \"5\",\n                    max: \"2222\",\n                    scale: \"log\",\n                },\n                title: \"Widget Title\",\n                liveSpan: \"1h\",\n            },\n        },\n        {\n            servicemapDefinition: {\n                service: \"master-db\",\n                filters: [\n                    \"env:prod\",\n                    \"datacenter:dc1\",\n                ],\n                title: \"env: prod, datacenter:dc1, service: master-db\",\n                titleSize: \"16\",\n                titleAlign: \"left\",\n            },\n        },\n        {\n            timeseriesDefinition: {\n                requests: [\n                    {\n                        q: \"avg:system.cpu.user{app:general} by {env}\",\n                        displayType: \"line\",\n                        style: {\n                            palette: \"warm\",\n                            lineType: \"dashed\",\n                            lineWidth: \"thin\",\n                        },\n                        metadatas: [{\n                            expression: \"avg:system.cpu.user{app:general} by {env}\",\n                            aliasName: \"Alpha\",\n                        }],\n                    },\n                    {\n                        logQuery: {\n                            index: \"mcnulty\",\n                            computeQuery: {\n                                aggregation: \"avg\",\n                                facet: \"@duration\",\n                                interval: 5000,\n                            },\n                            searchQuery: \"status:info\",\n                            groupBies: [{\n                                facet: \"host\",\n                                limit: 10,\n                                sortQuery: {\n                                    aggregation: \"avg\",\n                                    order: \"desc\",\n                                    facet: \"@duration\",\n                                },\n                            }],\n                        },\n                        displayType: \"area\",\n                    },\n                    {\n                        apmQuery: {\n                            index: \"apm-search\",\n                            computeQuery: {\n                                aggregation: \"avg\",\n                                facet: \"@duration\",\n                                interval: 5000,\n                            },\n                            searchQuery: \"type:web\",\n                            groupBies: [{\n                                facet: \"resource_name\",\n                                limit: 50,\n                                sortQuery: {\n                                    aggregation: \"avg\",\n                                    order: \"desc\",\n                                    facet: \"@string_query.interval\",\n                                },\n                            }],\n                        },\n                        displayType: \"bars\",\n                    },\n                    {\n                        processQuery: {\n                            metric: \"process.stat.cpu.total_pct\",\n                            searchBy: \"error\",\n                            filterBies: [\"active\"],\n                            limit: 50,\n                        },\n                        displayType: \"area\",\n                    },\n                ],\n                markers: [\n                    {\n                        displayType: \"error dashed\",\n                        label: \" z=6 \",\n                        value: \"y = 4\",\n                    },\n                    {\n                        displayType: \"ok solid\",\n                        value: \"10 \u003c y \u003c 999\",\n                        label: \" x=8 \",\n                    },\n                ],\n                title: \"Widget Title\",\n                showLegend: true,\n                legendSize: \"2\",\n                liveSpan: \"1h\",\n                events: [\n                    {\n                        q: \"sources:test tags:1\",\n                    },\n                    {\n                        q: \"sources:test tags:2\",\n                    },\n                ],\n                yaxis: {\n                    scale: \"log\",\n                    includeZero: false,\n                    max: \"100\",\n                },\n            },\n        },\n        {\n            toplistDefinition: {\n                requests: [{\n                    q: \"avg:system.cpu.user{app:general} by {env}\",\n                    conditionalFormats: [\n                        {\n                            comparator: \"\u003c\",\n                            value: 2,\n                            palette: \"white_on_green\",\n                        },\n                        {\n                            comparator: \"\u003e\",\n                            value: 2.2,\n                            palette: \"white_on_red\",\n                        },\n                    ],\n                }],\n                title: \"Widget Title\",\n            },\n        },\n        {\n            groupDefinition: {\n                layoutType: \"ordered\",\n                title: \"Group Widget\",\n                widgets: [\n                    {\n                        noteDefinition: {\n                            content: \"cluster note widget\",\n                            backgroundColor: \"pink\",\n                            fontSize: \"14\",\n                            textAlign: \"center\",\n                            showTick: true,\n                            tickEdge: \"left\",\n                            tickPos: \"50%\",\n                        },\n                    },\n                    {\n                        alertGraphDefinition: {\n                            alertId: \"123\",\n                            vizType: \"toplist\",\n                            title: \"Alert Graph\",\n                            liveSpan: \"1h\",\n                        },\n                    },\n                ],\n            },\n        },\n        {\n            serviceLevelObjectiveDefinition: {\n                title: \"Widget Title\",\n                viewType: \"detail\",\n                sloId: \"56789\",\n                showErrorBudget: true,\n                viewMode: \"overall\",\n                timeWindows: [\n                    \"7d\",\n                    \"previous_week\",\n                ],\n            },\n        },\n    ],\n    templateVariables: [\n        {\n            name: \"var_1\",\n            prefix: \"host\",\n            \"default\": \"aws\",\n        },\n        {\n            name: \"var_2\",\n            prefix: \"service_name\",\n            \"default\": \"autoscaling\",\n        },\n    ],\n    templateVariablePresets: [{\n        name: \"preset_1\",\n        templateVariables: [\n            {\n                name: \"var_1\",\n                value: \"host.dc\",\n            },\n            {\n                name: \"var_2\",\n                value: \"my_service\",\n            },\n        ],\n    }],\n});\n// Example Free Layout\nconst freeDashboard = new datadog.Dashboard(\"free_dashboard\", {\n    title: \"Free Layout Dashboard\",\n    description: \"Created using the Datadog provider in Pulumi\",\n    layoutType: \"free\",\n    widgets: [\n        {\n            eventStreamDefinition: {\n                query: \"*\",\n                eventSize: \"l\",\n                title: \"Widget Title\",\n                titleSize: \"16\",\n                titleAlign: \"left\",\n                liveSpan: \"1h\",\n            },\n            widgetLayout: {\n                height: 43,\n                width: 32,\n                x: 0,\n                y: 0,\n            },\n        },\n        {\n            eventTimelineDefinition: {\n                query: \"*\",\n                title: \"Widget Title\",\n                titleSize: \"16\",\n                titleAlign: \"left\",\n                liveSpan: \"1h\",\n            },\n            widgetLayout: {\n                height: 9,\n                width: 66,\n                x: 33,\n                y: 60,\n            },\n        },\n        {\n            freeTextDefinition: {\n                text: \"free text content\",\n                color: \"#d00\",\n                fontSize: \"36\",\n                textAlign: \"left\",\n            },\n            widgetLayout: {\n                height: 20,\n                width: 34,\n                x: 33,\n                y: 0,\n            },\n        },\n        {\n            iframeDefinition: {\n                url: \"http://google.com\",\n            },\n            widgetLayout: {\n                height: 46,\n                width: 39,\n                x: 101,\n                y: 0,\n            },\n        },\n        {\n            imageDefinition: {\n                url: \"https://images.pexels.com/photos/67636/rose-blue-flower-rose-blooms-67636.jpeg?auto=compress\u0026cs=tinysrgb\u0026h=350\",\n                sizing: \"fit\",\n                margin: \"small\",\n            },\n            widgetLayout: {\n                height: 20,\n                width: 30,\n                x: 69,\n                y: 0,\n            },\n        },\n        {\n            logStreamDefinition: {\n                indexes: [\"main\"],\n                query: \"error\",\n                columns: [\n                    \"core_host\",\n                    \"core_service\",\n                    \"tag_source\",\n                ],\n                showDateColumn: true,\n                showMessageColumn: true,\n                messageDisplay: \"expanded-md\",\n                sort: {\n                    column: \"time\",\n                    order: \"desc\",\n                },\n            },\n            widgetLayout: {\n                height: 36,\n                width: 32,\n                x: 0,\n                y: 45,\n            },\n        },\n        {\n            manageStatusDefinition: {\n                colorPreference: \"text\",\n                displayFormat: \"countsAndList\",\n                hideZeroCounts: true,\n                query: \"type:metric\",\n                showLastTriggered: false,\n                sort: \"status,asc\",\n                summaryType: \"monitors\",\n                title: \"Widget Title\",\n                titleSize: \"16\",\n                titleAlign: \"left\",\n            },\n            widgetLayout: {\n                height: 40,\n                width: 30,\n                x: 101,\n                y: 48,\n            },\n        },\n        {\n            traceServiceDefinition: {\n                displayFormat: \"three_column\",\n                env: \"datadog.com\",\n                service: \"alerting-cassandra\",\n                showBreakdown: true,\n                showDistribution: true,\n                showErrors: true,\n                showHits: true,\n                showLatency: false,\n                showResourceList: false,\n                sizeFormat: \"large\",\n                spanName: \"cassandra.query\",\n                title: \"alerting-cassandra #env:datadog.com\",\n                titleAlign: \"center\",\n                titleSize: \"13\",\n                liveSpan: \"1h\",\n            },\n            widgetLayout: {\n                height: 38,\n                width: 66,\n                x: 33,\n                y: 21,\n            },\n        },\n        {\n            timeseriesDefinition: {\n                requests: [{\n                    formulas: [\n                        {\n                            formulaExpression: \"my_query_1 + my_query_2\",\n                            alias: \"my ff query\",\n                        },\n                        {\n                            formulaExpression: \"my_query_1 * my_query_2\",\n                            limit: {\n                                count: 5,\n                                order: \"desc\",\n                            },\n                            alias: \"my second ff query\",\n                        },\n                    ],\n                    queries: [\n                        {\n                            metricQuery: {\n                                dataSource: \"metrics\",\n                                query: \"avg:system.cpu.user{app:general} by {env}\",\n                                name: \"my_query_1\",\n                                aggregator: \"sum\",\n                            },\n                        },\n                        {\n                            metricQuery: {\n                                query: \"avg:system.cpu.user{app:general} by {env}\",\n                                name: \"my_query_2\",\n                                aggregator: \"sum\",\n                            },\n                        },\n                    ],\n                }],\n            },\n            widgetLayout: {\n                height: 16,\n                width: 25,\n                x: 58,\n                y: 83,\n            },\n        },\n        {\n            timeseriesDefinition: {\n                requests: [\n                    {\n                        queries: [{\n                            eventQuery: {\n                                name: \"my-query\",\n                                dataSource: \"logs\",\n                                indexes: [\"days-3\"],\n                                computes: [{\n                                    aggregation: \"count\",\n                                }],\n                                groupBies: [{\n                                    facet: \"host\",\n                                    sort: {\n                                        metric: \"@lambda.max_memory_used\",\n                                        aggregation: \"avg\",\n                                    },\n                                    limit: 10,\n                                }],\n                            },\n                        }],\n                    },\n                    {\n                        displayType: \"overlay\",\n                        queries: [{\n                            metricQuery: {\n                                name: \"MyOverlay\",\n                                dataSource: \"metrics\",\n                                query: \"avg:system.cpu.user{host:COMP-QJWVM2FYT4}\",\n                            },\n                        }],\n                    },\n                ],\n            },\n            widgetLayout: {\n                height: 16,\n                width: 28,\n                x: 29,\n                y: 83,\n            },\n        },\n        {\n            timeseriesDefinition: {\n                requests: [{\n                    queries: [{\n                        processQuery: {\n                            dataSource: \"process\",\n                            textFilter: \"abc\",\n                            metric: \"process.stat.cpu.total_pct\",\n                            limit: 10,\n                            tagFilters: [\"some_filter\"],\n                            name: \"my_process_query\",\n                            sort: \"asc\",\n                            isNormalizedCpu: true,\n                            aggregator: \"sum\",\n                        },\n                    }],\n                }],\n            },\n            widgetLayout: {\n                height: 16,\n                width: 28,\n                x: 0,\n                y: 83,\n            },\n        },\n        {\n            timeseriesDefinition: {\n                requests: [{\n                    formulas: [{\n                        formulaExpression: \"query1\",\n                        alias: \"my cloud cost query\",\n                    }],\n                    queries: [{\n                        cloudCostQuery: {\n                            dataSource: \"cloud_cost\",\n                            query: \"sum:aws.cost.amortized{*}\",\n                            name: \"query1\",\n                            aggregator: \"sum\",\n                        },\n                    }],\n                }],\n            },\n        },\n        {\n            powerpackDefinition: {\n                powerpackId: \"00000000-0000-0000-0000-000000000000\",\n                backgroundColor: \"blue\",\n                bannerImg: \"https://example.org/example.png\",\n                showTitle: true,\n                title: \"Powerpack Widget\",\n                templateVariables: {\n                    controlledExternallies: [{\n                        name: \"var_2\",\n                        values: [\"autoscaling\"],\n                        prefix: \"service_name\",\n                    }],\n                    controlledByPowerpacks: [{\n                        name: \"var_3\",\n                        prefix: \"timeframe\",\n                        values: [\n                            \"default\",\n                            \"values\",\n                            \"here\",\n                        ],\n                    }],\n                },\n            },\n        },\n    ],\n    templateVariables: [\n        {\n            name: \"var_1\",\n            prefix: \"host\",\n            \"default\": \"aws\",\n        },\n        {\n            name: \"var_2\",\n            prefix: \"service_name\",\n            \"default\": \"autoscaling\",\n        },\n    ],\n    templateVariablePresets: [{\n        name: \"preset_1\",\n        templateVariables: [\n            {\n                name: \"var_1\",\n                value: \"host.dc\",\n            },\n            {\n                name: \"var_2\",\n                value: \"my_service\",\n            },\n        ],\n    }],\n});\n```\n```python\nimport pulumi\nimport pulumi_datadog as datadog\n\n# Example Ordered Layout\nordered_dashboard = datadog.Dashboard(\"ordered_dashboard\",\n    title=\"Ordered Layout Dashboard\",\n    description=\"Created using the Datadog provider in Pulumi\",\n    layout_type=\"ordered\",\n    widgets=[\n        {\n            \"alert_graph_definition\": {\n                \"alert_id\": \"895605\",\n                \"viz_type\": \"timeseries\",\n                \"title\": \"Widget Title\",\n                \"live_span\": \"1h\",\n            },\n        },\n        {\n            \"alert_value_definition\": {\n                \"alert_id\": \"895605\",\n                \"precision\": 3,\n                \"unit\": \"b\",\n                \"text_align\": \"center\",\n                \"title\": \"Widget Title\",\n            },\n        },\n        {\n            \"alert_value_definition\": {\n                \"alert_id\": \"895605\",\n                \"precision\": 3,\n                \"unit\": \"b\",\n                \"text_align\": \"center\",\n                \"title\": \"Widget Title\",\n            },\n        },\n        {\n            \"change_definition\": {\n                \"requests\": [{\n                    \"q\": \"avg:system.load.1{env:staging} by {account}\",\n                    \"change_type\": \"absolute\",\n                    \"compare_to\": \"week_before\",\n                    \"increase_good\": True,\n                    \"order_by\": \"name\",\n                    \"order_dir\": \"desc\",\n                    \"show_present\": True,\n                }],\n                \"title\": \"Widget Title\",\n                \"live_span\": \"1h\",\n            },\n        },\n        {\n            \"distribution_definition\": {\n                \"requests\": [{\n                    \"q\": \"avg:system.load.1{env:staging} by {account}\",\n                    \"style\": {\n                        \"palette\": \"warm\",\n                    },\n                }],\n                \"title\": \"Widget Title\",\n                \"live_span\": \"1h\",\n            },\n        },\n        {\n            \"check_status_definition\": {\n                \"check\": \"aws.ecs.agent_connected\",\n                \"grouping\": \"cluster\",\n                \"group_bies\": [\n                    \"account\",\n                    \"cluster\",\n                ],\n                \"tags\": [\n                    \"account:demo\",\n                    \"cluster:awseb-ruthebdog-env-8-dn3m6u3gvk\",\n                ],\n                \"title\": \"Widget Title\",\n                \"live_span\": \"1h\",\n            },\n        },\n        {\n            \"heatmap_definition\": {\n                \"requests\": [{\n                    \"q\": \"avg:system.load.1{env:staging} by {account}\",\n                    \"style\": {\n                        \"palette\": \"warm\",\n                    },\n                }],\n                \"yaxis\": {\n                    \"min\": \"1\",\n                    \"max\": \"2\",\n                    \"include_zero\": True,\n                    \"scale\": \"sqrt\",\n                },\n                \"title\": \"Widget Title\",\n                \"live_span\": \"1h\",\n            },\n        },\n        {\n            \"hostmap_definition\": {\n                \"request\": {\n                    \"fills\": [{\n                        \"q\": \"avg:system.load.1{*} by {host}\",\n                    }],\n                    \"sizes\": [{\n                        \"q\": \"avg:memcache.uptime{*} by {host}\",\n                    }],\n                },\n                \"node_type\": \"container\",\n                \"groups\": [\n                    \"host\",\n                    \"region\",\n                ],\n                \"no_group_hosts\": True,\n                \"no_metric_hosts\": True,\n                \"scopes\": [\n                    \"region:us-east-1\",\n                    \"aws_account:727006795293\",\n                ],\n                \"style\": {\n                    \"palette\": \"yellow_to_green\",\n                    \"palette_flip\": True,\n                    \"fill_min\": \"10\",\n                    \"fill_max\": \"20\",\n                },\n                \"title\": \"Widget Title\",\n            },\n        },\n        {\n            \"note_definition\": {\n                \"content\": \"note text\",\n                \"background_color\": \"pink\",\n                \"font_size\": \"14\",\n                \"text_align\": \"center\",\n                \"show_tick\": True,\n                \"tick_edge\": \"left\",\n                \"tick_pos\": \"50%\",\n            },\n        },\n        {\n            \"query_value_definition\": {\n                \"requests\": [{\n                    \"q\": \"avg:system.load.1{env:staging} by {account}\",\n                    \"aggregator\": \"sum\",\n                    \"conditional_formats\": [\n                        {\n                            \"comparator\": \"\u003c\",\n                            \"value\": 2,\n                            \"palette\": \"white_on_green\",\n                        },\n                        {\n                            \"comparator\": \"\u003e\",\n                            \"value\": 2.2,\n                            \"palette\": \"white_on_red\",\n                        },\n                    ],\n                }],\n                \"autoscale\": True,\n                \"custom_unit\": \"xx\",\n                \"precision\": 4,\n                \"text_align\": \"right\",\n                \"title\": \"Widget Title\",\n                \"live_span\": \"1h\",\n            },\n        },\n        {\n            \"query_table_definition\": {\n                \"requests\": [{\n                    \"q\": \"avg:system.load.1{env:staging} by {account}\",\n                    \"aggregator\": \"sum\",\n                    \"limit\": 10,\n                    \"conditional_formats\": [\n                        {\n                            \"comparator\": \"\u003c\",\n                            \"value\": 2,\n                            \"palette\": \"white_on_green\",\n                        },\n                        {\n                            \"comparator\": \"\u003e\",\n                            \"value\": 2.2,\n                            \"palette\": \"white_on_red\",\n                        },\n                    ],\n                }],\n                \"title\": \"Widget Title\",\n                \"live_span\": \"1h\",\n            },\n        },\n        {\n            \"scatterplot_definition\": {\n                \"request\": {\n                    \"xes\": [{\n                        \"q\": \"avg:system.cpu.user{*} by {service, account}\",\n                        \"aggregator\": \"max\",\n                    }],\n                    \"ys\": [{\n                        \"q\": \"avg:system.mem.used{*} by {service, account}\",\n                        \"aggregator\": \"min\",\n                    }],\n                },\n                \"color_by_groups\": [\n                    \"account\",\n                    \"apm-role-group\",\n                ],\n                \"xaxis\": {\n                    \"include_zero\": True,\n                    \"label\": \"x\",\n                    \"min\": \"1\",\n                    \"max\": \"2000\",\n                    \"scale\": \"pow\",\n                },\n                \"yaxis\": {\n                    \"include_zero\": False,\n                    \"label\": \"y\",\n                    \"min\": \"5\",\n                    \"max\": \"2222\",\n                    \"scale\": \"log\",\n                },\n                \"title\": \"Widget Title\",\n                \"live_span\": \"1h\",\n            },\n        },\n        {\n            \"servicemap_definition\": {\n                \"service\": \"master-db\",\n                \"filters\": [\n                    \"env:prod\",\n                    \"datacenter:dc1\",\n                ],\n                \"title\": \"env: prod, datacenter:dc1, service: master-db\",\n                \"title_size\": \"16\",\n                \"title_align\": \"left\",\n            },\n        },\n        {\n            \"timeseries_definition\": {\n                \"requests\": [\n                    {\n                        \"q\": \"avg:system.cpu.user{app:general} by {env}\",\n                        \"display_type\": \"line\",\n                        \"style\": {\n                            \"palette\": \"warm\",\n                            \"line_type\": \"dashed\",\n                            \"line_width\": \"thin\",\n                        },\n                        \"metadatas\": [{\n                            \"expression\": \"avg:system.cpu.user{app:general} by {env}\",\n                            \"alias_name\": \"Alpha\",\n                        }],\n                    },\n                    {\n                        \"log_query\": {\n                            \"index\": \"mcnulty\",\n                            \"compute_query\": {\n                                \"aggregation\": \"avg\",\n                                \"facet\": \"@duration\",\n                                \"interval\": 5000,\n                            },\n                            \"search_query\": \"status:info\",\n                            \"group_bies\": [{\n                                \"facet\": \"host\",\n                                \"limit\": 10,\n                                \"sort_query\": {\n                                    \"aggregation\": \"avg\",\n                                    \"order\": \"desc\",\n                                    \"facet\": \"@duration\",\n                                },\n                            }],\n                        },\n                        \"display_type\": \"area\",\n                    },\n                    {\n                        \"apm_query\": {\n                            \"index\": \"apm-search\",\n                            \"compute_query\": {\n                                \"aggregation\": \"avg\",\n                                \"facet\": \"@duration\",\n                                \"interval\": 5000,\n                            },\n                            \"search_query\": \"type:web\",\n                            \"group_bies\": [{\n                                \"facet\": \"resource_name\",\n                                \"limit\": 50,\n                                \"sort_query\": {\n                                    \"aggregation\": \"avg\",\n                                    \"order\": \"desc\",\n                                    \"facet\": \"@string_query.interval\",\n                                },\n                            }],\n                        },\n                        \"display_type\": \"bars\",\n                    },\n                    {\n                        \"process_query\": {\n                            \"metric\": \"process.stat.cpu.total_pct\",\n                            \"search_by\": \"error\",\n                            \"filter_bies\": [\"active\"],\n                            \"limit\": 50,\n                        },\n                        \"display_type\": \"area\",\n                    },\n                ],\n                \"markers\": [\n                    {\n                        \"display_type\": \"error dashed\",\n                        \"label\": \" z=6 \",\n                        \"value\": \"y = 4\",\n                    },\n                    {\n                        \"display_type\": \"ok solid\",\n                        \"value\": \"10 \u003c y \u003c 999\",\n                        \"label\": \" x=8 \",\n                    },\n                ],\n                \"title\": \"Widget Title\",\n                \"show_legend\": True,\n                \"legend_size\": \"2\",\n                \"live_span\": \"1h\",\n                \"events\": [\n                    {\n                        \"q\": \"sources:test tags:1\",\n                    },\n                    {\n                        \"q\": \"sources:test tags:2\",\n                    },\n                ],\n                \"yaxis\": {\n                    \"scale\": \"log\",\n                    \"include_zero\": False,\n                    \"max\": \"100\",\n                },\n            },\n        },\n        {\n            \"toplist_definition\": {\n                \"requests\": [{\n                    \"q\": \"avg:system.cpu.user{app:general} by {env}\",\n                    \"conditional_formats\": [\n                        {\n                            \"comparator\": \"\u003c\",\n                            \"value\": 2,\n                            \"palette\": \"white_on_green\",\n                        },\n                        {\n                            \"comparator\": \"\u003e\",\n                            \"value\": 2.2,\n                            \"palette\": \"white_on_red\",\n                        },\n                    ],\n                }],\n                \"title\": \"Widget Title\",\n            },\n        },\n        {\n            \"group_definition\": {\n                \"layout_type\": \"ordered\",\n                \"title\": \"Group Widget\",\n                \"widgets\": [\n                    {\n                        \"note_definition\": {\n                            \"content\": \"cluster note widget\",\n                            \"background_color\": \"pink\",\n                            \"font_size\": \"14\",\n                            \"text_align\": \"center\",\n                            \"show_tick\": True,\n                            \"tick_edge\": \"left\",\n                            \"tick_pos\": \"50%\",\n                        },\n                    },\n                    {\n                        \"alert_graph_definition\": {\n                            \"alert_id\": \"123\",\n                            \"viz_type\": \"toplist\",\n                            \"title\": \"Alert Graph\",\n                            \"live_span\": \"1h\",\n                        },\n                    },\n                ],\n            },\n        },\n        {\n            \"service_level_objective_definition\": {\n                \"title\": \"Widget Title\",\n                \"view_type\": \"detail\",\n                \"slo_id\": \"56789\",\n                \"show_error_budget\": True,\n                \"view_mode\": \"overall\",\n                \"time_windows\": [\n                    \"7d\",\n                    \"previous_week\",\n                ],\n            },\n        },\n    ],\n    template_variables=[\n        {\n            \"name\": \"var_1\",\n            \"prefix\": \"host\",\n            \"default\": \"aws\",\n        },\n        {\n            \"name\": \"var_2\",\n            \"prefix\": \"service_name\",\n            \"default\": \"autoscaling\",\n        },\n    ],\n    template_variable_presets=[{\n        \"name\": \"preset_1\",\n        \"template_variables\": [\n            {\n                \"name\": \"var_1\",\n                \"value\": \"host.dc\",\n            },\n            {\n                \"name\": \"var_2\",\n                \"value\": \"my_service\",\n            },\n        ],\n    }])\n# Example Free Layout\nfree_dashboard = datadog.Dashboard(\"free_dashboard\",\n    title=\"Free Layout Dashboard\",\n    description=\"Created using the Datadog provider in Pulumi\",\n    layout_type=\"free\",\n    widgets=[\n        {\n            \"event_stream_definition\": {\n                \"query\": \"*\",\n                \"event_size\": \"l\",\n                \"title\": \"Widget Title\",\n                \"title_size\": \"16\",\n                \"title_align\": \"left\",\n                \"live_span\": \"1h\",\n            },\n            \"widget_layout\": {\n                \"height\": 43,\n                \"width\": 32,\n                \"x\": 0,\n                \"y\": 0,\n            },\n        },\n        {\n            \"event_timeline_definition\": {\n                \"query\": \"*\",\n                \"title\": \"Widget Title\",\n                \"title_size\": \"16\",\n                \"title_align\": \"left\",\n                \"live_span\": \"1h\",\n            },\n            \"widget_layout\": {\n                \"height\": 9,\n                \"width\": 66,\n                \"x\": 33,\n                \"y\": 60,\n            },\n        },\n        {\n            \"free_text_definition\": {\n                \"text\": \"free text content\",\n                \"color\": \"#d00\",\n                \"font_size\": \"36\",\n                \"text_align\": \"left\",\n            },\n            \"widget_layout\": {\n                \"height\": 20,\n                \"width\": 34,\n                \"x\": 33,\n                \"y\": 0,\n            },\n        },\n        {\n            \"iframe_definition\": {\n                \"url\": \"http://google.com\",\n            },\n            \"widget_layout\": {\n                \"height\": 46,\n                \"width\": 39,\n                \"x\": 101,\n                \"y\": 0,\n            },\n        },\n        {\n            \"image_definition\": {\n                \"url\": \"https://images.pexels.com/photos/67636/rose-blue-flower-rose-blooms-67636.jpeg?auto=compress\u0026cs=tinysrgb\u0026h=350\",\n                \"sizing\": \"fit\",\n                \"margin\": \"small\",\n            },\n            \"widget_layout\": {\n                \"height\": 20,\n                \"width\": 30,\n                \"x\": 69,\n                \"y\": 0,\n            },\n        },\n        {\n            \"log_stream_definition\": {\n                \"indexes\": [\"main\"],\n                \"query\": \"error\",\n                \"columns\": [\n                    \"core_host\",\n                    \"core_service\",\n                    \"tag_source\",\n                ],\n                \"show_date_column\": True,\n                \"show_message_column\": True,\n                \"message_display\": \"expanded-md\",\n                \"sort\": {\n                    \"column\": \"time\",\n                    \"order\": \"desc\",\n                },\n            },\n            \"widget_layout\": {\n                \"height\": 36,\n                \"width\": 32,\n                \"x\": 0,\n                \"y\": 45,\n            },\n        },\n        {\n            \"manage_status_definition\": {\n                \"color_preference\": \"text\",\n                \"display_format\": \"countsAndList\",\n                \"hide_zero_counts\": True,\n                \"query\": \"type:metric\",\n                \"show_last_triggered\": False,\n                \"sort\": \"status,asc\",\n                \"summary_type\": \"monitors\",\n                \"title\": \"Widget Title\",\n                \"title_size\": \"16\",\n                \"title_align\": \"left\",\n            },\n            \"widget_layout\": {\n                \"height\": 40,\n                \"width\": 30,\n                \"x\": 101,\n                \"y\": 48,\n            },\n        },\n        {\n            \"trace_service_definition\": {\n                \"display_format\": \"three_column\",\n                \"env\": \"datadog.com\",\n                \"service\": \"alerting-cassandra\",\n                \"show_breakdown\": True,\n                \"show_distribution\": True,\n                \"show_errors\": True,\n                \"show_hits\": True,\n                \"show_latency\": False,\n                \"show_resource_list\": False,\n                \"size_format\": \"large\",\n                \"span_name\": \"cassandra.query\",\n                \"title\": \"alerting-cassandra #env:datadog.com\",\n                \"title_align\": \"center\",\n                \"title_size\": \"13\",\n                \"live_span\": \"1h\",\n            },\n            \"widget_layout\": {\n                \"height\": 38,\n                \"width\": 66,\n                \"x\": 33,\n                \"y\": 21,\n            },\n        },\n        {\n            \"timeseries_definition\": {\n                \"requests\": [{\n                    \"formulas\": [\n                        {\n                            \"formula_expression\": \"my_query_1 + my_query_2\",\n                            \"alias\": \"my ff query\",\n                        },\n                        {\n                            \"formula_expression\": \"my_query_1 * my_query_2\",\n                            \"limit\": {\n                                \"count\": 5,\n                                \"order\": \"desc\",\n                            },\n                            \"alias\": \"my second ff query\",\n                        },\n                    ],\n                    \"queries\": [\n                        {\n                            \"metric_query\": {\n                                \"data_source\": \"metrics\",\n                                \"query\": \"avg:system.cpu.user{app:general} by {env}\",\n                                \"name\": \"my_query_1\",\n                                \"aggregator\": \"sum\",\n                            },\n                        },\n                        {\n                            \"metric_query\": {\n                                \"query\": \"avg:system.cpu.user{app:general} by {env}\",\n                                \"name\": \"my_query_2\",\n                                \"aggregator\": \"sum\",\n                            },\n                        },\n                    ],\n                }],\n            },\n            \"widget_layout\": {\n                \"height\": 16,\n                \"width\": 25,\n                \"x\": 58,\n                \"y\": 83,\n            },\n        },\n        {\n            \"timeseries_definition\": {\n                \"requests\": [\n                    {\n                        \"queries\": [{\n                            \"event_query\": {\n                                \"name\": \"my-query\",\n                                \"data_source\": \"logs\",\n                                \"indexes\": [\"days-3\"],\n                                \"computes\": [{\n                                    \"aggregation\": \"count\",\n                                }],\n                                \"group_bies\": [{\n                                    \"facet\": \"host\",\n                                    \"sort\": {\n                                        \"metric\": \"@lambda.max_memory_used\",\n                                        \"aggregation\": \"avg\",\n                                    },\n                                    \"limit\": 10,\n                                }],\n                            },\n                        }],\n                    },\n                    {\n                        \"display_type\": \"overlay\",\n                        \"queries\": [{\n                            \"metric_query\": {\n                                \"name\": \"MyOverlay\",\n                                \"data_source\": \"metrics\",\n                                \"query\": \"avg:system.cpu.user{host:COMP-QJWVM2FYT4}\",\n                            },\n                        }],\n                    },\n                ],\n            },\n            \"widget_layout\": {\n                \"height\": 16,\n                \"width\": 28,\n                \"x\": 29,\n                \"y\": 83,\n            },\n        },\n        {\n            \"timeseries_definition\": {\n                \"requests\": [{\n                    \"queries\": [{\n                        \"process_query\": {\n                            \"data_source\": \"process\",\n                            \"text_filter\": \"abc\",\n                            \"metric\": \"process.stat.cpu.total_pct\",\n                            \"limit\": 10,\n                            \"tag_filters\": [\"some_filter\"],\n                            \"name\": \"my_process_query\",\n                            \"sort\": \"asc\",\n                            \"is_normalized_cpu\": True,\n                            \"aggregator\": \"sum\",\n                        },\n                    }],\n                }],\n            },\n            \"widget_layout\": {\n                \"height\": 16,\n                \"width\": 28,\n                \"x\": 0,\n                \"y\": 83,\n            },\n        },\n        {\n            \"timeseries_definition\": {\n                \"requests\": [{\n                    \"formulas\": [{\n                        \"formula_expression\": \"query1\",\n                        \"alias\": \"my cloud cost query\",\n                    }],\n                    \"queries\": [{\n                        \"cloud_cost_query\": {\n                            \"data_source\": \"cloud_cost\",\n                            \"query\": \"sum:aws.cost.amortized{*}\",\n                            \"name\": \"query1\",\n                            \"aggregator\": \"sum\",\n                        },\n                    }],\n                }],\n            },\n        },\n        {\n            \"powerpack_definition\": {\n                \"powerpack_id\": \"00000000-0000-0000-0000-000000000000\",\n                \"background_color\": \"blue\",\n                \"banner_img\": \"https://example.org/example.png\",\n                \"show_title\": True,\n                \"title\": \"Powerpack Widget\",\n                \"template_variables\": {\n                    \"controlled_externallies\": [{\n                        \"name\": \"var_2\",\n                        \"values\": [\"autoscaling\"],\n                        \"prefix\": \"service_name\",\n                    }],\n                    \"controlled_by_powerpacks\": [{\n                        \"name\": \"var_3\",\n                        \"prefix\": \"timeframe\",\n                        \"values\": [\n                            \"default\",\n                            \"values\",\n                            \"here\",\n                        ],\n                    }],\n                },\n            },\n        },\n    ],\n    template_variables=[\n        {\n            \"name\": \"var_1\",\n            \"prefix\": \"host\",\n            \"default\": \"aws\",\n        },\n        {\n            \"name\": \"var_2\",\n            \"prefix\": \"service_name\",\n            \"default\": \"autoscaling\",\n        },\n    ],\n    template_variable_presets=[{\n        \"name\": \"preset_1\",\n        \"template_variables\": [\n            {\n                \"name\": \"var_1\",\n                \"value\": \"host.dc\",\n            },\n            {\n                \"name\": \"var_2\",\n                \"value\": \"my_service\",\n            },\n        ],\n    }])\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Datadog = Pulumi.Datadog;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    // Example Ordered Layout\n    var orderedDashboard = new Datadog.Dashboard(\"ordered_dashboard\", new()\n    {\n        Title = \"Ordered Layout Dashboard\",\n        Description = \"Created using the Datadog provider in Pulumi\",\n        LayoutType = \"ordered\",\n        Widgets = new[]\n        {\n            new Datadog.Inputs.DashboardWidgetArgs\n            {\n                AlertGraphDefinition = new Datadog.Inputs.DashboardWidgetAlertGraphDefinitionArgs\n                {\n                    AlertId = \"895605\",\n                    VizType = \"timeseries\",\n                    Title = \"Widget Title\",\n                    LiveSpan = \"1h\",\n                },\n            },\n            new Datadog.Inputs.DashboardWidgetArgs\n            {\n                AlertValueDefinition = new Datadog.Inputs.DashboardWidgetAlertValueDefinitionArgs\n                {\n                    AlertId = \"895605\",\n                    Precision = 3,\n                    Unit = \"b\",\n                    TextAlign = \"center\",\n                    Title = \"Widget Title\",\n                },\n            },\n            new Datadog.Inputs.DashboardWidgetArgs\n            {\n                AlertValueDefinition = new Datadog.Inputs.DashboardWidgetAlertValueDefinitionArgs\n                {\n                    AlertId = \"895605\",\n                    Precision = 3,\n                    Unit = \"b\",\n                    TextAlign = \"center\",\n                    Title = \"Widget Title\",\n                },\n            },\n            new Datadog.Inputs.DashboardWidgetArgs\n            {\n                ChangeDefinition = new Datadog.Inputs.DashboardWidgetChangeDefinitionArgs\n                {\n                    Requests = new[]\n                    {\n                        new Datadog.Inputs.DashboardWidgetChangeDefinitionRequestArgs\n                        {\n                            Q = \"avg:system.load.1{env:staging} by {account}\",\n                            ChangeType = \"absolute\",\n                            CompareTo = \"week_before\",\n                            IncreaseGood = true,\n                            OrderBy = \"name\",\n                            OrderDir = \"desc\",\n                            ShowPresent = true,\n                        },\n                    },\n                    Title = \"Widget Title\",\n                    LiveSpan = \"1h\",\n                },\n            },\n            new Datadog.Inputs.DashboardWidgetArgs\n            {\n                DistributionDefinition = new Datadog.Inputs.DashboardWidgetDistributionDefinitionArgs\n                {\n                    Requests = new[]\n                    {\n                        new Datadog.Inputs.DashboardWidgetDistributionDefinitionRequestArgs\n                        {\n                            Q = \"avg:system.load.1{env:staging} by {account}\",\n                            Style = new Datadog.Inputs.DashboardWidgetDistributionDefinitionRequestStyleArgs\n                            {\n                                Palette = \"warm\",\n                            },\n                        },\n                    },\n                    Title = \"Widget Title\",\n                    LiveSpan = \"1h\",\n                },\n            },\n            new Datadog.Inputs.DashboardWidgetArgs\n            {\n                CheckStatusDefinition = new Datadog.Inputs.DashboardWidgetCheckStatusDefinitionArgs\n                {\n                    Check = \"aws.ecs.agent_connected\",\n                    Grouping = \"cluster\",\n                    GroupBies = new[]\n                    {\n                        \"account\",\n                        \"cluster\",\n                    },\n                    Tags = new[]\n                    {\n                        \"account:demo\",\n                        \"cluster:awseb-ruthebdog-env-8-dn3m6u3gvk\",\n                    },\n                    Title = \"Widget Title\",\n                    LiveSpan = \"1h\",\n                },\n            },\n            new Datadog.Inputs.DashboardWidgetArgs\n            {\n                HeatmapDefinition = new Datadog.Inputs.DashboardWidgetHeatmapDefinitionArgs\n                {\n                    Requests = new[]\n                    {\n                        new Datadog.Inputs.DashboardWidgetHeatmapDefinitionRequestArgs\n                        {\n                            Q = \"avg:system.load.1{env:staging} by {account}\",\n                            Style = new Datadog.Inputs.DashboardWidgetHeatmapDefinitionRequestStyleArgs\n                            {\n                                Palette = \"warm\",\n                            },\n                        },\n                    },\n                    Yaxis = new Datadog.Inputs.DashboardWidgetHeatmapDefinitionYaxisArgs\n                    {\n                        Min = \"1\",\n                        Max = \"2\",\n                        IncludeZero = true,\n                        Scale = \"sqrt\",\n                    },\n                    Title = \"Widget Title\",\n                    LiveSpan = \"1h\",\n                },\n            },\n            new Datadog.Inputs.DashboardWidgetArgs\n            {\n                HostmapDefinition = new Datadog.Inputs.DashboardWidgetHostmapDefinitionArgs\n                {\n                    Request = new Datadog.Inputs.DashboardWidgetHostmapDefinitionRequestArgs\n                    {\n                        Fills = new[]\n                        {\n                            new Datadog.Inputs.DashboardWidgetHostmapDefinitionRequestFillArgs\n                            {\n                                Q = \"avg:system.load.1{*} by {host}\",\n                            },\n                        },\n                        Sizes = new[]\n                        {\n                            new Datadog.Inputs.DashboardWidgetHostmapDefinitionRequestSizeArgs\n                            {\n                                Q = \"avg:memcache.uptime{*} by {host}\",\n                            },\n                        },\n                    },\n                    NodeType = \"container\",\n                    Groups = new[]\n                    {\n                        \"host\",\n                        \"region\",\n                    },\n                    NoGroupHosts = true,\n                    NoMetricHosts = true,\n                    Scopes = new[]\n                    {\n                        \"region:us-east-1\",\n                        \"aws_account:727006795293\",\n                    },\n                    Style = new Datadog.Inputs.DashboardWidgetHostmapDefinitionStyleArgs\n                    {\n                        Palette = \"yellow_to_green\",\n                        PaletteFlip = true,\n                        FillMin = \"10\",\n                        FillMax = \"20\",\n                    },\n                    Title = \"Widget Title\",\n                },\n            },\n            new Datadog.Inputs.DashboardWidgetArgs\n            {\n                NoteDefinition = new Datadog.Inputs.DashboardWidgetNoteDefinitionArgs\n                {\n                    Content = \"note text\",\n                    BackgroundColor = \"pink\",\n                    FontSize = \"14\",\n                    TextAlign = \"center\",\n                    ShowTick = true,\n                    TickEdge = \"left\",\n                    TickPos = \"50%\",\n                },\n            },\n            new Datadog.Inputs.DashboardWidgetArgs\n            {\n                QueryValueDefinition = new Datadog.Inputs.DashboardWidgetQueryValueDefinitionArgs\n                {\n                    Requests = new[]\n                    {\n                        new Datadog.Inputs.DashboardWidgetQueryValueDefinitionRequestArgs\n                        {\n                            Q = \"avg:system.load.1{env:staging} by {account}\",\n                            Aggregator = \"sum\",\n                            ConditionalFormats = new[]\n                            {\n                                new Datadog.Inputs.DashboardWidgetQueryValueDefinitionRequestConditionalFormatArgs\n                                {\n                                    Comparator = \"\u003c\",\n                                    Value = 2,\n                                    Palette = \"white_on_green\",\n                                },\n                                new Datadog.Inputs.DashboardWidgetQueryValueDefinitionRequestConditionalFormatArgs\n                                {\n                                    Comparator = \"\u003e\",\n                                    Value = 2.2,\n                                    Palette = \"white_on_red\",\n                                },\n                            },\n                        },\n                    },\n                    Autoscale = true,\n                    CustomUnit = \"xx\",\n                    Precision = 4,\n                    TextAlign = \"right\",\n                    Title = \"Widget Title\",\n                    LiveSpan = \"1h\",\n                },\n            },\n            new Datadog.Inputs.DashboardWidgetArgs\n            {\n                QueryTableDefinition = new Datadog.Inputs.DashboardWidgetQueryTableDefinitionArgs\n                {\n                    Requests = new[]\n                    {\n                        new Datadog.Inputs.DashboardWidgetQueryTableDefinitionRequestArgs\n                        {\n                            Q = \"avg:system.load.1{env:staging} by {account}\",\n                            Aggregator = \"sum\",\n                            Limit = 10,\n                            ConditionalFormats = new[]\n                            {\n                                new Datadog.Inputs.DashboardWidgetQueryTableDefinitionRequestConditionalFormatArgs\n                                {\n                                    Comparator = \"\u003c\",\n                                    Value = 2,\n                                    Palette = \"white_on_green\",\n                                },\n                                new Datadog.Inputs.DashboardWidgetQueryTableDefinitionRequestConditionalFormatArgs\n                                {\n                                    Comparator = \"\u003e\",\n                                    Value = 2.2,\n                                    Palette = \"white_on_red\",\n                                },\n                            },\n                        },\n                    },\n                    Title = \"Widget Title\",\n                    LiveSpan = \"1h\",\n                },\n            },\n            new Datadog.Inputs.DashboardWidgetArgs\n            {\n                ScatterplotDefinition = new Datadog.Inputs.DashboardWidgetScatterplotDefinitionArgs\n                {\n                    Request = new Datadog.Inputs.DashboardWidgetScatterplotDefinitionRequestArgs\n                    {\n                        Xes = new[]\n                        {\n                            new Datadog.Inputs.DashboardWidgetScatterplotDefinitionRequestXArgs\n                            {\n                                Q = \"avg:system.cpu.user{*} by {service, account}\",\n                                Aggregator = \"max\",\n                            },\n                        },\n                        Ys = new[]\n                        {\n                            new Datadog.Inputs.DashboardWidgetScatterplotDefinitionRequestYArgs\n                            {\n                                Q = \"avg:system.mem.used{*} by {service, account}\",\n                                Aggregator = \"min\",\n                            },\n                        },\n                    },\n                    ColorByGroups = new[]\n                    {\n                        \"account\",\n                        \"apm-role-group\",\n                    },\n                    Xaxis = new Datadog.Inputs.DashboardWidgetScatterplotDefinitionXaxisArgs\n                    {\n                        IncludeZero = true,\n                        Label = \"x\",\n                        Min = \"1\",\n                        Max = \"2000\",\n                        Scale = \"pow\",\n                    },\n                    Yaxis = new Datadog.Inputs.DashboardWidgetScatterplotDefinitionYaxisArgs\n                    {\n                        IncludeZero = false,\n                        Label = \"y\",\n                        Min = \"5\",\n                        Max = \"2222\",\n                        Scale = \"log\",\n                    },\n                    Title = \"Widget Title\",\n                    LiveSpan = \"1h\",\n                },\n            },\n            new Datadog.Inputs.DashboardWidgetArgs\n            {\n                ServicemapDefinition = new Datadog.Inputs.DashboardWidgetServicemapDefinitionArgs\n                {\n                    Service = \"master-db\",\n                    Filters = new[]\n                    {\n                        \"env:prod\",\n                        \"datacenter:dc1\",\n                    },\n                    Title = \"env: prod, datacenter:dc1, service: master-db\",\n                    TitleSize = \"16\",\n                    TitleAlign = \"left\",\n                },\n            },\n            new Datadog.Inputs.DashboardWidgetArgs\n            {\n                TimeseriesDefinition = new Datadog.Inputs.DashboardWidgetTimeseriesDefinitionArgs\n                {\n                    Requests = new[]\n                    {\n                        new Datadog.Inputs.DashboardWidgetTimeseriesDefinitionRequestArgs\n                        {\n                            Q = \"avg:system.cpu.user{app:general} by {env}\",\n                            DisplayType = \"line\",\n                            Style = new Datadog.Inputs.DashboardWidgetTimeseriesDefinitionRequestStyleArgs\n                            {\n                                Palette = \"warm\",\n                                LineType = \"dashed\",\n                                LineWidth = \"thin\",\n                            },\n                            Metadatas = new[]\n                            {\n                                new Datadog.Inputs.DashboardWidgetTimeseriesDefinitionRequestMetadataArgs\n                                {\n                                    Expression = \"avg:system.cpu.user{app:general} by {env}\",\n                                    AliasName = \"Alpha\",\n                                },\n                            },\n                        },\n                        new Datadog.Inputs.DashboardWidgetTimeseriesDefinitionRequestArgs\n                        {\n                            LogQuery = new Datadog.Inputs.DashboardWidgetLogQueryArgs\n                            {\n                                Index = \"mcnulty\",\n                                ComputeQuery = new Datadog.Inputs.DashboardWidgetLogQueryComputeQueryArgs\n                                {\n                                    Aggregation = \"avg\",\n                                    Facet = \"@duration\",\n                                    Interval = 5000,\n                                },\n                                SearchQuery = \"status:info\",\n                                GroupBies = new[]\n                                {\n                                    new Datadog.Inputs.DashboardWidgetLogQueryGroupByArgs\n                                    {\n                                        Facet = \"host\",\n                                        Limit = 10,\n                                        SortQuery = new Datadog.Inputs.DashboardWidgetLogQueryGroupBySortQueryArgs\n                                        {\n                                            Aggregation = \"avg\",\n                                            Order = \"desc\",\n                                            Facet = \"@duration\",\n                                        },\n                                    },\n                                },\n                            },\n                            DisplayType = \"area\",\n                        },\n                        new Datadog.Inputs.DashboardWidgetTimeseriesDefinitionRequestArgs\n                        {\n                            ApmQuery = new Datadog.Inputs.DashboardWidgetApmQueryArgs\n                            {\n                                Index = \"apm-search\",\n                                ComputeQuery = new Datadog.Inputs.DashboardWidgetApmQueryComputeQueryArgs\n                                {\n                                    Aggregation = \"avg\",\n                                    Facet = \"@duration\",\n                                    Interval = 5000,\n                                },\n                                SearchQuery = \"type:web\",\n                                GroupBies = new[]\n                                {\n                                    new Datadog.Inputs.DashboardWidgetApmQueryGroupByArgs\n                                    {\n                                        Facet = \"resource_name\",\n                                        Limit = 50,\n                                        SortQuery = new Datadog.Inputs.DashboardWidgetApmQueryGroupBySortQueryArgs\n                                        {\n                                            Aggregation = \"avg\",\n                                            Order = \"desc\",\n                                            Facet = \"@string_query.interval\",\n                                        },\n                                    },\n                                },\n                            },\n                            DisplayType = \"bars\",\n                        },\n                        new Datadog.Inputs.DashboardWidgetTimeseriesDefinitionRequestArgs\n                        {\n                            ProcessQuery = new Datadog.Inputs.DashboardWidgetTimeseriesDefinitionRequestProcessQueryArgs\n                            {\n                                Metric = \"process.stat.cpu.total_pct\",\n                                SearchBy = \"error\",\n                                FilterBies = new[]\n                                {\n                                    \"active\",\n                                },\n                                Limit = 50,\n                            },\n                            DisplayType = \"area\",\n                        },\n                    },\n                    Markers = new[]\n                    {\n                        new Datadog.Inputs.DashboardWidgetTimeseriesDefinitionMarkerArgs\n                        {\n                            DisplayType = \"error dashed\",\n                            Label = \" z=6 \",\n                            Value = \"y = 4\",\n                        },\n                        new Datadog.Inputs.DashboardWidgetTimeseriesDefinitionMarkerArgs\n                        {\n                            DisplayType = \"ok solid\",\n                            Value = \"10 \u003c y \u003c 999\",\n                            Label = \" x=8 \",\n                        },\n                    },\n                    Title = \"Widget Title\",\n                    ShowLegend = true,\n                    LegendSize = \"2\",\n                    LiveSpan = \"1h\",\n                    Events = new[]\n                    {\n                        new Datadog.Inputs.DashboardWidgetTimeseriesDefinitionEventArgs\n                        {\n                            Q = \"sources:test tags:1\",\n                        },\n                        new Datadog.Inputs.DashboardWidgetTimeseriesDefinitionEventArgs\n                        {\n                            Q = \"sources:test tags:2\",\n                        },\n                    },\n                    Yaxis = new Datadog.Inputs.DashboardWidgetTimeseriesDefinitionYaxisArgs\n                    {\n                        Scale = \"log\",\n                        IncludeZero = false,\n                        Max = \"100\",\n                    },\n                },\n            },\n            new Datadog.Inputs.DashboardWidgetArgs\n            {\n                ToplistDefinition = new Datadog.Inputs.DashboardWidgetToplistDefinitionArgs\n                {\n                    Requests = new[]\n                    {\n                        new Datadog.Inputs.DashboardWidgetToplistDefinitionRequestArgs\n                        {\n                            Q = \"avg:system.cpu.user{app:general} by {env}\",\n                            ConditionalFormats = new[]\n                            {\n                                new Datadog.Inputs.DashboardWidgetToplistDefinitionRequestConditionalFormatArgs\n                                {\n                                    Comparator = \"\u003c\",\n                                    Value = 2,\n                                    Palette = \"white_on_green\",\n                                },\n                                new Datadog.Inputs.DashboardWidgetToplistDefinitionRequestConditionalFormatArgs\n                                {\n                                    Comparator = \"\u003e\",\n                                    Value = 2.2,\n                                    Palette = \"white_on_red\",\n                                },\n                            },\n                        },\n                    },\n                    Title = \"Widget Title\",\n                },\n            },\n            new Datadog.Inputs.DashboardWidgetArgs\n            {\n                GroupDefinition = new Datadog.Inputs.DashboardWidgetGroupDefinitionArgs\n                {\n                    LayoutType = \"ordered\",\n                    Title = \"Group Widget\",\n                    Widgets = new[]\n                    {\n                        new Datadog.Inputs.DashboardWidgetGroupDefinitionWidgetArgs\n                        {\n                            NoteDefinition = new Datadog.Inputs.DashboardWidgetNoteDefinitionArgs\n                            {\n                                Content = \"cluster note widget\",\n                                BackgroundColor = \"pink\",\n                                FontSize = \"14\",\n                                TextAlign = \"center\",\n                                ShowTick = true,\n                                TickEdge = \"left\",\n                                TickPos = \"50%\",\n                            },\n                        },\n                        new Datadog.Inputs.DashboardWidgetGroupDefinitionWidgetArgs\n                        {\n                            AlertGraphDefinition = new Datadog.Inputs.DashboardWidgetAlertGraphDefinitionArgs\n                            {\n                                AlertId = \"123\",\n                                VizType = \"toplist\",\n                                Title = \"Alert Graph\",\n                                LiveSpan = \"1h\",\n                            },\n                        },\n                    },\n                },\n            },\n            new Datadog.Inputs.DashboardWidgetArgs\n            {\n                ServiceLevelObjectiveDefinition = new Datadog.Inputs.DashboardWidgetServiceLevelObjectiveDefinitionArgs\n                {\n                    Title = \"Widget Title\",\n                    ViewType = \"detail\",\n                    SloId = \"56789\",\n                    ShowErrorBudget = true,\n                    ViewMode = \"overall\",\n                    TimeWindows = new[]\n                    {\n                        \"7d\",\n                        \"previous_week\",\n                    },\n                },\n            },\n        },\n        TemplateVariables = new[]\n        {\n            new Datadog.Inputs.DashboardTemplateVariableArgs\n            {\n                Name = \"var_1\",\n                Prefix = \"host\",\n                Default = \"aws\",\n            },\n            new Datadog.Inputs.DashboardTemplateVariableArgs\n            {\n                Name = \"var_2\",\n                Prefix = \"service_name\",\n                Default = \"autoscaling\",\n            },\n        },\n        TemplateVariablePresets = new[]\n        {\n            new Datadog.Inputs.DashboardTemplateVariablePresetArgs\n            {\n                Name = \"preset_1\",\n                TemplateVariables = new[]\n                {\n                    new Datadog.Inputs.DashboardTemplateVariablePresetTemplateVariableArgs\n                    {\n                        Name = \"var_1\",\n                        Value = \"host.dc\",\n                    },\n                    new Datadog.Inputs.DashboardTemplateVariablePresetTemplateVariableArgs\n                    {\n                        Name = \"var_2\",\n                        Value = \"my_service\",\n                    },\n                },\n            },\n        },\n    });\n\n    // Example Free Layout\n    var freeDashboard = new Datadog.Dashboard(\"free_dashboard\", new()\n    {\n        Title = \"Free Layout Dashboard\",\n        Description = \"Created using the Datadog provider in Pulumi\",\n        LayoutType = \"free\",\n        Widgets = new[]\n        {\n            new Datadog.Inputs.DashboardWidgetArgs\n            {\n                EventStreamDefinition = new Datadog.Inputs.DashboardWidgetEventStreamDefinitionArgs\n                {\n                    Query = \"*\",\n                    EventSize = \"l\",\n                    Title = \"Widget Title\",\n                    TitleSize = \"16\",\n                    TitleAlign = \"left\",\n                    LiveSpan = \"1h\",\n                },\n                WidgetLayout = new Datadog.Inputs.DashboardWidgetWidgetLayoutArgs\n                {\n                    Height = 43,\n                    Width = 32,\n                    X = 0,\n                    Y = 0,\n                },\n            },\n            new Datadog.Inputs.DashboardWidgetArgs\n            {\n                EventTimelineDefinition = new Datadog.Inputs.DashboardWidgetEventTimelineDefinitionArgs\n                {\n                    Query = \"*\",\n                    Title = \"Widget Title\",\n                    TitleSize = \"16\",\n                    TitleAlign = \"left\",\n                    LiveSpan = \"1h\",\n                },\n                WidgetLayout = new Datadog.Inputs.DashboardWidgetWidgetLayoutArgs\n                {\n                    Height = 9,\n                    Width = 66,\n                    X = 33,\n                    Y = 60,\n                },\n            },\n            new Datadog.Inputs.DashboardWidgetArgs\n            {\n                FreeTextDefinition = new Datadog.Inputs.DashboardWidgetFreeTextDefinitionArgs\n                {\n                    Text = \"free text content\",\n                    Color = \"#d00\",\n                    FontSize = \"36\",\n                    TextAlign = \"left\",\n                },\n                WidgetLayout = new Datadog.Inputs.DashboardWidgetWidgetLayoutArgs\n                {\n                    Height = 20,\n                    Width = 34,\n                    X = 33,\n                    Y = 0,\n                },\n            },\n            new Datadog.Inputs.DashboardWidgetArgs\n            {\n                IframeDefinition = new Datadog.Inputs.DashboardWidgetIframeDefinitionArgs\n                {\n                    Url = \"http://google.com\",\n                },\n                WidgetLayout = new Datadog.Inputs.DashboardWidgetWidgetLayoutArgs\n                {\n                    Height = 46,\n                    Width = 39,\n                    X = 101,\n                    Y = 0,\n                },\n            },\n            new Datadog.Inputs.DashboardWidgetArgs\n            {\n                ImageDefinition = new Datadog.Inputs.DashboardWidgetImageDefinitionArgs\n                {\n                    Url = \"https://images.pexels.com/photos/67636/rose-blue-flower-rose-blooms-67636.jpeg?auto=compress\u0026cs=tinysrgb\u0026h=350\",\n                    Sizing = \"fit\",\n                    Margin = \"small\",\n                },\n                WidgetLayout = new Datadog.Inputs.DashboardWidgetWidgetLayoutArgs\n                {\n                    Height = 20,\n                    Width = 30,\n                    X = 69,\n                    Y = 0,\n                },\n            },\n            new Datadog.Inputs.DashboardWidgetArgs\n            {\n                LogStreamDefinition = new Datadog.Inputs.DashboardWidgetLogStreamDefinitionArgs\n                {\n                    Indexes = new[]\n                    {\n                        \"main\",\n                    },\n                    Query = \"error\",\n                    Columns = new[]\n                    {\n                        \"core_host\",\n                        \"core_service\",\n                        \"tag_source\",\n                    },\n                    ShowDateColumn = true,\n                    ShowMessageColumn = true,\n                    MessageDisplay = \"expanded-md\",\n                    Sort = new Datadog.Inputs.DashboardWidgetLogStreamDefinitionSortArgs\n                    {\n                        Column = \"time\",\n                        Order = \"desc\",\n                    },\n                },\n                WidgetLayout = new Datadog.Inputs.DashboardWidgetWidgetLayoutArgs\n                {\n                    Height = 36,\n                    Width = 32,\n                    X = 0,\n                    Y = 45,\n                },\n            },\n            new Datadog.Inputs.DashboardWidgetArgs\n            {\n                ManageStatusDefinition = new Datadog.Inputs.DashboardWidgetManageStatusDefinitionArgs\n                {\n                    ColorPreference = \"text\",\n                    DisplayFormat = \"countsAndList\",\n                    HideZeroCounts = true,\n                    Query = \"type:metric\",\n                    ShowLastTriggered = false,\n                    Sort = \"status,asc\",\n                    SummaryType = \"monitors\",\n                    Title = \"Widget Title\",\n                    TitleSize = \"16\",\n                    TitleAlign = \"left\",\n                },\n                WidgetLayout = new Datadog.Inputs.DashboardWidgetWidgetLayoutArgs\n                {\n                    Height = 40,\n                    Width = 30,\n                    X = 101,\n                    Y = 48,\n                },\n            },\n            new Datadog.Inputs.DashboardWidgetArgs\n            {\n                TraceServiceDefinition = new Datadog.Inputs.DashboardWidgetTraceServiceDefinitionArgs\n                {\n                    DisplayFormat = \"three_column\",\n                    Env = \"datadog.com\",\n                    Service = \"alerting-cassandra\",\n                    ShowBreakdown = true,\n                    ShowDistribution = true,\n                    ShowErrors = true,\n                    ShowHits = true,\n                    ShowLatency = false,\n                    ShowResourceList = false,\n                    SizeFormat = \"large\",\n                    SpanName = \"cassandra.query\",\n                    Title = \"alerting-cassandra #env:datadog.com\",\n                    TitleAlign = \"center\",\n                    TitleSize = \"13\",\n                    LiveSpan = \"1h\",\n                },\n                WidgetLayout = new Datadog.Inputs.DashboardWidgetWidgetLayoutArgs\n                {\n                    Height = 38,\n                    Width = 66,\n                    X = 33,\n                    Y = 21,\n                },\n            },\n            new Datadog.Inputs.DashboardWidgetArgs\n            {\n                TimeseriesDefinition = new Datadog.Inputs.DashboardWidgetTimeseriesDefinitionArgs\n                {\n                    Requests = new[]\n                    {\n                        new Datadog.Inputs.DashboardWidgetTimeseriesDefinitionRequestArgs\n                        {\n                            Formulas = new[]\n                            {\n                                new Datadog.Inputs.DashboardWidgetTimeseriesDefinitionRequestFormulaArgs\n                                {\n                                    FormulaExpression = \"my_query_1 + my_query_2\",\n                                    Alias = \"my ff query\",\n                                },\n                                new Datadog.Inputs.DashboardWidgetTimeseriesDefinitionRequestFormulaArgs\n                                {\n                                    FormulaExpression = \"my_query_1 * my_query_2\",\n                                    Limit = new Datadog.Inputs.DashboardWidgetTimeseriesDefinitionRequestFormulaLimitArgs\n                                    {\n                                        Count = 5,\n                                        Order = \"desc\",\n                                    },\n                                    Alias = \"my second ff query\",\n                                },\n                            },\n                            Queries = new[]\n                            {\n                                new Datadog.Inputs.DashboardWidgetTimeseriesDefinitionRequestQueryArgs\n                                {\n                                    MetricQuery = new Datadog.Inputs.DashboardWidgetTimeseriesDefinitionRequestQueryMetricQueryArgs\n                                    {\n                                        DataSource = \"metrics\",\n                                        Query = \"avg:system.cpu.user{app:general} by {env}\",\n                                        Name = \"my_query_1\",\n                                        Aggregator = \"sum\",\n                                    },\n                                },\n                                new Datadog.Inputs.DashboardWidgetTimeseriesDefinitionRequestQueryArgs\n                                {\n                                    MetricQuery = new Datadog.Inputs.DashboardWidgetTimeseriesDefinitionRequestQueryMetricQueryArgs\n                                    {\n                                        Query = \"avg:system.cpu.user{app:general} by {env}\",\n                                        Name = \"my_query_2\",\n                                        Aggregator = \"sum\",\n                                    },\n                                },\n                            },\n                        },\n                    },\n                },\n                WidgetLayout = new Datadog.Inputs.DashboardWidgetWidgetLayoutArgs\n                {\n                    Height = 16,\n                    Width = 25,\n                    X = 58,\n                    Y = 83,\n                },\n            },\n            new Datadog.Inputs.DashboardWidgetArgs\n            {\n                TimeseriesDefinition = new Datadog.Inputs.DashboardWidgetTimeseriesDefinitionArgs\n                {\n                    Requests = new[]\n                    {\n                        new Datadog.Inputs.DashboardWidgetTimeseriesDefinitionRequestArgs\n                        {\n                            Queries = new[]\n                            {\n                                new Datadog.Inputs.DashboardWidgetTimeseriesDefinitionRequestQueryArgs\n                                {\n                                    EventQuery = new Datadog.Inputs.DashboardWidgetTimeseriesDefinitionRequestQueryEventQueryArgs\n                                    {\n                                        Name = \"my-query\",\n                                        DataSource = \"logs\",\n                                        Indexes = new[]\n                                        {\n                                            \"days-3\",\n                                        },\n                                        Computes = new[]\n                                        {\n                                            new Datadog.Inputs.DashboardWidgetTimeseriesDefinitionRequestQueryEventQueryComputeArgs\n                                            {\n                                                Aggregation = \"count\",\n                                            },\n                                        },\n                                        GroupBies = new[]\n                                        {\n                                            new Datadog.Inputs.DashboardWidgetTimeseriesDefinitionRequestQueryEventQueryGroupByArgs\n                                            {\n                                                Facet = \"host\",\n                                                Sort = new Datadog.Inputs.DashboardWidgetTimeseriesDefinitionRequestQueryEventQueryGroupBySortArgs\n                                                {\n                                                    Metric = \"@lambda.max_memory_used\",\n                                                    Aggregation = \"avg\",\n                                                },\n                                                Limit = 10,\n                                            },\n                                        },\n                                    },\n                                },\n                            },\n                        },\n                        new Datadog.Inputs.DashboardWidgetTimeseriesDefinitionRequestArgs\n                        {\n                            DisplayType = \"overlay\",\n                            Queries = new[]\n                            {\n                                new Datadog.Inputs.DashboardWidgetTimeseriesDefinitionRequestQueryArgs\n                                {\n                                    MetricQuery = new Datadog.Inputs.DashboardWidgetTimeseriesDefinitionRequestQueryMetricQueryArgs\n                                    {\n                                        Name = \"MyOverlay\",\n                                        DataSource = \"metrics\",\n                                        Query = \"avg:system.cpu.user{host:COMP-QJWVM2FYT4}\",\n                                    },\n                                },\n                            },\n                        },\n                    },\n                },\n                WidgetLayout = new Datadog.Inputs.DashboardWidgetWidgetLayoutArgs\n                {\n                    Height = 16,\n                    Width = 28,\n                    X = 29,\n                    Y = 83,\n                },\n            },\n            new Datadog.Inputs.DashboardWidgetArgs\n            {\n                TimeseriesDefinition = new Datadog.Inputs.DashboardWidgetTimeseriesDefinitionArgs\n                {\n                    Requests = new[]\n                    {\n                        new Datadog.Inputs.DashboardWidgetTimeseriesDefinitionRequestArgs\n                        {\n                            Queries = new[]\n                            {\n                                new Datadog.Inputs.DashboardWidgetTimeseriesDefinitionRequestQueryArgs\n                                {\n                                    ProcessQuery = new Datadog.Inputs.DashboardWidgetTimeseriesDefinitionRequestQueryProcessQueryArgs\n                                    {\n                                        DataSource = \"process\",\n                                        TextFilter = \"abc\",\n                                        Metric = \"process.stat.cpu.total_pct\",\n                                        Limit = 10,\n                                        TagFilters = new[]\n                                        {\n                                            \"some_filter\",\n                                        },\n                                        Name = \"my_process_query\",\n                                        Sort = \"asc\",\n                                        IsNormalizedCpu = true,\n                                        Aggregator = \"sum\",\n                                    },\n                                },\n                            },\n                        },\n                    },\n                },\n                WidgetLayout = new Datadog.Inputs.DashboardWidgetWidgetLayoutArgs\n                {\n                    Height = 16,\n                    Width = 28,\n                    X = 0,\n                    Y = 83,\n                },\n            },\n            new Datadog.Inputs.DashboardWidgetArgs\n            {\n                TimeseriesDefinition = new Datadog.Inputs.DashboardWidgetTimeseriesDefinitionArgs\n                {\n                    Requests = new[]\n                    {\n                        new Datadog.Inputs.DashboardWidgetTimeseriesDefinitionRequestArgs\n                        {\n                            Formulas = new[]\n                            {\n                                new Datadog.Inputs.DashboardWidgetTimeseriesDefinitionRequestFormulaArgs\n                                {\n                                    FormulaExpression = \"query1\",\n                                    Alias = \"my cloud cost query\",\n                                },\n                            },\n                            Queries = new[]\n                            {\n                                new Datadog.Inputs.DashboardWidgetTimeseriesDefinitionRequestQueryArgs\n                                {\n                                    CloudCostQuery = new Datadog.Inputs.DashboardWidgetTimeseriesDefinitionRequestQueryCloudCostQueryArgs\n                                    {\n                                        DataSource = \"cloud_cost\",\n                                        Query = \"sum:aws.cost.amortized{*}\",\n                                        Name = \"query1\",\n                                        Aggregator = \"sum\",\n                                    },\n                                },\n                            },\n                        },\n                    },\n                },\n            },\n            new Datadog.Inputs.DashboardWidgetArgs\n            {\n                PowerpackDefinition = new Datadog.Inputs.DashboardWidgetPowerpackDefinitionArgs\n                {\n                    PowerpackId = \"00000000-0000-0000-0000-000000000000\",\n                    BackgroundColor = \"blue\",\n                    BannerImg = \"https://example.org/example.png\",\n                    ShowTitle = true,\n                    Title = \"Powerpack Widget\",\n                    TemplateVariables = new Datadog.Inputs.DashboardWidgetPowerpackDefinitionTemplateVariablesArgs\n                    {\n                        ControlledExternallies = new[]\n                        {\n                            new Datadog.Inputs.DashboardWidgetPowerpackDefinitionTemplateVariablesControlledExternallyArgs\n                            {\n                                Name = \"var_2\",\n                                Values = new[]\n                                {\n                                    \"autoscaling\",\n                                },\n                                Prefix = \"service_name\",\n                            },\n                        },\n                        ControlledByPowerpacks = new[]\n                        {\n                            new Datadog.Inputs.DashboardWidgetPowerpackDefinitionTemplateVariablesControlledByPowerpackArgs\n                            {\n                                Name = \"var_3\",\n                                Prefix = \"timeframe\",\n                                Values = new[]\n                                {\n                                    \"default\",\n                                    \"values\",\n                                    \"here\",\n                                },\n                            },\n                        },\n                    },\n                },\n            },\n        },\n        TemplateVariables = new[]\n        {\n            new Datadog.Inputs.DashboardTemplateVariableArgs\n            {\n                Name = \"var_1\",\n                Prefix = \"host\",\n                Default = \"aws\",\n            },\n            new Datadog.Inputs.DashboardTemplateVariableArgs\n            {\n                Name = \"var_2\",\n                Prefix = \"service_name\",\n                Default = \"autoscaling\",\n            },\n        },\n        TemplateVariablePresets = new[]\n        {\n            new Datadog.Inputs.DashboardTemplateVariablePresetArgs\n            {\n                Name = \"preset_1\",\n                TemplateVariables = new[]\n                {\n                    new Datadog.Inputs.DashboardTemplateVariablePresetTemplateVariableArgs\n                    {\n                        Name = \"var_1\",\n                        Value = \"host.dc\",\n                    },\n                    new Datadog.Inputs.DashboardTemplateVariablePresetTemplateVariableArgs\n                    {\n                        Name = \"var_2\",\n                        Value = \"my_service\",\n                    },\n                },\n            },\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-datadog/sdk/v4/go/datadog\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t// Example Ordered Layout\n\t\t_, err := datadog.NewDashboard(ctx, \"ordered_dashboard\", \u0026datadog.DashboardArgs{\n\t\t\tTitle:       pulumi.String(\"Ordered Layout Dashboard\"),\n\t\t\tDescription: pulumi.String(\"Created using the Datadog provider in Pulumi\"),\n\t\t\tLayoutType:  pulumi.String(\"ordered\"),\n\t\t\tWidgets: datadog.DashboardWidgetArray{\n\t\t\t\t\u0026datadog.DashboardWidgetArgs{\n\t\t\t\t\tAlertGraphDefinition: \u0026datadog.DashboardWidgetAlertGraphDefinitionArgs{\n\t\t\t\t\t\tAlertId:  pulumi.String(\"895605\"),\n\t\t\t\t\t\tVizType:  pulumi.String(\"timeseries\"),\n\t\t\t\t\t\tTitle:    pulumi.String(\"Widget Title\"),\n\t\t\t\t\t\tLiveSpan: pulumi.String(\"1h\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t\u0026datadog.DashboardWidgetArgs{\n\t\t\t\t\tAlertValueDefinition: \u0026datadog.DashboardWidgetAlertValueDefinitionArgs{\n\t\t\t\t\t\tAlertId:   pulumi.String(\"895605\"),\n\t\t\t\t\t\tPrecision: pulumi.Int(3),\n\t\t\t\t\t\tUnit:      pulumi.String(\"b\"),\n\t\t\t\t\t\tTextAlign: pulumi.String(\"center\"),\n\t\t\t\t\t\tTitle:     pulumi.String(\"Widget Title\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t\u0026datadog.DashboardWidgetArgs{\n\t\t\t\t\tAlertValueDefinition: \u0026datadog.DashboardWidgetAlertValueDefinitionArgs{\n\t\t\t\t\t\tAlertId:   pulumi.String(\"895605\"),\n\t\t\t\t\t\tPrecision: pulumi.Int(3),\n\t\t\t\t\t\tUnit:      pulumi.String(\"b\"),\n\t\t\t\t\t\tTextAlign: pulumi.String(\"center\"),\n\t\t\t\t\t\tTitle:     pulumi.String(\"Widget Title\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t\u0026datadog.DashboardWidgetArgs{\n\t\t\t\t\tChangeDefinition: \u0026datadog.DashboardWidgetChangeDefinitionArgs{\n\t\t\t\t\t\tRequests: datadog.DashboardWidgetChangeDefinitionRequestArray{\n\t\t\t\t\t\t\t\u0026datadog.DashboardWidgetChangeDefinitionRequestArgs{\n\t\t\t\t\t\t\t\tQ:            pulumi.String(\"avg:system.load.1{env:staging} by {account}\"),\n\t\t\t\t\t\t\t\tChangeType:   pulumi.String(\"absolute\"),\n\t\t\t\t\t\t\t\tCompareTo:    pulumi.String(\"week_before\"),\n\t\t\t\t\t\t\t\tIncreaseGood: pulumi.Bool(true),\n\t\t\t\t\t\t\t\tOrderBy:      pulumi.String(\"name\"),\n\t\t\t\t\t\t\t\tOrderDir:     pulumi.String(\"desc\"),\n\t\t\t\t\t\t\t\tShowPresent:  pulumi.Bool(true),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\tTitle:    pulumi.String(\"Widget Title\"),\n\t\t\t\t\t\tLiveSpan: pulumi.String(\"1h\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t\u0026datadog.DashboardWidgetArgs{\n\t\t\t\t\tDistributionDefinition: \u0026datadog.DashboardWidgetDistributionDefinitionArgs{\n\t\t\t\t\t\tRequests: datadog.DashboardWidgetDistributionDefinitionRequestArray{\n\t\t\t\t\t\t\t\u0026datadog.DashboardWidgetDistributionDefinitionRequestArgs{\n\t\t\t\t\t\t\t\tQ: pulumi.String(\"avg:system.load.1{env:staging} by {account}\"),\n\t\t\t\t\t\t\t\tStyle: \u0026datadog.DashboardWidgetDistributionDefinitionRequestStyleArgs{\n\t\t\t\t\t\t\t\t\tPalette: pulumi.String(\"warm\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\tTitle:    pulumi.String(\"Widget Title\"),\n\t\t\t\t\t\tLiveSpan: pulumi.String(\"1h\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t\u0026datadog.DashboardWidgetArgs{\n\t\t\t\t\tCheckStatusDefinition: \u0026datadog.DashboardWidgetCheckStatusDefinitionArgs{\n\t\t\t\t\t\tCheck:    pulumi.String(\"aws.ecs.agent_connected\"),\n\t\t\t\t\t\tGrouping: pulumi.String(\"cluster\"),\n\t\t\t\t\t\tGroupBies: pulumi.StringArray{\n\t\t\t\t\t\t\tpulumi.String(\"account\"),\n\t\t\t\t\t\t\tpulumi.String(\"cluster\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tTags: pulumi.StringArray{\n\t\t\t\t\t\t\tpulumi.String(\"account:demo\"),\n\t\t\t\t\t\t\tpulumi.String(\"cluster:awseb-ruthebdog-env-8-dn3m6u3gvk\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tTitle:    pulumi.String(\"Widget Title\"),\n\t\t\t\t\t\tLiveSpan: pulumi.String(\"1h\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t\u0026datadog.DashboardWidgetArgs{\n\t\t\t\t\tHeatmapDefinition: \u0026datadog.DashboardWidgetHeatmapDefinitionArgs{\n\t\t\t\t\t\tRequests: datadog.DashboardWidgetHeatmapDefinitionRequestArray{\n\t\t\t\t\t\t\t\u0026datadog.DashboardWidgetHeatmapDefinitionRequestArgs{\n\t\t\t\t\t\t\t\tQ: pulumi.String(\"avg:system.load.1{env:staging} by {account}\"),\n\t\t\t\t\t\t\t\tStyle: \u0026datadog.DashboardWidgetHeatmapDefinitionRequestStyleArgs{\n\t\t\t\t\t\t\t\t\tPalette: pulumi.String(\"warm\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\tYaxis: \u0026datadog.DashboardWidgetHeatmapDefinitionYaxisArgs{\n\t\t\t\t\t\t\tMin:         pulumi.String(\"1\"),\n\t\t\t\t\t\t\tMax:         pulumi.String(\"2\"),\n\t\t\t\t\t\t\tIncludeZero: pulumi.Bool(true),\n\t\t\t\t\t\t\tScale:       pulumi.String(\"sqrt\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tTitle:    pulumi.String(\"Widget Title\"),\n\t\t\t\t\t\tLiveSpan: pulumi.String(\"1h\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t\u0026datadog.DashboardWidgetArgs{\n\t\t\t\t\tHostmapDefinition: \u0026datadog.DashboardWidgetHostmapDefinitionArgs{\n\t\t\t\t\t\tRequest: \u0026datadog.DashboardWidgetHostmapDefinitionRequestArgs{\n\t\t\t\t\t\t\tFills: datadog.DashboardWidgetHostmapDefinitionRequestFillArray{\n\t\t\t\t\t\t\t\t\u0026datadog.DashboardWidgetHostmapDefinitionRequestFillArgs{\n\t\t\t\t\t\t\t\t\tQ: pulumi.String(\"avg:system.load.1{*} by {host}\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tSizes: datadog.DashboardWidgetHostmapDefinitionRequestSizeArray{\n\t\t\t\t\t\t\t\t\u0026datadog.DashboardWidgetHostmapDefinitionRequestSizeArgs{\n\t\t\t\t\t\t\t\t\tQ: pulumi.String(\"avg:memcache.uptime{*} by {host}\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\tNodeType: pulumi.String(\"container\"),\n\t\t\t\t\t\tGroups: pulumi.StringArray{\n\t\t\t\t\t\t\tpulumi.String(\"host\"),\n\t\t\t\t\t\t\tpulumi.String(\"region\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tNoGroupHosts:  pulumi.Bool(true),\n\t\t\t\t\t\tNoMetricHosts: pulumi.Bool(true),\n\t\t\t\t\t\tScopes: pulumi.StringArray{\n\t\t\t\t\t\t\tpulumi.String(\"region:us-east-1\"),\n\t\t\t\t\t\t\tpulumi.String(\"aws_account:727006795293\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tStyle: \u0026datadog.DashboardWidgetHostmapDefinitionStyleArgs{\n\t\t\t\t\t\t\tPalette:     pulumi.String(\"yellow_to_green\"),\n\t\t\t\t\t\t\tPaletteFlip: pulumi.Bool(true),\n\t\t\t\t\t\t\tFillMin:     pulumi.String(\"10\"),\n\t\t\t\t\t\t\tFillMax:     pulumi.String(\"20\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tTitle: pulumi.String(\"Widget Title\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t\u0026datadog.DashboardWidgetArgs{\n\t\t\t\t\tNoteDefinition: \u0026datadog.DashboardWidgetNoteDefinitionArgs{\n\t\t\t\t\t\tContent:         pulumi.String(\"note text\"),\n\t\t\t\t\t\tBackgroundColor: pulumi.String(\"pink\"),\n\t\t\t\t\t\tFontSize:        pulumi.String(\"14\"),\n\t\t\t\t\t\tTextAlign:       pulumi.String(\"center\"),\n\t\t\t\t\t\tShowTick:        pulumi.Bool(true),\n\t\t\t\t\t\tTickEdge:        pulumi.String(\"left\"),\n\t\t\t\t\t\tTickPos:         pulumi.String(\"50%\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t\u0026datadog.DashboardWidgetArgs{\n\t\t\t\t\tQueryValueDefinition: \u0026datadog.DashboardWidgetQueryValueDefinitionArgs{\n\t\t\t\t\t\tRequests: datadog.DashboardWidgetQueryValueDefinitionRequestArray{\n\t\t\t\t\t\t\t\u0026datadog.DashboardWidgetQueryValueDefinitionRequestArgs{\n\t\t\t\t\t\t\t\tQ:          pulumi.String(\"avg:system.load.1{env:staging} by {account}\"),\n\t\t\t\t\t\t\t\tAggregator: pulumi.String(\"sum\"),\n\t\t\t\t\t\t\t\tConditionalFormats: datadog.DashboardWidgetQueryValueDefinitionRequestConditionalFormatArray{\n\t\t\t\t\t\t\t\t\t\u0026datadog.DashboardWidgetQueryValueDefinitionRequestConditionalFormatArgs{\n\t\t\t\t\t\t\t\t\t\tComparator: pulumi.String(\"\u003c\"),\n\t\t\t\t\t\t\t\t\t\tValue:      pulumi.Float64(2),\n\t\t\t\t\t\t\t\t\t\tPalette:    pulumi.String(\"white_on_green\"),\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\u0026datadog.DashboardWidgetQueryValueDefinitionRequestConditionalFormatArgs{\n\t\t\t\t\t\t\t\t\t\tComparator: pulumi.String(\"\u003e\"),\n\t\t\t\t\t\t\t\t\t\tValue:      pulumi.Float64(2.2),\n\t\t\t\t\t\t\t\t\t\tPalette:    pulumi.String(\"white_on_red\"),\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\tAutoscale:  pulumi.Bool(true),\n\t\t\t\t\t\tCustomUnit: pulumi.String(\"xx\"),\n\t\t\t\t\t\tPrecision:  pulumi.Int(4),\n\t\t\t\t\t\tTextAlign:  pulumi.String(\"right\"),\n\t\t\t\t\t\tTitle:      pulumi.String(\"Widget Title\"),\n\t\t\t\t\t\tLiveSpan:   pulumi.String(\"1h\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t\u0026datadog.DashboardWidgetArgs{\n\t\t\t\t\tQueryTableDefinition: \u0026datadog.DashboardWidgetQueryTableDefinitionArgs{\n\t\t\t\t\t\tRequests: datadog.DashboardWidgetQueryTableDefinitionRequestArray{\n\t\t\t\t\t\t\t\u0026datadog.DashboardWidgetQueryTableDefinitionRequestArgs{\n\t\t\t\t\t\t\t\tQ:          pulumi.String(\"avg:system.load.1{env:staging} by {account}\"),\n\t\t\t\t\t\t\t\tAggregator: pulumi.String(\"sum\"),\n\t\t\t\t\t\t\t\tLimit:      pulumi.Int(10),\n\t\t\t\t\t\t\t\tConditionalFormats: datadog.DashboardWidgetQueryTableDefinitionRequestConditionalFormatArray{\n\t\t\t\t\t\t\t\t\t\u0026datadog.DashboardWidgetQueryTableDefinitionRequestConditionalFormatArgs{\n\t\t\t\t\t\t\t\t\t\tComparator: pulumi.String(\"\u003c\"),\n\t\t\t\t\t\t\t\t\t\tValue:      pulumi.Float64(2),\n\t\t\t\t\t\t\t\t\t\tPalette:    pulumi.String(\"white_on_green\"),\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\u0026datadog.DashboardWidgetQueryTableDefinitionRequestConditionalFormatArgs{\n\t\t\t\t\t\t\t\t\t\tComparator: pulumi.String(\"\u003e\"),\n\t\t\t\t\t\t\t\t\t\tValue:      pulumi.Float64(2.2),\n\t\t\t\t\t\t\t\t\t\tPalette:    pulumi.String(\"white_on_red\"),\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\tTitle:    pulumi.String(\"Widget Title\"),\n\t\t\t\t\t\tLiveSpan: pulumi.String(\"1h\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t\u0026datadog.DashboardWidgetArgs{\n\t\t\t\t\tScatterplotDefinition: \u0026datadog.DashboardWidgetScatterplotDefinitionArgs{\n\t\t\t\t\t\tRequest: \u0026datadog.DashboardWidgetScatterplotDefinitionRequestArgs{\n\t\t\t\t\t\t\tXes: datadog.DashboardWidgetScatterplotDefinitionRequestXArray{\n\t\t\t\t\t\t\t\t\u0026datadog.DashboardWidgetScatterplotDefinitionRequestXArgs{\n\t\t\t\t\t\t\t\t\tQ:          pulumi.String(\"avg:system.cpu.user{*} by {service, account}\"),\n\t\t\t\t\t\t\t\t\tAggregator: pulumi.String(\"max\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tYs: datadog.DashboardWidgetScatterplotDefinitionRequestYArray{\n\t\t\t\t\t\t\t\t\u0026datadog.DashboardWidgetScatterplotDefinitionRequestYArgs{\n\t\t\t\t\t\t\t\t\tQ:          pulumi.String(\"avg:system.mem.used{*} by {service, account}\"),\n\t\t\t\t\t\t\t\t\tAggregator: pulumi.String(\"min\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\tColorByGroups: pulumi.StringArray{\n\t\t\t\t\t\t\tpulumi.String(\"account\"),\n\t\t\t\t\t\t\tpulumi.String(\"apm-role-group\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tXaxis: \u0026datadog.DashboardWidgetScatterplotDefinitionXaxisArgs{\n\t\t\t\t\t\t\tIncludeZero: pulumi.Bool(true),\n\t\t\t\t\t\t\tLabel:       pulumi.String(\"x\"),\n\t\t\t\t\t\t\tMin:         pulumi.String(\"1\"),\n\t\t\t\t\t\t\tMax:         pulumi.String(\"2000\"),\n\t\t\t\t\t\t\tScale:       pulumi.String(\"pow\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tYaxis: \u0026datadog.DashboardWidgetScatterplotDefinitionYaxisArgs{\n\t\t\t\t\t\t\tIncludeZero: pulumi.Bool(false),\n\t\t\t\t\t\t\tLabel:       pulumi.String(\"y\"),\n\t\t\t\t\t\t\tMin:         pulumi.String(\"5\"),\n\t\t\t\t\t\t\tMax:         pulumi.String(\"2222\"),\n\t\t\t\t\t\t\tScale:       pulumi.String(\"log\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tTitle:    pulumi.String(\"Widget Title\"),\n\t\t\t\t\t\tLiveSpan: pulumi.String(\"1h\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t\u0026datadog.DashboardWidgetArgs{\n\t\t\t\t\tServicemapDefinition: \u0026datadog.DashboardWidgetServicemapDefinitionArgs{\n\t\t\t\t\t\tService: pulumi.String(\"master-db\"),\n\t\t\t\t\t\tFilters: pulumi.StringArray{\n\t\t\t\t\t\t\tpulumi.String(\"env:prod\"),\n\t\t\t\t\t\t\tpulumi.String(\"datacenter:dc1\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tTitle:      pulumi.String(\"env: prod, datacenter:dc1, service: master-db\"),\n\t\t\t\t\t\tTitleSize:  pulumi.String(\"16\"),\n\t\t\t\t\t\tTitleAlign: pulumi.String(\"left\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t\u0026datadog.DashboardWidgetArgs{\n\t\t\t\t\tTimeseriesDefinition: \u0026datadog.DashboardWidgetTimeseriesDefinitionArgs{\n\t\t\t\t\t\tRequests: datadog.DashboardWidgetTimeseriesDefinitionRequestArray{\n\t\t\t\t\t\t\t\u0026datadog.DashboardWidgetTimeseriesDefinitionRequestArgs{\n\t\t\t\t\t\t\t\tQ:           pulumi.String(\"avg:system.cpu.user{app:general} by {env}\"),\n\t\t\t\t\t\t\t\tDisplayType: pulumi.String(\"line\"),\n\t\t\t\t\t\t\t\tStyle: \u0026datadog.DashboardWidgetTimeseriesDefinitionRequestStyleArgs{\n\t\t\t\t\t\t\t\t\tPalette:   pulumi.String(\"warm\"),\n\t\t\t\t\t\t\t\t\tLineType:  pulumi.String(\"dashed\"),\n\t\t\t\t\t\t\t\t\tLineWidth: pulumi.String(\"thin\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tMetadatas: datadog.DashboardWidgetTimeseriesDefinitionRequestMetadataArray{\n\t\t\t\t\t\t\t\t\t\u0026datadog.DashboardWidgetTimeseriesDefinitionRequestMetadataArgs{\n\t\t\t\t\t\t\t\t\t\tExpression: pulumi.String(\"avg:system.cpu.user{app:general} by {env}\"),\n\t\t\t\t\t\t\t\t\t\tAliasName:  pulumi.String(\"Alpha\"),\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\u0026datadog.DashboardWidgetTimeseriesDefinitionRequestArgs{\n\t\t\t\t\t\t\t\tLogQuery: \u0026datadog.DashboardWidgetLogQueryArgs{\n\t\t\t\t\t\t\t\t\tIndex: pulumi.String(\"mcnulty\"),\n\t\t\t\t\t\t\t\t\tComputeQuery: \u0026datadog.DashboardWidgetLogQueryComputeQueryArgs{\n\t\t\t\t\t\t\t\t\t\tAggregation: pulumi.String(\"avg\"),\n\t\t\t\t\t\t\t\t\t\tFacet:       pulumi.String(\"@duration\"),\n\t\t\t\t\t\t\t\t\t\tInterval:    pulumi.Int(5000),\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\tSearchQuery: pulumi.String(\"status:info\"),\n\t\t\t\t\t\t\t\t\tGroupBies: datadog.DashboardWidgetLogQueryGroupByArray{\n\t\t\t\t\t\t\t\t\t\t\u0026datadog.DashboardWidgetLogQueryGroupByArgs{\n\t\t\t\t\t\t\t\t\t\t\tFacet: pulumi.String(\"host\"),\n\t\t\t\t\t\t\t\t\t\t\tLimit: pulumi.Int(10),\n\t\t\t\t\t\t\t\t\t\t\tSortQuery: \u0026datadog.DashboardWidgetLogQueryGroupBySortQueryArgs{\n\t\t\t\t\t\t\t\t\t\t\t\tAggregation: pulumi.String(\"avg\"),\n\t\t\t\t\t\t\t\t\t\t\t\tOrder:       pulumi.String(\"desc\"),\n\t\t\t\t\t\t\t\t\t\t\t\tFacet:       pulumi.String(\"@duration\"),\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tDisplayType: pulumi.String(\"area\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\u0026datadog.DashboardWidgetTimeseriesDefinitionRequestArgs{\n\t\t\t\t\t\t\t\tApmQuery: \u0026datadog.DashboardWidgetApmQueryArgs{\n\t\t\t\t\t\t\t\t\tIndex: pulumi.String(\"apm-search\"),\n\t\t\t\t\t\t\t\t\tComputeQuery: \u0026datadog.DashboardWidgetApmQueryComputeQueryArgs{\n\t\t\t\t\t\t\t\t\t\tAggregation: pulumi.String(\"avg\"),\n\t\t\t\t\t\t\t\t\t\tFacet:       pulumi.String(\"@duration\"),\n\t\t\t\t\t\t\t\t\t\tInterval:    pulumi.Int(5000),\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\tSearchQuery: pulumi.String(\"type:web\"),\n\t\t\t\t\t\t\t\t\tGroupBies: datadog.DashboardWidgetApmQueryGroupByArray{\n\t\t\t\t\t\t\t\t\t\t\u0026datadog.DashboardWidgetApmQueryGroupByArgs{\n\t\t\t\t\t\t\t\t\t\t\tFacet: pulumi.String(\"resource_name\"),\n\t\t\t\t\t\t\t\t\t\t\tLimit: pulumi.Int(50),\n\t\t\t\t\t\t\t\t\t\t\tSortQuery: \u0026datadog.DashboardWidgetApmQueryGroupBySortQueryArgs{\n\t\t\t\t\t\t\t\t\t\t\t\tAggregation: pulumi.String(\"avg\"),\n\t\t\t\t\t\t\t\t\t\t\t\tOrder:       pulumi.String(\"desc\"),\n\t\t\t\t\t\t\t\t\t\t\t\tFacet:       pulumi.String(\"@string_query.interval\"),\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tDisplayType: pulumi.String(\"bars\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\u0026datadog.DashboardWidgetTimeseriesDefinitionRequestArgs{\n\t\t\t\t\t\t\t\tProcessQuery: \u0026datadog.DashboardWidgetTimeseriesDefinitionRequestProcessQueryArgs{\n\t\t\t\t\t\t\t\t\tMetric:   pulumi.String(\"process.stat.cpu.total_pct\"),\n\t\t\t\t\t\t\t\t\tSearchBy: pulumi.String(\"error\"),\n\t\t\t\t\t\t\t\t\tFilterBies: pulumi.StringArray{\n\t\t\t\t\t\t\t\t\t\tpulumi.String(\"active\"),\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\tLimit: pulumi.Int(50),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tDisplayType: pulumi.String(\"area\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\tMarkers: datadog.DashboardWidgetTimeseriesDefinitionMarkerArray{\n\t\t\t\t\t\t\t\u0026datadog.DashboardWidgetTimeseriesDefinitionMarkerArgs{\n\t\t\t\t\t\t\t\tDisplayType: pulumi.String(\"error dashed\"),\n\t\t\t\t\t\t\t\tLabel:       pulumi.String(\" z=6 \"),\n\t\t\t\t\t\t\t\tValue:       pulumi.String(\"y = 4\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\u0026datadog.DashboardWidgetTimeseriesDefinitionMarkerArgs{\n\t\t\t\t\t\t\t\tDisplayType: pulumi.String(\"ok solid\"),\n\t\t\t\t\t\t\t\tValue:       pulumi.String(\"10 \u003c y \u003c 999\"),\n\t\t\t\t\t\t\t\tLabel:       pulumi.String(\" x=8 \"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\tTitle:      pulumi.String(\"Widget Title\"),\n\t\t\t\t\t\tShowLegend: pulumi.Bool(true),\n\t\t\t\t\t\tLegendSize: pulumi.String(\"2\"),\n\t\t\t\t\t\tLiveSpan:   pulumi.String(\"1h\"),\n\t\t\t\t\t\tEvents: datadog.DashboardWidgetTimeseriesDefinitionEventArray{\n\t\t\t\t\t\t\t\u0026datadog.DashboardWidgetTimeseriesDefinitionEventArgs{\n\t\t\t\t\t\t\t\tQ: pulumi.String(\"sources:test tags:1\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\u0026datadog.DashboardWidgetTimeseriesDefinitionEventArgs{\n\t\t\t\t\t\t\t\tQ: pulumi.String(\"sources:test tags:2\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\tYaxis: \u0026datadog.DashboardWidgetTimeseriesDefinitionYaxisArgs{\n\t\t\t\t\t\t\tScale:       pulumi.String(\"log\"),\n\t\t\t\t\t\t\tIncludeZero: pulumi.Bool(false),\n\t\t\t\t\t\t\tMax:         pulumi.String(\"100\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t\u0026datadog.DashboardWidgetArgs{\n\t\t\t\t\tToplistDefinition: \u0026datadog.DashboardWidgetToplistDefinitionArgs{\n\t\t\t\t\t\tRequests: datadog.DashboardWidgetToplistDefinitionRequestArray{\n\t\t\t\t\t\t\t\u0026datadog.DashboardWidgetToplistDefinitionRequestArgs{\n\t\t\t\t\t\t\t\tQ: pulumi.String(\"avg:system.cpu.user{app:general} by {env}\"),\n\t\t\t\t\t\t\t\tConditionalFormats: datadog.DashboardWidgetToplistDefinitionRequestConditionalFormatArray{\n\t\t\t\t\t\t\t\t\t\u0026datadog.DashboardWidgetToplistDefinitionRequestConditionalFormatArgs{\n\t\t\t\t\t\t\t\t\t\tComparator: pulumi.String(\"\u003c\"),\n\t\t\t\t\t\t\t\t\t\tValue:      pulumi.Float64(2),\n\t\t\t\t\t\t\t\t\t\tPalette:    pulumi.String(\"white_on_green\"),\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\u0026datadog.DashboardWidgetToplistDefinitionRequestConditionalFormatArgs{\n\t\t\t\t\t\t\t\t\t\tComparator: pulumi.String(\"\u003e\"),\n\t\t\t\t\t\t\t\t\t\tValue:      pulumi.Float64(2.2),\n\t\t\t\t\t\t\t\t\t\tPalette:    pulumi.String(\"white_on_red\"),\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\tTitle: pulumi.String(\"Widget Title\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t\u0026datadog.DashboardWidgetArgs{\n\t\t\t\t\tGroupDefinition: \u0026datadog.DashboardWidgetGroupDefinitionArgs{\n\t\t\t\t\t\tLayoutType: pulumi.String(\"ordered\"),\n\t\t\t\t\t\tTitle:      pulumi.String(\"Group Widget\"),\n\t\t\t\t\t\tWidgets: datadog.DashboardWidgetGroupDefinitionWidgetArray{\n\t\t\t\t\t\t\t\u0026datadog.DashboardWidgetGroupDefinitionWidgetArgs{\n\t\t\t\t\t\t\t\tNoteDefinition: \u0026datadog.DashboardWidgetNoteDefinitionArgs{\n\t\t\t\t\t\t\t\t\tContent:         pulumi.String(\"cluster note widget\"),\n\t\t\t\t\t\t\t\t\tBackgroundColor: pulumi.String(\"pink\"),\n\t\t\t\t\t\t\t\t\tFontSize:        pulumi.String(\"14\"),\n\t\t\t\t\t\t\t\t\tTextAlign:       pulumi.String(\"center\"),\n\t\t\t\t\t\t\t\t\tShowTick:        pulumi.Bool(true),\n\t\t\t\t\t\t\t\t\tTickEdge:        pulumi.String(\"left\"),\n\t\t\t\t\t\t\t\t\tTickPos:         pulumi.String(\"50%\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\u0026datadog.DashboardWidgetGroupDefinitionWidgetArgs{\n\t\t\t\t\t\t\t\tAlertGraphDefinition: \u0026datadog.DashboardWidgetAlertGraphDefinitionArgs{\n\t\t\t\t\t\t\t\t\tAlertId:  pulumi.String(\"123\"),\n\t\t\t\t\t\t\t\t\tVizType:  pulumi.String(\"toplist\"),\n\t\t\t\t\t\t\t\t\tTitle:    pulumi.String(\"Alert Graph\"),\n\t\t\t\t\t\t\t\t\tLiveSpan: pulumi.String(\"1h\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t\u0026datadog.DashboardWidgetArgs{\n\t\t\t\t\tServiceLevelObjectiveDefinition: \u0026datadog.DashboardWidgetServiceLevelObjectiveDefinitionArgs{\n\t\t\t\t\t\tTitle:           pulumi.String(\"Widget Title\"),\n\t\t\t\t\t\tViewType:        pulumi.String(\"detail\"),\n\t\t\t\t\t\tSloId:           pulumi.String(\"56789\"),\n\t\t\t\t\t\tShowErrorBudget: pulumi.Bool(true),\n\t\t\t\t\t\tViewMode:        pulumi.String(\"overall\"),\n\t\t\t\t\t\tTimeWindows: pulumi.StringArray{\n\t\t\t\t\t\t\tpulumi.String(\"7d\"),\n\t\t\t\t\t\t\tpulumi.String(\"previous_week\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\tTemplateVariables: datadog.DashboardTemplateVariableArray{\n\t\t\t\t\u0026datadog.DashboardTemplateVariableArgs{\n\t\t\t\t\tName:    pulumi.String(\"var_1\"),\n\t\t\t\t\tPrefix:  pulumi.String(\"host\"),\n\t\t\t\t\tDefault: pulumi.String(\"aws\"),\n\t\t\t\t},\n\t\t\t\t\u0026datadog.DashboardTemplateVariableArgs{\n\t\t\t\t\tName:    pulumi.String(\"var_2\"),\n\t\t\t\t\tPrefix:  pulumi.String(\"service_name\"),\n\t\t\t\t\tDefault: pulumi.String(\"autoscaling\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tTemplateVariablePresets: datadog.DashboardTemplateVariablePresetArray{\n\t\t\t\t\u0026datadog.DashboardTemplateVariablePresetArgs{\n\t\t\t\t\tName: pulumi.String(\"preset_1\"),\n\t\t\t\t\tTemplateVariables: datadog.DashboardTemplateVariablePresetTemplateVariableArray{\n\t\t\t\t\t\t\u0026datadog.DashboardTemplateVariablePresetTemplateVariableArgs{\n\t\t\t\t\t\t\tName:  pulumi.String(\"var_1\"),\n\t\t\t\t\t\t\tValue: pulumi.String(\"host.dc\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\u0026datadog.DashboardTemplateVariablePresetTemplateVariableArgs{\n\t\t\t\t\t\t\tName:  pulumi.String(\"var_2\"),\n\t\t\t\t\t\t\tValue: pulumi.String(\"my_service\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t// Example Free Layout\n\t\t_, err = datadog.NewDashboard(ctx, \"free_dashboard\", \u0026datadog.DashboardArgs{\n\t\t\tTitle:       pulumi.String(\"Free Layout Dashboard\"),\n\t\t\tDescription: pulumi.String(\"Created using the Datadog provider in Pulumi\"),\n\t\t\tLayoutType:  pulumi.String(\"free\"),\n\t\t\tWidgets: datadog.DashboardWidgetArray{\n\t\t\t\t\u0026datadog.DashboardWidgetArgs{\n\t\t\t\t\tEventStreamDefinition: \u0026datadog.DashboardWidgetEventStreamDefinitionArgs{\n\t\t\t\t\t\tQuery:      pulumi.String(\"*\"),\n\t\t\t\t\t\tEventSize:  pulumi.String(\"l\"),\n\t\t\t\t\t\tTitle:      pulumi.String(\"Widget Title\"),\n\t\t\t\t\t\tTitleSize:  pulumi.String(\"16\"),\n\t\t\t\t\t\tTitleAlign: pulumi.String(\"left\"),\n\t\t\t\t\t\tLiveSpan:   pulumi.String(\"1h\"),\n\t\t\t\t\t},\n\t\t\t\t\tWidgetLayout: \u0026datadog.DashboardWidgetWidgetLayoutArgs{\n\t\t\t\t\t\tHeight: pulumi.Int(43),\n\t\t\t\t\t\tWidth:  pulumi.Int(32),\n\t\t\t\t\t\tX:      pulumi.Int(0),\n\t\t\t\t\t\tY:      pulumi.Int(0),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t\u0026datadog.DashboardWidgetArgs{\n\t\t\t\t\tEventTimelineDefinition: \u0026datadog.DashboardWidgetEventTimelineDefinitionArgs{\n\t\t\t\t\t\tQuery:      pulumi.String(\"*\"),\n\t\t\t\t\t\tTitle:      pulumi.String(\"Widget Title\"),\n\t\t\t\t\t\tTitleSize:  pulumi.String(\"16\"),\n\t\t\t\t\t\tTitleAlign: pulumi.String(\"left\"),\n\t\t\t\t\t\tLiveSpan:   pulumi.String(\"1h\"),\n\t\t\t\t\t},\n\t\t\t\t\tWidgetLayout: \u0026datadog.DashboardWidgetWidgetLayoutArgs{\n\t\t\t\t\t\tHeight: pulumi.Int(9),\n\t\t\t\t\t\tWidth:  pulumi.Int(66),\n\t\t\t\t\t\tX:      pulumi.Int(33),\n\t\t\t\t\t\tY:      pulumi.Int(60),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t\u0026datadog.DashboardWidgetArgs{\n\t\t\t\t\tFreeTextDefinition: \u0026datadog.DashboardWidgetFreeTextDefinitionArgs{\n\t\t\t\t\t\tText:      pulumi.String(\"free text content\"),\n\t\t\t\t\t\tColor:     pulumi.String(\"#d00\"),\n\t\t\t\t\t\tFontSize:  pulumi.String(\"36\"),\n\t\t\t\t\t\tTextAlign: pulumi.String(\"left\"),\n\t\t\t\t\t},\n\t\t\t\t\tWidgetLayout: \u0026datadog.DashboardWidgetWidgetLayoutArgs{\n\t\t\t\t\t\tHeight: pulumi.Int(20),\n\t\t\t\t\t\tWidth:  pulumi.Int(34),\n\t\t\t\t\t\tX:      pulumi.Int(33),\n\t\t\t\t\t\tY:      pulumi.Int(0),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t\u0026datadog.DashboardWidgetArgs{\n\t\t\t\t\tIframeDefinition: \u0026datadog.DashboardWidgetIframeDefinitionArgs{\n\t\t\t\t\t\tUrl: pulumi.String(\"http://google.com\"),\n\t\t\t\t\t},\n\t\t\t\t\tWidgetLayout: \u0026datadog.DashboardWidgetWidgetLayoutArgs{\n\t\t\t\t\t\tHeight: pulumi.Int(46),\n\t\t\t\t\t\tWidth:  pulumi.Int(39),\n\t\t\t\t\t\tX:      pulumi.Int(101),\n\t\t\t\t\t\tY:      pulumi.Int(0),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t\u0026datadog.DashboardWidgetArgs{\n\t\t\t\t\tImageDefinition: \u0026datadog.DashboardWidgetImageDefinitionArgs{\n\t\t\t\t\t\tUrl:    pulumi.String(\"https://images.pexels.com/photos/67636/rose-blue-flower-rose-blooms-67636.jpeg?auto=compress\u0026cs=tinysrgb\u0026h=350\"),\n\t\t\t\t\t\tSizing: pulumi.String(\"fit\"),\n\t\t\t\t\t\tMargin: pulumi.String(\"small\"),\n\t\t\t\t\t},\n\t\t\t\t\tWidgetLayout: \u0026datadog.DashboardWidgetWidgetLayoutArgs{\n\t\t\t\t\t\tHeight: pulumi.Int(20),\n\t\t\t\t\t\tWidth:  pulumi.Int(30),\n\t\t\t\t\t\tX:      pulumi.Int(69),\n\t\t\t\t\t\tY:      pulumi.Int(0),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t\u0026datadog.DashboardWidgetArgs{\n\t\t\t\t\tLogStreamDefinition: \u0026datadog.DashboardWidgetLogStreamDefinitionArgs{\n\t\t\t\t\t\tIndexes: pulumi.StringArray{\n\t\t\t\t\t\t\tpulumi.String(\"main\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tQuery: pulumi.String(\"error\"),\n\t\t\t\t\t\tColumns: pulumi.StringArray{\n\t\t\t\t\t\t\tpulumi.String(\"core_host\"),\n\t\t\t\t\t\t\tpulumi.String(\"core_service\"),\n\t\t\t\t\t\t\tpulumi.String(\"tag_source\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tShowDateColumn:    pulumi.Bool(true),\n\t\t\t\t\t\tShowMessageColumn: pulumi.Bool(true),\n\t\t\t\t\t\tMessageDisplay:    pulumi.String(\"expanded-md\"),\n\t\t\t\t\t\tSort: \u0026datadog.DashboardWidgetLogStreamDefinitionSortArgs{\n\t\t\t\t\t\t\tColumn: pulumi.String(\"time\"),\n\t\t\t\t\t\t\tOrder:  pulumi.String(\"desc\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tWidgetLayout: \u0026datadog.DashboardWidgetWidgetLayoutArgs{\n\t\t\t\t\t\tHeight: pulumi.Int(36),\n\t\t\t\t\t\tWidth:  pulumi.Int(32),\n\t\t\t\t\t\tX:      pulumi.Int(0),\n\t\t\t\t\t\tY:      pulumi.Int(45),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t\u0026datadog.DashboardWidgetArgs{\n\t\t\t\t\tManageStatusDefinition: \u0026datadog.DashboardWidgetManageStatusDefinitionArgs{\n\t\t\t\t\t\tColorPreference:   pulumi.String(\"text\"),\n\t\t\t\t\t\tDisplayFormat:     pulumi.String(\"countsAndList\"),\n\t\t\t\t\t\tHideZeroCounts:    pulumi.Bool(true),\n\t\t\t\t\t\tQuery:             pulumi.String(\"type:metric\"),\n\t\t\t\t\t\tShowLastTriggered: pulumi.Bool(false),\n\t\t\t\t\t\tSort:              pulumi.String(\"status,asc\"),\n\t\t\t\t\t\tSummaryType:       pulumi.String(\"monitors\"),\n\t\t\t\t\t\tTitle:             pulumi.String(\"Widget Title\"),\n\t\t\t\t\t\tTitleSize:         pulumi.String(\"16\"),\n\t\t\t\t\t\tTitleAlign:        pulumi.String(\"left\"),\n\t\t\t\t\t},\n\t\t\t\t\tWidgetLayout: \u0026datadog.DashboardWidgetWidgetLayoutArgs{\n\t\t\t\t\t\tHeight: pulumi.Int(40),\n\t\t\t\t\t\tWidth:  pulumi.Int(30),\n\t\t\t\t\t\tX:      pulumi.Int(101),\n\t\t\t\t\t\tY:      pulumi.Int(48),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t\u0026datadog.DashboardWidgetArgs{\n\t\t\t\t\tTraceServiceDefinition: \u0026datadog.DashboardWidgetTraceServiceDefinitionArgs{\n\t\t\t\t\t\tDisplayFormat:    pulumi.String(\"three_column\"),\n\t\t\t\t\t\tEnv:              pulumi.String(\"datadog.com\"),\n\t\t\t\t\t\tService:          pulumi.String(\"alerting-cassandra\"),\n\t\t\t\t\t\tShowBreakdown:    pulumi.Bool(true),\n\t\t\t\t\t\tShowDistribution: pulumi.Bool(true),\n\t\t\t\t\t\tShowErrors:       pulumi.Bool(true),\n\t\t\t\t\t\tShowHits:         pulumi.Bool(true),\n\t\t\t\t\t\tShowLatency:      pulumi.Bool(false),\n\t\t\t\t\t\tShowResourceList: pulumi.Bool(false),\n\t\t\t\t\t\tSizeFormat:       pulumi.String(\"large\"),\n\t\t\t\t\t\tSpanName:         pulumi.String(\"cassandra.query\"),\n\t\t\t\t\t\tTitle:            pulumi.String(\"alerting-cassandra #env:datadog.com\"),\n\t\t\t\t\t\tTitleAlign:       pulumi.String(\"center\"),\n\t\t\t\t\t\tTitleSize:        pulumi.String(\"13\"),\n\t\t\t\t\t\tLiveSpan:         pulumi.String(\"1h\"),\n\t\t\t\t\t},\n\t\t\t\t\tWidgetLayout: \u0026datadog.DashboardWidgetWidgetLayoutArgs{\n\t\t\t\t\t\tHeight: pulumi.Int(38),\n\t\t\t\t\t\tWidth:  pulumi.Int(66),\n\t\t\t\t\t\tX:      pulumi.Int(33),\n\t\t\t\t\t\tY:      pulumi.Int(21),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t\u0026datadog.DashboardWidgetArgs{\n\t\t\t\t\tTimeseriesDefinition: \u0026datadog.DashboardWidgetTimeseriesDefinitionArgs{\n\t\t\t\t\t\tRequests: datadog.DashboardWidgetTimeseriesDefinitionRequestArray{\n\t\t\t\t\t\t\t\u0026datadog.DashboardWidgetTimeseriesDefinitionRequestArgs{\n\t\t\t\t\t\t\t\tFormulas: datadog.DashboardWidgetTimeseriesDefinitionRequestFormulaArray{\n\t\t\t\t\t\t\t\t\t\u0026datadog.DashboardWidgetTimeseriesDefinitionRequestFormulaArgs{\n\t\t\t\t\t\t\t\t\t\tFormulaExpression: pulumi.String(\"my_query_1 + my_query_2\"),\n\t\t\t\t\t\t\t\t\t\tAlias:             pulumi.String(\"my ff query\"),\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\u0026datadog.DashboardWidgetTimeseriesDefinitionRequestFormulaArgs{\n\t\t\t\t\t\t\t\t\t\tFormulaExpression: pulumi.String(\"my_query_1 * my_query_2\"),\n\t\t\t\t\t\t\t\t\t\tLimit: \u0026datadog.DashboardWidgetTimeseriesDefinitionRequestFormulaLimitArgs{\n\t\t\t\t\t\t\t\t\t\t\tCount: pulumi.Int(5),\n\t\t\t\t\t\t\t\t\t\t\tOrder: pulumi.String(\"desc\"),\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\tAlias: pulumi.String(\"my second ff query\"),\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tQueries: datadog.DashboardWidgetTimeseriesDefinitionRequestQueryArray{\n\t\t\t\t\t\t\t\t\t\u0026datadog.DashboardWidgetTimeseriesDefinitionRequestQueryArgs{\n\t\t\t\t\t\t\t\t\t\tMetricQuery: \u0026datadog.DashboardWidgetTimeseriesDefinitionRequestQueryMetricQueryArgs{\n\t\t\t\t\t\t\t\t\t\t\tDataSource: pulumi.String(\"metrics\"),\n\t\t\t\t\t\t\t\t\t\t\tQuery:      pulumi.String(\"avg:system.cpu.user{app:general} by {env}\"),\n\t\t\t\t\t\t\t\t\t\t\tName:       pulumi.String(\"my_query_1\"),\n\t\t\t\t\t\t\t\t\t\t\tAggregator: pulumi.String(\"sum\"),\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\u0026datadog.DashboardWidgetTimeseriesDefinitionRequestQueryArgs{\n\t\t\t\t\t\t\t\t\t\tMetricQuery: \u0026datadog.DashboardWidgetTimeseriesDefinitionRequestQueryMetricQueryArgs{\n\t\t\t\t\t\t\t\t\t\t\tQuery:      pulumi.String(\"avg:system.cpu.user{app:general} by {env}\"),\n\t\t\t\t\t\t\t\t\t\t\tName:       pulumi.String(\"my_query_2\"),\n\t\t\t\t\t\t\t\t\t\t\tAggregator: pulumi.String(\"sum\"),\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tWidgetLayout: \u0026datadog.DashboardWidgetWidgetLayoutArgs{\n\t\t\t\t\t\tHeight: pulumi.Int(16),\n\t\t\t\t\t\tWidth:  pulumi.Int(25),\n\t\t\t\t\t\tX:      pulumi.Int(58),\n\t\t\t\t\t\tY:      pulumi.Int(83),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t\u0026datadog.DashboardWidgetArgs{\n\t\t\t\t\tTimeseriesDefinition: \u0026datadog.DashboardWidgetTimeseriesDefinitionArgs{\n\t\t\t\t\t\tRequests: datadog.DashboardWidgetTimeseriesDefinitionRequestArray{\n\t\t\t\t\t\t\t\u0026datadog.DashboardWidgetTimeseriesDefinitionRequestArgs{\n\t\t\t\t\t\t\t\tQueries: datadog.DashboardWidgetTimeseriesDefinitionRequestQueryArray{\n\t\t\t\t\t\t\t\t\t\u0026datadog.DashboardWidgetTimeseriesDefinitionRequestQueryArgs{\n\t\t\t\t\t\t\t\t\t\tEventQuery: \u0026datadog.DashboardWidgetTimeseriesDefinitionRequestQueryEventQueryArgs{\n\t\t\t\t\t\t\t\t\t\t\tName:       pulumi.String(\"my-query\"),\n\t\t\t\t\t\t\t\t\t\t\tDataSource: pulumi.String(\"logs\"),\n\t\t\t\t\t\t\t\t\t\t\tIndexes: pulumi.StringArray{\n\t\t\t\t\t\t\t\t\t\t\t\tpulumi.String(\"days-3\"),\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\tComputes: datadog.DashboardWidgetTimeseriesDefinitionRequestQueryEventQueryComputeArray{\n\t\t\t\t\t\t\t\t\t\t\t\t\u0026datadog.DashboardWidgetTimeseriesDefinitionRequestQueryEventQueryComputeArgs{\n\t\t\t\t\t\t\t\t\t\t\t\t\tAggregation: pulumi.String(\"count\"),\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\tGroupBies: datadog.DashboardWidgetTimeseriesDefinitionRequestQueryEventQueryGroupByArray{\n\t\t\t\t\t\t\t\t\t\t\t\t\u0026datadog.DashboardWidgetTimeseriesDefinitionRequestQueryEventQueryGroupByArgs{\n\t\t\t\t\t\t\t\t\t\t\t\t\tFacet: pulumi.String(\"host\"),\n\t\t\t\t\t\t\t\t\t\t\t\t\tSort: \u0026datadog.DashboardWidgetTimeseriesDefinitionRequestQueryEventQueryGroupBySortArgs{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tMetric:      pulumi.String(\"@lambda.max_memory_used\"),\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tAggregation: pulumi.String(\"avg\"),\n\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\tLimit: pulumi.Int(10),\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\u0026datadog.DashboardWidgetTimeseriesDefinitionRequestArgs{\n\t\t\t\t\t\t\t\tDisplayType: pulumi.String(\"overlay\"),\n\t\t\t\t\t\t\t\tQueries: datadog.DashboardWidgetTimeseriesDefinitionRequestQueryArray{\n\t\t\t\t\t\t\t\t\t\u0026datadog.DashboardWidgetTimeseriesDefinitionRequestQueryArgs{\n\t\t\t\t\t\t\t\t\t\tMetricQuery: \u0026datadog.DashboardWidgetTimeseriesDefinitionRequestQueryMetricQueryArgs{\n\t\t\t\t\t\t\t\t\t\t\tName:       pulumi.String(\"MyOverlay\"),\n\t\t\t\t\t\t\t\t\t\t\tDataSource: pulumi.String(\"metrics\"),\n\t\t\t\t\t\t\t\t\t\t\tQuery:      pulumi.String(\"avg:system.cpu.user{host:COMP-QJWVM2FYT4}\"),\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tWidgetLayout: \u0026datadog.DashboardWidgetWidgetLayoutArgs{\n\t\t\t\t\t\tHeight: pulumi.Int(16),\n\t\t\t\t\t\tWidth:  pulumi.Int(28),\n\t\t\t\t\t\tX:      pulumi.Int(29),\n\t\t\t\t\t\tY:      pulumi.Int(83),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t\u0026datadog.DashboardWidgetArgs{\n\t\t\t\t\tTimeseriesDefinition: \u0026datadog.DashboardWidgetTimeseriesDefinitionArgs{\n\t\t\t\t\t\tRequests: datadog.DashboardWidgetTimeseriesDefinitionRequestArray{\n\t\t\t\t\t\t\t\u0026datadog.DashboardWidgetTimeseriesDefinitionRequestArgs{\n\t\t\t\t\t\t\t\tQueries: datadog.DashboardWidgetTimeseriesDefinitionRequestQueryArray{\n\t\t\t\t\t\t\t\t\t\u0026datadog.DashboardWidgetTimeseriesDefinitionRequestQueryArgs{\n\t\t\t\t\t\t\t\t\t\tProcessQuery: \u0026datadog.DashboardWidgetTimeseriesDefinitionRequestQueryProcessQueryArgs{\n\t\t\t\t\t\t\t\t\t\t\tDataSource: pulumi.String(\"process\"),\n\t\t\t\t\t\t\t\t\t\t\tTextFilter: pulumi.String(\"abc\"),\n\t\t\t\t\t\t\t\t\t\t\tMetric:     pulumi.String(\"process.stat.cpu.total_pct\"),\n\t\t\t\t\t\t\t\t\t\t\tLimit:      pulumi.Int(10),\n\t\t\t\t\t\t\t\t\t\t\tTagFilters: pulumi.StringArray{\n\t\t\t\t\t\t\t\t\t\t\t\tpulumi.String(\"some_filter\"),\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\tName:            pulumi.String(\"my_process_query\"),\n\t\t\t\t\t\t\t\t\t\t\tSort:            pulumi.String(\"asc\"),\n\t\t\t\t\t\t\t\t\t\t\tIsNormalizedCpu: pulumi.Bool(true),\n\t\t\t\t\t\t\t\t\t\t\tAggregator:      pulumi.String(\"sum\"),\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tWidgetLayout: \u0026datadog.DashboardWidgetWidgetLayoutArgs{\n\t\t\t\t\t\tHeight: pulumi.Int(16),\n\t\t\t\t\t\tWidth:  pulumi.Int(28),\n\t\t\t\t\t\tX:      pulumi.Int(0),\n\t\t\t\t\t\tY:      pulumi.Int(83),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t\u0026datadog.DashboardWidgetArgs{\n\t\t\t\t\tTimeseriesDefinition: \u0026datadog.DashboardWidgetTimeseriesDefinitionArgs{\n\t\t\t\t\t\tRequests: datadog.DashboardWidgetTimeseriesDefinitionRequestArray{\n\t\t\t\t\t\t\t\u0026datadog.DashboardWidgetTimeseriesDefinitionRequestArgs{\n\t\t\t\t\t\t\t\tFormulas: datadog.DashboardWidgetTimeseriesDefinitionRequestFormulaArray{\n\t\t\t\t\t\t\t\t\t\u0026datadog.DashboardWidgetTimeseriesDefinitionRequestFormulaArgs{\n\t\t\t\t\t\t\t\t\t\tFormulaExpression: pulumi.String(\"query1\"),\n\t\t\t\t\t\t\t\t\t\tAlias:             pulumi.String(\"my cloud cost query\"),\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tQueries: datadog.DashboardWidgetTimeseriesDefinitionRequestQueryArray{\n\t\t\t\t\t\t\t\t\t\u0026datadog.DashboardWidgetTimeseriesDefinitionRequestQueryArgs{\n\t\t\t\t\t\t\t\t\t\tCloudCostQuery: \u0026datadog.DashboardWidgetTimeseriesDefinitionRequestQueryCloudCostQueryArgs{\n\t\t\t\t\t\t\t\t\t\t\tDataSource: pulumi.String(\"cloud_cost\"),\n\t\t\t\t\t\t\t\t\t\t\tQuery:      pulumi.String(\"sum:aws.cost.amortized{*}\"),\n\t\t\t\t\t\t\t\t\t\t\tName:       pulumi.String(\"query1\"),\n\t\t\t\t\t\t\t\t\t\t\tAggregator: pulumi.String(\"sum\"),\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t\u0026datadog.DashboardWidgetArgs{\n\t\t\t\t\tPowerpackDefinition: \u0026datadog.DashboardWidgetPowerpackDefinitionArgs{\n\t\t\t\t\t\tPowerpackId:     pulumi.String(\"00000000-0000-0000-0000-000000000000\"),\n\t\t\t\t\t\tBackgroundColor: pulumi.String(\"blue\"),\n\t\t\t\t\t\tBannerImg:       pulumi.String(\"https://example.org/example.png\"),\n\t\t\t\t\t\tShowTitle:       pulumi.Bool(true),\n\t\t\t\t\t\tTitle:           pulumi.String(\"Powerpack Widget\"),\n\t\t\t\t\t\tTemplateVariables: \u0026datadog.DashboardWidgetPowerpackDefinitionTemplateVariablesArgs{\n\t\t\t\t\t\t\tControlledExternallies: datadog.DashboardWidgetPowerpackDefinitionTemplateVariablesControlledExternallyArray{\n\t\t\t\t\t\t\t\t\u0026datadog.DashboardWidgetPowerpackDefinitionTemplateVariablesControlledExternallyArgs{\n\t\t\t\t\t\t\t\t\tName: pulumi.String(\"var_2\"),\n\t\t\t\t\t\t\t\t\tValues: pulumi.StringArray{\n\t\t\t\t\t\t\t\t\t\tpulumi.String(\"autoscaling\"),\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\tPrefix: pulumi.String(\"service_name\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tControlledByPowerpacks: datadog.DashboardWidgetPowerpackDefinitionTemplateVariablesControlledByPowerpackArray{\n\t\t\t\t\t\t\t\t\u0026datadog.DashboardWidgetPowerpackDefinitionTemplateVariablesControlledByPowerpackArgs{\n\t\t\t\t\t\t\t\t\tName:   pulumi.String(\"var_3\"),\n\t\t\t\t\t\t\t\t\tPrefix: pulumi.String(\"timeframe\"),\n\t\t\t\t\t\t\t\t\tValues: pulumi.StringArray{\n\t\t\t\t\t\t\t\t\t\tpulumi.String(\"default\"),\n\t\t\t\t\t\t\t\t\t\tpulumi.String(\"values\"),\n\t\t\t\t\t\t\t\t\t\tpulumi.String(\"here\"),\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\tTemplateVariables: datadog.DashboardTemplateVariableArray{\n\t\t\t\t\u0026datadog.DashboardTemplateVariableArgs{\n\t\t\t\t\tName:    pulumi.String(\"var_1\"),\n\t\t\t\t\tPrefix:  pulumi.String(\"host\"),\n\t\t\t\t\tDefault: pulumi.String(\"aws\"),\n\t\t\t\t},\n\t\t\t\t\u0026datadog.DashboardTemplateVariableArgs{\n\t\t\t\t\tName:    pulumi.String(\"var_2\"),\n\t\t\t\t\tPrefix:  pulumi.String(\"service_name\"),\n\t\t\t\t\tDefault: pulumi.String(\"autoscaling\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tTemplateVariablePresets: datadog.DashboardTemplateVariablePresetArray{\n\t\t\t\t\u0026datadog.DashboardTemplateVariablePresetArgs{\n\t\t\t\t\tName: pulumi.String(\"preset_1\"),\n\t\t\t\t\tTemplateVariables: datadog.DashboardTemplateVariablePresetTemplateVariableArray{\n\t\t\t\t\t\t\u0026datadog.DashboardTemplateVariablePresetTemplateVariableArgs{\n\t\t\t\t\t\t\tName:  pulumi.String(\"var_1\"),\n\t\t\t\t\t\t\tValue: pulumi.String(\"host.dc\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\u0026datadog.DashboardTemplateVariablePresetTemplateVariableArgs{\n\t\t\t\t\t\t\tName:  pulumi.String(\"var_2\"),\n\t\t\t\t\t\t\tValue: pulumi.String(\"my_service\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.datadog.Dashboard;\nimport com.pulumi.datadog.DashboardArgs;\nimport com.pulumi.datadog.inputs.DashboardWidgetArgs;\nimport com.pulumi.datadog.inputs.DashboardWidgetAlertGraphDefinitionArgs;\nimport com.pulumi.datadog.inputs.DashboardWidgetAlertValueDefinitionArgs;\nimport com.pulumi.datadog.inputs.DashboardWidgetChangeDefinitionArgs;\nimport com.pulumi.datadog.inputs.DashboardWidgetDistributionDefinitionArgs;\nimport com.pulumi.datadog.inputs.DashboardWidgetCheckStatusDefinitionArgs;\nimport com.pulumi.datadog.inputs.DashboardWidgetHeatmapDefinitionArgs;\nimport com.pulumi.datadog.inputs.DashboardWidgetHeatmapDefinitionYaxisArgs;\nimport com.pulumi.datadog.inputs.DashboardWidgetHostmapDefinitionArgs;\nimport com.pulumi.datadog.inputs.DashboardWidgetHostmapDefinitionRequestArgs;\nimport com.pulumi.datadog.inputs.DashboardWidgetHostmapDefinitionStyleArgs;\nimport com.pulumi.datadog.inputs.DashboardWidgetNoteDefinitionArgs;\nimport com.pulumi.datadog.inputs.DashboardWidgetQueryValueDefinitionArgs;\nimport com.pulumi.datadog.inputs.DashboardWidgetQueryTableDefinitionArgs;\nimport com.pulumi.datadog.inputs.DashboardWidgetScatterplotDefinitionArgs;\nimport com.pulumi.datadog.inputs.DashboardWidgetScatterplotDefinitionRequestArgs;\nimport com.pulumi.datadog.inputs.DashboardWidgetScatterplotDefinitionXaxisArgs;\nimport com.pulumi.datadog.inputs.DashboardWidgetScatterplotDefinitionYaxisArgs;\nimport com.pulumi.datadog.inputs.DashboardWidgetServicemapDefinitionArgs;\nimport com.pulumi.datadog.inputs.DashboardWidgetTimeseriesDefinitionArgs;\nimport com.pulumi.datadog.inputs.DashboardWidgetTimeseriesDefinitionYaxisArgs;\nimport com.pulumi.datadog.inputs.DashboardWidgetToplistDefinitionArgs;\nimport com.pulumi.datadog.inputs.DashboardWidgetGroupDefinitionArgs;\nimport com.pulumi.datadog.inputs.DashboardWidgetServiceLevelObjectiveDefinitionArgs;\nimport com.pulumi.datadog.inputs.DashboardTemplateVariableArgs;\nimport com.pulumi.datadog.inputs.DashboardTemplateVariablePresetArgs;\nimport com.pulumi.datadog.inputs.DashboardWidgetEventStreamDefinitionArgs;\nimport com.pulumi.datadog.inputs.DashboardWidgetWidgetLayoutArgs;\nimport com.pulumi.datadog.inputs.DashboardWidgetEventTimelineDefinitionArgs;\nimport com.pulumi.datadog.inputs.DashboardWidgetFreeTextDefinitionArgs;\nimport com.pulumi.datadog.inputs.DashboardWidgetIframeDefinitionArgs;\nimport com.pulumi.datadog.inputs.DashboardWidgetImageDefinitionArgs;\nimport com.pulumi.datadog.inputs.DashboardWidgetLogStreamDefinitionArgs;\nimport com.pulumi.datadog.inputs.DashboardWidgetLogStreamDefinitionSortArgs;\nimport com.pulumi.datadog.inputs.DashboardWidgetManageStatusDefinitionArgs;\nimport com.pulumi.datadog.inputs.DashboardWidgetTraceServiceDefinitionArgs;\nimport com.pulumi.datadog.inputs.DashboardWidgetPowerpackDefinitionArgs;\nimport com.pulumi.datadog.inputs.DashboardWidgetPowerpackDefinitionTemplateVariablesArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        // Example Ordered Layout\n        var orderedDashboard = new Dashboard(\"orderedDashboard\", DashboardArgs.builder()\n            .title(\"Ordered Layout Dashboard\")\n            .description(\"Created using the Datadog provider in Pulumi\")\n            .layoutType(\"ordered\")\n            .widgets(            \n                DashboardWidgetArgs.builder()\n                    .alertGraphDefinition(DashboardWidgetAlertGraphDefinitionArgs.builder()\n                        .alertId(\"895605\")\n                        .vizType(\"timeseries\")\n                        .title(\"Widget Title\")\n                        .liveSpan(\"1h\")\n                        .build())\n                    .build(),\n                DashboardWidgetArgs.builder()\n                    .alertValueDefinition(DashboardWidgetAlertValueDefinitionArgs.builder()\n                        .alertId(\"895605\")\n                        .precision(3)\n                        .unit(\"b\")\n                        .textAlign(\"center\")\n                        .title(\"Widget Title\")\n                        .build())\n                    .build(),\n                DashboardWidgetArgs.builder()\n                    .alertValueDefinition(DashboardWidgetAlertValueDefinitionArgs.builder()\n                        .alertId(\"895605\")\n                        .precision(3)\n                        .unit(\"b\")\n                        .textAlign(\"center\")\n                        .title(\"Widget Title\")\n                        .build())\n                    .build(),\n                DashboardWidgetArgs.builder()\n                    .changeDefinition(DashboardWidgetChangeDefinitionArgs.builder()\n                        .requests(DashboardWidgetChangeDefinitionRequestArgs.builder()\n                            .q(\"avg:system.load.1{env:staging} by {account}\")\n                            .changeType(\"absolute\")\n                            .compareTo(\"week_before\")\n                            .increaseGood(true)\n                            .orderBy(\"name\")\n                            .orderDir(\"desc\")\n                            .showPresent(true)\n                            .build())\n                        .title(\"Widget Title\")\n                        .liveSpan(\"1h\")\n                        .build())\n                    .build(),\n                DashboardWidgetArgs.builder()\n                    .distributionDefinition(DashboardWidgetDistributionDefinitionArgs.builder()\n                        .requests(DashboardWidgetDistributionDefinitionRequestArgs.builder()\n                            .q(\"avg:system.load.1{env:staging} by {account}\")\n                            .style(DashboardWidgetDistributionDefinitionRequestStyleArgs.builder()\n                                .palette(\"warm\")\n                                .build())\n                            .build())\n                        .title(\"Widget Title\")\n                        .liveSpan(\"1h\")\n                        .build())\n                    .build(),\n                DashboardWidgetArgs.builder()\n                    .checkStatusDefinition(DashboardWidgetCheckStatusDefinitionArgs.builder()\n                        .check(\"aws.ecs.agent_connected\")\n                        .grouping(\"cluster\")\n                        .groupBies(                        \n                            \"account\",\n                            \"cluster\")\n                        .tags(                        \n                            \"account:demo\",\n                            \"cluster:awseb-ruthebdog-env-8-dn3m6u3gvk\")\n                        .title(\"Widget Title\")\n                        .liveSpan(\"1h\")\n                        .build())\n                    .build(),\n                DashboardWidgetArgs.builder()\n                    .heatmapDefinition(DashboardWidgetHeatmapDefinitionArgs.builder()\n                        .requests(DashboardWidgetHeatmapDefinitionRequestArgs.builder()\n                            .q(\"avg:system.load.1{env:staging} by {account}\")\n                            .style(DashboardWidgetHeatmapDefinitionRequestStyleArgs.builder()\n                                .palette(\"warm\")\n                                .build())\n                            .build())\n                        .yaxis(DashboardWidgetHeatmapDefinitionYaxisArgs.builder()\n                            .min(1)\n                            .max(2)\n                            .includeZero(true)\n                            .scale(\"sqrt\")\n                            .build())\n                        .title(\"Widget Title\")\n                        .liveSpan(\"1h\")\n                        .build())\n                    .build(),\n                DashboardWidgetArgs.builder()\n                    .hostmapDefinition(DashboardWidgetHostmapDefinitionArgs.builder()\n                        .request(DashboardWidgetHostmapDefinitionRequestArgs.builder()\n                            .fills(DashboardWidgetHostmapDefinitionRequestFillArgs.builder()\n                                .q(\"avg:system.load.1{*} by {host}\")\n                                .build())\n                            .sizes(DashboardWidgetHostmapDefinitionRequestSizeArgs.builder()\n                                .q(\"avg:memcache.uptime{*} by {host}\")\n                                .build())\n                            .build())\n                        .nodeType(\"container\")\n                        .groups(                        \n                            \"host\",\n                            \"region\")\n                        .noGroupHosts(true)\n                        .noMetricHosts(true)\n                        .scopes(                        \n                            \"region:us-east-1\",\n                            \"aws_account:727006795293\")\n                        .style(DashboardWidgetHostmapDefinitionStyleArgs.builder()\n                            .palette(\"yellow_to_green\")\n                            .paletteFlip(true)\n                            .fillMin(\"10\")\n                            .fillMax(\"20\")\n                            .build())\n                        .title(\"Widget Title\")\n                        .build())\n                    .build(),\n                DashboardWidgetArgs.builder()\n                    .noteDefinition(DashboardWidgetNoteDefinitionArgs.builder()\n                        .content(\"note text\")\n                        .backgroundColor(\"pink\")\n                        .fontSize(\"14\")\n                        .textAlign(\"center\")\n                        .showTick(true)\n                        .tickEdge(\"left\")\n                        .tickPos(\"50%\")\n                        .build())\n                    .build(),\n                DashboardWidgetArgs.builder()\n                    .queryValueDefinition(DashboardWidgetQueryValueDefinitionArgs.builder()\n                        .requests(DashboardWidgetQueryValueDefinitionRequestArgs.builder()\n                            .q(\"avg:system.load.1{env:staging} by {account}\")\n                            .aggregator(\"sum\")\n                            .conditionalFormats(                            \n                                DashboardWidgetQueryValueDefinitionRequestConditionalFormatArgs.builder()\n                                    .comparator(\"\u003c\")\n                                    .value(\"2\")\n                                    .palette(\"white_on_green\")\n                                    .build(),\n                                DashboardWidgetQueryValueDefinitionRequestConditionalFormatArgs.builder()\n                                    .comparator(\"\u003e\")\n                                    .value(\"2.2\")\n                                    .palette(\"white_on_red\")\n                                    .build())\n                            .build())\n                        .autoscale(true)\n                        .customUnit(\"xx\")\n                        .precision(\"4\")\n                        .textAlign(\"right\")\n                        .title(\"Widget Title\")\n                        .liveSpan(\"1h\")\n                        .build())\n                    .build(),\n                DashboardWidgetArgs.builder()\n                    .queryTableDefinition(DashboardWidgetQueryTableDefinitionArgs.builder()\n                        .requests(DashboardWidgetQueryTableDefinitionRequestArgs.builder()\n                            .q(\"avg:system.load.1{env:staging} by {account}\")\n                            .aggregator(\"sum\")\n                            .limit(\"10\")\n                            .conditionalFormats(                            \n                                DashboardWidgetQueryTableDefinitionRequestConditionalFormatArgs.builder()\n                                    .comparator(\"\u003c\")\n                                    .value(\"2\")\n                                    .palette(\"white_on_green\")\n                                    .build(),\n                                DashboardWidgetQueryTableDefinitionRequestConditionalFormatArgs.builder()\n                                    .comparator(\"\u003e\")\n                                    .value(\"2.2\")\n                                    .palette(\"white_on_red\")\n                                    .build())\n                            .build())\n                        .title(\"Widget Title\")\n                        .liveSpan(\"1h\")\n                        .build())\n                    .build(),\n                DashboardWidgetArgs.builder()\n                    .scatterplotDefinition(DashboardWidgetScatterplotDefinitionArgs.builder()\n                        .request(DashboardWidgetScatterplotDefinitionRequestArgs.builder()\n                            .xes(DashboardWidgetScatterplotDefinitionRequestXArgs.builder()\n                                .q(\"avg:system.cpu.user{*} by {service, account}\")\n                                .aggregator(\"max\")\n                                .build())\n                            .ys(DashboardWidgetScatterplotDefinitionRequestYArgs.builder()\n                                .q(\"avg:system.mem.used{*} by {service, account}\")\n                                .aggregator(\"min\")\n                                .build())\n                            .build())\n                        .colorByGroups(                        \n                            \"account\",\n                            \"apm-role-group\")\n                        .xaxis(DashboardWidgetScatterplotDefinitionXaxisArgs.builder()\n                            .includeZero(true)\n                            .label(\"x\")\n                            .min(\"1\")\n                            .max(\"2000\")\n                            .scale(\"pow\")\n                            .build())\n                        .yaxis(DashboardWidgetScatterplotDefinitionYaxisArgs.builder()\n                            .includeZero(false)\n                            .label(\"y\")\n                            .min(\"5\")\n                            .max(\"2222\")\n                            .scale(\"log\")\n                            .build())\n                        .title(\"Widget Title\")\n                        .liveSpan(\"1h\")\n                        .build())\n                    .build(),\n                DashboardWidgetArgs.builder()\n                    .servicemapDefinition(DashboardWidgetServicemapDefinitionArgs.builder()\n                        .service(\"master-db\")\n                        .filters(                        \n                            \"env:prod\",\n                            \"datacenter:dc1\")\n                        .title(\"env: prod, datacenter:dc1, service: master-db\")\n                        .titleSize(\"16\")\n                        .titleAlign(\"left\")\n                        .build())\n                    .build(),\n                DashboardWidgetArgs.builder()\n                    .timeseriesDefinition(DashboardWidgetTimeseriesDefinitionArgs.builder()\n                        .requests(                        \n                            DashboardWidgetTimeseriesDefinitionRequestArgs.builder()\n                                .q(\"avg:system.cpu.user{app:general} by {env}\")\n                                .displayType(\"line\")\n                                .style(DashboardWidgetTimeseriesDefinitionRequestStyleArgs.builder()\n                                    .palette(\"warm\")\n                                    .lineType(\"dashed\")\n                                    .lineWidth(\"thin\")\n                                    .build())\n                                .metadatas(DashboardWidgetTimeseriesDefinitionRequestMetadataArgs.builder()\n                                    .expression(\"avg:system.cpu.user{app:general} by {env}\")\n                                    .aliasName(\"Alpha\")\n                                    .build())\n                                .build(),\n                            DashboardWidgetTimeseriesDefinitionRequestArgs.builder()\n                                .logQuery(DashboardWidgetLogQueryArgs.builder()\n                                    .index(\"mcnulty\")\n                                    .computeQuery(DashboardWidgetLogQueryComputeQueryArgs.builder()\n                                        .aggregation(\"avg\")\n                                        .facet(\"@duration\")\n                                        .interval(5000)\n                                        .build())\n                                    .searchQuery(\"status:info\")\n                                    .groupBies(DashboardWidgetLogQueryGroupByArgs.builder()\n                                        .facet(\"host\")\n                                        .limit(10)\n                                        .sortQuery(DashboardWidgetLogQueryGroupBySortQueryArgs.builder()\n                                            .aggregation(\"avg\")\n                                            .order(\"desc\")\n                                            .facet(\"@duration\")\n                                            .build())\n                                        .build())\n                                    .build())\n                                .displayType(\"area\")\n                                .build(),\n                            DashboardWidgetTimeseriesDefinitionRequestArgs.builder()\n                                .apmQuery(DashboardWidgetApmQueryArgs.builder()\n                                    .index(\"apm-search\")\n                                    .computeQuery(DashboardWidgetApmQueryComputeQueryArgs.builder()\n                                        .aggregation(\"avg\")\n                                        .facet(\"@duration\")\n                                        .interval(5000)\n                                        .build())\n                                    .searchQuery(\"type:web\")\n                                    .groupBies(DashboardWidgetApmQueryGroupByArgs.builder()\n                                        .facet(\"resource_name\")\n                                        .limit(50)\n                                        .sortQuery(DashboardWidgetApmQueryGroupBySortQueryArgs.builder()\n                                            .aggregation(\"avg\")\n                                            .order(\"desc\")\n                                            .facet(\"@string_query.interval\")\n                                            .build())\n                                        .build())\n                                    .build())\n                                .displayType(\"bars\")\n                                .build(),\n                            DashboardWidgetTimeseriesDefinitionRequestArgs.builder()\n                                .processQuery(DashboardWidgetTimeseriesDefinitionRequestProcessQueryArgs.builder()\n                                    .metric(\"process.stat.cpu.total_pct\")\n                                    .searchBy(\"error\")\n                                    .filterBies(\"active\")\n                                    .limit(50)\n                                    .build())\n                                .displayType(\"area\")\n                                .build())\n                        .markers(                        \n                            DashboardWidgetTimeseriesDefinitionMarkerArgs.builder()\n                                .displayType(\"error dashed\")\n                                .label(\" z=6 \")\n                                .value(\"y = 4\")\n                                .build(),\n                            DashboardWidgetTimeseriesDefinitionMarkerArgs.builder()\n                                .displayType(\"ok solid\")\n                                .value(\"10 \u003c y \u003c 999\")\n                                .label(\" x=8 \")\n                                .build())\n                        .title(\"Widget Title\")\n                        .showLegend(true)\n                        .legendSize(\"2\")\n                        .liveSpan(\"1h\")\n                        .events(                        \n                            DashboardWidgetTimeseriesDefinitionEventArgs.builder()\n                                .q(\"sources:test tags:1\")\n                                .build(),\n                            DashboardWidgetTimeseriesDefinitionEventArgs.builder()\n                                .q(\"sources:test tags:2\")\n                                .build())\n                        .yaxis(DashboardWidgetTimeseriesDefinitionYaxisArgs.builder()\n                            .scale(\"log\")\n                            .includeZero(false)\n                            .max(100)\n                            .build())\n                        .build())\n                    .build(),\n                DashboardWidgetArgs.builder()\n                    .toplistDefinition(DashboardWidgetToplistDefinitionArgs.builder()\n                        .requests(DashboardWidgetToplistDefinitionRequestArgs.builder()\n                            .q(\"avg:system.cpu.user{app:general} by {env}\")\n                            .conditionalFormats(                            \n                                DashboardWidgetToplistDefinitionRequestConditionalFormatArgs.builder()\n                                    .comparator(\"\u003c\")\n                                    .value(\"2\")\n                                    .palette(\"white_on_green\")\n                                    .build(),\n                                DashboardWidgetToplistDefinitionRequestConditionalFormatArgs.builder()\n                                    .comparator(\"\u003e\")\n                                    .value(\"2.2\")\n                                    .palette(\"white_on_red\")\n                                    .build())\n                            .build())\n                        .title(\"Widget Title\")\n                        .build())\n                    .build(),\n                DashboardWidgetArgs.builder()\n                    .groupDefinition(DashboardWidgetGroupDefinitionArgs.builder()\n                        .layoutType(\"ordered\")\n                        .title(\"Group Widget\")\n                        .widgets(                        \n                            DashboardWidgetGroupDefinitionWidgetArgs.builder()\n                                .noteDefinition(DashboardWidgetNoteDefinitionArgs.builder()\n                                    .content(\"cluster note widget\")\n                                    .backgroundColor(\"pink\")\n                                    .fontSize(\"14\")\n                                    .textAlign(\"center\")\n                                    .showTick(true)\n                                    .tickEdge(\"left\")\n                                    .tickPos(\"50%\")\n                                    .build())\n                                .build(),\n                            DashboardWidgetGroupDefinitionWidgetArgs.builder()\n                                .alertGraphDefinition(DashboardWidgetAlertGraphDefinitionArgs.builder()\n                                    .alertId(\"123\")\n                                    .vizType(\"toplist\")\n                                    .title(\"Alert Graph\")\n                                    .liveSpan(\"1h\")\n                                    .build())\n                                .build())\n                        .build())\n                    .build(),\n                DashboardWidgetArgs.builder()\n                    .serviceLevelObjectiveDefinition(DashboardWidgetServiceLevelObjectiveDefinitionArgs.builder()\n                        .title(\"Widget Title\")\n                        .viewType(\"detail\")\n                        .sloId(\"56789\")\n                        .showErrorBudget(true)\n                        .viewMode(\"overall\")\n                        .timeWindows(                        \n                            \"7d\",\n                            \"previous_week\")\n                        .build())\n                    .build())\n            .templateVariables(            \n                DashboardTemplateVariableArgs.builder()\n                    .name(\"var_1\")\n                    .prefix(\"host\")\n                    .default_(\"aws\")\n                    .build(),\n                DashboardTemplateVariableArgs.builder()\n                    .name(\"var_2\")\n                    .prefix(\"service_name\")\n                    .default_(\"autoscaling\")\n                    .build())\n            .templateVariablePresets(DashboardTemplateVariablePresetArgs.builder()\n                .name(\"preset_1\")\n                .templateVariables(                \n                    DashboardTemplateVariablePresetTemplateVariableArgs.builder()\n                        .name(\"var_1\")\n                        .value(\"host.dc\")\n                        .build(),\n                    DashboardTemplateVariablePresetTemplateVariableArgs.builder()\n                        .name(\"var_2\")\n                        .value(\"my_service\")\n                        .build())\n                .build())\n            .build());\n\n        // Example Free Layout\n        var freeDashboard = new Dashboard(\"freeDashboard\", DashboardArgs.builder()\n            .title(\"Free Layout Dashboard\")\n            .description(\"Created using the Datadog provider in Pulumi\")\n            .layoutType(\"free\")\n            .widgets(            \n                DashboardWidgetArgs.builder()\n                    .eventStreamDefinition(DashboardWidgetEventStreamDefinitionArgs.builder()\n                        .query(\"*\")\n                        .eventSize(\"l\")\n                        .title(\"Widget Title\")\n                        .titleSize(16)\n                        .titleAlign(\"left\")\n                        .liveSpan(\"1h\")\n                        .build())\n                    .widgetLayout(DashboardWidgetWidgetLayoutArgs.builder()\n                        .height(43)\n                        .width(32)\n                        .x(0)\n                        .y(0)\n                        .build())\n                    .build(),\n                DashboardWidgetArgs.builder()\n                    .eventTimelineDefinition(DashboardWidgetEventTimelineDefinitionArgs.builder()\n                        .query(\"*\")\n                        .title(\"Widget Title\")\n                        .titleSize(16)\n                        .titleAlign(\"left\")\n                        .liveSpan(\"1h\")\n                        .build())\n                    .widgetLayout(DashboardWidgetWidgetLayoutArgs.builder()\n                        .height(9)\n                        .width(66)\n                        .x(33)\n                        .y(60)\n                        .build())\n                    .build(),\n                DashboardWidgetArgs.builder()\n                    .freeTextDefinition(DashboardWidgetFreeTextDefinitionArgs.builder()\n                        .text(\"free text content\")\n                        .color(\"#d00\")\n                        .fontSize(\"36\")\n                        .textAlign(\"left\")\n                        .build())\n                    .widgetLayout(DashboardWidgetWidgetLayoutArgs.builder()\n                        .height(20)\n                        .width(34)\n                        .x(33)\n                        .y(0)\n                        .build())\n                    .build(),\n                DashboardWidgetArgs.builder()\n                    .iframeDefinition(DashboardWidgetIframeDefinitionArgs.builder()\n                        .url(\"http://google.com\")\n                        .build())\n                    .widgetLayout(DashboardWidgetWidgetLayoutArgs.builder()\n                        .height(46)\n                        .width(39)\n                        .x(101)\n                        .y(0)\n                        .build())\n                    .build(),\n                DashboardWidgetArgs.builder()\n                    .imageDefinition(DashboardWidgetImageDefinitionArgs.builder()\n                        .url(\"https://images.pexels.com/photos/67636/rose-blue-flower-rose-blooms-67636.jpeg?auto=compress\u0026cs=tinysrgb\u0026h=350\")\n                        .sizing(\"fit\")\n                        .margin(\"small\")\n                        .build())\n                    .widgetLayout(DashboardWidgetWidgetLayoutArgs.builder()\n                        .height(20)\n                        .width(30)\n                        .x(69)\n                        .y(0)\n                        .build())\n                    .build(),\n                DashboardWidgetArgs.builder()\n                    .logStreamDefinition(DashboardWidgetLogStreamDefinitionArgs.builder()\n                        .indexes(\"main\")\n                        .query(\"error\")\n                        .columns(                        \n                            \"core_host\",\n                            \"core_service\",\n                            \"tag_source\")\n                        .showDateColumn(true)\n                        .showMessageColumn(true)\n                        .messageDisplay(\"expanded-md\")\n                        .sort(DashboardWidgetLogStreamDefinitionSortArgs.builder()\n                            .column(\"time\")\n                            .order(\"desc\")\n                            .build())\n                        .build())\n                    .widgetLayout(DashboardWidgetWidgetLayoutArgs.builder()\n                        .height(36)\n                        .width(32)\n                        .x(0)\n                        .y(45)\n                        .build())\n                    .build(),\n                DashboardWidgetArgs.builder()\n                    .manageStatusDefinition(DashboardWidgetManageStatusDefinitionArgs.builder()\n                        .colorPreference(\"text\")\n                        .displayFormat(\"countsAndList\")\n                        .hideZeroCounts(true)\n                        .query(\"type:metric\")\n                        .showLastTriggered(false)\n                        .sort(\"status,asc\")\n                        .summaryType(\"monitors\")\n                        .title(\"Widget Title\")\n                        .titleSize(16)\n                        .titleAlign(\"left\")\n                        .build())\n                    .widgetLayout(DashboardWidgetWidgetLayoutArgs.builder()\n                        .height(40)\n                        .width(30)\n                        .x(101)\n                        .y(48)\n                        .build())\n                    .build(),\n                DashboardWidgetArgs.builder()\n                    .traceServiceDefinition(DashboardWidgetTraceServiceDefinitionArgs.builder()\n                        .displayFormat(\"three_column\")\n                        .env(\"datadog.com\")\n                        .service(\"alerting-cassandra\")\n                        .showBreakdown(true)\n                        .showDistribution(true)\n                        .showErrors(true)\n                        .showHits(true)\n                        .showLatency(false)\n                        .showResourceList(false)\n                        .sizeFormat(\"large\")\n                        .spanName(\"cassandra.query\")\n                        .title(\"alerting-cassandra #env:datadog.com\")\n                        .titleAlign(\"center\")\n                        .titleSize(\"13\")\n                        .liveSpan(\"1h\")\n                        .build())\n                    .widgetLayout(DashboardWidgetWidgetLayoutArgs.builder()\n                        .height(38)\n                        .width(66)\n                        .x(33)\n                        .y(21)\n                        .build())\n                    .build(),\n                DashboardWidgetArgs.builder()\n                    .timeseriesDefinition(DashboardWidgetTimeseriesDefinitionArgs.builder()\n                        .requests(DashboardWidgetTimeseriesDefinitionRequestArgs.builder()\n                            .formulas(                            \n                                DashboardWidgetTimeseriesDefinitionRequestFormulaArgs.builder()\n                                    .formulaExpression(\"my_query_1 + my_query_2\")\n                                    .alias(\"my ff query\")\n                                    .build(),\n                                DashboardWidgetTimeseriesDefinitionRequestFormulaArgs.builder()\n                                    .formulaExpression(\"my_query_1 * my_query_2\")\n                                    .limit(DashboardWidgetTimeseriesDefinitionRequestFormulaLimitArgs.builder()\n                                        .count(5)\n                                        .order(\"desc\")\n                                        .build())\n                                    .alias(\"my second ff query\")\n                                    .build())\n                            .queries(                            \n                                DashboardWidgetTimeseriesDefinitionRequestQueryArgs.builder()\n                                    .metricQuery(DashboardWidgetTimeseriesDefinitionRequestQueryMetricQueryArgs.builder()\n                                        .dataSource(\"metrics\")\n                                        .query(\"avg:system.cpu.user{app:general} by {env}\")\n                                        .name(\"my_query_1\")\n                                        .aggregator(\"sum\")\n                                        .build())\n                                    .build(),\n                                DashboardWidgetTimeseriesDefinitionRequestQueryArgs.builder()\n                                    .metricQuery(DashboardWidgetTimeseriesDefinitionRequestQueryMetricQueryArgs.builder()\n                                        .query(\"avg:system.cpu.user{app:general} by {env}\")\n                                        .name(\"my_query_2\")\n                                        .aggregator(\"sum\")\n                                        .build())\n                                    .build())\n                            .build())\n                        .build())\n                    .widgetLayout(DashboardWidgetWidgetLayoutArgs.builder()\n                        .height(16)\n                        .width(25)\n                        .x(58)\n                        .y(83)\n                        .build())\n                    .build(),\n                DashboardWidgetArgs.builder()\n                    .timeseriesDefinition(DashboardWidgetTimeseriesDefinitionArgs.builder()\n                        .requests(                        \n                            DashboardWidgetTimeseriesDefinitionRequestArgs.builder()\n                                .queries(DashboardWidgetTimeseriesDefinitionRequestQueryArgs.builder()\n                                    .eventQuery(DashboardWidgetTimeseriesDefinitionRequestQueryEventQueryArgs.builder()\n                                        .name(\"my-query\")\n                                        .dataSource(\"logs\")\n                                        .indexes(\"days-3\")\n                                        .computes(DashboardWidgetTimeseriesDefinitionRequestQueryEventQueryComputeArgs.builder()\n                                            .aggregation(\"count\")\n                                            .build())\n                                        .groupBies(DashboardWidgetTimeseriesDefinitionRequestQueryEventQueryGroupByArgs.builder()\n                                            .facet(\"host\")\n                                            .sort(DashboardWidgetTimeseriesDefinitionRequestQueryEventQueryGroupBySortArgs.builder()\n                                                .metric(\"@lambda.max_memory_used\")\n                                                .aggregation(\"avg\")\n                                                .build())\n                                            .limit(10)\n                                            .build())\n                                        .build())\n                                    .build())\n                                .build(),\n                            DashboardWidgetTimeseriesDefinitionRequestArgs.builder()\n                                .displayType(\"overlay\")\n                                .queries(DashboardWidgetTimeseriesDefinitionRequestQueryArgs.builder()\n                                    .metricQuery(DashboardWidgetTimeseriesDefinitionRequestQueryMetricQueryArgs.builder()\n                                        .name(\"MyOverlay\")\n                                        .dataSource(\"metrics\")\n                                        .query(\"avg:system.cpu.user{host:COMP-QJWVM2FYT4}\")\n                                        .build())\n                                    .build())\n                                .build())\n                        .build())\n                    .widgetLayout(DashboardWidgetWidgetLayoutArgs.builder()\n                        .height(16)\n                        .width(28)\n                        .x(29)\n                        .y(83)\n                        .build())\n                    .build(),\n                DashboardWidgetArgs.builder()\n                    .timeseriesDefinition(DashboardWidgetTimeseriesDefinitionArgs.builder()\n                        .requests(DashboardWidgetTimeseriesDefinitionRequestArgs.builder()\n                            .queries(DashboardWidgetTimeseriesDefinitionRequestQueryArgs.builder()\n                                .processQuery(DashboardWidgetTimeseriesDefinitionRequestQueryProcessQueryArgs.builder()\n                                    .dataSource(\"process\")\n                                    .textFilter(\"abc\")\n                                    .metric(\"process.stat.cpu.total_pct\")\n                                    .limit(10)\n                                    .tagFilters(\"some_filter\")\n                                    .name(\"my_process_query\")\n                                    .sort(\"asc\")\n                                    .isNormalizedCpu(true)\n                                    .aggregator(\"sum\")\n                                    .build())\n                                .build())\n                            .build())\n                        .build())\n                    .widgetLayout(DashboardWidgetWidgetLayoutArgs.builder()\n                        .height(16)\n                        .width(28)\n                        .x(0)\n                        .y(83)\n                        .build())\n                    .build(),\n                DashboardWidgetArgs.builder()\n                    .timeseriesDefinition(DashboardWidgetTimeseriesDefinitionArgs.builder()\n                        .requests(DashboardWidgetTimeseriesDefinitionRequestArgs.builder()\n                            .formulas(DashboardWidgetTimeseriesDefinitionRequestFormulaArgs.builder()\n                                .formulaExpression(\"query1\")\n                                .alias(\"my cloud cost query\")\n                                .build())\n                            .queries(DashboardWidgetTimeseriesDefinitionRequestQueryArgs.builder()\n                                .cloudCostQuery(DashboardWidgetTimeseriesDefinitionRequestQueryCloudCostQueryArgs.builder()\n                                    .dataSource(\"cloud_cost\")\n                                    .query(\"sum:aws.cost.amortized{*}\")\n                                    .name(\"query1\")\n                                    .aggregator(\"sum\")\n                                    .build())\n                                .build())\n                            .build())\n                        .build())\n                    .build(),\n                DashboardWidgetArgs.builder()\n                    .powerpackDefinition(DashboardWidgetPowerpackDefinitionArgs.builder()\n                        .powerpackId(\"00000000-0000-0000-0000-000000000000\")\n                        .backgroundColor(\"blue\")\n                        .bannerImg(\"https://example.org/example.png\")\n                        .showTitle(true)\n                        .title(\"Powerpack Widget\")\n                        .templateVariables(DashboardWidgetPowerpackDefinitionTemplateVariablesArgs.builder()\n                            .controlledExternallies(DashboardWidgetPowerpackDefinitionTemplateVariablesControlledExternallyArgs.builder()\n                                .name(\"var_2\")\n                                .values(\"autoscaling\")\n                                .prefix(\"service_name\")\n                                .build())\n                            .controlledByPowerpacks(DashboardWidgetPowerpackDefinitionTemplateVariablesControlledByPowerpackArgs.builder()\n                                .name(\"var_3\")\n                                .prefix(\"timeframe\")\n                                .values(                                \n                                    \"default\",\n                                    \"values\",\n                                    \"here\")\n                                .build())\n                            .build())\n                        .build())\n                    .build())\n            .templateVariables(            \n                DashboardTemplateVariableArgs.builder()\n                    .name(\"var_1\")\n                    .prefix(\"host\")\n                    .default_(\"aws\")\n                    .build(),\n                DashboardTemplateVariableArgs.builder()\n                    .name(\"var_2\")\n                    .prefix(\"service_name\")\n                    .default_(\"autoscaling\")\n                    .build())\n            .templateVariablePresets(DashboardTemplateVariablePresetArgs.builder()\n                .name(\"preset_1\")\n                .templateVariables(                \n                    DashboardTemplateVariablePresetTemplateVariableArgs.builder()\n                        .name(\"var_1\")\n                        .value(\"host.dc\")\n                        .build(),\n                    DashboardTemplateVariablePresetTemplateVariableArgs.builder()\n                        .name(\"var_2\")\n                        .value(\"my_service\")\n                        .build())\n                .build())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  # Example Ordered Layout\n  orderedDashboard:\n    type: datadog:Dashboard\n    name: ordered_dashboard\n    properties:\n      title: Ordered Layout Dashboard\n      description: Created using the Datadog provider in Pulumi\n      layoutType: ordered\n      widgets:\n        - alertGraphDefinition:\n            alertId: '895605'\n            vizType: timeseries\n            title: Widget Title\n            liveSpan: 1h\n        - alertValueDefinition:\n            alertId: '895605'\n            precision: 3\n            unit: b\n            textAlign: center\n            title: Widget Title\n        - alertValueDefinition:\n            alertId: '895605'\n            precision: 3\n            unit: b\n            textAlign: center\n            title: Widget Title\n        - changeDefinition:\n            requests:\n              - q: avg:system.load.1{env:staging} by {account}\n                changeType: absolute\n                compareTo: week_before\n                increaseGood: true\n                orderBy: name\n                orderDir: desc\n                showPresent: true\n            title: Widget Title\n            liveSpan: 1h\n        - distributionDefinition:\n            requests:\n              - q: avg:system.load.1{env:staging} by {account}\n                style:\n                  palette: warm\n            title: Widget Title\n            liveSpan: 1h\n        - checkStatusDefinition:\n            check: aws.ecs.agent_connected\n            grouping: cluster\n            groupBies:\n              - account\n              - cluster\n            tags:\n              - account:demo\n              - cluster:awseb-ruthebdog-env-8-dn3m6u3gvk\n            title: Widget Title\n            liveSpan: 1h\n        - heatmapDefinition:\n            requests:\n              - q: avg:system.load.1{env:staging} by {account}\n                style:\n                  palette: warm\n            yaxis:\n              min: 1\n              max: 2\n              includeZero: true\n              scale: sqrt\n            title: Widget Title\n            liveSpan: 1h\n        - hostmapDefinition:\n            request:\n              fills:\n                - q: avg:system.load.1{*} by {host}\n              sizes:\n                - q: avg:memcache.uptime{*} by {host}\n            nodeType: container\n            groups:\n              - host\n              - region\n            noGroupHosts: true\n            noMetricHosts: true\n            scopes:\n              - region:us-east-1\n              - aws_account:727006795293\n            style:\n              palette: yellow_to_green\n              paletteFlip: true\n              fillMin: '10'\n              fillMax: '20'\n            title: Widget Title\n        - noteDefinition:\n            content: note text\n            backgroundColor: pink\n            fontSize: '14'\n            textAlign: center\n            showTick: true\n            tickEdge: left\n            tickPos: 50%\n        - queryValueDefinition:\n            requests:\n              - q: avg:system.load.1{env:staging} by {account}\n                aggregator: sum\n                conditionalFormats:\n                  - comparator: \u003c\n                    value: '2'\n                    palette: white_on_green\n                  - comparator: '\u003e'\n                    value: '2.2'\n                    palette: white_on_red\n            autoscale: true\n            customUnit: xx\n            precision: '4'\n            textAlign: right\n            title: Widget Title\n            liveSpan: 1h\n        - queryTableDefinition:\n            requests:\n              - q: avg:system.load.1{env:staging} by {account}\n                aggregator: sum\n                limit: '10'\n                conditionalFormats:\n                  - comparator: \u003c\n                    value: '2'\n                    palette: white_on_green\n                  - comparator: '\u003e'\n                    value: '2.2'\n                    palette: white_on_red\n            title: Widget Title\n            liveSpan: 1h\n        - scatterplotDefinition:\n            request:\n              xes:\n                - q: avg:system.cpu.user{*} by {service, account}\n                  aggregator: max\n              ys:\n                - q: avg:system.mem.used{*} by {service, account}\n                  aggregator: min\n            colorByGroups:\n              - account\n              - apm-role-group\n            xaxis:\n              includeZero: true\n              label: x\n              min: '1'\n              max: '2000'\n              scale: pow\n            yaxis:\n              includeZero: false\n              label: y\n              min: '5'\n              max: '2222'\n              scale: log\n            title: Widget Title\n            liveSpan: 1h\n        - servicemapDefinition:\n            service: master-db\n            filters:\n              - env:prod\n              - datacenter:dc1\n            title: 'env: prod, datacenter:dc1, service: master-db'\n            titleSize: '16'\n            titleAlign: left\n        - timeseriesDefinition:\n            requests:\n              - q: avg:system.cpu.user{app:general} by {env}\n                displayType: line\n                style:\n                  palette: warm\n                  lineType: dashed\n                  lineWidth: thin\n                metadatas:\n                  - expression: avg:system.cpu.user{app:general} by {env}\n                    aliasName: Alpha\n              - logQuery:\n                  index: mcnulty\n                  computeQuery:\n                    aggregation: avg\n                    facet: '@duration'\n                    interval: 5000\n                  searchQuery: status:info\n                  groupBies:\n                    - facet: host\n                      limit: 10\n                      sortQuery:\n                        aggregation: avg\n                        order: desc\n                        facet: '@duration'\n                displayType: area\n              - apmQuery:\n                  index: apm-search\n                  computeQuery:\n                    aggregation: avg\n                    facet: '@duration'\n                    interval: 5000\n                  searchQuery: type:web\n                  groupBies:\n                    - facet: resource_name\n                      limit: 50\n                      sortQuery:\n                        aggregation: avg\n                        order: desc\n                        facet: '@string_query.interval'\n                displayType: bars\n              - processQuery:\n                  metric: process.stat.cpu.total_pct\n                  searchBy: error\n                  filterBies:\n                    - active\n                  limit: 50\n                displayType: area\n            markers:\n              - displayType: error dashed\n                label: ' z=6 '\n                value: y = 4\n              - displayType: ok solid\n                value: 10 \u003c y \u003c 999\n                label: ' x=8 '\n            title: Widget Title\n            showLegend: true\n            legendSize: '2'\n            liveSpan: 1h\n            events:\n              - q: sources:test tags:1\n              - q: sources:test tags:2\n            yaxis:\n              scale: log\n              includeZero: false\n              max: 100\n        - toplistDefinition:\n            requests:\n              - q: avg:system.cpu.user{app:general} by {env}\n                conditionalFormats:\n                  - comparator: \u003c\n                    value: '2'\n                    palette: white_on_green\n                  - comparator: '\u003e'\n                    value: '2.2'\n                    palette: white_on_red\n            title: Widget Title\n        - groupDefinition:\n            layoutType: ordered\n            title: Group Widget\n            widgets:\n              - noteDefinition:\n                  content: cluster note widget\n                  backgroundColor: pink\n                  fontSize: '14'\n                  textAlign: center\n                  showTick: true\n                  tickEdge: left\n                  tickPos: 50%\n              - alertGraphDefinition:\n                  alertId: '123'\n                  vizType: toplist\n                  title: Alert Graph\n                  liveSpan: 1h\n        - serviceLevelObjectiveDefinition:\n            title: Widget Title\n            viewType: detail\n            sloId: '56789'\n            showErrorBudget: true\n            viewMode: overall\n            timeWindows:\n              - 7d\n              - previous_week\n      templateVariables:\n        - name: var_1\n          prefix: host\n          default: aws\n        - name: var_2\n          prefix: service_name\n          default: autoscaling\n      templateVariablePresets:\n        - name: preset_1\n          templateVariables:\n            - name: var_1\n              value: host.dc\n            - name: var_2\n              value: my_service\n  # Example Free Layout\n  freeDashboard:\n    type: datadog:Dashboard\n    name: free_dashboard\n    properties:\n      title: Free Layout Dashboard\n      description: Created using the Datadog provider in Pulumi\n      layoutType: free\n      widgets:\n        - eventStreamDefinition:\n            query: '*'\n            eventSize: l\n            title: Widget Title\n            titleSize: 16\n            titleAlign: left\n            liveSpan: 1h\n          widgetLayout:\n            height: 43\n            width: 32\n            x: 0\n            y: 0\n        - eventTimelineDefinition:\n            query: '*'\n            title: Widget Title\n            titleSize: 16\n            titleAlign: left\n            liveSpan: 1h\n          widgetLayout:\n            height: 9\n            width: 66\n            x: 33\n            y: 60\n        - freeTextDefinition:\n            text: free text content\n            color: '#d00'\n            fontSize: '36'\n            textAlign: left\n          widgetLayout:\n            height: 20\n            width: 34\n            x: 33\n            y: 0\n        - iframeDefinition:\n            url: http://google.com\n          widgetLayout:\n            height: 46\n            width: 39\n            x: 101\n            y: 0\n        - imageDefinition:\n            url: https://images.pexels.com/photos/67636/rose-blue-flower-rose-blooms-67636.jpeg?auto=compress\u0026cs=tinysrgb\u0026h=350\n            sizing: fit\n            margin: small\n          widgetLayout:\n            height: 20\n            width: 30\n            x: 69\n            y: 0\n        - logStreamDefinition:\n            indexes:\n              - main\n            query: error\n            columns:\n              - core_host\n              - core_service\n              - tag_source\n            showDateColumn: true\n            showMessageColumn: true\n            messageDisplay: expanded-md\n            sort:\n              column: time\n              order: desc\n          widgetLayout:\n            height: 36\n            width: 32\n            x: 0\n            y: 45\n        - manageStatusDefinition:\n            colorPreference: text\n            displayFormat: countsAndList\n            hideZeroCounts: true\n            query: type:metric\n            showLastTriggered: false\n            sort: status,asc\n            summaryType: monitors\n            title: Widget Title\n            titleSize: 16\n            titleAlign: left\n          widgetLayout:\n            height: 40\n            width: 30\n            x: 101\n            y: 48\n        - traceServiceDefinition:\n            displayFormat: three_column\n            env: datadog.com\n            service: alerting-cassandra\n            showBreakdown: true\n            showDistribution: true\n            showErrors: true\n            showHits: true\n            showLatency: false\n            showResourceList: false\n            sizeFormat: large\n            spanName: cassandra.query\n            title: 'alerting-cassandra #env:datadog.com'\n            titleAlign: center\n            titleSize: '13'\n            liveSpan: 1h\n          widgetLayout:\n            height: 38\n            width: 66\n            x: 33\n            y: 21\n        - timeseriesDefinition:\n            requests:\n              - formulas:\n                  - formulaExpression: my_query_1 + my_query_2\n                    alias: my ff query\n                  - formulaExpression: my_query_1 * my_query_2\n                    limit:\n                      count: 5\n                      order: desc\n                    alias: my second ff query\n                queries:\n                  - metricQuery:\n                      dataSource: metrics\n                      query: avg:system.cpu.user{app:general} by {env}\n                      name: my_query_1\n                      aggregator: sum\n                  - metricQuery:\n                      query: avg:system.cpu.user{app:general} by {env}\n                      name: my_query_2\n                      aggregator: sum\n          widgetLayout:\n            height: 16\n            width: 25\n            x: 58\n            y: 83\n        - timeseriesDefinition:\n            requests:\n              - queries:\n                  - eventQuery:\n                      name: my-query\n                      dataSource: logs\n                      indexes:\n                        - days-3\n                      computes:\n                        - aggregation: count\n                      groupBies:\n                        - facet: host\n                          sort:\n                            metric: '@lambda.max_memory_used'\n                            aggregation: avg\n                          limit: 10\n              - displayType: overlay\n                queries:\n                  - metricQuery:\n                      name: MyOverlay\n                      dataSource: metrics\n                      query: avg:system.cpu.user{host:COMP-QJWVM2FYT4}\n          widgetLayout:\n            height: 16\n            width: 28\n            x: 29\n            y: 83\n        - timeseriesDefinition:\n            requests:\n              - queries:\n                  - processQuery:\n                      dataSource: process\n                      textFilter: abc\n                      metric: process.stat.cpu.total_pct\n                      limit: 10\n                      tagFilters:\n                        - some_filter\n                      name: my_process_query\n                      sort: asc\n                      isNormalizedCpu: true\n                      aggregator: sum\n          widgetLayout:\n            height: 16\n            width: 28\n            x: 0\n            y: 83\n        - timeseriesDefinition:\n            requests:\n              - formulas:\n                  - formulaExpression: query1\n                    alias: my cloud cost query\n                queries:\n                  - cloudCostQuery:\n                      dataSource: cloud_cost\n                      query: sum:aws.cost.amortized{*}\n                      name: query1\n                      aggregator: sum\n        - powerpackDefinition:\n            powerpackId: 00000000-0000-0000-0000-000000000000\n            backgroundColor: blue\n            bannerImg: https://example.org/example.png\n            showTitle: true\n            title: Powerpack Widget\n            templateVariables:\n              controlledExternallies:\n                - name: var_2\n                  values:\n                    - autoscaling\n                  prefix: service_name\n              controlledByPowerpacks:\n                - name: var_3\n                  prefix: timeframe\n                  values:\n                    - default\n                    - values\n                    - here\n      templateVariables:\n        - name: var_1\n          prefix: host\n          default: aws\n        - name: var_2\n          prefix: service_name\n          default: autoscaling\n      templateVariablePresets:\n        - name: preset_1\n          templateVariables:\n            - name: var_1\n              value: host.dc\n            - name: var_2\n              value: my_service\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\n```sh\n$ pulumi import datadog:index/dashboard:Dashboard my_service_dashboard sv7-gyh-kas\n```\n\n",
            "properties": {
                "dashboardLists": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "dashboardListsRemoveds": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "A list of dashboard lists this dashboard should be removed from. Internal only.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The description of the dashboard.\n"
                },
                "isReadOnly": {
                    "type": "boolean",
                    "description": "Whether this dashboard is read-only. **Deprecated.** Prefer using `restricted_roles` to define which roles are required to edit the dashboard. Defaults to `false`.\n",
                    "deprecationMessage": "Prefer using `restricted_roles` to define which roles are required to edit the dashboard."
                },
                "layoutType": {
                    "type": "string",
                    "description": "The layout type of the dashboard. Valid values are `ordered`, `free`.\n"
                },
                "notifyLists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The list of handles for the users to notify when changes are made to this dashboard.\n"
                },
                "reflowType": {
                    "type": "string",
                    "description": "The reflow type of a new dashboard layout. Set this only when layout type is `ordered`. If set to `fixed`, the dashboard expects all widgets to have a layout, and if it's set to `auto`, widgets should not have layouts. Valid values are `auto`, `fixed`.\n"
                },
                "restrictedRoles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "UUIDs of roles whose associated users are authorized to edit the dashboard.\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tags assigned to the Dashboard. Only team names of the form `team:\u003cname\u003e` are supported.\n"
                },
                "templateVariablePresets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardTemplateVariablePreset:DashboardTemplateVariablePreset"
                    },
                    "description": "The list of selectable template variable presets for this dashboard.\n"
                },
                "templateVariables": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardTemplateVariable:DashboardTemplateVariable"
                    },
                    "description": "The list of template variables for this dashboard.\n"
                },
                "title": {
                    "type": "string",
                    "description": "The title of the dashboard.\n"
                },
                "url": {
                    "type": "string",
                    "description": "The URL of the dashboard.\n"
                },
                "widgets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidget:DashboardWidget"
                    },
                    "description": "The list of widgets to display on the dashboard.\n"
                }
            },
            "required": [
                "dashboardListsRemoveds",
                "layoutType",
                "title",
                "url"
            ],
            "inputProperties": {
                "dashboardLists": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "description": {
                    "type": "string",
                    "description": "The description of the dashboard.\n"
                },
                "isReadOnly": {
                    "type": "boolean",
                    "description": "Whether this dashboard is read-only. **Deprecated.** Prefer using `restricted_roles` to define which roles are required to edit the dashboard. Defaults to `false`.\n",
                    "deprecationMessage": "Prefer using `restricted_roles` to define which roles are required to edit the dashboard."
                },
                "layoutType": {
                    "type": "string",
                    "description": "The layout type of the dashboard. Valid values are `ordered`, `free`.\n",
                    "willReplaceOnChanges": true
                },
                "notifyLists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The list of handles for the users to notify when changes are made to this dashboard.\n"
                },
                "reflowType": {
                    "type": "string",
                    "description": "The reflow type of a new dashboard layout. Set this only when layout type is `ordered`. If set to `fixed`, the dashboard expects all widgets to have a layout, and if it's set to `auto`, widgets should not have layouts. Valid values are `auto`, `fixed`.\n"
                },
                "restrictedRoles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "UUIDs of roles whose associated users are authorized to edit the dashboard.\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tags assigned to the Dashboard. Only team names of the form `team:\u003cname\u003e` are supported.\n"
                },
                "templateVariablePresets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardTemplateVariablePreset:DashboardTemplateVariablePreset"
                    },
                    "description": "The list of selectable template variable presets for this dashboard.\n"
                },
                "templateVariables": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardTemplateVariable:DashboardTemplateVariable"
                    },
                    "description": "The list of template variables for this dashboard.\n"
                },
                "title": {
                    "type": "string",
                    "description": "The title of the dashboard.\n"
                },
                "url": {
                    "type": "string",
                    "description": "The URL of the dashboard.\n"
                },
                "widgets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidget:DashboardWidget"
                    },
                    "description": "The list of widgets to display on the dashboard.\n"
                }
            },
            "requiredInputs": [
                "layoutType",
                "title"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Dashboard resources.\n",
                "properties": {
                    "dashboardLists": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    },
                    "dashboardListsRemoveds": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "description": "A list of dashboard lists this dashboard should be removed from. Internal only.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "The description of the dashboard.\n"
                    },
                    "isReadOnly": {
                        "type": "boolean",
                        "description": "Whether this dashboard is read-only. **Deprecated.** Prefer using `restricted_roles` to define which roles are required to edit the dashboard. Defaults to `false`.\n",
                        "deprecationMessage": "Prefer using `restricted_roles` to define which roles are required to edit the dashboard."
                    },
                    "layoutType": {
                        "type": "string",
                        "description": "The layout type of the dashboard. Valid values are `ordered`, `free`.\n",
                        "willReplaceOnChanges": true
                    },
                    "notifyLists": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The list of handles for the users to notify when changes are made to this dashboard.\n"
                    },
                    "reflowType": {
                        "type": "string",
                        "description": "The reflow type of a new dashboard layout. Set this only when layout type is `ordered`. If set to `fixed`, the dashboard expects all widgets to have a layout, and if it's set to `auto`, widgets should not have layouts. Valid values are `auto`, `fixed`.\n"
                    },
                    "restrictedRoles": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "UUIDs of roles whose associated users are authorized to edit the dashboard.\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of tags assigned to the Dashboard. Only team names of the form `team:\u003cname\u003e` are supported.\n"
                    },
                    "templateVariablePresets": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/datadog:index/DashboardTemplateVariablePreset:DashboardTemplateVariablePreset"
                        },
                        "description": "The list of selectable template variable presets for this dashboard.\n"
                    },
                    "templateVariables": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/datadog:index/DashboardTemplateVariable:DashboardTemplateVariable"
                        },
                        "description": "The list of template variables for this dashboard.\n"
                    },
                    "title": {
                        "type": "string",
                        "description": "The title of the dashboard.\n"
                    },
                    "url": {
                        "type": "string",
                        "description": "The URL of the dashboard.\n"
                    },
                    "widgets": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/datadog:index/DashboardWidget:DashboardWidget"
                        },
                        "description": "The list of widgets to display on the dashboard.\n"
                    }
                },
                "type": "object"
            }
        },
        "datadog:index/dashboardJson:DashboardJson": {
            "description": "Provides a Datadog dashboard JSON resource. This can be used to create and manage Datadog dashboards using the JSON definition.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as datadog from \"@pulumi/datadog\";\n\n// Example Dashboard JSON\nconst dashboardJson = new datadog.DashboardJson(\"dashboard_json\", {dashboard: `{\n   \"title\":\"Ordered Layout Dashboard\",\n   \"description\":\"Created using the Datadog provider in Pulumi\",\n   \"widgets\":[\n      {\n         \"id\":719369537777170,\n         \"definition\":{\n            \"title\":\"Widget Title\",\n            \"type\":\"alert_graph\",\n            \"alert_id\":\"895605\",\n            \"viz_type\":\"timeseries\"\n         }\n      },\n      {\n         \"id\":2306240030393868,\n         \"definition\":{\n            \"title\":\"Widget Title\",\n            \"type\":\"alert_value\",\n            \"alert_id\":\"895605\",\n            \"unit\":\"b\",\n            \"text_align\":\"center\",\n            \"precision\":3\n         }\n      },\n      {\n         \"id\":6990998850881326,\n         \"definition\":{\n            \"title\":\"Widget Title\",\n            \"type\":\"alert_value\",\n            \"alert_id\":\"895605\",\n            \"unit\":\"b\",\n            \"text_align\":\"center\",\n            \"precision\":3\n         }\n      },\n      {\n         \"id\":3351284044659007,\n         \"definition\":{\n            \"title\":\"Widget Title\",\n            \"type\":\"change\",\n            \"requests\":[\n               {\n                  \"q\":\"avg:system.load.1{env:staging} by {account}\",\n                  \"compare_to\":\"week_before\",\n                  \"change_type\":\"absolute\",\n                  \"order_dir\":\"desc\",\n                  \"increase_good\":true,\n                  \"order_by\":\"name\",\n                  \"show_present\":true\n               }\n            ]\n         }\n      },\n      {\n         \"id\":6450290622996182,\n         \"definition\":{\n            \"title\":\"Widget Title\",\n            \"show_legend\":false,\n            \"type\":\"distribution\",\n            \"requests\":[\n               {\n                  \"q\":\"avg:system.load.1{env:staging} by {account}\",\n                  \"style\":{\n                     \"palette\":\"warm\"\n                  }\n               }\n            ]\n         }\n      },\n      {\n         \"id\":4902842646291536,\n         \"definition\":{\n            \"title\":\"Widget Title\",\n            \"type\":\"check_status\",\n            \"check\":\"aws.ecs.agent_connected\",\n            \"grouping\":\"cluster\",\n            \"group_by\":[\n               \"account\",\n               \"cluster\"\n            ],\n            \"tags\":[\n               \"account:demo\",\n               \"cluster:awseb-ruthebdog-env-8-dn3m6u3gvk\"\n            ]\n         }\n      },\n      {\n         \"id\":6392349954822644,\n         \"definition\":{\n            \"title\":\"Widget Title\",\n            \"show_legend\":false,\n            \"type\":\"heatmap\",\n            \"yaxis\":{\n               \"scale\":\"sqrt\",\n               \"include_zero\":true,\n               \"min\":\"1\",\n               \"max\":\"2\"\n            },\n            \"requests\":[\n               {\n                  \"q\":\"avg:system.load.1{env:staging} by {account}\",\n                  \"style\":{\n                     \"palette\":\"warm\"\n                  }\n               }\n            ]\n         }\n      },\n      {\n         \"id\":5222961478940988,\n         \"definition\":{\n            \"title\":\"Widget Title\",\n            \"type\":\"hostmap\",\n            \"requests\":{\n               \"fill\":{\n                  \"q\":\"avg:system.load.1{*} by {host}\"\n               },\n               \"size\":{\n                  \"q\":\"avg:memcache.uptime{*} by {host}\"\n               }\n            },\n            \"node_type\":\"container\",\n            \"no_metric_hosts\":true,\n            \"no_group_hosts\":true,\n            \"group\":[\n               \"host\",\n               \"region\"\n            ],\n            \"scope\":[\n               \"region:us-east-1\",\n               \"aws_account:727006795293\"\n            ],\n            \"style\":{\n               \"palette\":\"yellow_to_green\",\n               \"palette_flip\":true,\n               \"fill_min\":\"10\",\n               \"fill_max\":\"20\"\n            }\n         }\n      },\n      {\n         \"id\":8121199734227072,\n         \"definition\":{\n            \"type\":\"note\",\n            \"content\":\"note text\",\n            \"background_color\":\"pink\",\n            \"font_size\":\"14\",\n            \"text_align\":\"center\",\n            \"show_tick\":true,\n            \"tick_pos\":\"50%\",\n            \"tick_edge\":\"left\"\n         }\n      },\n      {\n         \"id\":1775856835833038,\n         \"definition\":{\n            \"title\":\"Widget Title\",\n            \"type\":\"query_value\",\n            \"requests\":[\n               {\n                  \"q\":\"avg:system.load.1{env:staging} by {account}\",\n                  \"aggregator\":\"sum\",\n                  \"conditional_formats\":[\n                     {\n                        \"hide_value\":false,\n                        \"comparator\":\"\u003c\",\n                        \"palette\":\"white_on_green\",\n                        \"value\":2\n                     },\n                     {\n                        \"hide_value\":false,\n                        \"comparator\":\"\u003e\",\n                        \"palette\":\"white_on_red\",\n                        \"value\":2.2\n                     }\n                  ]\n               }\n            ],\n            \"autoscale\":true,\n            \"custom_unit\":\"xx\",\n            \"text_align\":\"right\",\n            \"precision\":4\n         }\n      },\n      {\n         \"id\":8461455966625581,\n         \"definition\":{\n            \"title\":\"Widget Title\",\n            \"type\":\"query_table\",\n            \"requests\":[\n               {\n                  \"q\":\"avg:system.load.1{env:staging} by {account}\",\n                  \"aggregator\":\"sum\",\n                  \"conditional_formats\":[\n                     {\n                        \"hide_value\":false,\n                        \"comparator\":\"\u003c\",\n                        \"palette\":\"white_on_green\",\n                        \"value\":2\n                     },\n                     {\n                        \"hide_value\":false,\n                        \"comparator\":\"\u003e\",\n                        \"palette\":\"white_on_red\",\n                        \"value\":2.2\n                     }\n                  ],\n                  \"limit\":10\n               }\n            ]\n         }\n      },\n      {\n         \"id\":8660006349418736,\n         \"definition\":{\n            \"title\":\"Widget Title\",\n            \"type\":\"scatterplot\",\n            \"requests\":{\n               \"x\":{\n                  \"q\":\"avg:system.cpu.user{*} by {service, account}\",\n                  \"aggregator\":\"max\"\n               },\n               \"y\":{\n                  \"q\":\"avg:system.mem.used{*} by {service, account}\",\n                  \"aggregator\":\"min\"\n               }\n            },\n            \"xaxis\":{\n               \"scale\":\"pow\",\n               \"label\":\"x\",\n               \"include_zero\":true,\n               \"min\":\"1\",\n               \"max\":\"2000\"\n            },\n            \"yaxis\":{\n               \"scale\":\"log\",\n               \"label\":\"y\",\n               \"include_zero\":false,\n               \"min\":\"5\",\n               \"max\":\"2222\"\n            },\n            \"color_by_groups\":[\n               \"account\",\n               \"apm-role-group\"\n            ]\n         }\n      },\n      {\n         \"id\":1669590772917638,\n         \"definition\":{\n            \"title\":\"env: prod, datacenter:dc1, service: master-db\",\n            \"title_size\":\"16\",\n            \"title_align\":\"left\",\n            \"type\":\"servicemap\",\n            \"service\":\"master-db\",\n            \"filters\":[\n               \"env:prod\",\n               \"datacenter:dc1\"\n            ]\n         }\n      },\n      {\n         \"id\":2138829058361817,\n         \"definition\":{\n            \"title\":\"Widget Title\",\n            \"show_legend\":true,\n            \"legend_size\":\"2\",\n            \"type\":\"timeseries\",\n            \"requests\":[\n               {\n                  \"q\":\"avg:system.cpu.user{app:general} by {env}\",\n                  \"on_right_yaxis\":false,\n                  \"metadata\":[\n                     {\n                        \"expression\":\"avg:system.cpu.user{app:general} by {env}\",\n                        \"alias_name\":\"Alpha\"\n                     }\n                  ],\n                  \"style\":{\n                     \"palette\":\"warm\",\n                     \"line_type\":\"dashed\",\n                     \"line_width\":\"thin\"\n                  },\n                  \"display_type\":\"line\"\n               },\n               {\n                  \"on_right_yaxis\":false,\n                  \"log_query\":{\n                     \"index\":\"mcnulty\",\n                     \"search\":{\n                        \"query\":\"status:info\"\n                     },\n                     \"group_by\":[\n                        {\n                           \"facet\":\"host\",\n                           \"sort\":{\n                              \"facet\":\"@duration\",\n                              \"aggregation\":\"avg\",\n                              \"order\":\"desc\"\n                           },\n                           \"limit\":10\n                        }\n                     ],\n                     \"compute\":{\n                        \"facet\":\"@duration\",\n                        \"interval\":5000,\n                        \"aggregation\":\"avg\"\n                     }\n                  },\n                  \"display_type\":\"area\"\n               },\n               {\n                  \"on_right_yaxis\":false,\n                  \"apm_query\":{\n                     \"index\":\"apm-search\",\n                     \"search\":{\n                        \"query\":\"type:web\"\n                     },\n                     \"group_by\":[\n                        {\n                           \"facet\":\"resource_name\",\n                           \"sort\":{\n                              \"facet\":\"@string_query.interval\",\n                              \"aggregation\":\"avg\",\n                              \"order\":\"desc\"\n                           },\n                           \"limit\":50\n                        }\n                     ],\n                     \"compute\":{\n                        \"facet\":\"@duration\",\n                        \"interval\":5000,\n                        \"aggregation\":\"avg\"\n                     }\n                  },\n                  \"display_type\":\"bars\"\n               },\n               {\n                  \"on_right_yaxis\":false,\n                  \"process_query\":{\n                     \"search_by\":\"error\",\n                     \"metric\":\"process.stat.cpu.total_pct\",\n                     \"limit\":50,\n                     \"filter_by\":[\n                        \"active\"\n                     ]\n                  },\n                  \"display_type\":\"area\"\n               }\n            ],\n            \"yaxis\":{\n               \"scale\":\"log\",\n               \"include_zero\":false,\n               \"max\":\"100\"\n            },\n            \"events\":[\n               {\n                  \"q\":\"sources:test tags:1\"\n               },\n               {\n                  \"q\":\"sources:test tags:2\"\n               }\n            ],\n            \"markers\":[\n               {\n                  \"label\":\" z=6 \",\n                  \"value\":\"y = 4\",\n                  \"display_type\":\"error dashed\"\n               },\n               {\n                  \"label\":\" x=8 \",\n                  \"value\":\"10 \u003c y \u003c 999\",\n                  \"display_type\":\"ok solid\"\n               }\n            ]\n         }\n      },\n      {\n         \"id\":7307171374656551,\n         \"definition\":{\n            \"title\":\"Widget Title\",\n            \"type\":\"toplist\",\n            \"requests\":[\n               {\n                  \"q\":\"avg:system.cpu.user{app:general} by {env}\",\n                  \"conditional_formats\":[\n                     {\n                        \"hide_value\":false,\n                        \"comparator\":\"\u003c\",\n                        \"palette\":\"white_on_green\",\n                        \"value\":2\n                     },\n                     {\n                        \"hide_value\":false,\n                        \"comparator\":\"\u003e\",\n                        \"palette\":\"white_on_red\",\n                        \"value\":2.2\n                     }\n                  ]\n               }\n            ]\n         }\n      },\n      {\n         \"id\":7086674838553258,\n         \"definition\":{\n            \"title\":\"Group Widget\",\n            \"type\":\"group\",\n            \"layout_type\":\"ordered\",\n            \"widgets\":[\n               {\n                  \"id\":3726092277657502,\n                  \"definition\":{\n                     \"type\":\"note\",\n                     \"content\":\"cluster note widget\",\n                     \"background_color\":\"pink\",\n                     \"font_size\":\"14\",\n                     \"text_align\":\"center\",\n                     \"show_tick\":true,\n                     \"tick_pos\":\"50%\",\n                     \"tick_edge\":\"left\"\n                  }\n               },\n               {\n                  \"id\":6376384650558057,\n                  \"definition\":{\n                     \"title\":\"Alert Graph\",\n                     \"type\":\"alert_graph\",\n                     \"alert_id\":\"123\",\n                     \"viz_type\":\"toplist\"\n                  }\n               }\n            ]\n         }\n      },\n      {\n         \"id\":4668903563678912,\n         \"definition\":{\n            \"title\":\"Widget Title\",\n            \"type\":\"slo\",\n            \"view_type\":\"detail\",\n            \"time_windows\":[\n               \"7d\",\n               \"previous_week\"\n            ],\n            \"slo_id\":\"56789\",\n            \"show_error_budget\":true,\n            \"view_mode\":\"overall\",\n            \"global_time_target\":\"0\"\n         }\n      }\n   ],\n   \"template_variables\":[\n      {\n         \"name\":\"var_1\",\n         \"default\":\"aws\",\n         \"prefix\":\"host\"\n      },\n      {\n         \"name\":\"var_2\",\n         \"default\":\"autoscaling\",\n         \"prefix\":\"service_name\"\n      }\n   ],\n   \"layout_type\":\"ordered\",\n   \"is_read_only\":true,\n   \"notify_list\":[\n\n   ],\n   \"template_variable_presets\":[\n      {\n         \"name\":\"preset_1\",\n         \"template_variables\":[\n            {\n               \"name\":\"var_1\",\n               \"value\":\"host.dc\"\n            },\n            {\n               \"name\":\"var_2\",\n               \"value\":\"my_service\"\n            }\n         ]\n      }\n   ]\n}\n`});\n```\n```python\nimport pulumi\nimport pulumi_datadog as datadog\n\n# Example Dashboard JSON\ndashboard_json = datadog.DashboardJson(\"dashboard_json\", dashboard=\"\"\"{\n   \"title\":\"Ordered Layout Dashboard\",\n   \"description\":\"Created using the Datadog provider in Pulumi\",\n   \"widgets\":[\n      {\n         \"id\":719369537777170,\n         \"definition\":{\n            \"title\":\"Widget Title\",\n            \"type\":\"alert_graph\",\n            \"alert_id\":\"895605\",\n            \"viz_type\":\"timeseries\"\n         }\n      },\n      {\n         \"id\":2306240030393868,\n         \"definition\":{\n            \"title\":\"Widget Title\",\n            \"type\":\"alert_value\",\n            \"alert_id\":\"895605\",\n            \"unit\":\"b\",\n            \"text_align\":\"center\",\n            \"precision\":3\n         }\n      },\n      {\n         \"id\":6990998850881326,\n         \"definition\":{\n            \"title\":\"Widget Title\",\n            \"type\":\"alert_value\",\n            \"alert_id\":\"895605\",\n            \"unit\":\"b\",\n            \"text_align\":\"center\",\n            \"precision\":3\n         }\n      },\n      {\n         \"id\":3351284044659007,\n         \"definition\":{\n            \"title\":\"Widget Title\",\n            \"type\":\"change\",\n            \"requests\":[\n               {\n                  \"q\":\"avg:system.load.1{env:staging} by {account}\",\n                  \"compare_to\":\"week_before\",\n                  \"change_type\":\"absolute\",\n                  \"order_dir\":\"desc\",\n                  \"increase_good\":true,\n                  \"order_by\":\"name\",\n                  \"show_present\":true\n               }\n            ]\n         }\n      },\n      {\n         \"id\":6450290622996182,\n         \"definition\":{\n            \"title\":\"Widget Title\",\n            \"show_legend\":false,\n            \"type\":\"distribution\",\n            \"requests\":[\n               {\n                  \"q\":\"avg:system.load.1{env:staging} by {account}\",\n                  \"style\":{\n                     \"palette\":\"warm\"\n                  }\n               }\n            ]\n         }\n      },\n      {\n         \"id\":4902842646291536,\n         \"definition\":{\n            \"title\":\"Widget Title\",\n            \"type\":\"check_status\",\n            \"check\":\"aws.ecs.agent_connected\",\n            \"grouping\":\"cluster\",\n            \"group_by\":[\n               \"account\",\n               \"cluster\"\n            ],\n            \"tags\":[\n               \"account:demo\",\n               \"cluster:awseb-ruthebdog-env-8-dn3m6u3gvk\"\n            ]\n         }\n      },\n      {\n         \"id\":6392349954822644,\n         \"definition\":{\n            \"title\":\"Widget Title\",\n            \"show_legend\":false,\n            \"type\":\"heatmap\",\n            \"yaxis\":{\n               \"scale\":\"sqrt\",\n               \"include_zero\":true,\n               \"min\":\"1\",\n               \"max\":\"2\"\n            },\n            \"requests\":[\n               {\n                  \"q\":\"avg:system.load.1{env:staging} by {account}\",\n                  \"style\":{\n                     \"palette\":\"warm\"\n                  }\n               }\n            ]\n         }\n      },\n      {\n         \"id\":5222961478940988,\n         \"definition\":{\n            \"title\":\"Widget Title\",\n            \"type\":\"hostmap\",\n            \"requests\":{\n               \"fill\":{\n                  \"q\":\"avg:system.load.1{*} by {host}\"\n               },\n               \"size\":{\n                  \"q\":\"avg:memcache.uptime{*} by {host}\"\n               }\n            },\n            \"node_type\":\"container\",\n            \"no_metric_hosts\":true,\n            \"no_group_hosts\":true,\n            \"group\":[\n               \"host\",\n               \"region\"\n            ],\n            \"scope\":[\n               \"region:us-east-1\",\n               \"aws_account:727006795293\"\n            ],\n            \"style\":{\n               \"palette\":\"yellow_to_green\",\n               \"palette_flip\":true,\n               \"fill_min\":\"10\",\n               \"fill_max\":\"20\"\n            }\n         }\n      },\n      {\n         \"id\":8121199734227072,\n         \"definition\":{\n            \"type\":\"note\",\n            \"content\":\"note text\",\n            \"background_color\":\"pink\",\n            \"font_size\":\"14\",\n            \"text_align\":\"center\",\n            \"show_tick\":true,\n            \"tick_pos\":\"50%\",\n            \"tick_edge\":\"left\"\n         }\n      },\n      {\n         \"id\":1775856835833038,\n         \"definition\":{\n            \"title\":\"Widget Title\",\n            \"type\":\"query_value\",\n            \"requests\":[\n               {\n                  \"q\":\"avg:system.load.1{env:staging} by {account}\",\n                  \"aggregator\":\"sum\",\n                  \"conditional_formats\":[\n                     {\n                        \"hide_value\":false,\n                        \"comparator\":\"\u003c\",\n                        \"palette\":\"white_on_green\",\n                        \"value\":2\n                     },\n                     {\n                        \"hide_value\":false,\n                        \"comparator\":\"\u003e\",\n                        \"palette\":\"white_on_red\",\n                        \"value\":2.2\n                     }\n                  ]\n               }\n            ],\n            \"autoscale\":true,\n            \"custom_unit\":\"xx\",\n            \"text_align\":\"right\",\n            \"precision\":4\n         }\n      },\n      {\n         \"id\":8461455966625581,\n         \"definition\":{\n            \"title\":\"Widget Title\",\n            \"type\":\"query_table\",\n            \"requests\":[\n               {\n                  \"q\":\"avg:system.load.1{env:staging} by {account}\",\n                  \"aggregator\":\"sum\",\n                  \"conditional_formats\":[\n                     {\n                        \"hide_value\":false,\n                        \"comparator\":\"\u003c\",\n                        \"palette\":\"white_on_green\",\n                        \"value\":2\n                     },\n                     {\n                        \"hide_value\":false,\n                        \"comparator\":\"\u003e\",\n                        \"palette\":\"white_on_red\",\n                        \"value\":2.2\n                     }\n                  ],\n                  \"limit\":10\n               }\n            ]\n         }\n      },\n      {\n         \"id\":8660006349418736,\n         \"definition\":{\n            \"title\":\"Widget Title\",\n            \"type\":\"scatterplot\",\n            \"requests\":{\n               \"x\":{\n                  \"q\":\"avg:system.cpu.user{*} by {service, account}\",\n                  \"aggregator\":\"max\"\n               },\n               \"y\":{\n                  \"q\":\"avg:system.mem.used{*} by {service, account}\",\n                  \"aggregator\":\"min\"\n               }\n            },\n            \"xaxis\":{\n               \"scale\":\"pow\",\n               \"label\":\"x\",\n               \"include_zero\":true,\n               \"min\":\"1\",\n               \"max\":\"2000\"\n            },\n            \"yaxis\":{\n               \"scale\":\"log\",\n               \"label\":\"y\",\n               \"include_zero\":false,\n               \"min\":\"5\",\n               \"max\":\"2222\"\n            },\n            \"color_by_groups\":[\n               \"account\",\n               \"apm-role-group\"\n            ]\n         }\n      },\n      {\n         \"id\":1669590772917638,\n         \"definition\":{\n            \"title\":\"env: prod, datacenter:dc1, service: master-db\",\n            \"title_size\":\"16\",\n            \"title_align\":\"left\",\n            \"type\":\"servicemap\",\n            \"service\":\"master-db\",\n            \"filters\":[\n               \"env:prod\",\n               \"datacenter:dc1\"\n            ]\n         }\n      },\n      {\n         \"id\":2138829058361817,\n         \"definition\":{\n            \"title\":\"Widget Title\",\n            \"show_legend\":true,\n            \"legend_size\":\"2\",\n            \"type\":\"timeseries\",\n            \"requests\":[\n               {\n                  \"q\":\"avg:system.cpu.user{app:general} by {env}\",\n                  \"on_right_yaxis\":false,\n                  \"metadata\":[\n                     {\n                        \"expression\":\"avg:system.cpu.user{app:general} by {env}\",\n                        \"alias_name\":\"Alpha\"\n                     }\n                  ],\n                  \"style\":{\n                     \"palette\":\"warm\",\n                     \"line_type\":\"dashed\",\n                     \"line_width\":\"thin\"\n                  },\n                  \"display_type\":\"line\"\n               },\n               {\n                  \"on_right_yaxis\":false,\n                  \"log_query\":{\n                     \"index\":\"mcnulty\",\n                     \"search\":{\n                        \"query\":\"status:info\"\n                     },\n                     \"group_by\":[\n                        {\n                           \"facet\":\"host\",\n                           \"sort\":{\n                              \"facet\":\"@duration\",\n                              \"aggregation\":\"avg\",\n                              \"order\":\"desc\"\n                           },\n                           \"limit\":10\n                        }\n                     ],\n                     \"compute\":{\n                        \"facet\":\"@duration\",\n                        \"interval\":5000,\n                        \"aggregation\":\"avg\"\n                     }\n                  },\n                  \"display_type\":\"area\"\n               },\n               {\n                  \"on_right_yaxis\":false,\n                  \"apm_query\":{\n                     \"index\":\"apm-search\",\n                     \"search\":{\n                        \"query\":\"type:web\"\n                     },\n                     \"group_by\":[\n                        {\n                           \"facet\":\"resource_name\",\n                           \"sort\":{\n                              \"facet\":\"@string_query.interval\",\n                              \"aggregation\":\"avg\",\n                              \"order\":\"desc\"\n                           },\n                           \"limit\":50\n                        }\n                     ],\n                     \"compute\":{\n                        \"facet\":\"@duration\",\n                        \"interval\":5000,\n                        \"aggregation\":\"avg\"\n                     }\n                  },\n                  \"display_type\":\"bars\"\n               },\n               {\n                  \"on_right_yaxis\":false,\n                  \"process_query\":{\n                     \"search_by\":\"error\",\n                     \"metric\":\"process.stat.cpu.total_pct\",\n                     \"limit\":50,\n                     \"filter_by\":[\n                        \"active\"\n                     ]\n                  },\n                  \"display_type\":\"area\"\n               }\n            ],\n            \"yaxis\":{\n               \"scale\":\"log\",\n               \"include_zero\":false,\n               \"max\":\"100\"\n            },\n            \"events\":[\n               {\n                  \"q\":\"sources:test tags:1\"\n               },\n               {\n                  \"q\":\"sources:test tags:2\"\n               }\n            ],\n            \"markers\":[\n               {\n                  \"label\":\" z=6 \",\n                  \"value\":\"y = 4\",\n                  \"display_type\":\"error dashed\"\n               },\n               {\n                  \"label\":\" x=8 \",\n                  \"value\":\"10 \u003c y \u003c 999\",\n                  \"display_type\":\"ok solid\"\n               }\n            ]\n         }\n      },\n      {\n         \"id\":7307171374656551,\n         \"definition\":{\n            \"title\":\"Widget Title\",\n            \"type\":\"toplist\",\n            \"requests\":[\n               {\n                  \"q\":\"avg:system.cpu.user{app:general} by {env}\",\n                  \"conditional_formats\":[\n                     {\n                        \"hide_value\":false,\n                        \"comparator\":\"\u003c\",\n                        \"palette\":\"white_on_green\",\n                        \"value\":2\n                     },\n                     {\n                        \"hide_value\":false,\n                        \"comparator\":\"\u003e\",\n                        \"palette\":\"white_on_red\",\n                        \"value\":2.2\n                     }\n                  ]\n               }\n            ]\n         }\n      },\n      {\n         \"id\":7086674838553258,\n         \"definition\":{\n            \"title\":\"Group Widget\",\n            \"type\":\"group\",\n            \"layout_type\":\"ordered\",\n            \"widgets\":[\n               {\n                  \"id\":3726092277657502,\n                  \"definition\":{\n                     \"type\":\"note\",\n                     \"content\":\"cluster note widget\",\n                     \"background_color\":\"pink\",\n                     \"font_size\":\"14\",\n                     \"text_align\":\"center\",\n                     \"show_tick\":true,\n                     \"tick_pos\":\"50%\",\n                     \"tick_edge\":\"left\"\n                  }\n               },\n               {\n                  \"id\":6376384650558057,\n                  \"definition\":{\n                     \"title\":\"Alert Graph\",\n                     \"type\":\"alert_graph\",\n                     \"alert_id\":\"123\",\n                     \"viz_type\":\"toplist\"\n                  }\n               }\n            ]\n         }\n      },\n      {\n         \"id\":4668903563678912,\n         \"definition\":{\n            \"title\":\"Widget Title\",\n            \"type\":\"slo\",\n            \"view_type\":\"detail\",\n            \"time_windows\":[\n               \"7d\",\n               \"previous_week\"\n            ],\n            \"slo_id\":\"56789\",\n            \"show_error_budget\":true,\n            \"view_mode\":\"overall\",\n            \"global_time_target\":\"0\"\n         }\n      }\n   ],\n   \"template_variables\":[\n      {\n         \"name\":\"var_1\",\n         \"default\":\"aws\",\n         \"prefix\":\"host\"\n      },\n      {\n         \"name\":\"var_2\",\n         \"default\":\"autoscaling\",\n         \"prefix\":\"service_name\"\n      }\n   ],\n   \"layout_type\":\"ordered\",\n   \"is_read_only\":true,\n   \"notify_list\":[\n\n   ],\n   \"template_variable_presets\":[\n      {\n         \"name\":\"preset_1\",\n         \"template_variables\":[\n            {\n               \"name\":\"var_1\",\n               \"value\":\"host.dc\"\n            },\n            {\n               \"name\":\"var_2\",\n               \"value\":\"my_service\"\n            }\n         ]\n      }\n   ]\n}\n\"\"\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Datadog = Pulumi.Datadog;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    // Example Dashboard JSON\n    var dashboardJson = new Datadog.DashboardJson(\"dashboard_json\", new()\n    {\n        Dashboard = @\"{\n   \"\"title\"\":\"\"Ordered Layout Dashboard\"\",\n   \"\"description\"\":\"\"Created using the Datadog provider in Pulumi\"\",\n   \"\"widgets\"\":[\n      {\n         \"\"id\"\":719369537777170,\n         \"\"definition\"\":{\n            \"\"title\"\":\"\"Widget Title\"\",\n            \"\"type\"\":\"\"alert_graph\"\",\n            \"\"alert_id\"\":\"\"895605\"\",\n            \"\"viz_type\"\":\"\"timeseries\"\"\n         }\n      },\n      {\n         \"\"id\"\":2306240030393868,\n         \"\"definition\"\":{\n            \"\"title\"\":\"\"Widget Title\"\",\n            \"\"type\"\":\"\"alert_value\"\",\n            \"\"alert_id\"\":\"\"895605\"\",\n            \"\"unit\"\":\"\"b\"\",\n            \"\"text_align\"\":\"\"center\"\",\n            \"\"precision\"\":3\n         }\n      },\n      {\n         \"\"id\"\":6990998850881326,\n         \"\"definition\"\":{\n            \"\"title\"\":\"\"Widget Title\"\",\n            \"\"type\"\":\"\"alert_value\"\",\n            \"\"alert_id\"\":\"\"895605\"\",\n            \"\"unit\"\":\"\"b\"\",\n            \"\"text_align\"\":\"\"center\"\",\n            \"\"precision\"\":3\n         }\n      },\n      {\n         \"\"id\"\":3351284044659007,\n         \"\"definition\"\":{\n            \"\"title\"\":\"\"Widget Title\"\",\n            \"\"type\"\":\"\"change\"\",\n            \"\"requests\"\":[\n               {\n                  \"\"q\"\":\"\"avg:system.load.1{env:staging} by {account}\"\",\n                  \"\"compare_to\"\":\"\"week_before\"\",\n                  \"\"change_type\"\":\"\"absolute\"\",\n                  \"\"order_dir\"\":\"\"desc\"\",\n                  \"\"increase_good\"\":true,\n                  \"\"order_by\"\":\"\"name\"\",\n                  \"\"show_present\"\":true\n               }\n            ]\n         }\n      },\n      {\n         \"\"id\"\":6450290622996182,\n         \"\"definition\"\":{\n            \"\"title\"\":\"\"Widget Title\"\",\n            \"\"show_legend\"\":false,\n            \"\"type\"\":\"\"distribution\"\",\n            \"\"requests\"\":[\n               {\n                  \"\"q\"\":\"\"avg:system.load.1{env:staging} by {account}\"\",\n                  \"\"style\"\":{\n                     \"\"palette\"\":\"\"warm\"\"\n                  }\n               }\n            ]\n         }\n      },\n      {\n         \"\"id\"\":4902842646291536,\n         \"\"definition\"\":{\n            \"\"title\"\":\"\"Widget Title\"\",\n            \"\"type\"\":\"\"check_status\"\",\n            \"\"check\"\":\"\"aws.ecs.agent_connected\"\",\n            \"\"grouping\"\":\"\"cluster\"\",\n            \"\"group_by\"\":[\n               \"\"account\"\",\n               \"\"cluster\"\"\n            ],\n            \"\"tags\"\":[\n               \"\"account:demo\"\",\n               \"\"cluster:awseb-ruthebdog-env-8-dn3m6u3gvk\"\"\n            ]\n         }\n      },\n      {\n         \"\"id\"\":6392349954822644,\n         \"\"definition\"\":{\n            \"\"title\"\":\"\"Widget Title\"\",\n            \"\"show_legend\"\":false,\n            \"\"type\"\":\"\"heatmap\"\",\n            \"\"yaxis\"\":{\n               \"\"scale\"\":\"\"sqrt\"\",\n               \"\"include_zero\"\":true,\n               \"\"min\"\":\"\"1\"\",\n               \"\"max\"\":\"\"2\"\"\n            },\n            \"\"requests\"\":[\n               {\n                  \"\"q\"\":\"\"avg:system.load.1{env:staging} by {account}\"\",\n                  \"\"style\"\":{\n                     \"\"palette\"\":\"\"warm\"\"\n                  }\n               }\n            ]\n         }\n      },\n      {\n         \"\"id\"\":5222961478940988,\n         \"\"definition\"\":{\n            \"\"title\"\":\"\"Widget Title\"\",\n            \"\"type\"\":\"\"hostmap\"\",\n            \"\"requests\"\":{\n               \"\"fill\"\":{\n                  \"\"q\"\":\"\"avg:system.load.1{*} by {host}\"\"\n               },\n               \"\"size\"\":{\n                  \"\"q\"\":\"\"avg:memcache.uptime{*} by {host}\"\"\n               }\n            },\n            \"\"node_type\"\":\"\"container\"\",\n            \"\"no_metric_hosts\"\":true,\n            \"\"no_group_hosts\"\":true,\n            \"\"group\"\":[\n               \"\"host\"\",\n               \"\"region\"\"\n            ],\n            \"\"scope\"\":[\n               \"\"region:us-east-1\"\",\n               \"\"aws_account:727006795293\"\"\n            ],\n            \"\"style\"\":{\n               \"\"palette\"\":\"\"yellow_to_green\"\",\n               \"\"palette_flip\"\":true,\n               \"\"fill_min\"\":\"\"10\"\",\n               \"\"fill_max\"\":\"\"20\"\"\n            }\n         }\n      },\n      {\n         \"\"id\"\":8121199734227072,\n         \"\"definition\"\":{\n            \"\"type\"\":\"\"note\"\",\n            \"\"content\"\":\"\"note text\"\",\n            \"\"background_color\"\":\"\"pink\"\",\n            \"\"font_size\"\":\"\"14\"\",\n            \"\"text_align\"\":\"\"center\"\",\n            \"\"show_tick\"\":true,\n            \"\"tick_pos\"\":\"\"50%\"\",\n            \"\"tick_edge\"\":\"\"left\"\"\n         }\n      },\n      {\n         \"\"id\"\":1775856835833038,\n         \"\"definition\"\":{\n            \"\"title\"\":\"\"Widget Title\"\",\n            \"\"type\"\":\"\"query_value\"\",\n            \"\"requests\"\":[\n               {\n                  \"\"q\"\":\"\"avg:system.load.1{env:staging} by {account}\"\",\n                  \"\"aggregator\"\":\"\"sum\"\",\n                  \"\"conditional_formats\"\":[\n                     {\n                        \"\"hide_value\"\":false,\n                        \"\"comparator\"\":\"\"\u003c\"\",\n                        \"\"palette\"\":\"\"white_on_green\"\",\n                        \"\"value\"\":2\n                     },\n                     {\n                        \"\"hide_value\"\":false,\n                        \"\"comparator\"\":\"\"\u003e\"\",\n                        \"\"palette\"\":\"\"white_on_red\"\",\n                        \"\"value\"\":2.2\n                     }\n                  ]\n               }\n            ],\n            \"\"autoscale\"\":true,\n            \"\"custom_unit\"\":\"\"xx\"\",\n            \"\"text_align\"\":\"\"right\"\",\n            \"\"precision\"\":4\n         }\n      },\n      {\n         \"\"id\"\":8461455966625581,\n         \"\"definition\"\":{\n            \"\"title\"\":\"\"Widget Title\"\",\n            \"\"type\"\":\"\"query_table\"\",\n            \"\"requests\"\":[\n               {\n                  \"\"q\"\":\"\"avg:system.load.1{env:staging} by {account}\"\",\n                  \"\"aggregator\"\":\"\"sum\"\",\n                  \"\"conditional_formats\"\":[\n                     {\n                        \"\"hide_value\"\":false,\n                        \"\"comparator\"\":\"\"\u003c\"\",\n                        \"\"palette\"\":\"\"white_on_green\"\",\n                        \"\"value\"\":2\n                     },\n                     {\n                        \"\"hide_value\"\":false,\n                        \"\"comparator\"\":\"\"\u003e\"\",\n                        \"\"palette\"\":\"\"white_on_red\"\",\n                        \"\"value\"\":2.2\n                     }\n                  ],\n                  \"\"limit\"\":10\n               }\n            ]\n         }\n      },\n      {\n         \"\"id\"\":8660006349418736,\n         \"\"definition\"\":{\n            \"\"title\"\":\"\"Widget Title\"\",\n            \"\"type\"\":\"\"scatterplot\"\",\n            \"\"requests\"\":{\n               \"\"x\"\":{\n                  \"\"q\"\":\"\"avg:system.cpu.user{*} by {service, account}\"\",\n                  \"\"aggregator\"\":\"\"max\"\"\n               },\n               \"\"y\"\":{\n                  \"\"q\"\":\"\"avg:system.mem.used{*} by {service, account}\"\",\n                  \"\"aggregator\"\":\"\"min\"\"\n               }\n            },\n            \"\"xaxis\"\":{\n               \"\"scale\"\":\"\"pow\"\",\n               \"\"label\"\":\"\"x\"\",\n               \"\"include_zero\"\":true,\n               \"\"min\"\":\"\"1\"\",\n               \"\"max\"\":\"\"2000\"\"\n            },\n            \"\"yaxis\"\":{\n               \"\"scale\"\":\"\"log\"\",\n               \"\"label\"\":\"\"y\"\",\n               \"\"include_zero\"\":false,\n               \"\"min\"\":\"\"5\"\",\n               \"\"max\"\":\"\"2222\"\"\n            },\n            \"\"color_by_groups\"\":[\n               \"\"account\"\",\n               \"\"apm-role-group\"\"\n            ]\n         }\n      },\n      {\n         \"\"id\"\":1669590772917638,\n         \"\"definition\"\":{\n            \"\"title\"\":\"\"env: prod, datacenter:dc1, service: master-db\"\",\n            \"\"title_size\"\":\"\"16\"\",\n            \"\"title_align\"\":\"\"left\"\",\n            \"\"type\"\":\"\"servicemap\"\",\n            \"\"service\"\":\"\"master-db\"\",\n            \"\"filters\"\":[\n               \"\"env:prod\"\",\n               \"\"datacenter:dc1\"\"\n            ]\n         }\n      },\n      {\n         \"\"id\"\":2138829058361817,\n         \"\"definition\"\":{\n            \"\"title\"\":\"\"Widget Title\"\",\n            \"\"show_legend\"\":true,\n            \"\"legend_size\"\":\"\"2\"\",\n            \"\"type\"\":\"\"timeseries\"\",\n            \"\"requests\"\":[\n               {\n                  \"\"q\"\":\"\"avg:system.cpu.user{app:general} by {env}\"\",\n                  \"\"on_right_yaxis\"\":false,\n                  \"\"metadata\"\":[\n                     {\n                        \"\"expression\"\":\"\"avg:system.cpu.user{app:general} by {env}\"\",\n                        \"\"alias_name\"\":\"\"Alpha\"\"\n                     }\n                  ],\n                  \"\"style\"\":{\n                     \"\"palette\"\":\"\"warm\"\",\n                     \"\"line_type\"\":\"\"dashed\"\",\n                     \"\"line_width\"\":\"\"thin\"\"\n                  },\n                  \"\"display_type\"\":\"\"line\"\"\n               },\n               {\n                  \"\"on_right_yaxis\"\":false,\n                  \"\"log_query\"\":{\n                     \"\"index\"\":\"\"mcnulty\"\",\n                     \"\"search\"\":{\n                        \"\"query\"\":\"\"status:info\"\"\n                     },\n                     \"\"group_by\"\":[\n                        {\n                           \"\"facet\"\":\"\"host\"\",\n                           \"\"sort\"\":{\n                              \"\"facet\"\":\"\"@duration\"\",\n                              \"\"aggregation\"\":\"\"avg\"\",\n                              \"\"order\"\":\"\"desc\"\"\n                           },\n                           \"\"limit\"\":10\n                        }\n                     ],\n                     \"\"compute\"\":{\n                        \"\"facet\"\":\"\"@duration\"\",\n                        \"\"interval\"\":5000,\n                        \"\"aggregation\"\":\"\"avg\"\"\n                     }\n                  },\n                  \"\"display_type\"\":\"\"area\"\"\n               },\n               {\n                  \"\"on_right_yaxis\"\":false,\n                  \"\"apm_query\"\":{\n                     \"\"index\"\":\"\"apm-search\"\",\n                     \"\"search\"\":{\n                        \"\"query\"\":\"\"type:web\"\"\n                     },\n                     \"\"group_by\"\":[\n                        {\n                           \"\"facet\"\":\"\"resource_name\"\",\n                           \"\"sort\"\":{\n                              \"\"facet\"\":\"\"@string_query.interval\"\",\n                              \"\"aggregation\"\":\"\"avg\"\",\n                              \"\"order\"\":\"\"desc\"\"\n                           },\n                           \"\"limit\"\":50\n                        }\n                     ],\n                     \"\"compute\"\":{\n                        \"\"facet\"\":\"\"@duration\"\",\n                        \"\"interval\"\":5000,\n                        \"\"aggregation\"\":\"\"avg\"\"\n                     }\n                  },\n                  \"\"display_type\"\":\"\"bars\"\"\n               },\n               {\n                  \"\"on_right_yaxis\"\":false,\n                  \"\"process_query\"\":{\n                     \"\"search_by\"\":\"\"error\"\",\n                     \"\"metric\"\":\"\"process.stat.cpu.total_pct\"\",\n                     \"\"limit\"\":50,\n                     \"\"filter_by\"\":[\n                        \"\"active\"\"\n                     ]\n                  },\n                  \"\"display_type\"\":\"\"area\"\"\n               }\n            ],\n            \"\"yaxis\"\":{\n               \"\"scale\"\":\"\"log\"\",\n               \"\"include_zero\"\":false,\n               \"\"max\"\":\"\"100\"\"\n            },\n            \"\"events\"\":[\n               {\n                  \"\"q\"\":\"\"sources:test tags:1\"\"\n               },\n               {\n                  \"\"q\"\":\"\"sources:test tags:2\"\"\n               }\n            ],\n            \"\"markers\"\":[\n               {\n                  \"\"label\"\":\"\" z=6 \"\",\n                  \"\"value\"\":\"\"y = 4\"\",\n                  \"\"display_type\"\":\"\"error dashed\"\"\n               },\n               {\n                  \"\"label\"\":\"\" x=8 \"\",\n                  \"\"value\"\":\"\"10 \u003c y \u003c 999\"\",\n                  \"\"display_type\"\":\"\"ok solid\"\"\n               }\n            ]\n         }\n      },\n      {\n         \"\"id\"\":7307171374656551,\n         \"\"definition\"\":{\n            \"\"title\"\":\"\"Widget Title\"\",\n            \"\"type\"\":\"\"toplist\"\",\n            \"\"requests\"\":[\n               {\n                  \"\"q\"\":\"\"avg:system.cpu.user{app:general} by {env}\"\",\n                  \"\"conditional_formats\"\":[\n                     {\n                        \"\"hide_value\"\":false,\n                        \"\"comparator\"\":\"\"\u003c\"\",\n                        \"\"palette\"\":\"\"white_on_green\"\",\n                        \"\"value\"\":2\n                     },\n                     {\n                        \"\"hide_value\"\":false,\n                        \"\"comparator\"\":\"\"\u003e\"\",\n                        \"\"palette\"\":\"\"white_on_red\"\",\n                        \"\"value\"\":2.2\n                     }\n                  ]\n               }\n            ]\n         }\n      },\n      {\n         \"\"id\"\":7086674838553258,\n         \"\"definition\"\":{\n            \"\"title\"\":\"\"Group Widget\"\",\n            \"\"type\"\":\"\"group\"\",\n            \"\"layout_type\"\":\"\"ordered\"\",\n            \"\"widgets\"\":[\n               {\n                  \"\"id\"\":3726092277657502,\n                  \"\"definition\"\":{\n                     \"\"type\"\":\"\"note\"\",\n                     \"\"content\"\":\"\"cluster note widget\"\",\n                     \"\"background_color\"\":\"\"pink\"\",\n                     \"\"font_size\"\":\"\"14\"\",\n                     \"\"text_align\"\":\"\"center\"\",\n                     \"\"show_tick\"\":true,\n                     \"\"tick_pos\"\":\"\"50%\"\",\n                     \"\"tick_edge\"\":\"\"left\"\"\n                  }\n               },\n               {\n                  \"\"id\"\":6376384650558057,\n                  \"\"definition\"\":{\n                     \"\"title\"\":\"\"Alert Graph\"\",\n                     \"\"type\"\":\"\"alert_graph\"\",\n                     \"\"alert_id\"\":\"\"123\"\",\n                     \"\"viz_type\"\":\"\"toplist\"\"\n                  }\n               }\n            ]\n         }\n      },\n      {\n         \"\"id\"\":4668903563678912,\n         \"\"definition\"\":{\n            \"\"title\"\":\"\"Widget Title\"\",\n            \"\"type\"\":\"\"slo\"\",\n            \"\"view_type\"\":\"\"detail\"\",\n            \"\"time_windows\"\":[\n               \"\"7d\"\",\n               \"\"previous_week\"\"\n            ],\n            \"\"slo_id\"\":\"\"56789\"\",\n            \"\"show_error_budget\"\":true,\n            \"\"view_mode\"\":\"\"overall\"\",\n            \"\"global_time_target\"\":\"\"0\"\"\n         }\n      }\n   ],\n   \"\"template_variables\"\":[\n      {\n         \"\"name\"\":\"\"var_1\"\",\n         \"\"default\"\":\"\"aws\"\",\n         \"\"prefix\"\":\"\"host\"\"\n      },\n      {\n         \"\"name\"\":\"\"var_2\"\",\n         \"\"default\"\":\"\"autoscaling\"\",\n         \"\"prefix\"\":\"\"service_name\"\"\n      }\n   ],\n   \"\"layout_type\"\":\"\"ordered\"\",\n   \"\"is_read_only\"\":true,\n   \"\"notify_list\"\":[\n\n   ],\n   \"\"template_variable_presets\"\":[\n      {\n         \"\"name\"\":\"\"preset_1\"\",\n         \"\"template_variables\"\":[\n            {\n               \"\"name\"\":\"\"var_1\"\",\n               \"\"value\"\":\"\"host.dc\"\"\n            },\n            {\n               \"\"name\"\":\"\"var_2\"\",\n               \"\"value\"\":\"\"my_service\"\"\n            }\n         ]\n      }\n   ]\n}\n\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-datadog/sdk/v4/go/datadog\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t// Example Dashboard JSON\n\t\t_, err := datadog.NewDashboardJson(ctx, \"dashboard_json\", \u0026datadog.DashboardJsonArgs{\n\t\t\tDashboard: pulumi.String(`{\n   \"title\":\"Ordered Layout Dashboard\",\n   \"description\":\"Created using the Datadog provider in Pulumi\",\n   \"widgets\":[\n      {\n         \"id\":719369537777170,\n         \"definition\":{\n            \"title\":\"Widget Title\",\n            \"type\":\"alert_graph\",\n            \"alert_id\":\"895605\",\n            \"viz_type\":\"timeseries\"\n         }\n      },\n      {\n         \"id\":2306240030393868,\n         \"definition\":{\n            \"title\":\"Widget Title\",\n            \"type\":\"alert_value\",\n            \"alert_id\":\"895605\",\n            \"unit\":\"b\",\n            \"text_align\":\"center\",\n            \"precision\":3\n         }\n      },\n      {\n         \"id\":6990998850881326,\n         \"definition\":{\n            \"title\":\"Widget Title\",\n            \"type\":\"alert_value\",\n            \"alert_id\":\"895605\",\n            \"unit\":\"b\",\n            \"text_align\":\"center\",\n            \"precision\":3\n         }\n      },\n      {\n         \"id\":3351284044659007,\n         \"definition\":{\n            \"title\":\"Widget Title\",\n            \"type\":\"change\",\n            \"requests\":[\n               {\n                  \"q\":\"avg:system.load.1{env:staging} by {account}\",\n                  \"compare_to\":\"week_before\",\n                  \"change_type\":\"absolute\",\n                  \"order_dir\":\"desc\",\n                  \"increase_good\":true,\n                  \"order_by\":\"name\",\n                  \"show_present\":true\n               }\n            ]\n         }\n      },\n      {\n         \"id\":6450290622996182,\n         \"definition\":{\n            \"title\":\"Widget Title\",\n            \"show_legend\":false,\n            \"type\":\"distribution\",\n            \"requests\":[\n               {\n                  \"q\":\"avg:system.load.1{env:staging} by {account}\",\n                  \"style\":{\n                     \"palette\":\"warm\"\n                  }\n               }\n            ]\n         }\n      },\n      {\n         \"id\":4902842646291536,\n         \"definition\":{\n            \"title\":\"Widget Title\",\n            \"type\":\"check_status\",\n            \"check\":\"aws.ecs.agent_connected\",\n            \"grouping\":\"cluster\",\n            \"group_by\":[\n               \"account\",\n               \"cluster\"\n            ],\n            \"tags\":[\n               \"account:demo\",\n               \"cluster:awseb-ruthebdog-env-8-dn3m6u3gvk\"\n            ]\n         }\n      },\n      {\n         \"id\":6392349954822644,\n         \"definition\":{\n            \"title\":\"Widget Title\",\n            \"show_legend\":false,\n            \"type\":\"heatmap\",\n            \"yaxis\":{\n               \"scale\":\"sqrt\",\n               \"include_zero\":true,\n               \"min\":\"1\",\n               \"max\":\"2\"\n            },\n            \"requests\":[\n               {\n                  \"q\":\"avg:system.load.1{env:staging} by {account}\",\n                  \"style\":{\n                     \"palette\":\"warm\"\n                  }\n               }\n            ]\n         }\n      },\n      {\n         \"id\":5222961478940988,\n         \"definition\":{\n            \"title\":\"Widget Title\",\n            \"type\":\"hostmap\",\n            \"requests\":{\n               \"fill\":{\n                  \"q\":\"avg:system.load.1{*} by {host}\"\n               },\n               \"size\":{\n                  \"q\":\"avg:memcache.uptime{*} by {host}\"\n               }\n            },\n            \"node_type\":\"container\",\n            \"no_metric_hosts\":true,\n            \"no_group_hosts\":true,\n            \"group\":[\n               \"host\",\n               \"region\"\n            ],\n            \"scope\":[\n               \"region:us-east-1\",\n               \"aws_account:727006795293\"\n            ],\n            \"style\":{\n               \"palette\":\"yellow_to_green\",\n               \"palette_flip\":true,\n               \"fill_min\":\"10\",\n               \"fill_max\":\"20\"\n            }\n         }\n      },\n      {\n         \"id\":8121199734227072,\n         \"definition\":{\n            \"type\":\"note\",\n            \"content\":\"note text\",\n            \"background_color\":\"pink\",\n            \"font_size\":\"14\",\n            \"text_align\":\"center\",\n            \"show_tick\":true,\n            \"tick_pos\":\"50%\",\n            \"tick_edge\":\"left\"\n         }\n      },\n      {\n         \"id\":1775856835833038,\n         \"definition\":{\n            \"title\":\"Widget Title\",\n            \"type\":\"query_value\",\n            \"requests\":[\n               {\n                  \"q\":\"avg:system.load.1{env:staging} by {account}\",\n                  \"aggregator\":\"sum\",\n                  \"conditional_formats\":[\n                     {\n                        \"hide_value\":false,\n                        \"comparator\":\"\u003c\",\n                        \"palette\":\"white_on_green\",\n                        \"value\":2\n                     },\n                     {\n                        \"hide_value\":false,\n                        \"comparator\":\"\u003e\",\n                        \"palette\":\"white_on_red\",\n                        \"value\":2.2\n                     }\n                  ]\n               }\n            ],\n            \"autoscale\":true,\n            \"custom_unit\":\"xx\",\n            \"text_align\":\"right\",\n            \"precision\":4\n         }\n      },\n      {\n         \"id\":8461455966625581,\n         \"definition\":{\n            \"title\":\"Widget Title\",\n            \"type\":\"query_table\",\n            \"requests\":[\n               {\n                  \"q\":\"avg:system.load.1{env:staging} by {account}\",\n                  \"aggregator\":\"sum\",\n                  \"conditional_formats\":[\n                     {\n                        \"hide_value\":false,\n                        \"comparator\":\"\u003c\",\n                        \"palette\":\"white_on_green\",\n                        \"value\":2\n                     },\n                     {\n                        \"hide_value\":false,\n                        \"comparator\":\"\u003e\",\n                        \"palette\":\"white_on_red\",\n                        \"value\":2.2\n                     }\n                  ],\n                  \"limit\":10\n               }\n            ]\n         }\n      },\n      {\n         \"id\":8660006349418736,\n         \"definition\":{\n            \"title\":\"Widget Title\",\n            \"type\":\"scatterplot\",\n            \"requests\":{\n               \"x\":{\n                  \"q\":\"avg:system.cpu.user{*} by {service, account}\",\n                  \"aggregator\":\"max\"\n               },\n               \"y\":{\n                  \"q\":\"avg:system.mem.used{*} by {service, account}\",\n                  \"aggregator\":\"min\"\n               }\n            },\n            \"xaxis\":{\n               \"scale\":\"pow\",\n               \"label\":\"x\",\n               \"include_zero\":true,\n               \"min\":\"1\",\n               \"max\":\"2000\"\n            },\n            \"yaxis\":{\n               \"scale\":\"log\",\n               \"label\":\"y\",\n               \"include_zero\":false,\n               \"min\":\"5\",\n               \"max\":\"2222\"\n            },\n            \"color_by_groups\":[\n               \"account\",\n               \"apm-role-group\"\n            ]\n         }\n      },\n      {\n         \"id\":1669590772917638,\n         \"definition\":{\n            \"title\":\"env: prod, datacenter:dc1, service: master-db\",\n            \"title_size\":\"16\",\n            \"title_align\":\"left\",\n            \"type\":\"servicemap\",\n            \"service\":\"master-db\",\n            \"filters\":[\n               \"env:prod\",\n               \"datacenter:dc1\"\n            ]\n         }\n      },\n      {\n         \"id\":2138829058361817,\n         \"definition\":{\n            \"title\":\"Widget Title\",\n            \"show_legend\":true,\n            \"legend_size\":\"2\",\n            \"type\":\"timeseries\",\n            \"requests\":[\n               {\n                  \"q\":\"avg:system.cpu.user{app:general} by {env}\",\n                  \"on_right_yaxis\":false,\n                  \"metadata\":[\n                     {\n                        \"expression\":\"avg:system.cpu.user{app:general} by {env}\",\n                        \"alias_name\":\"Alpha\"\n                     }\n                  ],\n                  \"style\":{\n                     \"palette\":\"warm\",\n                     \"line_type\":\"dashed\",\n                     \"line_width\":\"thin\"\n                  },\n                  \"display_type\":\"line\"\n               },\n               {\n                  \"on_right_yaxis\":false,\n                  \"log_query\":{\n                     \"index\":\"mcnulty\",\n                     \"search\":{\n                        \"query\":\"status:info\"\n                     },\n                     \"group_by\":[\n                        {\n                           \"facet\":\"host\",\n                           \"sort\":{\n                              \"facet\":\"@duration\",\n                              \"aggregation\":\"avg\",\n                              \"order\":\"desc\"\n                           },\n                           \"limit\":10\n                        }\n                     ],\n                     \"compute\":{\n                        \"facet\":\"@duration\",\n                        \"interval\":5000,\n                        \"aggregation\":\"avg\"\n                     }\n                  },\n                  \"display_type\":\"area\"\n               },\n               {\n                  \"on_right_yaxis\":false,\n                  \"apm_query\":{\n                     \"index\":\"apm-search\",\n                     \"search\":{\n                        \"query\":\"type:web\"\n                     },\n                     \"group_by\":[\n                        {\n                           \"facet\":\"resource_name\",\n                           \"sort\":{\n                              \"facet\":\"@string_query.interval\",\n                              \"aggregation\":\"avg\",\n                              \"order\":\"desc\"\n                           },\n                           \"limit\":50\n                        }\n                     ],\n                     \"compute\":{\n                        \"facet\":\"@duration\",\n                        \"interval\":5000,\n                        \"aggregation\":\"avg\"\n                     }\n                  },\n                  \"display_type\":\"bars\"\n               },\n               {\n                  \"on_right_yaxis\":false,\n                  \"process_query\":{\n                     \"search_by\":\"error\",\n                     \"metric\":\"process.stat.cpu.total_pct\",\n                     \"limit\":50,\n                     \"filter_by\":[\n                        \"active\"\n                     ]\n                  },\n                  \"display_type\":\"area\"\n               }\n            ],\n            \"yaxis\":{\n               \"scale\":\"log\",\n               \"include_zero\":false,\n               \"max\":\"100\"\n            },\n            \"events\":[\n               {\n                  \"q\":\"sources:test tags:1\"\n               },\n               {\n                  \"q\":\"sources:test tags:2\"\n               }\n            ],\n            \"markers\":[\n               {\n                  \"label\":\" z=6 \",\n                  \"value\":\"y = 4\",\n                  \"display_type\":\"error dashed\"\n               },\n               {\n                  \"label\":\" x=8 \",\n                  \"value\":\"10 \u003c y \u003c 999\",\n                  \"display_type\":\"ok solid\"\n               }\n            ]\n         }\n      },\n      {\n         \"id\":7307171374656551,\n         \"definition\":{\n            \"title\":\"Widget Title\",\n            \"type\":\"toplist\",\n            \"requests\":[\n               {\n                  \"q\":\"avg:system.cpu.user{app:general} by {env}\",\n                  \"conditional_formats\":[\n                     {\n                        \"hide_value\":false,\n                        \"comparator\":\"\u003c\",\n                        \"palette\":\"white_on_green\",\n                        \"value\":2\n                     },\n                     {\n                        \"hide_value\":false,\n                        \"comparator\":\"\u003e\",\n                        \"palette\":\"white_on_red\",\n                        \"value\":2.2\n                     }\n                  ]\n               }\n            ]\n         }\n      },\n      {\n         \"id\":7086674838553258,\n         \"definition\":{\n            \"title\":\"Group Widget\",\n            \"type\":\"group\",\n            \"layout_type\":\"ordered\",\n            \"widgets\":[\n               {\n                  \"id\":3726092277657502,\n                  \"definition\":{\n                     \"type\":\"note\",\n                     \"content\":\"cluster note widget\",\n                     \"background_color\":\"pink\",\n                     \"font_size\":\"14\",\n                     \"text_align\":\"center\",\n                     \"show_tick\":true,\n                     \"tick_pos\":\"50%\",\n                     \"tick_edge\":\"left\"\n                  }\n               },\n               {\n                  \"id\":6376384650558057,\n                  \"definition\":{\n                     \"title\":\"Alert Graph\",\n                     \"type\":\"alert_graph\",\n                     \"alert_id\":\"123\",\n                     \"viz_type\":\"toplist\"\n                  }\n               }\n            ]\n         }\n      },\n      {\n         \"id\":4668903563678912,\n         \"definition\":{\n            \"title\":\"Widget Title\",\n            \"type\":\"slo\",\n            \"view_type\":\"detail\",\n            \"time_windows\":[\n               \"7d\",\n               \"previous_week\"\n            ],\n            \"slo_id\":\"56789\",\n            \"show_error_budget\":true,\n            \"view_mode\":\"overall\",\n            \"global_time_target\":\"0\"\n         }\n      }\n   ],\n   \"template_variables\":[\n      {\n         \"name\":\"var_1\",\n         \"default\":\"aws\",\n         \"prefix\":\"host\"\n      },\n      {\n         \"name\":\"var_2\",\n         \"default\":\"autoscaling\",\n         \"prefix\":\"service_name\"\n      }\n   ],\n   \"layout_type\":\"ordered\",\n   \"is_read_only\":true,\n   \"notify_list\":[\n\n   ],\n   \"template_variable_presets\":[\n      {\n         \"name\":\"preset_1\",\n         \"template_variables\":[\n            {\n               \"name\":\"var_1\",\n               \"value\":\"host.dc\"\n            },\n            {\n               \"name\":\"var_2\",\n               \"value\":\"my_service\"\n            }\n         ]\n      }\n   ]\n}\n`),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.datadog.DashboardJson;\nimport com.pulumi.datadog.DashboardJsonArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        // Example Dashboard JSON\n        var dashboardJson = new DashboardJson(\"dashboardJson\", DashboardJsonArgs.builder()\n            .dashboard(\"\"\"\n{\n   \"title\":\"Ordered Layout Dashboard\",\n   \"description\":\"Created using the Datadog provider in Pulumi\",\n   \"widgets\":[\n      {\n         \"id\":719369537777170,\n         \"definition\":{\n            \"title\":\"Widget Title\",\n            \"type\":\"alert_graph\",\n            \"alert_id\":\"895605\",\n            \"viz_type\":\"timeseries\"\n         }\n      },\n      {\n         \"id\":2306240030393868,\n         \"definition\":{\n            \"title\":\"Widget Title\",\n            \"type\":\"alert_value\",\n            \"alert_id\":\"895605\",\n            \"unit\":\"b\",\n            \"text_align\":\"center\",\n            \"precision\":3\n         }\n      },\n      {\n         \"id\":6990998850881326,\n         \"definition\":{\n            \"title\":\"Widget Title\",\n            \"type\":\"alert_value\",\n            \"alert_id\":\"895605\",\n            \"unit\":\"b\",\n            \"text_align\":\"center\",\n            \"precision\":3\n         }\n      },\n      {\n         \"id\":3351284044659007,\n         \"definition\":{\n            \"title\":\"Widget Title\",\n            \"type\":\"change\",\n            \"requests\":[\n               {\n                  \"q\":\"avg:system.load.1{env:staging} by {account}\",\n                  \"compare_to\":\"week_before\",\n                  \"change_type\":\"absolute\",\n                  \"order_dir\":\"desc\",\n                  \"increase_good\":true,\n                  \"order_by\":\"name\",\n                  \"show_present\":true\n               }\n            ]\n         }\n      },\n      {\n         \"id\":6450290622996182,\n         \"definition\":{\n            \"title\":\"Widget Title\",\n            \"show_legend\":false,\n            \"type\":\"distribution\",\n            \"requests\":[\n               {\n                  \"q\":\"avg:system.load.1{env:staging} by {account}\",\n                  \"style\":{\n                     \"palette\":\"warm\"\n                  }\n               }\n            ]\n         }\n      },\n      {\n         \"id\":4902842646291536,\n         \"definition\":{\n            \"title\":\"Widget Title\",\n            \"type\":\"check_status\",\n            \"check\":\"aws.ecs.agent_connected\",\n            \"grouping\":\"cluster\",\n            \"group_by\":[\n               \"account\",\n               \"cluster\"\n            ],\n            \"tags\":[\n               \"account:demo\",\n               \"cluster:awseb-ruthebdog-env-8-dn3m6u3gvk\"\n            ]\n         }\n      },\n      {\n         \"id\":6392349954822644,\n         \"definition\":{\n            \"title\":\"Widget Title\",\n            \"show_legend\":false,\n            \"type\":\"heatmap\",\n            \"yaxis\":{\n               \"scale\":\"sqrt\",\n               \"include_zero\":true,\n               \"min\":\"1\",\n               \"max\":\"2\"\n            },\n            \"requests\":[\n               {\n                  \"q\":\"avg:system.load.1{env:staging} by {account}\",\n                  \"style\":{\n                     \"palette\":\"warm\"\n                  }\n               }\n            ]\n         }\n      },\n      {\n         \"id\":5222961478940988,\n         \"definition\":{\n            \"title\":\"Widget Title\",\n            \"type\":\"hostmap\",\n            \"requests\":{\n               \"fill\":{\n                  \"q\":\"avg:system.load.1{*} by {host}\"\n               },\n               \"size\":{\n                  \"q\":\"avg:memcache.uptime{*} by {host}\"\n               }\n            },\n            \"node_type\":\"container\",\n            \"no_metric_hosts\":true,\n            \"no_group_hosts\":true,\n            \"group\":[\n               \"host\",\n               \"region\"\n            ],\n            \"scope\":[\n               \"region:us-east-1\",\n               \"aws_account:727006795293\"\n            ],\n            \"style\":{\n               \"palette\":\"yellow_to_green\",\n               \"palette_flip\":true,\n               \"fill_min\":\"10\",\n               \"fill_max\":\"20\"\n            }\n         }\n      },\n      {\n         \"id\":8121199734227072,\n         \"definition\":{\n            \"type\":\"note\",\n            \"content\":\"note text\",\n            \"background_color\":\"pink\",\n            \"font_size\":\"14\",\n            \"text_align\":\"center\",\n            \"show_tick\":true,\n            \"tick_pos\":\"50%\",\n            \"tick_edge\":\"left\"\n         }\n      },\n      {\n         \"id\":1775856835833038,\n         \"definition\":{\n            \"title\":\"Widget Title\",\n            \"type\":\"query_value\",\n            \"requests\":[\n               {\n                  \"q\":\"avg:system.load.1{env:staging} by {account}\",\n                  \"aggregator\":\"sum\",\n                  \"conditional_formats\":[\n                     {\n                        \"hide_value\":false,\n                        \"comparator\":\"\u003c\",\n                        \"palette\":\"white_on_green\",\n                        \"value\":2\n                     },\n                     {\n                        \"hide_value\":false,\n                        \"comparator\":\"\u003e\",\n                        \"palette\":\"white_on_red\",\n                        \"value\":2.2\n                     }\n                  ]\n               }\n            ],\n            \"autoscale\":true,\n            \"custom_unit\":\"xx\",\n            \"text_align\":\"right\",\n            \"precision\":4\n         }\n      },\n      {\n         \"id\":8461455966625581,\n         \"definition\":{\n            \"title\":\"Widget Title\",\n            \"type\":\"query_table\",\n            \"requests\":[\n               {\n                  \"q\":\"avg:system.load.1{env:staging} by {account}\",\n                  \"aggregator\":\"sum\",\n                  \"conditional_formats\":[\n                     {\n                        \"hide_value\":false,\n                        \"comparator\":\"\u003c\",\n                        \"palette\":\"white_on_green\",\n                        \"value\":2\n                     },\n                     {\n                        \"hide_value\":false,\n                        \"comparator\":\"\u003e\",\n                        \"palette\":\"white_on_red\",\n                        \"value\":2.2\n                     }\n                  ],\n                  \"limit\":10\n               }\n            ]\n         }\n      },\n      {\n         \"id\":8660006349418736,\n         \"definition\":{\n            \"title\":\"Widget Title\",\n            \"type\":\"scatterplot\",\n            \"requests\":{\n               \"x\":{\n                  \"q\":\"avg:system.cpu.user{*} by {service, account}\",\n                  \"aggregator\":\"max\"\n               },\n               \"y\":{\n                  \"q\":\"avg:system.mem.used{*} by {service, account}\",\n                  \"aggregator\":\"min\"\n               }\n            },\n            \"xaxis\":{\n               \"scale\":\"pow\",\n               \"label\":\"x\",\n               \"include_zero\":true,\n               \"min\":\"1\",\n               \"max\":\"2000\"\n            },\n            \"yaxis\":{\n               \"scale\":\"log\",\n               \"label\":\"y\",\n               \"include_zero\":false,\n               \"min\":\"5\",\n               \"max\":\"2222\"\n            },\n            \"color_by_groups\":[\n               \"account\",\n               \"apm-role-group\"\n            ]\n         }\n      },\n      {\n         \"id\":1669590772917638,\n         \"definition\":{\n            \"title\":\"env: prod, datacenter:dc1, service: master-db\",\n            \"title_size\":\"16\",\n            \"title_align\":\"left\",\n            \"type\":\"servicemap\",\n            \"service\":\"master-db\",\n            \"filters\":[\n               \"env:prod\",\n               \"datacenter:dc1\"\n            ]\n         }\n      },\n      {\n         \"id\":2138829058361817,\n         \"definition\":{\n            \"title\":\"Widget Title\",\n            \"show_legend\":true,\n            \"legend_size\":\"2\",\n            \"type\":\"timeseries\",\n            \"requests\":[\n               {\n                  \"q\":\"avg:system.cpu.user{app:general} by {env}\",\n                  \"on_right_yaxis\":false,\n                  \"metadata\":[\n                     {\n                        \"expression\":\"avg:system.cpu.user{app:general} by {env}\",\n                        \"alias_name\":\"Alpha\"\n                     }\n                  ],\n                  \"style\":{\n                     \"palette\":\"warm\",\n                     \"line_type\":\"dashed\",\n                     \"line_width\":\"thin\"\n                  },\n                  \"display_type\":\"line\"\n               },\n               {\n                  \"on_right_yaxis\":false,\n                  \"log_query\":{\n                     \"index\":\"mcnulty\",\n                     \"search\":{\n                        \"query\":\"status:info\"\n                     },\n                     \"group_by\":[\n                        {\n                           \"facet\":\"host\",\n                           \"sort\":{\n                              \"facet\":\"@duration\",\n                              \"aggregation\":\"avg\",\n                              \"order\":\"desc\"\n                           },\n                           \"limit\":10\n                        }\n                     ],\n                     \"compute\":{\n                        \"facet\":\"@duration\",\n                        \"interval\":5000,\n                        \"aggregation\":\"avg\"\n                     }\n                  },\n                  \"display_type\":\"area\"\n               },\n               {\n                  \"on_right_yaxis\":false,\n                  \"apm_query\":{\n                     \"index\":\"apm-search\",\n                     \"search\":{\n                        \"query\":\"type:web\"\n                     },\n                     \"group_by\":[\n                        {\n                           \"facet\":\"resource_name\",\n                           \"sort\":{\n                              \"facet\":\"@string_query.interval\",\n                              \"aggregation\":\"avg\",\n                              \"order\":\"desc\"\n                           },\n                           \"limit\":50\n                        }\n                     ],\n                     \"compute\":{\n                        \"facet\":\"@duration\",\n                        \"interval\":5000,\n                        \"aggregation\":\"avg\"\n                     }\n                  },\n                  \"display_type\":\"bars\"\n               },\n               {\n                  \"on_right_yaxis\":false,\n                  \"process_query\":{\n                     \"search_by\":\"error\",\n                     \"metric\":\"process.stat.cpu.total_pct\",\n                     \"limit\":50,\n                     \"filter_by\":[\n                        \"active\"\n                     ]\n                  },\n                  \"display_type\":\"area\"\n               }\n            ],\n            \"yaxis\":{\n               \"scale\":\"log\",\n               \"include_zero\":false,\n               \"max\":\"100\"\n            },\n            \"events\":[\n               {\n                  \"q\":\"sources:test tags:1\"\n               },\n               {\n                  \"q\":\"sources:test tags:2\"\n               }\n            ],\n            \"markers\":[\n               {\n                  \"label\":\" z=6 \",\n                  \"value\":\"y = 4\",\n                  \"display_type\":\"error dashed\"\n               },\n               {\n                  \"label\":\" x=8 \",\n                  \"value\":\"10 \u003c y \u003c 999\",\n                  \"display_type\":\"ok solid\"\n               }\n            ]\n         }\n      },\n      {\n         \"id\":7307171374656551,\n         \"definition\":{\n            \"title\":\"Widget Title\",\n            \"type\":\"toplist\",\n            \"requests\":[\n               {\n                  \"q\":\"avg:system.cpu.user{app:general} by {env}\",\n                  \"conditional_formats\":[\n                     {\n                        \"hide_value\":false,\n                        \"comparator\":\"\u003c\",\n                        \"palette\":\"white_on_green\",\n                        \"value\":2\n                     },\n                     {\n                        \"hide_value\":false,\n                        \"comparator\":\"\u003e\",\n                        \"palette\":\"white_on_red\",\n                        \"value\":2.2\n                     }\n                  ]\n               }\n            ]\n         }\n      },\n      {\n         \"id\":7086674838553258,\n         \"definition\":{\n            \"title\":\"Group Widget\",\n            \"type\":\"group\",\n            \"layout_type\":\"ordered\",\n            \"widgets\":[\n               {\n                  \"id\":3726092277657502,\n                  \"definition\":{\n                     \"type\":\"note\",\n                     \"content\":\"cluster note widget\",\n                     \"background_color\":\"pink\",\n                     \"font_size\":\"14\",\n                     \"text_align\":\"center\",\n                     \"show_tick\":true,\n                     \"tick_pos\":\"50%\",\n                     \"tick_edge\":\"left\"\n                  }\n               },\n               {\n                  \"id\":6376384650558057,\n                  \"definition\":{\n                     \"title\":\"Alert Graph\",\n                     \"type\":\"alert_graph\",\n                     \"alert_id\":\"123\",\n                     \"viz_type\":\"toplist\"\n                  }\n               }\n            ]\n         }\n      },\n      {\n         \"id\":4668903563678912,\n         \"definition\":{\n            \"title\":\"Widget Title\",\n            \"type\":\"slo\",\n            \"view_type\":\"detail\",\n            \"time_windows\":[\n               \"7d\",\n               \"previous_week\"\n            ],\n            \"slo_id\":\"56789\",\n            \"show_error_budget\":true,\n            \"view_mode\":\"overall\",\n            \"global_time_target\":\"0\"\n         }\n      }\n   ],\n   \"template_variables\":[\n      {\n         \"name\":\"var_1\",\n         \"default\":\"aws\",\n         \"prefix\":\"host\"\n      },\n      {\n         \"name\":\"var_2\",\n         \"default\":\"autoscaling\",\n         \"prefix\":\"service_name\"\n      }\n   ],\n   \"layout_type\":\"ordered\",\n   \"is_read_only\":true,\n   \"notify_list\":[\n\n   ],\n   \"template_variable_presets\":[\n      {\n         \"name\":\"preset_1\",\n         \"template_variables\":[\n            {\n               \"name\":\"var_1\",\n               \"value\":\"host.dc\"\n            },\n            {\n               \"name\":\"var_2\",\n               \"value\":\"my_service\"\n            }\n         ]\n      }\n   ]\n}\n            \"\"\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  # Example Dashboard JSON\n  dashboardJson:\n    type: datadog:DashboardJson\n    name: dashboard_json\n    properties:\n      dashboard: |\n        {\n           \"title\":\"Ordered Layout Dashboard\",\n           \"description\":\"Created using the Datadog provider in Pulumi\",\n           \"widgets\":[\n              {\n                 \"id\":719369537777170,\n                 \"definition\":{\n                    \"title\":\"Widget Title\",\n                    \"type\":\"alert_graph\",\n                    \"alert_id\":\"895605\",\n                    \"viz_type\":\"timeseries\"\n                 }\n              },\n              {\n                 \"id\":2306240030393868,\n                 \"definition\":{\n                    \"title\":\"Widget Title\",\n                    \"type\":\"alert_value\",\n                    \"alert_id\":\"895605\",\n                    \"unit\":\"b\",\n                    \"text_align\":\"center\",\n                    \"precision\":3\n                 }\n              },\n              {\n                 \"id\":6990998850881326,\n                 \"definition\":{\n                    \"title\":\"Widget Title\",\n                    \"type\":\"alert_value\",\n                    \"alert_id\":\"895605\",\n                    \"unit\":\"b\",\n                    \"text_align\":\"center\",\n                    \"precision\":3\n                 }\n              },\n              {\n                 \"id\":3351284044659007,\n                 \"definition\":{\n                    \"title\":\"Widget Title\",\n                    \"type\":\"change\",\n                    \"requests\":[\n                       {\n                          \"q\":\"avg:system.load.1{env:staging} by {account}\",\n                          \"compare_to\":\"week_before\",\n                          \"change_type\":\"absolute\",\n                          \"order_dir\":\"desc\",\n                          \"increase_good\":true,\n                          \"order_by\":\"name\",\n                          \"show_present\":true\n                       }\n                    ]\n                 }\n              },\n              {\n                 \"id\":6450290622996182,\n                 \"definition\":{\n                    \"title\":\"Widget Title\",\n                    \"show_legend\":false,\n                    \"type\":\"distribution\",\n                    \"requests\":[\n                       {\n                          \"q\":\"avg:system.load.1{env:staging} by {account}\",\n                          \"style\":{\n                             \"palette\":\"warm\"\n                          }\n                       }\n                    ]\n                 }\n              },\n              {\n                 \"id\":4902842646291536,\n                 \"definition\":{\n                    \"title\":\"Widget Title\",\n                    \"type\":\"check_status\",\n                    \"check\":\"aws.ecs.agent_connected\",\n                    \"grouping\":\"cluster\",\n                    \"group_by\":[\n                       \"account\",\n                       \"cluster\"\n                    ],\n                    \"tags\":[\n                       \"account:demo\",\n                       \"cluster:awseb-ruthebdog-env-8-dn3m6u3gvk\"\n                    ]\n                 }\n              },\n              {\n                 \"id\":6392349954822644,\n                 \"definition\":{\n                    \"title\":\"Widget Title\",\n                    \"show_legend\":false,\n                    \"type\":\"heatmap\",\n                    \"yaxis\":{\n                       \"scale\":\"sqrt\",\n                       \"include_zero\":true,\n                       \"min\":\"1\",\n                       \"max\":\"2\"\n                    },\n                    \"requests\":[\n                       {\n                          \"q\":\"avg:system.load.1{env:staging} by {account}\",\n                          \"style\":{\n                             \"palette\":\"warm\"\n                          }\n                       }\n                    ]\n                 }\n              },\n              {\n                 \"id\":5222961478940988,\n                 \"definition\":{\n                    \"title\":\"Widget Title\",\n                    \"type\":\"hostmap\",\n                    \"requests\":{\n                       \"fill\":{\n                          \"q\":\"avg:system.load.1{*} by {host}\"\n                       },\n                       \"size\":{\n                          \"q\":\"avg:memcache.uptime{*} by {host}\"\n                       }\n                    },\n                    \"node_type\":\"container\",\n                    \"no_metric_hosts\":true,\n                    \"no_group_hosts\":true,\n                    \"group\":[\n                       \"host\",\n                       \"region\"\n                    ],\n                    \"scope\":[\n                       \"region:us-east-1\",\n                       \"aws_account:727006795293\"\n                    ],\n                    \"style\":{\n                       \"palette\":\"yellow_to_green\",\n                       \"palette_flip\":true,\n                       \"fill_min\":\"10\",\n                       \"fill_max\":\"20\"\n                    }\n                 }\n              },\n              {\n                 \"id\":8121199734227072,\n                 \"definition\":{\n                    \"type\":\"note\",\n                    \"content\":\"note text\",\n                    \"background_color\":\"pink\",\n                    \"font_size\":\"14\",\n                    \"text_align\":\"center\",\n                    \"show_tick\":true,\n                    \"tick_pos\":\"50%\",\n                    \"tick_edge\":\"left\"\n                 }\n              },\n              {\n                 \"id\":1775856835833038,\n                 \"definition\":{\n                    \"title\":\"Widget Title\",\n                    \"type\":\"query_value\",\n                    \"requests\":[\n                       {\n                          \"q\":\"avg:system.load.1{env:staging} by {account}\",\n                          \"aggregator\":\"sum\",\n                          \"conditional_formats\":[\n                             {\n                                \"hide_value\":false,\n                                \"comparator\":\"\u003c\",\n                                \"palette\":\"white_on_green\",\n                                \"value\":2\n                             },\n                             {\n                                \"hide_value\":false,\n                                \"comparator\":\"\u003e\",\n                                \"palette\":\"white_on_red\",\n                                \"value\":2.2\n                             }\n                          ]\n                       }\n                    ],\n                    \"autoscale\":true,\n                    \"custom_unit\":\"xx\",\n                    \"text_align\":\"right\",\n                    \"precision\":4\n                 }\n              },\n              {\n                 \"id\":8461455966625581,\n                 \"definition\":{\n                    \"title\":\"Widget Title\",\n                    \"type\":\"query_table\",\n                    \"requests\":[\n                       {\n                          \"q\":\"avg:system.load.1{env:staging} by {account}\",\n                          \"aggregator\":\"sum\",\n                          \"conditional_formats\":[\n                             {\n                                \"hide_value\":false,\n                                \"comparator\":\"\u003c\",\n                                \"palette\":\"white_on_green\",\n                                \"value\":2\n                             },\n                             {\n                                \"hide_value\":false,\n                                \"comparator\":\"\u003e\",\n                                \"palette\":\"white_on_red\",\n                                \"value\":2.2\n                             }\n                          ],\n                          \"limit\":10\n                       }\n                    ]\n                 }\n              },\n              {\n                 \"id\":8660006349418736,\n                 \"definition\":{\n                    \"title\":\"Widget Title\",\n                    \"type\":\"scatterplot\",\n                    \"requests\":{\n                       \"x\":{\n                          \"q\":\"avg:system.cpu.user{*} by {service, account}\",\n                          \"aggregator\":\"max\"\n                       },\n                       \"y\":{\n                          \"q\":\"avg:system.mem.used{*} by {service, account}\",\n                          \"aggregator\":\"min\"\n                       }\n                    },\n                    \"xaxis\":{\n                       \"scale\":\"pow\",\n                       \"label\":\"x\",\n                       \"include_zero\":true,\n                       \"min\":\"1\",\n                       \"max\":\"2000\"\n                    },\n                    \"yaxis\":{\n                       \"scale\":\"log\",\n                       \"label\":\"y\",\n                       \"include_zero\":false,\n                       \"min\":\"5\",\n                       \"max\":\"2222\"\n                    },\n                    \"color_by_groups\":[\n                       \"account\",\n                       \"apm-role-group\"\n                    ]\n                 }\n              },\n              {\n                 \"id\":1669590772917638,\n                 \"definition\":{\n                    \"title\":\"env: prod, datacenter:dc1, service: master-db\",\n                    \"title_size\":\"16\",\n                    \"title_align\":\"left\",\n                    \"type\":\"servicemap\",\n                    \"service\":\"master-db\",\n                    \"filters\":[\n                       \"env:prod\",\n                       \"datacenter:dc1\"\n                    ]\n                 }\n              },\n              {\n                 \"id\":2138829058361817,\n                 \"definition\":{\n                    \"title\":\"Widget Title\",\n                    \"show_legend\":true,\n                    \"legend_size\":\"2\",\n                    \"type\":\"timeseries\",\n                    \"requests\":[\n                       {\n                          \"q\":\"avg:system.cpu.user{app:general} by {env}\",\n                          \"on_right_yaxis\":false,\n                          \"metadata\":[\n                             {\n                                \"expression\":\"avg:system.cpu.user{app:general} by {env}\",\n                                \"alias_name\":\"Alpha\"\n                             }\n                          ],\n                          \"style\":{\n                             \"palette\":\"warm\",\n                             \"line_type\":\"dashed\",\n                             \"line_width\":\"thin\"\n                          },\n                          \"display_type\":\"line\"\n                       },\n                       {\n                          \"on_right_yaxis\":false,\n                          \"log_query\":{\n                             \"index\":\"mcnulty\",\n                             \"search\":{\n                                \"query\":\"status:info\"\n                             },\n                             \"group_by\":[\n                                {\n                                   \"facet\":\"host\",\n                                   \"sort\":{\n                                      \"facet\":\"@duration\",\n                                      \"aggregation\":\"avg\",\n                                      \"order\":\"desc\"\n                                   },\n                                   \"limit\":10\n                                }\n                             ],\n                             \"compute\":{\n                                \"facet\":\"@duration\",\n                                \"interval\":5000,\n                                \"aggregation\":\"avg\"\n                             }\n                          },\n                          \"display_type\":\"area\"\n                       },\n                       {\n                          \"on_right_yaxis\":false,\n                          \"apm_query\":{\n                             \"index\":\"apm-search\",\n                             \"search\":{\n                                \"query\":\"type:web\"\n                             },\n                             \"group_by\":[\n                                {\n                                   \"facet\":\"resource_name\",\n                                   \"sort\":{\n                                      \"facet\":\"@string_query.interval\",\n                                      \"aggregation\":\"avg\",\n                                      \"order\":\"desc\"\n                                   },\n                                   \"limit\":50\n                                }\n                             ],\n                             \"compute\":{\n                                \"facet\":\"@duration\",\n                                \"interval\":5000,\n                                \"aggregation\":\"avg\"\n                             }\n                          },\n                          \"display_type\":\"bars\"\n                       },\n                       {\n                          \"on_right_yaxis\":false,\n                          \"process_query\":{\n                             \"search_by\":\"error\",\n                             \"metric\":\"process.stat.cpu.total_pct\",\n                             \"limit\":50,\n                             \"filter_by\":[\n                                \"active\"\n                             ]\n                          },\n                          \"display_type\":\"area\"\n                       }\n                    ],\n                    \"yaxis\":{\n                       \"scale\":\"log\",\n                       \"include_zero\":false,\n                       \"max\":\"100\"\n                    },\n                    \"events\":[\n                       {\n                          \"q\":\"sources:test tags:1\"\n                       },\n                       {\n                          \"q\":\"sources:test tags:2\"\n                       }\n                    ],\n                    \"markers\":[\n                       {\n                          \"label\":\" z=6 \",\n                          \"value\":\"y = 4\",\n                          \"display_type\":\"error dashed\"\n                       },\n                       {\n                          \"label\":\" x=8 \",\n                          \"value\":\"10 \u003c y \u003c 999\",\n                          \"display_type\":\"ok solid\"\n                       }\n                    ]\n                 }\n              },\n              {\n                 \"id\":7307171374656551,\n                 \"definition\":{\n                    \"title\":\"Widget Title\",\n                    \"type\":\"toplist\",\n                    \"requests\":[\n                       {\n                          \"q\":\"avg:system.cpu.user{app:general} by {env}\",\n                          \"conditional_formats\":[\n                             {\n                                \"hide_value\":false,\n                                \"comparator\":\"\u003c\",\n                                \"palette\":\"white_on_green\",\n                                \"value\":2\n                             },\n                             {\n                                \"hide_value\":false,\n                                \"comparator\":\"\u003e\",\n                                \"palette\":\"white_on_red\",\n                                \"value\":2.2\n                             }\n                          ]\n                       }\n                    ]\n                 }\n              },\n              {\n                 \"id\":7086674838553258,\n                 \"definition\":{\n                    \"title\":\"Group Widget\",\n                    \"type\":\"group\",\n                    \"layout_type\":\"ordered\",\n                    \"widgets\":[\n                       {\n                          \"id\":3726092277657502,\n                          \"definition\":{\n                             \"type\":\"note\",\n                             \"content\":\"cluster note widget\",\n                             \"background_color\":\"pink\",\n                             \"font_size\":\"14\",\n                             \"text_align\":\"center\",\n                             \"show_tick\":true,\n                             \"tick_pos\":\"50%\",\n                             \"tick_edge\":\"left\"\n                          }\n                       },\n                       {\n                          \"id\":6376384650558057,\n                          \"definition\":{\n                             \"title\":\"Alert Graph\",\n                             \"type\":\"alert_graph\",\n                             \"alert_id\":\"123\",\n                             \"viz_type\":\"toplist\"\n                          }\n                       }\n                    ]\n                 }\n              },\n              {\n                 \"id\":4668903563678912,\n                 \"definition\":{\n                    \"title\":\"Widget Title\",\n                    \"type\":\"slo\",\n                    \"view_type\":\"detail\",\n                    \"time_windows\":[\n                       \"7d\",\n                       \"previous_week\"\n                    ],\n                    \"slo_id\":\"56789\",\n                    \"show_error_budget\":true,\n                    \"view_mode\":\"overall\",\n                    \"global_time_target\":\"0\"\n                 }\n              }\n           ],\n           \"template_variables\":[\n              {\n                 \"name\":\"var_1\",\n                 \"default\":\"aws\",\n                 \"prefix\":\"host\"\n              },\n              {\n                 \"name\":\"var_2\",\n                 \"default\":\"autoscaling\",\n                 \"prefix\":\"service_name\"\n              }\n           ],\n           \"layout_type\":\"ordered\",\n           \"is_read_only\":true,\n           \"notify_list\":[\n\n           ],\n           \"template_variable_presets\":[\n              {\n                 \"name\":\"preset_1\",\n                 \"template_variables\":[\n                    {\n                       \"name\":\"var_1\",\n                       \"value\":\"host.dc\"\n                    },\n                    {\n                       \"name\":\"var_2\",\n                       \"value\":\"my_service\"\n                    }\n                 ]\n              }\n           ]\n        }\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\n```sh\n$ pulumi import datadog:index/dashboardJson:DashboardJson my_service_dashboard sv7-gyh-kas\n```\n\n",
            "properties": {
                "dashboard": {
                    "type": "string",
                    "description": "The JSON formatted definition of the Dashboard.\n"
                },
                "dashboardLists": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "dashboardListsRemoveds": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "The list of dashboard lists this dashboard should be removed from. Internal only.\n"
                },
                "url": {
                    "type": "string",
                    "description": "The URL of the dashboard.\n"
                }
            },
            "required": [
                "dashboard",
                "dashboardListsRemoveds",
                "url"
            ],
            "inputProperties": {
                "dashboard": {
                    "type": "string",
                    "description": "The JSON formatted definition of the Dashboard.\n"
                },
                "dashboardLists": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "url": {
                    "type": "string",
                    "description": "The URL of the dashboard.\n"
                }
            },
            "requiredInputs": [
                "dashboard"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DashboardJson resources.\n",
                "properties": {
                    "dashboard": {
                        "type": "string",
                        "description": "The JSON formatted definition of the Dashboard.\n"
                    },
                    "dashboardLists": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    },
                    "dashboardListsRemoveds": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "description": "The list of dashboard lists this dashboard should be removed from. Internal only.\n"
                    },
                    "url": {
                        "type": "string",
                        "description": "The URL of the dashboard.\n"
                    }
                },
                "type": "object"
            }
        },
        "datadog:index/dashboardList:DashboardList": {
            "description": "Provides a Datadog dashboard_list resource. This can be used to create and manage Datadog Dashboard Lists and the individual dashboards within them.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as datadog from \"@pulumi/datadog\";\n\nconst time = new datadog.Dashboard(\"time\", {\n    title: \"TF Test Layout Dashboard\",\n    description: \"Created using the Datadog provider in Pulumi\",\n    layoutType: \"ordered\",\n    isReadOnly: true,\n    widgets: [{\n        alertGraphDefinition: {\n            alertId: \"1234\",\n            vizType: \"timeseries\",\n            title: \"Widget Title\",\n            liveSpan: \"1h\",\n        },\n    }],\n});\nconst screen = new datadog.Dashboard(\"screen\", {\n    title: \"TF Test Free Layout Dashboard\",\n    description: \"Created using the Datadog provider in Pulumi\",\n    layoutType: \"free\",\n    isReadOnly: false,\n    widgets: [{\n        eventStreamDefinition: {\n            query: \"*\",\n            eventSize: \"l\",\n            title: \"Widget Title\",\n            titleSize: \"16\",\n            titleAlign: \"left\",\n            liveSpan: \"1h\",\n        },\n        widgetLayout: {\n            height: 43,\n            width: 32,\n            x: 5,\n            y: 5,\n        },\n    }],\n});\n// Create a new Dashboard List with two Dashboards\nconst newList = new datadog.DashboardList(\"new_list\", {\n    name: \"Automated Created List\",\n    dashItems: [\n        {\n            type: \"custom_timeboard\",\n            dashId: time.id,\n        },\n        {\n            type: \"custom_screenboard\",\n            dashId: screen.id,\n        },\n    ],\n}, {\n    dependsOn: [\n        screen,\n        time,\n    ],\n});\n```\n```python\nimport pulumi\nimport pulumi_datadog as datadog\n\ntime = datadog.Dashboard(\"time\",\n    title=\"TF Test Layout Dashboard\",\n    description=\"Created using the Datadog provider in Pulumi\",\n    layout_type=\"ordered\",\n    is_read_only=True,\n    widgets=[{\n        \"alert_graph_definition\": {\n            \"alert_id\": \"1234\",\n            \"viz_type\": \"timeseries\",\n            \"title\": \"Widget Title\",\n            \"live_span\": \"1h\",\n        },\n    }])\nscreen = datadog.Dashboard(\"screen\",\n    title=\"TF Test Free Layout Dashboard\",\n    description=\"Created using the Datadog provider in Pulumi\",\n    layout_type=\"free\",\n    is_read_only=False,\n    widgets=[{\n        \"event_stream_definition\": {\n            \"query\": \"*\",\n            \"event_size\": \"l\",\n            \"title\": \"Widget Title\",\n            \"title_size\": \"16\",\n            \"title_align\": \"left\",\n            \"live_span\": \"1h\",\n        },\n        \"widget_layout\": {\n            \"height\": 43,\n            \"width\": 32,\n            \"x\": 5,\n            \"y\": 5,\n        },\n    }])\n# Create a new Dashboard List with two Dashboards\nnew_list = datadog.DashboardList(\"new_list\",\n    name=\"Automated Created List\",\n    dash_items=[\n        {\n            \"type\": \"custom_timeboard\",\n            \"dash_id\": time.id,\n        },\n        {\n            \"type\": \"custom_screenboard\",\n            \"dash_id\": screen.id,\n        },\n    ],\n    opts = pulumi.ResourceOptions(depends_on=[\n            screen,\n            time,\n        ]))\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Datadog = Pulumi.Datadog;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var time = new Datadog.Dashboard(\"time\", new()\n    {\n        Title = \"TF Test Layout Dashboard\",\n        Description = \"Created using the Datadog provider in Pulumi\",\n        LayoutType = \"ordered\",\n        IsReadOnly = true,\n        Widgets = new[]\n        {\n            new Datadog.Inputs.DashboardWidgetArgs\n            {\n                AlertGraphDefinition = new Datadog.Inputs.DashboardWidgetAlertGraphDefinitionArgs\n                {\n                    AlertId = \"1234\",\n                    VizType = \"timeseries\",\n                    Title = \"Widget Title\",\n                    LiveSpan = \"1h\",\n                },\n            },\n        },\n    });\n\n    var screen = new Datadog.Dashboard(\"screen\", new()\n    {\n        Title = \"TF Test Free Layout Dashboard\",\n        Description = \"Created using the Datadog provider in Pulumi\",\n        LayoutType = \"free\",\n        IsReadOnly = false,\n        Widgets = new[]\n        {\n            new Datadog.Inputs.DashboardWidgetArgs\n            {\n                EventStreamDefinition = new Datadog.Inputs.DashboardWidgetEventStreamDefinitionArgs\n                {\n                    Query = \"*\",\n                    EventSize = \"l\",\n                    Title = \"Widget Title\",\n                    TitleSize = \"16\",\n                    TitleAlign = \"left\",\n                    LiveSpan = \"1h\",\n                },\n                WidgetLayout = new Datadog.Inputs.DashboardWidgetWidgetLayoutArgs\n                {\n                    Height = 43,\n                    Width = 32,\n                    X = 5,\n                    Y = 5,\n                },\n            },\n        },\n    });\n\n    // Create a new Dashboard List with two Dashboards\n    var newList = new Datadog.DashboardList(\"new_list\", new()\n    {\n        Name = \"Automated Created List\",\n        DashItems = new[]\n        {\n            new Datadog.Inputs.DashboardListDashItemArgs\n            {\n                Type = \"custom_timeboard\",\n                DashId = time.Id,\n            },\n            new Datadog.Inputs.DashboardListDashItemArgs\n            {\n                Type = \"custom_screenboard\",\n                DashId = screen.Id,\n            },\n        },\n    }, new CustomResourceOptions\n    {\n        DependsOn =\n        {\n            screen,\n            time,\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-datadog/sdk/v4/go/datadog\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\ttime, err := datadog.NewDashboard(ctx, \"time\", \u0026datadog.DashboardArgs{\n\t\t\tTitle:       pulumi.String(\"TF Test Layout Dashboard\"),\n\t\t\tDescription: pulumi.String(\"Created using the Datadog provider in Pulumi\"),\n\t\t\tLayoutType:  pulumi.String(\"ordered\"),\n\t\t\tIsReadOnly:  pulumi.Bool(true),\n\t\t\tWidgets: datadog.DashboardWidgetArray{\n\t\t\t\t\u0026datadog.DashboardWidgetArgs{\n\t\t\t\t\tAlertGraphDefinition: \u0026datadog.DashboardWidgetAlertGraphDefinitionArgs{\n\t\t\t\t\t\tAlertId:  pulumi.String(\"1234\"),\n\t\t\t\t\t\tVizType:  pulumi.String(\"timeseries\"),\n\t\t\t\t\t\tTitle:    pulumi.String(\"Widget Title\"),\n\t\t\t\t\t\tLiveSpan: pulumi.String(\"1h\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tscreen, err := datadog.NewDashboard(ctx, \"screen\", \u0026datadog.DashboardArgs{\n\t\t\tTitle:       pulumi.String(\"TF Test Free Layout Dashboard\"),\n\t\t\tDescription: pulumi.String(\"Created using the Datadog provider in Pulumi\"),\n\t\t\tLayoutType:  pulumi.String(\"free\"),\n\t\t\tIsReadOnly:  pulumi.Bool(false),\n\t\t\tWidgets: datadog.DashboardWidgetArray{\n\t\t\t\t\u0026datadog.DashboardWidgetArgs{\n\t\t\t\t\tEventStreamDefinition: \u0026datadog.DashboardWidgetEventStreamDefinitionArgs{\n\t\t\t\t\t\tQuery:      pulumi.String(\"*\"),\n\t\t\t\t\t\tEventSize:  pulumi.String(\"l\"),\n\t\t\t\t\t\tTitle:      pulumi.String(\"Widget Title\"),\n\t\t\t\t\t\tTitleSize:  pulumi.String(\"16\"),\n\t\t\t\t\t\tTitleAlign: pulumi.String(\"left\"),\n\t\t\t\t\t\tLiveSpan:   pulumi.String(\"1h\"),\n\t\t\t\t\t},\n\t\t\t\t\tWidgetLayout: \u0026datadog.DashboardWidgetWidgetLayoutArgs{\n\t\t\t\t\t\tHeight: pulumi.Int(43),\n\t\t\t\t\t\tWidth:  pulumi.Int(32),\n\t\t\t\t\t\tX:      pulumi.Int(5),\n\t\t\t\t\t\tY:      pulumi.Int(5),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t// Create a new Dashboard List with two Dashboards\n\t\t_, err = datadog.NewDashboardList(ctx, \"new_list\", \u0026datadog.DashboardListArgs{\n\t\t\tName: pulumi.String(\"Automated Created List\"),\n\t\t\tDashItems: datadog.DashboardListDashItemArray{\n\t\t\t\t\u0026datadog.DashboardListDashItemArgs{\n\t\t\t\t\tType:   pulumi.String(\"custom_timeboard\"),\n\t\t\t\t\tDashId: time.ID(),\n\t\t\t\t},\n\t\t\t\t\u0026datadog.DashboardListDashItemArgs{\n\t\t\t\t\tType:   pulumi.String(\"custom_screenboard\"),\n\t\t\t\t\tDashId: screen.ID(),\n\t\t\t\t},\n\t\t\t},\n\t\t}, pulumi.DependsOn([]pulumi.Resource{\n\t\t\tscreen,\n\t\t\ttime,\n\t\t}))\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.datadog.Dashboard;\nimport com.pulumi.datadog.DashboardArgs;\nimport com.pulumi.datadog.inputs.DashboardWidgetArgs;\nimport com.pulumi.datadog.inputs.DashboardWidgetAlertGraphDefinitionArgs;\nimport com.pulumi.datadog.inputs.DashboardWidgetEventStreamDefinitionArgs;\nimport com.pulumi.datadog.inputs.DashboardWidgetWidgetLayoutArgs;\nimport com.pulumi.datadog.DashboardList;\nimport com.pulumi.datadog.DashboardListArgs;\nimport com.pulumi.datadog.inputs.DashboardListDashItemArgs;\nimport com.pulumi.resources.CustomResourceOptions;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var time = new Dashboard(\"time\", DashboardArgs.builder()\n            .title(\"TF Test Layout Dashboard\")\n            .description(\"Created using the Datadog provider in Pulumi\")\n            .layoutType(\"ordered\")\n            .isReadOnly(true)\n            .widgets(DashboardWidgetArgs.builder()\n                .alertGraphDefinition(DashboardWidgetAlertGraphDefinitionArgs.builder()\n                    .alertId(\"1234\")\n                    .vizType(\"timeseries\")\n                    .title(\"Widget Title\")\n                    .liveSpan(\"1h\")\n                    .build())\n                .build())\n            .build());\n\n        var screen = new Dashboard(\"screen\", DashboardArgs.builder()\n            .title(\"TF Test Free Layout Dashboard\")\n            .description(\"Created using the Datadog provider in Pulumi\")\n            .layoutType(\"free\")\n            .isReadOnly(false)\n            .widgets(DashboardWidgetArgs.builder()\n                .eventStreamDefinition(DashboardWidgetEventStreamDefinitionArgs.builder()\n                    .query(\"*\")\n                    .eventSize(\"l\")\n                    .title(\"Widget Title\")\n                    .titleSize(16)\n                    .titleAlign(\"left\")\n                    .liveSpan(\"1h\")\n                    .build())\n                .widgetLayout(DashboardWidgetWidgetLayoutArgs.builder()\n                    .height(43)\n                    .width(32)\n                    .x(5)\n                    .y(5)\n                    .build())\n                .build())\n            .build());\n\n        // Create a new Dashboard List with two Dashboards\n        var newList = new DashboardList(\"newList\", DashboardListArgs.builder()\n            .name(\"Automated Created List\")\n            .dashItems(            \n                DashboardListDashItemArgs.builder()\n                    .type(\"custom_timeboard\")\n                    .dashId(time.id())\n                    .build(),\n                DashboardListDashItemArgs.builder()\n                    .type(\"custom_screenboard\")\n                    .dashId(screen.id())\n                    .build())\n            .build(), CustomResourceOptions.builder()\n                .dependsOn(                \n                    screen,\n                    time)\n                .build());\n\n    }\n}\n```\n```yaml\nresources:\n  # Create a new Dashboard List with two Dashboards\n  newList:\n    type: datadog:DashboardList\n    name: new_list\n    properties:\n      name: Automated Created List\n      dashItems:\n        - type: custom_timeboard\n          dashId: ${time.id}\n        - type: custom_screenboard\n          dashId: ${screen.id}\n    options:\n      dependson:\n        - ${screen}\n        - ${time}\n  time:\n    type: datadog:Dashboard\n    properties:\n      title: TF Test Layout Dashboard\n      description: Created using the Datadog provider in Pulumi\n      layoutType: ordered\n      isReadOnly: true\n      widgets:\n        - alertGraphDefinition:\n            alertId: '1234'\n            vizType: timeseries\n            title: Widget Title\n            liveSpan: 1h\n  screen:\n    type: datadog:Dashboard\n    properties:\n      title: TF Test Free Layout Dashboard\n      description: Created using the Datadog provider in Pulumi\n      layoutType: free\n      isReadOnly: false\n      widgets:\n        - eventStreamDefinition:\n            query: '*'\n            eventSize: l\n            title: Widget Title\n            titleSize: 16\n            titleAlign: left\n            liveSpan: 1h\n          widgetLayout:\n            height: 43\n            width: 32\n            x: 5\n            y: 5\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\n```sh\n$ pulumi import datadog:index/dashboardList:DashboardList new_list 123456\n```\n\n",
            "properties": {
                "dashItems": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardListDashItem:DashboardListDashItem"
                    },
                    "description": "A set of dashboard items that belong to this list\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the Dashboard List\n"
                }
            },
            "required": [
                "name"
            ],
            "inputProperties": {
                "dashItems": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardListDashItem:DashboardListDashItem"
                    },
                    "description": "A set of dashboard items that belong to this list\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the Dashboard List\n"
                }
            },
            "requiredInputs": [
                "name"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DashboardList resources.\n",
                "properties": {
                    "dashItems": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/datadog:index/DashboardListDashItem:DashboardListDashItem"
                        },
                        "description": "A set of dashboard items that belong to this list\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the Dashboard List\n"
                    }
                },
                "type": "object"
            }
        },
        "datadog:index/downtime:Downtime": {
            "description": "This resource is deprecated — use the `datadog.DowntimeSchedule resource` instead. Provides a Datadog downtime resource. This can be used to create and manage Datadog downtimes.\n\n## Import\n\n```sh\n$ pulumi import datadog:index/downtime:Downtime bytes_received_localhost 2081\n```\n\n",
            "properties": {
                "active": {
                    "type": "boolean",
                    "description": "When true indicates this downtime is being actively applied\n"
                },
                "activeChildId": {
                    "type": "integer",
                    "description": "The id corresponding to the downtime object definition of the active child for the original parent recurring downtime. This field will only exist on recurring downtimes.\n"
                },
                "disabled": {
                    "type": "boolean",
                    "description": "When true indicates this downtime is not being applied\n"
                },
                "end": {
                    "type": "integer",
                    "description": "Optionally specify an end date when this downtime should expire. Accepts a Unix timestamp in UTC.\n"
                },
                "endDate": {
                    "type": "string",
                    "description": "String representing date and time to end the downtime in RFC3339 format.\n"
                },
                "message": {
                    "type": "string",
                    "description": "An optional message to provide when creating the downtime, can include notification handles\n"
                },
                "monitorId": {
                    "type": "integer",
                    "description": "When specified, this downtime will only apply to this monitor\n"
                },
                "monitorTags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of monitor tags (up to 32) to base the scheduled downtime on. Only monitors that have all selected tags are silenced\n"
                },
                "muteFirstRecoveryNotification": {
                    "type": "boolean",
                    "description": "When true the first recovery notification during the downtime will be muted Defaults to `false`.\n"
                },
                "recurrence": {
                    "$ref": "#/types/datadog:index/DowntimeRecurrence:DowntimeRecurrence",
                    "description": "Optional recurring schedule for this downtime\n"
                },
                "scopes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "specify the group scope to which this downtime applies. For everything use '*'\n"
                },
                "start": {
                    "type": "integer",
                    "description": "Specify when this downtime should start. Accepts a Unix timestamp in UTC.\n"
                },
                "startDate": {
                    "type": "string",
                    "description": "String representing date and time to start the downtime in RFC3339 format.\n"
                },
                "timezone": {
                    "type": "string",
                    "description": "The timezone for the downtime. Follows IANA timezone database identifiers. Defaults to `\"UTC\"`.\n"
                }
            },
            "required": [
                "active",
                "activeChildId",
                "disabled",
                "scopes"
            ],
            "inputProperties": {
                "end": {
                    "type": "integer",
                    "description": "Optionally specify an end date when this downtime should expire. Accepts a Unix timestamp in UTC.\n"
                },
                "endDate": {
                    "type": "string",
                    "description": "String representing date and time to end the downtime in RFC3339 format.\n"
                },
                "message": {
                    "type": "string",
                    "description": "An optional message to provide when creating the downtime, can include notification handles\n"
                },
                "monitorId": {
                    "type": "integer",
                    "description": "When specified, this downtime will only apply to this monitor\n"
                },
                "monitorTags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of monitor tags (up to 32) to base the scheduled downtime on. Only monitors that have all selected tags are silenced\n"
                },
                "muteFirstRecoveryNotification": {
                    "type": "boolean",
                    "description": "When true the first recovery notification during the downtime will be muted Defaults to `false`.\n"
                },
                "recurrence": {
                    "$ref": "#/types/datadog:index/DowntimeRecurrence:DowntimeRecurrence",
                    "description": "Optional recurring schedule for this downtime\n"
                },
                "scopes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "specify the group scope to which this downtime applies. For everything use '*'\n"
                },
                "start": {
                    "type": "integer",
                    "description": "Specify when this downtime should start. Accepts a Unix timestamp in UTC.\n"
                },
                "startDate": {
                    "type": "string",
                    "description": "String representing date and time to start the downtime in RFC3339 format.\n"
                },
                "timezone": {
                    "type": "string",
                    "description": "The timezone for the downtime. Follows IANA timezone database identifiers. Defaults to `\"UTC\"`.\n"
                }
            },
            "requiredInputs": [
                "scopes"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Downtime resources.\n",
                "properties": {
                    "active": {
                        "type": "boolean",
                        "description": "When true indicates this downtime is being actively applied\n"
                    },
                    "activeChildId": {
                        "type": "integer",
                        "description": "The id corresponding to the downtime object definition of the active child for the original parent recurring downtime. This field will only exist on recurring downtimes.\n"
                    },
                    "disabled": {
                        "type": "boolean",
                        "description": "When true indicates this downtime is not being applied\n"
                    },
                    "end": {
                        "type": "integer",
                        "description": "Optionally specify an end date when this downtime should expire. Accepts a Unix timestamp in UTC.\n"
                    },
                    "endDate": {
                        "type": "string",
                        "description": "String representing date and time to end the downtime in RFC3339 format.\n"
                    },
                    "message": {
                        "type": "string",
                        "description": "An optional message to provide when creating the downtime, can include notification handles\n"
                    },
                    "monitorId": {
                        "type": "integer",
                        "description": "When specified, this downtime will only apply to this monitor\n"
                    },
                    "monitorTags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of monitor tags (up to 32) to base the scheduled downtime on. Only monitors that have all selected tags are silenced\n"
                    },
                    "muteFirstRecoveryNotification": {
                        "type": "boolean",
                        "description": "When true the first recovery notification during the downtime will be muted Defaults to `false`.\n"
                    },
                    "recurrence": {
                        "$ref": "#/types/datadog:index/DowntimeRecurrence:DowntimeRecurrence",
                        "description": "Optional recurring schedule for this downtime\n"
                    },
                    "scopes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "specify the group scope to which this downtime applies. For everything use '*'\n"
                    },
                    "start": {
                        "type": "integer",
                        "description": "Specify when this downtime should start. Accepts a Unix timestamp in UTC.\n"
                    },
                    "startDate": {
                        "type": "string",
                        "description": "String representing date and time to start the downtime in RFC3339 format.\n"
                    },
                    "timezone": {
                        "type": "string",
                        "description": "The timezone for the downtime. Follows IANA timezone database identifiers. Defaults to `\"UTC\"`.\n"
                    }
                },
                "type": "object"
            }
        },
        "datadog:index/downtimeSchedule:DowntimeSchedule": {
            "description": "Provides a Datadog DowntimeSchedule resource. This can be used to create and manage Datadog downtimes.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.datadog.DowntimeSchedule;\nimport com.pulumi.datadog.DowntimeScheduleArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        // Create new downtime_schedule resource\n        var downtimeScheduleExample = new DowntimeSchedule(\"downtimeScheduleExample\", DowntimeScheduleArgs.builder()\n            .scope(\"env:us9-prod7 AND team:test123\")\n            .monitorIdentifier(DowntimeScheduleMonitorIdentifierArgs.builder()\n                .monitorTags(                \n                    \"test:123\",\n                    \"data:test\")\n                .build())\n            .recurringSchedule(DowntimeScheduleRecurringScheduleArgs.builder()\n                .recurrences(DowntimeScheduleRecurringScheduleRecurrenceArgs.builder()\n                    .duration(\"1h\")\n                    .rrule(\"FREQ=DAILY;INTERVAL=1\")\n                    .start(\"2050-01-02T03:04:05\")\n                    .build())\n                .timezone(\"America/New_York\")\n                .build())\n            .displayTimezone(\"America/New_York\")\n            .message(\"Message about the downtime\")\n            .muteFirstRecoveryNotification(true)\n            .notifyEndStates(            \n                \"alert\",\n                \"warn\")\n            .notifyEndTypes(            \n                \"canceled\",\n                \"expired\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  # Create new downtime_schedule resource\n  downtimeScheduleExample:\n    type: datadog:DowntimeSchedule\n    name: downtime_schedule_example\n    properties:\n      scope: env:us9-prod7 AND team:test123\n      monitorIdentifier:\n        - monitorTags:\n            - test:123\n            - data:test\n      recurringSchedule:\n        - recurrences:\n            - duration: 1h\n              rrule: FREQ=DAILY;INTERVAL=1\n              start: 2050-01-02T03:04:05\n          timezone: America/New_York\n      displayTimezone: America/New_York\n      message: Message about the downtime\n      muteFirstRecoveryNotification: true\n      notifyEndStates:\n        - alert\n        - warn\n      notifyEndTypes:\n        - canceled\n        - expired\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\n```sh\n$ pulumi import datadog:index/downtimeSchedule:DowntimeSchedule new_list \"00e000000-0000-1234-0000-000000000000\"\n```\n\n",
            "properties": {
                "displayTimezone": {
                    "type": "string",
                    "description": "The timezone in which to display the downtime's start and end times in Datadog applications. This is not used as an offset for scheduling.\n"
                },
                "message": {
                    "type": "string",
                    "description": "A message to include with notifications for this downtime. Email notifications can be sent to specific users by using the same `@username` notation as events.\n"
                },
                "monitorIdentifier": {
                    "$ref": "#/types/datadog:index/DowntimeScheduleMonitorIdentifier:DowntimeScheduleMonitorIdentifier"
                },
                "muteFirstRecoveryNotification": {
                    "type": "boolean",
                    "description": "If the first recovery notification during a downtime should be muted.\n"
                },
                "notifyEndStates": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "States that will trigger a monitor notification when the `notify_end_types` action occurs.\n"
                },
                "notifyEndTypes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Actions that will trigger a monitor notification if the downtime is in the `notify_end_types` state.\n"
                },
                "oneTimeSchedule": {
                    "$ref": "#/types/datadog:index/DowntimeScheduleOneTimeSchedule:DowntimeScheduleOneTimeSchedule"
                },
                "recurringSchedule": {
                    "$ref": "#/types/datadog:index/DowntimeScheduleRecurringSchedule:DowntimeScheduleRecurringSchedule"
                },
                "scope": {
                    "type": "string",
                    "description": "The scope to which the downtime applies. Must follow the [common search syntax](https://docs.datadoghq.com/logs/explorer/search_syntax/).\n"
                }
            },
            "required": [
                "displayTimezone",
                "muteFirstRecoveryNotification",
                "notifyEndStates",
                "notifyEndTypes",
                "scope"
            ],
            "inputProperties": {
                "displayTimezone": {
                    "type": "string",
                    "description": "The timezone in which to display the downtime's start and end times in Datadog applications. This is not used as an offset for scheduling.\n"
                },
                "message": {
                    "type": "string",
                    "description": "A message to include with notifications for this downtime. Email notifications can be sent to specific users by using the same `@username` notation as events.\n"
                },
                "monitorIdentifier": {
                    "$ref": "#/types/datadog:index/DowntimeScheduleMonitorIdentifier:DowntimeScheduleMonitorIdentifier"
                },
                "muteFirstRecoveryNotification": {
                    "type": "boolean",
                    "description": "If the first recovery notification during a downtime should be muted.\n"
                },
                "notifyEndStates": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "States that will trigger a monitor notification when the `notify_end_types` action occurs.\n"
                },
                "notifyEndTypes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Actions that will trigger a monitor notification if the downtime is in the `notify_end_types` state.\n"
                },
                "oneTimeSchedule": {
                    "$ref": "#/types/datadog:index/DowntimeScheduleOneTimeSchedule:DowntimeScheduleOneTimeSchedule"
                },
                "recurringSchedule": {
                    "$ref": "#/types/datadog:index/DowntimeScheduleRecurringSchedule:DowntimeScheduleRecurringSchedule"
                },
                "scope": {
                    "type": "string",
                    "description": "The scope to which the downtime applies. Must follow the [common search syntax](https://docs.datadoghq.com/logs/explorer/search_syntax/).\n"
                }
            },
            "requiredInputs": [
                "scope"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DowntimeSchedule resources.\n",
                "properties": {
                    "displayTimezone": {
                        "type": "string",
                        "description": "The timezone in which to display the downtime's start and end times in Datadog applications. This is not used as an offset for scheduling.\n"
                    },
                    "message": {
                        "type": "string",
                        "description": "A message to include with notifications for this downtime. Email notifications can be sent to specific users by using the same `@username` notation as events.\n"
                    },
                    "monitorIdentifier": {
                        "$ref": "#/types/datadog:index/DowntimeScheduleMonitorIdentifier:DowntimeScheduleMonitorIdentifier"
                    },
                    "muteFirstRecoveryNotification": {
                        "type": "boolean",
                        "description": "If the first recovery notification during a downtime should be muted.\n"
                    },
                    "notifyEndStates": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "States that will trigger a monitor notification when the `notify_end_types` action occurs.\n"
                    },
                    "notifyEndTypes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Actions that will trigger a monitor notification if the downtime is in the `notify_end_types` state.\n"
                    },
                    "oneTimeSchedule": {
                        "$ref": "#/types/datadog:index/DowntimeScheduleOneTimeSchedule:DowntimeScheduleOneTimeSchedule"
                    },
                    "recurringSchedule": {
                        "$ref": "#/types/datadog:index/DowntimeScheduleRecurringSchedule:DowntimeScheduleRecurringSchedule"
                    },
                    "scope": {
                        "type": "string",
                        "description": "The scope to which the downtime applies. Must follow the [common search syntax](https://docs.datadoghq.com/logs/explorer/search_syntax/).\n"
                    }
                },
                "type": "object"
            }
        },
        "datadog:index/ipAllowlist:IpAllowlist": {
            "description": "Provides the Datadog IP allowlist resource. This can be used to manage the Datadog IP allowlist\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as datadog from \"@pulumi/datadog\";\n\nconst example = new datadog.IpAllowlist(\"example\", {\n    enabled: false,\n    entries: [\n        {\n            cidrBlock: \"127.0.0.0/32\",\n            note: \"1st Example IP Range\",\n        },\n        {\n            cidrBlock: \"192.0.2.0/24\",\n            note: \"2nd Example IP Range\",\n        },\n    ],\n});\n```\n```python\nimport pulumi\nimport pulumi_datadog as datadog\n\nexample = datadog.IpAllowlist(\"example\",\n    enabled=False,\n    entries=[\n        {\n            \"cidr_block\": \"127.0.0.0/32\",\n            \"note\": \"1st Example IP Range\",\n        },\n        {\n            \"cidr_block\": \"192.0.2.0/24\",\n            \"note\": \"2nd Example IP Range\",\n        },\n    ])\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Datadog = Pulumi.Datadog;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Datadog.IpAllowlist(\"example\", new()\n    {\n        Enabled = false,\n        Entries = new[]\n        {\n            new Datadog.Inputs.IpAllowlistEntryArgs\n            {\n                CidrBlock = \"127.0.0.0/32\",\n                Note = \"1st Example IP Range\",\n            },\n            new Datadog.Inputs.IpAllowlistEntryArgs\n            {\n                CidrBlock = \"192.0.2.0/24\",\n                Note = \"2nd Example IP Range\",\n            },\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-datadog/sdk/v4/go/datadog\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := datadog.NewIpAllowlist(ctx, \"example\", \u0026datadog.IpAllowlistArgs{\n\t\t\tEnabled: pulumi.Bool(false),\n\t\t\tEntries: datadog.IpAllowlistEntryArray{\n\t\t\t\t\u0026datadog.IpAllowlistEntryArgs{\n\t\t\t\t\tCidrBlock: pulumi.String(\"127.0.0.0/32\"),\n\t\t\t\t\tNote:      pulumi.String(\"1st Example IP Range\"),\n\t\t\t\t},\n\t\t\t\t\u0026datadog.IpAllowlistEntryArgs{\n\t\t\t\t\tCidrBlock: pulumi.String(\"192.0.2.0/24\"),\n\t\t\t\t\tNote:      pulumi.String(\"2nd Example IP Range\"),\n\t\t\t\t},\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.datadog.IpAllowlist;\nimport com.pulumi.datadog.IpAllowlistArgs;\nimport com.pulumi.datadog.inputs.IpAllowlistEntryArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new IpAllowlist(\"example\", IpAllowlistArgs.builder()\n            .enabled(false)\n            .entries(            \n                IpAllowlistEntryArgs.builder()\n                    .cidrBlock(\"127.0.0.0/32\")\n                    .note(\"1st Example IP Range\")\n                    .build(),\n                IpAllowlistEntryArgs.builder()\n                    .cidrBlock(\"192.0.2.0/24\")\n                    .note(\"2nd Example IP Range\")\n                    .build())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: datadog:IpAllowlist\n    properties:\n      enabled: false\n      entries:\n        - cidrBlock: 127.0.0.0/32\n          note: 1st Example IP Range\n        - cidrBlock: 192.0.2.0/24\n          note: 2nd Example IP Range\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Whether the IP Allowlist is enabled.\n"
                },
                "entries": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/IpAllowlistEntry:IpAllowlistEntry"
                    },
                    "description": "Set of objects containing an IP address or range of IP addresses in the allowlist and an accompanying note.\n"
                }
            },
            "required": [
                "enabled"
            ],
            "inputProperties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Whether the IP Allowlist is enabled.\n"
                },
                "entries": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/IpAllowlistEntry:IpAllowlistEntry"
                    },
                    "description": "Set of objects containing an IP address or range of IP addresses in the allowlist and an accompanying note.\n"
                }
            },
            "requiredInputs": [
                "enabled"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering IpAllowlist resources.\n",
                "properties": {
                    "enabled": {
                        "type": "boolean",
                        "description": "Whether the IP Allowlist is enabled.\n"
                    },
                    "entries": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/datadog:index/IpAllowlistEntry:IpAllowlistEntry"
                        },
                        "description": "Set of objects containing an IP address or range of IP addresses in the allowlist and an accompanying note.\n"
                    }
                },
                "type": "object"
            }
        },
        "datadog:index/logsArchive:LogsArchive": {
            "description": "Provides a Datadog Logs Archive API resource, which is used to create and manage Datadog logs archives.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as datadog from \"@pulumi/datadog\";\n\nconst myS3Archive = new datadog.LogsArchive(\"my_s3_archive\", {\n    name: \"my s3 archive\",\n    query: \"service:myservice\",\n    s3Archive: {\n        bucket: \"my-bucket\",\n        path: \"/path/foo\",\n        accountId: \"001234567888\",\n        roleName: \"my-role-name\",\n    },\n});\n```\n```python\nimport pulumi\nimport pulumi_datadog as datadog\n\nmy_s3_archive = datadog.LogsArchive(\"my_s3_archive\",\n    name=\"my s3 archive\",\n    query=\"service:myservice\",\n    s3_archive={\n        \"bucket\": \"my-bucket\",\n        \"path\": \"/path/foo\",\n        \"account_id\": \"001234567888\",\n        \"role_name\": \"my-role-name\",\n    })\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Datadog = Pulumi.Datadog;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var myS3Archive = new Datadog.LogsArchive(\"my_s3_archive\", new()\n    {\n        Name = \"my s3 archive\",\n        Query = \"service:myservice\",\n        S3Archive = new Datadog.Inputs.LogsArchiveS3ArchiveArgs\n        {\n            Bucket = \"my-bucket\",\n            Path = \"/path/foo\",\n            AccountId = \"001234567888\",\n            RoleName = \"my-role-name\",\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-datadog/sdk/v4/go/datadog\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := datadog.NewLogsArchive(ctx, \"my_s3_archive\", \u0026datadog.LogsArchiveArgs{\n\t\t\tName:  pulumi.String(\"my s3 archive\"),\n\t\t\tQuery: pulumi.String(\"service:myservice\"),\n\t\t\tS3Archive: \u0026datadog.LogsArchiveS3ArchiveArgs{\n\t\t\t\tBucket:    pulumi.String(\"my-bucket\"),\n\t\t\t\tPath:      pulumi.String(\"/path/foo\"),\n\t\t\t\tAccountId: pulumi.String(\"001234567888\"),\n\t\t\t\tRoleName:  pulumi.String(\"my-role-name\"),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.datadog.LogsArchive;\nimport com.pulumi.datadog.LogsArchiveArgs;\nimport com.pulumi.datadog.inputs.LogsArchiveS3ArchiveArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var myS3Archive = new LogsArchive(\"myS3Archive\", LogsArchiveArgs.builder()\n            .name(\"my s3 archive\")\n            .query(\"service:myservice\")\n            .s3Archive(LogsArchiveS3ArchiveArgs.builder()\n                .bucket(\"my-bucket\")\n                .path(\"/path/foo\")\n                .accountId(\"001234567888\")\n                .roleName(\"my-role-name\")\n                .build())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  myS3Archive:\n    type: datadog:LogsArchive\n    name: my_s3_archive\n    properties:\n      name: my s3 archive\n      query: service:myservice\n      s3Archive:\n        bucket: my-bucket\n        path: /path/foo\n        accountId: '001234567888'\n        roleName: my-role-name\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\n```sh\n$ pulumi import datadog:index/logsArchive:LogsArchive my_s3_archive 1Aabc2_dfQPLnXy3HlfK4hi\n```\n\n",
            "properties": {
                "azureArchive": {
                    "$ref": "#/types/datadog:index/LogsArchiveAzureArchive:LogsArchiveAzureArchive",
                    "description": "Definition of an azure archive.\n"
                },
                "gcsArchive": {
                    "$ref": "#/types/datadog:index/LogsArchiveGcsArchive:LogsArchiveGcsArchive",
                    "description": "Definition of a GCS archive.\n"
                },
                "includeTags": {
                    "type": "boolean",
                    "description": "To store the tags in the archive, set the value `true`. If it is set to `false`, the tags will be dropped when the logs are sent to the archive. Defaults to `false`.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Your archive name.\n"
                },
                "query": {
                    "type": "string",
                    "description": "The archive query/filter. Logs matching this query are included in the archive.\n"
                },
                "rehydrationMaxScanSizeInGb": {
                    "type": "integer",
                    "description": "To limit the rehydration scan size for the archive, set a value in GB.\n"
                },
                "rehydrationTags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "An array of tags to add to rehydrated logs from an archive.\n"
                },
                "s3Archive": {
                    "$ref": "#/types/datadog:index/LogsArchiveS3Archive:LogsArchiveS3Archive",
                    "description": "Definition of an s3 archive.\n"
                }
            },
            "required": [
                "name",
                "query"
            ],
            "inputProperties": {
                "azureArchive": {
                    "$ref": "#/types/datadog:index/LogsArchiveAzureArchive:LogsArchiveAzureArchive",
                    "description": "Definition of an azure archive.\n"
                },
                "gcsArchive": {
                    "$ref": "#/types/datadog:index/LogsArchiveGcsArchive:LogsArchiveGcsArchive",
                    "description": "Definition of a GCS archive.\n"
                },
                "includeTags": {
                    "type": "boolean",
                    "description": "To store the tags in the archive, set the value `true`. If it is set to `false`, the tags will be dropped when the logs are sent to the archive. Defaults to `false`.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Your archive name.\n"
                },
                "query": {
                    "type": "string",
                    "description": "The archive query/filter. Logs matching this query are included in the archive.\n"
                },
                "rehydrationMaxScanSizeInGb": {
                    "type": "integer",
                    "description": "To limit the rehydration scan size for the archive, set a value in GB.\n"
                },
                "rehydrationTags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "An array of tags to add to rehydrated logs from an archive.\n"
                },
                "s3Archive": {
                    "$ref": "#/types/datadog:index/LogsArchiveS3Archive:LogsArchiveS3Archive",
                    "description": "Definition of an s3 archive.\n"
                }
            },
            "requiredInputs": [
                "name",
                "query"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering LogsArchive resources.\n",
                "properties": {
                    "azureArchive": {
                        "$ref": "#/types/datadog:index/LogsArchiveAzureArchive:LogsArchiveAzureArchive",
                        "description": "Definition of an azure archive.\n"
                    },
                    "gcsArchive": {
                        "$ref": "#/types/datadog:index/LogsArchiveGcsArchive:LogsArchiveGcsArchive",
                        "description": "Definition of a GCS archive.\n"
                    },
                    "includeTags": {
                        "type": "boolean",
                        "description": "To store the tags in the archive, set the value `true`. If it is set to `false`, the tags will be dropped when the logs are sent to the archive. Defaults to `false`.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Your archive name.\n"
                    },
                    "query": {
                        "type": "string",
                        "description": "The archive query/filter. Logs matching this query are included in the archive.\n"
                    },
                    "rehydrationMaxScanSizeInGb": {
                        "type": "integer",
                        "description": "To limit the rehydration scan size for the archive, set a value in GB.\n"
                    },
                    "rehydrationTags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "An array of tags to add to rehydrated logs from an archive.\n"
                    },
                    "s3Archive": {
                        "$ref": "#/types/datadog:index/LogsArchiveS3Archive:LogsArchiveS3Archive",
                        "description": "Definition of an s3 archive.\n"
                    }
                },
                "type": "object"
            }
        },
        "datadog:index/logsArchiveOrder:LogsArchiveOrder": {
            "description": "Provides a Datadog [Logs Archive API](https://docs.datadoghq.com/api/v2/logs-archives/) resource, which is used to manage Datadog log archives order.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as datadog from \"@pulumi/datadog\";\n\nconst sampleArchiveOrder = new datadog.LogsArchiveOrder(\"sample_archive_order\", {archiveIds: [\n    sampleArchive1.id,\n    sampleArchive2.id,\n]});\n```\n```python\nimport pulumi\nimport pulumi_datadog as datadog\n\nsample_archive_order = datadog.LogsArchiveOrder(\"sample_archive_order\", archive_ids=[\n    sample_archive1[\"id\"],\n    sample_archive2[\"id\"],\n])\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Datadog = Pulumi.Datadog;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var sampleArchiveOrder = new Datadog.LogsArchiveOrder(\"sample_archive_order\", new()\n    {\n        ArchiveIds = new[]\n        {\n            sampleArchive1.Id,\n            sampleArchive2.Id,\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-datadog/sdk/v4/go/datadog\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := datadog.NewLogsArchiveOrder(ctx, \"sample_archive_order\", \u0026datadog.LogsArchiveOrderArgs{\n\t\t\tArchiveIds: pulumi.StringArray{\n\t\t\t\tsampleArchive1.Id,\n\t\t\t\tsampleArchive2.Id,\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.datadog.LogsArchiveOrder;\nimport com.pulumi.datadog.LogsArchiveOrderArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var sampleArchiveOrder = new LogsArchiveOrder(\"sampleArchiveOrder\", LogsArchiveOrderArgs.builder()\n            .archiveIds(            \n                sampleArchive1.id(),\n                sampleArchive2.id())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  sampleArchiveOrder:\n    type: datadog:LogsArchiveOrder\n    name: sample_archive_order\n    properties:\n      archiveIds:\n        - ${sampleArchive1.id}\n        - ${sampleArchive2.id}\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\nThere must be at most one datadog_logs_archive_order resource. You can import the datadog_logs_archive_order or create an archive order.\n\n```sh\n$ pulumi import datadog:index/logsArchiveOrder:LogsArchiveOrder name\u003e archiveOrderID\n```\n\n",
            "properties": {
                "archiveIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The archive IDs list. The order of archive IDs in this attribute defines the overall archive order for logs. If `archive_ids` is empty or not specified, it will import the actual archive order, and create the resource. Otherwise, it will try to update the order.\n"
                }
            },
            "required": [
                "archiveIds"
            ],
            "inputProperties": {
                "archiveIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The archive IDs list. The order of archive IDs in this attribute defines the overall archive order for logs. If `archive_ids` is empty or not specified, it will import the actual archive order, and create the resource. Otherwise, it will try to update the order.\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering LogsArchiveOrder resources.\n",
                "properties": {
                    "archiveIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The archive IDs list. The order of archive IDs in this attribute defines the overall archive order for logs. If `archive_ids` is empty or not specified, it will import the actual archive order, and create the resource. Otherwise, it will try to update the order.\n"
                    }
                },
                "type": "object"
            }
        },
        "datadog:index/logsCustomDestination:LogsCustomDestination": {
            "description": "Provides a Datadog Logs Custom Destination API resource, which is used to create and manage Datadog log forwarding.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as datadog from \"@pulumi/datadog\";\n\nconst sampleDestination = new datadog.LogsCustomDestination(\"sample_destination\", {\n    name: \"sample destination\",\n    query: \"service:my-service\",\n    enabled: true,\n    httpDestination: {\n        endpoint: \"https://example.org\",\n        basicAuth: {\n            username: \"my-username\",\n            password: \"my-password\",\n        },\n    },\n});\n```\n```python\nimport pulumi\nimport pulumi_datadog as datadog\n\nsample_destination = datadog.LogsCustomDestination(\"sample_destination\",\n    name=\"sample destination\",\n    query=\"service:my-service\",\n    enabled=True,\n    http_destination={\n        \"endpoint\": \"https://example.org\",\n        \"basic_auth\": {\n            \"username\": \"my-username\",\n            \"password\": \"my-password\",\n        },\n    })\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Datadog = Pulumi.Datadog;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var sampleDestination = new Datadog.LogsCustomDestination(\"sample_destination\", new()\n    {\n        Name = \"sample destination\",\n        Query = \"service:my-service\",\n        Enabled = true,\n        HttpDestination = new Datadog.Inputs.LogsCustomDestinationHttpDestinationArgs\n        {\n            Endpoint = \"https://example.org\",\n            BasicAuth = new Datadog.Inputs.LogsCustomDestinationHttpDestinationBasicAuthArgs\n            {\n                Username = \"my-username\",\n                Password = \"my-password\",\n            },\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-datadog/sdk/v4/go/datadog\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := datadog.NewLogsCustomDestination(ctx, \"sample_destination\", \u0026datadog.LogsCustomDestinationArgs{\n\t\t\tName:    pulumi.String(\"sample destination\"),\n\t\t\tQuery:   pulumi.String(\"service:my-service\"),\n\t\t\tEnabled: pulumi.Bool(true),\n\t\t\tHttpDestination: \u0026datadog.LogsCustomDestinationHttpDestinationArgs{\n\t\t\t\tEndpoint: pulumi.String(\"https://example.org\"),\n\t\t\t\tBasicAuth: \u0026datadog.LogsCustomDestinationHttpDestinationBasicAuthArgs{\n\t\t\t\t\tUsername: pulumi.String(\"my-username\"),\n\t\t\t\t\tPassword: pulumi.String(\"my-password\"),\n\t\t\t\t},\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.datadog.LogsCustomDestination;\nimport com.pulumi.datadog.LogsCustomDestinationArgs;\nimport com.pulumi.datadog.inputs.LogsCustomDestinationHttpDestinationArgs;\nimport com.pulumi.datadog.inputs.LogsCustomDestinationHttpDestinationBasicAuthArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var sampleDestination = new LogsCustomDestination(\"sampleDestination\", LogsCustomDestinationArgs.builder()\n            .name(\"sample destination\")\n            .query(\"service:my-service\")\n            .enabled(true)\n            .httpDestination(LogsCustomDestinationHttpDestinationArgs.builder()\n                .endpoint(\"https://example.org\")\n                .basicAuth(LogsCustomDestinationHttpDestinationBasicAuthArgs.builder()\n                    .username(\"my-username\")\n                    .password(\"my-password\")\n                    .build())\n                .build())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  sampleDestination:\n    type: datadog:LogsCustomDestination\n    name: sample_destination\n    properties:\n      name: sample destination\n      query: service:my-service\n      enabled: true\n      httpDestination:\n        endpoint: https://example.org\n        basicAuth:\n          username: my-username\n          password: my-password\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\nCustom destinations can be imported using the destination ID. Caution: auth credentials can not be imported.\n\n```sh\n$ pulumi import datadog:index/logsCustomDestination:LogsCustomDestination sample_destination \"destination-id\"\n```\n\n",
            "properties": {
                "elasticsearchDestination": {
                    "$ref": "#/types/datadog:index/LogsCustomDestinationElasticsearchDestination:LogsCustomDestinationElasticsearchDestination",
                    "description": "The Elasticsearch destination.\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Whether logs matching this custom destination should be forwarded or not.\n"
                },
                "forwardTags": {
                    "type": "boolean",
                    "description": "Whether tags from the forwarded logs should be forwarded or not.\n"
                },
                "forwardTagsRestrictionListType": {
                    "type": "string",
                    "description": "How the `forward_tags_restriction_list` parameter should be interpreted.\n\t\t\tIf `ALLOW_LIST`, then only tags whose keys on the forwarded logs match the ones on the restriction list\n\t\t\tare forwarded.\n\t\t\t`BLOCK_LIST` works the opposite way. It does not forward the tags matching the ones on the list. Valid values are `ALLOW_LIST`, `BLOCK_LIST`.\n"
                },
                "forwardTagsRestrictionLists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of [tag keys](https://docs.datadoghq.com/getting_started/tagging/#define-tags) to be filtered.\n\t\t\tAn empty list represents no restriction is in place and either all or no tags will be\n\t\t\tforwarded depending on `forward_tags_restriction_list_type` parameter.\n"
                },
                "httpDestination": {
                    "$ref": "#/types/datadog:index/LogsCustomDestinationHttpDestination:LogsCustomDestinationHttpDestination",
                    "description": "The HTTP destination.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The custom destination name.\n"
                },
                "query": {
                    "type": "string",
                    "description": "The custom destination query filter. Logs matching this query are forwarded to the destination.\n"
                },
                "splunkDestination": {
                    "$ref": "#/types/datadog:index/LogsCustomDestinationSplunkDestination:LogsCustomDestinationSplunkDestination",
                    "description": "The Splunk HTTP Event Collector (HEC) destination.\n"
                }
            },
            "required": [
                "enabled",
                "forwardTags",
                "forwardTagsRestrictionLists",
                "forwardTagsRestrictionListType",
                "name",
                "query"
            ],
            "inputProperties": {
                "elasticsearchDestination": {
                    "$ref": "#/types/datadog:index/LogsCustomDestinationElasticsearchDestination:LogsCustomDestinationElasticsearchDestination",
                    "description": "The Elasticsearch destination.\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Whether logs matching this custom destination should be forwarded or not.\n"
                },
                "forwardTags": {
                    "type": "boolean",
                    "description": "Whether tags from the forwarded logs should be forwarded or not.\n"
                },
                "forwardTagsRestrictionListType": {
                    "type": "string",
                    "description": "How the `forward_tags_restriction_list` parameter should be interpreted.\n\t\t\tIf `ALLOW_LIST`, then only tags whose keys on the forwarded logs match the ones on the restriction list\n\t\t\tare forwarded.\n\t\t\t`BLOCK_LIST` works the opposite way. It does not forward the tags matching the ones on the list. Valid values are `ALLOW_LIST`, `BLOCK_LIST`.\n"
                },
                "forwardTagsRestrictionLists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of [tag keys](https://docs.datadoghq.com/getting_started/tagging/#define-tags) to be filtered.\n\t\t\tAn empty list represents no restriction is in place and either all or no tags will be\n\t\t\tforwarded depending on `forward_tags_restriction_list_type` parameter.\n"
                },
                "httpDestination": {
                    "$ref": "#/types/datadog:index/LogsCustomDestinationHttpDestination:LogsCustomDestinationHttpDestination",
                    "description": "The HTTP destination.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The custom destination name.\n"
                },
                "query": {
                    "type": "string",
                    "description": "The custom destination query filter. Logs matching this query are forwarded to the destination.\n"
                },
                "splunkDestination": {
                    "$ref": "#/types/datadog:index/LogsCustomDestinationSplunkDestination:LogsCustomDestinationSplunkDestination",
                    "description": "The Splunk HTTP Event Collector (HEC) destination.\n"
                }
            },
            "requiredInputs": [
                "name"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering LogsCustomDestination resources.\n",
                "properties": {
                    "elasticsearchDestination": {
                        "$ref": "#/types/datadog:index/LogsCustomDestinationElasticsearchDestination:LogsCustomDestinationElasticsearchDestination",
                        "description": "The Elasticsearch destination.\n"
                    },
                    "enabled": {
                        "type": "boolean",
                        "description": "Whether logs matching this custom destination should be forwarded or not.\n"
                    },
                    "forwardTags": {
                        "type": "boolean",
                        "description": "Whether tags from the forwarded logs should be forwarded or not.\n"
                    },
                    "forwardTagsRestrictionListType": {
                        "type": "string",
                        "description": "How the `forward_tags_restriction_list` parameter should be interpreted.\n\t\t\tIf `ALLOW_LIST`, then only tags whose keys on the forwarded logs match the ones on the restriction list\n\t\t\tare forwarded.\n\t\t\t`BLOCK_LIST` works the opposite way. It does not forward the tags matching the ones on the list. Valid values are `ALLOW_LIST`, `BLOCK_LIST`.\n"
                    },
                    "forwardTagsRestrictionLists": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of [tag keys](https://docs.datadoghq.com/getting_started/tagging/#define-tags) to be filtered.\n\t\t\tAn empty list represents no restriction is in place and either all or no tags will be\n\t\t\tforwarded depending on `forward_tags_restriction_list_type` parameter.\n"
                    },
                    "httpDestination": {
                        "$ref": "#/types/datadog:index/LogsCustomDestinationHttpDestination:LogsCustomDestinationHttpDestination",
                        "description": "The HTTP destination.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The custom destination name.\n"
                    },
                    "query": {
                        "type": "string",
                        "description": "The custom destination query filter. Logs matching this query are forwarded to the destination.\n"
                    },
                    "splunkDestination": {
                        "$ref": "#/types/datadog:index/LogsCustomDestinationSplunkDestination:LogsCustomDestinationSplunkDestination",
                        "description": "The Splunk HTTP Event Collector (HEC) destination.\n"
                    }
                },
                "type": "object"
            }
        },
        "datadog:index/logsCustomPipeline:LogsCustomPipeline": {
            "description": "Provides a Datadog [Logs Pipeline API](https://docs.datadoghq.com/api/v1/logs-pipelines/) resource, which is used to create and manage Datadog logs custom pipelines. Each `datadog.LogsCustomPipeline` resource defines a complete pipeline. The order of the pipelines is maintained in a different resource: `datadog.LogsPipelineOrder`. When creating a new pipeline, you need to **explicitly** add this pipeline to the `datadog.LogsPipelineOrder` resource to track the pipeline. Similarly, when a pipeline needs to be destroyed, remove its references from the `datadog.LogsPipelineOrder` resource.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as datadog from \"@pulumi/datadog\";\n\nconst samplePipeline = new datadog.LogsCustomPipeline(\"sample_pipeline\", {\n    filters: [{\n        query: \"source:foo\",\n    }],\n    name: \"sample pipeline\",\n    isEnabled: true,\n    processors: [\n        {\n            arithmeticProcessor: {\n                expression: \"(time1 - time2)*1000\",\n                target: \"my_arithmetic\",\n                isReplaceMissing: true,\n                name: \"sample arithmetic processor\",\n                isEnabled: true,\n            },\n        },\n        {\n            attributeRemapper: {\n                sources: [\"db.instance\"],\n                sourceType: \"tag\",\n                target: \"db\",\n                targetType: \"attribute\",\n                targetFormat: \"string\",\n                preserveSource: true,\n                overrideOnConflict: false,\n                name: \"sample attribute processor\",\n                isEnabled: true,\n            },\n        },\n        {\n            categoryProcessor: {\n                target: \"foo.severity\",\n                categories: [\n                    {\n                        name: \"debug\",\n                        filter: {\n                            query: \"@severity: \\\".\\\"\",\n                        },\n                    },\n                    {\n                        name: \"verbose\",\n                        filter: {\n                            query: \"@severity: \\\"-\\\"\",\n                        },\n                    },\n                ],\n                name: \"sample category processor\",\n                isEnabled: true,\n            },\n        },\n        {\n            dateRemapper: {\n                sources: [\n                    \"_timestamp\",\n                    \"published_date\",\n                ],\n                name: \"sample date remapper\",\n                isEnabled: true,\n            },\n        },\n        {\n            geoIpParser: {\n                sources: [\"network.client.ip\"],\n                target: \"network.client.geoip\",\n                name: \"sample geo ip parser\",\n                isEnabled: true,\n            },\n        },\n        {\n            grokParser: {\n                samples: [\"sample log 1\"],\n                source: \"message\",\n                grok: {\n                    supportRules: \"\",\n                    matchRules: \"Rule %{word:my_word2} %{number:my_float2}\",\n                },\n                name: \"sample grok parser\",\n                isEnabled: true,\n            },\n        },\n        {\n            lookupProcessor: {\n                source: \"service_id\",\n                target: \"service_name\",\n                lookupTables: [\"1,my service\"],\n                defaultLookup: \"unknown service\",\n                name: \"sample lookup processor\",\n                isEnabled: true,\n            },\n        },\n        {\n            messageRemapper: {\n                sources: [\"msg\"],\n                name: \"sample message remapper\",\n                isEnabled: true,\n            },\n        },\n        {\n            pipeline: {\n                filters: [{\n                    query: \"source:foo\",\n                }],\n                processors: [{\n                    urlParser: {\n                        name: \"sample url parser\",\n                        sources: [\n                            \"url\",\n                            \"extra\",\n                        ],\n                        target: \"http_url\",\n                        normalizeEndingSlashes: true,\n                    },\n                }],\n                name: \"nested pipeline\",\n                isEnabled: true,\n            },\n        },\n        {\n            serviceRemapper: {\n                sources: [\"service\"],\n                name: \"sample service remapper\",\n                isEnabled: true,\n            },\n        },\n        {\n            statusRemapper: {\n                sources: [\n                    \"info\",\n                    \"trace\",\n                ],\n                name: \"sample status remapper\",\n                isEnabled: true,\n            },\n        },\n        {\n            stringBuilderProcessor: {\n                target: \"user_activity\",\n                template: \"%{user.name} logged in at %{timestamp}\",\n                name: \"sample string builder processor\",\n                isEnabled: true,\n                isReplaceMissing: false,\n            },\n        },\n        {\n            traceIdRemapper: {\n                sources: [\"dd.trace_id\"],\n                name: \"sample trace id remapper\",\n                isEnabled: true,\n            },\n        },\n        {\n            userAgentParser: {\n                sources: [\n                    \"user\",\n                    \"agent\",\n                ],\n                target: \"http_agent\",\n                isEncoded: false,\n                name: \"sample user agent parser\",\n                isEnabled: true,\n            },\n        },\n    ],\n});\n```\n```python\nimport pulumi\nimport pulumi_datadog as datadog\n\nsample_pipeline = datadog.LogsCustomPipeline(\"sample_pipeline\",\n    filters=[{\n        \"query\": \"source:foo\",\n    }],\n    name=\"sample pipeline\",\n    is_enabled=True,\n    processors=[\n        {\n            \"arithmetic_processor\": {\n                \"expression\": \"(time1 - time2)*1000\",\n                \"target\": \"my_arithmetic\",\n                \"is_replace_missing\": True,\n                \"name\": \"sample arithmetic processor\",\n                \"is_enabled\": True,\n            },\n        },\n        {\n            \"attribute_remapper\": {\n                \"sources\": [\"db.instance\"],\n                \"source_type\": \"tag\",\n                \"target\": \"db\",\n                \"target_type\": \"attribute\",\n                \"target_format\": \"string\",\n                \"preserve_source\": True,\n                \"override_on_conflict\": False,\n                \"name\": \"sample attribute processor\",\n                \"is_enabled\": True,\n            },\n        },\n        {\n            \"category_processor\": {\n                \"target\": \"foo.severity\",\n                \"categories\": [\n                    {\n                        \"name\": \"debug\",\n                        \"filter\": {\n                            \"query\": \"@severity: \\\".\\\"\",\n                        },\n                    },\n                    {\n                        \"name\": \"verbose\",\n                        \"filter\": {\n                            \"query\": \"@severity: \\\"-\\\"\",\n                        },\n                    },\n                ],\n                \"name\": \"sample category processor\",\n                \"is_enabled\": True,\n            },\n        },\n        {\n            \"date_remapper\": {\n                \"sources\": [\n                    \"_timestamp\",\n                    \"published_date\",\n                ],\n                \"name\": \"sample date remapper\",\n                \"is_enabled\": True,\n            },\n        },\n        {\n            \"geo_ip_parser\": {\n                \"sources\": [\"network.client.ip\"],\n                \"target\": \"network.client.geoip\",\n                \"name\": \"sample geo ip parser\",\n                \"is_enabled\": True,\n            },\n        },\n        {\n            \"grok_parser\": {\n                \"samples\": [\"sample log 1\"],\n                \"source\": \"message\",\n                \"grok\": {\n                    \"support_rules\": \"\",\n                    \"match_rules\": \"Rule %{word:my_word2} %{number:my_float2}\",\n                },\n                \"name\": \"sample grok parser\",\n                \"is_enabled\": True,\n            },\n        },\n        {\n            \"lookup_processor\": {\n                \"source\": \"service_id\",\n                \"target\": \"service_name\",\n                \"lookup_tables\": [\"1,my service\"],\n                \"default_lookup\": \"unknown service\",\n                \"name\": \"sample lookup processor\",\n                \"is_enabled\": True,\n            },\n        },\n        {\n            \"message_remapper\": {\n                \"sources\": [\"msg\"],\n                \"name\": \"sample message remapper\",\n                \"is_enabled\": True,\n            },\n        },\n        {\n            \"pipeline\": {\n                \"filters\": [{\n                    \"query\": \"source:foo\",\n                }],\n                \"processors\": [{\n                    \"url_parser\": {\n                        \"name\": \"sample url parser\",\n                        \"sources\": [\n                            \"url\",\n                            \"extra\",\n                        ],\n                        \"target\": \"http_url\",\n                        \"normalize_ending_slashes\": True,\n                    },\n                }],\n                \"name\": \"nested pipeline\",\n                \"is_enabled\": True,\n            },\n        },\n        {\n            \"service_remapper\": {\n                \"sources\": [\"service\"],\n                \"name\": \"sample service remapper\",\n                \"is_enabled\": True,\n            },\n        },\n        {\n            \"status_remapper\": {\n                \"sources\": [\n                    \"info\",\n                    \"trace\",\n                ],\n                \"name\": \"sample status remapper\",\n                \"is_enabled\": True,\n            },\n        },\n        {\n            \"string_builder_processor\": {\n                \"target\": \"user_activity\",\n                \"template\": \"%{user.name} logged in at %{timestamp}\",\n                \"name\": \"sample string builder processor\",\n                \"is_enabled\": True,\n                \"is_replace_missing\": False,\n            },\n        },\n        {\n            \"trace_id_remapper\": {\n                \"sources\": [\"dd.trace_id\"],\n                \"name\": \"sample trace id remapper\",\n                \"is_enabled\": True,\n            },\n        },\n        {\n            \"user_agent_parser\": {\n                \"sources\": [\n                    \"user\",\n                    \"agent\",\n                ],\n                \"target\": \"http_agent\",\n                \"is_encoded\": False,\n                \"name\": \"sample user agent parser\",\n                \"is_enabled\": True,\n            },\n        },\n    ])\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Datadog = Pulumi.Datadog;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var samplePipeline = new Datadog.LogsCustomPipeline(\"sample_pipeline\", new()\n    {\n        Filters = new[]\n        {\n            new Datadog.Inputs.LogsCustomPipelineFilterArgs\n            {\n                Query = \"source:foo\",\n            },\n        },\n        Name = \"sample pipeline\",\n        IsEnabled = true,\n        Processors = new[]\n        {\n            new Datadog.Inputs.LogsCustomPipelineProcessorArgs\n            {\n                ArithmeticProcessor = new Datadog.Inputs.LogsCustomPipelineProcessorArithmeticProcessorArgs\n                {\n                    Expression = \"(time1 - time2)*1000\",\n                    Target = \"my_arithmetic\",\n                    IsReplaceMissing = true,\n                    Name = \"sample arithmetic processor\",\n                    IsEnabled = true,\n                },\n            },\n            new Datadog.Inputs.LogsCustomPipelineProcessorArgs\n            {\n                AttributeRemapper = new Datadog.Inputs.LogsCustomPipelineProcessorAttributeRemapperArgs\n                {\n                    Sources = new[]\n                    {\n                        \"db.instance\",\n                    },\n                    SourceType = \"tag\",\n                    Target = \"db\",\n                    TargetType = \"attribute\",\n                    TargetFormat = \"string\",\n                    PreserveSource = true,\n                    OverrideOnConflict = false,\n                    Name = \"sample attribute processor\",\n                    IsEnabled = true,\n                },\n            },\n            new Datadog.Inputs.LogsCustomPipelineProcessorArgs\n            {\n                CategoryProcessor = new Datadog.Inputs.LogsCustomPipelineProcessorCategoryProcessorArgs\n                {\n                    Target = \"foo.severity\",\n                    Categories = new[]\n                    {\n                        new Datadog.Inputs.LogsCustomPipelineProcessorCategoryProcessorCategoryArgs\n                        {\n                            Name = \"debug\",\n                            Filter = new Datadog.Inputs.LogsCustomPipelineProcessorCategoryProcessorCategoryFilterArgs\n                            {\n                                Query = \"@severity: \\\".\\\"\",\n                            },\n                        },\n                        new Datadog.Inputs.LogsCustomPipelineProcessorCategoryProcessorCategoryArgs\n                        {\n                            Name = \"verbose\",\n                            Filter = new Datadog.Inputs.LogsCustomPipelineProcessorCategoryProcessorCategoryFilterArgs\n                            {\n                                Query = \"@severity: \\\"-\\\"\",\n                            },\n                        },\n                    },\n                    Name = \"sample category processor\",\n                    IsEnabled = true,\n                },\n            },\n            new Datadog.Inputs.LogsCustomPipelineProcessorArgs\n            {\n                DateRemapper = new Datadog.Inputs.LogsCustomPipelineProcessorDateRemapperArgs\n                {\n                    Sources = new[]\n                    {\n                        \"_timestamp\",\n                        \"published_date\",\n                    },\n                    Name = \"sample date remapper\",\n                    IsEnabled = true,\n                },\n            },\n            new Datadog.Inputs.LogsCustomPipelineProcessorArgs\n            {\n                GeoIpParser = new Datadog.Inputs.LogsCustomPipelineProcessorGeoIpParserArgs\n                {\n                    Sources = new[]\n                    {\n                        \"network.client.ip\",\n                    },\n                    Target = \"network.client.geoip\",\n                    Name = \"sample geo ip parser\",\n                    IsEnabled = true,\n                },\n            },\n            new Datadog.Inputs.LogsCustomPipelineProcessorArgs\n            {\n                GrokParser = new Datadog.Inputs.LogsCustomPipelineProcessorGrokParserArgs\n                {\n                    Samples = new[]\n                    {\n                        \"sample log 1\",\n                    },\n                    Source = \"message\",\n                    Grok = new Datadog.Inputs.LogsCustomPipelineProcessorGrokParserGrokArgs\n                    {\n                        SupportRules = \"\",\n                        MatchRules = \"Rule %{word:my_word2} %{number:my_float2}\",\n                    },\n                    Name = \"sample grok parser\",\n                    IsEnabled = true,\n                },\n            },\n            new Datadog.Inputs.LogsCustomPipelineProcessorArgs\n            {\n                LookupProcessor = new Datadog.Inputs.LogsCustomPipelineProcessorLookupProcessorArgs\n                {\n                    Source = \"service_id\",\n                    Target = \"service_name\",\n                    LookupTables = new[]\n                    {\n                        \"1,my service\",\n                    },\n                    DefaultLookup = \"unknown service\",\n                    Name = \"sample lookup processor\",\n                    IsEnabled = true,\n                },\n            },\n            new Datadog.Inputs.LogsCustomPipelineProcessorArgs\n            {\n                MessageRemapper = new Datadog.Inputs.LogsCustomPipelineProcessorMessageRemapperArgs\n                {\n                    Sources = new[]\n                    {\n                        \"msg\",\n                    },\n                    Name = \"sample message remapper\",\n                    IsEnabled = true,\n                },\n            },\n            new Datadog.Inputs.LogsCustomPipelineProcessorArgs\n            {\n                Pipeline = new Datadog.Inputs.LogsCustomPipelineProcessorPipelineArgs\n                {\n                    Filters = new[]\n                    {\n                        new Datadog.Inputs.LogsCustomPipelineProcessorPipelineFilterArgs\n                        {\n                            Query = \"source:foo\",\n                        },\n                    },\n                    Processors = new[]\n                    {\n                        new Datadog.Inputs.LogsCustomPipelineProcessorPipelineProcessorArgs\n                        {\n                            UrlParser = new Datadog.Inputs.LogsCustomPipelineProcessorPipelineProcessorUrlParserArgs\n                            {\n                                Name = \"sample url parser\",\n                                Sources = new[]\n                                {\n                                    \"url\",\n                                    \"extra\",\n                                },\n                                Target = \"http_url\",\n                                NormalizeEndingSlashes = true,\n                            },\n                        },\n                    },\n                    Name = \"nested pipeline\",\n                    IsEnabled = true,\n                },\n            },\n            new Datadog.Inputs.LogsCustomPipelineProcessorArgs\n            {\n                ServiceRemapper = new Datadog.Inputs.LogsCustomPipelineProcessorServiceRemapperArgs\n                {\n                    Sources = new[]\n                    {\n                        \"service\",\n                    },\n                    Name = \"sample service remapper\",\n                    IsEnabled = true,\n                },\n            },\n            new Datadog.Inputs.LogsCustomPipelineProcessorArgs\n            {\n                StatusRemapper = new Datadog.Inputs.LogsCustomPipelineProcessorStatusRemapperArgs\n                {\n                    Sources = new[]\n                    {\n                        \"info\",\n                        \"trace\",\n                    },\n                    Name = \"sample status remapper\",\n                    IsEnabled = true,\n                },\n            },\n            new Datadog.Inputs.LogsCustomPipelineProcessorArgs\n            {\n                StringBuilderProcessor = new Datadog.Inputs.LogsCustomPipelineProcessorStringBuilderProcessorArgs\n                {\n                    Target = \"user_activity\",\n                    Template = \"%{user.name} logged in at %{timestamp}\",\n                    Name = \"sample string builder processor\",\n                    IsEnabled = true,\n                    IsReplaceMissing = false,\n                },\n            },\n            new Datadog.Inputs.LogsCustomPipelineProcessorArgs\n            {\n                TraceIdRemapper = new Datadog.Inputs.LogsCustomPipelineProcessorTraceIdRemapperArgs\n                {\n                    Sources = new[]\n                    {\n                        \"dd.trace_id\",\n                    },\n                    Name = \"sample trace id remapper\",\n                    IsEnabled = true,\n                },\n            },\n            new Datadog.Inputs.LogsCustomPipelineProcessorArgs\n            {\n                UserAgentParser = new Datadog.Inputs.LogsCustomPipelineProcessorUserAgentParserArgs\n                {\n                    Sources = new[]\n                    {\n                        \"user\",\n                        \"agent\",\n                    },\n                    Target = \"http_agent\",\n                    IsEncoded = false,\n                    Name = \"sample user agent parser\",\n                    IsEnabled = true,\n                },\n            },\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-datadog/sdk/v4/go/datadog\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := datadog.NewLogsCustomPipeline(ctx, \"sample_pipeline\", \u0026datadog.LogsCustomPipelineArgs{\n\t\t\tFilters: datadog.LogsCustomPipelineFilterArray{\n\t\t\t\t\u0026datadog.LogsCustomPipelineFilterArgs{\n\t\t\t\t\tQuery: pulumi.String(\"source:foo\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tName:      pulumi.String(\"sample pipeline\"),\n\t\t\tIsEnabled: pulumi.Bool(true),\n\t\t\tProcessors: datadog.LogsCustomPipelineProcessorArray{\n\t\t\t\t\u0026datadog.LogsCustomPipelineProcessorArgs{\n\t\t\t\t\tArithmeticProcessor: \u0026datadog.LogsCustomPipelineProcessorArithmeticProcessorArgs{\n\t\t\t\t\t\tExpression:       pulumi.String(\"(time1 - time2)*1000\"),\n\t\t\t\t\t\tTarget:           pulumi.String(\"my_arithmetic\"),\n\t\t\t\t\t\tIsReplaceMissing: pulumi.Bool(true),\n\t\t\t\t\t\tName:             pulumi.String(\"sample arithmetic processor\"),\n\t\t\t\t\t\tIsEnabled:        pulumi.Bool(true),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t\u0026datadog.LogsCustomPipelineProcessorArgs{\n\t\t\t\t\tAttributeRemapper: \u0026datadog.LogsCustomPipelineProcessorAttributeRemapperArgs{\n\t\t\t\t\t\tSources: pulumi.StringArray{\n\t\t\t\t\t\t\tpulumi.String(\"db.instance\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tSourceType:         pulumi.String(\"tag\"),\n\t\t\t\t\t\tTarget:             pulumi.String(\"db\"),\n\t\t\t\t\t\tTargetType:         pulumi.String(\"attribute\"),\n\t\t\t\t\t\tTargetFormat:       pulumi.String(\"string\"),\n\t\t\t\t\t\tPreserveSource:     pulumi.Bool(true),\n\t\t\t\t\t\tOverrideOnConflict: pulumi.Bool(false),\n\t\t\t\t\t\tName:               pulumi.String(\"sample attribute processor\"),\n\t\t\t\t\t\tIsEnabled:          pulumi.Bool(true),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t\u0026datadog.LogsCustomPipelineProcessorArgs{\n\t\t\t\t\tCategoryProcessor: \u0026datadog.LogsCustomPipelineProcessorCategoryProcessorArgs{\n\t\t\t\t\t\tTarget: pulumi.String(\"foo.severity\"),\n\t\t\t\t\t\tCategories: datadog.LogsCustomPipelineProcessorCategoryProcessorCategoryArray{\n\t\t\t\t\t\t\t\u0026datadog.LogsCustomPipelineProcessorCategoryProcessorCategoryArgs{\n\t\t\t\t\t\t\t\tName: pulumi.String(\"debug\"),\n\t\t\t\t\t\t\t\tFilter: \u0026datadog.LogsCustomPipelineProcessorCategoryProcessorCategoryFilterArgs{\n\t\t\t\t\t\t\t\t\tQuery: pulumi.String(\"@severity: \\\".\\\"\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\u0026datadog.LogsCustomPipelineProcessorCategoryProcessorCategoryArgs{\n\t\t\t\t\t\t\t\tName: pulumi.String(\"verbose\"),\n\t\t\t\t\t\t\t\tFilter: \u0026datadog.LogsCustomPipelineProcessorCategoryProcessorCategoryFilterArgs{\n\t\t\t\t\t\t\t\t\tQuery: pulumi.String(\"@severity: \\\"-\\\"\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\tName:      pulumi.String(\"sample category processor\"),\n\t\t\t\t\t\tIsEnabled: pulumi.Bool(true),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t\u0026datadog.LogsCustomPipelineProcessorArgs{\n\t\t\t\t\tDateRemapper: \u0026datadog.LogsCustomPipelineProcessorDateRemapperArgs{\n\t\t\t\t\t\tSources: pulumi.StringArray{\n\t\t\t\t\t\t\tpulumi.String(\"_timestamp\"),\n\t\t\t\t\t\t\tpulumi.String(\"published_date\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tName:      pulumi.String(\"sample date remapper\"),\n\t\t\t\t\t\tIsEnabled: pulumi.Bool(true),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t\u0026datadog.LogsCustomPipelineProcessorArgs{\n\t\t\t\t\tGeoIpParser: \u0026datadog.LogsCustomPipelineProcessorGeoIpParserArgs{\n\t\t\t\t\t\tSources: pulumi.StringArray{\n\t\t\t\t\t\t\tpulumi.String(\"network.client.ip\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tTarget:    pulumi.String(\"network.client.geoip\"),\n\t\t\t\t\t\tName:      pulumi.String(\"sample geo ip parser\"),\n\t\t\t\t\t\tIsEnabled: pulumi.Bool(true),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t\u0026datadog.LogsCustomPipelineProcessorArgs{\n\t\t\t\t\tGrokParser: \u0026datadog.LogsCustomPipelineProcessorGrokParserArgs{\n\t\t\t\t\t\tSamples: pulumi.StringArray{\n\t\t\t\t\t\t\tpulumi.String(\"sample log 1\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tSource: pulumi.String(\"message\"),\n\t\t\t\t\t\tGrok: \u0026datadog.LogsCustomPipelineProcessorGrokParserGrokArgs{\n\t\t\t\t\t\t\tSupportRules: pulumi.String(\"\"),\n\t\t\t\t\t\t\tMatchRules:   pulumi.String(\"Rule %{word:my_word2} %{number:my_float2}\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tName:      pulumi.String(\"sample grok parser\"),\n\t\t\t\t\t\tIsEnabled: pulumi.Bool(true),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t\u0026datadog.LogsCustomPipelineProcessorArgs{\n\t\t\t\t\tLookupProcessor: \u0026datadog.LogsCustomPipelineProcessorLookupProcessorArgs{\n\t\t\t\t\t\tSource: pulumi.String(\"service_id\"),\n\t\t\t\t\t\tTarget: pulumi.String(\"service_name\"),\n\t\t\t\t\t\tLookupTables: pulumi.StringArray{\n\t\t\t\t\t\t\tpulumi.String(\"1,my service\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tDefaultLookup: pulumi.String(\"unknown service\"),\n\t\t\t\t\t\tName:          pulumi.String(\"sample lookup processor\"),\n\t\t\t\t\t\tIsEnabled:     pulumi.Bool(true),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t\u0026datadog.LogsCustomPipelineProcessorArgs{\n\t\t\t\t\tMessageRemapper: \u0026datadog.LogsCustomPipelineProcessorMessageRemapperArgs{\n\t\t\t\t\t\tSources: pulumi.StringArray{\n\t\t\t\t\t\t\tpulumi.String(\"msg\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tName:      pulumi.String(\"sample message remapper\"),\n\t\t\t\t\t\tIsEnabled: pulumi.Bool(true),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t\u0026datadog.LogsCustomPipelineProcessorArgs{\n\t\t\t\t\tPipeline: \u0026datadog.LogsCustomPipelineProcessorPipelineArgs{\n\t\t\t\t\t\tFilters: datadog.LogsCustomPipelineProcessorPipelineFilterArray{\n\t\t\t\t\t\t\t\u0026datadog.LogsCustomPipelineProcessorPipelineFilterArgs{\n\t\t\t\t\t\t\t\tQuery: pulumi.String(\"source:foo\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\tProcessors: datadog.LogsCustomPipelineProcessorPipelineProcessorArray{\n\t\t\t\t\t\t\t\u0026datadog.LogsCustomPipelineProcessorPipelineProcessorArgs{\n\t\t\t\t\t\t\t\tUrlParser: \u0026datadog.LogsCustomPipelineProcessorPipelineProcessorUrlParserArgs{\n\t\t\t\t\t\t\t\t\tName: pulumi.String(\"sample url parser\"),\n\t\t\t\t\t\t\t\t\tSources: pulumi.StringArray{\n\t\t\t\t\t\t\t\t\t\tpulumi.String(\"url\"),\n\t\t\t\t\t\t\t\t\t\tpulumi.String(\"extra\"),\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\tTarget:                 pulumi.String(\"http_url\"),\n\t\t\t\t\t\t\t\t\tNormalizeEndingSlashes: pulumi.Bool(true),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\tName:      pulumi.String(\"nested pipeline\"),\n\t\t\t\t\t\tIsEnabled: pulumi.Bool(true),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t\u0026datadog.LogsCustomPipelineProcessorArgs{\n\t\t\t\t\tServiceRemapper: \u0026datadog.LogsCustomPipelineProcessorServiceRemapperArgs{\n\t\t\t\t\t\tSources: pulumi.StringArray{\n\t\t\t\t\t\t\tpulumi.String(\"service\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tName:      pulumi.String(\"sample service remapper\"),\n\t\t\t\t\t\tIsEnabled: pulumi.Bool(true),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t\u0026datadog.LogsCustomPipelineProcessorArgs{\n\t\t\t\t\tStatusRemapper: \u0026datadog.LogsCustomPipelineProcessorStatusRemapperArgs{\n\t\t\t\t\t\tSources: pulumi.StringArray{\n\t\t\t\t\t\t\tpulumi.String(\"info\"),\n\t\t\t\t\t\t\tpulumi.String(\"trace\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tName:      pulumi.String(\"sample status remapper\"),\n\t\t\t\t\t\tIsEnabled: pulumi.Bool(true),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t\u0026datadog.LogsCustomPipelineProcessorArgs{\n\t\t\t\t\tStringBuilderProcessor: \u0026datadog.LogsCustomPipelineProcessorStringBuilderProcessorArgs{\n\t\t\t\t\t\tTarget:           pulumi.String(\"user_activity\"),\n\t\t\t\t\t\tTemplate:         pulumi.String(\"%{user.name} logged in at %{timestamp}\"),\n\t\t\t\t\t\tName:             pulumi.String(\"sample string builder processor\"),\n\t\t\t\t\t\tIsEnabled:        pulumi.Bool(true),\n\t\t\t\t\t\tIsReplaceMissing: pulumi.Bool(false),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t\u0026datadog.LogsCustomPipelineProcessorArgs{\n\t\t\t\t\tTraceIdRemapper: \u0026datadog.LogsCustomPipelineProcessorTraceIdRemapperArgs{\n\t\t\t\t\t\tSources: pulumi.StringArray{\n\t\t\t\t\t\t\tpulumi.String(\"dd.trace_id\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tName:      pulumi.String(\"sample trace id remapper\"),\n\t\t\t\t\t\tIsEnabled: pulumi.Bool(true),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t\u0026datadog.LogsCustomPipelineProcessorArgs{\n\t\t\t\t\tUserAgentParser: \u0026datadog.LogsCustomPipelineProcessorUserAgentParserArgs{\n\t\t\t\t\t\tSources: pulumi.StringArray{\n\t\t\t\t\t\t\tpulumi.String(\"user\"),\n\t\t\t\t\t\t\tpulumi.String(\"agent\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tTarget:    pulumi.String(\"http_agent\"),\n\t\t\t\t\t\tIsEncoded: pulumi.Bool(false),\n\t\t\t\t\t\tName:      pulumi.String(\"sample user agent parser\"),\n\t\t\t\t\t\tIsEnabled: pulumi.Bool(true),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.datadog.LogsCustomPipeline;\nimport com.pulumi.datadog.LogsCustomPipelineArgs;\nimport com.pulumi.datadog.inputs.LogsCustomPipelineFilterArgs;\nimport com.pulumi.datadog.inputs.LogsCustomPipelineProcessorArgs;\nimport com.pulumi.datadog.inputs.LogsCustomPipelineProcessorArithmeticProcessorArgs;\nimport com.pulumi.datadog.inputs.LogsCustomPipelineProcessorAttributeRemapperArgs;\nimport com.pulumi.datadog.inputs.LogsCustomPipelineProcessorCategoryProcessorArgs;\nimport com.pulumi.datadog.inputs.LogsCustomPipelineProcessorDateRemapperArgs;\nimport com.pulumi.datadog.inputs.LogsCustomPipelineProcessorGeoIpParserArgs;\nimport com.pulumi.datadog.inputs.LogsCustomPipelineProcessorGrokParserArgs;\nimport com.pulumi.datadog.inputs.LogsCustomPipelineProcessorGrokParserGrokArgs;\nimport com.pulumi.datadog.inputs.LogsCustomPipelineProcessorLookupProcessorArgs;\nimport com.pulumi.datadog.inputs.LogsCustomPipelineProcessorMessageRemapperArgs;\nimport com.pulumi.datadog.inputs.LogsCustomPipelineProcessorPipelineArgs;\nimport com.pulumi.datadog.inputs.LogsCustomPipelineProcessorServiceRemapperArgs;\nimport com.pulumi.datadog.inputs.LogsCustomPipelineProcessorStatusRemapperArgs;\nimport com.pulumi.datadog.inputs.LogsCustomPipelineProcessorStringBuilderProcessorArgs;\nimport com.pulumi.datadog.inputs.LogsCustomPipelineProcessorTraceIdRemapperArgs;\nimport com.pulumi.datadog.inputs.LogsCustomPipelineProcessorUserAgentParserArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var samplePipeline = new LogsCustomPipeline(\"samplePipeline\", LogsCustomPipelineArgs.builder()\n            .filters(LogsCustomPipelineFilterArgs.builder()\n                .query(\"source:foo\")\n                .build())\n            .name(\"sample pipeline\")\n            .isEnabled(true)\n            .processors(            \n                LogsCustomPipelineProcessorArgs.builder()\n                    .arithmeticProcessor(LogsCustomPipelineProcessorArithmeticProcessorArgs.builder()\n                        .expression(\"(time1 - time2)*1000\")\n                        .target(\"my_arithmetic\")\n                        .isReplaceMissing(true)\n                        .name(\"sample arithmetic processor\")\n                        .isEnabled(true)\n                        .build())\n                    .build(),\n                LogsCustomPipelineProcessorArgs.builder()\n                    .attributeRemapper(LogsCustomPipelineProcessorAttributeRemapperArgs.builder()\n                        .sources(\"db.instance\")\n                        .sourceType(\"tag\")\n                        .target(\"db\")\n                        .targetType(\"attribute\")\n                        .targetFormat(\"string\")\n                        .preserveSource(true)\n                        .overrideOnConflict(false)\n                        .name(\"sample attribute processor\")\n                        .isEnabled(true)\n                        .build())\n                    .build(),\n                LogsCustomPipelineProcessorArgs.builder()\n                    .categoryProcessor(LogsCustomPipelineProcessorCategoryProcessorArgs.builder()\n                        .target(\"foo.severity\")\n                        .categories(                        \n                            LogsCustomPipelineProcessorCategoryProcessorCategoryArgs.builder()\n                                .name(\"debug\")\n                                .filter(LogsCustomPipelineProcessorCategoryProcessorCategoryFilterArgs.builder()\n                                    .query(\"@severity: \\\".\\\"\")\n                                    .build())\n                                .build(),\n                            LogsCustomPipelineProcessorCategoryProcessorCategoryArgs.builder()\n                                .name(\"verbose\")\n                                .filter(LogsCustomPipelineProcessorCategoryProcessorCategoryFilterArgs.builder()\n                                    .query(\"@severity: \\\"-\\\"\")\n                                    .build())\n                                .build())\n                        .name(\"sample category processor\")\n                        .isEnabled(true)\n                        .build())\n                    .build(),\n                LogsCustomPipelineProcessorArgs.builder()\n                    .dateRemapper(LogsCustomPipelineProcessorDateRemapperArgs.builder()\n                        .sources(                        \n                            \"_timestamp\",\n                            \"published_date\")\n                        .name(\"sample date remapper\")\n                        .isEnabled(true)\n                        .build())\n                    .build(),\n                LogsCustomPipelineProcessorArgs.builder()\n                    .geoIpParser(LogsCustomPipelineProcessorGeoIpParserArgs.builder()\n                        .sources(\"network.client.ip\")\n                        .target(\"network.client.geoip\")\n                        .name(\"sample geo ip parser\")\n                        .isEnabled(true)\n                        .build())\n                    .build(),\n                LogsCustomPipelineProcessorArgs.builder()\n                    .grokParser(LogsCustomPipelineProcessorGrokParserArgs.builder()\n                        .samples(\"sample log 1\")\n                        .source(\"message\")\n                        .grok(LogsCustomPipelineProcessorGrokParserGrokArgs.builder()\n                            .supportRules(\"\")\n                            .matchRules(\"Rule %{word:my_word2} %{number:my_float2}\")\n                            .build())\n                        .name(\"sample grok parser\")\n                        .isEnabled(true)\n                        .build())\n                    .build(),\n                LogsCustomPipelineProcessorArgs.builder()\n                    .lookupProcessor(LogsCustomPipelineProcessorLookupProcessorArgs.builder()\n                        .source(\"service_id\")\n                        .target(\"service_name\")\n                        .lookupTables(\"1,my service\")\n                        .defaultLookup(\"unknown service\")\n                        .name(\"sample lookup processor\")\n                        .isEnabled(true)\n                        .build())\n                    .build(),\n                LogsCustomPipelineProcessorArgs.builder()\n                    .messageRemapper(LogsCustomPipelineProcessorMessageRemapperArgs.builder()\n                        .sources(\"msg\")\n                        .name(\"sample message remapper\")\n                        .isEnabled(true)\n                        .build())\n                    .build(),\n                LogsCustomPipelineProcessorArgs.builder()\n                    .pipeline(LogsCustomPipelineProcessorPipelineArgs.builder()\n                        .filters(LogsCustomPipelineProcessorPipelineFilterArgs.builder()\n                            .query(\"source:foo\")\n                            .build())\n                        .processors(LogsCustomPipelineProcessorPipelineProcessorArgs.builder()\n                            .urlParser(LogsCustomPipelineProcessorPipelineProcessorUrlParserArgs.builder()\n                                .name(\"sample url parser\")\n                                .sources(                                \n                                    \"url\",\n                                    \"extra\")\n                                .target(\"http_url\")\n                                .normalizeEndingSlashes(true)\n                                .build())\n                            .build())\n                        .name(\"nested pipeline\")\n                        .isEnabled(true)\n                        .build())\n                    .build(),\n                LogsCustomPipelineProcessorArgs.builder()\n                    .serviceRemapper(LogsCustomPipelineProcessorServiceRemapperArgs.builder()\n                        .sources(\"service\")\n                        .name(\"sample service remapper\")\n                        .isEnabled(true)\n                        .build())\n                    .build(),\n                LogsCustomPipelineProcessorArgs.builder()\n                    .statusRemapper(LogsCustomPipelineProcessorStatusRemapperArgs.builder()\n                        .sources(                        \n                            \"info\",\n                            \"trace\")\n                        .name(\"sample status remapper\")\n                        .isEnabled(true)\n                        .build())\n                    .build(),\n                LogsCustomPipelineProcessorArgs.builder()\n                    .stringBuilderProcessor(LogsCustomPipelineProcessorStringBuilderProcessorArgs.builder()\n                        .target(\"user_activity\")\n                        .template(\"%{user.name} logged in at %{timestamp}\")\n                        .name(\"sample string builder processor\")\n                        .isEnabled(true)\n                        .isReplaceMissing(false)\n                        .build())\n                    .build(),\n                LogsCustomPipelineProcessorArgs.builder()\n                    .traceIdRemapper(LogsCustomPipelineProcessorTraceIdRemapperArgs.builder()\n                        .sources(\"dd.trace_id\")\n                        .name(\"sample trace id remapper\")\n                        .isEnabled(true)\n                        .build())\n                    .build(),\n                LogsCustomPipelineProcessorArgs.builder()\n                    .userAgentParser(LogsCustomPipelineProcessorUserAgentParserArgs.builder()\n                        .sources(                        \n                            \"user\",\n                            \"agent\")\n                        .target(\"http_agent\")\n                        .isEncoded(false)\n                        .name(\"sample user agent parser\")\n                        .isEnabled(true)\n                        .build())\n                    .build())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  samplePipeline:\n    type: datadog:LogsCustomPipeline\n    name: sample_pipeline\n    properties:\n      filters:\n        - query: source:foo\n      name: sample pipeline\n      isEnabled: true\n      processors:\n        - arithmeticProcessor:\n            expression: (time1 - time2)*1000\n            target: my_arithmetic\n            isReplaceMissing: true\n            name: sample arithmetic processor\n            isEnabled: true\n        - attributeRemapper:\n            sources:\n              - db.instance\n            sourceType: tag\n            target: db\n            targetType: attribute\n            targetFormat: string\n            preserveSource: true\n            overrideOnConflict: false\n            name: sample attribute processor\n            isEnabled: true\n        - categoryProcessor:\n            target: foo.severity\n            categories:\n              - name: debug\n                filter:\n                  query: '@severity: \".\"'\n              - name: verbose\n                filter:\n                  query: '@severity: \"-\"'\n            name: sample category processor\n            isEnabled: true\n        - dateRemapper:\n            sources:\n              - _timestamp\n              - published_date\n            name: sample date remapper\n            isEnabled: true\n        - geoIpParser:\n            sources:\n              - network.client.ip\n            target: network.client.geoip\n            name: sample geo ip parser\n            isEnabled: true\n        - grokParser:\n            samples:\n              - sample log 1\n            source: message\n            grok:\n              supportRules:\n              matchRules: Rule %{word:my_word2} %{number:my_float2}\n            name: sample grok parser\n            isEnabled: true\n        - lookupProcessor:\n            source: service_id\n            target: service_name\n            lookupTables:\n              - 1,my service\n            defaultLookup: unknown service\n            name: sample lookup processor\n            isEnabled: true\n        - messageRemapper:\n            sources:\n              - msg\n            name: sample message remapper\n            isEnabled: true\n        - pipeline:\n            filters:\n              - query: source:foo\n            processors:\n              - urlParser:\n                  name: sample url parser\n                  sources:\n                    - url\n                    - extra\n                  target: http_url\n                  normalizeEndingSlashes: true\n            name: nested pipeline\n            isEnabled: true\n        - serviceRemapper:\n            sources:\n              - service\n            name: sample service remapper\n            isEnabled: true\n        - statusRemapper:\n            sources:\n              - info\n              - trace\n            name: sample status remapper\n            isEnabled: true\n        - stringBuilderProcessor:\n            target: user_activity\n            template: '%{user.name} logged in at %{timestamp}'\n            name: sample string builder processor\n            isEnabled: true\n            isReplaceMissing: false\n        - traceIdRemapper:\n            sources:\n              - dd.trace_id\n            name: sample trace id remapper\n            isEnabled: true\n        - userAgentParser:\n            sources:\n              - user\n              - agent\n            target: http_agent\n            isEncoded: false\n            name: sample user agent parser\n            isEnabled: true\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\nTo find the pipeline ID, click the \"edit\" button in the UI to open the pipeline details.\n\nThe pipeline ID is the last part of the URL.\n\n```sh\n$ pulumi import datadog:index/logsCustomPipeline:LogsCustomPipeline name\u003e \u003cpipelineID\u003e\n```\n\n",
            "properties": {
                "filters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/LogsCustomPipelineFilter:LogsCustomPipelineFilter"
                    }
                },
                "isEnabled": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "processors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/LogsCustomPipelineProcessor:LogsCustomPipelineProcessor"
                    }
                }
            },
            "required": [
                "filters",
                "name"
            ],
            "inputProperties": {
                "filters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/LogsCustomPipelineFilter:LogsCustomPipelineFilter"
                    }
                },
                "isEnabled": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "processors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/LogsCustomPipelineProcessor:LogsCustomPipelineProcessor"
                    }
                }
            },
            "requiredInputs": [
                "filters",
                "name"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering LogsCustomPipeline resources.\n",
                "properties": {
                    "filters": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/datadog:index/LogsCustomPipelineFilter:LogsCustomPipelineFilter"
                        }
                    },
                    "isEnabled": {
                        "type": "boolean"
                    },
                    "name": {
                        "type": "string"
                    },
                    "processors": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/datadog:index/LogsCustomPipelineProcessor:LogsCustomPipelineProcessor"
                        }
                    }
                },
                "type": "object"
            }
        },
        "datadog:index/logsIndex:LogsIndex": {
            "description": "## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as datadog from \"@pulumi/datadog\";\n\n// A sample Datadog logs index resource definition.\nconst sampleIndex = new datadog.LogsIndex(\"sample_index\", {\n    name: \"your index\",\n    dailyLimit: 200000,\n    dailyLimitReset: {\n        resetTime: \"14:00\",\n        resetUtcOffset: \"+02:00\",\n    },\n    dailyLimitWarningThresholdPercentage: 50,\n    retentionDays: 7,\n    filters: [{\n        query: \"*\",\n    }],\n    exclusionFilters: [\n        {\n            name: \"Filter coredns logs\",\n            isEnabled: true,\n            filters: [{\n                query: \"app:coredns\",\n                sampleRate: 0.97,\n            }],\n        },\n        {\n            name: \"Kubernetes apiserver\",\n            isEnabled: true,\n            filters: [{\n                query: \"service:kube_apiserver\",\n                sampleRate: 1,\n            }],\n        },\n    ],\n});\n```\n```python\nimport pulumi\nimport pulumi_datadog as datadog\n\n# A sample Datadog logs index resource definition.\nsample_index = datadog.LogsIndex(\"sample_index\",\n    name=\"your index\",\n    daily_limit=200000,\n    daily_limit_reset={\n        \"reset_time\": \"14:00\",\n        \"reset_utc_offset\": \"+02:00\",\n    },\n    daily_limit_warning_threshold_percentage=50,\n    retention_days=7,\n    filters=[{\n        \"query\": \"*\",\n    }],\n    exclusion_filters=[\n        {\n            \"name\": \"Filter coredns logs\",\n            \"is_enabled\": True,\n            \"filters\": [{\n                \"query\": \"app:coredns\",\n                \"sample_rate\": 0.97,\n            }],\n        },\n        {\n            \"name\": \"Kubernetes apiserver\",\n            \"is_enabled\": True,\n            \"filters\": [{\n                \"query\": \"service:kube_apiserver\",\n                \"sample_rate\": 1,\n            }],\n        },\n    ])\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Datadog = Pulumi.Datadog;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    // A sample Datadog logs index resource definition.\n    var sampleIndex = new Datadog.LogsIndex(\"sample_index\", new()\n    {\n        Name = \"your index\",\n        DailyLimit = 200000,\n        DailyLimitReset = new Datadog.Inputs.LogsIndexDailyLimitResetArgs\n        {\n            ResetTime = \"14:00\",\n            ResetUtcOffset = \"+02:00\",\n        },\n        DailyLimitWarningThresholdPercentage = 50,\n        RetentionDays = 7,\n        Filters = new[]\n        {\n            new Datadog.Inputs.LogsIndexFilterArgs\n            {\n                Query = \"*\",\n            },\n        },\n        ExclusionFilters = new[]\n        {\n            new Datadog.Inputs.LogsIndexExclusionFilterArgs\n            {\n                Name = \"Filter coredns logs\",\n                IsEnabled = true,\n                Filters = new[]\n                {\n                    new Datadog.Inputs.LogsIndexExclusionFilterFilterArgs\n                    {\n                        Query = \"app:coredns\",\n                        SampleRate = 0.97,\n                    },\n                },\n            },\n            new Datadog.Inputs.LogsIndexExclusionFilterArgs\n            {\n                Name = \"Kubernetes apiserver\",\n                IsEnabled = true,\n                Filters = new[]\n                {\n                    new Datadog.Inputs.LogsIndexExclusionFilterFilterArgs\n                    {\n                        Query = \"service:kube_apiserver\",\n                        SampleRate = 1,\n                    },\n                },\n            },\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-datadog/sdk/v4/go/datadog\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t// A sample Datadog logs index resource definition.\n\t\t_, err := datadog.NewLogsIndex(ctx, \"sample_index\", \u0026datadog.LogsIndexArgs{\n\t\t\tName:       pulumi.String(\"your index\"),\n\t\t\tDailyLimit: pulumi.Int(200000),\n\t\t\tDailyLimitReset: \u0026datadog.LogsIndexDailyLimitResetArgs{\n\t\t\t\tResetTime:      pulumi.String(\"14:00\"),\n\t\t\t\tResetUtcOffset: pulumi.String(\"+02:00\"),\n\t\t\t},\n\t\t\tDailyLimitWarningThresholdPercentage: pulumi.Float64(50),\n\t\t\tRetentionDays:                        pulumi.Int(7),\n\t\t\tFilters: datadog.LogsIndexFilterArray{\n\t\t\t\t\u0026datadog.LogsIndexFilterArgs{\n\t\t\t\t\tQuery: pulumi.String(\"*\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tExclusionFilters: datadog.LogsIndexExclusionFilterArray{\n\t\t\t\t\u0026datadog.LogsIndexExclusionFilterArgs{\n\t\t\t\t\tName:      pulumi.String(\"Filter coredns logs\"),\n\t\t\t\t\tIsEnabled: pulumi.Bool(true),\n\t\t\t\t\tFilters: datadog.LogsIndexExclusionFilterFilterArray{\n\t\t\t\t\t\t\u0026datadog.LogsIndexExclusionFilterFilterArgs{\n\t\t\t\t\t\t\tQuery:      pulumi.String(\"app:coredns\"),\n\t\t\t\t\t\t\tSampleRate: pulumi.Float64(0.97),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t\u0026datadog.LogsIndexExclusionFilterArgs{\n\t\t\t\t\tName:      pulumi.String(\"Kubernetes apiserver\"),\n\t\t\t\t\tIsEnabled: pulumi.Bool(true),\n\t\t\t\t\tFilters: datadog.LogsIndexExclusionFilterFilterArray{\n\t\t\t\t\t\t\u0026datadog.LogsIndexExclusionFilterFilterArgs{\n\t\t\t\t\t\t\tQuery:      pulumi.String(\"service:kube_apiserver\"),\n\t\t\t\t\t\t\tSampleRate: pulumi.Float64(1),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.datadog.LogsIndex;\nimport com.pulumi.datadog.LogsIndexArgs;\nimport com.pulumi.datadog.inputs.LogsIndexDailyLimitResetArgs;\nimport com.pulumi.datadog.inputs.LogsIndexFilterArgs;\nimport com.pulumi.datadog.inputs.LogsIndexExclusionFilterArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        // A sample Datadog logs index resource definition.\n        var sampleIndex = new LogsIndex(\"sampleIndex\", LogsIndexArgs.builder()\n            .name(\"your index\")\n            .dailyLimit(200000)\n            .dailyLimitReset(LogsIndexDailyLimitResetArgs.builder()\n                .resetTime(\"14:00\")\n                .resetUtcOffset(\"+02:00\")\n                .build())\n            .dailyLimitWarningThresholdPercentage(50)\n            .retentionDays(7)\n            .filters(LogsIndexFilterArgs.builder()\n                .query(\"*\")\n                .build())\n            .exclusionFilters(            \n                LogsIndexExclusionFilterArgs.builder()\n                    .name(\"Filter coredns logs\")\n                    .isEnabled(true)\n                    .filters(LogsIndexExclusionFilterFilterArgs.builder()\n                        .query(\"app:coredns\")\n                        .sampleRate(0.97)\n                        .build())\n                    .build(),\n                LogsIndexExclusionFilterArgs.builder()\n                    .name(\"Kubernetes apiserver\")\n                    .isEnabled(true)\n                    .filters(LogsIndexExclusionFilterFilterArgs.builder()\n                        .query(\"service:kube_apiserver\")\n                        .sampleRate(1)\n                        .build())\n                    .build())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  # A sample Datadog logs index resource definition.\n  sampleIndex:\n    type: datadog:LogsIndex\n    name: sample_index\n    properties:\n      name: your index\n      dailyLimit: 200000\n      dailyLimitReset:\n        resetTime: 14:00\n        resetUtcOffset: +02:00\n      dailyLimitWarningThresholdPercentage: 50\n      retentionDays: 7\n      filters:\n        - query: '*'\n      exclusionFilters:\n        - name: Filter coredns logs\n          isEnabled: true\n          filters:\n            - query: app:coredns\n              sampleRate: 0.97\n        - name: Kubernetes apiserver\n          isEnabled: true\n          filters:\n            - query: service:kube_apiserver\n              sampleRate: 1\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\n```sh\n$ pulumi import datadog:index/logsIndex:LogsIndex name\u003e \u003cindexName\u003e\n```\n\n",
            "properties": {
                "dailyLimit": {
                    "type": "integer",
                    "description": "The number of log events you can send in this index per day before you are rate-limited.\n"
                },
                "dailyLimitReset": {
                    "$ref": "#/types/datadog:index/LogsIndexDailyLimitReset:LogsIndexDailyLimitReset",
                    "description": "Object containing options to override the default daily limit reset time.\n"
                },
                "dailyLimitWarningThresholdPercentage": {
                    "type": "number",
                    "description": "A percentage threshold of the daily quota at which a Datadog warning event is generated.\n"
                },
                "disableDailyLimit": {
                    "type": "boolean",
                    "description": "If true, sets the daily*limit value to null and the index is not limited on a daily basis (any specified daily*limit value in the request is ignored). If false or omitted, the index's current daily_limit is maintained.\n"
                },
                "exclusionFilters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/LogsIndexExclusionFilter:LogsIndexExclusionFilter"
                    },
                    "description": "List of exclusion filters.\n"
                },
                "filters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/LogsIndexFilter:LogsIndexFilter"
                    },
                    "description": "Logs filter\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the index. Index names cannot be modified after creation. If this value is changed, a new index will be created.\n"
                },
                "retentionDays": {
                    "type": "integer",
                    "description": "The number of days before logs are deleted from this index.\n"
                }
            },
            "required": [
                "dailyLimitReset",
                "dailyLimitWarningThresholdPercentage",
                "disableDailyLimit",
                "filters",
                "name",
                "retentionDays"
            ],
            "inputProperties": {
                "dailyLimit": {
                    "type": "integer",
                    "description": "The number of log events you can send in this index per day before you are rate-limited.\n"
                },
                "dailyLimitReset": {
                    "$ref": "#/types/datadog:index/LogsIndexDailyLimitReset:LogsIndexDailyLimitReset",
                    "description": "Object containing options to override the default daily limit reset time.\n"
                },
                "dailyLimitWarningThresholdPercentage": {
                    "type": "number",
                    "description": "A percentage threshold of the daily quota at which a Datadog warning event is generated.\n"
                },
                "disableDailyLimit": {
                    "type": "boolean",
                    "description": "If true, sets the daily*limit value to null and the index is not limited on a daily basis (any specified daily*limit value in the request is ignored). If false or omitted, the index's current daily_limit is maintained.\n"
                },
                "exclusionFilters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/LogsIndexExclusionFilter:LogsIndexExclusionFilter"
                    },
                    "description": "List of exclusion filters.\n"
                },
                "filters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/LogsIndexFilter:LogsIndexFilter"
                    },
                    "description": "Logs filter\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the index. Index names cannot be modified after creation. If this value is changed, a new index will be created.\n",
                    "willReplaceOnChanges": true
                },
                "retentionDays": {
                    "type": "integer",
                    "description": "The number of days before logs are deleted from this index.\n"
                }
            },
            "requiredInputs": [
                "filters",
                "name"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering LogsIndex resources.\n",
                "properties": {
                    "dailyLimit": {
                        "type": "integer",
                        "description": "The number of log events you can send in this index per day before you are rate-limited.\n"
                    },
                    "dailyLimitReset": {
                        "$ref": "#/types/datadog:index/LogsIndexDailyLimitReset:LogsIndexDailyLimitReset",
                        "description": "Object containing options to override the default daily limit reset time.\n"
                    },
                    "dailyLimitWarningThresholdPercentage": {
                        "type": "number",
                        "description": "A percentage threshold of the daily quota at which a Datadog warning event is generated.\n"
                    },
                    "disableDailyLimit": {
                        "type": "boolean",
                        "description": "If true, sets the daily*limit value to null and the index is not limited on a daily basis (any specified daily*limit value in the request is ignored). If false or omitted, the index's current daily_limit is maintained.\n"
                    },
                    "exclusionFilters": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/datadog:index/LogsIndexExclusionFilter:LogsIndexExclusionFilter"
                        },
                        "description": "List of exclusion filters.\n"
                    },
                    "filters": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/datadog:index/LogsIndexFilter:LogsIndexFilter"
                        },
                        "description": "Logs filter\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the index. Index names cannot be modified after creation. If this value is changed, a new index will be created.\n",
                        "willReplaceOnChanges": true
                    },
                    "retentionDays": {
                        "type": "integer",
                        "description": "The number of days before logs are deleted from this index.\n"
                    }
                },
                "type": "object"
            }
        },
        "datadog:index/logsIndexOrder:LogsIndexOrder": {
            "description": "Provides a Datadog Logs Index API resource. This can be used to manage the order of Datadog logs indexes.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as datadog from \"@pulumi/datadog\";\n\nconst sampleIndexOrder = new datadog.LogsIndexOrder(\"sample_index_order\", {\n    name: \"sample_index_order\",\n    indexes: [sampleIndex.id],\n});\n```\n```python\nimport pulumi\nimport pulumi_datadog as datadog\n\nsample_index_order = datadog.LogsIndexOrder(\"sample_index_order\",\n    name=\"sample_index_order\",\n    indexes=[sample_index[\"id\"]])\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Datadog = Pulumi.Datadog;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var sampleIndexOrder = new Datadog.LogsIndexOrder(\"sample_index_order\", new()\n    {\n        Name = \"sample_index_order\",\n        Indexes = new[]\n        {\n            sampleIndex.Id,\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-datadog/sdk/v4/go/datadog\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := datadog.NewLogsIndexOrder(ctx, \"sample_index_order\", \u0026datadog.LogsIndexOrderArgs{\n\t\t\tName: pulumi.String(\"sample_index_order\"),\n\t\t\tIndexes: pulumi.StringArray{\n\t\t\t\tsampleIndex.Id,\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.datadog.LogsIndexOrder;\nimport com.pulumi.datadog.LogsIndexOrderArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var sampleIndexOrder = new LogsIndexOrder(\"sampleIndexOrder\", LogsIndexOrderArgs.builder()\n            .name(\"sample_index_order\")\n            .indexes(sampleIndex.id())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  sampleIndexOrder:\n    type: datadog:LogsIndexOrder\n    name: sample_index_order\n    properties:\n      name: sample_index_order\n      indexes:\n        - ${sampleIndex.id}\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\nThe Datadog Terraform Provider does not support the creation and deletion of index orders. There must be at most one `datadog_logs_index_order` resource\n\n`\u003cname\u003e` can be whatever you specify in your code. Datadog does not store the name on the server.\n\n```sh\n$ pulumi import datadog:index/logsIndexOrder:LogsIndexOrder name\u003e \u003cname\u003e\n```\n\n",
            "properties": {
                "indexes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The index resource list. Logs are tested against the query filter of each index one by one following the order of the list.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The unique name of the index order resource.\n"
                }
            },
            "required": [
                "indexes",
                "name"
            ],
            "inputProperties": {
                "indexes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The index resource list. Logs are tested against the query filter of each index one by one following the order of the list.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The unique name of the index order resource.\n"
                }
            },
            "requiredInputs": [
                "indexes"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering LogsIndexOrder resources.\n",
                "properties": {
                    "indexes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The index resource list. Logs are tested against the query filter of each index one by one following the order of the list.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The unique name of the index order resource.\n"
                    }
                },
                "type": "object"
            }
        },
        "datadog:index/logsIntegrationPipeline:LogsIntegrationPipeline": {
            "description": "Provides a Datadog Logs Pipeline API resource to manage the integrations. Integration pipelines are the pipelines that are automatically installed for your organization when sending the logs with specific sources. You don't need to maintain or update these types of pipelines. Keeping them as resources, however, allows you to manage the order of your pipelines by referencing them in your `datadog.LogsPipelineOrder` resource. If you don't need the `pipeline_order` feature, this resource declaration can be omitted.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as datadog from \"@pulumi/datadog\";\n\nconst python = new datadog.LogsIntegrationPipeline(\"python\", {isEnabled: true});\n```\n```python\nimport pulumi\nimport pulumi_datadog as datadog\n\npython = datadog.LogsIntegrationPipeline(\"python\", is_enabled=True)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Datadog = Pulumi.Datadog;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var python = new Datadog.LogsIntegrationPipeline(\"python\", new()\n    {\n        IsEnabled = true,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-datadog/sdk/v4/go/datadog\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := datadog.NewLogsIntegrationPipeline(ctx, \"python\", \u0026datadog.LogsIntegrationPipelineArgs{\n\t\t\tIsEnabled: pulumi.Bool(true),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.datadog.LogsIntegrationPipeline;\nimport com.pulumi.datadog.LogsIntegrationPipelineArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var python = new LogsIntegrationPipeline(\"python\", LogsIntegrationPipelineArgs.builder()\n            .isEnabled(true)\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  python:\n    type: datadog:LogsIntegrationPipeline\n    properties:\n      isEnabled: true\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\nTo find the pipeline ID, click the \"view\" button in the UI to open the pipeline details.\n\nThe pipeline ID is the last part of the URL.\n\n```sh\n$ pulumi import datadog:index/logsIntegrationPipeline:LogsIntegrationPipeline name\u003e \u003cpipelineID\u003e\n```\n\n",
            "properties": {
                "isEnabled": {
                    "type": "boolean",
                    "description": "Boolean value to enable your pipeline.\n"
                }
            },
            "inputProperties": {
                "isEnabled": {
                    "type": "boolean",
                    "description": "Boolean value to enable your pipeline.\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering LogsIntegrationPipeline resources.\n",
                "properties": {
                    "isEnabled": {
                        "type": "boolean",
                        "description": "Boolean value to enable your pipeline.\n"
                    }
                },
                "type": "object"
            }
        },
        "datadog:index/logsMetric:LogsMetric": {
            "description": "Resource for interacting with the logs_metric API\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as datadog from \"@pulumi/datadog\";\n\nconst testingLogsMetric = new datadog.LogsMetric(\"testing_logs_metric\", {\n    name: \"testing.logs.metric\",\n    compute: {\n        aggregationType: \"distribution\",\n        path: \"@duration\",\n    },\n    filter: {\n        query: \"service:test\",\n    },\n    groupBies: [\n        {\n            path: \"@status\",\n            tagName: \"status\",\n        },\n        {\n            path: \"@version\",\n            tagName: \"version\",\n        },\n    ],\n});\n```\n```python\nimport pulumi\nimport pulumi_datadog as datadog\n\ntesting_logs_metric = datadog.LogsMetric(\"testing_logs_metric\",\n    name=\"testing.logs.metric\",\n    compute={\n        \"aggregation_type\": \"distribution\",\n        \"path\": \"@duration\",\n    },\n    filter={\n        \"query\": \"service:test\",\n    },\n    group_bies=[\n        {\n            \"path\": \"@status\",\n            \"tag_name\": \"status\",\n        },\n        {\n            \"path\": \"@version\",\n            \"tag_name\": \"version\",\n        },\n    ])\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Datadog = Pulumi.Datadog;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var testingLogsMetric = new Datadog.LogsMetric(\"testing_logs_metric\", new()\n    {\n        Name = \"testing.logs.metric\",\n        Compute = new Datadog.Inputs.LogsMetricComputeArgs\n        {\n            AggregationType = \"distribution\",\n            Path = \"@duration\",\n        },\n        Filter = new Datadog.Inputs.LogsMetricFilterArgs\n        {\n            Query = \"service:test\",\n        },\n        GroupBies = new[]\n        {\n            new Datadog.Inputs.LogsMetricGroupByArgs\n            {\n                Path = \"@status\",\n                TagName = \"status\",\n            },\n            new Datadog.Inputs.LogsMetricGroupByArgs\n            {\n                Path = \"@version\",\n                TagName = \"version\",\n            },\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-datadog/sdk/v4/go/datadog\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := datadog.NewLogsMetric(ctx, \"testing_logs_metric\", \u0026datadog.LogsMetricArgs{\n\t\t\tName: pulumi.String(\"testing.logs.metric\"),\n\t\t\tCompute: \u0026datadog.LogsMetricComputeArgs{\n\t\t\t\tAggregationType: pulumi.String(\"distribution\"),\n\t\t\t\tPath:            pulumi.String(\"@duration\"),\n\t\t\t},\n\t\t\tFilter: \u0026datadog.LogsMetricFilterArgs{\n\t\t\t\tQuery: pulumi.String(\"service:test\"),\n\t\t\t},\n\t\t\tGroupBies: datadog.LogsMetricGroupByArray{\n\t\t\t\t\u0026datadog.LogsMetricGroupByArgs{\n\t\t\t\t\tPath:    pulumi.String(\"@status\"),\n\t\t\t\t\tTagName: pulumi.String(\"status\"),\n\t\t\t\t},\n\t\t\t\t\u0026datadog.LogsMetricGroupByArgs{\n\t\t\t\t\tPath:    pulumi.String(\"@version\"),\n\t\t\t\t\tTagName: pulumi.String(\"version\"),\n\t\t\t\t},\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.datadog.LogsMetric;\nimport com.pulumi.datadog.LogsMetricArgs;\nimport com.pulumi.datadog.inputs.LogsMetricComputeArgs;\nimport com.pulumi.datadog.inputs.LogsMetricFilterArgs;\nimport com.pulumi.datadog.inputs.LogsMetricGroupByArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var testingLogsMetric = new LogsMetric(\"testingLogsMetric\", LogsMetricArgs.builder()\n            .name(\"testing.logs.metric\")\n            .compute(LogsMetricComputeArgs.builder()\n                .aggregationType(\"distribution\")\n                .path(\"@duration\")\n                .build())\n            .filter(LogsMetricFilterArgs.builder()\n                .query(\"service:test\")\n                .build())\n            .groupBies(            \n                LogsMetricGroupByArgs.builder()\n                    .path(\"@status\")\n                    .tagName(\"status\")\n                    .build(),\n                LogsMetricGroupByArgs.builder()\n                    .path(\"@version\")\n                    .tagName(\"version\")\n                    .build())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  testingLogsMetric:\n    type: datadog:LogsMetric\n    name: testing_logs_metric\n    properties:\n      name: testing.logs.metric\n      compute:\n        aggregationType: distribution\n        path: '@duration'\n      filter:\n        query: service:test\n      groupBies:\n        - path: '@status'\n          tagName: status\n        - path: '@version'\n          tagName: version\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\n```sh\n$ pulumi import datadog:index/logsMetric:LogsMetric testing_logs_metric testing.logs.metric\n```\n\n",
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:index/LogsMetricCompute:LogsMetricCompute",
                    "description": "The compute rule to compute the log-based metric. This field can't be updated after creation.\n"
                },
                "filter": {
                    "$ref": "#/types/datadog:index/LogsMetricFilter:LogsMetricFilter",
                    "description": "The log-based metric filter. Logs matching this filter will be aggregated in this metric.\n"
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/LogsMetricGroupBy:LogsMetricGroupBy"
                    },
                    "description": "The rules for the group by.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the log-based metric. This field can't be updated after creation.\n"
                }
            },
            "required": [
                "compute",
                "filter",
                "name"
            ],
            "inputProperties": {
                "compute": {
                    "$ref": "#/types/datadog:index/LogsMetricCompute:LogsMetricCompute",
                    "description": "The compute rule to compute the log-based metric. This field can't be updated after creation.\n",
                    "willReplaceOnChanges": true
                },
                "filter": {
                    "$ref": "#/types/datadog:index/LogsMetricFilter:LogsMetricFilter",
                    "description": "The log-based metric filter. Logs matching this filter will be aggregated in this metric.\n"
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/LogsMetricGroupBy:LogsMetricGroupBy"
                    },
                    "description": "The rules for the group by.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the log-based metric. This field can't be updated after creation.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "compute",
                "filter",
                "name"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering LogsMetric resources.\n",
                "properties": {
                    "compute": {
                        "$ref": "#/types/datadog:index/LogsMetricCompute:LogsMetricCompute",
                        "description": "The compute rule to compute the log-based metric. This field can't be updated after creation.\n",
                        "willReplaceOnChanges": true
                    },
                    "filter": {
                        "$ref": "#/types/datadog:index/LogsMetricFilter:LogsMetricFilter",
                        "description": "The log-based metric filter. Logs matching this filter will be aggregated in this metric.\n"
                    },
                    "groupBies": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/datadog:index/LogsMetricGroupBy:LogsMetricGroupBy"
                        },
                        "description": "The rules for the group by.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the log-based metric. This field can't be updated after creation.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "datadog:index/logsPipelineOrder:LogsPipelineOrder": {
            "description": "Provides a Datadog Logs Pipeline API resource, which is used to manage Datadog log pipelines order.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as datadog from \"@pulumi/datadog\";\n\nconst samplePipelineOrder = new datadog.LogsPipelineOrder(\"sample_pipeline_order\", {\n    name: \"sample_pipeline_order\",\n    pipelines: [\n        samplePipeline.id,\n        python.id,\n    ],\n});\n```\n```python\nimport pulumi\nimport pulumi_datadog as datadog\n\nsample_pipeline_order = datadog.LogsPipelineOrder(\"sample_pipeline_order\",\n    name=\"sample_pipeline_order\",\n    pipelines=[\n        sample_pipeline[\"id\"],\n        python[\"id\"],\n    ])\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Datadog = Pulumi.Datadog;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var samplePipelineOrder = new Datadog.LogsPipelineOrder(\"sample_pipeline_order\", new()\n    {\n        Name = \"sample_pipeline_order\",\n        Pipelines = new[]\n        {\n            samplePipeline.Id,\n            python.Id,\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-datadog/sdk/v4/go/datadog\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := datadog.NewLogsPipelineOrder(ctx, \"sample_pipeline_order\", \u0026datadog.LogsPipelineOrderArgs{\n\t\t\tName: pulumi.String(\"sample_pipeline_order\"),\n\t\t\tPipelines: pulumi.StringArray{\n\t\t\t\tsamplePipeline.Id,\n\t\t\t\tpython.Id,\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.datadog.LogsPipelineOrder;\nimport com.pulumi.datadog.LogsPipelineOrderArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var samplePipelineOrder = new LogsPipelineOrder(\"samplePipelineOrder\", LogsPipelineOrderArgs.builder()\n            .name(\"sample_pipeline_order\")\n            .pipelines(            \n                samplePipeline.id(),\n                python.id())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  samplePipelineOrder:\n    type: datadog:LogsPipelineOrder\n    name: sample_pipeline_order\n    properties:\n      name: sample_pipeline_order\n      pipelines:\n        - ${samplePipeline.id}\n        - ${python.id}\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\nThere must be at most one datadog_logs_pipeline_order resource. Pipeline order creation is not supported from logs config API. You can import the datadog_logs_pipeline_order or create a pipeline order (which is actually doing the update operation).\n\n```sh\n$ pulumi import datadog:index/logsPipelineOrder:LogsPipelineOrder name\u003e \u003cname\u003e\n```\n\n",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "The name attribute in the resource `datadog.LogsPipelineOrder` needs to be unique. It's recommended to use the same value as the resource name. No related field is available in [Logs Pipeline API](https://docs.datadoghq.com/api/v1/logs-pipelines/#get-pipeline-order).\n"
                },
                "pipelines": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The pipeline IDs list. The order of pipeline IDs in this attribute defines the overall pipeline order for logs.\n"
                }
            },
            "required": [
                "name",
                "pipelines"
            ],
            "inputProperties": {
                "name": {
                    "type": "string",
                    "description": "The name attribute in the resource `datadog.LogsPipelineOrder` needs to be unique. It's recommended to use the same value as the resource name. No related field is available in [Logs Pipeline API](https://docs.datadoghq.com/api/v1/logs-pipelines/#get-pipeline-order).\n"
                },
                "pipelines": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The pipeline IDs list. The order of pipeline IDs in this attribute defines the overall pipeline order for logs.\n"
                }
            },
            "requiredInputs": [
                "name",
                "pipelines"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering LogsPipelineOrder resources.\n",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The name attribute in the resource `datadog.LogsPipelineOrder` needs to be unique. It's recommended to use the same value as the resource name. No related field is available in [Logs Pipeline API](https://docs.datadoghq.com/api/v1/logs-pipelines/#get-pipeline-order).\n"
                    },
                    "pipelines": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The pipeline IDs list. The order of pipeline IDs in this attribute defines the overall pipeline order for logs.\n"
                    }
                },
                "type": "object"
            }
        },
        "datadog:index/metricMetadata:MetricMetadata": {
            "description": "Provides a Datadog metric_metadata resource. This can be used to manage a metric's metadata.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as datadog from \"@pulumi/datadog\";\n\n// Manage a Datadog metric's metadata\nconst requestTime = new datadog.MetricMetadata(\"request_time\", {\n    metric: \"request.time\",\n    shortName: \"Request time\",\n    description: \"99th percentile request time in milliseconds\",\n    type: \"gauge\",\n    unit: \"millisecond\",\n});\n```\n```python\nimport pulumi\nimport pulumi_datadog as datadog\n\n# Manage a Datadog metric's metadata\nrequest_time = datadog.MetricMetadata(\"request_time\",\n    metric=\"request.time\",\n    short_name=\"Request time\",\n    description=\"99th percentile request time in milliseconds\",\n    type=\"gauge\",\n    unit=\"millisecond\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Datadog = Pulumi.Datadog;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    // Manage a Datadog metric's metadata\n    var requestTime = new Datadog.MetricMetadata(\"request_time\", new()\n    {\n        Metric = \"request.time\",\n        ShortName = \"Request time\",\n        Description = \"99th percentile request time in milliseconds\",\n        Type = \"gauge\",\n        Unit = \"millisecond\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-datadog/sdk/v4/go/datadog\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t// Manage a Datadog metric's metadata\n\t\t_, err := datadog.NewMetricMetadata(ctx, \"request_time\", \u0026datadog.MetricMetadataArgs{\n\t\t\tMetric:      pulumi.String(\"request.time\"),\n\t\t\tShortName:   pulumi.String(\"Request time\"),\n\t\t\tDescription: pulumi.String(\"99th percentile request time in milliseconds\"),\n\t\t\tType:        pulumi.String(\"gauge\"),\n\t\t\tUnit:        pulumi.String(\"millisecond\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.datadog.MetricMetadata;\nimport com.pulumi.datadog.MetricMetadataArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        // Manage a Datadog metric's metadata\n        var requestTime = new MetricMetadata(\"requestTime\", MetricMetadataArgs.builder()\n            .metric(\"request.time\")\n            .shortName(\"Request time\")\n            .description(\"99th percentile request time in milliseconds\")\n            .type(\"gauge\")\n            .unit(\"millisecond\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  # Manage a Datadog metric's metadata\n  requestTime:\n    type: datadog:MetricMetadata\n    name: request_time\n    properties:\n      metric: request.time\n      shortName: Request time\n      description: 99th percentile request time in milliseconds\n      type: gauge\n      unit: millisecond\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\n```sh\n$ pulumi import datadog:index/metricMetadata:MetricMetadata request_time request.time\n```\n\n",
            "properties": {
                "description": {
                    "type": "string",
                    "description": "A description of the metric.\n"
                },
                "metric": {
                    "type": "string",
                    "description": "The name of the metric.\n"
                },
                "perUnit": {
                    "type": "string",
                    "description": "Per unit of the metric such as `second` in `bytes per second`.\n"
                },
                "shortName": {
                    "type": "string",
                    "description": "A short name of the metric.\n"
                },
                "statsdInterval": {
                    "type": "integer",
                    "description": "If applicable, statsd flush interval in seconds for the metric.\n"
                },
                "type": {
                    "type": "string",
                    "description": "Metric type such as `count`, `gauge`, or `rate`. Updating a metric of type `distribution` is not supported. If you would like to see the `distribution` type returned, contact [Datadog support](https://docs.datadoghq.com/help/).\n"
                },
                "unit": {
                    "type": "string",
                    "description": "Primary unit of the metric such as `byte` or `operation`.\n"
                }
            },
            "required": [
                "metric"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "A description of the metric.\n"
                },
                "metric": {
                    "type": "string",
                    "description": "The name of the metric.\n"
                },
                "perUnit": {
                    "type": "string",
                    "description": "Per unit of the metric such as `second` in `bytes per second`.\n"
                },
                "shortName": {
                    "type": "string",
                    "description": "A short name of the metric.\n"
                },
                "statsdInterval": {
                    "type": "integer",
                    "description": "If applicable, statsd flush interval in seconds for the metric.\n"
                },
                "type": {
                    "type": "string",
                    "description": "Metric type such as `count`, `gauge`, or `rate`. Updating a metric of type `distribution` is not supported. If you would like to see the `distribution` type returned, contact [Datadog support](https://docs.datadoghq.com/help/).\n"
                },
                "unit": {
                    "type": "string",
                    "description": "Primary unit of the metric such as `byte` or `operation`.\n"
                }
            },
            "requiredInputs": [
                "metric"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering MetricMetadata resources.\n",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "A description of the metric.\n"
                    },
                    "metric": {
                        "type": "string",
                        "description": "The name of the metric.\n"
                    },
                    "perUnit": {
                        "type": "string",
                        "description": "Per unit of the metric such as `second` in `bytes per second`.\n"
                    },
                    "shortName": {
                        "type": "string",
                        "description": "A short name of the metric.\n"
                    },
                    "statsdInterval": {
                        "type": "integer",
                        "description": "If applicable, statsd flush interval in seconds for the metric.\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "Metric type such as `count`, `gauge`, or `rate`. Updating a metric of type `distribution` is not supported. If you would like to see the `distribution` type returned, contact [Datadog support](https://docs.datadoghq.com/help/).\n"
                    },
                    "unit": {
                        "type": "string",
                        "description": "Primary unit of the metric such as `byte` or `operation`.\n"
                    }
                },
                "type": "object"
            }
        },
        "datadog:index/metricTagConfiguration:MetricTagConfiguration": {
            "description": "Provides a Datadog metric tag configuration resource. This can be used to modify tag configurations for metrics.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as datadog from \"@pulumi/datadog\";\n\n// Manage a tag configuration for a Datadog distribution metric with/without percentiles\nconst exampleDistMetric = new datadog.MetricTagConfiguration(\"example_dist_metric\", {\n    metricName: \"example.terraform.dist.metric\",\n    metricType: \"distribution\",\n    tags: [\n        \"sport\",\n        \"datacenter\",\n    ],\n    includePercentiles: false,\n});\n// Manage tag configurations for a Datadog count or gauge metric\nconst exampleCountMetric = new datadog.MetricTagConfiguration(\"example_count_metric\", {\n    metricName: \"example.terraform.count.metric\",\n    metricType: \"count\",\n    tags: [\n        \"sport\",\n        \"datacenter\",\n    ],\n    excludeTagsMode: false,\n    aggregations: [\n        {\n            time: \"avg\",\n            space: \"min\",\n        },\n        {\n            time: \"avg\",\n            space: \"max\",\n        },\n    ],\n});\n```\n```python\nimport pulumi\nimport pulumi_datadog as datadog\n\n# Manage a tag configuration for a Datadog distribution metric with/without percentiles\nexample_dist_metric = datadog.MetricTagConfiguration(\"example_dist_metric\",\n    metric_name=\"example.terraform.dist.metric\",\n    metric_type=\"distribution\",\n    tags=[\n        \"sport\",\n        \"datacenter\",\n    ],\n    include_percentiles=False)\n# Manage tag configurations for a Datadog count or gauge metric\nexample_count_metric = datadog.MetricTagConfiguration(\"example_count_metric\",\n    metric_name=\"example.terraform.count.metric\",\n    metric_type=\"count\",\n    tags=[\n        \"sport\",\n        \"datacenter\",\n    ],\n    exclude_tags_mode=False,\n    aggregations=[\n        {\n            \"time\": \"avg\",\n            \"space\": \"min\",\n        },\n        {\n            \"time\": \"avg\",\n            \"space\": \"max\",\n        },\n    ])\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Datadog = Pulumi.Datadog;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    // Manage a tag configuration for a Datadog distribution metric with/without percentiles\n    var exampleDistMetric = new Datadog.MetricTagConfiguration(\"example_dist_metric\", new()\n    {\n        MetricName = \"example.terraform.dist.metric\",\n        MetricType = \"distribution\",\n        Tags = new[]\n        {\n            \"sport\",\n            \"datacenter\",\n        },\n        IncludePercentiles = false,\n    });\n\n    // Manage tag configurations for a Datadog count or gauge metric\n    var exampleCountMetric = new Datadog.MetricTagConfiguration(\"example_count_metric\", new()\n    {\n        MetricName = \"example.terraform.count.metric\",\n        MetricType = \"count\",\n        Tags = new[]\n        {\n            \"sport\",\n            \"datacenter\",\n        },\n        ExcludeTagsMode = false,\n        Aggregations = new[]\n        {\n            new Datadog.Inputs.MetricTagConfigurationAggregationArgs\n            {\n                Time = \"avg\",\n                Space = \"min\",\n            },\n            new Datadog.Inputs.MetricTagConfigurationAggregationArgs\n            {\n                Time = \"avg\",\n                Space = \"max\",\n            },\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-datadog/sdk/v4/go/datadog\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t// Manage a tag configuration for a Datadog distribution metric with/without percentiles\n\t\t_, err := datadog.NewMetricTagConfiguration(ctx, \"example_dist_metric\", \u0026datadog.MetricTagConfigurationArgs{\n\t\t\tMetricName: pulumi.String(\"example.terraform.dist.metric\"),\n\t\t\tMetricType: pulumi.String(\"distribution\"),\n\t\t\tTags: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"sport\"),\n\t\t\t\tpulumi.String(\"datacenter\"),\n\t\t\t},\n\t\t\tIncludePercentiles: pulumi.Bool(false),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t// Manage tag configurations for a Datadog count or gauge metric\n\t\t_, err = datadog.NewMetricTagConfiguration(ctx, \"example_count_metric\", \u0026datadog.MetricTagConfigurationArgs{\n\t\t\tMetricName: pulumi.String(\"example.terraform.count.metric\"),\n\t\t\tMetricType: pulumi.String(\"count\"),\n\t\t\tTags: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"sport\"),\n\t\t\t\tpulumi.String(\"datacenter\"),\n\t\t\t},\n\t\t\tExcludeTagsMode: pulumi.Bool(false),\n\t\t\tAggregations: datadog.MetricTagConfigurationAggregationArray{\n\t\t\t\t\u0026datadog.MetricTagConfigurationAggregationArgs{\n\t\t\t\t\tTime:  pulumi.String(\"avg\"),\n\t\t\t\t\tSpace: pulumi.String(\"min\"),\n\t\t\t\t},\n\t\t\t\t\u0026datadog.MetricTagConfigurationAggregationArgs{\n\t\t\t\t\tTime:  pulumi.String(\"avg\"),\n\t\t\t\t\tSpace: pulumi.String(\"max\"),\n\t\t\t\t},\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.datadog.MetricTagConfiguration;\nimport com.pulumi.datadog.MetricTagConfigurationArgs;\nimport com.pulumi.datadog.inputs.MetricTagConfigurationAggregationArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        // Manage a tag configuration for a Datadog distribution metric with/without percentiles\n        var exampleDistMetric = new MetricTagConfiguration(\"exampleDistMetric\", MetricTagConfigurationArgs.builder()\n            .metricName(\"example.terraform.dist.metric\")\n            .metricType(\"distribution\")\n            .tags(            \n                \"sport\",\n                \"datacenter\")\n            .includePercentiles(false)\n            .build());\n\n        // Manage tag configurations for a Datadog count or gauge metric\n        var exampleCountMetric = new MetricTagConfiguration(\"exampleCountMetric\", MetricTagConfigurationArgs.builder()\n            .metricName(\"example.terraform.count.metric\")\n            .metricType(\"count\")\n            .tags(            \n                \"sport\",\n                \"datacenter\")\n            .excludeTagsMode(false)\n            .aggregations(            \n                MetricTagConfigurationAggregationArgs.builder()\n                    .time(\"avg\")\n                    .space(\"min\")\n                    .build(),\n                MetricTagConfigurationAggregationArgs.builder()\n                    .time(\"avg\")\n                    .space(\"max\")\n                    .build())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  # Manage a tag configuration for a Datadog distribution metric with/without percentiles\n  exampleDistMetric:\n    type: datadog:MetricTagConfiguration\n    name: example_dist_metric\n    properties:\n      metricName: example.terraform.dist.metric\n      metricType: distribution\n      tags:\n        - sport\n        - datacenter\n      includePercentiles: false\n  # Manage tag configurations for a Datadog count or gauge metric\n  exampleCountMetric:\n    type: datadog:MetricTagConfiguration\n    name: example_count_metric\n    properties:\n      metricName: example.terraform.count.metric\n      metricType: count\n      tags:\n        - sport\n        - datacenter\n      excludeTagsMode: false\n      aggregations:\n        - time: avg\n          space: min\n        - time: avg\n          space: max\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\n```sh\n$ pulumi import datadog:index/metricTagConfiguration:MetricTagConfiguration example_dist_metric example.terraform.dist.metric\n```\n\n",
            "properties": {
                "aggregations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/MetricTagConfigurationAggregation:MetricTagConfigurationAggregation"
                    },
                    "description": "A list of queryable aggregation combinations for a count, rate, or gauge metric. By default, count and rate metrics require the (time: sum, space: sum) aggregation and gauge metrics require the (time: avg, space: avg) aggregation. Can only be applied to metrics that have a `metric_type` of count, rate, or gauge.\n"
                },
                "excludeTagsMode": {
                    "type": "boolean",
                    "description": "Toggle to include/exclude tags as queryable for your metric. Can only be applied to metrics that have one or more tags configured. Defaults to `false`.\n"
                },
                "includePercentiles": {
                    "type": "boolean",
                    "description": "Toggle to include/exclude percentiles for a distribution metric. Defaults to false. Can only be applied to metrics that have a `metric_type` of distribution.\n"
                },
                "metricName": {
                    "type": "string",
                    "description": "The metric name for this resource.\n"
                },
                "metricType": {
                    "type": "string",
                    "description": "The metric's type. This field can't be updated after creation. Valid values are `gauge`, `count`, `rate`, `distribution`.\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tag keys that will be queryable for your metric.\n"
                }
            },
            "required": [
                "aggregations",
                "metricName",
                "metricType",
                "tags"
            ],
            "inputProperties": {
                "aggregations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/MetricTagConfigurationAggregation:MetricTagConfigurationAggregation"
                    },
                    "description": "A list of queryable aggregation combinations for a count, rate, or gauge metric. By default, count and rate metrics require the (time: sum, space: sum) aggregation and gauge metrics require the (time: avg, space: avg) aggregation. Can only be applied to metrics that have a `metric_type` of count, rate, or gauge.\n"
                },
                "excludeTagsMode": {
                    "type": "boolean",
                    "description": "Toggle to include/exclude tags as queryable for your metric. Can only be applied to metrics that have one or more tags configured. Defaults to `false`.\n"
                },
                "includePercentiles": {
                    "type": "boolean",
                    "description": "Toggle to include/exclude percentiles for a distribution metric. Defaults to false. Can only be applied to metrics that have a `metric_type` of distribution.\n"
                },
                "metricName": {
                    "type": "string",
                    "description": "The metric name for this resource.\n",
                    "willReplaceOnChanges": true
                },
                "metricType": {
                    "type": "string",
                    "description": "The metric's type. This field can't be updated after creation. Valid values are `gauge`, `count`, `rate`, `distribution`.\n",
                    "willReplaceOnChanges": true
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tag keys that will be queryable for your metric.\n"
                }
            },
            "requiredInputs": [
                "metricName",
                "metricType",
                "tags"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering MetricTagConfiguration resources.\n",
                "properties": {
                    "aggregations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/datadog:index/MetricTagConfigurationAggregation:MetricTagConfigurationAggregation"
                        },
                        "description": "A list of queryable aggregation combinations for a count, rate, or gauge metric. By default, count and rate metrics require the (time: sum, space: sum) aggregation and gauge metrics require the (time: avg, space: avg) aggregation. Can only be applied to metrics that have a `metric_type` of count, rate, or gauge.\n"
                    },
                    "excludeTagsMode": {
                        "type": "boolean",
                        "description": "Toggle to include/exclude tags as queryable for your metric. Can only be applied to metrics that have one or more tags configured. Defaults to `false`.\n"
                    },
                    "includePercentiles": {
                        "type": "boolean",
                        "description": "Toggle to include/exclude percentiles for a distribution metric. Defaults to false. Can only be applied to metrics that have a `metric_type` of distribution.\n"
                    },
                    "metricName": {
                        "type": "string",
                        "description": "The metric name for this resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "metricType": {
                        "type": "string",
                        "description": "The metric's type. This field can't be updated after creation. Valid values are `gauge`, `count`, `rate`, `distribution`.\n",
                        "willReplaceOnChanges": true
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of tag keys that will be queryable for your metric.\n"
                    }
                },
                "type": "object"
            }
        },
        "datadog:index/monitor:Monitor": {
            "description": "Provides a Datadog monitor resource. This can be used to create and manage Datadog monitors.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as datadog from \"@pulumi/datadog\";\n\nconst foo = new datadog.Monitor(\"foo\", {\n    name: \"Name for monitor foo\",\n    type: \"metric alert\",\n    message: \"Monitor triggered. Notify: @hipchat-channel\",\n    escalationMessage: \"Escalation message @pagerduty\",\n    query: \"avg(last_1h):avg:aws.ec2.cpu{environment:foo,host:foo} by {host} \u003e 4\",\n    monitorThresholds: {\n        warning: \"2\",\n        critical: \"4\",\n    },\n    includeTags: true,\n    tags: [\n        \"foo:bar\",\n        \"team:fooBar\",\n    ],\n});\n```\n```python\nimport pulumi\nimport pulumi_datadog as datadog\n\nfoo = datadog.Monitor(\"foo\",\n    name=\"Name for monitor foo\",\n    type=\"metric alert\",\n    message=\"Monitor triggered. Notify: @hipchat-channel\",\n    escalation_message=\"Escalation message @pagerduty\",\n    query=\"avg(last_1h):avg:aws.ec2.cpu{environment:foo,host:foo} by {host} \u003e 4\",\n    monitor_thresholds={\n        \"warning\": \"2\",\n        \"critical\": \"4\",\n    },\n    include_tags=True,\n    tags=[\n        \"foo:bar\",\n        \"team:fooBar\",\n    ])\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Datadog = Pulumi.Datadog;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var foo = new Datadog.Monitor(\"foo\", new()\n    {\n        Name = \"Name for monitor foo\",\n        Type = \"metric alert\",\n        Message = \"Monitor triggered. Notify: @hipchat-channel\",\n        EscalationMessage = \"Escalation message @pagerduty\",\n        Query = \"avg(last_1h):avg:aws.ec2.cpu{environment:foo,host:foo} by {host} \u003e 4\",\n        MonitorThresholds = new Datadog.Inputs.MonitorMonitorThresholdsArgs\n        {\n            Warning = \"2\",\n            Critical = \"4\",\n        },\n        IncludeTags = true,\n        Tags = new[]\n        {\n            \"foo:bar\",\n            \"team:fooBar\",\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-datadog/sdk/v4/go/datadog\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := datadog.NewMonitor(ctx, \"foo\", \u0026datadog.MonitorArgs{\n\t\t\tName:              pulumi.String(\"Name for monitor foo\"),\n\t\t\tType:              pulumi.String(\"metric alert\"),\n\t\t\tMessage:           pulumi.String(\"Monitor triggered. Notify: @hipchat-channel\"),\n\t\t\tEscalationMessage: pulumi.String(\"Escalation message @pagerduty\"),\n\t\t\tQuery:             pulumi.String(\"avg(last_1h):avg:aws.ec2.cpu{environment:foo,host:foo} by {host} \u003e 4\"),\n\t\t\tMonitorThresholds: \u0026datadog.MonitorMonitorThresholdsArgs{\n\t\t\t\tWarning:  pulumi.String(\"2\"),\n\t\t\t\tCritical: pulumi.String(\"4\"),\n\t\t\t},\n\t\t\tIncludeTags: pulumi.Bool(true),\n\t\t\tTags: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"foo:bar\"),\n\t\t\t\tpulumi.String(\"team:fooBar\"),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.datadog.Monitor;\nimport com.pulumi.datadog.MonitorArgs;\nimport com.pulumi.datadog.inputs.MonitorMonitorThresholdsArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var foo = new Monitor(\"foo\", MonitorArgs.builder()\n            .name(\"Name for monitor foo\")\n            .type(\"metric alert\")\n            .message(\"Monitor triggered. Notify: @hipchat-channel\")\n            .escalationMessage(\"Escalation message @pagerduty\")\n            .query(\"avg(last_1h):avg:aws.ec2.cpu{environment:foo,host:foo} by {host} \u003e 4\")\n            .monitorThresholds(MonitorMonitorThresholdsArgs.builder()\n                .warning(2)\n                .critical(4)\n                .build())\n            .includeTags(true)\n            .tags(            \n                \"foo:bar\",\n                \"team:fooBar\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  foo:\n    type: datadog:Monitor\n    properties:\n      name: Name for monitor foo\n      type: metric alert\n      message: 'Monitor triggered. Notify: @hipchat-channel'\n      escalationMessage: Escalation message @pagerduty\n      query: avg(last_1h):avg:aws.ec2.cpu{environment:foo,host:foo} by {host} \u003e 4\n      monitorThresholds:\n        warning: 2\n        critical: 4\n      includeTags: true\n      tags:\n        - foo:bar\n        - team:fooBar\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\n```sh\n$ pulumi import datadog:index/monitor:Monitor bytes_received_localhost 2081\n```\n\n",
            "properties": {
                "enableLogsSample": {
                    "type": "boolean",
                    "description": "A boolean indicating whether or not to include a list of log values which triggered the alert. This is only used by log\nmonitors. Defaults to `false`.\n"
                },
                "enableSamples": {
                    "type": "boolean",
                    "description": "Whether or not a list of samples which triggered the alert is included. This is only used by CI Test and Pipeline\nmonitors.\n"
                },
                "escalationMessage": {
                    "type": "string",
                    "description": "A message to include with a re-notification. Supports the `@username` notification allowed elsewhere.\n"
                },
                "evaluationDelay": {
                    "type": "integer",
                    "description": "(Only applies to metric alert) Time (in seconds) to delay evaluation, as a non-negative integer. For example, if the\nvalue is set to `300` (5min), the `timeframe` is set to `last_5m` and the time is 7:00, the monitor will evaluate data\nfrom 6:50 to 6:55. This is useful for AWS CloudWatch and other backfilled metrics to ensure the monitor will always have\ndata during evaluation.\n"
                },
                "forceDelete": {
                    "type": "boolean",
                    "description": "A boolean indicating whether this monitor can be deleted even if it’s referenced by other resources (e.g. SLO,\ncomposite monitor).\n"
                },
                "groupRetentionDuration": {
                    "type": "string",
                    "description": "The time span after which groups with missing data are dropped from the monitor state. The minimum value is one hour,\nand the maximum value is 72 hours. Example values are: 60m, 1h, and 2d. This option is only available for APM Trace\nAnalytics, Audit Trail, CI, Error Tracking, Event, Logs, and RUM monitors.\n"
                },
                "groupbySimpleMonitor": {
                    "type": "boolean",
                    "description": "Whether or not to trigger one alert if any source breaches a threshold. This is only used by log monitors. Defaults to\n`false`.\n"
                },
                "includeTags": {
                    "type": "boolean",
                    "description": "A boolean indicating whether notifications from this monitor automatically insert its triggering tags into the title.\n"
                },
                "locked": {
                    "type": "boolean",
                    "description": "A boolean indicating whether changes to this monitor should be restricted to the creator or admins. Defaults to `false`.\n",
                    "deprecationMessage": "Use `restricted_roles`."
                },
                "message": {
                    "type": "string",
                    "description": "A message to include with notifications for this monitor.\n"
                },
                "monitorThresholdWindows": {
                    "$ref": "#/types/datadog:index/MonitorMonitorThresholdWindows:MonitorMonitorThresholdWindows",
                    "description": "A mapping containing `recovery_window` and `trigger_window` values, e.g. `last_15m` . Can only be used for, and are\nrequired for, anomaly monitors.\n"
                },
                "monitorThresholds": {
                    "$ref": "#/types/datadog:index/MonitorMonitorThresholds:MonitorMonitorThresholds",
                    "description": "Alert thresholds of the monitor.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of Datadog monitor.\n"
                },
                "newGroupDelay": {
                    "type": "integer",
                    "description": "The time (in seconds) to skip evaluations for new groups. `new_group_delay` overrides `new_host_delay` if it is set to a\nnonzero value.\n"
                },
                "newHostDelay": {
                    "type": "integer",
                    "description": "**Deprecated**. See `new_group_delay`. Time (in seconds) to allow a host to boot and applications to fully start before\nstarting the evaluation of monitor results. Should be a non-negative integer. This value is ignored for simple monitors\nand monitors not grouped by host. The only case when this should be used is to override the default and set\n`new_host_delay` to zero for monitors grouped by host.\n",
                    "deprecationMessage": "Use `new_group_delay` except when setting `new_host_delay` to zero."
                },
                "noDataTimeframe": {
                    "type": "integer",
                    "description": "The number of minutes before a monitor will notify when data stops reporting. We recommend at least 2x the monitor\ntimeframe for metric alerts or 2 minutes for service checks.\n"
                },
                "notificationPresetName": {
                    "type": "string",
                    "description": "Toggles the display of additional content sent in the monitor notification.\n"
                },
                "notifyAudit": {
                    "type": "boolean",
                    "description": "A boolean indicating whether tagged users will be notified on changes to this monitor. Defaults to `false`.\n"
                },
                "notifyBies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Controls what granularity a monitor alerts on. Only available for monitors with groupings. For instance, a monitor\ngrouped by `cluster`, `namespace`, and `pod` can be configured to only notify on each new `cluster` violating the alert\nconditions by setting `notify_by` to `['cluster']`. Tags mentioned in `notify_by` must be a subset of the grouping tags\nin the query. For example, a query grouped by `cluster` and `namespace` cannot notify on `region`. Setting `notify_by`\nto `[*]` configures the monitor to notify as a simple-alert.\n"
                },
                "notifyNoData": {
                    "type": "boolean",
                    "description": "A boolean indicating whether this monitor will notify when data stops reporting.\n"
                },
                "onMissingData": {
                    "type": "string",
                    "description": "Controls how groups or monitors are treated if an evaluation does not return any data points. The default option results\nin different behavior depending on the monitor query type. For monitors using `Count` queries, an empty monitor\nevaluation is treated as 0 and is compared to the threshold conditions. For monitors using any query type other than\n`Count`, for example `Gauge`, `Measure`, or `Rate`, the monitor shows the last known status. This option is only\navailable for APM Trace Analytics, Audit Trail, CI, Error Tracking, Event, Logs, and RUM monitors. Valid values are:\n`show_no_data`, `show_and_notify_no_data`, `resolve`, and `default`.\n"
                },
                "priority": {
                    "type": "string",
                    "description": "Integer from 1 (high) to 5 (low) indicating alert severity.\n"
                },
                "query": {
                    "type": "string"
                },
                "renotifyInterval": {
                    "type": "integer",
                    "description": "The number of minutes after the last notification before a monitor will re-notify on the current status. It will only\nre-notify if it's not resolved.\n"
                },
                "renotifyOccurrences": {
                    "type": "integer",
                    "description": "The number of re-notification messages that should be sent on the current status.\n"
                },
                "renotifyStatuses": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The types of statuses for which re-notification messages should be sent.\n"
                },
                "requireFullWindow": {
                    "type": "boolean",
                    "description": "A boolean indicating whether this monitor needs a full window of data before it's evaluated. Datadog strongly recommends\nyou set this to `false` for sparse metrics, otherwise some evaluations may be skipped. If there's a custom_schedule set,\n`require_full_window` must be false and will be ignored.\n"
                },
                "restrictedRoles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of unique role identifiers to define which roles are allowed to edit the monitor. Editing a monitor includes any\nupdates to the monitor configuration, monitor deletion, and muting of the monitor for any amount of time. Roles unique\nidentifiers can be pulled from the [Roles API](https://docs.datadoghq.com/api/latest/roles/#list-roles) in the `data.id`\nfield.\n"
                },
                "schedulingOptions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/MonitorSchedulingOption:MonitorSchedulingOption"
                    },
                    "description": "Configuration options for scheduling.\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tags to associate with your monitor. This can help you categorize and filter monitors in the manage monitors\npage of the UI. Note: it's not currently possible to filter by these tags when querying via the API\n"
                },
                "timeoutH": {
                    "type": "integer",
                    "description": "The number of hours of the monitor not reporting data before it automatically resolves from a triggered state. The\nminimum allowed value is 0 hours. The maximum allowed value is 24 hours.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The type of the monitor. The mapping from these types to the types found in the Datadog Web UI can be found in the\nDatadog API [documentation page](https://docs.datadoghq.com/api/v1/monitors/#create-a-monitor). Note: The monitor type\ncannot be changed after a monitor is created.\n"
                },
                "validate": {
                    "type": "boolean",
                    "description": "If set to `false`, skip the validation call done during plan.\n"
                },
                "variables": {
                    "$ref": "#/types/datadog:index/MonitorVariables:MonitorVariables"
                }
            },
            "required": [
                "enableSamples",
                "evaluationDelay",
                "message",
                "name",
                "query",
                "tags",
                "type"
            ],
            "inputProperties": {
                "enableLogsSample": {
                    "type": "boolean",
                    "description": "A boolean indicating whether or not to include a list of log values which triggered the alert. This is only used by log\nmonitors. Defaults to `false`.\n"
                },
                "escalationMessage": {
                    "type": "string",
                    "description": "A message to include with a re-notification. Supports the `@username` notification allowed elsewhere.\n"
                },
                "evaluationDelay": {
                    "type": "integer",
                    "description": "(Only applies to metric alert) Time (in seconds) to delay evaluation, as a non-negative integer. For example, if the\nvalue is set to `300` (5min), the `timeframe` is set to `last_5m` and the time is 7:00, the monitor will evaluate data\nfrom 6:50 to 6:55. This is useful for AWS CloudWatch and other backfilled metrics to ensure the monitor will always have\ndata during evaluation.\n"
                },
                "forceDelete": {
                    "type": "boolean",
                    "description": "A boolean indicating whether this monitor can be deleted even if it’s referenced by other resources (e.g. SLO,\ncomposite monitor).\n"
                },
                "groupRetentionDuration": {
                    "type": "string",
                    "description": "The time span after which groups with missing data are dropped from the monitor state. The minimum value is one hour,\nand the maximum value is 72 hours. Example values are: 60m, 1h, and 2d. This option is only available for APM Trace\nAnalytics, Audit Trail, CI, Error Tracking, Event, Logs, and RUM monitors.\n"
                },
                "groupbySimpleMonitor": {
                    "type": "boolean",
                    "description": "Whether or not to trigger one alert if any source breaches a threshold. This is only used by log monitors. Defaults to\n`false`.\n"
                },
                "includeTags": {
                    "type": "boolean",
                    "description": "A boolean indicating whether notifications from this monitor automatically insert its triggering tags into the title.\n"
                },
                "locked": {
                    "type": "boolean",
                    "description": "A boolean indicating whether changes to this monitor should be restricted to the creator or admins. Defaults to `false`.\n",
                    "deprecationMessage": "Use `restricted_roles`."
                },
                "message": {
                    "type": "string",
                    "description": "A message to include with notifications for this monitor.\n"
                },
                "monitorThresholdWindows": {
                    "$ref": "#/types/datadog:index/MonitorMonitorThresholdWindows:MonitorMonitorThresholdWindows",
                    "description": "A mapping containing `recovery_window` and `trigger_window` values, e.g. `last_15m` . Can only be used for, and are\nrequired for, anomaly monitors.\n"
                },
                "monitorThresholds": {
                    "$ref": "#/types/datadog:index/MonitorMonitorThresholds:MonitorMonitorThresholds",
                    "description": "Alert thresholds of the monitor.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of Datadog monitor.\n"
                },
                "newGroupDelay": {
                    "type": "integer",
                    "description": "The time (in seconds) to skip evaluations for new groups. `new_group_delay` overrides `new_host_delay` if it is set to a\nnonzero value.\n"
                },
                "newHostDelay": {
                    "type": "integer",
                    "description": "**Deprecated**. See `new_group_delay`. Time (in seconds) to allow a host to boot and applications to fully start before\nstarting the evaluation of monitor results. Should be a non-negative integer. This value is ignored for simple monitors\nand monitors not grouped by host. The only case when this should be used is to override the default and set\n`new_host_delay` to zero for monitors grouped by host.\n",
                    "deprecationMessage": "Use `new_group_delay` except when setting `new_host_delay` to zero."
                },
                "noDataTimeframe": {
                    "type": "integer",
                    "description": "The number of minutes before a monitor will notify when data stops reporting. We recommend at least 2x the monitor\ntimeframe for metric alerts or 2 minutes for service checks.\n"
                },
                "notificationPresetName": {
                    "type": "string",
                    "description": "Toggles the display of additional content sent in the monitor notification.\n"
                },
                "notifyAudit": {
                    "type": "boolean",
                    "description": "A boolean indicating whether tagged users will be notified on changes to this monitor. Defaults to `false`.\n"
                },
                "notifyBies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Controls what granularity a monitor alerts on. Only available for monitors with groupings. For instance, a monitor\ngrouped by `cluster`, `namespace`, and `pod` can be configured to only notify on each new `cluster` violating the alert\nconditions by setting `notify_by` to `['cluster']`. Tags mentioned in `notify_by` must be a subset of the grouping tags\nin the query. For example, a query grouped by `cluster` and `namespace` cannot notify on `region`. Setting `notify_by`\nto `[*]` configures the monitor to notify as a simple-alert.\n"
                },
                "notifyNoData": {
                    "type": "boolean",
                    "description": "A boolean indicating whether this monitor will notify when data stops reporting.\n"
                },
                "onMissingData": {
                    "type": "string",
                    "description": "Controls how groups or monitors are treated if an evaluation does not return any data points. The default option results\nin different behavior depending on the monitor query type. For monitors using `Count` queries, an empty monitor\nevaluation is treated as 0 and is compared to the threshold conditions. For monitors using any query type other than\n`Count`, for example `Gauge`, `Measure`, or `Rate`, the monitor shows the last known status. This option is only\navailable for APM Trace Analytics, Audit Trail, CI, Error Tracking, Event, Logs, and RUM monitors. Valid values are:\n`show_no_data`, `show_and_notify_no_data`, `resolve`, and `default`.\n"
                },
                "priority": {
                    "type": "string",
                    "description": "Integer from 1 (high) to 5 (low) indicating alert severity.\n"
                },
                "query": {
                    "type": "string"
                },
                "renotifyInterval": {
                    "type": "integer",
                    "description": "The number of minutes after the last notification before a monitor will re-notify on the current status. It will only\nre-notify if it's not resolved.\n"
                },
                "renotifyOccurrences": {
                    "type": "integer",
                    "description": "The number of re-notification messages that should be sent on the current status.\n"
                },
                "renotifyStatuses": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The types of statuses for which re-notification messages should be sent.\n"
                },
                "requireFullWindow": {
                    "type": "boolean",
                    "description": "A boolean indicating whether this monitor needs a full window of data before it's evaluated. Datadog strongly recommends\nyou set this to `false` for sparse metrics, otherwise some evaluations may be skipped. If there's a custom_schedule set,\n`require_full_window` must be false and will be ignored.\n"
                },
                "restrictedRoles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of unique role identifiers to define which roles are allowed to edit the monitor. Editing a monitor includes any\nupdates to the monitor configuration, monitor deletion, and muting of the monitor for any amount of time. Roles unique\nidentifiers can be pulled from the [Roles API](https://docs.datadoghq.com/api/latest/roles/#list-roles) in the `data.id`\nfield.\n"
                },
                "schedulingOptions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/MonitorSchedulingOption:MonitorSchedulingOption"
                    },
                    "description": "Configuration options for scheduling.\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tags to associate with your monitor. This can help you categorize and filter monitors in the manage monitors\npage of the UI. Note: it's not currently possible to filter by these tags when querying via the API\n"
                },
                "timeoutH": {
                    "type": "integer",
                    "description": "The number of hours of the monitor not reporting data before it automatically resolves from a triggered state. The\nminimum allowed value is 0 hours. The maximum allowed value is 24 hours.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The type of the monitor. The mapping from these types to the types found in the Datadog Web UI can be found in the\nDatadog API [documentation page](https://docs.datadoghq.com/api/v1/monitors/#create-a-monitor). Note: The monitor type\ncannot be changed after a monitor is created.\n",
                    "willReplaceOnChanges": true
                },
                "validate": {
                    "type": "boolean",
                    "description": "If set to `false`, skip the validation call done during plan.\n"
                },
                "variables": {
                    "$ref": "#/types/datadog:index/MonitorVariables:MonitorVariables"
                }
            },
            "requiredInputs": [
                "message",
                "name",
                "query",
                "type"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Monitor resources.\n",
                "properties": {
                    "enableLogsSample": {
                        "type": "boolean",
                        "description": "A boolean indicating whether or not to include a list of log values which triggered the alert. This is only used by log\nmonitors. Defaults to `false`.\n"
                    },
                    "enableSamples": {
                        "type": "boolean",
                        "description": "Whether or not a list of samples which triggered the alert is included. This is only used by CI Test and Pipeline\nmonitors.\n"
                    },
                    "escalationMessage": {
                        "type": "string",
                        "description": "A message to include with a re-notification. Supports the `@username` notification allowed elsewhere.\n"
                    },
                    "evaluationDelay": {
                        "type": "integer",
                        "description": "(Only applies to metric alert) Time (in seconds) to delay evaluation, as a non-negative integer. For example, if the\nvalue is set to `300` (5min), the `timeframe` is set to `last_5m` and the time is 7:00, the monitor will evaluate data\nfrom 6:50 to 6:55. This is useful for AWS CloudWatch and other backfilled metrics to ensure the monitor will always have\ndata during evaluation.\n"
                    },
                    "forceDelete": {
                        "type": "boolean",
                        "description": "A boolean indicating whether this monitor can be deleted even if it’s referenced by other resources (e.g. SLO,\ncomposite monitor).\n"
                    },
                    "groupRetentionDuration": {
                        "type": "string",
                        "description": "The time span after which groups with missing data are dropped from the monitor state. The minimum value is one hour,\nand the maximum value is 72 hours. Example values are: 60m, 1h, and 2d. This option is only available for APM Trace\nAnalytics, Audit Trail, CI, Error Tracking, Event, Logs, and RUM monitors.\n"
                    },
                    "groupbySimpleMonitor": {
                        "type": "boolean",
                        "description": "Whether or not to trigger one alert if any source breaches a threshold. This is only used by log monitors. Defaults to\n`false`.\n"
                    },
                    "includeTags": {
                        "type": "boolean",
                        "description": "A boolean indicating whether notifications from this monitor automatically insert its triggering tags into the title.\n"
                    },
                    "locked": {
                        "type": "boolean",
                        "description": "A boolean indicating whether changes to this monitor should be restricted to the creator or admins. Defaults to `false`.\n",
                        "deprecationMessage": "Use `restricted_roles`."
                    },
                    "message": {
                        "type": "string",
                        "description": "A message to include with notifications for this monitor.\n"
                    },
                    "monitorThresholdWindows": {
                        "$ref": "#/types/datadog:index/MonitorMonitorThresholdWindows:MonitorMonitorThresholdWindows",
                        "description": "A mapping containing `recovery_window` and `trigger_window` values, e.g. `last_15m` . Can only be used for, and are\nrequired for, anomaly monitors.\n"
                    },
                    "monitorThresholds": {
                        "$ref": "#/types/datadog:index/MonitorMonitorThresholds:MonitorMonitorThresholds",
                        "description": "Alert thresholds of the monitor.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of Datadog monitor.\n"
                    },
                    "newGroupDelay": {
                        "type": "integer",
                        "description": "The time (in seconds) to skip evaluations for new groups. `new_group_delay` overrides `new_host_delay` if it is set to a\nnonzero value.\n"
                    },
                    "newHostDelay": {
                        "type": "integer",
                        "description": "**Deprecated**. See `new_group_delay`. Time (in seconds) to allow a host to boot and applications to fully start before\nstarting the evaluation of monitor results. Should be a non-negative integer. This value is ignored for simple monitors\nand monitors not grouped by host. The only case when this should be used is to override the default and set\n`new_host_delay` to zero for monitors grouped by host.\n",
                        "deprecationMessage": "Use `new_group_delay` except when setting `new_host_delay` to zero."
                    },
                    "noDataTimeframe": {
                        "type": "integer",
                        "description": "The number of minutes before a monitor will notify when data stops reporting. We recommend at least 2x the monitor\ntimeframe for metric alerts or 2 minutes for service checks.\n"
                    },
                    "notificationPresetName": {
                        "type": "string",
                        "description": "Toggles the display of additional content sent in the monitor notification.\n"
                    },
                    "notifyAudit": {
                        "type": "boolean",
                        "description": "A boolean indicating whether tagged users will be notified on changes to this monitor. Defaults to `false`.\n"
                    },
                    "notifyBies": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Controls what granularity a monitor alerts on. Only available for monitors with groupings. For instance, a monitor\ngrouped by `cluster`, `namespace`, and `pod` can be configured to only notify on each new `cluster` violating the alert\nconditions by setting `notify_by` to `['cluster']`. Tags mentioned in `notify_by` must be a subset of the grouping tags\nin the query. For example, a query grouped by `cluster` and `namespace` cannot notify on `region`. Setting `notify_by`\nto `[*]` configures the monitor to notify as a simple-alert.\n"
                    },
                    "notifyNoData": {
                        "type": "boolean",
                        "description": "A boolean indicating whether this monitor will notify when data stops reporting.\n"
                    },
                    "onMissingData": {
                        "type": "string",
                        "description": "Controls how groups or monitors are treated if an evaluation does not return any data points. The default option results\nin different behavior depending on the monitor query type. For monitors using `Count` queries, an empty monitor\nevaluation is treated as 0 and is compared to the threshold conditions. For monitors using any query type other than\n`Count`, for example `Gauge`, `Measure`, or `Rate`, the monitor shows the last known status. This option is only\navailable for APM Trace Analytics, Audit Trail, CI, Error Tracking, Event, Logs, and RUM monitors. Valid values are:\n`show_no_data`, `show_and_notify_no_data`, `resolve`, and `default`.\n"
                    },
                    "priority": {
                        "type": "string",
                        "description": "Integer from 1 (high) to 5 (low) indicating alert severity.\n"
                    },
                    "query": {
                        "type": "string"
                    },
                    "renotifyInterval": {
                        "type": "integer",
                        "description": "The number of minutes after the last notification before a monitor will re-notify on the current status. It will only\nre-notify if it's not resolved.\n"
                    },
                    "renotifyOccurrences": {
                        "type": "integer",
                        "description": "The number of re-notification messages that should be sent on the current status.\n"
                    },
                    "renotifyStatuses": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The types of statuses for which re-notification messages should be sent.\n"
                    },
                    "requireFullWindow": {
                        "type": "boolean",
                        "description": "A boolean indicating whether this monitor needs a full window of data before it's evaluated. Datadog strongly recommends\nyou set this to `false` for sparse metrics, otherwise some evaluations may be skipped. If there's a custom_schedule set,\n`require_full_window` must be false and will be ignored.\n"
                    },
                    "restrictedRoles": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of unique role identifiers to define which roles are allowed to edit the monitor. Editing a monitor includes any\nupdates to the monitor configuration, monitor deletion, and muting of the monitor for any amount of time. Roles unique\nidentifiers can be pulled from the [Roles API](https://docs.datadoghq.com/api/latest/roles/#list-roles) in the `data.id`\nfield.\n"
                    },
                    "schedulingOptions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/datadog:index/MonitorSchedulingOption:MonitorSchedulingOption"
                        },
                        "description": "Configuration options for scheduling.\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of tags to associate with your monitor. This can help you categorize and filter monitors in the manage monitors\npage of the UI. Note: it's not currently possible to filter by these tags when querying via the API\n"
                    },
                    "timeoutH": {
                        "type": "integer",
                        "description": "The number of hours of the monitor not reporting data before it automatically resolves from a triggered state. The\nminimum allowed value is 0 hours. The maximum allowed value is 24 hours.\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "The type of the monitor. The mapping from these types to the types found in the Datadog Web UI can be found in the\nDatadog API [documentation page](https://docs.datadoghq.com/api/v1/monitors/#create-a-monitor). Note: The monitor type\ncannot be changed after a monitor is created.\n",
                        "willReplaceOnChanges": true
                    },
                    "validate": {
                        "type": "boolean",
                        "description": "If set to `false`, skip the validation call done during plan.\n"
                    },
                    "variables": {
                        "$ref": "#/types/datadog:index/MonitorVariables:MonitorVariables"
                    }
                },
                "type": "object"
            }
        },
        "datadog:index/monitorConfigPolicy:MonitorConfigPolicy": {
            "description": "Provides a Datadog monitor config policy resource. This can be used to create and manage Datadog monitor config policies.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as datadog from \"@pulumi/datadog\";\n\nconst test = new datadog.MonitorConfigPolicy(\"test\", {\n    policyType: \"tag\",\n    tagPolicy: {\n        tagKey: \"env\",\n        tagKeyRequired: false,\n        validTagValues: [\n            \"staging\",\n            \"prod\",\n        ],\n    },\n});\n```\n```python\nimport pulumi\nimport pulumi_datadog as datadog\n\ntest = datadog.MonitorConfigPolicy(\"test\",\n    policy_type=\"tag\",\n    tag_policy={\n        \"tag_key\": \"env\",\n        \"tag_key_required\": False,\n        \"valid_tag_values\": [\n            \"staging\",\n            \"prod\",\n        ],\n    })\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Datadog = Pulumi.Datadog;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var test = new Datadog.MonitorConfigPolicy(\"test\", new()\n    {\n        PolicyType = \"tag\",\n        TagPolicy = new Datadog.Inputs.MonitorConfigPolicyTagPolicyArgs\n        {\n            TagKey = \"env\",\n            TagKeyRequired = false,\n            ValidTagValues = new[]\n            {\n                \"staging\",\n                \"prod\",\n            },\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-datadog/sdk/v4/go/datadog\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := datadog.NewMonitorConfigPolicy(ctx, \"test\", \u0026datadog.MonitorConfigPolicyArgs{\n\t\t\tPolicyType: pulumi.String(\"tag\"),\n\t\t\tTagPolicy: \u0026datadog.MonitorConfigPolicyTagPolicyArgs{\n\t\t\t\tTagKey:         pulumi.String(\"env\"),\n\t\t\t\tTagKeyRequired: pulumi.Bool(false),\n\t\t\t\tValidTagValues: pulumi.StringArray{\n\t\t\t\t\tpulumi.String(\"staging\"),\n\t\t\t\t\tpulumi.String(\"prod\"),\n\t\t\t\t},\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.datadog.MonitorConfigPolicy;\nimport com.pulumi.datadog.MonitorConfigPolicyArgs;\nimport com.pulumi.datadog.inputs.MonitorConfigPolicyTagPolicyArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var test = new MonitorConfigPolicy(\"test\", MonitorConfigPolicyArgs.builder()\n            .policyType(\"tag\")\n            .tagPolicy(MonitorConfigPolicyTagPolicyArgs.builder()\n                .tagKey(\"env\")\n                .tagKeyRequired(false)\n                .validTagValues(                \n                    \"staging\",\n                    \"prod\")\n                .build())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  test:\n    type: datadog:MonitorConfigPolicy\n    properties:\n      policyType: tag\n      tagPolicy:\n        tagKey: env\n        tagKeyRequired: false\n        validTagValues:\n          - staging\n          - prod\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "properties": {
                "policyType": {
                    "type": "string",
                    "description": "The monitor config policy type Valid values are `tag`.\n"
                },
                "tagPolicy": {
                    "$ref": "#/types/datadog:index/MonitorConfigPolicyTagPolicy:MonitorConfigPolicyTagPolicy",
                    "description": "Config for a tag policy. Only set if `policy_type` is `tag`.\n"
                }
            },
            "required": [
                "policyType"
            ],
            "inputProperties": {
                "policyType": {
                    "type": "string",
                    "description": "The monitor config policy type Valid values are `tag`.\n"
                },
                "tagPolicy": {
                    "$ref": "#/types/datadog:index/MonitorConfigPolicyTagPolicy:MonitorConfigPolicyTagPolicy",
                    "description": "Config for a tag policy. Only set if `policy_type` is `tag`.\n"
                }
            },
            "requiredInputs": [
                "policyType"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering MonitorConfigPolicy resources.\n",
                "properties": {
                    "policyType": {
                        "type": "string",
                        "description": "The monitor config policy type Valid values are `tag`.\n"
                    },
                    "tagPolicy": {
                        "$ref": "#/types/datadog:index/MonitorConfigPolicyTagPolicy:MonitorConfigPolicyTagPolicy",
                        "description": "Config for a tag policy. Only set if `policy_type` is `tag`.\n"
                    }
                },
                "type": "object"
            }
        },
        "datadog:index/monitorJson:MonitorJson": {
            "description": "Provides a Datadog monitor JSON resource. This can be used to create and manage Datadog monitors using the JSON definition.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as datadog from \"@pulumi/datadog\";\n\nconst monitorJson = new datadog.MonitorJson(\"monitor_json\", {monitor: `{\n    \"name\": \"Example monitor - service check\",\n    \"type\": \"service check\",\n    \"query\": \"\\\\\"ntp.in_sync\\\\\".by(\\\\\"*\\\\\").last(2).count_by_status()\",\n    \"message\": \"Change the message triggers if any host's clock goes out of sync with the time given by NTP. The offset threshold is configured in the Agent's 'ntp.yaml' file.\\\\n\\\\nSee [Troubleshooting NTP Offset issues](https://docs.datadoghq.com/agent/troubleshooting/ntp for more details on cause and resolution.\",\n    \"tags\": [],\n    \"multi\": true,\n\\x09\"restricted_roles\": null,\n    \"options\": {\n        \"include_tags\": true,\n        \"new_host_delay\": 150,\n        \"notify_audit\": false,\n        \"notify_no_data\": false,\n        \"thresholds\": {\n            \"warning\": 1,\n            \"ok\": 1,\n            \"critical\": 1\n        }\n    },\n    \"priority\": null,\n    \"classification\": \"custom\"\n}\n`});\n```\n```python\nimport pulumi\nimport pulumi_datadog as datadog\n\nmonitor_json = datadog.MonitorJson(\"monitor_json\", monitor=\"\"\"{\n    \"name\": \"Example monitor - service check\",\n    \"type\": \"service check\",\n    \"query\": \"\\\"ntp.in_sync\\\".by(\\\"*\\\").last(2).count_by_status()\",\n    \"message\": \"Change the message triggers if any host's clock goes out of sync with the time given by NTP. The offset threshold is configured in the Agent's 'ntp.yaml' file.\\n\\nSee [Troubleshooting NTP Offset issues](https://docs.datadoghq.com/agent/troubleshooting/ntp for more details on cause and resolution.\",\n    \"tags\": [],\n    \"multi\": true,\n\\x09\"restricted_roles\": null,\n    \"options\": {\n        \"include_tags\": true,\n        \"new_host_delay\": 150,\n        \"notify_audit\": false,\n        \"notify_no_data\": false,\n        \"thresholds\": {\n            \"warning\": 1,\n            \"ok\": 1,\n            \"critical\": 1\n        }\n    },\n    \"priority\": null,\n    \"classification\": \"custom\"\n}\n\"\"\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Datadog = Pulumi.Datadog;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var monitorJson = new Datadog.MonitorJson(\"monitor_json\", new()\n    {\n        Monitor = @\"{\n    \"\"name\"\": \"\"Example monitor - service check\"\",\n    \"\"type\"\": \"\"service check\"\",\n    \"\"query\"\": \"\"\\\"\"ntp.in_sync\\\"\".by(\\\"\"*\\\"\").last(2).count_by_status()\"\",\n    \"\"message\"\": \"\"Change the message triggers if any host's clock goes out of sync with the time given by NTP. The offset threshold is configured in the Agent's 'ntp.yaml' file.\\n\\nSee [Troubleshooting NTP Offset issues](https://docs.datadoghq.com/agent/troubleshooting/ntp for more details on cause and resolution.\"\",\n    \"\"tags\"\": [],\n    \"\"multi\"\": true,\n\t\"\"restricted_roles\"\": null,\n    \"\"options\"\": {\n        \"\"include_tags\"\": true,\n        \"\"new_host_delay\"\": 150,\n        \"\"notify_audit\"\": false,\n        \"\"notify_no_data\"\": false,\n        \"\"thresholds\"\": {\n            \"\"warning\"\": 1,\n            \"\"ok\"\": 1,\n            \"\"critical\"\": 1\n        }\n    },\n    \"\"priority\"\": null,\n    \"\"classification\"\": \"\"custom\"\"\n}\n\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-datadog/sdk/v4/go/datadog\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := datadog.NewMonitorJson(ctx, \"monitor_json\", \u0026datadog.MonitorJsonArgs{\n\t\t\tMonitor: pulumi.String(`{\n    \"name\": \"Example monitor - service check\",\n    \"type\": \"service check\",\n    \"query\": \"\\\"ntp.in_sync\\\".by(\\\"*\\\").last(2).count_by_status()\",\n    \"message\": \"Change the message triggers if any host's clock goes out of sync with the time given by NTP. The offset threshold is configured in the Agent's 'ntp.yaml' file.\\n\\nSee [Troubleshooting NTP Offset issues](https://docs.datadoghq.com/agent/troubleshooting/ntp for more details on cause and resolution.\",\n    \"tags\": [],\n    \"multi\": true,\n\t\"restricted_roles\": null,\n    \"options\": {\n        \"include_tags\": true,\n        \"new_host_delay\": 150,\n        \"notify_audit\": false,\n        \"notify_no_data\": false,\n        \"thresholds\": {\n            \"warning\": 1,\n            \"ok\": 1,\n            \"critical\": 1\n        }\n    },\n    \"priority\": null,\n    \"classification\": \"custom\"\n}\n`),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.datadog.MonitorJson;\nimport com.pulumi.datadog.MonitorJsonArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var monitorJson = new MonitorJson(\"monitorJson\", MonitorJsonArgs.builder()\n            .monitor(\"\"\"\n{\n    \"name\": \"Example monitor - service check\",\n    \"type\": \"service check\",\n    \"query\": \"\\\"ntp.in_sync\\\".by(\\\"*\\\").last(2).count_by_status()\",\n    \"message\": \"Change the message triggers if any host's clock goes out of sync with the time given by NTP. The offset threshold is configured in the Agent's 'ntp.yaml' file.\\n\\nSee [Troubleshooting NTP Offset issues](https://docs.datadoghq.com/agent/troubleshooting/ntp for more details on cause and resolution.\",\n    \"tags\": [],\n    \"multi\": true,\n\t\"restricted_roles\": null,\n    \"options\": {\n        \"include_tags\": true,\n        \"new_host_delay\": 150,\n        \"notify_audit\": false,\n        \"notify_no_data\": false,\n        \"thresholds\": {\n            \"warning\": 1,\n            \"ok\": 1,\n            \"critical\": 1\n        }\n    },\n    \"priority\": null,\n    \"classification\": \"custom\"\n}\n            \"\"\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  monitorJson:\n    type: datadog:MonitorJson\n    name: monitor_json\n    properties:\n      monitor: |\n        {\n            \"name\": \"Example monitor - service check\",\n            \"type\": \"service check\",\n            \"query\": \"\\\"ntp.in_sync\\\".by(\\\"*\\\").last(2).count_by_status()\",\n            \"message\": \"Change the message triggers if any host's clock goes out of sync with the time given by NTP. The offset threshold is configured in the Agent's 'ntp.yaml' file.\\n\\nSee [Troubleshooting NTP Offset issues](https://docs.datadoghq.com/agent/troubleshooting/ntp for more details on cause and resolution.\",\n            \"tags\": [],\n            \"multi\": true,\n        \t\"restricted_roles\": null,\n            \"options\": {\n                \"include_tags\": true,\n                \"new_host_delay\": 150,\n                \"notify_audit\": false,\n                \"notify_no_data\": false,\n                \"thresholds\": {\n                    \"warning\": 1,\n                    \"ok\": 1,\n                    \"critical\": 1\n                }\n            },\n            \"priority\": null,\n            \"classification\": \"custom\"\n        }\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\n```sh\n$ pulumi import datadog:index/monitorJson:MonitorJson monitor_json 123456\n```\n\n",
            "properties": {
                "monitor": {
                    "type": "string",
                    "description": "The JSON formatted definition of the monitor.\n"
                },
                "url": {
                    "type": "string",
                    "description": "The URL of the monitor.\n"
                }
            },
            "required": [
                "monitor",
                "url"
            ],
            "inputProperties": {
                "monitor": {
                    "type": "string",
                    "description": "The JSON formatted definition of the monitor.\n"
                },
                "url": {
                    "type": "string",
                    "description": "The URL of the monitor.\n"
                }
            },
            "requiredInputs": [
                "monitor"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering MonitorJson resources.\n",
                "properties": {
                    "monitor": {
                        "type": "string",
                        "description": "The JSON formatted definition of the monitor.\n"
                    },
                    "url": {
                        "type": "string",
                        "description": "The URL of the monitor.\n"
                    }
                },
                "type": "object"
            }
        },
        "datadog:index/openapiApi:OpenapiApi": {
            "description": "Provides a Datadog OpenAPI resource. This can be used to synchronize Datadog's [API catalog](https://docs.datadoghq.com/api_catalog/) with an [OpenAPI](https://www.openapis.org/) specifications file.\n\n## Import\n\n```sh\n$ pulumi import datadog:index/openapiApi:OpenapiApi new_list \"90646597-5fdb-4a17-a240-647003f8c028\"\n```\n\n",
            "properties": {
                "spec": {
                    "type": "string",
                    "description": "The textual content of the OpenAPI specification. Use `file()` in order to reference another file in the repository (see exmaple).\n"
                }
            },
            "required": [
                "spec"
            ],
            "inputProperties": {
                "spec": {
                    "type": "string",
                    "description": "The textual content of the OpenAPI specification. Use `file()` in order to reference another file in the repository (see exmaple).\n"
                }
            },
            "requiredInputs": [
                "spec"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering OpenapiApi resources.\n",
                "properties": {
                    "spec": {
                        "type": "string",
                        "description": "The textual content of the OpenAPI specification. Use `file()` in order to reference another file in the repository (see exmaple).\n"
                    }
                },
                "type": "object"
            }
        },
        "datadog:index/organizationSettings:OrganizationSettings": {
            "description": "Provides a Datadog Organization resource. This can be used to manage your Datadog organization's settings.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as datadog from \"@pulumi/datadog\";\n\n// Manage Datadog Organization\nconst organization = new datadog.OrganizationSettings(\"organization\", {name: \"foo-organization\"});\n```\n```python\nimport pulumi\nimport pulumi_datadog as datadog\n\n# Manage Datadog Organization\norganization = datadog.OrganizationSettings(\"organization\", name=\"foo-organization\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Datadog = Pulumi.Datadog;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    // Manage Datadog Organization\n    var organization = new Datadog.OrganizationSettings(\"organization\", new()\n    {\n        Name = \"foo-organization\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-datadog/sdk/v4/go/datadog\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t// Manage Datadog Organization\n\t\t_, err := datadog.NewOrganizationSettings(ctx, \"organization\", \u0026datadog.OrganizationSettingsArgs{\n\t\t\tName: pulumi.String(\"foo-organization\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.datadog.OrganizationSettings;\nimport com.pulumi.datadog.OrganizationSettingsArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        // Manage Datadog Organization\n        var organization = new OrganizationSettings(\"organization\", OrganizationSettingsArgs.builder()\n            .name(\"foo-organization\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  # Manage Datadog Organization\n  organization:\n    type: datadog:OrganizationSettings\n    properties:\n      name: foo-organization\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\n```sh\n$ pulumi import datadog:index/organizationSettings:OrganizationSettings organization 11111111-2222-3333-4444-555555555555\n```\n\n",
            "properties": {
                "description": {
                    "type": "string",
                    "description": "Description of the organization.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name for Organization.\n"
                },
                "publicId": {
                    "type": "string",
                    "description": "The `public_id` of the organization you are operating within.\n"
                },
                "securityContacts": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of emails used for security event notifications from the organization.\n"
                },
                "settings": {
                    "$ref": "#/types/datadog:index/OrganizationSettingsSettings:OrganizationSettingsSettings",
                    "description": "Organization settings\n"
                }
            },
            "required": [
                "description",
                "publicId",
                "securityContacts",
                "settings"
            ],
            "inputProperties": {
                "name": {
                    "type": "string",
                    "description": "Name for Organization.\n"
                },
                "securityContacts": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of emails used for security event notifications from the organization.\n"
                },
                "settings": {
                    "$ref": "#/types/datadog:index/OrganizationSettingsSettings:OrganizationSettingsSettings",
                    "description": "Organization settings\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering OrganizationSettings resources.\n",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "Description of the organization.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name for Organization.\n"
                    },
                    "publicId": {
                        "type": "string",
                        "description": "The `public_id` of the organization you are operating within.\n"
                    },
                    "securityContacts": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of emails used for security event notifications from the organization.\n"
                    },
                    "settings": {
                        "$ref": "#/types/datadog:index/OrganizationSettingsSettings:OrganizationSettingsSettings",
                        "description": "Organization settings\n"
                    }
                },
                "type": "object"
            }
        },
        "datadog:index/powerpack:Powerpack": {
            "description": "Provides a Datadog powerpack resource. This can be used to create and manage Datadog powerpacks.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as datadog from \"@pulumi/datadog\";\n\n// Manage Datadog Powerpacks\nconst foo = new datadog.Powerpack(\"foo\", {\n    description: \"Created using the Datadog provider in terraform\",\n    liveSpan: \"4h\",\n    layout: {\n        height: 10,\n        width: 3,\n        x: 1,\n        y: 0,\n    },\n    templateVariables: [{\n        defaults: [\"defaults\"],\n        name: \"datacenter\",\n    }],\n    widgets: [{\n        eventStreamDefinition: {\n            query: \"*\",\n            eventSize: \"l\",\n            title: \"Widget Title\",\n            titleSize: \"16\",\n            titleAlign: \"right\",\n        },\n    }],\n});\n```\n```python\nimport pulumi\nimport pulumi_datadog as datadog\n\n# Manage Datadog Powerpacks\nfoo = datadog.Powerpack(\"foo\",\n    description=\"Created using the Datadog provider in terraform\",\n    live_span=\"4h\",\n    layout={\n        \"height\": 10,\n        \"width\": 3,\n        \"x\": 1,\n        \"y\": 0,\n    },\n    template_variables=[{\n        \"defaults\": [\"defaults\"],\n        \"name\": \"datacenter\",\n    }],\n    widgets=[{\n        \"event_stream_definition\": {\n            \"query\": \"*\",\n            \"event_size\": \"l\",\n            \"title\": \"Widget Title\",\n            \"title_size\": \"16\",\n            \"title_align\": \"right\",\n        },\n    }])\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Datadog = Pulumi.Datadog;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    // Manage Datadog Powerpacks\n    var foo = new Datadog.Powerpack(\"foo\", new()\n    {\n        Description = \"Created using the Datadog provider in terraform\",\n        LiveSpan = \"4h\",\n        Layout = new Datadog.Inputs.PowerpackLayoutArgs\n        {\n            Height = 10,\n            Width = 3,\n            X = 1,\n            Y = 0,\n        },\n        TemplateVariables = new[]\n        {\n            new Datadog.Inputs.PowerpackTemplateVariableArgs\n            {\n                Defaults = new[]\n                {\n                    \"defaults\",\n                },\n                Name = \"datacenter\",\n            },\n        },\n        Widgets = new[]\n        {\n            new Datadog.Inputs.PowerpackWidgetArgs\n            {\n                EventStreamDefinition = new Datadog.Inputs.PowerpackWidgetEventStreamDefinitionArgs\n                {\n                    Query = \"*\",\n                    EventSize = \"l\",\n                    Title = \"Widget Title\",\n                    TitleSize = \"16\",\n                    TitleAlign = \"right\",\n                },\n            },\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-datadog/sdk/v4/go/datadog\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t// Manage Datadog Powerpacks\n\t\t_, err := datadog.NewPowerpack(ctx, \"foo\", \u0026datadog.PowerpackArgs{\n\t\t\tDescription: pulumi.String(\"Created using the Datadog provider in terraform\"),\n\t\t\tLiveSpan:    pulumi.String(\"4h\"),\n\t\t\tLayout: \u0026datadog.PowerpackLayoutArgs{\n\t\t\t\tHeight: pulumi.Int(10),\n\t\t\t\tWidth:  pulumi.Int(3),\n\t\t\t\tX:      pulumi.Int(1),\n\t\t\t\tY:      pulumi.Int(0),\n\t\t\t},\n\t\t\tTemplateVariables: datadog.PowerpackTemplateVariableArray{\n\t\t\t\t\u0026datadog.PowerpackTemplateVariableArgs{\n\t\t\t\t\tDefaults: pulumi.StringArray{\n\t\t\t\t\t\tpulumi.String(\"defaults\"),\n\t\t\t\t\t},\n\t\t\t\t\tName: pulumi.String(\"datacenter\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tWidgets: datadog.PowerpackWidgetArray{\n\t\t\t\t\u0026datadog.PowerpackWidgetArgs{\n\t\t\t\t\tEventStreamDefinition: \u0026datadog.PowerpackWidgetEventStreamDefinitionArgs{\n\t\t\t\t\t\tQuery:      pulumi.String(\"*\"),\n\t\t\t\t\t\tEventSize:  pulumi.String(\"l\"),\n\t\t\t\t\t\tTitle:      pulumi.String(\"Widget Title\"),\n\t\t\t\t\t\tTitleSize:  pulumi.String(\"16\"),\n\t\t\t\t\t\tTitleAlign: pulumi.String(\"right\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.datadog.Powerpack;\nimport com.pulumi.datadog.PowerpackArgs;\nimport com.pulumi.datadog.inputs.PowerpackLayoutArgs;\nimport com.pulumi.datadog.inputs.PowerpackTemplateVariableArgs;\nimport com.pulumi.datadog.inputs.PowerpackWidgetArgs;\nimport com.pulumi.datadog.inputs.PowerpackWidgetEventStreamDefinitionArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        // Manage Datadog Powerpacks\n        var foo = new Powerpack(\"foo\", PowerpackArgs.builder()\n            .description(\"Created using the Datadog provider in terraform\")\n            .liveSpan(\"4h\")\n            .layout(PowerpackLayoutArgs.builder()\n                .height(10)\n                .width(3)\n                .x(1)\n                .y(0)\n                .build())\n            .templateVariables(PowerpackTemplateVariableArgs.builder()\n                .defaults(\"defaults\")\n                .name(\"datacenter\")\n                .build())\n            .widgets(PowerpackWidgetArgs.builder()\n                .eventStreamDefinition(PowerpackWidgetEventStreamDefinitionArgs.builder()\n                    .query(\"*\")\n                    .eventSize(\"l\")\n                    .title(\"Widget Title\")\n                    .titleSize(16)\n                    .titleAlign(\"right\")\n                    .build())\n                .build())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  # Manage Datadog Powerpacks\n  foo:\n    type: datadog:Powerpack\n    properties:\n      description: Created using the Datadog provider in terraform\n      liveSpan: 4h\n      layout:\n        height: 10\n        width: 3\n        x: 1\n        y: 0\n      templateVariables:\n        - defaults:\n            - defaults\n          name: datacenter\n      widgets:\n        - eventStreamDefinition:\n            query: '*'\n            eventSize: l\n            title: Widget Title\n            titleSize: 16\n            titleAlign: right\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\n```sh\n$ pulumi import datadog:index/powerpack:Powerpack foo 11111111-2222-3333-4444-555555555555\n```\n\n",
            "properties": {
                "description": {
                    "type": "string",
                    "description": "The description of the powerpack.\n"
                },
                "layout": {
                    "$ref": "#/types/datadog:index/PowerpackLayout:PowerpackLayout",
                    "description": "The layout of the powerpack on a free-form dashboard.\n"
                },
                "liveSpan": {
                    "type": "string",
                    "description": "The timeframe to use when displaying the widget. Valid values are `1m`, `5m`, `10m`, `15m`, `30m`, `1h`, `4h`, `1d`, `2d`, `1w`, `1mo`, `3mo`, `6mo`, `week_to_date`, `month_to_date`, `1y`, `alert`.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name for the powerpack.\n"
                },
                "showTitle": {
                    "type": "boolean",
                    "description": "Whether or not title should be displayed in the powerpack.\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of tags to identify this powerpack.\n"
                },
                "templateVariables": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/PowerpackTemplateVariable:PowerpackTemplateVariable"
                    },
                    "description": "The list of template variables for this powerpack.\n"
                },
                "widgets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/PowerpackWidget:PowerpackWidget"
                    },
                    "description": "The list of widgets to display in the powerpack.\n"
                }
            },
            "required": [
                "layout"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "The description of the powerpack.\n"
                },
                "layout": {
                    "$ref": "#/types/datadog:index/PowerpackLayout:PowerpackLayout",
                    "description": "The layout of the powerpack on a free-form dashboard.\n"
                },
                "liveSpan": {
                    "type": "string",
                    "description": "The timeframe to use when displaying the widget. Valid values are `1m`, `5m`, `10m`, `15m`, `30m`, `1h`, `4h`, `1d`, `2d`, `1w`, `1mo`, `3mo`, `6mo`, `week_to_date`, `month_to_date`, `1y`, `alert`.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name for the powerpack.\n"
                },
                "showTitle": {
                    "type": "boolean",
                    "description": "Whether or not title should be displayed in the powerpack.\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of tags to identify this powerpack.\n"
                },
                "templateVariables": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/PowerpackTemplateVariable:PowerpackTemplateVariable"
                    },
                    "description": "The list of template variables for this powerpack.\n"
                },
                "widgets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/PowerpackWidget:PowerpackWidget"
                    },
                    "description": "The list of widgets to display in the powerpack.\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Powerpack resources.\n",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "The description of the powerpack.\n"
                    },
                    "layout": {
                        "$ref": "#/types/datadog:index/PowerpackLayout:PowerpackLayout",
                        "description": "The layout of the powerpack on a free-form dashboard.\n"
                    },
                    "liveSpan": {
                        "type": "string",
                        "description": "The timeframe to use when displaying the widget. Valid values are `1m`, `5m`, `10m`, `15m`, `30m`, `1h`, `4h`, `1d`, `2d`, `1w`, `1mo`, `3mo`, `6mo`, `week_to_date`, `month_to_date`, `1y`, `alert`.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name for the powerpack.\n"
                    },
                    "showTitle": {
                        "type": "boolean",
                        "description": "Whether or not title should be displayed in the powerpack.\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of tags to identify this powerpack.\n"
                    },
                    "templateVariables": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/datadog:index/PowerpackTemplateVariable:PowerpackTemplateVariable"
                        },
                        "description": "The list of template variables for this powerpack.\n"
                    },
                    "widgets": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/datadog:index/PowerpackWidget:PowerpackWidget"
                        },
                        "description": "The list of widgets to display in the powerpack.\n"
                    }
                },
                "type": "object"
            }
        },
        "datadog:index/restrictionPolicy:RestrictionPolicy": {
            "description": "Provides a Datadog RestrictionPolicy resource. This can be used to create and manage Datadog restriction policies.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as datadog from \"@pulumi/datadog\";\n\n// Create new restriction_policy resource\nconst foo = new datadog.RestrictionPolicy(\"foo\", {\n    resourceId: \"security-rule:abc-def-ghi\",\n    bindings: [\n        {\n            principals: [\"role:00000000-0000-1111-0000-000000000000\"],\n            relation: \"editor\",\n        },\n        {\n            principals: [\"org:10000000-0000-1111-0000-000000000000\"],\n            relation: \"viewer\",\n        },\n    ],\n});\n```\n```python\nimport pulumi\nimport pulumi_datadog as datadog\n\n# Create new restriction_policy resource\nfoo = datadog.RestrictionPolicy(\"foo\",\n    resource_id=\"security-rule:abc-def-ghi\",\n    bindings=[\n        {\n            \"principals\": [\"role:00000000-0000-1111-0000-000000000000\"],\n            \"relation\": \"editor\",\n        },\n        {\n            \"principals\": [\"org:10000000-0000-1111-0000-000000000000\"],\n            \"relation\": \"viewer\",\n        },\n    ])\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Datadog = Pulumi.Datadog;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    // Create new restriction_policy resource\n    var foo = new Datadog.RestrictionPolicy(\"foo\", new()\n    {\n        ResourceId = \"security-rule:abc-def-ghi\",\n        Bindings = new[]\n        {\n            new Datadog.Inputs.RestrictionPolicyBindingArgs\n            {\n                Principals = new[]\n                {\n                    \"role:00000000-0000-1111-0000-000000000000\",\n                },\n                Relation = \"editor\",\n            },\n            new Datadog.Inputs.RestrictionPolicyBindingArgs\n            {\n                Principals = new[]\n                {\n                    \"org:10000000-0000-1111-0000-000000000000\",\n                },\n                Relation = \"viewer\",\n            },\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-datadog/sdk/v4/go/datadog\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t// Create new restriction_policy resource\n\t\t_, err := datadog.NewRestrictionPolicy(ctx, \"foo\", \u0026datadog.RestrictionPolicyArgs{\n\t\t\tResourceId: pulumi.String(\"security-rule:abc-def-ghi\"),\n\t\t\tBindings: datadog.RestrictionPolicyBindingArray{\n\t\t\t\t\u0026datadog.RestrictionPolicyBindingArgs{\n\t\t\t\t\tPrincipals: pulumi.StringArray{\n\t\t\t\t\t\tpulumi.String(\"role:00000000-0000-1111-0000-000000000000\"),\n\t\t\t\t\t},\n\t\t\t\t\tRelation: pulumi.String(\"editor\"),\n\t\t\t\t},\n\t\t\t\t\u0026datadog.RestrictionPolicyBindingArgs{\n\t\t\t\t\tPrincipals: pulumi.StringArray{\n\t\t\t\t\t\tpulumi.String(\"org:10000000-0000-1111-0000-000000000000\"),\n\t\t\t\t\t},\n\t\t\t\t\tRelation: pulumi.String(\"viewer\"),\n\t\t\t\t},\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.datadog.RestrictionPolicy;\nimport com.pulumi.datadog.RestrictionPolicyArgs;\nimport com.pulumi.datadog.inputs.RestrictionPolicyBindingArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        // Create new restriction_policy resource\n        var foo = new RestrictionPolicy(\"foo\", RestrictionPolicyArgs.builder()\n            .resourceId(\"security-rule:abc-def-ghi\")\n            .bindings(            \n                RestrictionPolicyBindingArgs.builder()\n                    .principals(\"role:00000000-0000-1111-0000-000000000000\")\n                    .relation(\"editor\")\n                    .build(),\n                RestrictionPolicyBindingArgs.builder()\n                    .principals(\"org:10000000-0000-1111-0000-000000000000\")\n                    .relation(\"viewer\")\n                    .build())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  # Create new restriction_policy resource\n  foo:\n    type: datadog:RestrictionPolicy\n    properties:\n      resourceId: security-rule:abc-def-ghi\n      bindings:\n        - principals:\n            - role:00000000-0000-1111-0000-000000000000\n          relation: editor\n        - principals:\n            - org:10000000-0000-1111-0000-000000000000\n          relation: viewer\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\n```sh\n$ pulumi import datadog:index/restrictionPolicy:RestrictionPolicy new_list \"\u003cpolicy_id\u003e\"\n```\n\n",
            "properties": {
                "bindings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/RestrictionPolicyBinding:RestrictionPolicyBinding"
                    }
                },
                "resourceId": {
                    "type": "string",
                    "description": "Identifier for the resource, formatted as resource*type:resource*id.\n"
                }
            },
            "required": [
                "resourceId"
            ],
            "inputProperties": {
                "bindings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/RestrictionPolicyBinding:RestrictionPolicyBinding"
                    }
                },
                "resourceId": {
                    "type": "string",
                    "description": "Identifier for the resource, formatted as resource*type:resource*id.\n"
                }
            },
            "requiredInputs": [
                "resourceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering RestrictionPolicy resources.\n",
                "properties": {
                    "bindings": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/datadog:index/RestrictionPolicyBinding:RestrictionPolicyBinding"
                        }
                    },
                    "resourceId": {
                        "type": "string",
                        "description": "Identifier for the resource, formatted as resource*type:resource*id.\n"
                    }
                },
                "type": "object"
            }
        },
        "datadog:index/role:Role": {
            "description": "Provides a Datadog role resource. This can be used to create and manage Datadog roles.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as datadog from \"@pulumi/datadog\";\n\n// Source the permissions\nconst bar = datadog.getPermissions({});\n// Create a new Datadog role\nconst foo = new datadog.Role(\"foo\", {\n    name: \"foo\",\n    permissions: [\n        {\n            id: bar.then(bar =\u003e bar.permissions?.monitorsDowntime),\n        },\n        {\n            id: bar.then(bar =\u003e bar.permissions?.monitorsWrite),\n        },\n    ],\n});\n```\n```python\nimport pulumi\nimport pulumi_datadog as datadog\n\n# Source the permissions\nbar = datadog.get_permissions()\n# Create a new Datadog role\nfoo = datadog.Role(\"foo\",\n    name=\"foo\",\n    permissions=[\n        {\n            \"id\": bar.permissions[\"monitorsDowntime\"],\n        },\n        {\n            \"id\": bar.permissions[\"monitorsWrite\"],\n        },\n    ])\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Datadog = Pulumi.Datadog;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    // Source the permissions\n    var bar = Datadog.GetPermissions.Invoke();\n\n    // Create a new Datadog role\n    var foo = new Datadog.Role(\"foo\", new()\n    {\n        Name = \"foo\",\n        Permissions = new[]\n        {\n            new Datadog.Inputs.RolePermissionArgs\n            {\n                Id = bar.Apply(getPermissionsResult =\u003e getPermissionsResult.Permissions?.MonitorsDowntime),\n            },\n            new Datadog.Inputs.RolePermissionArgs\n            {\n                Id = bar.Apply(getPermissionsResult =\u003e getPermissionsResult.Permissions?.MonitorsWrite),\n            },\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-datadog/sdk/v4/go/datadog\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t// Source the permissions\n\t\tbar, err := datadog.GetPermissions(ctx, nil, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t// Create a new Datadog role\n\t\t_, err = datadog.NewRole(ctx, \"foo\", \u0026datadog.RoleArgs{\n\t\t\tName: pulumi.String(\"foo\"),\n\t\t\tPermissions: datadog.RolePermissionArray{\n\t\t\t\t\u0026datadog.RolePermissionArgs{\n\t\t\t\t\tId: pulumi.String(bar.Permissions.MonitorsDowntime),\n\t\t\t\t},\n\t\t\t\t\u0026datadog.RolePermissionArgs{\n\t\t\t\t\tId: pulumi.String(bar.Permissions.MonitorsWrite),\n\t\t\t\t},\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.datadog.DatadogFunctions;\nimport com.pulumi.datadog.inputs.GetPermissionsArgs;\nimport com.pulumi.datadog.Role;\nimport com.pulumi.datadog.RoleArgs;\nimport com.pulumi.datadog.inputs.RolePermissionArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        // Source the permissions\n        final var bar = DatadogFunctions.getPermissions();\n\n        // Create a new Datadog role\n        var foo = new Role(\"foo\", RoleArgs.builder()\n            .name(\"foo\")\n            .permissions(            \n                RolePermissionArgs.builder()\n                    .id(bar.applyValue(getPermissionsResult -\u003e getPermissionsResult.permissions().monitorsDowntime()))\n                    .build(),\n                RolePermissionArgs.builder()\n                    .id(bar.applyValue(getPermissionsResult -\u003e getPermissionsResult.permissions().monitorsWrite()))\n                    .build())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  # Create a new Datadog role\n  foo:\n    type: datadog:Role\n    properties:\n      name: foo\n      permissions:\n        - id: ${bar.permissions.monitorsDowntime}\n        - id: ${bar.permissions.monitorsWrite}\nvariables:\n  # Source the permissions\n  bar:\n    fn::invoke:\n      Function: datadog:getPermissions\n      Arguments: {}\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\nRoles can be imported using their ID, e.g.\n\n```sh\n$ pulumi import datadog:index/role:Role example_role 000000-0000-0000-0000-000000000000\n```\n\n",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Name of the role.\n"
                },
                "permissions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/RolePermission:RolePermission"
                    },
                    "description": "Set of objects containing the permission ID and the name of the permissions granted to this role.\n"
                },
                "userCount": {
                    "type": "integer",
                    "description": "Number of users that have this role.\n"
                },
                "validate": {
                    "type": "boolean",
                    "description": "If set to `false`, skip the validation call done during plan.\n"
                }
            },
            "required": [
                "name",
                "userCount"
            ],
            "inputProperties": {
                "name": {
                    "type": "string",
                    "description": "Name of the role.\n"
                },
                "permissions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/RolePermission:RolePermission"
                    },
                    "description": "Set of objects containing the permission ID and the name of the permissions granted to this role.\n"
                },
                "validate": {
                    "type": "boolean",
                    "description": "If set to `false`, skip the validation call done during plan.\n"
                }
            },
            "requiredInputs": [
                "name"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Role resources.\n",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name of the role.\n"
                    },
                    "permissions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/datadog:index/RolePermission:RolePermission"
                        },
                        "description": "Set of objects containing the permission ID and the name of the permissions granted to this role.\n"
                    },
                    "userCount": {
                        "type": "integer",
                        "description": "Number of users that have this role.\n"
                    },
                    "validate": {
                        "type": "boolean",
                        "description": "If set to `false`, skip the validation call done during plan.\n"
                    }
                },
                "type": "object"
            }
        },
        "datadog:index/rumApplication:RumApplication": {
            "description": "Provides a Datadog RUM application resource. This can be used to create and manage Datadog RUM applications.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as datadog from \"@pulumi/datadog\";\n\nconst rumApplication = new datadog.RumApplication(\"rum_application\", {\n    name: \"my-application\",\n    type: \"browser\",\n});\n```\n```python\nimport pulumi\nimport pulumi_datadog as datadog\n\nrum_application = datadog.RumApplication(\"rum_application\",\n    name=\"my-application\",\n    type=\"browser\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Datadog = Pulumi.Datadog;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var rumApplication = new Datadog.RumApplication(\"rum_application\", new()\n    {\n        Name = \"my-application\",\n        Type = \"browser\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-datadog/sdk/v4/go/datadog\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := datadog.NewRumApplication(ctx, \"rum_application\", \u0026datadog.RumApplicationArgs{\n\t\t\tName: pulumi.String(\"my-application\"),\n\t\t\tType: pulumi.String(\"browser\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.datadog.RumApplication;\nimport com.pulumi.datadog.RumApplicationArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var rumApplication = new RumApplication(\"rumApplication\", RumApplicationArgs.builder()\n            .name(\"my-application\")\n            .type(\"browser\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  rumApplication:\n    type: datadog:RumApplication\n    name: rum_application\n    properties:\n      name: my-application\n      type: browser\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\n```sh\n$ pulumi import datadog:index/rumApplication:RumApplication rum_application a1b2c3d4-a1b2-a1b2-a1b2-a1b2c3d4e5f6\n```\n\n",
            "properties": {
                "clientToken": {
                    "type": "string",
                    "description": "The client token.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the RUM application.\n"
                },
                "type": {
                    "type": "string",
                    "description": "Type of the RUM application. Supported values are `browser`, `ios`, `android`, `react-native`, `flutter`. Defaults to `\"browser\"`.\n"
                }
            },
            "required": [
                "clientToken",
                "name",
                "type"
            ],
            "inputProperties": {
                "name": {
                    "type": "string",
                    "description": "Name of the RUM application.\n"
                },
                "type": {
                    "type": "string",
                    "description": "Type of the RUM application. Supported values are `browser`, `ios`, `android`, `react-native`, `flutter`. Defaults to `\"browser\"`.\n"
                }
            },
            "requiredInputs": [
                "name"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering RumApplication resources.\n",
                "properties": {
                    "clientToken": {
                        "type": "string",
                        "description": "The client token.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the RUM application.\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "Type of the RUM application. Supported values are `browser`, `ios`, `android`, `react-native`, `flutter`. Defaults to `\"browser\"`.\n"
                    }
                },
                "type": "object"
            }
        },
        "datadog:index/securityMonitoringDefaultRule:SecurityMonitoringDefaultRule": {
            "description": "Provides a Datadog Security Monitoring Rule API resource for default rules. It can only be imported, you can't create a default rule.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as datadog from \"@pulumi/datadog\";\n\nconst adefaultrule = new datadog.SecurityMonitoringDefaultRule(\"adefaultrule\", {\n    enabled: true,\n    cases: [{\n        status: \"high\",\n        notifications: [\"@me\"],\n    }],\n});\n```\n```python\nimport pulumi\nimport pulumi_datadog as datadog\n\nadefaultrule = datadog.SecurityMonitoringDefaultRule(\"adefaultrule\",\n    enabled=True,\n    cases=[{\n        \"status\": \"high\",\n        \"notifications\": [\"@me\"],\n    }])\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Datadog = Pulumi.Datadog;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var adefaultrule = new Datadog.SecurityMonitoringDefaultRule(\"adefaultrule\", new()\n    {\n        Enabled = true,\n        Cases = new[]\n        {\n            new Datadog.Inputs.SecurityMonitoringDefaultRuleCaseArgs\n            {\n                Status = \"high\",\n                Notifications = new[]\n                {\n                    \"@me\",\n                },\n            },\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-datadog/sdk/v4/go/datadog\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := datadog.NewSecurityMonitoringDefaultRule(ctx, \"adefaultrule\", \u0026datadog.SecurityMonitoringDefaultRuleArgs{\n\t\t\tEnabled: pulumi.Bool(true),\n\t\t\tCases: datadog.SecurityMonitoringDefaultRuleCaseArray{\n\t\t\t\t\u0026datadog.SecurityMonitoringDefaultRuleCaseArgs{\n\t\t\t\t\tStatus: pulumi.String(\"high\"),\n\t\t\t\t\tNotifications: pulumi.StringArray{\n\t\t\t\t\t\tpulumi.String(\"@me\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.datadog.SecurityMonitoringDefaultRule;\nimport com.pulumi.datadog.SecurityMonitoringDefaultRuleArgs;\nimport com.pulumi.datadog.inputs.SecurityMonitoringDefaultRuleCaseArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var adefaultrule = new SecurityMonitoringDefaultRule(\"adefaultrule\", SecurityMonitoringDefaultRuleArgs.builder()\n            .enabled(true)\n            .cases(SecurityMonitoringDefaultRuleCaseArgs.builder()\n                .status(\"high\")\n                .notifications(\"@me\")\n                .build())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  adefaultrule:\n    type: datadog:SecurityMonitoringDefaultRule\n    properties:\n      enabled: true # Change the notifications for the high case\n      cases:\n        - status: high\n          notifications:\n            - '@me'\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\nDefault rules need to be imported using their ID before applying.\n\nresource \"datadog_security_monitoring_default_rule\" \"adefaultrule\" {\n\n}\n\n```sh\n$ pulumi import datadog:index/securityMonitoringDefaultRule:SecurityMonitoringDefaultRule adefaultrule m0o-hto-lkb\n```\n\n",
            "properties": {
                "cases": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/SecurityMonitoringDefaultRuleCase:SecurityMonitoringDefaultRuleCase"
                    },
                    "description": "Cases of the rule, this is used to update notifications.\n"
                },
                "customTags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Custom tags for generated signals.\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Enable the rule. Defaults to `true`.\n"
                },
                "filters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/SecurityMonitoringDefaultRuleFilter:SecurityMonitoringDefaultRuleFilter"
                    },
                    "description": "Additional queries to filter matched events before they are processed.\n"
                },
                "options": {
                    "$ref": "#/types/datadog:index/SecurityMonitoringDefaultRuleOptions:SecurityMonitoringDefaultRuleOptions",
                    "description": "Options on default rules. Note that only a subset of fields can be updated on default rule options.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The rule type.\n"
                }
            },
            "required": [
                "type"
            ],
            "inputProperties": {
                "cases": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/SecurityMonitoringDefaultRuleCase:SecurityMonitoringDefaultRuleCase"
                    },
                    "description": "Cases of the rule, this is used to update notifications.\n"
                },
                "customTags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Custom tags for generated signals.\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Enable the rule. Defaults to `true`.\n"
                },
                "filters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/SecurityMonitoringDefaultRuleFilter:SecurityMonitoringDefaultRuleFilter"
                    },
                    "description": "Additional queries to filter matched events before they are processed.\n"
                },
                "options": {
                    "$ref": "#/types/datadog:index/SecurityMonitoringDefaultRuleOptions:SecurityMonitoringDefaultRuleOptions",
                    "description": "Options on default rules. Note that only a subset of fields can be updated on default rule options.\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SecurityMonitoringDefaultRule resources.\n",
                "properties": {
                    "cases": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/datadog:index/SecurityMonitoringDefaultRuleCase:SecurityMonitoringDefaultRuleCase"
                        },
                        "description": "Cases of the rule, this is used to update notifications.\n"
                    },
                    "customTags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Custom tags for generated signals.\n"
                    },
                    "enabled": {
                        "type": "boolean",
                        "description": "Enable the rule. Defaults to `true`.\n"
                    },
                    "filters": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/datadog:index/SecurityMonitoringDefaultRuleFilter:SecurityMonitoringDefaultRuleFilter"
                        },
                        "description": "Additional queries to filter matched events before they are processed.\n"
                    },
                    "options": {
                        "$ref": "#/types/datadog:index/SecurityMonitoringDefaultRuleOptions:SecurityMonitoringDefaultRuleOptions",
                        "description": "Options on default rules. Note that only a subset of fields can be updated on default rule options.\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "The rule type.\n"
                    }
                },
                "type": "object"
            }
        },
        "datadog:index/securityMonitoringFilter:SecurityMonitoringFilter": {
            "description": "Provides a Datadog Security Monitoring Rule API resource for security filters.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as datadog from \"@pulumi/datadog\";\n\nconst myFilter = new datadog.SecurityMonitoringFilter(\"my_filter\", {\n    name: \"My filter\",\n    query: \"The filter is filtering.\",\n    isEnabled: true,\n    exclusionFilters: [\n        {\n            name: \"first\",\n            query: \"exclude some logs\",\n        },\n        {\n            name: \"second\",\n            query: \"exclude some other logs\",\n        },\n    ],\n});\n```\n```python\nimport pulumi\nimport pulumi_datadog as datadog\n\nmy_filter = datadog.SecurityMonitoringFilter(\"my_filter\",\n    name=\"My filter\",\n    query=\"The filter is filtering.\",\n    is_enabled=True,\n    exclusion_filters=[\n        {\n            \"name\": \"first\",\n            \"query\": \"exclude some logs\",\n        },\n        {\n            \"name\": \"second\",\n            \"query\": \"exclude some other logs\",\n        },\n    ])\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Datadog = Pulumi.Datadog;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var myFilter = new Datadog.SecurityMonitoringFilter(\"my_filter\", new()\n    {\n        Name = \"My filter\",\n        Query = \"The filter is filtering.\",\n        IsEnabled = true,\n        ExclusionFilters = new[]\n        {\n            new Datadog.Inputs.SecurityMonitoringFilterExclusionFilterArgs\n            {\n                Name = \"first\",\n                Query = \"exclude some logs\",\n            },\n            new Datadog.Inputs.SecurityMonitoringFilterExclusionFilterArgs\n            {\n                Name = \"second\",\n                Query = \"exclude some other logs\",\n            },\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-datadog/sdk/v4/go/datadog\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := datadog.NewSecurityMonitoringFilter(ctx, \"my_filter\", \u0026datadog.SecurityMonitoringFilterArgs{\n\t\t\tName:      pulumi.String(\"My filter\"),\n\t\t\tQuery:     pulumi.String(\"The filter is filtering.\"),\n\t\t\tIsEnabled: pulumi.Bool(true),\n\t\t\tExclusionFilters: datadog.SecurityMonitoringFilterExclusionFilterArray{\n\t\t\t\t\u0026datadog.SecurityMonitoringFilterExclusionFilterArgs{\n\t\t\t\t\tName:  pulumi.String(\"first\"),\n\t\t\t\t\tQuery: pulumi.String(\"exclude some logs\"),\n\t\t\t\t},\n\t\t\t\t\u0026datadog.SecurityMonitoringFilterExclusionFilterArgs{\n\t\t\t\t\tName:  pulumi.String(\"second\"),\n\t\t\t\t\tQuery: pulumi.String(\"exclude some other logs\"),\n\t\t\t\t},\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.datadog.SecurityMonitoringFilter;\nimport com.pulumi.datadog.SecurityMonitoringFilterArgs;\nimport com.pulumi.datadog.inputs.SecurityMonitoringFilterExclusionFilterArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var myFilter = new SecurityMonitoringFilter(\"myFilter\", SecurityMonitoringFilterArgs.builder()\n            .name(\"My filter\")\n            .query(\"The filter is filtering.\")\n            .isEnabled(true)\n            .exclusionFilters(            \n                SecurityMonitoringFilterExclusionFilterArgs.builder()\n                    .name(\"first\")\n                    .query(\"exclude some logs\")\n                    .build(),\n                SecurityMonitoringFilterExclusionFilterArgs.builder()\n                    .name(\"second\")\n                    .query(\"exclude some other logs\")\n                    .build())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  myFilter:\n    type: datadog:SecurityMonitoringFilter\n    name: my_filter\n    properties:\n      name: My filter\n      query: The filter is filtering.\n      isEnabled: true\n      exclusionFilters:\n        - name: first\n          query: exclude some logs\n        - name: second\n          query: exclude some other logs\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\nSecurity monitoring filters can be imported using ID, e.g.\n\n```sh\n$ pulumi import datadog:index/securityMonitoringFilter:SecurityMonitoringFilter my_filter m0o-hto-lkb\n```\n\n",
            "properties": {
                "exclusionFilters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/SecurityMonitoringFilterExclusionFilter:SecurityMonitoringFilterExclusionFilter"
                    },
                    "description": "Exclusion filters to exclude some logs from the security filter.\n"
                },
                "filteredDataType": {
                    "type": "string",
                    "description": "The filtered data type. Valid values are `logs`. Defaults to `\"logs\"`.\n"
                },
                "isEnabled": {
                    "type": "boolean",
                    "description": "Whether the security filter is enabled.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the security filter.\n"
                },
                "query": {
                    "type": "string",
                    "description": "The query of the security filter.\n"
                },
                "version": {
                    "type": "integer",
                    "description": "The version of the security filter.\n"
                }
            },
            "required": [
                "isEnabled",
                "name",
                "query",
                "version"
            ],
            "inputProperties": {
                "exclusionFilters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/SecurityMonitoringFilterExclusionFilter:SecurityMonitoringFilterExclusionFilter"
                    },
                    "description": "Exclusion filters to exclude some logs from the security filter.\n"
                },
                "filteredDataType": {
                    "type": "string",
                    "description": "The filtered data type. Valid values are `logs`. Defaults to `\"logs\"`.\n"
                },
                "isEnabled": {
                    "type": "boolean",
                    "description": "Whether the security filter is enabled.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the security filter.\n"
                },
                "query": {
                    "type": "string",
                    "description": "The query of the security filter.\n"
                }
            },
            "requiredInputs": [
                "isEnabled",
                "name",
                "query"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SecurityMonitoringFilter resources.\n",
                "properties": {
                    "exclusionFilters": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/datadog:index/SecurityMonitoringFilterExclusionFilter:SecurityMonitoringFilterExclusionFilter"
                        },
                        "description": "Exclusion filters to exclude some logs from the security filter.\n"
                    },
                    "filteredDataType": {
                        "type": "string",
                        "description": "The filtered data type. Valid values are `logs`. Defaults to `\"logs\"`.\n"
                    },
                    "isEnabled": {
                        "type": "boolean",
                        "description": "Whether the security filter is enabled.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the security filter.\n"
                    },
                    "query": {
                        "type": "string",
                        "description": "The query of the security filter.\n"
                    },
                    "version": {
                        "type": "integer",
                        "description": "The version of the security filter.\n"
                    }
                },
                "type": "object"
            }
        },
        "datadog:index/securityMonitoringRule:SecurityMonitoringRule": {
            "description": "Provides a Datadog Security Monitoring Rule API resource. This can be used to create and manage Datadog security monitoring rules. To change settings for a default rule use `datadog_security_default_rule` instead.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as datadog from \"@pulumi/datadog\";\n\nconst myrule = new datadog.SecurityMonitoringRule(\"myrule\", {\n    name: \"My rule\",\n    message: \"The rule has triggered.\",\n    enabled: true,\n    queries: [\n        {\n            name: \"errors\",\n            query: \"status:error\",\n            aggregation: \"count\",\n            groupByFields: [\"host\"],\n        },\n        {\n            name: \"warnings\",\n            query: \"status:warning\",\n            aggregation: \"count\",\n            groupByFields: [\"host\"],\n        },\n    ],\n    cases: [{\n        status: \"high\",\n        condition: \"errors \u003e 3 \u0026\u0026 warnings \u003e 10\",\n        notifications: [\"@user\"],\n    }],\n    options: {\n        evaluationWindow: 300,\n        keepAlive: 600,\n        maxSignalDuration: 900,\n    },\n    tags: [\"type:dos\"],\n});\n```\n```python\nimport pulumi\nimport pulumi_datadog as datadog\n\nmyrule = datadog.SecurityMonitoringRule(\"myrule\",\n    name=\"My rule\",\n    message=\"The rule has triggered.\",\n    enabled=True,\n    queries=[\n        {\n            \"name\": \"errors\",\n            \"query\": \"status:error\",\n            \"aggregation\": \"count\",\n            \"group_by_fields\": [\"host\"],\n        },\n        {\n            \"name\": \"warnings\",\n            \"query\": \"status:warning\",\n            \"aggregation\": \"count\",\n            \"group_by_fields\": [\"host\"],\n        },\n    ],\n    cases=[{\n        \"status\": \"high\",\n        \"condition\": \"errors \u003e 3 \u0026\u0026 warnings \u003e 10\",\n        \"notifications\": [\"@user\"],\n    }],\n    options={\n        \"evaluation_window\": 300,\n        \"keep_alive\": 600,\n        \"max_signal_duration\": 900,\n    },\n    tags=[\"type:dos\"])\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Datadog = Pulumi.Datadog;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var myrule = new Datadog.SecurityMonitoringRule(\"myrule\", new()\n    {\n        Name = \"My rule\",\n        Message = \"The rule has triggered.\",\n        Enabled = true,\n        Queries = new[]\n        {\n            new Datadog.Inputs.SecurityMonitoringRuleQueryArgs\n            {\n                Name = \"errors\",\n                Query = \"status:error\",\n                Aggregation = \"count\",\n                GroupByFields = new[]\n                {\n                    \"host\",\n                },\n            },\n            new Datadog.Inputs.SecurityMonitoringRuleQueryArgs\n            {\n                Name = \"warnings\",\n                Query = \"status:warning\",\n                Aggregation = \"count\",\n                GroupByFields = new[]\n                {\n                    \"host\",\n                },\n            },\n        },\n        Cases = new[]\n        {\n            new Datadog.Inputs.SecurityMonitoringRuleCaseArgs\n            {\n                Status = \"high\",\n                Condition = \"errors \u003e 3 \u0026\u0026 warnings \u003e 10\",\n                Notifications = new[]\n                {\n                    \"@user\",\n                },\n            },\n        },\n        Options = new Datadog.Inputs.SecurityMonitoringRuleOptionsArgs\n        {\n            EvaluationWindow = 300,\n            KeepAlive = 600,\n            MaxSignalDuration = 900,\n        },\n        Tags = new[]\n        {\n            \"type:dos\",\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-datadog/sdk/v4/go/datadog\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := datadog.NewSecurityMonitoringRule(ctx, \"myrule\", \u0026datadog.SecurityMonitoringRuleArgs{\n\t\t\tName:    pulumi.String(\"My rule\"),\n\t\t\tMessage: pulumi.String(\"The rule has triggered.\"),\n\t\t\tEnabled: pulumi.Bool(true),\n\t\t\tQueries: datadog.SecurityMonitoringRuleQueryArray{\n\t\t\t\t\u0026datadog.SecurityMonitoringRuleQueryArgs{\n\t\t\t\t\tName:        pulumi.String(\"errors\"),\n\t\t\t\t\tQuery:       pulumi.String(\"status:error\"),\n\t\t\t\t\tAggregation: pulumi.String(\"count\"),\n\t\t\t\t\tGroupByFields: pulumi.StringArray{\n\t\t\t\t\t\tpulumi.String(\"host\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t\u0026datadog.SecurityMonitoringRuleQueryArgs{\n\t\t\t\t\tName:        pulumi.String(\"warnings\"),\n\t\t\t\t\tQuery:       pulumi.String(\"status:warning\"),\n\t\t\t\t\tAggregation: pulumi.String(\"count\"),\n\t\t\t\t\tGroupByFields: pulumi.StringArray{\n\t\t\t\t\t\tpulumi.String(\"host\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\tCases: datadog.SecurityMonitoringRuleCaseArray{\n\t\t\t\t\u0026datadog.SecurityMonitoringRuleCaseArgs{\n\t\t\t\t\tStatus:    pulumi.String(\"high\"),\n\t\t\t\t\tCondition: pulumi.String(\"errors \u003e 3 \u0026\u0026 warnings \u003e 10\"),\n\t\t\t\t\tNotifications: pulumi.StringArray{\n\t\t\t\t\t\tpulumi.String(\"@user\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\tOptions: \u0026datadog.SecurityMonitoringRuleOptionsArgs{\n\t\t\t\tEvaluationWindow:  pulumi.Int(300),\n\t\t\t\tKeepAlive:         pulumi.Int(600),\n\t\t\t\tMaxSignalDuration: pulumi.Int(900),\n\t\t\t},\n\t\t\tTags: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"type:dos\"),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.datadog.SecurityMonitoringRule;\nimport com.pulumi.datadog.SecurityMonitoringRuleArgs;\nimport com.pulumi.datadog.inputs.SecurityMonitoringRuleQueryArgs;\nimport com.pulumi.datadog.inputs.SecurityMonitoringRuleCaseArgs;\nimport com.pulumi.datadog.inputs.SecurityMonitoringRuleOptionsArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var myrule = new SecurityMonitoringRule(\"myrule\", SecurityMonitoringRuleArgs.builder()\n            .name(\"My rule\")\n            .message(\"The rule has triggered.\")\n            .enabled(true)\n            .queries(            \n                SecurityMonitoringRuleQueryArgs.builder()\n                    .name(\"errors\")\n                    .query(\"status:error\")\n                    .aggregation(\"count\")\n                    .groupByFields(\"host\")\n                    .build(),\n                SecurityMonitoringRuleQueryArgs.builder()\n                    .name(\"warnings\")\n                    .query(\"status:warning\")\n                    .aggregation(\"count\")\n                    .groupByFields(\"host\")\n                    .build())\n            .cases(SecurityMonitoringRuleCaseArgs.builder()\n                .status(\"high\")\n                .condition(\"errors \u003e 3 \u0026\u0026 warnings \u003e 10\")\n                .notifications(\"@user\")\n                .build())\n            .options(SecurityMonitoringRuleOptionsArgs.builder()\n                .evaluationWindow(300)\n                .keepAlive(600)\n                .maxSignalDuration(900)\n                .build())\n            .tags(\"type:dos\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  myrule:\n    type: datadog:SecurityMonitoringRule\n    properties:\n      name: My rule\n      message: The rule has triggered.\n      enabled: true\n      queries:\n        - name: errors\n          query: status:error\n          aggregation: count\n          groupByFields:\n            - host\n        - name: warnings\n          query: status:warning\n          aggregation: count\n          groupByFields:\n            - host\n      cases:\n        - status: high\n          condition: errors \u003e 3 \u0026\u0026 warnings \u003e 10\n          notifications:\n            - '@user'\n      options:\n        evaluationWindow: 300\n        keepAlive: 600\n        maxSignalDuration: 900\n      tags:\n        - type:dos\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\nSecurity monitoring rules can be imported using ID, e.g.\n\n```sh\n$ pulumi import datadog:index/securityMonitoringRule:SecurityMonitoringRule my_rule m0o-hto-lkb\n```\n\n",
            "properties": {
                "cases": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/SecurityMonitoringRuleCase:SecurityMonitoringRuleCase"
                    },
                    "description": "Cases for generating signals.\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Whether the rule is enabled. Defaults to `true`.\n"
                },
                "filters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/SecurityMonitoringRuleFilter:SecurityMonitoringRuleFilter"
                    },
                    "description": "Additional queries to filter matched events before they are processed. **Note**: This field is deprecated for log detection, signal correlation, and workload security rules.\n"
                },
                "hasExtendedTitle": {
                    "type": "boolean",
                    "description": "Whether the notifications include the triggering group-by values in their title. Defaults to `false`.\n"
                },
                "message": {
                    "type": "string",
                    "description": "Message for generated signals.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the rule.\n"
                },
                "options": {
                    "$ref": "#/types/datadog:index/SecurityMonitoringRuleOptions:SecurityMonitoringRuleOptions",
                    "description": "Options on rules.\n"
                },
                "queries": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/SecurityMonitoringRuleQuery:SecurityMonitoringRuleQuery"
                    },
                    "description": "Queries for selecting logs which are part of the rule.\n"
                },
                "signalQueries": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/SecurityMonitoringRuleSignalQuery:SecurityMonitoringRuleSignalQuery"
                    },
                    "description": "Queries for selecting logs which are part of the rule.\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Tags for generated signals.\n"
                },
                "thirdPartyCases": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/SecurityMonitoringRuleThirdPartyCase:SecurityMonitoringRuleThirdPartyCase"
                    },
                    "description": "Cases for generating signals for third-party rules. Only required and accepted for third-party rules\n"
                },
                "type": {
                    "type": "string",
                    "description": "The rule type. Valid values are `application_security`, `log_detection`, `workload_security`, `signal_correlation`. Defaults to `\"log_detection\"`.\n"
                },
                "validate": {
                    "type": "boolean",
                    "description": "Whether or not to validate the Rule.\n"
                }
            },
            "required": [
                "message",
                "name"
            ],
            "inputProperties": {
                "cases": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/SecurityMonitoringRuleCase:SecurityMonitoringRuleCase"
                    },
                    "description": "Cases for generating signals.\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Whether the rule is enabled. Defaults to `true`.\n"
                },
                "filters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/SecurityMonitoringRuleFilter:SecurityMonitoringRuleFilter"
                    },
                    "description": "Additional queries to filter matched events before they are processed. **Note**: This field is deprecated for log detection, signal correlation, and workload security rules.\n"
                },
                "hasExtendedTitle": {
                    "type": "boolean",
                    "description": "Whether the notifications include the triggering group-by values in their title. Defaults to `false`.\n"
                },
                "message": {
                    "type": "string",
                    "description": "Message for generated signals.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the rule.\n"
                },
                "options": {
                    "$ref": "#/types/datadog:index/SecurityMonitoringRuleOptions:SecurityMonitoringRuleOptions",
                    "description": "Options on rules.\n"
                },
                "queries": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/SecurityMonitoringRuleQuery:SecurityMonitoringRuleQuery"
                    },
                    "description": "Queries for selecting logs which are part of the rule.\n"
                },
                "signalQueries": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/SecurityMonitoringRuleSignalQuery:SecurityMonitoringRuleSignalQuery"
                    },
                    "description": "Queries for selecting logs which are part of the rule.\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Tags for generated signals.\n"
                },
                "thirdPartyCases": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/SecurityMonitoringRuleThirdPartyCase:SecurityMonitoringRuleThirdPartyCase"
                    },
                    "description": "Cases for generating signals for third-party rules. Only required and accepted for third-party rules\n"
                },
                "type": {
                    "type": "string",
                    "description": "The rule type. Valid values are `application_security`, `log_detection`, `workload_security`, `signal_correlation`. Defaults to `\"log_detection\"`.\n"
                },
                "validate": {
                    "type": "boolean",
                    "description": "Whether or not to validate the Rule.\n"
                }
            },
            "requiredInputs": [
                "message",
                "name"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SecurityMonitoringRule resources.\n",
                "properties": {
                    "cases": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/datadog:index/SecurityMonitoringRuleCase:SecurityMonitoringRuleCase"
                        },
                        "description": "Cases for generating signals.\n"
                    },
                    "enabled": {
                        "type": "boolean",
                        "description": "Whether the rule is enabled. Defaults to `true`.\n"
                    },
                    "filters": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/datadog:index/SecurityMonitoringRuleFilter:SecurityMonitoringRuleFilter"
                        },
                        "description": "Additional queries to filter matched events before they are processed. **Note**: This field is deprecated for log detection, signal correlation, and workload security rules.\n"
                    },
                    "hasExtendedTitle": {
                        "type": "boolean",
                        "description": "Whether the notifications include the triggering group-by values in their title. Defaults to `false`.\n"
                    },
                    "message": {
                        "type": "string",
                        "description": "Message for generated signals.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the rule.\n"
                    },
                    "options": {
                        "$ref": "#/types/datadog:index/SecurityMonitoringRuleOptions:SecurityMonitoringRuleOptions",
                        "description": "Options on rules.\n"
                    },
                    "queries": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/datadog:index/SecurityMonitoringRuleQuery:SecurityMonitoringRuleQuery"
                        },
                        "description": "Queries for selecting logs which are part of the rule.\n"
                    },
                    "signalQueries": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/datadog:index/SecurityMonitoringRuleSignalQuery:SecurityMonitoringRuleSignalQuery"
                        },
                        "description": "Queries for selecting logs which are part of the rule.\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Tags for generated signals.\n"
                    },
                    "thirdPartyCases": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/datadog:index/SecurityMonitoringRuleThirdPartyCase:SecurityMonitoringRuleThirdPartyCase"
                        },
                        "description": "Cases for generating signals for third-party rules. Only required and accepted for third-party rules\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "The rule type. Valid values are `application_security`, `log_detection`, `workload_security`, `signal_correlation`. Defaults to `\"log_detection\"`.\n"
                    },
                    "validate": {
                        "type": "boolean",
                        "description": "Whether or not to validate the Rule.\n"
                    }
                },
                "type": "object"
            }
        },
        "datadog:index/securityMonitoringSuppression:SecurityMonitoringSuppression": {
            "description": "Provides a Datadog Security Monitoring Suppression API resource. It can be used to create and manage Datadog security monitoring suppression rules.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as datadog from \"@pulumi/datadog\";\n\nconst mySuppression = new datadog.SecurityMonitoringSuppression(\"my_suppression\", {\n    name: \"My suppression\",\n    description: \"Suppression for low severity CloudTrail signals from John Doe, excluding test environments from analysis, limited to 2024\",\n    enabled: true,\n    ruleQuery: \"severity:low source:cloudtrail\",\n    suppressionQuery: \"@usr.id:john.doe\",\n    dataExclusionQuery: \"env:test\",\n    expirationDate: \"2024-12-31T12:00:00Z\",\n});\n```\n```python\nimport pulumi\nimport pulumi_datadog as datadog\n\nmy_suppression = datadog.SecurityMonitoringSuppression(\"my_suppression\",\n    name=\"My suppression\",\n    description=\"Suppression for low severity CloudTrail signals from John Doe, excluding test environments from analysis, limited to 2024\",\n    enabled=True,\n    rule_query=\"severity:low source:cloudtrail\",\n    suppression_query=\"@usr.id:john.doe\",\n    data_exclusion_query=\"env:test\",\n    expiration_date=\"2024-12-31T12:00:00Z\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Datadog = Pulumi.Datadog;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var mySuppression = new Datadog.SecurityMonitoringSuppression(\"my_suppression\", new()\n    {\n        Name = \"My suppression\",\n        Description = \"Suppression for low severity CloudTrail signals from John Doe, excluding test environments from analysis, limited to 2024\",\n        Enabled = true,\n        RuleQuery = \"severity:low source:cloudtrail\",\n        SuppressionQuery = \"@usr.id:john.doe\",\n        DataExclusionQuery = \"env:test\",\n        ExpirationDate = \"2024-12-31T12:00:00Z\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-datadog/sdk/v4/go/datadog\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := datadog.NewSecurityMonitoringSuppression(ctx, \"my_suppression\", \u0026datadog.SecurityMonitoringSuppressionArgs{\n\t\t\tName:               pulumi.String(\"My suppression\"),\n\t\t\tDescription:        pulumi.String(\"Suppression for low severity CloudTrail signals from John Doe, excluding test environments from analysis, limited to 2024\"),\n\t\t\tEnabled:            pulumi.Bool(true),\n\t\t\tRuleQuery:          pulumi.String(\"severity:low source:cloudtrail\"),\n\t\t\tSuppressionQuery:   pulumi.String(\"@usr.id:john.doe\"),\n\t\t\tDataExclusionQuery: pulumi.String(\"env:test\"),\n\t\t\tExpirationDate:     pulumi.String(\"2024-12-31T12:00:00Z\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.datadog.SecurityMonitoringSuppression;\nimport com.pulumi.datadog.SecurityMonitoringSuppressionArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var mySuppression = new SecurityMonitoringSuppression(\"mySuppression\", SecurityMonitoringSuppressionArgs.builder()\n            .name(\"My suppression\")\n            .description(\"Suppression for low severity CloudTrail signals from John Doe, excluding test environments from analysis, limited to 2024\")\n            .enabled(true)\n            .ruleQuery(\"severity:low source:cloudtrail\")\n            .suppressionQuery(\"@usr.id:john.doe\")\n            .dataExclusionQuery(\"env:test\")\n            .expirationDate(\"2024-12-31T12:00:00Z\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  mySuppression:\n    type: datadog:SecurityMonitoringSuppression\n    name: my_suppression\n    properties:\n      name: My suppression\n      description: Suppression for low severity CloudTrail signals from John Doe, excluding test environments from analysis, limited to 2024\n      enabled: true\n      ruleQuery: severity:low source:cloudtrail\n      suppressionQuery: '@usr.id:john.doe'\n      dataExclusionQuery: env:test\n      expirationDate: 2024-12-31T12:00:00Z\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\nSecurity monitoring suppressions can be imported using ID, for example:\n\n```sh\n$ pulumi import datadog:index/securityMonitoringSuppression:SecurityMonitoringSuppression my_suppression m0o-hto-lkb\n```\n\n",
            "properties": {
                "dataExclusionQuery": {
                    "type": "string",
                    "description": "An exclusion query on the input data of the security rules, which could be logs, Agent events, or other types of data based on the security rule. Events matching this query are ignored by any detection rules referenced in the suppression rule.\n"
                },
                "description": {
                    "type": "string",
                    "description": "A description for the suppression rule.\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Whether the suppression rule is enabled.\n"
                },
                "expirationDate": {
                    "type": "string",
                    "description": "A RFC3339 timestamp giving an expiration date for the suppression rule. After this date, it won't suppress signals anymore.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the suppression rule.\n"
                },
                "ruleQuery": {
                    "type": "string",
                    "description": "The rule query of the suppression rule, with the same syntax as the search bar for detection rules.\n"
                },
                "suppressionQuery": {
                    "type": "string",
                    "description": "The suppression query of the suppression rule. If a signal matches this query, it is suppressed and is not triggered. It uses the same syntax as the queries to search signals in the Signals Explorer.\n"
                }
            },
            "required": [
                "enabled",
                "name",
                "ruleQuery"
            ],
            "inputProperties": {
                "dataExclusionQuery": {
                    "type": "string",
                    "description": "An exclusion query on the input data of the security rules, which could be logs, Agent events, or other types of data based on the security rule. Events matching this query are ignored by any detection rules referenced in the suppression rule.\n"
                },
                "description": {
                    "type": "string",
                    "description": "A description for the suppression rule.\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Whether the suppression rule is enabled.\n"
                },
                "expirationDate": {
                    "type": "string",
                    "description": "A RFC3339 timestamp giving an expiration date for the suppression rule. After this date, it won't suppress signals anymore.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the suppression rule.\n"
                },
                "ruleQuery": {
                    "type": "string",
                    "description": "The rule query of the suppression rule, with the same syntax as the search bar for detection rules.\n"
                },
                "suppressionQuery": {
                    "type": "string",
                    "description": "The suppression query of the suppression rule. If a signal matches this query, it is suppressed and is not triggered. It uses the same syntax as the queries to search signals in the Signals Explorer.\n"
                }
            },
            "requiredInputs": [
                "enabled",
                "name",
                "ruleQuery"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SecurityMonitoringSuppression resources.\n",
                "properties": {
                    "dataExclusionQuery": {
                        "type": "string",
                        "description": "An exclusion query on the input data of the security rules, which could be logs, Agent events, or other types of data based on the security rule. Events matching this query are ignored by any detection rules referenced in the suppression rule.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "A description for the suppression rule.\n"
                    },
                    "enabled": {
                        "type": "boolean",
                        "description": "Whether the suppression rule is enabled.\n"
                    },
                    "expirationDate": {
                        "type": "string",
                        "description": "A RFC3339 timestamp giving an expiration date for the suppression rule. After this date, it won't suppress signals anymore.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the suppression rule.\n"
                    },
                    "ruleQuery": {
                        "type": "string",
                        "description": "The rule query of the suppression rule, with the same syntax as the search bar for detection rules.\n"
                    },
                    "suppressionQuery": {
                        "type": "string",
                        "description": "The suppression query of the suppression rule. If a signal matches this query, it is suppressed and is not triggered. It uses the same syntax as the queries to search signals in the Signals Explorer.\n"
                    }
                },
                "type": "object"
            }
        },
        "datadog:index/sensitiveDataScannerGroup:SensitiveDataScannerGroup": {
            "description": "Provides a Sensitive Data Scanner group resource.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as datadog from \"@pulumi/datadog\";\n\n// Create new sensitive_data_scanner_group resource\nconst mygroup = new datadog.SensitiveDataScannerGroup(\"mygroup\", {\n    name: \"My new scanning group\",\n    description: \"A relevant description\",\n    filter: {\n        query: \"service:my-service\",\n    },\n    isEnabled: true,\n    productLists: [\"apm\"],\n});\n```\n```python\nimport pulumi\nimport pulumi_datadog as datadog\n\n# Create new sensitive_data_scanner_group resource\nmygroup = datadog.SensitiveDataScannerGroup(\"mygroup\",\n    name=\"My new scanning group\",\n    description=\"A relevant description\",\n    filter={\n        \"query\": \"service:my-service\",\n    },\n    is_enabled=True,\n    product_lists=[\"apm\"])\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Datadog = Pulumi.Datadog;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    // Create new sensitive_data_scanner_group resource\n    var mygroup = new Datadog.SensitiveDataScannerGroup(\"mygroup\", new()\n    {\n        Name = \"My new scanning group\",\n        Description = \"A relevant description\",\n        Filter = new Datadog.Inputs.SensitiveDataScannerGroupFilterArgs\n        {\n            Query = \"service:my-service\",\n        },\n        IsEnabled = true,\n        ProductLists = new[]\n        {\n            \"apm\",\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-datadog/sdk/v4/go/datadog\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t// Create new sensitive_data_scanner_group resource\n\t\t_, err := datadog.NewSensitiveDataScannerGroup(ctx, \"mygroup\", \u0026datadog.SensitiveDataScannerGroupArgs{\n\t\t\tName:        pulumi.String(\"My new scanning group\"),\n\t\t\tDescription: pulumi.String(\"A relevant description\"),\n\t\t\tFilter: \u0026datadog.SensitiveDataScannerGroupFilterArgs{\n\t\t\t\tQuery: pulumi.String(\"service:my-service\"),\n\t\t\t},\n\t\t\tIsEnabled: pulumi.Bool(true),\n\t\t\tProductLists: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"apm\"),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.datadog.SensitiveDataScannerGroup;\nimport com.pulumi.datadog.SensitiveDataScannerGroupArgs;\nimport com.pulumi.datadog.inputs.SensitiveDataScannerGroupFilterArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        // Create new sensitive_data_scanner_group resource\n        var mygroup = new SensitiveDataScannerGroup(\"mygroup\", SensitiveDataScannerGroupArgs.builder()\n            .name(\"My new scanning group\")\n            .description(\"A relevant description\")\n            .filter(SensitiveDataScannerGroupFilterArgs.builder()\n                .query(\"service:my-service\")\n                .build())\n            .isEnabled(true)\n            .productLists(\"apm\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  # Create new sensitive_data_scanner_group resource\n  mygroup:\n    type: datadog:SensitiveDataScannerGroup\n    properties:\n      name: My new scanning group\n      description: A relevant description\n      filter:\n        query: service:my-service\n      isEnabled: true\n      productLists:\n        - apm\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\n```sh\n$ pulumi import datadog:index/sensitiveDataScannerGroup:SensitiveDataScannerGroup new_list \"\u003cgroup_id\u003e\"\n```\n\n",
            "properties": {
                "description": {
                    "type": "string",
                    "description": "Description of the Datadog scanning group.\n"
                },
                "filter": {
                    "$ref": "#/types/datadog:index/SensitiveDataScannerGroupFilter:SensitiveDataScannerGroupFilter",
                    "description": "Filter object the scanning group applies.\n"
                },
                "isEnabled": {
                    "type": "boolean",
                    "description": "Whether or not the scanning group is enabled. If the group doesn't contain any rule or if all the rules in it are disabled, the group is force-disabled by our backend\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the Datadog scanning group.\n"
                },
                "productLists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of products the scanning group applies. Valid values are `logs`, `rum`, `events`, `apm`.\n"
                }
            },
            "required": [
                "filter",
                "isEnabled",
                "name",
                "productLists"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "Description of the Datadog scanning group.\n"
                },
                "filter": {
                    "$ref": "#/types/datadog:index/SensitiveDataScannerGroupFilter:SensitiveDataScannerGroupFilter",
                    "description": "Filter object the scanning group applies.\n"
                },
                "isEnabled": {
                    "type": "boolean",
                    "description": "Whether or not the scanning group is enabled. If the group doesn't contain any rule or if all the rules in it are disabled, the group is force-disabled by our backend\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the Datadog scanning group.\n"
                },
                "productLists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of products the scanning group applies. Valid values are `logs`, `rum`, `events`, `apm`.\n"
                }
            },
            "requiredInputs": [
                "filter",
                "isEnabled",
                "name",
                "productLists"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SensitiveDataScannerGroup resources.\n",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "Description of the Datadog scanning group.\n"
                    },
                    "filter": {
                        "$ref": "#/types/datadog:index/SensitiveDataScannerGroupFilter:SensitiveDataScannerGroupFilter",
                        "description": "Filter object the scanning group applies.\n"
                    },
                    "isEnabled": {
                        "type": "boolean",
                        "description": "Whether or not the scanning group is enabled. If the group doesn't contain any rule or if all the rules in it are disabled, the group is force-disabled by our backend\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the Datadog scanning group.\n"
                    },
                    "productLists": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of products the scanning group applies. Valid values are `logs`, `rum`, `events`, `apm`.\n"
                    }
                },
                "type": "object"
            }
        },
        "datadog:index/sensitiveDataScannerGroupOrder:SensitiveDataScannerGroupOrder": {
            "description": "Provides a Datadog Sensitive Data Scanner Group Order API resource. This can be used to manage the order of Datadog Sensitive Data Scanner Groups.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as datadog from \"@pulumi/datadog\";\n\n// Create new sensitive_data_scanner_group_order resource\nconst mygrouporder = new datadog.SensitiveDataScannerGroupOrder(\"mygrouporder\", {groupIds: [\n    \"group-id-1\",\n    \"group-id-2\",\n    \"group-id-3\",\n]});\n```\n```python\nimport pulumi\nimport pulumi_datadog as datadog\n\n# Create new sensitive_data_scanner_group_order resource\nmygrouporder = datadog.SensitiveDataScannerGroupOrder(\"mygrouporder\", group_ids=[\n    \"group-id-1\",\n    \"group-id-2\",\n    \"group-id-3\",\n])\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Datadog = Pulumi.Datadog;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    // Create new sensitive_data_scanner_group_order resource\n    var mygrouporder = new Datadog.SensitiveDataScannerGroupOrder(\"mygrouporder\", new()\n    {\n        GroupIds = new[]\n        {\n            \"group-id-1\",\n            \"group-id-2\",\n            \"group-id-3\",\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-datadog/sdk/v4/go/datadog\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t// Create new sensitive_data_scanner_group_order resource\n\t\t_, err := datadog.NewSensitiveDataScannerGroupOrder(ctx, \"mygrouporder\", \u0026datadog.SensitiveDataScannerGroupOrderArgs{\n\t\t\tGroupIds: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"group-id-1\"),\n\t\t\t\tpulumi.String(\"group-id-2\"),\n\t\t\t\tpulumi.String(\"group-id-3\"),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.datadog.SensitiveDataScannerGroupOrder;\nimport com.pulumi.datadog.SensitiveDataScannerGroupOrderArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        // Create new sensitive_data_scanner_group_order resource\n        var mygrouporder = new SensitiveDataScannerGroupOrder(\"mygrouporder\", SensitiveDataScannerGroupOrderArgs.builder()\n            .groupIds(            \n                \"group-id-1\",\n                \"group-id-2\",\n                \"group-id-3\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  # Create new sensitive_data_scanner_group_order resource\n  mygrouporder:\n    type: datadog:SensitiveDataScannerGroupOrder\n    properties:\n      groupIds:\n        - group-id-1\n        - group-id-2\n        - group-id-3\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\n```sh\n$ pulumi import datadog:index/sensitiveDataScannerGroupOrder:SensitiveDataScannerGroupOrder mygrouporder order\n```\n\n",
            "properties": {
                "groupIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The list of Sensitive Data Scanner group IDs, in order. Logs are tested against the query filter of each index one by one following the order of the list.\n"
                }
            },
            "required": [
                "groupIds"
            ],
            "inputProperties": {
                "groupIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The list of Sensitive Data Scanner group IDs, in order. Logs are tested against the query filter of each index one by one following the order of the list.\n"
                }
            },
            "requiredInputs": [
                "groupIds"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SensitiveDataScannerGroupOrder resources.\n",
                "properties": {
                    "groupIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The list of Sensitive Data Scanner group IDs, in order. Logs are tested against the query filter of each index one by one following the order of the list.\n"
                    }
                },
                "type": "object"
            }
        },
        "datadog:index/sensitiveDataScannerRule:SensitiveDataScannerRule": {
            "description": "Provides a Datadog SensitiveDataScannerRule resource. This can be used to create and manage Datadog sensitive_data_scanner_rule. Setting the `create_before_destroy` lifecycle Meta-argument to `true` is highly recommended if modifying the `included_keyword_configuration` field to avoid unexpectedly disabling Sensitive Data Scanner groups.\n\n## Import\n\n```sh\n$ pulumi import datadog:index/sensitiveDataScannerRule:SensitiveDataScannerRule new_list \"\u003crule_id\u003e\"\n```\n\n",
            "properties": {
                "description": {
                    "type": "string",
                    "description": "Description of the rule.\n"
                },
                "excludedNamespaces": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Attributes excluded from the scan. If namespaces is provided, it has to be a sub-path of the namespaces array.\n"
                },
                "groupId": {
                    "type": "string",
                    "description": "Id of the scanning group the rule belongs to.\n"
                },
                "includedKeywordConfiguration": {
                    "$ref": "#/types/datadog:index/SensitiveDataScannerRuleIncludedKeywordConfiguration:SensitiveDataScannerRuleIncludedKeywordConfiguration",
                    "description": "Object defining a set of keywords and a number of characters that help reduce noise. You can provide a list of keywords you would like to check within a defined proximity of the matching pattern. If any of the keywords are found within the proximity check then the match is kept. If none are found, the match is discarded. Setting the `create_before_destroy` lifecycle Meta-argument to `true` is highly recommended if modifying this field to avoid unexpectedly disabling Sensitive Data Scanner groups.\n"
                },
                "isEnabled": {
                    "type": "boolean",
                    "description": "Whether or not the rule is enabled.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the rule.\n"
                },
                "namespaces": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Attributes included in the scan. If namespaces is empty or missing, all attributes except excluded_namespaces are scanned. If both are missing the whole event is scanned.\n"
                },
                "pattern": {
                    "type": "string",
                    "description": "Not included if there is a relationship to a standard pattern.\n"
                },
                "priority": {
                    "type": "integer",
                    "description": "Priority level of the rule (optional). Used to order sensitive data discovered in the sds summary page. It must be between 1 and 5 (1 being the most important).\n"
                },
                "standardPatternId": {
                    "type": "string",
                    "description": "Id of the standard pattern the rule refers to. If provided, then pattern must not be provided.\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of tags.\n"
                },
                "textReplacement": {
                    "$ref": "#/types/datadog:index/SensitiveDataScannerRuleTextReplacement:SensitiveDataScannerRuleTextReplacement",
                    "description": "Object describing how the scanned event will be replaced. Defaults to `type: none`\n"
                }
            },
            "required": [
                "groupId",
                "priority"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "Description of the rule.\n"
                },
                "excludedNamespaces": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Attributes excluded from the scan. If namespaces is provided, it has to be a sub-path of the namespaces array.\n"
                },
                "groupId": {
                    "type": "string",
                    "description": "Id of the scanning group the rule belongs to.\n",
                    "willReplaceOnChanges": true
                },
                "includedKeywordConfiguration": {
                    "$ref": "#/types/datadog:index/SensitiveDataScannerRuleIncludedKeywordConfiguration:SensitiveDataScannerRuleIncludedKeywordConfiguration",
                    "description": "Object defining a set of keywords and a number of characters that help reduce noise. You can provide a list of keywords you would like to check within a defined proximity of the matching pattern. If any of the keywords are found within the proximity check then the match is kept. If none are found, the match is discarded. Setting the `create_before_destroy` lifecycle Meta-argument to `true` is highly recommended if modifying this field to avoid unexpectedly disabling Sensitive Data Scanner groups.\n",
                    "willReplaceOnChanges": true
                },
                "isEnabled": {
                    "type": "boolean",
                    "description": "Whether or not the rule is enabled.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the rule.\n"
                },
                "namespaces": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Attributes included in the scan. If namespaces is empty or missing, all attributes except excluded_namespaces are scanned. If both are missing the whole event is scanned.\n"
                },
                "pattern": {
                    "type": "string",
                    "description": "Not included if there is a relationship to a standard pattern.\n"
                },
                "priority": {
                    "type": "integer",
                    "description": "Priority level of the rule (optional). Used to order sensitive data discovered in the sds summary page. It must be between 1 and 5 (1 being the most important).\n"
                },
                "standardPatternId": {
                    "type": "string",
                    "description": "Id of the standard pattern the rule refers to. If provided, then pattern must not be provided.\n",
                    "willReplaceOnChanges": true
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of tags.\n"
                },
                "textReplacement": {
                    "$ref": "#/types/datadog:index/SensitiveDataScannerRuleTextReplacement:SensitiveDataScannerRuleTextReplacement",
                    "description": "Object describing how the scanned event will be replaced. Defaults to `type: none`\n"
                }
            },
            "requiredInputs": [
                "groupId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SensitiveDataScannerRule resources.\n",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "Description of the rule.\n"
                    },
                    "excludedNamespaces": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Attributes excluded from the scan. If namespaces is provided, it has to be a sub-path of the namespaces array.\n"
                    },
                    "groupId": {
                        "type": "string",
                        "description": "Id of the scanning group the rule belongs to.\n",
                        "willReplaceOnChanges": true
                    },
                    "includedKeywordConfiguration": {
                        "$ref": "#/types/datadog:index/SensitiveDataScannerRuleIncludedKeywordConfiguration:SensitiveDataScannerRuleIncludedKeywordConfiguration",
                        "description": "Object defining a set of keywords and a number of characters that help reduce noise. You can provide a list of keywords you would like to check within a defined proximity of the matching pattern. If any of the keywords are found within the proximity check then the match is kept. If none are found, the match is discarded. Setting the `create_before_destroy` lifecycle Meta-argument to `true` is highly recommended if modifying this field to avoid unexpectedly disabling Sensitive Data Scanner groups.\n",
                        "willReplaceOnChanges": true
                    },
                    "isEnabled": {
                        "type": "boolean",
                        "description": "Whether or not the rule is enabled.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the rule.\n"
                    },
                    "namespaces": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Attributes included in the scan. If namespaces is empty or missing, all attributes except excluded_namespaces are scanned. If both are missing the whole event is scanned.\n"
                    },
                    "pattern": {
                        "type": "string",
                        "description": "Not included if there is a relationship to a standard pattern.\n"
                    },
                    "priority": {
                        "type": "integer",
                        "description": "Priority level of the rule (optional). Used to order sensitive data discovered in the sds summary page. It must be between 1 and 5 (1 being the most important).\n"
                    },
                    "standardPatternId": {
                        "type": "string",
                        "description": "Id of the standard pattern the rule refers to. If provided, then pattern must not be provided.\n",
                        "willReplaceOnChanges": true
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of tags.\n"
                    },
                    "textReplacement": {
                        "$ref": "#/types/datadog:index/SensitiveDataScannerRuleTextReplacement:SensitiveDataScannerRuleTextReplacement",
                        "description": "Object describing how the scanned event will be replaced. Defaults to `type: none`\n"
                    }
                },
                "type": "object"
            }
        },
        "datadog:index/serviceAccount:ServiceAccount": {
            "description": "Provides a Datadog service account resource. This can be used to create and manage Datadog service accounts.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as datadog from \"@pulumi/datadog\";\n\n// Source a role\nconst roRole = datadog.getRole({\n    filter: \"Datadog Read Only Role\",\n});\n// Create a new Datadog service account\nconst bar = new datadog.ServiceAccount(\"bar\", {\n    email: \"new@example.com\",\n    name: \"Service Account Bar\",\n    roles: [roRole.then(roRole =\u003e roRole.id)],\n});\n```\n```python\nimport pulumi\nimport pulumi_datadog as datadog\n\n# Source a role\nro_role = datadog.get_role(filter=\"Datadog Read Only Role\")\n# Create a new Datadog service account\nbar = datadog.ServiceAccount(\"bar\",\n    email=\"new@example.com\",\n    name=\"Service Account Bar\",\n    roles=[ro_role.id])\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Datadog = Pulumi.Datadog;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    // Source a role\n    var roRole = Datadog.GetRole.Invoke(new()\n    {\n        Filter = \"Datadog Read Only Role\",\n    });\n\n    // Create a new Datadog service account\n    var bar = new Datadog.ServiceAccount(\"bar\", new()\n    {\n        Email = \"new@example.com\",\n        Name = \"Service Account Bar\",\n        Roles = new[]\n        {\n            roRole.Apply(getRoleResult =\u003e getRoleResult.Id),\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-datadog/sdk/v4/go/datadog\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t// Source a role\n\t\troRole, err := datadog.LookupRole(ctx, \u0026datadog.LookupRoleArgs{\n\t\t\tFilter: \"Datadog Read Only Role\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t// Create a new Datadog service account\n\t\t_, err = datadog.NewServiceAccount(ctx, \"bar\", \u0026datadog.ServiceAccountArgs{\n\t\t\tEmail: pulumi.String(\"new@example.com\"),\n\t\t\tName:  pulumi.String(\"Service Account Bar\"),\n\t\t\tRoles: pulumi.StringArray{\n\t\t\t\tpulumi.String(roRole.Id),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.datadog.DatadogFunctions;\nimport com.pulumi.datadog.inputs.GetRoleArgs;\nimport com.pulumi.datadog.ServiceAccount;\nimport com.pulumi.datadog.ServiceAccountArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        // Source a role\n        final var roRole = DatadogFunctions.getRole(GetRoleArgs.builder()\n            .filter(\"Datadog Read Only Role\")\n            .build());\n\n        // Create a new Datadog service account\n        var bar = new ServiceAccount(\"bar\", ServiceAccountArgs.builder()\n            .email(\"new@example.com\")\n            .name(\"Service Account Bar\")\n            .roles(roRole.applyValue(getRoleResult -\u003e getRoleResult.id()))\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  # Create a new Datadog service account\n  bar:\n    type: datadog:ServiceAccount\n    properties:\n      email: new@example.com\n      name: Service Account Bar\n      roles:\n        - ${roRole.id}\nvariables:\n  # Source a role\n  roRole:\n    fn::invoke:\n      Function: datadog:getRole\n      Arguments:\n        filter: Datadog Read Only Role\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\n```sh\n$ pulumi import datadog:index/serviceAccount:ServiceAccount example_sa 6f1b44c0-30b2-11eb-86bc-279f7c1ebaa4\n```\n\n",
            "properties": {
                "disabled": {
                    "type": "boolean",
                    "description": "Whether the service account is disabled. Defaults to `false`.\n"
                },
                "email": {
                    "type": "string",
                    "description": "Email of the associated user.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name for the service account.\n"
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of role IDs to assign to the service account.\n"
                }
            },
            "required": [
                "disabled",
                "email",
                "roles"
            ],
            "inputProperties": {
                "disabled": {
                    "type": "boolean",
                    "description": "Whether the service account is disabled. Defaults to `false`.\n"
                },
                "email": {
                    "type": "string",
                    "description": "Email of the associated user.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name for the service account.\n"
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of role IDs to assign to the service account.\n"
                }
            },
            "requiredInputs": [
                "email"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ServiceAccount resources.\n",
                "properties": {
                    "disabled": {
                        "type": "boolean",
                        "description": "Whether the service account is disabled. Defaults to `false`.\n"
                    },
                    "email": {
                        "type": "string",
                        "description": "Email of the associated user.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name for the service account.\n"
                    },
                    "roles": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of role IDs to assign to the service account.\n"
                    }
                },
                "type": "object"
            }
        },
        "datadog:index/serviceAccountApplicationKey:ServiceAccountApplicationKey": {
            "description": "Provides a Datadog `service_account_application_key` resource. This can be used to create and manage Datadog service account application keys.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as datadog from \"@pulumi/datadog\";\n\n// Create new service_account_application_key resource\nconst foo = new datadog.ServiceAccountApplicationKey(\"foo\", {\n    serviceAccountId: \"00000000-0000-1234-0000-000000000000\",\n    name: \"Application key for managing dashboards\",\n});\n```\n```python\nimport pulumi\nimport pulumi_datadog as datadog\n\n# Create new service_account_application_key resource\nfoo = datadog.ServiceAccountApplicationKey(\"foo\",\n    service_account_id=\"00000000-0000-1234-0000-000000000000\",\n    name=\"Application key for managing dashboards\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Datadog = Pulumi.Datadog;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    // Create new service_account_application_key resource\n    var foo = new Datadog.ServiceAccountApplicationKey(\"foo\", new()\n    {\n        ServiceAccountId = \"00000000-0000-1234-0000-000000000000\",\n        Name = \"Application key for managing dashboards\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-datadog/sdk/v4/go/datadog\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t// Create new service_account_application_key resource\n\t\t_, err := datadog.NewServiceAccountApplicationKey(ctx, \"foo\", \u0026datadog.ServiceAccountApplicationKeyArgs{\n\t\t\tServiceAccountId: pulumi.String(\"00000000-0000-1234-0000-000000000000\"),\n\t\t\tName:             pulumi.String(\"Application key for managing dashboards\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.datadog.ServiceAccountApplicationKey;\nimport com.pulumi.datadog.ServiceAccountApplicationKeyArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        // Create new service_account_application_key resource\n        var foo = new ServiceAccountApplicationKey(\"foo\", ServiceAccountApplicationKeyArgs.builder()\n            .serviceAccountId(\"00000000-0000-1234-0000-000000000000\")\n            .name(\"Application key for managing dashboards\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  # Create new service_account_application_key resource\n  foo:\n    type: datadog:ServiceAccountApplicationKey\n    properties:\n      serviceAccountId: 00000000-0000-1234-0000-000000000000\n      name: Application key for managing dashboards\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\nImporting a service account's application key cannot import the value of the key.\n\n```sh\n$ pulumi import datadog:index/serviceAccountApplicationKey:ServiceAccountApplicationKey this \"\u003cservice_account_id\u003e:\u003capplication_key_id\u003e\"\n```\n\n",
            "properties": {
                "createdAt": {
                    "type": "string",
                    "description": "Creation date of the application key.\n"
                },
                "key": {
                    "type": "string",
                    "description": "The value of the service account application key. This value cannot be imported.\n",
                    "secret": true
                },
                "last4": {
                    "type": "string",
                    "description": "The last four characters of the application key.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the application key.\n"
                },
                "serviceAccountId": {
                    "type": "string",
                    "description": "ID of the service account that owns this key.\n"
                }
            },
            "required": [
                "createdAt",
                "key",
                "last4",
                "name",
                "serviceAccountId"
            ],
            "inputProperties": {
                "name": {
                    "type": "string",
                    "description": "Name of the application key.\n"
                },
                "serviceAccountId": {
                    "type": "string",
                    "description": "ID of the service account that owns this key.\n"
                }
            },
            "requiredInputs": [
                "name",
                "serviceAccountId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ServiceAccountApplicationKey resources.\n",
                "properties": {
                    "createdAt": {
                        "type": "string",
                        "description": "Creation date of the application key.\n"
                    },
                    "key": {
                        "type": "string",
                        "description": "The value of the service account application key. This value cannot be imported.\n",
                        "secret": true
                    },
                    "last4": {
                        "type": "string",
                        "description": "The last four characters of the application key.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the application key.\n"
                    },
                    "serviceAccountId": {
                        "type": "string",
                        "description": "ID of the service account that owns this key.\n"
                    }
                },
                "type": "object"
            }
        },
        "datadog:index/serviceDefinitionYaml:ServiceDefinitionYaml": {
            "description": "Provides a Datadog service definition resource. This can be used to create and manage Datadog service definitions in the service catalog using the YAML/JSON definition.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as datadog from \"@pulumi/datadog\";\n\n// Service Definition with v2.2 Schema Definition\nconst serviceDefinitionV22 = new datadog.ServiceDefinitionYaml(\"service_definition_v2_2\", {serviceDefinition: `schema-version: v2.2\ndd-service: shopping-cart\nteam: e-commerce-team\ncontacts:\n  - name: Support Email\n    type: email\n    contact: team@shopping.com\n  - name: Support Slack\n    type: slack\n    contact: https://www.slack.com/archives/shopping-cart\ndescription: shopping cart service responsible for managing shopping carts\ntier: high\nlifecycle: production\napplication: e-commerce\nlanguages: \n  - go\n  - python\ntype: web \nci-pipeline-fingerprints:\n  - fp1 \n  - fp2 \nlinks:\n  - name: shopping-cart runbook\n    type: runbook\n    url: https://runbook/shopping-cart\n  - name: shopping-cart architecture\n    type: doc\n    provider: gdoc\n    url: https://google.drive/shopping-cart-architecture\n  - name: shopping-cart service Wiki\n    type: doc\n    provider: wiki\n    url: https://wiki/shopping-cart\n  - name: shopping-cart source code\n    type: repo\n    provider: github\n    url: http://github/shopping-cart\ntags:\n  - business-unit:retail\n  - cost-center:engineering\nintegrations:\n  pagerduty: \n    service-url: https://www.pagerduty.com/service-directory/Pshopping-cart\nextensions:\n  mycompany.com/shopping-cart:\n    customField: customValue\n`});\n// Service Definition with v2.1 Schema Definition\nconst serviceDefinitionV21 = new datadog.ServiceDefinitionYaml(\"service_definition_v2_1\", {serviceDefinition: `schema-version: v2.1\ndd-service: shopping-cart\nteam: e-commerce-team\ncontacts:\n  - name: Support Email\n    type: email\n    contact: team@shopping.com\n  - name: Support Slack\n    type: slack\n    contact: https://www.slack.com/archives/shopping-cart\ndescription: shopping cart service responsible for managing shopping carts\ntier: high\nlifecycle: production\napplication: e-commerce\nlinks:\n  - name: shopping-cart runbook\n    type: runbook\n    url: https://runbook/shopping-cart\n  - name: shopping-cart architecture\n    type: doc\n    provider: gdoc\n    url: https://google.drive/shopping-cart-architecture\n  - name: shopping-cart service Wiki\n    type: doc\n    provider: wiki\n    url: https://wiki/shopping-cart\n  - name: shopping-cart source code\n    type: repo\n    provider: github\n    url: http://github/shopping-cart\ntags:\n  - business-unit:retail\n  - cost-center:engineering\nintegrations:\n  pagerduty: \n    service-url: https://www.pagerduty.com/service-directory/Pshopping-cart\nextensions:\n  mycompany.com/shopping-cart:\n    customField: customValue\n`});\n// Service Definition with v2 Schema Definition\nconst serviceDefinitionV2 = new datadog.ServiceDefinitionYaml(\"service_definition_v2\", {serviceDefinition: `schema-version: v2\ndd-service: shopping-cart\nteam: E Commerce\ncontacts:\n  - name: Support Email\n    type: email\n    contact: team@shopping.com\n  - name: Support Slack\n    type: slack\n    contact: https://www.slack.com/archives/shopping-cart\nrepos:\n  - name: shopping-cart source code\n    provider: github\n    url: http://github/shopping-cart\ndocs:\n  - name: shopping-cart architecture\n    provider: gdoc\n    url: https://google.drive/shopping-cart-architecture\n  - name: shopping-cart service Wiki\n    provider: wiki\n    url: https://wiki/shopping-cart\nlinks:\n  - name: shopping-cart runbook\n    type: runbook\n    url: https://runbook/shopping-cart\ntags:\n  - business-unit:retail\n  - cost-center:engineering\nintegrations:\n  pagerduty: https://www.pagerduty.com/service-directory/Pshopping-cart\nextensions:\n  datadoghq.com/shopping-cart:\n    customField: customValue\n`});\n// Service Definition with backstage.io Schema\nconst serviceDefinitionBackstage = new datadog.ServiceDefinitionYaml(\"service_definition_backstage\", {serviceDefinition: `apiVersion: backstage.io/v1alpha1\nkind: Component\nmetadata:\n  annotations:\n    backstage.io/techdocs-ref: http://a/b/c\n    some.annotation: value\n  namespace: default\n  name: shopping-cart\n  title: Shopping Cart\n  description: A shopping cart service\n  tags: [\"taga:valuea\", \"tagb:valueb\"]\n  links:\n    - title: Wiki\n      url: https://wiki/shopping-cart\n      icon: help\n  ignore-attribute:\n    id: 1\n    value: \"value\"\nspec:\n  type: service\n  lifecycle: production\n  owner: e-commerce\n  system: retail\n`});\n```\n```python\nimport pulumi\nimport pulumi_datadog as datadog\n\n# Service Definition with v2.2 Schema Definition\nservice_definition_v22 = datadog.ServiceDefinitionYaml(\"service_definition_v2_2\", service_definition=\"\"\"schema-version: v2.2\ndd-service: shopping-cart\nteam: e-commerce-team\ncontacts:\n  - name: Support Email\n    type: email\n    contact: team@shopping.com\n  - name: Support Slack\n    type: slack\n    contact: https://www.slack.com/archives/shopping-cart\ndescription: shopping cart service responsible for managing shopping carts\ntier: high\nlifecycle: production\napplication: e-commerce\nlanguages: \n  - go\n  - python\ntype: web \nci-pipeline-fingerprints:\n  - fp1 \n  - fp2 \nlinks:\n  - name: shopping-cart runbook\n    type: runbook\n    url: https://runbook/shopping-cart\n  - name: shopping-cart architecture\n    type: doc\n    provider: gdoc\n    url: https://google.drive/shopping-cart-architecture\n  - name: shopping-cart service Wiki\n    type: doc\n    provider: wiki\n    url: https://wiki/shopping-cart\n  - name: shopping-cart source code\n    type: repo\n    provider: github\n    url: http://github/shopping-cart\ntags:\n  - business-unit:retail\n  - cost-center:engineering\nintegrations:\n  pagerduty: \n    service-url: https://www.pagerduty.com/service-directory/Pshopping-cart\nextensions:\n  mycompany.com/shopping-cart:\n    customField: customValue\n\"\"\")\n# Service Definition with v2.1 Schema Definition\nservice_definition_v21 = datadog.ServiceDefinitionYaml(\"service_definition_v2_1\", service_definition=\"\"\"schema-version: v2.1\ndd-service: shopping-cart\nteam: e-commerce-team\ncontacts:\n  - name: Support Email\n    type: email\n    contact: team@shopping.com\n  - name: Support Slack\n    type: slack\n    contact: https://www.slack.com/archives/shopping-cart\ndescription: shopping cart service responsible for managing shopping carts\ntier: high\nlifecycle: production\napplication: e-commerce\nlinks:\n  - name: shopping-cart runbook\n    type: runbook\n    url: https://runbook/shopping-cart\n  - name: shopping-cart architecture\n    type: doc\n    provider: gdoc\n    url: https://google.drive/shopping-cart-architecture\n  - name: shopping-cart service Wiki\n    type: doc\n    provider: wiki\n    url: https://wiki/shopping-cart\n  - name: shopping-cart source code\n    type: repo\n    provider: github\n    url: http://github/shopping-cart\ntags:\n  - business-unit:retail\n  - cost-center:engineering\nintegrations:\n  pagerduty: \n    service-url: https://www.pagerduty.com/service-directory/Pshopping-cart\nextensions:\n  mycompany.com/shopping-cart:\n    customField: customValue\n\"\"\")\n# Service Definition with v2 Schema Definition\nservice_definition_v2 = datadog.ServiceDefinitionYaml(\"service_definition_v2\", service_definition=\"\"\"schema-version: v2\ndd-service: shopping-cart\nteam: E Commerce\ncontacts:\n  - name: Support Email\n    type: email\n    contact: team@shopping.com\n  - name: Support Slack\n    type: slack\n    contact: https://www.slack.com/archives/shopping-cart\nrepos:\n  - name: shopping-cart source code\n    provider: github\n    url: http://github/shopping-cart\ndocs:\n  - name: shopping-cart architecture\n    provider: gdoc\n    url: https://google.drive/shopping-cart-architecture\n  - name: shopping-cart service Wiki\n    provider: wiki\n    url: https://wiki/shopping-cart\nlinks:\n  - name: shopping-cart runbook\n    type: runbook\n    url: https://runbook/shopping-cart\ntags:\n  - business-unit:retail\n  - cost-center:engineering\nintegrations:\n  pagerduty: https://www.pagerduty.com/service-directory/Pshopping-cart\nextensions:\n  datadoghq.com/shopping-cart:\n    customField: customValue\n\"\"\")\n# Service Definition with backstage.io Schema\nservice_definition_backstage = datadog.ServiceDefinitionYaml(\"service_definition_backstage\", service_definition=\"\"\"apiVersion: backstage.io/v1alpha1\nkind: Component\nmetadata:\n  annotations:\n    backstage.io/techdocs-ref: http://a/b/c\n    some.annotation: value\n  namespace: default\n  name: shopping-cart\n  title: Shopping Cart\n  description: A shopping cart service\n  tags: [\"taga:valuea\", \"tagb:valueb\"]\n  links:\n    - title: Wiki\n      url: https://wiki/shopping-cart\n      icon: help\n  ignore-attribute:\n    id: 1\n    value: \"value\"\nspec:\n  type: service\n  lifecycle: production\n  owner: e-commerce\n  system: retail\n\"\"\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Datadog = Pulumi.Datadog;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    // Service Definition with v2.2 Schema Definition\n    var serviceDefinitionV22 = new Datadog.ServiceDefinitionYaml(\"service_definition_v2_2\", new()\n    {\n        ServiceDefinition = @\"schema-version: v2.2\ndd-service: shopping-cart\nteam: e-commerce-team\ncontacts:\n  - name: Support Email\n    type: email\n    contact: team@shopping.com\n  - name: Support Slack\n    type: slack\n    contact: https://www.slack.com/archives/shopping-cart\ndescription: shopping cart service responsible for managing shopping carts\ntier: high\nlifecycle: production\napplication: e-commerce\nlanguages: \n  - go\n  - python\ntype: web \nci-pipeline-fingerprints:\n  - fp1 \n  - fp2 \nlinks:\n  - name: shopping-cart runbook\n    type: runbook\n    url: https://runbook/shopping-cart\n  - name: shopping-cart architecture\n    type: doc\n    provider: gdoc\n    url: https://google.drive/shopping-cart-architecture\n  - name: shopping-cart service Wiki\n    type: doc\n    provider: wiki\n    url: https://wiki/shopping-cart\n  - name: shopping-cart source code\n    type: repo\n    provider: github\n    url: http://github/shopping-cart\ntags:\n  - business-unit:retail\n  - cost-center:engineering\nintegrations:\n  pagerduty: \n    service-url: https://www.pagerduty.com/service-directory/Pshopping-cart\nextensions:\n  mycompany.com/shopping-cart:\n    customField: customValue\n\",\n    });\n\n    // Service Definition with v2.1 Schema Definition\n    var serviceDefinitionV21 = new Datadog.ServiceDefinitionYaml(\"service_definition_v2_1\", new()\n    {\n        ServiceDefinition = @\"schema-version: v2.1\ndd-service: shopping-cart\nteam: e-commerce-team\ncontacts:\n  - name: Support Email\n    type: email\n    contact: team@shopping.com\n  - name: Support Slack\n    type: slack\n    contact: https://www.slack.com/archives/shopping-cart\ndescription: shopping cart service responsible for managing shopping carts\ntier: high\nlifecycle: production\napplication: e-commerce\nlinks:\n  - name: shopping-cart runbook\n    type: runbook\n    url: https://runbook/shopping-cart\n  - name: shopping-cart architecture\n    type: doc\n    provider: gdoc\n    url: https://google.drive/shopping-cart-architecture\n  - name: shopping-cart service Wiki\n    type: doc\n    provider: wiki\n    url: https://wiki/shopping-cart\n  - name: shopping-cart source code\n    type: repo\n    provider: github\n    url: http://github/shopping-cart\ntags:\n  - business-unit:retail\n  - cost-center:engineering\nintegrations:\n  pagerduty: \n    service-url: https://www.pagerduty.com/service-directory/Pshopping-cart\nextensions:\n  mycompany.com/shopping-cart:\n    customField: customValue\n\",\n    });\n\n    // Service Definition with v2 Schema Definition\n    var serviceDefinitionV2 = new Datadog.ServiceDefinitionYaml(\"service_definition_v2\", new()\n    {\n        ServiceDefinition = @\"schema-version: v2\ndd-service: shopping-cart\nteam: E Commerce\ncontacts:\n  - name: Support Email\n    type: email\n    contact: team@shopping.com\n  - name: Support Slack\n    type: slack\n    contact: https://www.slack.com/archives/shopping-cart\nrepos:\n  - name: shopping-cart source code\n    provider: github\n    url: http://github/shopping-cart\ndocs:\n  - name: shopping-cart architecture\n    provider: gdoc\n    url: https://google.drive/shopping-cart-architecture\n  - name: shopping-cart service Wiki\n    provider: wiki\n    url: https://wiki/shopping-cart\nlinks:\n  - name: shopping-cart runbook\n    type: runbook\n    url: https://runbook/shopping-cart\ntags:\n  - business-unit:retail\n  - cost-center:engineering\nintegrations:\n  pagerduty: https://www.pagerduty.com/service-directory/Pshopping-cart\nextensions:\n  datadoghq.com/shopping-cart:\n    customField: customValue\n\",\n    });\n\n    // Service Definition with backstage.io Schema\n    var serviceDefinitionBackstage = new Datadog.ServiceDefinitionYaml(\"service_definition_backstage\", new()\n    {\n        ServiceDefinition = @\"apiVersion: backstage.io/v1alpha1\nkind: Component\nmetadata:\n  annotations:\n    backstage.io/techdocs-ref: http://a/b/c\n    some.annotation: value\n  namespace: default\n  name: shopping-cart\n  title: Shopping Cart\n  description: A shopping cart service\n  tags: [\"\"taga:valuea\"\", \"\"tagb:valueb\"\"]\n  links:\n    - title: Wiki\n      url: https://wiki/shopping-cart\n      icon: help\n  ignore-attribute:\n    id: 1\n    value: \"\"value\"\"\nspec:\n  type: service\n  lifecycle: production\n  owner: e-commerce\n  system: retail\n\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-datadog/sdk/v4/go/datadog\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t// Service Definition with v2.2 Schema Definition\n\t\t_, err := datadog.NewServiceDefinitionYaml(ctx, \"service_definition_v2_2\", \u0026datadog.ServiceDefinitionYamlArgs{\n\t\t\tServiceDefinition: pulumi.String(`schema-version: v2.2\ndd-service: shopping-cart\nteam: e-commerce-team\ncontacts:\n  - name: Support Email\n    type: email\n    contact: team@shopping.com\n  - name: Support Slack\n    type: slack\n    contact: https://www.slack.com/archives/shopping-cart\ndescription: shopping cart service responsible for managing shopping carts\ntier: high\nlifecycle: production\napplication: e-commerce\nlanguages: \n  - go\n  - python\ntype: web \nci-pipeline-fingerprints:\n  - fp1 \n  - fp2 \nlinks:\n  - name: shopping-cart runbook\n    type: runbook\n    url: https://runbook/shopping-cart\n  - name: shopping-cart architecture\n    type: doc\n    provider: gdoc\n    url: https://google.drive/shopping-cart-architecture\n  - name: shopping-cart service Wiki\n    type: doc\n    provider: wiki\n    url: https://wiki/shopping-cart\n  - name: shopping-cart source code\n    type: repo\n    provider: github\n    url: http://github/shopping-cart\ntags:\n  - business-unit:retail\n  - cost-center:engineering\nintegrations:\n  pagerduty: \n    service-url: https://www.pagerduty.com/service-directory/Pshopping-cart\nextensions:\n  mycompany.com/shopping-cart:\n    customField: customValue\n`),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t// Service Definition with v2.1 Schema Definition\n\t\t_, err = datadog.NewServiceDefinitionYaml(ctx, \"service_definition_v2_1\", \u0026datadog.ServiceDefinitionYamlArgs{\n\t\t\tServiceDefinition: pulumi.String(`schema-version: v2.1\ndd-service: shopping-cart\nteam: e-commerce-team\ncontacts:\n  - name: Support Email\n    type: email\n    contact: team@shopping.com\n  - name: Support Slack\n    type: slack\n    contact: https://www.slack.com/archives/shopping-cart\ndescription: shopping cart service responsible for managing shopping carts\ntier: high\nlifecycle: production\napplication: e-commerce\nlinks:\n  - name: shopping-cart runbook\n    type: runbook\n    url: https://runbook/shopping-cart\n  - name: shopping-cart architecture\n    type: doc\n    provider: gdoc\n    url: https://google.drive/shopping-cart-architecture\n  - name: shopping-cart service Wiki\n    type: doc\n    provider: wiki\n    url: https://wiki/shopping-cart\n  - name: shopping-cart source code\n    type: repo\n    provider: github\n    url: http://github/shopping-cart\ntags:\n  - business-unit:retail\n  - cost-center:engineering\nintegrations:\n  pagerduty: \n    service-url: https://www.pagerduty.com/service-directory/Pshopping-cart\nextensions:\n  mycompany.com/shopping-cart:\n    customField: customValue\n`),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t// Service Definition with v2 Schema Definition\n\t\t_, err = datadog.NewServiceDefinitionYaml(ctx, \"service_definition_v2\", \u0026datadog.ServiceDefinitionYamlArgs{\n\t\t\tServiceDefinition: pulumi.String(`schema-version: v2\ndd-service: shopping-cart\nteam: E Commerce\ncontacts:\n  - name: Support Email\n    type: email\n    contact: team@shopping.com\n  - name: Support Slack\n    type: slack\n    contact: https://www.slack.com/archives/shopping-cart\nrepos:\n  - name: shopping-cart source code\n    provider: github\n    url: http://github/shopping-cart\ndocs:\n  - name: shopping-cart architecture\n    provider: gdoc\n    url: https://google.drive/shopping-cart-architecture\n  - name: shopping-cart service Wiki\n    provider: wiki\n    url: https://wiki/shopping-cart\nlinks:\n  - name: shopping-cart runbook\n    type: runbook\n    url: https://runbook/shopping-cart\ntags:\n  - business-unit:retail\n  - cost-center:engineering\nintegrations:\n  pagerduty: https://www.pagerduty.com/service-directory/Pshopping-cart\nextensions:\n  datadoghq.com/shopping-cart:\n    customField: customValue\n`),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t// Service Definition with backstage.io Schema\n\t\t_, err = datadog.NewServiceDefinitionYaml(ctx, \"service_definition_backstage\", \u0026datadog.ServiceDefinitionYamlArgs{\n\t\t\tServiceDefinition: pulumi.String(`apiVersion: backstage.io/v1alpha1\nkind: Component\nmetadata:\n  annotations:\n    backstage.io/techdocs-ref: http://a/b/c\n    some.annotation: value\n  namespace: default\n  name: shopping-cart\n  title: Shopping Cart\n  description: A shopping cart service\n  tags: [\"taga:valuea\", \"tagb:valueb\"]\n  links:\n    - title: Wiki\n      url: https://wiki/shopping-cart\n      icon: help\n  ignore-attribute:\n    id: 1\n    value: \"value\"\nspec:\n  type: service\n  lifecycle: production\n  owner: e-commerce\n  system: retail\n`),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.datadog.ServiceDefinitionYaml;\nimport com.pulumi.datadog.ServiceDefinitionYamlArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        // Service Definition with v2.2 Schema Definition\n        var serviceDefinitionV22 = new ServiceDefinitionYaml(\"serviceDefinitionV22\", ServiceDefinitionYamlArgs.builder()\n            .serviceDefinition(\"\"\"\nschema-version: v2.2\ndd-service: shopping-cart\nteam: e-commerce-team\ncontacts:\n  - name: Support Email\n    type: email\n    contact: team@shopping.com\n  - name: Support Slack\n    type: slack\n    contact: https://www.slack.com/archives/shopping-cart\ndescription: shopping cart service responsible for managing shopping carts\ntier: high\nlifecycle: production\napplication: e-commerce\nlanguages: \n  - go\n  - python\ntype: web \nci-pipeline-fingerprints:\n  - fp1 \n  - fp2 \nlinks:\n  - name: shopping-cart runbook\n    type: runbook\n    url: https://runbook/shopping-cart\n  - name: shopping-cart architecture\n    type: doc\n    provider: gdoc\n    url: https://google.drive/shopping-cart-architecture\n  - name: shopping-cart service Wiki\n    type: doc\n    provider: wiki\n    url: https://wiki/shopping-cart\n  - name: shopping-cart source code\n    type: repo\n    provider: github\n    url: http://github/shopping-cart\ntags:\n  - business-unit:retail\n  - cost-center:engineering\nintegrations:\n  pagerduty: \n    service-url: https://www.pagerduty.com/service-directory/Pshopping-cart\nextensions:\n  mycompany.com/shopping-cart:\n    customField: customValue\n            \"\"\")\n            .build());\n\n        // Service Definition with v2.1 Schema Definition\n        var serviceDefinitionV21 = new ServiceDefinitionYaml(\"serviceDefinitionV21\", ServiceDefinitionYamlArgs.builder()\n            .serviceDefinition(\"\"\"\nschema-version: v2.1\ndd-service: shopping-cart\nteam: e-commerce-team\ncontacts:\n  - name: Support Email\n    type: email\n    contact: team@shopping.com\n  - name: Support Slack\n    type: slack\n    contact: https://www.slack.com/archives/shopping-cart\ndescription: shopping cart service responsible for managing shopping carts\ntier: high\nlifecycle: production\napplication: e-commerce\nlinks:\n  - name: shopping-cart runbook\n    type: runbook\n    url: https://runbook/shopping-cart\n  - name: shopping-cart architecture\n    type: doc\n    provider: gdoc\n    url: https://google.drive/shopping-cart-architecture\n  - name: shopping-cart service Wiki\n    type: doc\n    provider: wiki\n    url: https://wiki/shopping-cart\n  - name: shopping-cart source code\n    type: repo\n    provider: github\n    url: http://github/shopping-cart\ntags:\n  - business-unit:retail\n  - cost-center:engineering\nintegrations:\n  pagerduty: \n    service-url: https://www.pagerduty.com/service-directory/Pshopping-cart\nextensions:\n  mycompany.com/shopping-cart:\n    customField: customValue\n            \"\"\")\n            .build());\n\n        // Service Definition with v2 Schema Definition\n        var serviceDefinitionV2 = new ServiceDefinitionYaml(\"serviceDefinitionV2\", ServiceDefinitionYamlArgs.builder()\n            .serviceDefinition(\"\"\"\nschema-version: v2\ndd-service: shopping-cart\nteam: E Commerce\ncontacts:\n  - name: Support Email\n    type: email\n    contact: team@shopping.com\n  - name: Support Slack\n    type: slack\n    contact: https://www.slack.com/archives/shopping-cart\nrepos:\n  - name: shopping-cart source code\n    provider: github\n    url: http://github/shopping-cart\ndocs:\n  - name: shopping-cart architecture\n    provider: gdoc\n    url: https://google.drive/shopping-cart-architecture\n  - name: shopping-cart service Wiki\n    provider: wiki\n    url: https://wiki/shopping-cart\nlinks:\n  - name: shopping-cart runbook\n    type: runbook\n    url: https://runbook/shopping-cart\ntags:\n  - business-unit:retail\n  - cost-center:engineering\nintegrations:\n  pagerduty: https://www.pagerduty.com/service-directory/Pshopping-cart\nextensions:\n  datadoghq.com/shopping-cart:\n    customField: customValue\n            \"\"\")\n            .build());\n\n        // Service Definition with backstage.io Schema\n        var serviceDefinitionBackstage = new ServiceDefinitionYaml(\"serviceDefinitionBackstage\", ServiceDefinitionYamlArgs.builder()\n            .serviceDefinition(\"\"\"\napiVersion: backstage.io/v1alpha1\nkind: Component\nmetadata:\n  annotations:\n    backstage.io/techdocs-ref: http://a/b/c\n    some.annotation: value\n  namespace: default\n  name: shopping-cart\n  title: Shopping Cart\n  description: A shopping cart service\n  tags: [\"taga:valuea\", \"tagb:valueb\"]\n  links:\n    - title: Wiki\n      url: https://wiki/shopping-cart\n      icon: help\n  ignore-attribute:\n    id: 1\n    value: \"value\"\nspec:\n  type: service\n  lifecycle: production\n  owner: e-commerce\n  system: retail\n            \"\"\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  # Service Definition with v2.2 Schema Definition\n  serviceDefinitionV22:\n    type: datadog:ServiceDefinitionYaml\n    name: service_definition_v2_2\n    properties:\n      serviceDefinition: \"schema-version: v2.2\\ndd-service: shopping-cart\\nteam: e-commerce-team\\ncontacts:\\n  - name: Support Email\\n    type: email\\n    contact: team@shopping.com\\n  - name: Support Slack\\n    type: slack\\n    contact: https://www.slack.com/archives/shopping-cart\\ndescription: shopping cart service responsible for managing shopping carts\\ntier: high\\nlifecycle: production\\napplication: e-commerce\\nlanguages: \\n  - go\\n  - python\\ntype: web \\nci-pipeline-fingerprints:\\n  - fp1 \\n  - fp2 \\nlinks:\\n  - name: shopping-cart runbook\\n    type: runbook\\n    url: https://runbook/shopping-cart\\n  - name: shopping-cart architecture\\n    type: doc\\n    provider: gdoc\\n    url: https://google.drive/shopping-cart-architecture\\n  - name: shopping-cart service Wiki\\n    type: doc\\n    provider: wiki\\n    url: https://wiki/shopping-cart\\n  - name: shopping-cart source code\\n    type: repo\\n    provider: github\\n    url: http://github/shopping-cart\\ntags:\\n  - business-unit:retail\\n  - cost-center:engineering\\nintegrations:\\n  pagerduty: \\n    service-url: https://www.pagerduty.com/service-directory/Pshopping-cart\\nextensions:\\n  mycompany.com/shopping-cart:\\n    customField: customValue\\n\"\n  # Service Definition with v2.1 Schema Definition\n  serviceDefinitionV21:\n    type: datadog:ServiceDefinitionYaml\n    name: service_definition_v2_1\n    properties:\n      serviceDefinition: \"schema-version: v2.1\\ndd-service: shopping-cart\\nteam: e-commerce-team\\ncontacts:\\n  - name: Support Email\\n    type: email\\n    contact: team@shopping.com\\n  - name: Support Slack\\n    type: slack\\n    contact: https://www.slack.com/archives/shopping-cart\\ndescription: shopping cart service responsible for managing shopping carts\\ntier: high\\nlifecycle: production\\napplication: e-commerce\\nlinks:\\n  - name: shopping-cart runbook\\n    type: runbook\\n    url: https://runbook/shopping-cart\\n  - name: shopping-cart architecture\\n    type: doc\\n    provider: gdoc\\n    url: https://google.drive/shopping-cart-architecture\\n  - name: shopping-cart service Wiki\\n    type: doc\\n    provider: wiki\\n    url: https://wiki/shopping-cart\\n  - name: shopping-cart source code\\n    type: repo\\n    provider: github\\n    url: http://github/shopping-cart\\ntags:\\n  - business-unit:retail\\n  - cost-center:engineering\\nintegrations:\\n  pagerduty: \\n    service-url: https://www.pagerduty.com/service-directory/Pshopping-cart\\nextensions:\\n  mycompany.com/shopping-cart:\\n    customField: customValue\\n\"\n  # Service Definition with v2 Schema Definition\n  serviceDefinitionV2:\n    type: datadog:ServiceDefinitionYaml\n    name: service_definition_v2\n    properties:\n      serviceDefinition: |\n        schema-version: v2\n        dd-service: shopping-cart\n        team: E Commerce\n        contacts:\n          - name: Support Email\n            type: email\n            contact: team@shopping.com\n          - name: Support Slack\n            type: slack\n            contact: https://www.slack.com/archives/shopping-cart\n        repos:\n          - name: shopping-cart source code\n            provider: github\n            url: http://github/shopping-cart\n        docs:\n          - name: shopping-cart architecture\n            provider: gdoc\n            url: https://google.drive/shopping-cart-architecture\n          - name: shopping-cart service Wiki\n            provider: wiki\n            url: https://wiki/shopping-cart\n        links:\n          - name: shopping-cart runbook\n            type: runbook\n            url: https://runbook/shopping-cart\n        tags:\n          - business-unit:retail\n          - cost-center:engineering\n        integrations:\n          pagerduty: https://www.pagerduty.com/service-directory/Pshopping-cart\n        extensions:\n          datadoghq.com/shopping-cart:\n            customField: customValue\n  # Service Definition with backstage.io Schema\n  serviceDefinitionBackstage:\n    type: datadog:ServiceDefinitionYaml\n    name: service_definition_backstage\n    properties:\n      serviceDefinition: |\n        apiVersion: backstage.io/v1alpha1\n        kind: Component\n        metadata:\n          annotations:\n            backstage.io/techdocs-ref: http://a/b/c\n            some.annotation: value\n          namespace: default\n          name: shopping-cart\n          title: Shopping Cart\n          description: A shopping cart service\n          tags: [\"taga:valuea\", \"tagb:valueb\"]\n          links:\n            - title: Wiki\n              url: https://wiki/shopping-cart\n              icon: help\n          ignore-attribute:\n            id: 1\n            value: \"value\"\n        spec:\n          type: service\n          lifecycle: production\n          owner: e-commerce\n          system: retail\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\n```sh\n$ pulumi import datadog:index/serviceDefinitionYaml:ServiceDefinitionYaml service_definition \"\u003cdd-service\u003e\"\n```\n\n",
            "properties": {
                "serviceDefinition": {
                    "type": "string",
                    "description": "The YAML/JSON formatted definition of the service\n"
                }
            },
            "required": [
                "serviceDefinition"
            ],
            "inputProperties": {
                "serviceDefinition": {
                    "type": "string",
                    "description": "The YAML/JSON formatted definition of the service\n"
                }
            },
            "requiredInputs": [
                "serviceDefinition"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ServiceDefinitionYaml resources.\n",
                "properties": {
                    "serviceDefinition": {
                        "type": "string",
                        "description": "The YAML/JSON formatted definition of the service\n"
                    }
                },
                "type": "object"
            }
        },
        "datadog:index/serviceLevelObjective:ServiceLevelObjective": {
            "description": "Provides a Datadog service level objective resource. This can be used to create and manage Datadog service level objectives.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as datadog from \"@pulumi/datadog\";\n\n// Metric-Based SLO\n// Create a new Datadog service level objective\nconst foo = new datadog.ServiceLevelObjective(\"foo\", {\n    name: \"Example Metric SLO\",\n    type: \"metric\",\n    description: \"My custom metric SLO\",\n    query: {\n        numerator: \"sum:my.custom.count.metric{type:good_events}.as_count()\",\n        denominator: \"sum:my.custom.count.metric{*}.as_count()\",\n    },\n    thresholds: [\n        {\n            timeframe: \"7d\",\n            target: 99.9,\n            warning: 99.99,\n        },\n        {\n            timeframe: \"30d\",\n            target: 99.9,\n            warning: 99.99,\n        },\n    ],\n    timeframe: \"30d\",\n    targetThreshold: 99.9,\n    warningThreshold: 99.99,\n    tags: [\n        \"foo:bar\",\n        \"baz\",\n    ],\n});\n// Monitor-Based SLO\n// Create a new Datadog service level objective\nconst bar = new datadog.ServiceLevelObjective(\"bar\", {\n    name: \"Example Monitor SLO\",\n    type: \"monitor\",\n    description: \"My custom monitor SLO\",\n    monitorIds: [\n        1,\n        2,\n        3,\n    ],\n    thresholds: [\n        {\n            timeframe: \"7d\",\n            target: 99.9,\n            warning: 99.99,\n        },\n        {\n            timeframe: \"30d\",\n            target: 99.9,\n            warning: 99.99,\n        },\n    ],\n    timeframe: \"30d\",\n    targetThreshold: 99.9,\n    warningThreshold: 99.99,\n    tags: [\n        \"foo:bar\",\n        \"baz\",\n    ],\n});\nconst timeSliceSlo = new datadog.ServiceLevelObjective(\"time_slice_slo\", {\n    name: \"Example Time Slice SLO\",\n    type: \"time_slice\",\n    description: \"My custom time slice SLO\",\n    sliSpecification: {\n        timeSlice: {\n            query: {\n                formula: {\n                    formulaExpression: \"query1\",\n                },\n                queries: [{\n                    metricQuery: {\n                        name: \"query1\",\n                        query: \"avg:my.custom.count.metric{*}.as_count()\",\n                    },\n                }],\n            },\n            comparator: \"\u003e\",\n            threshold: 0.9,\n        },\n    },\n    thresholds: [{\n        timeframe: \"7d\",\n        target: 99.9,\n        warning: 99.99,\n    }],\n    timeframe: \"7d\",\n    targetThreshold: 99.9,\n    warningThreshold: 99.99,\n    tags: [\n        \"service:myservice\",\n        \"team:myteam\",\n    ],\n});\n```\n```python\nimport pulumi\nimport pulumi_datadog as datadog\n\n# Metric-Based SLO\n# Create a new Datadog service level objective\nfoo = datadog.ServiceLevelObjective(\"foo\",\n    name=\"Example Metric SLO\",\n    type=\"metric\",\n    description=\"My custom metric SLO\",\n    query={\n        \"numerator\": \"sum:my.custom.count.metric{type:good_events}.as_count()\",\n        \"denominator\": \"sum:my.custom.count.metric{*}.as_count()\",\n    },\n    thresholds=[\n        {\n            \"timeframe\": \"7d\",\n            \"target\": 99.9,\n            \"warning\": 99.99,\n        },\n        {\n            \"timeframe\": \"30d\",\n            \"target\": 99.9,\n            \"warning\": 99.99,\n        },\n    ],\n    timeframe=\"30d\",\n    target_threshold=99.9,\n    warning_threshold=99.99,\n    tags=[\n        \"foo:bar\",\n        \"baz\",\n    ])\n# Monitor-Based SLO\n# Create a new Datadog service level objective\nbar = datadog.ServiceLevelObjective(\"bar\",\n    name=\"Example Monitor SLO\",\n    type=\"monitor\",\n    description=\"My custom monitor SLO\",\n    monitor_ids=[\n        1,\n        2,\n        3,\n    ],\n    thresholds=[\n        {\n            \"timeframe\": \"7d\",\n            \"target\": 99.9,\n            \"warning\": 99.99,\n        },\n        {\n            \"timeframe\": \"30d\",\n            \"target\": 99.9,\n            \"warning\": 99.99,\n        },\n    ],\n    timeframe=\"30d\",\n    target_threshold=99.9,\n    warning_threshold=99.99,\n    tags=[\n        \"foo:bar\",\n        \"baz\",\n    ])\ntime_slice_slo = datadog.ServiceLevelObjective(\"time_slice_slo\",\n    name=\"Example Time Slice SLO\",\n    type=\"time_slice\",\n    description=\"My custom time slice SLO\",\n    sli_specification={\n        \"time_slice\": {\n            \"query\": {\n                \"formula\": {\n                    \"formula_expression\": \"query1\",\n                },\n                \"queries\": [{\n                    \"metric_query\": {\n                        \"name\": \"query1\",\n                        \"query\": \"avg:my.custom.count.metric{*}.as_count()\",\n                    },\n                }],\n            },\n            \"comparator\": \"\u003e\",\n            \"threshold\": 0.9,\n        },\n    },\n    thresholds=[{\n        \"timeframe\": \"7d\",\n        \"target\": 99.9,\n        \"warning\": 99.99,\n    }],\n    timeframe=\"7d\",\n    target_threshold=99.9,\n    warning_threshold=99.99,\n    tags=[\n        \"service:myservice\",\n        \"team:myteam\",\n    ])\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Datadog = Pulumi.Datadog;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    // Metric-Based SLO\n    // Create a new Datadog service level objective\n    var foo = new Datadog.ServiceLevelObjective(\"foo\", new()\n    {\n        Name = \"Example Metric SLO\",\n        Type = \"metric\",\n        Description = \"My custom metric SLO\",\n        Query = new Datadog.Inputs.ServiceLevelObjectiveQueryArgs\n        {\n            Numerator = \"sum:my.custom.count.metric{type:good_events}.as_count()\",\n            Denominator = \"sum:my.custom.count.metric{*}.as_count()\",\n        },\n        Thresholds = new[]\n        {\n            new Datadog.Inputs.ServiceLevelObjectiveThresholdArgs\n            {\n                Timeframe = \"7d\",\n                Target = 99.9,\n                Warning = 99.99,\n            },\n            new Datadog.Inputs.ServiceLevelObjectiveThresholdArgs\n            {\n                Timeframe = \"30d\",\n                Target = 99.9,\n                Warning = 99.99,\n            },\n        },\n        Timeframe = \"30d\",\n        TargetThreshold = 99.9,\n        WarningThreshold = 99.99,\n        Tags = new[]\n        {\n            \"foo:bar\",\n            \"baz\",\n        },\n    });\n\n    // Monitor-Based SLO\n    // Create a new Datadog service level objective\n    var bar = new Datadog.ServiceLevelObjective(\"bar\", new()\n    {\n        Name = \"Example Monitor SLO\",\n        Type = \"monitor\",\n        Description = \"My custom monitor SLO\",\n        MonitorIds = new[]\n        {\n            1,\n            2,\n            3,\n        },\n        Thresholds = new[]\n        {\n            new Datadog.Inputs.ServiceLevelObjectiveThresholdArgs\n            {\n                Timeframe = \"7d\",\n                Target = 99.9,\n                Warning = 99.99,\n            },\n            new Datadog.Inputs.ServiceLevelObjectiveThresholdArgs\n            {\n                Timeframe = \"30d\",\n                Target = 99.9,\n                Warning = 99.99,\n            },\n        },\n        Timeframe = \"30d\",\n        TargetThreshold = 99.9,\n        WarningThreshold = 99.99,\n        Tags = new[]\n        {\n            \"foo:bar\",\n            \"baz\",\n        },\n    });\n\n    var timeSliceSlo = new Datadog.ServiceLevelObjective(\"time_slice_slo\", new()\n    {\n        Name = \"Example Time Slice SLO\",\n        Type = \"time_slice\",\n        Description = \"My custom time slice SLO\",\n        SliSpecification = new Datadog.Inputs.ServiceLevelObjectiveSliSpecificationArgs\n        {\n            TimeSlice = new Datadog.Inputs.ServiceLevelObjectiveSliSpecificationTimeSliceArgs\n            {\n                Query = new Datadog.Inputs.ServiceLevelObjectiveSliSpecificationTimeSliceQueryArgs\n                {\n                    Formula = new Datadog.Inputs.ServiceLevelObjectiveSliSpecificationTimeSliceQueryFormulaArgs\n                    {\n                        FormulaExpression = \"query1\",\n                    },\n                    Queries = new[]\n                    {\n                        new Datadog.Inputs.ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryArgs\n                        {\n                            MetricQuery = new Datadog.Inputs.ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryMetricQueryArgs\n                            {\n                                Name = \"query1\",\n                                Query = \"avg:my.custom.count.metric{*}.as_count()\",\n                            },\n                        },\n                    },\n                },\n                Comparator = \"\u003e\",\n                Threshold = 0.9,\n            },\n        },\n        Thresholds = new[]\n        {\n            new Datadog.Inputs.ServiceLevelObjectiveThresholdArgs\n            {\n                Timeframe = \"7d\",\n                Target = 99.9,\n                Warning = 99.99,\n            },\n        },\n        Timeframe = \"7d\",\n        TargetThreshold = 99.9,\n        WarningThreshold = 99.99,\n        Tags = new[]\n        {\n            \"service:myservice\",\n            \"team:myteam\",\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-datadog/sdk/v4/go/datadog\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t// Metric-Based SLO\n\t\t// Create a new Datadog service level objective\n\t\t_, err := datadog.NewServiceLevelObjective(ctx, \"foo\", \u0026datadog.ServiceLevelObjectiveArgs{\n\t\t\tName:        pulumi.String(\"Example Metric SLO\"),\n\t\t\tType:        pulumi.String(\"metric\"),\n\t\t\tDescription: pulumi.String(\"My custom metric SLO\"),\n\t\t\tQuery: \u0026datadog.ServiceLevelObjectiveQueryArgs{\n\t\t\t\tNumerator:   pulumi.String(\"sum:my.custom.count.metric{type:good_events}.as_count()\"),\n\t\t\t\tDenominator: pulumi.String(\"sum:my.custom.count.metric{*}.as_count()\"),\n\t\t\t},\n\t\t\tThresholds: datadog.ServiceLevelObjectiveThresholdArray{\n\t\t\t\t\u0026datadog.ServiceLevelObjectiveThresholdArgs{\n\t\t\t\t\tTimeframe: pulumi.String(\"7d\"),\n\t\t\t\t\tTarget:    pulumi.Float64(99.9),\n\t\t\t\t\tWarning:   pulumi.Float64(99.99),\n\t\t\t\t},\n\t\t\t\t\u0026datadog.ServiceLevelObjectiveThresholdArgs{\n\t\t\t\t\tTimeframe: pulumi.String(\"30d\"),\n\t\t\t\t\tTarget:    pulumi.Float64(99.9),\n\t\t\t\t\tWarning:   pulumi.Float64(99.99),\n\t\t\t\t},\n\t\t\t},\n\t\t\tTimeframe:        pulumi.String(\"30d\"),\n\t\t\tTargetThreshold:  pulumi.Float64(99.9),\n\t\t\tWarningThreshold: pulumi.Float64(99.99),\n\t\t\tTags: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"foo:bar\"),\n\t\t\t\tpulumi.String(\"baz\"),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t// Monitor-Based SLO\n\t\t// Create a new Datadog service level objective\n\t\t_, err = datadog.NewServiceLevelObjective(ctx, \"bar\", \u0026datadog.ServiceLevelObjectiveArgs{\n\t\t\tName:        pulumi.String(\"Example Monitor SLO\"),\n\t\t\tType:        pulumi.String(\"monitor\"),\n\t\t\tDescription: pulumi.String(\"My custom monitor SLO\"),\n\t\t\tMonitorIds: pulumi.IntArray{\n\t\t\t\tpulumi.Int(1),\n\t\t\t\tpulumi.Int(2),\n\t\t\t\tpulumi.Int(3),\n\t\t\t},\n\t\t\tThresholds: datadog.ServiceLevelObjectiveThresholdArray{\n\t\t\t\t\u0026datadog.ServiceLevelObjectiveThresholdArgs{\n\t\t\t\t\tTimeframe: pulumi.String(\"7d\"),\n\t\t\t\t\tTarget:    pulumi.Float64(99.9),\n\t\t\t\t\tWarning:   pulumi.Float64(99.99),\n\t\t\t\t},\n\t\t\t\t\u0026datadog.ServiceLevelObjectiveThresholdArgs{\n\t\t\t\t\tTimeframe: pulumi.String(\"30d\"),\n\t\t\t\t\tTarget:    pulumi.Float64(99.9),\n\t\t\t\t\tWarning:   pulumi.Float64(99.99),\n\t\t\t\t},\n\t\t\t},\n\t\t\tTimeframe:        pulumi.String(\"30d\"),\n\t\t\tTargetThreshold:  pulumi.Float64(99.9),\n\t\t\tWarningThreshold: pulumi.Float64(99.99),\n\t\t\tTags: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"foo:bar\"),\n\t\t\t\tpulumi.String(\"baz\"),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = datadog.NewServiceLevelObjective(ctx, \"time_slice_slo\", \u0026datadog.ServiceLevelObjectiveArgs{\n\t\t\tName:        pulumi.String(\"Example Time Slice SLO\"),\n\t\t\tType:        pulumi.String(\"time_slice\"),\n\t\t\tDescription: pulumi.String(\"My custom time slice SLO\"),\n\t\t\tSliSpecification: \u0026datadog.ServiceLevelObjectiveSliSpecificationArgs{\n\t\t\t\tTimeSlice: \u0026datadog.ServiceLevelObjectiveSliSpecificationTimeSliceArgs{\n\t\t\t\t\tQuery: \u0026datadog.ServiceLevelObjectiveSliSpecificationTimeSliceQueryArgs{\n\t\t\t\t\t\tFormula: \u0026datadog.ServiceLevelObjectiveSliSpecificationTimeSliceQueryFormulaArgs{\n\t\t\t\t\t\t\tFormulaExpression: pulumi.String(\"query1\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tQueries: datadog.ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryArray{\n\t\t\t\t\t\t\t\u0026datadog.ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryArgs{\n\t\t\t\t\t\t\t\tMetricQuery: \u0026datadog.ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryMetricQueryArgs{\n\t\t\t\t\t\t\t\t\tName:  pulumi.String(\"query1\"),\n\t\t\t\t\t\t\t\t\tQuery: pulumi.String(\"avg:my.custom.count.metric{*}.as_count()\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tComparator: pulumi.String(\"\u003e\"),\n\t\t\t\t\tThreshold:  pulumi.Float64(0.9),\n\t\t\t\t},\n\t\t\t},\n\t\t\tThresholds: datadog.ServiceLevelObjectiveThresholdArray{\n\t\t\t\t\u0026datadog.ServiceLevelObjectiveThresholdArgs{\n\t\t\t\t\tTimeframe: pulumi.String(\"7d\"),\n\t\t\t\t\tTarget:    pulumi.Float64(99.9),\n\t\t\t\t\tWarning:   pulumi.Float64(99.99),\n\t\t\t\t},\n\t\t\t},\n\t\t\tTimeframe:        pulumi.String(\"7d\"),\n\t\t\tTargetThreshold:  pulumi.Float64(99.9),\n\t\t\tWarningThreshold: pulumi.Float64(99.99),\n\t\t\tTags: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"service:myservice\"),\n\t\t\t\tpulumi.String(\"team:myteam\"),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.datadog.ServiceLevelObjective;\nimport com.pulumi.datadog.ServiceLevelObjectiveArgs;\nimport com.pulumi.datadog.inputs.ServiceLevelObjectiveQueryArgs;\nimport com.pulumi.datadog.inputs.ServiceLevelObjectiveThresholdArgs;\nimport com.pulumi.datadog.inputs.ServiceLevelObjectiveSliSpecificationArgs;\nimport com.pulumi.datadog.inputs.ServiceLevelObjectiveSliSpecificationTimeSliceArgs;\nimport com.pulumi.datadog.inputs.ServiceLevelObjectiveSliSpecificationTimeSliceQueryArgs;\nimport com.pulumi.datadog.inputs.ServiceLevelObjectiveSliSpecificationTimeSliceQueryFormulaArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        // Metric-Based SLO\n        // Create a new Datadog service level objective\n        var foo = new ServiceLevelObjective(\"foo\", ServiceLevelObjectiveArgs.builder()\n            .name(\"Example Metric SLO\")\n            .type(\"metric\")\n            .description(\"My custom metric SLO\")\n            .query(ServiceLevelObjectiveQueryArgs.builder()\n                .numerator(\"sum:my.custom.count.metric{type:good_events}.as_count()\")\n                .denominator(\"sum:my.custom.count.metric{*}.as_count()\")\n                .build())\n            .thresholds(            \n                ServiceLevelObjectiveThresholdArgs.builder()\n                    .timeframe(\"7d\")\n                    .target(99.9)\n                    .warning(99.99)\n                    .build(),\n                ServiceLevelObjectiveThresholdArgs.builder()\n                    .timeframe(\"30d\")\n                    .target(99.9)\n                    .warning(99.99)\n                    .build())\n            .timeframe(\"30d\")\n            .targetThreshold(99.9)\n            .warningThreshold(99.99)\n            .tags(            \n                \"foo:bar\",\n                \"baz\")\n            .build());\n\n        // Monitor-Based SLO\n        // Create a new Datadog service level objective\n        var bar = new ServiceLevelObjective(\"bar\", ServiceLevelObjectiveArgs.builder()\n            .name(\"Example Monitor SLO\")\n            .type(\"monitor\")\n            .description(\"My custom monitor SLO\")\n            .monitorIds(            \n                1,\n                2,\n                3)\n            .thresholds(            \n                ServiceLevelObjectiveThresholdArgs.builder()\n                    .timeframe(\"7d\")\n                    .target(99.9)\n                    .warning(99.99)\n                    .build(),\n                ServiceLevelObjectiveThresholdArgs.builder()\n                    .timeframe(\"30d\")\n                    .target(99.9)\n                    .warning(99.99)\n                    .build())\n            .timeframe(\"30d\")\n            .targetThreshold(99.9)\n            .warningThreshold(99.99)\n            .tags(            \n                \"foo:bar\",\n                \"baz\")\n            .build());\n\n        var timeSliceSlo = new ServiceLevelObjective(\"timeSliceSlo\", ServiceLevelObjectiveArgs.builder()\n            .name(\"Example Time Slice SLO\")\n            .type(\"time_slice\")\n            .description(\"My custom time slice SLO\")\n            .sliSpecification(ServiceLevelObjectiveSliSpecificationArgs.builder()\n                .timeSlice(ServiceLevelObjectiveSliSpecificationTimeSliceArgs.builder()\n                    .query(ServiceLevelObjectiveSliSpecificationTimeSliceQueryArgs.builder()\n                        .formula(ServiceLevelObjectiveSliSpecificationTimeSliceQueryFormulaArgs.builder()\n                            .formulaExpression(\"query1\")\n                            .build())\n                        .queries(ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryArgs.builder()\n                            .metricQuery(ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryMetricQueryArgs.builder()\n                                .name(\"query1\")\n                                .query(\"avg:my.custom.count.metric{*}.as_count()\")\n                                .build())\n                            .build())\n                        .build())\n                    .comparator(\"\u003e\")\n                    .threshold(0.9)\n                    .build())\n                .build())\n            .thresholds(ServiceLevelObjectiveThresholdArgs.builder()\n                .timeframe(\"7d\")\n                .target(99.9)\n                .warning(99.99)\n                .build())\n            .timeframe(\"7d\")\n            .targetThreshold(99.9)\n            .warningThreshold(99.99)\n            .tags(            \n                \"service:myservice\",\n                \"team:myteam\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  # Metric-Based SLO\n  # Create a new Datadog service level objective\n  foo:\n    type: datadog:ServiceLevelObjective\n    properties:\n      name: Example Metric SLO\n      type: metric\n      description: My custom metric SLO\n      query:\n        numerator: sum:my.custom.count.metric{type:good_events}.as_count()\n        denominator: sum:my.custom.count.metric{*}.as_count()\n      thresholds:\n        - timeframe: 7d\n          target: 99.9\n          warning: 99.99\n        - timeframe: 30d\n          target: 99.9\n          warning: 99.99\n      timeframe: 30d\n      targetThreshold: 99.9\n      warningThreshold: 99.99\n      tags:\n        - foo:bar\n        - baz\n  # Monitor-Based SLO\n  # Create a new Datadog service level objective\n  bar:\n    type: datadog:ServiceLevelObjective\n    properties:\n      name: Example Monitor SLO\n      type: monitor\n      description: My custom monitor SLO\n      monitorIds:\n        - 1\n        - 2\n        - 3\n      thresholds:\n        - timeframe: 7d\n          target: 99.9\n          warning: 99.99\n        - timeframe: 30d\n          target: 99.9\n          warning: 99.99\n      timeframe: 30d\n      targetThreshold: 99.9\n      warningThreshold: 99.99\n      tags:\n        - foo:bar\n        - baz\n  timeSliceSlo:\n    type: datadog:ServiceLevelObjective\n    name: time_slice_slo\n    properties:\n      name: Example Time Slice SLO\n      type: time_slice\n      description: My custom time slice SLO\n      sliSpecification:\n        timeSlice:\n          query:\n            formula:\n              formulaExpression: query1\n            queries:\n              - metricQuery:\n                  name: query1\n                  query: avg:my.custom.count.metric{*}.as_count()\n          comparator: '\u003e'\n          threshold: 0.9\n      thresholds:\n        - timeframe: 7d\n          target: 99.9\n          warning: 99.99\n      timeframe: 7d\n      targetThreshold: 99.9\n      warningThreshold: 99.99\n      tags:\n        - service:myservice\n        - team:myteam\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\nService Level Objectives can be imported using their string ID, e.g.\n\n```sh\n$ pulumi import datadog:index/serviceLevelObjective:ServiceLevelObjective baz 12345678901234567890123456789012\n```\n\n",
            "properties": {
                "description": {
                    "type": "string",
                    "description": "A description of this service level objective.\n"
                },
                "forceDelete": {
                    "type": "boolean",
                    "description": "A boolean indicating whether this monitor can be deleted even if it's referenced by other resources (for example, dashboards).\n"
                },
                "groups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A static set of groups to filter monitor-based SLOs\n"
                },
                "monitorIds": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "A static set of monitor IDs to use as part of the SLO\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of Datadog service level objective\n"
                },
                "query": {
                    "$ref": "#/types/datadog:index/ServiceLevelObjectiveQuery:ServiceLevelObjectiveQuery",
                    "description": "The metric query of good / total events\n"
                },
                "sliSpecification": {
                    "$ref": "#/types/datadog:index/ServiceLevelObjectiveSliSpecification:ServiceLevelObjectiveSliSpecification",
                    "description": "A map of SLI specifications to use as part of the SLO.\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tags to associate with your service level objective. This can help you categorize and filter service level objectives in the service level objectives page of the UI. Note: it's not currently possible to filter by these tags when querying via the API\n"
                },
                "targetThreshold": {
                    "type": "number",
                    "description": "The objective's target in `(0,100)`. This must match the corresponding thresholds of the primary time frame.\n"
                },
                "thresholds": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/ServiceLevelObjectiveThreshold:ServiceLevelObjectiveThreshold"
                    },
                    "description": "A list of thresholds and targets that define the service level objectives from the provided SLIs.\n"
                },
                "timeframe": {
                    "type": "string",
                    "description": "The primary time frame for the objective. The mapping from these types to the types found in the Datadog Web UI can be found in the Datadog API documentation page. Valid values are `7d`, `30d`, `90d`, `custom`.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The type of the service level objective. The mapping from these types to the types found in the Datadog Web UI can be found in the Datadog API [documentation page](https://docs.datadoghq.com/api/v1/service-level-objectives/#create-a-slo-object). Valid values are `metric`, `monitor`, `time_slice`.\n"
                },
                "validate": {
                    "type": "boolean",
                    "description": "Whether or not to validate the SLO. It checks if monitors added to a monitor SLO already exist.\n"
                },
                "warningThreshold": {
                    "type": "number",
                    "description": "The objective's warning value in `(0,100)`. This must be greater than the target value and match the corresponding thresholds of the primary time frame.\n"
                }
            },
            "required": [
                "name",
                "targetThreshold",
                "thresholds",
                "timeframe",
                "type",
                "warningThreshold"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "A description of this service level objective.\n"
                },
                "forceDelete": {
                    "type": "boolean",
                    "description": "A boolean indicating whether this monitor can be deleted even if it's referenced by other resources (for example, dashboards).\n"
                },
                "groups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A static set of groups to filter monitor-based SLOs\n"
                },
                "monitorIds": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "A static set of monitor IDs to use as part of the SLO\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of Datadog service level objective\n"
                },
                "query": {
                    "$ref": "#/types/datadog:index/ServiceLevelObjectiveQuery:ServiceLevelObjectiveQuery",
                    "description": "The metric query of good / total events\n"
                },
                "sliSpecification": {
                    "$ref": "#/types/datadog:index/ServiceLevelObjectiveSliSpecification:ServiceLevelObjectiveSliSpecification",
                    "description": "A map of SLI specifications to use as part of the SLO.\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tags to associate with your service level objective. This can help you categorize and filter service level objectives in the service level objectives page of the UI. Note: it's not currently possible to filter by these tags when querying via the API\n"
                },
                "targetThreshold": {
                    "type": "number",
                    "description": "The objective's target in `(0,100)`. This must match the corresponding thresholds of the primary time frame.\n"
                },
                "thresholds": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/ServiceLevelObjectiveThreshold:ServiceLevelObjectiveThreshold"
                    },
                    "description": "A list of thresholds and targets that define the service level objectives from the provided SLIs.\n"
                },
                "timeframe": {
                    "type": "string",
                    "description": "The primary time frame for the objective. The mapping from these types to the types found in the Datadog Web UI can be found in the Datadog API documentation page. Valid values are `7d`, `30d`, `90d`, `custom`.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The type of the service level objective. The mapping from these types to the types found in the Datadog Web UI can be found in the Datadog API [documentation page](https://docs.datadoghq.com/api/v1/service-level-objectives/#create-a-slo-object). Valid values are `metric`, `monitor`, `time_slice`.\n",
                    "willReplaceOnChanges": true
                },
                "validate": {
                    "type": "boolean",
                    "description": "Whether or not to validate the SLO. It checks if monitors added to a monitor SLO already exist.\n"
                },
                "warningThreshold": {
                    "type": "number",
                    "description": "The objective's warning value in `(0,100)`. This must be greater than the target value and match the corresponding thresholds of the primary time frame.\n"
                }
            },
            "requiredInputs": [
                "name",
                "thresholds",
                "type"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ServiceLevelObjective resources.\n",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "A description of this service level objective.\n"
                    },
                    "forceDelete": {
                        "type": "boolean",
                        "description": "A boolean indicating whether this monitor can be deleted even if it's referenced by other resources (for example, dashboards).\n"
                    },
                    "groups": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A static set of groups to filter monitor-based SLOs\n"
                    },
                    "monitorIds": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "description": "A static set of monitor IDs to use as part of the SLO\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of Datadog service level objective\n"
                    },
                    "query": {
                        "$ref": "#/types/datadog:index/ServiceLevelObjectiveQuery:ServiceLevelObjectiveQuery",
                        "description": "The metric query of good / total events\n"
                    },
                    "sliSpecification": {
                        "$ref": "#/types/datadog:index/ServiceLevelObjectiveSliSpecification:ServiceLevelObjectiveSliSpecification",
                        "description": "A map of SLI specifications to use as part of the SLO.\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of tags to associate with your service level objective. This can help you categorize and filter service level objectives in the service level objectives page of the UI. Note: it's not currently possible to filter by these tags when querying via the API\n"
                    },
                    "targetThreshold": {
                        "type": "number",
                        "description": "The objective's target in `(0,100)`. This must match the corresponding thresholds of the primary time frame.\n"
                    },
                    "thresholds": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/datadog:index/ServiceLevelObjectiveThreshold:ServiceLevelObjectiveThreshold"
                        },
                        "description": "A list of thresholds and targets that define the service level objectives from the provided SLIs.\n"
                    },
                    "timeframe": {
                        "type": "string",
                        "description": "The primary time frame for the objective. The mapping from these types to the types found in the Datadog Web UI can be found in the Datadog API documentation page. Valid values are `7d`, `30d`, `90d`, `custom`.\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "The type of the service level objective. The mapping from these types to the types found in the Datadog Web UI can be found in the Datadog API [documentation page](https://docs.datadoghq.com/api/v1/service-level-objectives/#create-a-slo-object). Valid values are `metric`, `monitor`, `time_slice`.\n",
                        "willReplaceOnChanges": true
                    },
                    "validate": {
                        "type": "boolean",
                        "description": "Whether or not to validate the SLO. It checks if monitors added to a monitor SLO already exist.\n"
                    },
                    "warningThreshold": {
                        "type": "number",
                        "description": "The objective's warning value in `(0,100)`. This must be greater than the target value and match the corresponding thresholds of the primary time frame.\n"
                    }
                },
                "type": "object"
            }
        },
        "datadog:index/sloCorrection:SloCorrection": {
            "description": "Resource for interacting with the slo_correction API.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as datadog from \"@pulumi/datadog\";\n\n// Create a new Datadog SLO correction. slo_id can be derived from slo resource or specify an slo id of an existing SLO.\nconst exampleSlo = new datadog.ServiceLevelObjective(\"example_slo\", {\n    name: \"example slo\",\n    type: \"metric\",\n    description: \"some updated description about example_slo SLO\",\n    query: {\n        numerator: \"sum:my.metric{type:good}.as_count()\",\n        denominator: \"sum:my.metric{type:good}.as_count() + sum:my.metric{type:bad}.as_count()\",\n    },\n    thresholds: [{\n        timeframe: \"7d\",\n        target: 99.5,\n        warning: 99.8,\n    }],\n    tags: [\"foo:bar\"],\n});\nconst exampleSloCorrection = new datadog.SloCorrection(\"example_slo_correction\", {\n    category: \"Scheduled Maintenance\",\n    description: \"correction example\",\n    start: 1735707000,\n    end: 1735718600,\n    sloId: exampleSlo.id,\n    timezone: \"UTC\",\n});\nconst exampleSloCorrectionWithRecurrence = new datadog.SloCorrection(\"example_slo_correction_with_recurrence\", {\n    category: \"Scheduled Maintenance\",\n    description: \"correction example with recurrence\",\n    start: 1735707000,\n    rrule: \"FREQ=DAILY;INTERVAL=3;COUNT=3\",\n    duration: 3600,\n    sloId: exampleSlo.id,\n    timezone: \"UTC\",\n});\n```\n```python\nimport pulumi\nimport pulumi_datadog as datadog\n\n# Create a new Datadog SLO correction. slo_id can be derived from slo resource or specify an slo id of an existing SLO.\nexample_slo = datadog.ServiceLevelObjective(\"example_slo\",\n    name=\"example slo\",\n    type=\"metric\",\n    description=\"some updated description about example_slo SLO\",\n    query={\n        \"numerator\": \"sum:my.metric{type:good}.as_count()\",\n        \"denominator\": \"sum:my.metric{type:good}.as_count() + sum:my.metric{type:bad}.as_count()\",\n    },\n    thresholds=[{\n        \"timeframe\": \"7d\",\n        \"target\": 99.5,\n        \"warning\": 99.8,\n    }],\n    tags=[\"foo:bar\"])\nexample_slo_correction = datadog.SloCorrection(\"example_slo_correction\",\n    category=\"Scheduled Maintenance\",\n    description=\"correction example\",\n    start=1735707000,\n    end=1735718600,\n    slo_id=example_slo.id,\n    timezone=\"UTC\")\nexample_slo_correction_with_recurrence = datadog.SloCorrection(\"example_slo_correction_with_recurrence\",\n    category=\"Scheduled Maintenance\",\n    description=\"correction example with recurrence\",\n    start=1735707000,\n    rrule=\"FREQ=DAILY;INTERVAL=3;COUNT=3\",\n    duration=3600,\n    slo_id=example_slo.id,\n    timezone=\"UTC\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Datadog = Pulumi.Datadog;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    // Create a new Datadog SLO correction. slo_id can be derived from slo resource or specify an slo id of an existing SLO.\n    var exampleSlo = new Datadog.ServiceLevelObjective(\"example_slo\", new()\n    {\n        Name = \"example slo\",\n        Type = \"metric\",\n        Description = \"some updated description about example_slo SLO\",\n        Query = new Datadog.Inputs.ServiceLevelObjectiveQueryArgs\n        {\n            Numerator = \"sum:my.metric{type:good}.as_count()\",\n            Denominator = \"sum:my.metric{type:good}.as_count() + sum:my.metric{type:bad}.as_count()\",\n        },\n        Thresholds = new[]\n        {\n            new Datadog.Inputs.ServiceLevelObjectiveThresholdArgs\n            {\n                Timeframe = \"7d\",\n                Target = 99.5,\n                Warning = 99.8,\n            },\n        },\n        Tags = new[]\n        {\n            \"foo:bar\",\n        },\n    });\n\n    var exampleSloCorrection = new Datadog.SloCorrection(\"example_slo_correction\", new()\n    {\n        Category = \"Scheduled Maintenance\",\n        Description = \"correction example\",\n        Start = 1735707000,\n        End = 1735718600,\n        SloId = exampleSlo.Id,\n        Timezone = \"UTC\",\n    });\n\n    var exampleSloCorrectionWithRecurrence = new Datadog.SloCorrection(\"example_slo_correction_with_recurrence\", new()\n    {\n        Category = \"Scheduled Maintenance\",\n        Description = \"correction example with recurrence\",\n        Start = 1735707000,\n        Rrule = \"FREQ=DAILY;INTERVAL=3;COUNT=3\",\n        Duration = 3600,\n        SloId = exampleSlo.Id,\n        Timezone = \"UTC\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-datadog/sdk/v4/go/datadog\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t// Create a new Datadog SLO correction. slo_id can be derived from slo resource or specify an slo id of an existing SLO.\n\t\texampleSlo, err := datadog.NewServiceLevelObjective(ctx, \"example_slo\", \u0026datadog.ServiceLevelObjectiveArgs{\n\t\t\tName:        pulumi.String(\"example slo\"),\n\t\t\tType:        pulumi.String(\"metric\"),\n\t\t\tDescription: pulumi.String(\"some updated description about example_slo SLO\"),\n\t\t\tQuery: \u0026datadog.ServiceLevelObjectiveQueryArgs{\n\t\t\t\tNumerator:   pulumi.String(\"sum:my.metric{type:good}.as_count()\"),\n\t\t\t\tDenominator: pulumi.String(\"sum:my.metric{type:good}.as_count() + sum:my.metric{type:bad}.as_count()\"),\n\t\t\t},\n\t\t\tThresholds: datadog.ServiceLevelObjectiveThresholdArray{\n\t\t\t\t\u0026datadog.ServiceLevelObjectiveThresholdArgs{\n\t\t\t\t\tTimeframe: pulumi.String(\"7d\"),\n\t\t\t\t\tTarget:    pulumi.Float64(99.5),\n\t\t\t\t\tWarning:   pulumi.Float64(99.8),\n\t\t\t\t},\n\t\t\t},\n\t\t\tTags: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"foo:bar\"),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = datadog.NewSloCorrection(ctx, \"example_slo_correction\", \u0026datadog.SloCorrectionArgs{\n\t\t\tCategory:    pulumi.String(\"Scheduled Maintenance\"),\n\t\t\tDescription: pulumi.String(\"correction example\"),\n\t\t\tStart:       pulumi.Int(1735707000),\n\t\t\tEnd:         pulumi.Int(1735718600),\n\t\t\tSloId:       exampleSlo.ID(),\n\t\t\tTimezone:    pulumi.String(\"UTC\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = datadog.NewSloCorrection(ctx, \"example_slo_correction_with_recurrence\", \u0026datadog.SloCorrectionArgs{\n\t\t\tCategory:    pulumi.String(\"Scheduled Maintenance\"),\n\t\t\tDescription: pulumi.String(\"correction example with recurrence\"),\n\t\t\tStart:       pulumi.Int(1735707000),\n\t\t\tRrule:       pulumi.String(\"FREQ=DAILY;INTERVAL=3;COUNT=3\"),\n\t\t\tDuration:    pulumi.Int(3600),\n\t\t\tSloId:       exampleSlo.ID(),\n\t\t\tTimezone:    pulumi.String(\"UTC\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.datadog.ServiceLevelObjective;\nimport com.pulumi.datadog.ServiceLevelObjectiveArgs;\nimport com.pulumi.datadog.inputs.ServiceLevelObjectiveQueryArgs;\nimport com.pulumi.datadog.inputs.ServiceLevelObjectiveThresholdArgs;\nimport com.pulumi.datadog.SloCorrection;\nimport com.pulumi.datadog.SloCorrectionArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        // Create a new Datadog SLO correction. slo_id can be derived from slo resource or specify an slo id of an existing SLO.\n        var exampleSlo = new ServiceLevelObjective(\"exampleSlo\", ServiceLevelObjectiveArgs.builder()\n            .name(\"example slo\")\n            .type(\"metric\")\n            .description(\"some updated description about example_slo SLO\")\n            .query(ServiceLevelObjectiveQueryArgs.builder()\n                .numerator(\"sum:my.metric{type:good}.as_count()\")\n                .denominator(\"sum:my.metric{type:good}.as_count() + sum:my.metric{type:bad}.as_count()\")\n                .build())\n            .thresholds(ServiceLevelObjectiveThresholdArgs.builder()\n                .timeframe(\"7d\")\n                .target(99.5)\n                .warning(99.8)\n                .build())\n            .tags(\"foo:bar\")\n            .build());\n\n        var exampleSloCorrection = new SloCorrection(\"exampleSloCorrection\", SloCorrectionArgs.builder()\n            .category(\"Scheduled Maintenance\")\n            .description(\"correction example\")\n            .start(1735707000)\n            .end(1735718600)\n            .sloId(exampleSlo.id())\n            .timezone(\"UTC\")\n            .build());\n\n        var exampleSloCorrectionWithRecurrence = new SloCorrection(\"exampleSloCorrectionWithRecurrence\", SloCorrectionArgs.builder()\n            .category(\"Scheduled Maintenance\")\n            .description(\"correction example with recurrence\")\n            .start(1735707000)\n            .rrule(\"FREQ=DAILY;INTERVAL=3;COUNT=3\")\n            .duration(3600)\n            .sloId(exampleSlo.id())\n            .timezone(\"UTC\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  # Create a new Datadog SLO correction. slo_id can be derived from slo resource or specify an slo id of an existing SLO.\n  exampleSlo:\n    type: datadog:ServiceLevelObjective\n    name: example_slo\n    properties:\n      name: example slo\n      type: metric\n      description: some updated description about example_slo SLO\n      query:\n        numerator: sum:my.metric{type:good}.as_count()\n        denominator: sum:my.metric{type:good}.as_count() + sum:my.metric{type:bad}.as_count()\n      thresholds:\n        - timeframe: 7d\n          target: 99.5\n          warning: 99.8\n      tags:\n        - foo:bar\n  exampleSloCorrection:\n    type: datadog:SloCorrection\n    name: example_slo_correction\n    properties:\n      category: Scheduled Maintenance\n      description: correction example\n      start: 1.735707e+09\n      end: 1.7357186e+09\n      sloId: ${exampleSlo.id}\n      timezone: UTC\n  exampleSloCorrectionWithRecurrence:\n    type: datadog:SloCorrection\n    name: example_slo_correction_with_recurrence\n    properties:\n      category: Scheduled Maintenance\n      description: correction example with recurrence\n      start: 1.735707e+09\n      rrule: FREQ=DAILY;INTERVAL=3;COUNT=3\n      duration: 3600\n      sloId: ${exampleSlo.id}\n      timezone: UTC\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\n```sh\n$ pulumi import datadog:index/sloCorrection:SloCorrection testing_slo_correction 11111111-3fee-11eb-8a13-77cd9f15119e\n```\n\n",
            "properties": {
                "category": {
                    "type": "string",
                    "description": "Category the SLO correction belongs to. Valid values are `Scheduled Maintenance`, `Outside Business Hours`, `Deployment`, `Other`.\n"
                },
                "description": {
                    "type": "string",
                    "description": "Description of the correction being made.\n"
                },
                "duration": {
                    "type": "integer",
                    "description": "Length of time in seconds for a specified `rrule` recurring SLO correction (required if specifying `rrule`)\n"
                },
                "end": {
                    "type": "integer",
                    "description": "Ending time of the correction in epoch seconds. Required for one time corrections, but optional if `rrule` is specified\n"
                },
                "rrule": {
                    "type": "string",
                    "description": "Recurrence rules as defined in the iCalendar RFC 5545. Supported rules for SLO corrections are `FREQ`, `INTERVAL`, `COUNT` and `UNTIL`.\n"
                },
                "sloId": {
                    "type": "string",
                    "description": "ID of the SLO that this correction will be applied to.\n"
                },
                "start": {
                    "type": "integer",
                    "description": "Starting time of the correction in epoch seconds.\n"
                },
                "timezone": {
                    "type": "string",
                    "description": "The timezone to display in the UI for the correction times (defaults to \"UTC\")\n"
                }
            },
            "required": [
                "category",
                "sloId",
                "start"
            ],
            "inputProperties": {
                "category": {
                    "type": "string",
                    "description": "Category the SLO correction belongs to. Valid values are `Scheduled Maintenance`, `Outside Business Hours`, `Deployment`, `Other`.\n"
                },
                "description": {
                    "type": "string",
                    "description": "Description of the correction being made.\n"
                },
                "duration": {
                    "type": "integer",
                    "description": "Length of time in seconds for a specified `rrule` recurring SLO correction (required if specifying `rrule`)\n"
                },
                "end": {
                    "type": "integer",
                    "description": "Ending time of the correction in epoch seconds. Required for one time corrections, but optional if `rrule` is specified\n"
                },
                "rrule": {
                    "type": "string",
                    "description": "Recurrence rules as defined in the iCalendar RFC 5545. Supported rules for SLO corrections are `FREQ`, `INTERVAL`, `COUNT` and `UNTIL`.\n"
                },
                "sloId": {
                    "type": "string",
                    "description": "ID of the SLO that this correction will be applied to.\n"
                },
                "start": {
                    "type": "integer",
                    "description": "Starting time of the correction in epoch seconds.\n"
                },
                "timezone": {
                    "type": "string",
                    "description": "The timezone to display in the UI for the correction times (defaults to \"UTC\")\n"
                }
            },
            "requiredInputs": [
                "category",
                "sloId",
                "start"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SloCorrection resources.\n",
                "properties": {
                    "category": {
                        "type": "string",
                        "description": "Category the SLO correction belongs to. Valid values are `Scheduled Maintenance`, `Outside Business Hours`, `Deployment`, `Other`.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "Description of the correction being made.\n"
                    },
                    "duration": {
                        "type": "integer",
                        "description": "Length of time in seconds for a specified `rrule` recurring SLO correction (required if specifying `rrule`)\n"
                    },
                    "end": {
                        "type": "integer",
                        "description": "Ending time of the correction in epoch seconds. Required for one time corrections, but optional if `rrule` is specified\n"
                    },
                    "rrule": {
                        "type": "string",
                        "description": "Recurrence rules as defined in the iCalendar RFC 5545. Supported rules for SLO corrections are `FREQ`, `INTERVAL`, `COUNT` and `UNTIL`.\n"
                    },
                    "sloId": {
                        "type": "string",
                        "description": "ID of the SLO that this correction will be applied to.\n"
                    },
                    "start": {
                        "type": "integer",
                        "description": "Starting time of the correction in epoch seconds.\n"
                    },
                    "timezone": {
                        "type": "string",
                        "description": "The timezone to display in the UI for the correction times (defaults to \"UTC\")\n"
                    }
                },
                "type": "object"
            }
        },
        "datadog:index/softwareCatalog:SoftwareCatalog": {
            "description": "Provides a Datadog Software Catalog Entity resource. This can be used to create and manage entities in Datadog Software Catalog using the YAML/JSON definition.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as datadog from \"@pulumi/datadog\";\n\n// v3 service entity \nconst serviceV3 = new datadog.SoftwareCatalog(\"service_v3\", {entity: `apiVersion: v3\nkind: service\nmetadata:\n  name: shopping-cart\n  displayName: Shopping Cart\n  inheritFrom: service:otherService\n  tags:\n    - tag:value\n  links:\n    - name: shopping-cart runbook\n      type: runbook\n      url: https://runbook/shopping-cart\n    - name: shopping-cart architecture\n      provider: gdoc\n      url: https://google.drive/shopping-cart-architecture\n      type: doc\n    - name: shopping-cart Wiki\n      provider: wiki\n      url: https://wiki/shopping-cart\n      type: doc\n    - name: shopping-cart source code\n      provider: github\n      url: http://github/shopping-cart\n      type: repo\n  contacts:\n    - name: Support Email\n      type: email\n      contact: team@shopping.com\n    - name: Support Slack\n      type: slack\n      contact: https://www.slack.com/archives/shopping-cart\n  owner: myteam\n  additionalOwners:\n    - name: opsTeam\n      type: operator\nintegrations:\n  pagerduty:\n    serviceURL: https://www.pagerduty.com/service-directory/Pshopping-cart\n  opsgenie:\n    serviceURL: https://www.opsgenie.com/service/shopping-cart\n    region: US\nextensions:\n  datadoghq.com/shopping-cart:\n    customField: customValue\nspec:\n  lifecycle: production\n  tier: \"1\"\n  type: web\n  languages:\n    - go\n    - python\n  dependsOn:\n    - service:serviceA\n    - service:serviceB\ndatadog:\n  performanceData:\n    tags:\n      - 'service:shopping-cart'\n      - 'hostname:shopping-cart'\n  events:\n    - name: \"deployment events\"\n      query: \"app:myapp AND type:github\"\n    - name: \"event type B\"\n      query: \"app:myapp AND type:github\"\n  logs:\n    - name: \"critical logs\"\n      query: \"app:myapp AND type:github\"\n    - name: \"ops logs\"\n      query: \"app:myapp AND type:github\"\n  pipelines:\n    fingerprints:\n      - fp1\n      - fp2\n  codeLocations:\n    - repositoryURL: http://github/shopping-cart.git\n      paths:\n        - baz/*.c\n        - bat/**/*\n        - ../plop/*.java\n    - repositoryURL: http://github/shopping-cart-2.git\n      paths:\n        - baz/*.c\n        - bat/**/*\n        - ../plop/*.java\n`});\n// v3 datastore entity \nconst datastoreV3 = new datadog.SoftwareCatalog(\"datastore_v3\", {entity: `apiVersion: v3\nkind: datastore\nmetadata:\n  name: shopping-cart-db\n  tags:\n    - tag:value\n  links:\n    - name: shopping-cart-db runbook\n      type: runbook\n      url: https://runbook/shopping-cart\n  contacts:\n    - name: Support Email\n      type: email\n      contact: team@shopping.com\n    - name: Support Slack\n      type: slack\n      contact: https://www.slack.com/archives/shopping-cart\n  owner: myteam\n  additionalOwners:\n    - name: opsTeam\n      type: operator\nintegrations:\n  pagerduty:\n    serviceURL: https://www.pagerduty.com/service-directory/Pshopping-cart\n  opsgenie:\n    serviceURL: https://www.opsgenie.com/service/shopping-cart\n    region: US\nextensions:\n  datadoghq.com/shopping-cart-db:\n    customField: customValue\nspec:\n  lifecycle: production\n  tier: \"1\"\n  type: \"postgres\"\ndatadog:\n  performanceData:\n    tags: ['tag:random']\n`});\n// v3 queue entity \nconst queueV3 = new datadog.SoftwareCatalog(\"queue_v3\", {entity: `apiVersion: v3\nkind: queue\nmetadata:\n  name: order-queue\n  tags:\n    - tag:value\n  links:\n    - name: order-queue runbook\n      type: runbook\n      url: https://runbook/order-queue\n  contacts:\n    - name: Support Email\n      type: email\n      contact: team@shopping.com\n    - name: Support Slack\n      type: slack\n      contact: https://www.slack.com/archives/shopping-cart\n  owner: myteam\n  additionalOwners:\n    - name: opsTeam\n      type: operator\nintegrations:\n  pagerduty:\n    serviceURL: https://www.pagerduty.com/service-directory/Pshopping-cart\n  opsgenie:\n    serviceURL: https://www.opsgenie.com/service/shopping-cart\n    region: US\nextensions:\n  datadoghq.com/order-queue:\n    customField: customValue\nspec:\n  lifecycle: production\n  tier: \"1\"\n  type: kafka\ndatadog:\n  performanceData:\n    tags: ['tag:random']\n`});\n// v3 system entity \nconst systemV3 = new datadog.SoftwareCatalog(\"system_v3\", {entity: `apiVersion: v3\nkind: system\nmetadata:\n  name: shopping-system\n  displayName: Shopping System\n  tags:\n    - tag:value\n  links:\n    - name: shopping-system runbook\n      type: runbook\n      url: https://runbook/shopping-system\n  contacts:\n    - name: Support Email\n      type: email\n      contact: team@shopping.com\n    - name: Support Slack\n      type: slack\n      contact: https://www.slack.com/archives/shopping-cart\n  owner: myteam\n  additionalOwners:\n    - name: opsTeam\n      type: operator\nintegrations:\n  pagerduty:\n    serviceURL: https://www.pagerduty.com/service-directory/Pshopping-cart\n  opsgenie:\n    serviceURL: https://www.opsgenie.com/service/shopping-cart\n    region: US\nspec:\n  components:\n    - service:shopping-cart\n    - queue:order-queue\n    - database:shopping-cart-db\nextensions:\n  datadoghq.com/shopping-system:\n    customField: customValue\ndatadog:\n  events:\n    - name: \"deployment events\"\n      query: \"app:myapp AND type:github\"\n    - name: \"event type B\"\n      query: \"app:myapp AND type:github\"\n  logs:\n    - name: \"critical logs\"\n      query: \"app:myapp AND type:github\"\n    - name: \"ops logs\"\n      query: \"app:myapp AND type:github\"\n`});\n```\n```python\nimport pulumi\nimport pulumi_datadog as datadog\n\n# v3 service entity \nservice_v3 = datadog.SoftwareCatalog(\"service_v3\", entity=\"\"\"apiVersion: v3\nkind: service\nmetadata:\n  name: shopping-cart\n  displayName: Shopping Cart\n  inheritFrom: service:otherService\n  tags:\n    - tag:value\n  links:\n    - name: shopping-cart runbook\n      type: runbook\n      url: https://runbook/shopping-cart\n    - name: shopping-cart architecture\n      provider: gdoc\n      url: https://google.drive/shopping-cart-architecture\n      type: doc\n    - name: shopping-cart Wiki\n      provider: wiki\n      url: https://wiki/shopping-cart\n      type: doc\n    - name: shopping-cart source code\n      provider: github\n      url: http://github/shopping-cart\n      type: repo\n  contacts:\n    - name: Support Email\n      type: email\n      contact: team@shopping.com\n    - name: Support Slack\n      type: slack\n      contact: https://www.slack.com/archives/shopping-cart\n  owner: myteam\n  additionalOwners:\n    - name: opsTeam\n      type: operator\nintegrations:\n  pagerduty:\n    serviceURL: https://www.pagerduty.com/service-directory/Pshopping-cart\n  opsgenie:\n    serviceURL: https://www.opsgenie.com/service/shopping-cart\n    region: US\nextensions:\n  datadoghq.com/shopping-cart:\n    customField: customValue\nspec:\n  lifecycle: production\n  tier: \"1\"\n  type: web\n  languages:\n    - go\n    - python\n  dependsOn:\n    - service:serviceA\n    - service:serviceB\ndatadog:\n  performanceData:\n    tags:\n      - 'service:shopping-cart'\n      - 'hostname:shopping-cart'\n  events:\n    - name: \"deployment events\"\n      query: \"app:myapp AND type:github\"\n    - name: \"event type B\"\n      query: \"app:myapp AND type:github\"\n  logs:\n    - name: \"critical logs\"\n      query: \"app:myapp AND type:github\"\n    - name: \"ops logs\"\n      query: \"app:myapp AND type:github\"\n  pipelines:\n    fingerprints:\n      - fp1\n      - fp2\n  codeLocations:\n    - repositoryURL: http://github/shopping-cart.git\n      paths:\n        - baz/*.c\n        - bat/**/*\n        - ../plop/*.java\n    - repositoryURL: http://github/shopping-cart-2.git\n      paths:\n        - baz/*.c\n        - bat/**/*\n        - ../plop/*.java\n\"\"\")\n# v3 datastore entity \ndatastore_v3 = datadog.SoftwareCatalog(\"datastore_v3\", entity=\"\"\"apiVersion: v3\nkind: datastore\nmetadata:\n  name: shopping-cart-db\n  tags:\n    - tag:value\n  links:\n    - name: shopping-cart-db runbook\n      type: runbook\n      url: https://runbook/shopping-cart\n  contacts:\n    - name: Support Email\n      type: email\n      contact: team@shopping.com\n    - name: Support Slack\n      type: slack\n      contact: https://www.slack.com/archives/shopping-cart\n  owner: myteam\n  additionalOwners:\n    - name: opsTeam\n      type: operator\nintegrations:\n  pagerduty:\n    serviceURL: https://www.pagerduty.com/service-directory/Pshopping-cart\n  opsgenie:\n    serviceURL: https://www.opsgenie.com/service/shopping-cart\n    region: US\nextensions:\n  datadoghq.com/shopping-cart-db:\n    customField: customValue\nspec:\n  lifecycle: production\n  tier: \"1\"\n  type: \"postgres\"\ndatadog:\n  performanceData:\n    tags: ['tag:random']\n\"\"\")\n# v3 queue entity \nqueue_v3 = datadog.SoftwareCatalog(\"queue_v3\", entity=\"\"\"apiVersion: v3\nkind: queue\nmetadata:\n  name: order-queue\n  tags:\n    - tag:value\n  links:\n    - name: order-queue runbook\n      type: runbook\n      url: https://runbook/order-queue\n  contacts:\n    - name: Support Email\n      type: email\n      contact: team@shopping.com\n    - name: Support Slack\n      type: slack\n      contact: https://www.slack.com/archives/shopping-cart\n  owner: myteam\n  additionalOwners:\n    - name: opsTeam\n      type: operator\nintegrations:\n  pagerduty:\n    serviceURL: https://www.pagerduty.com/service-directory/Pshopping-cart\n  opsgenie:\n    serviceURL: https://www.opsgenie.com/service/shopping-cart\n    region: US\nextensions:\n  datadoghq.com/order-queue:\n    customField: customValue\nspec:\n  lifecycle: production\n  tier: \"1\"\n  type: kafka\ndatadog:\n  performanceData:\n    tags: ['tag:random']\n\"\"\")\n# v3 system entity \nsystem_v3 = datadog.SoftwareCatalog(\"system_v3\", entity=\"\"\"apiVersion: v3\nkind: system\nmetadata:\n  name: shopping-system\n  displayName: Shopping System\n  tags:\n    - tag:value\n  links:\n    - name: shopping-system runbook\n      type: runbook\n      url: https://runbook/shopping-system\n  contacts:\n    - name: Support Email\n      type: email\n      contact: team@shopping.com\n    - name: Support Slack\n      type: slack\n      contact: https://www.slack.com/archives/shopping-cart\n  owner: myteam\n  additionalOwners:\n    - name: opsTeam\n      type: operator\nintegrations:\n  pagerduty:\n    serviceURL: https://www.pagerduty.com/service-directory/Pshopping-cart\n  opsgenie:\n    serviceURL: https://www.opsgenie.com/service/shopping-cart\n    region: US\nspec:\n  components:\n    - service:shopping-cart\n    - queue:order-queue\n    - database:shopping-cart-db\nextensions:\n  datadoghq.com/shopping-system:\n    customField: customValue\ndatadog:\n  events:\n    - name: \"deployment events\"\n      query: \"app:myapp AND type:github\"\n    - name: \"event type B\"\n      query: \"app:myapp AND type:github\"\n  logs:\n    - name: \"critical logs\"\n      query: \"app:myapp AND type:github\"\n    - name: \"ops logs\"\n      query: \"app:myapp AND type:github\"\n\"\"\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Datadog = Pulumi.Datadog;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    // v3 service entity \n    var serviceV3 = new Datadog.SoftwareCatalog(\"service_v3\", new()\n    {\n        Entity = @\"apiVersion: v3\nkind: service\nmetadata:\n  name: shopping-cart\n  displayName: Shopping Cart\n  inheritFrom: service:otherService\n  tags:\n    - tag:value\n  links:\n    - name: shopping-cart runbook\n      type: runbook\n      url: https://runbook/shopping-cart\n    - name: shopping-cart architecture\n      provider: gdoc\n      url: https://google.drive/shopping-cart-architecture\n      type: doc\n    - name: shopping-cart Wiki\n      provider: wiki\n      url: https://wiki/shopping-cart\n      type: doc\n    - name: shopping-cart source code\n      provider: github\n      url: http://github/shopping-cart\n      type: repo\n  contacts:\n    - name: Support Email\n      type: email\n      contact: team@shopping.com\n    - name: Support Slack\n      type: slack\n      contact: https://www.slack.com/archives/shopping-cart\n  owner: myteam\n  additionalOwners:\n    - name: opsTeam\n      type: operator\nintegrations:\n  pagerduty:\n    serviceURL: https://www.pagerduty.com/service-directory/Pshopping-cart\n  opsgenie:\n    serviceURL: https://www.opsgenie.com/service/shopping-cart\n    region: US\nextensions:\n  datadoghq.com/shopping-cart:\n    customField: customValue\nspec:\n  lifecycle: production\n  tier: \"\"1\"\"\n  type: web\n  languages:\n    - go\n    - python\n  dependsOn:\n    - service:serviceA\n    - service:serviceB\ndatadog:\n  performanceData:\n    tags:\n      - 'service:shopping-cart'\n      - 'hostname:shopping-cart'\n  events:\n    - name: \"\"deployment events\"\"\n      query: \"\"app:myapp AND type:github\"\"\n    - name: \"\"event type B\"\"\n      query: \"\"app:myapp AND type:github\"\"\n  logs:\n    - name: \"\"critical logs\"\"\n      query: \"\"app:myapp AND type:github\"\"\n    - name: \"\"ops logs\"\"\n      query: \"\"app:myapp AND type:github\"\"\n  pipelines:\n    fingerprints:\n      - fp1\n      - fp2\n  codeLocations:\n    - repositoryURL: http://github/shopping-cart.git\n      paths:\n        - baz/*.c\n        - bat/**/*\n        - ../plop/*.java\n    - repositoryURL: http://github/shopping-cart-2.git\n      paths:\n        - baz/*.c\n        - bat/**/*\n        - ../plop/*.java\n\",\n    });\n\n    // v3 datastore entity \n    var datastoreV3 = new Datadog.SoftwareCatalog(\"datastore_v3\", new()\n    {\n        Entity = @\"apiVersion: v3\nkind: datastore\nmetadata:\n  name: shopping-cart-db\n  tags:\n    - tag:value\n  links:\n    - name: shopping-cart-db runbook\n      type: runbook\n      url: https://runbook/shopping-cart\n  contacts:\n    - name: Support Email\n      type: email\n      contact: team@shopping.com\n    - name: Support Slack\n      type: slack\n      contact: https://www.slack.com/archives/shopping-cart\n  owner: myteam\n  additionalOwners:\n    - name: opsTeam\n      type: operator\nintegrations:\n  pagerduty:\n    serviceURL: https://www.pagerduty.com/service-directory/Pshopping-cart\n  opsgenie:\n    serviceURL: https://www.opsgenie.com/service/shopping-cart\n    region: US\nextensions:\n  datadoghq.com/shopping-cart-db:\n    customField: customValue\nspec:\n  lifecycle: production\n  tier: \"\"1\"\"\n  type: \"\"postgres\"\"\ndatadog:\n  performanceData:\n    tags: ['tag:random']\n\",\n    });\n\n    // v3 queue entity \n    var queueV3 = new Datadog.SoftwareCatalog(\"queue_v3\", new()\n    {\n        Entity = @\"apiVersion: v3\nkind: queue\nmetadata:\n  name: order-queue\n  tags:\n    - tag:value\n  links:\n    - name: order-queue runbook\n      type: runbook\n      url: https://runbook/order-queue\n  contacts:\n    - name: Support Email\n      type: email\n      contact: team@shopping.com\n    - name: Support Slack\n      type: slack\n      contact: https://www.slack.com/archives/shopping-cart\n  owner: myteam\n  additionalOwners:\n    - name: opsTeam\n      type: operator\nintegrations:\n  pagerduty:\n    serviceURL: https://www.pagerduty.com/service-directory/Pshopping-cart\n  opsgenie:\n    serviceURL: https://www.opsgenie.com/service/shopping-cart\n    region: US\nextensions:\n  datadoghq.com/order-queue:\n    customField: customValue\nspec:\n  lifecycle: production\n  tier: \"\"1\"\"\n  type: kafka\ndatadog:\n  performanceData:\n    tags: ['tag:random']\n\",\n    });\n\n    // v3 system entity \n    var systemV3 = new Datadog.SoftwareCatalog(\"system_v3\", new()\n    {\n        Entity = @\"apiVersion: v3\nkind: system\nmetadata:\n  name: shopping-system\n  displayName: Shopping System\n  tags:\n    - tag:value\n  links:\n    - name: shopping-system runbook\n      type: runbook\n      url: https://runbook/shopping-system\n  contacts:\n    - name: Support Email\n      type: email\n      contact: team@shopping.com\n    - name: Support Slack\n      type: slack\n      contact: https://www.slack.com/archives/shopping-cart\n  owner: myteam\n  additionalOwners:\n    - name: opsTeam\n      type: operator\nintegrations:\n  pagerduty:\n    serviceURL: https://www.pagerduty.com/service-directory/Pshopping-cart\n  opsgenie:\n    serviceURL: https://www.opsgenie.com/service/shopping-cart\n    region: US\nspec:\n  components:\n    - service:shopping-cart\n    - queue:order-queue\n    - database:shopping-cart-db\nextensions:\n  datadoghq.com/shopping-system:\n    customField: customValue\ndatadog:\n  events:\n    - name: \"\"deployment events\"\"\n      query: \"\"app:myapp AND type:github\"\"\n    - name: \"\"event type B\"\"\n      query: \"\"app:myapp AND type:github\"\"\n  logs:\n    - name: \"\"critical logs\"\"\n      query: \"\"app:myapp AND type:github\"\"\n    - name: \"\"ops logs\"\"\n      query: \"\"app:myapp AND type:github\"\"\n\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-datadog/sdk/v4/go/datadog\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t// v3 service entity\n\t\t_, err := datadog.NewSoftwareCatalog(ctx, \"service_v3\", \u0026datadog.SoftwareCatalogArgs{\n\t\t\tEntity: pulumi.String(`apiVersion: v3\nkind: service\nmetadata:\n  name: shopping-cart\n  displayName: Shopping Cart\n  inheritFrom: service:otherService\n  tags:\n    - tag:value\n  links:\n    - name: shopping-cart runbook\n      type: runbook\n      url: https://runbook/shopping-cart\n    - name: shopping-cart architecture\n      provider: gdoc\n      url: https://google.drive/shopping-cart-architecture\n      type: doc\n    - name: shopping-cart Wiki\n      provider: wiki\n      url: https://wiki/shopping-cart\n      type: doc\n    - name: shopping-cart source code\n      provider: github\n      url: http://github/shopping-cart\n      type: repo\n  contacts:\n    - name: Support Email\n      type: email\n      contact: team@shopping.com\n    - name: Support Slack\n      type: slack\n      contact: https://www.slack.com/archives/shopping-cart\n  owner: myteam\n  additionalOwners:\n    - name: opsTeam\n      type: operator\nintegrations:\n  pagerduty:\n    serviceURL: https://www.pagerduty.com/service-directory/Pshopping-cart\n  opsgenie:\n    serviceURL: https://www.opsgenie.com/service/shopping-cart\n    region: US\nextensions:\n  datadoghq.com/shopping-cart:\n    customField: customValue\nspec:\n  lifecycle: production\n  tier: \"1\"\n  type: web\n  languages:\n    - go\n    - python\n  dependsOn:\n    - service:serviceA\n    - service:serviceB\ndatadog:\n  performanceData:\n    tags:\n      - 'service:shopping-cart'\n      - 'hostname:shopping-cart'\n  events:\n    - name: \"deployment events\"\n      query: \"app:myapp AND type:github\"\n    - name: \"event type B\"\n      query: \"app:myapp AND type:github\"\n  logs:\n    - name: \"critical logs\"\n      query: \"app:myapp AND type:github\"\n    - name: \"ops logs\"\n      query: \"app:myapp AND type:github\"\n  pipelines:\n    fingerprints:\n      - fp1\n      - fp2\n  codeLocations:\n    - repositoryURL: http://github/shopping-cart.git\n      paths:\n        - baz/*.c\n        - bat/**/*\n        - ../plop/*.java\n    - repositoryURL: http://github/shopping-cart-2.git\n      paths:\n        - baz/*.c\n        - bat/**/*\n        - ../plop/*.java\n`),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t// v3 datastore entity\n\t\t_, err = datadog.NewSoftwareCatalog(ctx, \"datastore_v3\", \u0026datadog.SoftwareCatalogArgs{\n\t\t\tEntity: pulumi.String(`apiVersion: v3\nkind: datastore\nmetadata:\n  name: shopping-cart-db\n  tags:\n    - tag:value\n  links:\n    - name: shopping-cart-db runbook\n      type: runbook\n      url: https://runbook/shopping-cart\n  contacts:\n    - name: Support Email\n      type: email\n      contact: team@shopping.com\n    - name: Support Slack\n      type: slack\n      contact: https://www.slack.com/archives/shopping-cart\n  owner: myteam\n  additionalOwners:\n    - name: opsTeam\n      type: operator\nintegrations:\n  pagerduty:\n    serviceURL: https://www.pagerduty.com/service-directory/Pshopping-cart\n  opsgenie:\n    serviceURL: https://www.opsgenie.com/service/shopping-cart\n    region: US\nextensions:\n  datadoghq.com/shopping-cart-db:\n    customField: customValue\nspec:\n  lifecycle: production\n  tier: \"1\"\n  type: \"postgres\"\ndatadog:\n  performanceData:\n    tags: ['tag:random']\n`),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t// v3 queue entity\n\t\t_, err = datadog.NewSoftwareCatalog(ctx, \"queue_v3\", \u0026datadog.SoftwareCatalogArgs{\n\t\t\tEntity: pulumi.String(`apiVersion: v3\nkind: queue\nmetadata:\n  name: order-queue\n  tags:\n    - tag:value\n  links:\n    - name: order-queue runbook\n      type: runbook\n      url: https://runbook/order-queue\n  contacts:\n    - name: Support Email\n      type: email\n      contact: team@shopping.com\n    - name: Support Slack\n      type: slack\n      contact: https://www.slack.com/archives/shopping-cart\n  owner: myteam\n  additionalOwners:\n    - name: opsTeam\n      type: operator\nintegrations:\n  pagerduty:\n    serviceURL: https://www.pagerduty.com/service-directory/Pshopping-cart\n  opsgenie:\n    serviceURL: https://www.opsgenie.com/service/shopping-cart\n    region: US\nextensions:\n  datadoghq.com/order-queue:\n    customField: customValue\nspec:\n  lifecycle: production\n  tier: \"1\"\n  type: kafka\ndatadog:\n  performanceData:\n    tags: ['tag:random']\n`),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t// v3 system entity\n\t\t_, err = datadog.NewSoftwareCatalog(ctx, \"system_v3\", \u0026datadog.SoftwareCatalogArgs{\n\t\t\tEntity: pulumi.String(`apiVersion: v3\nkind: system\nmetadata:\n  name: shopping-system\n  displayName: Shopping System\n  tags:\n    - tag:value\n  links:\n    - name: shopping-system runbook\n      type: runbook\n      url: https://runbook/shopping-system\n  contacts:\n    - name: Support Email\n      type: email\n      contact: team@shopping.com\n    - name: Support Slack\n      type: slack\n      contact: https://www.slack.com/archives/shopping-cart\n  owner: myteam\n  additionalOwners:\n    - name: opsTeam\n      type: operator\nintegrations:\n  pagerduty:\n    serviceURL: https://www.pagerduty.com/service-directory/Pshopping-cart\n  opsgenie:\n    serviceURL: https://www.opsgenie.com/service/shopping-cart\n    region: US\nspec:\n  components:\n    - service:shopping-cart\n    - queue:order-queue\n    - database:shopping-cart-db\nextensions:\n  datadoghq.com/shopping-system:\n    customField: customValue\ndatadog:\n  events:\n    - name: \"deployment events\"\n      query: \"app:myapp AND type:github\"\n    - name: \"event type B\"\n      query: \"app:myapp AND type:github\"\n  logs:\n    - name: \"critical logs\"\n      query: \"app:myapp AND type:github\"\n    - name: \"ops logs\"\n      query: \"app:myapp AND type:github\"\n`),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.datadog.SoftwareCatalog;\nimport com.pulumi.datadog.SoftwareCatalogArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        // v3 service entity \n        var serviceV3 = new SoftwareCatalog(\"serviceV3\", SoftwareCatalogArgs.builder()\n            .entity(\"\"\"\napiVersion: v3\nkind: service\nmetadata:\n  name: shopping-cart\n  displayName: Shopping Cart\n  inheritFrom: service:otherService\n  tags:\n    - tag:value\n  links:\n    - name: shopping-cart runbook\n      type: runbook\n      url: https://runbook/shopping-cart\n    - name: shopping-cart architecture\n      provider: gdoc\n      url: https://google.drive/shopping-cart-architecture\n      type: doc\n    - name: shopping-cart Wiki\n      provider: wiki\n      url: https://wiki/shopping-cart\n      type: doc\n    - name: shopping-cart source code\n      provider: github\n      url: http://github/shopping-cart\n      type: repo\n  contacts:\n    - name: Support Email\n      type: email\n      contact: team@shopping.com\n    - name: Support Slack\n      type: slack\n      contact: https://www.slack.com/archives/shopping-cart\n  owner: myteam\n  additionalOwners:\n    - name: opsTeam\n      type: operator\nintegrations:\n  pagerduty:\n    serviceURL: https://www.pagerduty.com/service-directory/Pshopping-cart\n  opsgenie:\n    serviceURL: https://www.opsgenie.com/service/shopping-cart\n    region: US\nextensions:\n  datadoghq.com/shopping-cart:\n    customField: customValue\nspec:\n  lifecycle: production\n  tier: \"1\"\n  type: web\n  languages:\n    - go\n    - python\n  dependsOn:\n    - service:serviceA\n    - service:serviceB\ndatadog:\n  performanceData:\n    tags:\n      - 'service:shopping-cart'\n      - 'hostname:shopping-cart'\n  events:\n    - name: \"deployment events\"\n      query: \"app:myapp AND type:github\"\n    - name: \"event type B\"\n      query: \"app:myapp AND type:github\"\n  logs:\n    - name: \"critical logs\"\n      query: \"app:myapp AND type:github\"\n    - name: \"ops logs\"\n      query: \"app:myapp AND type:github\"\n  pipelines:\n    fingerprints:\n      - fp1\n      - fp2\n  codeLocations:\n    - repositoryURL: http://github/shopping-cart.git\n      paths:\n        - baz/*.c\n        - bat/**/*\n        - ../plop/*.java\n    - repositoryURL: http://github/shopping-cart-2.git\n      paths:\n        - baz/*.c\n        - bat/**/*\n        - ../plop/*.java\n            \"\"\")\n            .build());\n\n        // v3 datastore entity \n        var datastoreV3 = new SoftwareCatalog(\"datastoreV3\", SoftwareCatalogArgs.builder()\n            .entity(\"\"\"\napiVersion: v3\nkind: datastore\nmetadata:\n  name: shopping-cart-db\n  tags:\n    - tag:value\n  links:\n    - name: shopping-cart-db runbook\n      type: runbook\n      url: https://runbook/shopping-cart\n  contacts:\n    - name: Support Email\n      type: email\n      contact: team@shopping.com\n    - name: Support Slack\n      type: slack\n      contact: https://www.slack.com/archives/shopping-cart\n  owner: myteam\n  additionalOwners:\n    - name: opsTeam\n      type: operator\nintegrations:\n  pagerduty:\n    serviceURL: https://www.pagerduty.com/service-directory/Pshopping-cart\n  opsgenie:\n    serviceURL: https://www.opsgenie.com/service/shopping-cart\n    region: US\nextensions:\n  datadoghq.com/shopping-cart-db:\n    customField: customValue\nspec:\n  lifecycle: production\n  tier: \"1\"\n  type: \"postgres\"\ndatadog:\n  performanceData:\n    tags: ['tag:random']\n            \"\"\")\n            .build());\n\n        // v3 queue entity \n        var queueV3 = new SoftwareCatalog(\"queueV3\", SoftwareCatalogArgs.builder()\n            .entity(\"\"\"\napiVersion: v3\nkind: queue\nmetadata:\n  name: order-queue\n  tags:\n    - tag:value\n  links:\n    - name: order-queue runbook\n      type: runbook\n      url: https://runbook/order-queue\n  contacts:\n    - name: Support Email\n      type: email\n      contact: team@shopping.com\n    - name: Support Slack\n      type: slack\n      contact: https://www.slack.com/archives/shopping-cart\n  owner: myteam\n  additionalOwners:\n    - name: opsTeam\n      type: operator\nintegrations:\n  pagerduty:\n    serviceURL: https://www.pagerduty.com/service-directory/Pshopping-cart\n  opsgenie:\n    serviceURL: https://www.opsgenie.com/service/shopping-cart\n    region: US\nextensions:\n  datadoghq.com/order-queue:\n    customField: customValue\nspec:\n  lifecycle: production\n  tier: \"1\"\n  type: kafka\ndatadog:\n  performanceData:\n    tags: ['tag:random']\n            \"\"\")\n            .build());\n\n        // v3 system entity \n        var systemV3 = new SoftwareCatalog(\"systemV3\", SoftwareCatalogArgs.builder()\n            .entity(\"\"\"\napiVersion: v3\nkind: system\nmetadata:\n  name: shopping-system\n  displayName: Shopping System\n  tags:\n    - tag:value\n  links:\n    - name: shopping-system runbook\n      type: runbook\n      url: https://runbook/shopping-system\n  contacts:\n    - name: Support Email\n      type: email\n      contact: team@shopping.com\n    - name: Support Slack\n      type: slack\n      contact: https://www.slack.com/archives/shopping-cart\n  owner: myteam\n  additionalOwners:\n    - name: opsTeam\n      type: operator\nintegrations:\n  pagerduty:\n    serviceURL: https://www.pagerduty.com/service-directory/Pshopping-cart\n  opsgenie:\n    serviceURL: https://www.opsgenie.com/service/shopping-cart\n    region: US\nspec:\n  components:\n    - service:shopping-cart\n    - queue:order-queue\n    - database:shopping-cart-db\nextensions:\n  datadoghq.com/shopping-system:\n    customField: customValue\ndatadog:\n  events:\n    - name: \"deployment events\"\n      query: \"app:myapp AND type:github\"\n    - name: \"event type B\"\n      query: \"app:myapp AND type:github\"\n  logs:\n    - name: \"critical logs\"\n      query: \"app:myapp AND type:github\"\n    - name: \"ops logs\"\n      query: \"app:myapp AND type:github\"\n            \"\"\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  # v3 service entity\n  serviceV3:\n    type: datadog:SoftwareCatalog\n    name: service_v3\n    properties:\n      entity: |\n        apiVersion: v3\n        kind: service\n        metadata:\n          name: shopping-cart\n          displayName: Shopping Cart\n          inheritFrom: service:otherService\n          tags:\n            - tag:value\n          links:\n            - name: shopping-cart runbook\n              type: runbook\n              url: https://runbook/shopping-cart\n            - name: shopping-cart architecture\n              provider: gdoc\n              url: https://google.drive/shopping-cart-architecture\n              type: doc\n            - name: shopping-cart Wiki\n              provider: wiki\n              url: https://wiki/shopping-cart\n              type: doc\n            - name: shopping-cart source code\n              provider: github\n              url: http://github/shopping-cart\n              type: repo\n          contacts:\n            - name: Support Email\n              type: email\n              contact: team@shopping.com\n            - name: Support Slack\n              type: slack\n              contact: https://www.slack.com/archives/shopping-cart\n          owner: myteam\n          additionalOwners:\n            - name: opsTeam\n              type: operator\n        integrations:\n          pagerduty:\n            serviceURL: https://www.pagerduty.com/service-directory/Pshopping-cart\n          opsgenie:\n            serviceURL: https://www.opsgenie.com/service/shopping-cart\n            region: US\n        extensions:\n          datadoghq.com/shopping-cart:\n            customField: customValue\n        spec:\n          lifecycle: production\n          tier: \"1\"\n          type: web\n          languages:\n            - go\n            - python\n          dependsOn:\n            - service:serviceA\n            - service:serviceB\n        datadog:\n          performanceData:\n            tags:\n              - 'service:shopping-cart'\n              - 'hostname:shopping-cart'\n          events:\n            - name: \"deployment events\"\n              query: \"app:myapp AND type:github\"\n            - name: \"event type B\"\n              query: \"app:myapp AND type:github\"\n          logs:\n            - name: \"critical logs\"\n              query: \"app:myapp AND type:github\"\n            - name: \"ops logs\"\n              query: \"app:myapp AND type:github\"\n          pipelines:\n            fingerprints:\n              - fp1\n              - fp2\n          codeLocations:\n            - repositoryURL: http://github/shopping-cart.git\n              paths:\n                - baz/*.c\n                - bat/**/*\n                - ../plop/*.java\n            - repositoryURL: http://github/shopping-cart-2.git\n              paths:\n                - baz/*.c\n                - bat/**/*\n                - ../plop/*.java\n  # v3 datastore entity\n  datastoreV3:\n    type: datadog:SoftwareCatalog\n    name: datastore_v3\n    properties:\n      entity: |\n        apiVersion: v3\n        kind: datastore\n        metadata:\n          name: shopping-cart-db\n          tags:\n            - tag:value\n          links:\n            - name: shopping-cart-db runbook\n              type: runbook\n              url: https://runbook/shopping-cart\n          contacts:\n            - name: Support Email\n              type: email\n              contact: team@shopping.com\n            - name: Support Slack\n              type: slack\n              contact: https://www.slack.com/archives/shopping-cart\n          owner: myteam\n          additionalOwners:\n            - name: opsTeam\n              type: operator\n        integrations:\n          pagerduty:\n            serviceURL: https://www.pagerduty.com/service-directory/Pshopping-cart\n          opsgenie:\n            serviceURL: https://www.opsgenie.com/service/shopping-cart\n            region: US\n        extensions:\n          datadoghq.com/shopping-cart-db:\n            customField: customValue\n        spec:\n          lifecycle: production\n          tier: \"1\"\n          type: \"postgres\"\n        datadog:\n          performanceData:\n            tags: ['tag:random']\n  # v3 queue entity\n  queueV3:\n    type: datadog:SoftwareCatalog\n    name: queue_v3\n    properties:\n      entity: |\n        apiVersion: v3\n        kind: queue\n        metadata:\n          name: order-queue\n          tags:\n            - tag:value\n          links:\n            - name: order-queue runbook\n              type: runbook\n              url: https://runbook/order-queue\n          contacts:\n            - name: Support Email\n              type: email\n              contact: team@shopping.com\n            - name: Support Slack\n              type: slack\n              contact: https://www.slack.com/archives/shopping-cart\n          owner: myteam\n          additionalOwners:\n            - name: opsTeam\n              type: operator\n        integrations:\n          pagerduty:\n            serviceURL: https://www.pagerduty.com/service-directory/Pshopping-cart\n          opsgenie:\n            serviceURL: https://www.opsgenie.com/service/shopping-cart\n            region: US\n        extensions:\n          datadoghq.com/order-queue:\n            customField: customValue\n        spec:\n          lifecycle: production\n          tier: \"1\"\n          type: kafka\n        datadog:\n          performanceData:\n            tags: ['tag:random']\n  # v3 system entity\n  systemV3:\n    type: datadog:SoftwareCatalog\n    name: system_v3\n    properties:\n      entity: |\n        apiVersion: v3\n        kind: system\n        metadata:\n          name: shopping-system\n          displayName: Shopping System\n          tags:\n            - tag:value\n          links:\n            - name: shopping-system runbook\n              type: runbook\n              url: https://runbook/shopping-system\n          contacts:\n            - name: Support Email\n              type: email\n              contact: team@shopping.com\n            - name: Support Slack\n              type: slack\n              contact: https://www.slack.com/archives/shopping-cart\n          owner: myteam\n          additionalOwners:\n            - name: opsTeam\n              type: operator\n        integrations:\n          pagerduty:\n            serviceURL: https://www.pagerduty.com/service-directory/Pshopping-cart\n          opsgenie:\n            serviceURL: https://www.opsgenie.com/service/shopping-cart\n            region: US\n        spec:\n          components:\n            - service:shopping-cart\n            - queue:order-queue\n            - database:shopping-cart-db\n        extensions:\n          datadoghq.com/shopping-system:\n            customField: customValue\n        datadog:\n          events:\n            - name: \"deployment events\"\n              query: \"app:myapp AND type:github\"\n            - name: \"event type B\"\n              query: \"app:myapp AND type:github\"\n          logs:\n            - name: \"critical logs\"\n              query: \"app:myapp AND type:github\"\n            - name: \"ops logs\"\n              query: \"app:myapp AND type:github\"\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\n```sh\n$ pulumi import datadog:index/softwareCatalog:SoftwareCatalog this \u003cname\u003e\n```\n\n",
            "properties": {
                "entity": {
                    "type": "string",
                    "description": "The catalog entity definition.\n"
                }
            },
            "required": [
                "entity"
            ],
            "inputProperties": {
                "entity": {
                    "type": "string",
                    "description": "The catalog entity definition.\n"
                }
            },
            "requiredInputs": [
                "entity"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SoftwareCatalog resources.\n",
                "properties": {
                    "entity": {
                        "type": "string",
                        "description": "The catalog entity definition.\n"
                    }
                },
                "type": "object"
            }
        },
        "datadog:index/spansMetric:SpansMetric": {
            "description": "Provides a Datadog SpansMetric resource. This can be used to create and manage Datadog spans_metric.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.datadog.SpansMetric;\nimport com.pulumi.datadog.SpansMetricArgs;\nimport com.pulumi.datadog.inputs.SpansMetricGroupByArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        // Create new spans_metric resource\n        var testingSpansMetric = new SpansMetric(\"testingSpansMetric\", SpansMetricArgs.builder()\n            .name(\"testing.span.metric\")\n            .compute(SpansMetricComputeArgs.builder()\n                .aggregationType(\"distribution\")\n                .includePercentiles(false)\n                .path(\"@duration\")\n                .build())\n            .filter(SpansMetricFilterArgs.builder()\n                .query(\"@http.status_code:200 service:my-service\")\n                .build())\n            .groupBies(SpansMetricGroupByArgs.builder()\n                .path(\"resource_name\")\n                .tagName(\"resource_name\")\n                .build())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  # Create new spans_metric resource\n  testingSpansMetric:\n    type: datadog:SpansMetric\n    name: testing_spans_metric\n    properties:\n      name: testing.span.metric\n      compute:\n        - aggregationType: distribution\n          includePercentiles: false\n          path: '@duration'\n      filter:\n        - query: '@http.status_code:200 service:my-service'\n      groupBies:\n        - path: resource_name\n          tagName: resource_name\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\n```sh\n$ pulumi import datadog:index/spansMetric:SpansMetric testing_spans_metric testing.span.metric\n```\n\n",
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:index/SpansMetricCompute:SpansMetricCompute"
                },
                "filter": {
                    "$ref": "#/types/datadog:index/SpansMetricFilter:SpansMetricFilter"
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/SpansMetricGroupBy:SpansMetricGroupBy"
                    }
                },
                "name": {
                    "type": "string",
                    "description": "The name of the span-based metric. This field can't be updated after creation.\n"
                }
            },
            "required": [
                "name"
            ],
            "inputProperties": {
                "compute": {
                    "$ref": "#/types/datadog:index/SpansMetricCompute:SpansMetricCompute"
                },
                "filter": {
                    "$ref": "#/types/datadog:index/SpansMetricFilter:SpansMetricFilter"
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/SpansMetricGroupBy:SpansMetricGroupBy"
                    }
                },
                "name": {
                    "type": "string",
                    "description": "The name of the span-based metric. This field can't be updated after creation.\n"
                }
            },
            "requiredInputs": [
                "name"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SpansMetric resources.\n",
                "properties": {
                    "compute": {
                        "$ref": "#/types/datadog:index/SpansMetricCompute:SpansMetricCompute"
                    },
                    "filter": {
                        "$ref": "#/types/datadog:index/SpansMetricFilter:SpansMetricFilter"
                    },
                    "groupBies": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/datadog:index/SpansMetricGroupBy:SpansMetricGroupBy"
                        }
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the span-based metric. This field can't be updated after creation.\n"
                    }
                },
                "type": "object"
            }
        },
        "datadog:index/syntheticsConcurrencyCap:SyntheticsConcurrencyCap": {
            "description": "Provides a Datadog Synthetics On Demand Concurrency Cap API resource. This can be used to manage the Concurrency Cap for Synthetic tests.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as datadog from \"@pulumi/datadog\";\n\n// Example Usage (Synthetics Concurrency Cap Configuration)\nconst _this = new datadog.SyntheticsConcurrencyCap(\"this\", {onDemandConcurrencyCap: 1});\n```\n```python\nimport pulumi\nimport pulumi_datadog as datadog\n\n# Example Usage (Synthetics Concurrency Cap Configuration)\nthis = datadog.SyntheticsConcurrencyCap(\"this\", on_demand_concurrency_cap=1)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Datadog = Pulumi.Datadog;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    // Example Usage (Synthetics Concurrency Cap Configuration)\n    var @this = new Datadog.SyntheticsConcurrencyCap(\"this\", new()\n    {\n        OnDemandConcurrencyCap = 1,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-datadog/sdk/v4/go/datadog\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t// Example Usage (Synthetics Concurrency Cap Configuration)\n\t\t_, err := datadog.NewSyntheticsConcurrencyCap(ctx, \"this\", \u0026datadog.SyntheticsConcurrencyCapArgs{\n\t\t\tOnDemandConcurrencyCap: pulumi.Int(1),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.datadog.SyntheticsConcurrencyCap;\nimport com.pulumi.datadog.SyntheticsConcurrencyCapArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        // Example Usage (Synthetics Concurrency Cap Configuration)\n        var this_ = new SyntheticsConcurrencyCap(\"this\", SyntheticsConcurrencyCapArgs.builder()\n            .onDemandConcurrencyCap(1)\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  # Example Usage (Synthetics Concurrency Cap Configuration)\n  this:\n    type: datadog:SyntheticsConcurrencyCap\n    properties:\n      onDemandConcurrencyCap: 1\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\nThe Synthetics concurrency cap can be imported. \u003cname\u003e can be whatever you specify in your code. Datadog does not store the name on the server.\n\n```sh\n$ pulumi import datadog:index/syntheticsConcurrencyCap:SyntheticsConcurrencyCap this \u003cname\u003e\n```\n\n",
            "properties": {
                "onDemandConcurrencyCap": {
                    "type": "integer",
                    "description": "Value of the on-demand concurrency cap, customizing the number of Synthetic tests run in parallel.\n"
                }
            },
            "required": [
                "onDemandConcurrencyCap"
            ],
            "inputProperties": {
                "onDemandConcurrencyCap": {
                    "type": "integer",
                    "description": "Value of the on-demand concurrency cap, customizing the number of Synthetic tests run in parallel.\n"
                }
            },
            "requiredInputs": [
                "onDemandConcurrencyCap"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SyntheticsConcurrencyCap resources.\n",
                "properties": {
                    "onDemandConcurrencyCap": {
                        "type": "integer",
                        "description": "Value of the on-demand concurrency cap, customizing the number of Synthetic tests run in parallel.\n"
                    }
                },
                "type": "object"
            }
        },
        "datadog:index/syntheticsGlobalVariable:SyntheticsGlobalVariable": {
            "description": "Provides a Datadog synthetics global variable resource. This can be used to create and manage Datadog synthetics global variables.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as datadog from \"@pulumi/datadog\";\n\nconst testVariable = new datadog.SyntheticsGlobalVariable(\"test_variable\", {\n    name: \"EXAMPLE_VARIABLE\",\n    description: \"Description of the variable\",\n    tags: [\n        \"foo:bar\",\n        \"env:test\",\n    ],\n    value: \"variable-value\",\n});\n```\n```python\nimport pulumi\nimport pulumi_datadog as datadog\n\ntest_variable = datadog.SyntheticsGlobalVariable(\"test_variable\",\n    name=\"EXAMPLE_VARIABLE\",\n    description=\"Description of the variable\",\n    tags=[\n        \"foo:bar\",\n        \"env:test\",\n    ],\n    value=\"variable-value\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Datadog = Pulumi.Datadog;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var testVariable = new Datadog.SyntheticsGlobalVariable(\"test_variable\", new()\n    {\n        Name = \"EXAMPLE_VARIABLE\",\n        Description = \"Description of the variable\",\n        Tags = new[]\n        {\n            \"foo:bar\",\n            \"env:test\",\n        },\n        Value = \"variable-value\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-datadog/sdk/v4/go/datadog\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := datadog.NewSyntheticsGlobalVariable(ctx, \"test_variable\", \u0026datadog.SyntheticsGlobalVariableArgs{\n\t\t\tName:        pulumi.String(\"EXAMPLE_VARIABLE\"),\n\t\t\tDescription: pulumi.String(\"Description of the variable\"),\n\t\t\tTags: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"foo:bar\"),\n\t\t\t\tpulumi.String(\"env:test\"),\n\t\t\t},\n\t\t\tValue: pulumi.String(\"variable-value\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.datadog.SyntheticsGlobalVariable;\nimport com.pulumi.datadog.SyntheticsGlobalVariableArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var testVariable = new SyntheticsGlobalVariable(\"testVariable\", SyntheticsGlobalVariableArgs.builder()\n            .name(\"EXAMPLE_VARIABLE\")\n            .description(\"Description of the variable\")\n            .tags(            \n                \"foo:bar\",\n                \"env:test\")\n            .value(\"variable-value\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  testVariable:\n    type: datadog:SyntheticsGlobalVariable\n    name: test_variable\n    properties:\n      name: EXAMPLE_VARIABLE\n      description: Description of the variable\n      tags:\n        - foo:bar\n        - env:test\n      value: variable-value\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\nSynthetics global variables can be imported using their string ID, e.g.\n\n```sh\n$ pulumi import datadog:index/syntheticsGlobalVariable:SyntheticsGlobalVariable fizz abcde123-fghi-456-jkl-mnopqrstuv\n```\n\n",
            "properties": {
                "description": {
                    "type": "string",
                    "description": "Description of the global variable.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Synthetics global variable name.\n"
                },
                "options": {
                    "$ref": "#/types/datadog:index/SyntheticsGlobalVariableOptions:SyntheticsGlobalVariableOptions",
                    "description": "Additional options for the variable, such as a MFA token.\n"
                },
                "parseTestId": {
                    "type": "string",
                    "description": "Id of the Synthetics test to use for a variable from test.\n"
                },
                "parseTestOptions": {
                    "$ref": "#/types/datadog:index/SyntheticsGlobalVariableParseTestOptions:SyntheticsGlobalVariableParseTestOptions",
                    "description": "ID of the Synthetics test to use a source of the global variable value.\n"
                },
                "restrictedRoles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of role identifiers to associate with the Synthetics global variable.\n"
                },
                "secure": {
                    "type": "boolean",
                    "description": "If set to true, the value of the global variable is hidden. Defaults to `false`.\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tags to associate with your synthetics global variable.\n"
                },
                "value": {
                    "type": "string",
                    "description": "The value of the global variable.\n",
                    "secret": true
                }
            },
            "required": [
                "name",
                "value"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "Description of the global variable.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Synthetics global variable name.\n"
                },
                "options": {
                    "$ref": "#/types/datadog:index/SyntheticsGlobalVariableOptions:SyntheticsGlobalVariableOptions",
                    "description": "Additional options for the variable, such as a MFA token.\n"
                },
                "parseTestId": {
                    "type": "string",
                    "description": "Id of the Synthetics test to use for a variable from test.\n"
                },
                "parseTestOptions": {
                    "$ref": "#/types/datadog:index/SyntheticsGlobalVariableParseTestOptions:SyntheticsGlobalVariableParseTestOptions",
                    "description": "ID of the Synthetics test to use a source of the global variable value.\n"
                },
                "restrictedRoles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of role identifiers to associate with the Synthetics global variable.\n"
                },
                "secure": {
                    "type": "boolean",
                    "description": "If set to true, the value of the global variable is hidden. Defaults to `false`.\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tags to associate with your synthetics global variable.\n"
                },
                "value": {
                    "type": "string",
                    "description": "The value of the global variable.\n",
                    "secret": true
                }
            },
            "requiredInputs": [
                "name",
                "value"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SyntheticsGlobalVariable resources.\n",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "Description of the global variable.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Synthetics global variable name.\n"
                    },
                    "options": {
                        "$ref": "#/types/datadog:index/SyntheticsGlobalVariableOptions:SyntheticsGlobalVariableOptions",
                        "description": "Additional options for the variable, such as a MFA token.\n"
                    },
                    "parseTestId": {
                        "type": "string",
                        "description": "Id of the Synthetics test to use for a variable from test.\n"
                    },
                    "parseTestOptions": {
                        "$ref": "#/types/datadog:index/SyntheticsGlobalVariableParseTestOptions:SyntheticsGlobalVariableParseTestOptions",
                        "description": "ID of the Synthetics test to use a source of the global variable value.\n"
                    },
                    "restrictedRoles": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of role identifiers to associate with the Synthetics global variable.\n"
                    },
                    "secure": {
                        "type": "boolean",
                        "description": "If set to true, the value of the global variable is hidden. Defaults to `false`.\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of tags to associate with your synthetics global variable.\n"
                    },
                    "value": {
                        "type": "string",
                        "description": "The value of the global variable.\n",
                        "secret": true
                    }
                },
                "type": "object"
            }
        },
        "datadog:index/syntheticsPrivateLocation:SyntheticsPrivateLocation": {
            "description": "Provides a Datadog synthetics private location resource. This can be used to create and manage Datadog synthetics private locations.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as datadog from \"@pulumi/datadog\";\n\nconst privateLocation = new datadog.SyntheticsPrivateLocation(\"private_location\", {\n    name: \"First private location\",\n    description: \"Description of the private location\",\n    tags: [\n        \"foo:bar\",\n        \"env:test\",\n    ],\n});\n```\n```python\nimport pulumi\nimport pulumi_datadog as datadog\n\nprivate_location = datadog.SyntheticsPrivateLocation(\"private_location\",\n    name=\"First private location\",\n    description=\"Description of the private location\",\n    tags=[\n        \"foo:bar\",\n        \"env:test\",\n    ])\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Datadog = Pulumi.Datadog;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var privateLocation = new Datadog.SyntheticsPrivateLocation(\"private_location\", new()\n    {\n        Name = \"First private location\",\n        Description = \"Description of the private location\",\n        Tags = new[]\n        {\n            \"foo:bar\",\n            \"env:test\",\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-datadog/sdk/v4/go/datadog\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := datadog.NewSyntheticsPrivateLocation(ctx, \"private_location\", \u0026datadog.SyntheticsPrivateLocationArgs{\n\t\t\tName:        pulumi.String(\"First private location\"),\n\t\t\tDescription: pulumi.String(\"Description of the private location\"),\n\t\t\tTags: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"foo:bar\"),\n\t\t\t\tpulumi.String(\"env:test\"),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.datadog.SyntheticsPrivateLocation;\nimport com.pulumi.datadog.SyntheticsPrivateLocationArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var privateLocation = new SyntheticsPrivateLocation(\"privateLocation\", SyntheticsPrivateLocationArgs.builder()\n            .name(\"First private location\")\n            .description(\"Description of the private location\")\n            .tags(            \n                \"foo:bar\",\n                \"env:test\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  privateLocation:\n    type: datadog:SyntheticsPrivateLocation\n    name: private_location\n    properties:\n      name: First private location\n      description: Description of the private location\n      tags:\n        - foo:bar\n        - env:test\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\nSynthetics private locations can be imported using their string ID, e.g.\n\n```sh\n$ pulumi import datadog:index/syntheticsPrivateLocation:SyntheticsPrivateLocation bar pl:private-location-name-abcdef123456\n```\n\n",
            "properties": {
                "config": {
                    "type": "string",
                    "description": "Configuration skeleton for the private location. See installation instructions of the private location on how to use this configuration.\n",
                    "secret": true
                },
                "description": {
                    "type": "string",
                    "description": "Description of the private location.\n"
                },
                "metadata": {
                    "$ref": "#/types/datadog:index/SyntheticsPrivateLocationMetadata:SyntheticsPrivateLocationMetadata",
                    "description": "The private location metadata\n"
                },
                "name": {
                    "type": "string",
                    "description": "Synthetics private location name.\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tags to associate with your synthetics private location.\n"
                }
            },
            "required": [
                "config",
                "name"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "Description of the private location.\n"
                },
                "metadata": {
                    "$ref": "#/types/datadog:index/SyntheticsPrivateLocationMetadata:SyntheticsPrivateLocationMetadata",
                    "description": "The private location metadata\n"
                },
                "name": {
                    "type": "string",
                    "description": "Synthetics private location name.\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tags to associate with your synthetics private location.\n"
                }
            },
            "requiredInputs": [
                "name"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SyntheticsPrivateLocation resources.\n",
                "properties": {
                    "config": {
                        "type": "string",
                        "description": "Configuration skeleton for the private location. See installation instructions of the private location on how to use this configuration.\n",
                        "secret": true
                    },
                    "description": {
                        "type": "string",
                        "description": "Description of the private location.\n"
                    },
                    "metadata": {
                        "$ref": "#/types/datadog:index/SyntheticsPrivateLocationMetadata:SyntheticsPrivateLocationMetadata",
                        "description": "The private location metadata\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Synthetics private location name.\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of tags to associate with your synthetics private location.\n"
                    }
                },
                "type": "object"
            }
        },
        "datadog:index/syntheticsTest:SyntheticsTest": {
            "description": "Provides a Datadog synthetics test resource. This can be used to create and manage Datadog synthetics test.\n\n#### *Warning*\nStarting from version 3.1.0+, the direct usage of global variables in the configuration is deprecated, in favor of\nlocal variables of type `global`. As an example, if you were previously using `{{ GLOBAL_VAR }}` directly in your\nconfiguration, add a `config_variable` of type `global` with the `id` matching the `id` of the global variable `GLOBAL_VAR`, which can be found in the Synthetics UI or from the output of the `datadog.SyntheticsGlobalVariable` resource. The name can be chosen freely. \n\nIn practice, it means going from (simplified configuration):\n\n```\nurl = https://{{ GLOBAL_VAR }}\n```\n\nto\n\n```\nconfig_variable {\n  name = \"LOCAL_VAR\"\n  id = [your_global_variable_id]\n  type = \"global\"\n}\n```\n\nwhich you can now use in your request definition:\n```\nurl = https://{{ LOCAL_VAR }}\n```\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as datadog from \"@pulumi/datadog\";\n\n// Example Usage (Synthetics API test)\n// Create a new Datadog Synthetics API/HTTP test on https://www.example.org\nconst testUptime = new datadog.SyntheticsTest(\"test_uptime\", {\n    name: \"An Uptime test on example.org\",\n    type: \"api\",\n    subtype: \"http\",\n    status: \"live\",\n    message: \"Notify @pagerduty\",\n    locations: [\"aws:eu-central-1\"],\n    tags: [\n        \"foo:bar\",\n        \"foo\",\n        \"env:test\",\n    ],\n    requestDefinition: {\n        method: \"GET\",\n        url: \"https://www.example.org\",\n    },\n    requestHeaders: {\n        \"Content-Type\": \"application/json\",\n    },\n    assertions: [{\n        type: \"statusCode\",\n        operator: \"is\",\n        target: \"200\",\n    }],\n    optionsList: {\n        tickEvery: 900,\n        retry: {\n            count: 2,\n            interval: 300,\n        },\n        monitorOptions: {\n            renotifyInterval: 120,\n        },\n    },\n});\n// Example Usage (Authenticated API test)\n// Create a new Datadog Synthetics API/HTTP test on https://www.example.org\nconst testApi = new datadog.SyntheticsTest(\"test_api\", {\n    name: \"An API test on example.org\",\n    type: \"api\",\n    subtype: \"http\",\n    status: \"live\",\n    message: \"Notify @pagerduty\",\n    locations: [\"aws:eu-central-1\"],\n    tags: [\n        \"foo:bar\",\n        \"foo\",\n        \"env:test\",\n    ],\n    requestDefinition: {\n        method: \"GET\",\n        url: \"https://www.example.org\",\n    },\n    requestHeaders: {\n        \"Content-Type\": \"application/json\",\n        Authentication: \"Token: 1234566789\",\n    },\n    assertions: [{\n        type: \"statusCode\",\n        operator: \"is\",\n        target: \"200\",\n    }],\n    optionsList: {\n        tickEvery: 900,\n        retry: {\n            count: 2,\n            interval: 300,\n        },\n        monitorOptions: {\n            renotifyInterval: 120,\n        },\n    },\n});\n// Example Usage (Synthetics SSL test)\n// Create a new Datadog Synthetics API/SSL test on example.org\nconst testSsl = new datadog.SyntheticsTest(\"test_ssl\", {\n    name: \"An API test on example.org\",\n    type: \"api\",\n    subtype: \"ssl\",\n    status: \"live\",\n    message: \"Notify @pagerduty\",\n    locations: [\"aws:eu-central-1\"],\n    tags: [\n        \"foo:bar\",\n        \"foo\",\n        \"env:test\",\n    ],\n    requestDefinition: {\n        host: \"example.org\",\n        port: \"443\",\n    },\n    assertions: [{\n        type: \"certificate\",\n        operator: \"isInMoreThan\",\n        target: \"30\",\n    }],\n    optionsList: {\n        tickEvery: 900,\n        acceptSelfSigned: true,\n    },\n});\n// Example Usage (Synthetics TCP test)\n// Create a new Datadog Synthetics API/TCP test on example.org\nconst testTcp = new datadog.SyntheticsTest(\"test_tcp\", {\n    name: \"An API test on example.org\",\n    type: \"api\",\n    subtype: \"tcp\",\n    status: \"live\",\n    message: \"Notify @pagerduty\",\n    locations: [\"aws:eu-central-1\"],\n    tags: [\n        \"foo:bar\",\n        \"foo\",\n        \"env:test\",\n    ],\n    requestDefinition: {\n        host: \"example.org\",\n        port: \"443\",\n    },\n    assertions: [{\n        type: \"responseTime\",\n        operator: \"lessThan\",\n        target: \"2000\",\n    }],\n    configVariables: [{\n        type: \"global\",\n        name: \"MY_GLOBAL_VAR\",\n        id: \"76636cd1-82e2-4aeb-9cfe-51366a8198a2\",\n    }],\n    optionsList: {\n        tickEvery: 900,\n    },\n});\n// Example Usage (Synthetics DNS test)\n// Create a new Datadog Synthetics API/DNS test on example.org\nconst testDns = new datadog.SyntheticsTest(\"test_dns\", {\n    name: \"An API test on example.org\",\n    type: \"api\",\n    subtype: \"dns\",\n    status: \"live\",\n    message: \"Notify @pagerduty\",\n    locations: [\"aws:eu-central-1\"],\n    tags: [\n        \"foo:bar\",\n        \"foo\",\n        \"env:test\",\n    ],\n    requestDefinition: {\n        host: \"example.org\",\n    },\n    assertions: [{\n        type: \"recordSome\",\n        operator: \"is\",\n        property: \"A\",\n        target: \"0.0.0.0\",\n    }],\n    optionsList: {\n        tickEvery: 900,\n    },\n});\n// Example Usage (Synthetics Multistep API test)\n// Create a new Datadog Synthetics Multistep API test\nconst testMultiStep = new datadog.SyntheticsTest(\"test_multi_step\", {\n    name: \"Multistep API test\",\n    type: \"api\",\n    subtype: \"multi\",\n    status: \"live\",\n    locations: [\"aws:eu-central-1\"],\n    tags: [\n        \"foo:bar\",\n        \"foo\",\n        \"env:test\",\n    ],\n    apiSteps: [\n        {\n            name: \"An API test on example.org\",\n            subtype: \"http\",\n            assertions: [{\n                type: \"statusCode\",\n                operator: \"is\",\n                target: \"200\",\n            }],\n            requestDefinition: {\n                method: \"GET\",\n                url: \"https://www.example.org\",\n            },\n            requestHeaders: {\n                \"Content-Type\": \"application/json\",\n                Authentication: \"Token: 1234566789\",\n            },\n        },\n        {\n            name: \"An API test on example.org\",\n            subtype: \"http\",\n            assertions: [{\n                type: \"statusCode\",\n                operator: \"is\",\n                target: \"200\",\n            }],\n            requestDefinition: {\n                method: \"GET\",\n                url: \"http://example.org\",\n            },\n        },\n        {\n            name: \"A gRPC health check on example.org\",\n            subtype: \"grpc\",\n            assertions: [{\n                type: \"statusCode\",\n                operator: \"is\",\n                target: \"200\",\n            }],\n            requestDefinition: {\n                host: \"example.org\",\n                port: \"443\",\n                callType: \"healthcheck\",\n                service: \"greeter.Greeter\",\n            },\n        },\n        {\n            name: \"A gRPC behavior check on example.org\",\n            subtype: \"grpc\",\n            assertions: [{\n                type: \"statusCode\",\n                operator: \"is\",\n                target: \"200\",\n            }],\n            requestDefinition: {\n                host: \"example.org\",\n                port: \"443\",\n                callType: \"unary\",\n                service: \"greeter.Greeter\",\n                method: \"SayHello\",\n                message: \"{\\\"name\\\": \\\"John\\\"}\",\n                plainProtoFile: `syntax = \"proto3\";\n\npackage greeter;\n\n// The greeting service definition.\nservice Greeter {\n  // Sends a greeting\n  rpc SayHello (HelloRequest) returns (HelloReply) {}\n}\n\n// The request message containing the user's name.\nmessage HelloRequest {\n  string name = 1;\n}\n\n// The response message containing the greetings\nmessage HelloReply {\n  string message = 1;\n}\n`,\n            },\n        },\n    ],\n    optionsList: {\n        tickEvery: 900,\n        acceptSelfSigned: true,\n    },\n});\n// Example Usage (Synthetics Browser test)\n// Create a new Datadog Synthetics Browser test starting on https://www.example.org\nconst testBrowser = new datadog.SyntheticsTest(\"test_browser\", {\n    name: \"A Browser test on example.org\",\n    type: \"browser\",\n    status: \"paused\",\n    message: \"Notify @qa\",\n    deviceIds: [\"laptop_large\"],\n    locations: [\"aws:eu-central-1\"],\n    tags: [],\n    requestDefinition: {\n        method: \"GET\",\n        url: \"https://www.example.org\",\n    },\n    browserSteps: [\n        {\n            name: \"Check current url\",\n            type: \"assertCurrentUrl\",\n            params: {\n                check: \"contains\",\n                value: \"datadoghq\",\n            },\n        },\n        {\n            name: \"Test a downloaded file\",\n            type: \"assertFileDownload\",\n            params: {\n                file: JSON.stringify({\n                    md5: \"abcdef1234567890\",\n                    sizeCheck: {\n                        type: \"equals\",\n                        value: 1,\n                    },\n                    nameCheck: {\n                        type: \"contains\",\n                        value: \".xls\",\n                    },\n                }),\n            },\n        },\n    ],\n    browserVariables: [\n        {\n            type: \"text\",\n            name: \"MY_PATTERN_VAR\",\n            pattern: \"{{numeric(3)}}\",\n            example: \"597\",\n        },\n        {\n            type: \"email\",\n            name: \"MY_EMAIL_VAR\",\n            pattern: \"jd8-afe-ydv.{{ numeric(10) }}@synthetics.dtdg.co\",\n            example: \"jd8-afe-ydv.4546132139@synthetics.dtdg.co\",\n        },\n        {\n            type: \"global\",\n            name: \"MY_GLOBAL_VAR\",\n            id: \"76636cd1-82e2-4aeb-9cfe-51366a8198a2\",\n        },\n    ],\n    optionsList: {\n        tickEvery: 3600,\n    },\n});\n// Example Usage (GRPC API behavior check test)\n// Create a new Datadog GRPC API test calling host example.org on port 443\n// targeting service `greeter.Greeter` with the method `SayHello`\n// and the message {\"name\": \"John\"}\nconst testGrpcUnary = new datadog.SyntheticsTest(\"test_grpc_unary\", {\n    name: \"GRPC API behavior check test\",\n    type: \"api\",\n    subtype: \"grpc\",\n    status: \"live\",\n    locations: [\"aws:eu-central-1\"],\n    tags: [\n        \"foo:bar\",\n        \"foo\",\n        \"env:test\",\n    ],\n    requestDefinition: {\n        host: \"example.org\",\n        port: \"443\",\n        callType: \"unary\",\n        service: \"greeter.Greeter\",\n        method: \"SayHello\",\n        message: \"{\\\"name\\\": \\\"John\\\"}\",\n        plainProtoFile: `syntax = \"proto3\";\n\npackage greeter;\n\n// The greeting service definition.\nservice Greeter {\n  // Sends a greeting\n  rpc SayHello (HelloRequest) returns (HelloReply) {}\n}\n\n// The request message containing the user's name.\nmessage HelloRequest {\n  string name = 1;\n}\n\n// The response message containing the greetings\nmessage HelloReply {\n  string message = 1;\n}\n`,\n    },\n    requestMetadata: {\n        header: \"value\",\n    },\n    assertions: [\n        {\n            type: \"responseTime\",\n            operator: \"lessThan\",\n            target: \"2000\",\n        },\n        {\n            operator: \"is\",\n            type: \"grpcHealthcheckStatus\",\n            target: \"1\",\n        },\n        {\n            operator: \"is\",\n            type: \"grpcProto\",\n            target: \"proto target\",\n        },\n        {\n            operator: \"is\",\n            property: \"property\",\n            type: \"grpcMetadata\",\n            target: \"123\",\n        },\n    ],\n    optionsList: {\n        tickEvery: 900,\n    },\n});\n// Example Usage (GRPC API health check test)\n// Create a new Datadog GRPC API test calling host example.org on port 443\n// testing the overall health of the service\nconst testGrpcHealth = new datadog.SyntheticsTest(\"test_grpc_health\", {\n    name: \"GRPC API health check test\",\n    type: \"api\",\n    subtype: \"grpc\",\n    status: \"live\",\n    locations: [\"aws:eu-central-1\"],\n    tags: [\n        \"foo:bar\",\n        \"foo\",\n        \"env:test\",\n    ],\n    requestDefinition: {\n        host: \"example.org\",\n        port: \"443\",\n        callType: \"healthcheck\",\n        service: \"greeter.Greeter\",\n    },\n    assertions: [\n        {\n            type: \"responseTime\",\n            operator: \"lessThan\",\n            target: \"2000\",\n        },\n        {\n            operator: \"is\",\n            type: \"grpcHealthcheckStatus\",\n            target: \"1\",\n        },\n    ],\n    optionsList: {\n        tickEvery: 900,\n    },\n});\n```\n```python\nimport pulumi\nimport json\nimport pulumi_datadog as datadog\n\n# Example Usage (Synthetics API test)\n# Create a new Datadog Synthetics API/HTTP test on https://www.example.org\ntest_uptime = datadog.SyntheticsTest(\"test_uptime\",\n    name=\"An Uptime test on example.org\",\n    type=\"api\",\n    subtype=\"http\",\n    status=\"live\",\n    message=\"Notify @pagerduty\",\n    locations=[\"aws:eu-central-1\"],\n    tags=[\n        \"foo:bar\",\n        \"foo\",\n        \"env:test\",\n    ],\n    request_definition={\n        \"method\": \"GET\",\n        \"url\": \"https://www.example.org\",\n    },\n    request_headers={\n        \"Content-Type\": \"application/json\",\n    },\n    assertions=[{\n        \"type\": \"statusCode\",\n        \"operator\": \"is\",\n        \"target\": \"200\",\n    }],\n    options_list={\n        \"tick_every\": 900,\n        \"retry\": {\n            \"count\": 2,\n            \"interval\": 300,\n        },\n        \"monitor_options\": {\n            \"renotify_interval\": 120,\n        },\n    })\n# Example Usage (Authenticated API test)\n# Create a new Datadog Synthetics API/HTTP test on https://www.example.org\ntest_api = datadog.SyntheticsTest(\"test_api\",\n    name=\"An API test on example.org\",\n    type=\"api\",\n    subtype=\"http\",\n    status=\"live\",\n    message=\"Notify @pagerduty\",\n    locations=[\"aws:eu-central-1\"],\n    tags=[\n        \"foo:bar\",\n        \"foo\",\n        \"env:test\",\n    ],\n    request_definition={\n        \"method\": \"GET\",\n        \"url\": \"https://www.example.org\",\n    },\n    request_headers={\n        \"Content-Type\": \"application/json\",\n        \"Authentication\": \"Token: 1234566789\",\n    },\n    assertions=[{\n        \"type\": \"statusCode\",\n        \"operator\": \"is\",\n        \"target\": \"200\",\n    }],\n    options_list={\n        \"tick_every\": 900,\n        \"retry\": {\n            \"count\": 2,\n            \"interval\": 300,\n        },\n        \"monitor_options\": {\n            \"renotify_interval\": 120,\n        },\n    })\n# Example Usage (Synthetics SSL test)\n# Create a new Datadog Synthetics API/SSL test on example.org\ntest_ssl = datadog.SyntheticsTest(\"test_ssl\",\n    name=\"An API test on example.org\",\n    type=\"api\",\n    subtype=\"ssl\",\n    status=\"live\",\n    message=\"Notify @pagerduty\",\n    locations=[\"aws:eu-central-1\"],\n    tags=[\n        \"foo:bar\",\n        \"foo\",\n        \"env:test\",\n    ],\n    request_definition={\n        \"host\": \"example.org\",\n        \"port\": \"443\",\n    },\n    assertions=[{\n        \"type\": \"certificate\",\n        \"operator\": \"isInMoreThan\",\n        \"target\": \"30\",\n    }],\n    options_list={\n        \"tick_every\": 900,\n        \"accept_self_signed\": True,\n    })\n# Example Usage (Synthetics TCP test)\n# Create a new Datadog Synthetics API/TCP test on example.org\ntest_tcp = datadog.SyntheticsTest(\"test_tcp\",\n    name=\"An API test on example.org\",\n    type=\"api\",\n    subtype=\"tcp\",\n    status=\"live\",\n    message=\"Notify @pagerduty\",\n    locations=[\"aws:eu-central-1\"],\n    tags=[\n        \"foo:bar\",\n        \"foo\",\n        \"env:test\",\n    ],\n    request_definition={\n        \"host\": \"example.org\",\n        \"port\": \"443\",\n    },\n    assertions=[{\n        \"type\": \"responseTime\",\n        \"operator\": \"lessThan\",\n        \"target\": \"2000\",\n    }],\n    config_variables=[{\n        \"type\": \"global\",\n        \"name\": \"MY_GLOBAL_VAR\",\n        \"id\": \"76636cd1-82e2-4aeb-9cfe-51366a8198a2\",\n    }],\n    options_list={\n        \"tick_every\": 900,\n    })\n# Example Usage (Synthetics DNS test)\n# Create a new Datadog Synthetics API/DNS test on example.org\ntest_dns = datadog.SyntheticsTest(\"test_dns\",\n    name=\"An API test on example.org\",\n    type=\"api\",\n    subtype=\"dns\",\n    status=\"live\",\n    message=\"Notify @pagerduty\",\n    locations=[\"aws:eu-central-1\"],\n    tags=[\n        \"foo:bar\",\n        \"foo\",\n        \"env:test\",\n    ],\n    request_definition={\n        \"host\": \"example.org\",\n    },\n    assertions=[{\n        \"type\": \"recordSome\",\n        \"operator\": \"is\",\n        \"property\": \"A\",\n        \"target\": \"0.0.0.0\",\n    }],\n    options_list={\n        \"tick_every\": 900,\n    })\n# Example Usage (Synthetics Multistep API test)\n# Create a new Datadog Synthetics Multistep API test\ntest_multi_step = datadog.SyntheticsTest(\"test_multi_step\",\n    name=\"Multistep API test\",\n    type=\"api\",\n    subtype=\"multi\",\n    status=\"live\",\n    locations=[\"aws:eu-central-1\"],\n    tags=[\n        \"foo:bar\",\n        \"foo\",\n        \"env:test\",\n    ],\n    api_steps=[\n        {\n            \"name\": \"An API test on example.org\",\n            \"subtype\": \"http\",\n            \"assertions\": [{\n                \"type\": \"statusCode\",\n                \"operator\": \"is\",\n                \"target\": \"200\",\n            }],\n            \"request_definition\": {\n                \"method\": \"GET\",\n                \"url\": \"https://www.example.org\",\n            },\n            \"request_headers\": {\n                \"content__type\": \"application/json\",\n                \"authentication\": \"Token: 1234566789\",\n            },\n        },\n        {\n            \"name\": \"An API test on example.org\",\n            \"subtype\": \"http\",\n            \"assertions\": [{\n                \"type\": \"statusCode\",\n                \"operator\": \"is\",\n                \"target\": \"200\",\n            }],\n            \"request_definition\": {\n                \"method\": \"GET\",\n                \"url\": \"http://example.org\",\n            },\n        },\n        {\n            \"name\": \"A gRPC health check on example.org\",\n            \"subtype\": \"grpc\",\n            \"assertions\": [{\n                \"type\": \"statusCode\",\n                \"operator\": \"is\",\n                \"target\": \"200\",\n            }],\n            \"request_definition\": {\n                \"host\": \"example.org\",\n                \"port\": \"443\",\n                \"call_type\": \"healthcheck\",\n                \"service\": \"greeter.Greeter\",\n            },\n        },\n        {\n            \"name\": \"A gRPC behavior check on example.org\",\n            \"subtype\": \"grpc\",\n            \"assertions\": [{\n                \"type\": \"statusCode\",\n                \"operator\": \"is\",\n                \"target\": \"200\",\n            }],\n            \"request_definition\": {\n                \"host\": \"example.org\",\n                \"port\": \"443\",\n                \"call_type\": \"unary\",\n                \"service\": \"greeter.Greeter\",\n                \"method\": \"SayHello\",\n                \"message\": \"{\\\"name\\\": \\\"John\\\"}\",\n                \"plain_proto_file\": \"\"\"syntax = \"proto3\";\n\npackage greeter;\n\n// The greeting service definition.\nservice Greeter {\n  // Sends a greeting\n  rpc SayHello (HelloRequest) returns (HelloReply) {}\n}\n\n// The request message containing the user's name.\nmessage HelloRequest {\n  string name = 1;\n}\n\n// The response message containing the greetings\nmessage HelloReply {\n  string message = 1;\n}\n\"\"\",\n            },\n        },\n    ],\n    options_list={\n        \"tick_every\": 900,\n        \"accept_self_signed\": True,\n    })\n# Example Usage (Synthetics Browser test)\n# Create a new Datadog Synthetics Browser test starting on https://www.example.org\ntest_browser = datadog.SyntheticsTest(\"test_browser\",\n    name=\"A Browser test on example.org\",\n    type=\"browser\",\n    status=\"paused\",\n    message=\"Notify @qa\",\n    device_ids=[\"laptop_large\"],\n    locations=[\"aws:eu-central-1\"],\n    tags=[],\n    request_definition={\n        \"method\": \"GET\",\n        \"url\": \"https://www.example.org\",\n    },\n    browser_steps=[\n        {\n            \"name\": \"Check current url\",\n            \"type\": \"assertCurrentUrl\",\n            \"params\": {\n                \"check\": \"contains\",\n                \"value\": \"datadoghq\",\n            },\n        },\n        {\n            \"name\": \"Test a downloaded file\",\n            \"type\": \"assertFileDownload\",\n            \"params\": {\n                \"file\": json.dumps({\n                    \"md5\": \"abcdef1234567890\",\n                    \"size_check\": {\n                        \"type\": \"equals\",\n                        \"value\": 1,\n                    },\n                    \"name_check\": {\n                        \"type\": \"contains\",\n                        \"value\": \".xls\",\n                    },\n                }),\n            },\n        },\n    ],\n    browser_variables=[\n        {\n            \"type\": \"text\",\n            \"name\": \"MY_PATTERN_VAR\",\n            \"pattern\": \"{{numeric(3)}}\",\n            \"example\": \"597\",\n        },\n        {\n            \"type\": \"email\",\n            \"name\": \"MY_EMAIL_VAR\",\n            \"pattern\": \"jd8-afe-ydv.{{ numeric(10) }}@synthetics.dtdg.co\",\n            \"example\": \"jd8-afe-ydv.4546132139@synthetics.dtdg.co\",\n        },\n        {\n            \"type\": \"global\",\n            \"name\": \"MY_GLOBAL_VAR\",\n            \"id\": \"76636cd1-82e2-4aeb-9cfe-51366a8198a2\",\n        },\n    ],\n    options_list={\n        \"tick_every\": 3600,\n    })\n# Example Usage (GRPC API behavior check test)\n# Create a new Datadog GRPC API test calling host example.org on port 443\n# targeting service `greeter.Greeter` with the method `SayHello`\n# and the message {\"name\": \"John\"}\ntest_grpc_unary = datadog.SyntheticsTest(\"test_grpc_unary\",\n    name=\"GRPC API behavior check test\",\n    type=\"api\",\n    subtype=\"grpc\",\n    status=\"live\",\n    locations=[\"aws:eu-central-1\"],\n    tags=[\n        \"foo:bar\",\n        \"foo\",\n        \"env:test\",\n    ],\n    request_definition={\n        \"host\": \"example.org\",\n        \"port\": \"443\",\n        \"call_type\": \"unary\",\n        \"service\": \"greeter.Greeter\",\n        \"method\": \"SayHello\",\n        \"message\": \"{\\\"name\\\": \\\"John\\\"}\",\n        \"plain_proto_file\": \"\"\"syntax = \"proto3\";\n\npackage greeter;\n\n// The greeting service definition.\nservice Greeter {\n  // Sends a greeting\n  rpc SayHello (HelloRequest) returns (HelloReply) {}\n}\n\n// The request message containing the user's name.\nmessage HelloRequest {\n  string name = 1;\n}\n\n// The response message containing the greetings\nmessage HelloReply {\n  string message = 1;\n}\n\"\"\",\n    },\n    request_metadata={\n        \"header\": \"value\",\n    },\n    assertions=[\n        {\n            \"type\": \"responseTime\",\n            \"operator\": \"lessThan\",\n            \"target\": \"2000\",\n        },\n        {\n            \"operator\": \"is\",\n            \"type\": \"grpcHealthcheckStatus\",\n            \"target\": \"1\",\n        },\n        {\n            \"operator\": \"is\",\n            \"type\": \"grpcProto\",\n            \"target\": \"proto target\",\n        },\n        {\n            \"operator\": \"is\",\n            \"property\": \"property\",\n            \"type\": \"grpcMetadata\",\n            \"target\": \"123\",\n        },\n    ],\n    options_list={\n        \"tick_every\": 900,\n    })\n# Example Usage (GRPC API health check test)\n# Create a new Datadog GRPC API test calling host example.org on port 443\n# testing the overall health of the service\ntest_grpc_health = datadog.SyntheticsTest(\"test_grpc_health\",\n    name=\"GRPC API health check test\",\n    type=\"api\",\n    subtype=\"grpc\",\n    status=\"live\",\n    locations=[\"aws:eu-central-1\"],\n    tags=[\n        \"foo:bar\",\n        \"foo\",\n        \"env:test\",\n    ],\n    request_definition={\n        \"host\": \"example.org\",\n        \"port\": \"443\",\n        \"call_type\": \"healthcheck\",\n        \"service\": \"greeter.Greeter\",\n    },\n    assertions=[\n        {\n            \"type\": \"responseTime\",\n            \"operator\": \"lessThan\",\n            \"target\": \"2000\",\n        },\n        {\n            \"operator\": \"is\",\n            \"type\": \"grpcHealthcheckStatus\",\n            \"target\": \"1\",\n        },\n    ],\n    options_list={\n        \"tick_every\": 900,\n    })\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text.Json;\nusing Pulumi;\nusing Datadog = Pulumi.Datadog;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    // Example Usage (Synthetics API test)\n    // Create a new Datadog Synthetics API/HTTP test on https://www.example.org\n    var testUptime = new Datadog.SyntheticsTest(\"test_uptime\", new()\n    {\n        Name = \"An Uptime test on example.org\",\n        Type = \"api\",\n        Subtype = \"http\",\n        Status = \"live\",\n        Message = \"Notify @pagerduty\",\n        Locations = new[]\n        {\n            \"aws:eu-central-1\",\n        },\n        Tags = new[]\n        {\n            \"foo:bar\",\n            \"foo\",\n            \"env:test\",\n        },\n        RequestDefinition = new Datadog.Inputs.SyntheticsTestRequestDefinitionArgs\n        {\n            Method = \"GET\",\n            Url = \"https://www.example.org\",\n        },\n        RequestHeaders = \n        {\n            { \"Content-Type\", \"application/json\" },\n        },\n        Assertions = new[]\n        {\n            new Datadog.Inputs.SyntheticsTestAssertionArgs\n            {\n                Type = \"statusCode\",\n                Operator = \"is\",\n                Target = \"200\",\n            },\n        },\n        OptionsList = new Datadog.Inputs.SyntheticsTestOptionsListArgs\n        {\n            TickEvery = 900,\n            Retry = new Datadog.Inputs.SyntheticsTestOptionsListRetryArgs\n            {\n                Count = 2,\n                Interval = 300,\n            },\n            MonitorOptions = new Datadog.Inputs.SyntheticsTestOptionsListMonitorOptionsArgs\n            {\n                RenotifyInterval = 120,\n            },\n        },\n    });\n\n    // Example Usage (Authenticated API test)\n    // Create a new Datadog Synthetics API/HTTP test on https://www.example.org\n    var testApi = new Datadog.SyntheticsTest(\"test_api\", new()\n    {\n        Name = \"An API test on example.org\",\n        Type = \"api\",\n        Subtype = \"http\",\n        Status = \"live\",\n        Message = \"Notify @pagerduty\",\n        Locations = new[]\n        {\n            \"aws:eu-central-1\",\n        },\n        Tags = new[]\n        {\n            \"foo:bar\",\n            \"foo\",\n            \"env:test\",\n        },\n        RequestDefinition = new Datadog.Inputs.SyntheticsTestRequestDefinitionArgs\n        {\n            Method = \"GET\",\n            Url = \"https://www.example.org\",\n        },\n        RequestHeaders = \n        {\n            { \"Content-Type\", \"application/json\" },\n            { \"Authentication\", \"Token: 1234566789\" },\n        },\n        Assertions = new[]\n        {\n            new Datadog.Inputs.SyntheticsTestAssertionArgs\n            {\n                Type = \"statusCode\",\n                Operator = \"is\",\n                Target = \"200\",\n            },\n        },\n        OptionsList = new Datadog.Inputs.SyntheticsTestOptionsListArgs\n        {\n            TickEvery = 900,\n            Retry = new Datadog.Inputs.SyntheticsTestOptionsListRetryArgs\n            {\n                Count = 2,\n                Interval = 300,\n            },\n            MonitorOptions = new Datadog.Inputs.SyntheticsTestOptionsListMonitorOptionsArgs\n            {\n                RenotifyInterval = 120,\n            },\n        },\n    });\n\n    // Example Usage (Synthetics SSL test)\n    // Create a new Datadog Synthetics API/SSL test on example.org\n    var testSsl = new Datadog.SyntheticsTest(\"test_ssl\", new()\n    {\n        Name = \"An API test on example.org\",\n        Type = \"api\",\n        Subtype = \"ssl\",\n        Status = \"live\",\n        Message = \"Notify @pagerduty\",\n        Locations = new[]\n        {\n            \"aws:eu-central-1\",\n        },\n        Tags = new[]\n        {\n            \"foo:bar\",\n            \"foo\",\n            \"env:test\",\n        },\n        RequestDefinition = new Datadog.Inputs.SyntheticsTestRequestDefinitionArgs\n        {\n            Host = \"example.org\",\n            Port = \"443\",\n        },\n        Assertions = new[]\n        {\n            new Datadog.Inputs.SyntheticsTestAssertionArgs\n            {\n                Type = \"certificate\",\n                Operator = \"isInMoreThan\",\n                Target = \"30\",\n            },\n        },\n        OptionsList = new Datadog.Inputs.SyntheticsTestOptionsListArgs\n        {\n            TickEvery = 900,\n            AcceptSelfSigned = true,\n        },\n    });\n\n    // Example Usage (Synthetics TCP test)\n    // Create a new Datadog Synthetics API/TCP test on example.org\n    var testTcp = new Datadog.SyntheticsTest(\"test_tcp\", new()\n    {\n        Name = \"An API test on example.org\",\n        Type = \"api\",\n        Subtype = \"tcp\",\n        Status = \"live\",\n        Message = \"Notify @pagerduty\",\n        Locations = new[]\n        {\n            \"aws:eu-central-1\",\n        },\n        Tags = new[]\n        {\n            \"foo:bar\",\n            \"foo\",\n            \"env:test\",\n        },\n        RequestDefinition = new Datadog.Inputs.SyntheticsTestRequestDefinitionArgs\n        {\n            Host = \"example.org\",\n            Port = \"443\",\n        },\n        Assertions = new[]\n        {\n            new Datadog.Inputs.SyntheticsTestAssertionArgs\n            {\n                Type = \"responseTime\",\n                Operator = \"lessThan\",\n                Target = \"2000\",\n            },\n        },\n        ConfigVariables = new[]\n        {\n            new Datadog.Inputs.SyntheticsTestConfigVariableArgs\n            {\n                Type = \"global\",\n                Name = \"MY_GLOBAL_VAR\",\n                Id = \"76636cd1-82e2-4aeb-9cfe-51366a8198a2\",\n            },\n        },\n        OptionsList = new Datadog.Inputs.SyntheticsTestOptionsListArgs\n        {\n            TickEvery = 900,\n        },\n    });\n\n    // Example Usage (Synthetics DNS test)\n    // Create a new Datadog Synthetics API/DNS test on example.org\n    var testDns = new Datadog.SyntheticsTest(\"test_dns\", new()\n    {\n        Name = \"An API test on example.org\",\n        Type = \"api\",\n        Subtype = \"dns\",\n        Status = \"live\",\n        Message = \"Notify @pagerduty\",\n        Locations = new[]\n        {\n            \"aws:eu-central-1\",\n        },\n        Tags = new[]\n        {\n            \"foo:bar\",\n            \"foo\",\n            \"env:test\",\n        },\n        RequestDefinition = new Datadog.Inputs.SyntheticsTestRequestDefinitionArgs\n        {\n            Host = \"example.org\",\n        },\n        Assertions = new[]\n        {\n            new Datadog.Inputs.SyntheticsTestAssertionArgs\n            {\n                Type = \"recordSome\",\n                Operator = \"is\",\n                Property = \"A\",\n                Target = \"0.0.0.0\",\n            },\n        },\n        OptionsList = new Datadog.Inputs.SyntheticsTestOptionsListArgs\n        {\n            TickEvery = 900,\n        },\n    });\n\n    // Example Usage (Synthetics Multistep API test)\n    // Create a new Datadog Synthetics Multistep API test\n    var testMultiStep = new Datadog.SyntheticsTest(\"test_multi_step\", new()\n    {\n        Name = \"Multistep API test\",\n        Type = \"api\",\n        Subtype = \"multi\",\n        Status = \"live\",\n        Locations = new[]\n        {\n            \"aws:eu-central-1\",\n        },\n        Tags = new[]\n        {\n            \"foo:bar\",\n            \"foo\",\n            \"env:test\",\n        },\n        ApiSteps = new[]\n        {\n            new Datadog.Inputs.SyntheticsTestApiStepArgs\n            {\n                Name = \"An API test on example.org\",\n                Subtype = \"http\",\n                Assertions = new[]\n                {\n                    new Datadog.Inputs.SyntheticsTestApiStepAssertionArgs\n                    {\n                        Type = \"statusCode\",\n                        Operator = \"is\",\n                        Target = \"200\",\n                    },\n                },\n                RequestDefinition = new Datadog.Inputs.SyntheticsTestApiStepRequestDefinitionArgs\n                {\n                    Method = \"GET\",\n                    Url = \"https://www.example.org\",\n                },\n                RequestHeaders = \n                {\n                    { \"Content-Type\", \"application/json\" },\n                    { \"Authentication\", \"Token: 1234566789\" },\n                },\n            },\n            new Datadog.Inputs.SyntheticsTestApiStepArgs\n            {\n                Name = \"An API test on example.org\",\n                Subtype = \"http\",\n                Assertions = new[]\n                {\n                    new Datadog.Inputs.SyntheticsTestApiStepAssertionArgs\n                    {\n                        Type = \"statusCode\",\n                        Operator = \"is\",\n                        Target = \"200\",\n                    },\n                },\n                RequestDefinition = new Datadog.Inputs.SyntheticsTestApiStepRequestDefinitionArgs\n                {\n                    Method = \"GET\",\n                    Url = \"http://example.org\",\n                },\n            },\n            new Datadog.Inputs.SyntheticsTestApiStepArgs\n            {\n                Name = \"A gRPC health check on example.org\",\n                Subtype = \"grpc\",\n                Assertions = new[]\n                {\n                    new Datadog.Inputs.SyntheticsTestApiStepAssertionArgs\n                    {\n                        Type = \"statusCode\",\n                        Operator = \"is\",\n                        Target = \"200\",\n                    },\n                },\n                RequestDefinition = new Datadog.Inputs.SyntheticsTestApiStepRequestDefinitionArgs\n                {\n                    Host = \"example.org\",\n                    Port = \"443\",\n                    CallType = \"healthcheck\",\n                    Service = \"greeter.Greeter\",\n                },\n            },\n            new Datadog.Inputs.SyntheticsTestApiStepArgs\n            {\n                Name = \"A gRPC behavior check on example.org\",\n                Subtype = \"grpc\",\n                Assertions = new[]\n                {\n                    new Datadog.Inputs.SyntheticsTestApiStepAssertionArgs\n                    {\n                        Type = \"statusCode\",\n                        Operator = \"is\",\n                        Target = \"200\",\n                    },\n                },\n                RequestDefinition = new Datadog.Inputs.SyntheticsTestApiStepRequestDefinitionArgs\n                {\n                    Host = \"example.org\",\n                    Port = \"443\",\n                    CallType = \"unary\",\n                    Service = \"greeter.Greeter\",\n                    Method = \"SayHello\",\n                    Message = \"{\\\"name\\\": \\\"John\\\"}\",\n                    PlainProtoFile = @\"syntax = \"\"proto3\"\";\n\npackage greeter;\n\n// The greeting service definition.\nservice Greeter {\n  // Sends a greeting\n  rpc SayHello (HelloRequest) returns (HelloReply) {}\n}\n\n// The request message containing the user's name.\nmessage HelloRequest {\n  string name = 1;\n}\n\n// The response message containing the greetings\nmessage HelloReply {\n  string message = 1;\n}\n\",\n                },\n            },\n        },\n        OptionsList = new Datadog.Inputs.SyntheticsTestOptionsListArgs\n        {\n            TickEvery = 900,\n            AcceptSelfSigned = true,\n        },\n    });\n\n    // Example Usage (Synthetics Browser test)\n    // Create a new Datadog Synthetics Browser test starting on https://www.example.org\n    var testBrowser = new Datadog.SyntheticsTest(\"test_browser\", new()\n    {\n        Name = \"A Browser test on example.org\",\n        Type = \"browser\",\n        Status = \"paused\",\n        Message = \"Notify @qa\",\n        DeviceIds = new[]\n        {\n            \"laptop_large\",\n        },\n        Locations = new[]\n        {\n            \"aws:eu-central-1\",\n        },\n        Tags = new[] {},\n        RequestDefinition = new Datadog.Inputs.SyntheticsTestRequestDefinitionArgs\n        {\n            Method = \"GET\",\n            Url = \"https://www.example.org\",\n        },\n        BrowserSteps = new[]\n        {\n            new Datadog.Inputs.SyntheticsTestBrowserStepArgs\n            {\n                Name = \"Check current url\",\n                Type = \"assertCurrentUrl\",\n                Params = new Datadog.Inputs.SyntheticsTestBrowserStepParamsArgs\n                {\n                    Check = \"contains\",\n                    Value = \"datadoghq\",\n                },\n            },\n            new Datadog.Inputs.SyntheticsTestBrowserStepArgs\n            {\n                Name = \"Test a downloaded file\",\n                Type = \"assertFileDownload\",\n                Params = new Datadog.Inputs.SyntheticsTestBrowserStepParamsArgs\n                {\n                    File = JsonSerializer.Serialize(new Dictionary\u003cstring, object?\u003e\n                    {\n                        [\"md5\"] = \"abcdef1234567890\",\n                        [\"sizeCheck\"] = new Dictionary\u003cstring, object?\u003e\n                        {\n                            [\"type\"] = \"equals\",\n                            [\"value\"] = 1,\n                        },\n                        [\"nameCheck\"] = new Dictionary\u003cstring, object?\u003e\n                        {\n                            [\"type\"] = \"contains\",\n                            [\"value\"] = \".xls\",\n                        },\n                    }),\n                },\n            },\n        },\n        BrowserVariables = new[]\n        {\n            new Datadog.Inputs.SyntheticsTestBrowserVariableArgs\n            {\n                Type = \"text\",\n                Name = \"MY_PATTERN_VAR\",\n                Pattern = \"{{numeric(3)}}\",\n                Example = \"597\",\n            },\n            new Datadog.Inputs.SyntheticsTestBrowserVariableArgs\n            {\n                Type = \"email\",\n                Name = \"MY_EMAIL_VAR\",\n                Pattern = \"jd8-afe-ydv.{{ numeric(10) }}@synthetics.dtdg.co\",\n                Example = \"jd8-afe-ydv.4546132139@synthetics.dtdg.co\",\n            },\n            new Datadog.Inputs.SyntheticsTestBrowserVariableArgs\n            {\n                Type = \"global\",\n                Name = \"MY_GLOBAL_VAR\",\n                Id = \"76636cd1-82e2-4aeb-9cfe-51366a8198a2\",\n            },\n        },\n        OptionsList = new Datadog.Inputs.SyntheticsTestOptionsListArgs\n        {\n            TickEvery = 3600,\n        },\n    });\n\n    // Example Usage (GRPC API behavior check test)\n    // Create a new Datadog GRPC API test calling host example.org on port 443\n    // targeting service `greeter.Greeter` with the method `SayHello`\n    // and the message {\"name\": \"John\"}\n    var testGrpcUnary = new Datadog.SyntheticsTest(\"test_grpc_unary\", new()\n    {\n        Name = \"GRPC API behavior check test\",\n        Type = \"api\",\n        Subtype = \"grpc\",\n        Status = \"live\",\n        Locations = new[]\n        {\n            \"aws:eu-central-1\",\n        },\n        Tags = new[]\n        {\n            \"foo:bar\",\n            \"foo\",\n            \"env:test\",\n        },\n        RequestDefinition = new Datadog.Inputs.SyntheticsTestRequestDefinitionArgs\n        {\n            Host = \"example.org\",\n            Port = \"443\",\n            CallType = \"unary\",\n            Service = \"greeter.Greeter\",\n            Method = \"SayHello\",\n            Message = \"{\\\"name\\\": \\\"John\\\"}\",\n            PlainProtoFile = @\"syntax = \"\"proto3\"\";\n\npackage greeter;\n\n// The greeting service definition.\nservice Greeter {\n  // Sends a greeting\n  rpc SayHello (HelloRequest) returns (HelloReply) {}\n}\n\n// The request message containing the user's name.\nmessage HelloRequest {\n  string name = 1;\n}\n\n// The response message containing the greetings\nmessage HelloReply {\n  string message = 1;\n}\n\",\n        },\n        RequestMetadata = \n        {\n            { \"header\", \"value\" },\n        },\n        Assertions = new[]\n        {\n            new Datadog.Inputs.SyntheticsTestAssertionArgs\n            {\n                Type = \"responseTime\",\n                Operator = \"lessThan\",\n                Target = \"2000\",\n            },\n            new Datadog.Inputs.SyntheticsTestAssertionArgs\n            {\n                Operator = \"is\",\n                Type = \"grpcHealthcheckStatus\",\n                Target = \"1\",\n            },\n            new Datadog.Inputs.SyntheticsTestAssertionArgs\n            {\n                Operator = \"is\",\n                Type = \"grpcProto\",\n                Target = \"proto target\",\n            },\n            new Datadog.Inputs.SyntheticsTestAssertionArgs\n            {\n                Operator = \"is\",\n                Property = \"property\",\n                Type = \"grpcMetadata\",\n                Target = \"123\",\n            },\n        },\n        OptionsList = new Datadog.Inputs.SyntheticsTestOptionsListArgs\n        {\n            TickEvery = 900,\n        },\n    });\n\n    // Example Usage (GRPC API health check test)\n    // Create a new Datadog GRPC API test calling host example.org on port 443\n    // testing the overall health of the service\n    var testGrpcHealth = new Datadog.SyntheticsTest(\"test_grpc_health\", new()\n    {\n        Name = \"GRPC API health check test\",\n        Type = \"api\",\n        Subtype = \"grpc\",\n        Status = \"live\",\n        Locations = new[]\n        {\n            \"aws:eu-central-1\",\n        },\n        Tags = new[]\n        {\n            \"foo:bar\",\n            \"foo\",\n            \"env:test\",\n        },\n        RequestDefinition = new Datadog.Inputs.SyntheticsTestRequestDefinitionArgs\n        {\n            Host = \"example.org\",\n            Port = \"443\",\n            CallType = \"healthcheck\",\n            Service = \"greeter.Greeter\",\n        },\n        Assertions = new[]\n        {\n            new Datadog.Inputs.SyntheticsTestAssertionArgs\n            {\n                Type = \"responseTime\",\n                Operator = \"lessThan\",\n                Target = \"2000\",\n            },\n            new Datadog.Inputs.SyntheticsTestAssertionArgs\n            {\n                Operator = \"is\",\n                Type = \"grpcHealthcheckStatus\",\n                Target = \"1\",\n            },\n        },\n        OptionsList = new Datadog.Inputs.SyntheticsTestOptionsListArgs\n        {\n            TickEvery = 900,\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"encoding/json\"\n\n\t\"github.com/pulumi/pulumi-datadog/sdk/v4/go/datadog\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t// Example Usage (Synthetics API test)\n\t\t// Create a new Datadog Synthetics API/HTTP test on https://www.example.org\n\t\t_, err := datadog.NewSyntheticsTest(ctx, \"test_uptime\", \u0026datadog.SyntheticsTestArgs{\n\t\t\tName:    pulumi.String(\"An Uptime test on example.org\"),\n\t\t\tType:    pulumi.String(\"api\"),\n\t\t\tSubtype: pulumi.String(\"http\"),\n\t\t\tStatus:  pulumi.String(\"live\"),\n\t\t\tMessage: pulumi.String(\"Notify @pagerduty\"),\n\t\t\tLocations: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"aws:eu-central-1\"),\n\t\t\t},\n\t\t\tTags: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"foo:bar\"),\n\t\t\t\tpulumi.String(\"foo\"),\n\t\t\t\tpulumi.String(\"env:test\"),\n\t\t\t},\n\t\t\tRequestDefinition: \u0026datadog.SyntheticsTestRequestDefinitionArgs{\n\t\t\t\tMethod: pulumi.String(\"GET\"),\n\t\t\t\tUrl:    pulumi.String(\"https://www.example.org\"),\n\t\t\t},\n\t\t\tRequestHeaders: pulumi.StringMap{\n\t\t\t\t\"Content-Type\": pulumi.String(\"application/json\"),\n\t\t\t},\n\t\t\tAssertions: datadog.SyntheticsTestAssertionArray{\n\t\t\t\t\u0026datadog.SyntheticsTestAssertionArgs{\n\t\t\t\t\tType:     pulumi.String(\"statusCode\"),\n\t\t\t\t\tOperator: pulumi.String(\"is\"),\n\t\t\t\t\tTarget:   pulumi.String(\"200\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tOptionsList: \u0026datadog.SyntheticsTestOptionsListArgs{\n\t\t\t\tTickEvery: pulumi.Int(900),\n\t\t\t\tRetry: \u0026datadog.SyntheticsTestOptionsListRetryArgs{\n\t\t\t\t\tCount:    pulumi.Int(2),\n\t\t\t\t\tInterval: pulumi.Int(300),\n\t\t\t\t},\n\t\t\t\tMonitorOptions: \u0026datadog.SyntheticsTestOptionsListMonitorOptionsArgs{\n\t\t\t\t\tRenotifyInterval: pulumi.Int(120),\n\t\t\t\t},\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t// Example Usage (Authenticated API test)\n\t\t// Create a new Datadog Synthetics API/HTTP test on https://www.example.org\n\t\t_, err = datadog.NewSyntheticsTest(ctx, \"test_api\", \u0026datadog.SyntheticsTestArgs{\n\t\t\tName:    pulumi.String(\"An API test on example.org\"),\n\t\t\tType:    pulumi.String(\"api\"),\n\t\t\tSubtype: pulumi.String(\"http\"),\n\t\t\tStatus:  pulumi.String(\"live\"),\n\t\t\tMessage: pulumi.String(\"Notify @pagerduty\"),\n\t\t\tLocations: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"aws:eu-central-1\"),\n\t\t\t},\n\t\t\tTags: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"foo:bar\"),\n\t\t\t\tpulumi.String(\"foo\"),\n\t\t\t\tpulumi.String(\"env:test\"),\n\t\t\t},\n\t\t\tRequestDefinition: \u0026datadog.SyntheticsTestRequestDefinitionArgs{\n\t\t\t\tMethod: pulumi.String(\"GET\"),\n\t\t\t\tUrl:    pulumi.String(\"https://www.example.org\"),\n\t\t\t},\n\t\t\tRequestHeaders: pulumi.StringMap{\n\t\t\t\t\"Content-Type\":   pulumi.String(\"application/json\"),\n\t\t\t\t\"Authentication\": pulumi.String(\"Token: 1234566789\"),\n\t\t\t},\n\t\t\tAssertions: datadog.SyntheticsTestAssertionArray{\n\t\t\t\t\u0026datadog.SyntheticsTestAssertionArgs{\n\t\t\t\t\tType:     pulumi.String(\"statusCode\"),\n\t\t\t\t\tOperator: pulumi.String(\"is\"),\n\t\t\t\t\tTarget:   pulumi.String(\"200\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tOptionsList: \u0026datadog.SyntheticsTestOptionsListArgs{\n\t\t\t\tTickEvery: pulumi.Int(900),\n\t\t\t\tRetry: \u0026datadog.SyntheticsTestOptionsListRetryArgs{\n\t\t\t\t\tCount:    pulumi.Int(2),\n\t\t\t\t\tInterval: pulumi.Int(300),\n\t\t\t\t},\n\t\t\t\tMonitorOptions: \u0026datadog.SyntheticsTestOptionsListMonitorOptionsArgs{\n\t\t\t\t\tRenotifyInterval: pulumi.Int(120),\n\t\t\t\t},\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t// Example Usage (Synthetics SSL test)\n\t\t// Create a new Datadog Synthetics API/SSL test on example.org\n\t\t_, err = datadog.NewSyntheticsTest(ctx, \"test_ssl\", \u0026datadog.SyntheticsTestArgs{\n\t\t\tName:    pulumi.String(\"An API test on example.org\"),\n\t\t\tType:    pulumi.String(\"api\"),\n\t\t\tSubtype: pulumi.String(\"ssl\"),\n\t\t\tStatus:  pulumi.String(\"live\"),\n\t\t\tMessage: pulumi.String(\"Notify @pagerduty\"),\n\t\t\tLocations: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"aws:eu-central-1\"),\n\t\t\t},\n\t\t\tTags: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"foo:bar\"),\n\t\t\t\tpulumi.String(\"foo\"),\n\t\t\t\tpulumi.String(\"env:test\"),\n\t\t\t},\n\t\t\tRequestDefinition: \u0026datadog.SyntheticsTestRequestDefinitionArgs{\n\t\t\t\tHost: pulumi.String(\"example.org\"),\n\t\t\t\tPort: pulumi.String(\"443\"),\n\t\t\t},\n\t\t\tAssertions: datadog.SyntheticsTestAssertionArray{\n\t\t\t\t\u0026datadog.SyntheticsTestAssertionArgs{\n\t\t\t\t\tType:     pulumi.String(\"certificate\"),\n\t\t\t\t\tOperator: pulumi.String(\"isInMoreThan\"),\n\t\t\t\t\tTarget:   pulumi.String(\"30\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tOptionsList: \u0026datadog.SyntheticsTestOptionsListArgs{\n\t\t\t\tTickEvery:        pulumi.Int(900),\n\t\t\t\tAcceptSelfSigned: pulumi.Bool(true),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t// Example Usage (Synthetics TCP test)\n\t\t// Create a new Datadog Synthetics API/TCP test on example.org\n\t\t_, err = datadog.NewSyntheticsTest(ctx, \"test_tcp\", \u0026datadog.SyntheticsTestArgs{\n\t\t\tName:    pulumi.String(\"An API test on example.org\"),\n\t\t\tType:    pulumi.String(\"api\"),\n\t\t\tSubtype: pulumi.String(\"tcp\"),\n\t\t\tStatus:  pulumi.String(\"live\"),\n\t\t\tMessage: pulumi.String(\"Notify @pagerduty\"),\n\t\t\tLocations: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"aws:eu-central-1\"),\n\t\t\t},\n\t\t\tTags: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"foo:bar\"),\n\t\t\t\tpulumi.String(\"foo\"),\n\t\t\t\tpulumi.String(\"env:test\"),\n\t\t\t},\n\t\t\tRequestDefinition: \u0026datadog.SyntheticsTestRequestDefinitionArgs{\n\t\t\t\tHost: pulumi.String(\"example.org\"),\n\t\t\t\tPort: pulumi.String(\"443\"),\n\t\t\t},\n\t\t\tAssertions: datadog.SyntheticsTestAssertionArray{\n\t\t\t\t\u0026datadog.SyntheticsTestAssertionArgs{\n\t\t\t\t\tType:     pulumi.String(\"responseTime\"),\n\t\t\t\t\tOperator: pulumi.String(\"lessThan\"),\n\t\t\t\t\tTarget:   pulumi.String(\"2000\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tConfigVariables: datadog.SyntheticsTestConfigVariableArray{\n\t\t\t\t\u0026datadog.SyntheticsTestConfigVariableArgs{\n\t\t\t\t\tType: pulumi.String(\"global\"),\n\t\t\t\t\tName: pulumi.String(\"MY_GLOBAL_VAR\"),\n\t\t\t\t\tId:   pulumi.String(\"76636cd1-82e2-4aeb-9cfe-51366a8198a2\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tOptionsList: \u0026datadog.SyntheticsTestOptionsListArgs{\n\t\t\t\tTickEvery: pulumi.Int(900),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t// Example Usage (Synthetics DNS test)\n\t\t// Create a new Datadog Synthetics API/DNS test on example.org\n\t\t_, err = datadog.NewSyntheticsTest(ctx, \"test_dns\", \u0026datadog.SyntheticsTestArgs{\n\t\t\tName:    pulumi.String(\"An API test on example.org\"),\n\t\t\tType:    pulumi.String(\"api\"),\n\t\t\tSubtype: pulumi.String(\"dns\"),\n\t\t\tStatus:  pulumi.String(\"live\"),\n\t\t\tMessage: pulumi.String(\"Notify @pagerduty\"),\n\t\t\tLocations: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"aws:eu-central-1\"),\n\t\t\t},\n\t\t\tTags: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"foo:bar\"),\n\t\t\t\tpulumi.String(\"foo\"),\n\t\t\t\tpulumi.String(\"env:test\"),\n\t\t\t},\n\t\t\tRequestDefinition: \u0026datadog.SyntheticsTestRequestDefinitionArgs{\n\t\t\t\tHost: pulumi.String(\"example.org\"),\n\t\t\t},\n\t\t\tAssertions: datadog.SyntheticsTestAssertionArray{\n\t\t\t\t\u0026datadog.SyntheticsTestAssertionArgs{\n\t\t\t\t\tType:     pulumi.String(\"recordSome\"),\n\t\t\t\t\tOperator: pulumi.String(\"is\"),\n\t\t\t\t\tProperty: pulumi.String(\"A\"),\n\t\t\t\t\tTarget:   pulumi.String(\"0.0.0.0\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tOptionsList: \u0026datadog.SyntheticsTestOptionsListArgs{\n\t\t\t\tTickEvery: pulumi.Int(900),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t// Example Usage (Synthetics Multistep API test)\n\t\t// Create a new Datadog Synthetics Multistep API test\n\t\t_, err = datadog.NewSyntheticsTest(ctx, \"test_multi_step\", \u0026datadog.SyntheticsTestArgs{\n\t\t\tName:    pulumi.String(\"Multistep API test\"),\n\t\t\tType:    pulumi.String(\"api\"),\n\t\t\tSubtype: pulumi.String(\"multi\"),\n\t\t\tStatus:  pulumi.String(\"live\"),\n\t\t\tLocations: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"aws:eu-central-1\"),\n\t\t\t},\n\t\t\tTags: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"foo:bar\"),\n\t\t\t\tpulumi.String(\"foo\"),\n\t\t\t\tpulumi.String(\"env:test\"),\n\t\t\t},\n\t\t\tApiSteps: datadog.SyntheticsTestApiStepArray{\n\t\t\t\t\u0026datadog.SyntheticsTestApiStepArgs{\n\t\t\t\t\tName:    pulumi.String(\"An API test on example.org\"),\n\t\t\t\t\tSubtype: pulumi.String(\"http\"),\n\t\t\t\t\tAssertions: datadog.SyntheticsTestApiStepAssertionArray{\n\t\t\t\t\t\t\u0026datadog.SyntheticsTestApiStepAssertionArgs{\n\t\t\t\t\t\t\tType:     pulumi.String(\"statusCode\"),\n\t\t\t\t\t\t\tOperator: pulumi.String(\"is\"),\n\t\t\t\t\t\t\tTarget:   pulumi.String(\"200\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tRequestDefinition: \u0026datadog.SyntheticsTestApiStepRequestDefinitionArgs{\n\t\t\t\t\t\tMethod: pulumi.String(\"GET\"),\n\t\t\t\t\t\tUrl:    pulumi.String(\"https://www.example.org\"),\n\t\t\t\t\t},\n\t\t\t\t\tRequestHeaders: pulumi.StringMap{\n\t\t\t\t\t\t\"Content-Type\":   pulumi.String(\"application/json\"),\n\t\t\t\t\t\t\"Authentication\": pulumi.String(\"Token: 1234566789\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t\u0026datadog.SyntheticsTestApiStepArgs{\n\t\t\t\t\tName:    pulumi.String(\"An API test on example.org\"),\n\t\t\t\t\tSubtype: pulumi.String(\"http\"),\n\t\t\t\t\tAssertions: datadog.SyntheticsTestApiStepAssertionArray{\n\t\t\t\t\t\t\u0026datadog.SyntheticsTestApiStepAssertionArgs{\n\t\t\t\t\t\t\tType:     pulumi.String(\"statusCode\"),\n\t\t\t\t\t\t\tOperator: pulumi.String(\"is\"),\n\t\t\t\t\t\t\tTarget:   pulumi.String(\"200\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tRequestDefinition: \u0026datadog.SyntheticsTestApiStepRequestDefinitionArgs{\n\t\t\t\t\t\tMethod: pulumi.String(\"GET\"),\n\t\t\t\t\t\tUrl:    pulumi.String(\"http://example.org\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t\u0026datadog.SyntheticsTestApiStepArgs{\n\t\t\t\t\tName:    pulumi.String(\"A gRPC health check on example.org\"),\n\t\t\t\t\tSubtype: pulumi.String(\"grpc\"),\n\t\t\t\t\tAssertions: datadog.SyntheticsTestApiStepAssertionArray{\n\t\t\t\t\t\t\u0026datadog.SyntheticsTestApiStepAssertionArgs{\n\t\t\t\t\t\t\tType:     pulumi.String(\"statusCode\"),\n\t\t\t\t\t\t\tOperator: pulumi.String(\"is\"),\n\t\t\t\t\t\t\tTarget:   pulumi.String(\"200\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tRequestDefinition: \u0026datadog.SyntheticsTestApiStepRequestDefinitionArgs{\n\t\t\t\t\t\tHost:     pulumi.String(\"example.org\"),\n\t\t\t\t\t\tPort:     pulumi.String(\"443\"),\n\t\t\t\t\t\tCallType: pulumi.String(\"healthcheck\"),\n\t\t\t\t\t\tService:  pulumi.String(\"greeter.Greeter\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t\u0026datadog.SyntheticsTestApiStepArgs{\n\t\t\t\t\tName:    pulumi.String(\"A gRPC behavior check on example.org\"),\n\t\t\t\t\tSubtype: pulumi.String(\"grpc\"),\n\t\t\t\t\tAssertions: datadog.SyntheticsTestApiStepAssertionArray{\n\t\t\t\t\t\t\u0026datadog.SyntheticsTestApiStepAssertionArgs{\n\t\t\t\t\t\t\tType:     pulumi.String(\"statusCode\"),\n\t\t\t\t\t\t\tOperator: pulumi.String(\"is\"),\n\t\t\t\t\t\t\tTarget:   pulumi.String(\"200\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tRequestDefinition: \u0026datadog.SyntheticsTestApiStepRequestDefinitionArgs{\n\t\t\t\t\t\tHost:     pulumi.String(\"example.org\"),\n\t\t\t\t\t\tPort:     pulumi.String(\"443\"),\n\t\t\t\t\t\tCallType: pulumi.String(\"unary\"),\n\t\t\t\t\t\tService:  pulumi.String(\"greeter.Greeter\"),\n\t\t\t\t\t\tMethod:   pulumi.String(\"SayHello\"),\n\t\t\t\t\t\tMessage:  pulumi.String(\"{\\\"name\\\": \\\"John\\\"}\"),\n\t\t\t\t\t\tPlainProtoFile: pulumi.String(`syntax = \"proto3\";\n\npackage greeter;\n\n// The greeting service definition.\nservice Greeter {\n  // Sends a greeting\n  rpc SayHello (HelloRequest) returns (HelloReply) {}\n}\n\n// The request message containing the user's name.\nmessage HelloRequest {\n  string name = 1;\n}\n\n// The response message containing the greetings\nmessage HelloReply {\n  string message = 1;\n}\n`),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\tOptionsList: \u0026datadog.SyntheticsTestOptionsListArgs{\n\t\t\t\tTickEvery:        pulumi.Int(900),\n\t\t\t\tAcceptSelfSigned: pulumi.Bool(true),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\ttmpJSON0, err := json.Marshal(map[string]interface{}{\n\t\t\t\"md5\": \"abcdef1234567890\",\n\t\t\t\"sizeCheck\": map[string]interface{}{\n\t\t\t\t\"type\":  \"equals\",\n\t\t\t\t\"value\": 1,\n\t\t\t},\n\t\t\t\"nameCheck\": map[string]interface{}{\n\t\t\t\t\"type\":  \"contains\",\n\t\t\t\t\"value\": \".xls\",\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tjson0 := string(tmpJSON0)\n\t\t// Example Usage (Synthetics Browser test)\n\t\t// Create a new Datadog Synthetics Browser test starting on https://www.example.org\n\t\t_, err = datadog.NewSyntheticsTest(ctx, \"test_browser\", \u0026datadog.SyntheticsTestArgs{\n\t\t\tName:    pulumi.String(\"A Browser test on example.org\"),\n\t\t\tType:    pulumi.String(\"browser\"),\n\t\t\tStatus:  pulumi.String(\"paused\"),\n\t\t\tMessage: pulumi.String(\"Notify @qa\"),\n\t\t\tDeviceIds: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"laptop_large\"),\n\t\t\t},\n\t\t\tLocations: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"aws:eu-central-1\"),\n\t\t\t},\n\t\t\tTags: pulumi.StringArray{},\n\t\t\tRequestDefinition: \u0026datadog.SyntheticsTestRequestDefinitionArgs{\n\t\t\t\tMethod: pulumi.String(\"GET\"),\n\t\t\t\tUrl:    pulumi.String(\"https://www.example.org\"),\n\t\t\t},\n\t\t\tBrowserSteps: datadog.SyntheticsTestBrowserStepArray{\n\t\t\t\t\u0026datadog.SyntheticsTestBrowserStepArgs{\n\t\t\t\t\tName: pulumi.String(\"Check current url\"),\n\t\t\t\t\tType: pulumi.String(\"assertCurrentUrl\"),\n\t\t\t\t\tParams: \u0026datadog.SyntheticsTestBrowserStepParamsArgs{\n\t\t\t\t\t\tCheck: pulumi.String(\"contains\"),\n\t\t\t\t\t\tValue: pulumi.String(\"datadoghq\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t\u0026datadog.SyntheticsTestBrowserStepArgs{\n\t\t\t\t\tName: pulumi.String(\"Test a downloaded file\"),\n\t\t\t\t\tType: pulumi.String(\"assertFileDownload\"),\n\t\t\t\t\tParams: \u0026datadog.SyntheticsTestBrowserStepParamsArgs{\n\t\t\t\t\t\tFile: pulumi.String(json0),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\tBrowserVariables: datadog.SyntheticsTestBrowserVariableArray{\n\t\t\t\t\u0026datadog.SyntheticsTestBrowserVariableArgs{\n\t\t\t\t\tType:    pulumi.String(\"text\"),\n\t\t\t\t\tName:    pulumi.String(\"MY_PATTERN_VAR\"),\n\t\t\t\t\tPattern: pulumi.String(\"{{numeric(3)}}\"),\n\t\t\t\t\tExample: pulumi.String(\"597\"),\n\t\t\t\t},\n\t\t\t\t\u0026datadog.SyntheticsTestBrowserVariableArgs{\n\t\t\t\t\tType:    pulumi.String(\"email\"),\n\t\t\t\t\tName:    pulumi.String(\"MY_EMAIL_VAR\"),\n\t\t\t\t\tPattern: pulumi.String(\"jd8-afe-ydv.{{ numeric(10) }}@synthetics.dtdg.co\"),\n\t\t\t\t\tExample: pulumi.String(\"jd8-afe-ydv.4546132139@synthetics.dtdg.co\"),\n\t\t\t\t},\n\t\t\t\t\u0026datadog.SyntheticsTestBrowserVariableArgs{\n\t\t\t\t\tType: pulumi.String(\"global\"),\n\t\t\t\t\tName: pulumi.String(\"MY_GLOBAL_VAR\"),\n\t\t\t\t\tId:   pulumi.String(\"76636cd1-82e2-4aeb-9cfe-51366a8198a2\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tOptionsList: \u0026datadog.SyntheticsTestOptionsListArgs{\n\t\t\t\tTickEvery: pulumi.Int(3600),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t// Example Usage (GRPC API behavior check test)\n\t\t// Create a new Datadog GRPC API test calling host example.org on port 443\n\t\t// targeting service `greeter.Greeter` with the method `SayHello`\n\t\t// and the message {\"name\": \"John\"}\n\t\t_, err = datadog.NewSyntheticsTest(ctx, \"test_grpc_unary\", \u0026datadog.SyntheticsTestArgs{\n\t\t\tName:    pulumi.String(\"GRPC API behavior check test\"),\n\t\t\tType:    pulumi.String(\"api\"),\n\t\t\tSubtype: pulumi.String(\"grpc\"),\n\t\t\tStatus:  pulumi.String(\"live\"),\n\t\t\tLocations: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"aws:eu-central-1\"),\n\t\t\t},\n\t\t\tTags: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"foo:bar\"),\n\t\t\t\tpulumi.String(\"foo\"),\n\t\t\t\tpulumi.String(\"env:test\"),\n\t\t\t},\n\t\t\tRequestDefinition: \u0026datadog.SyntheticsTestRequestDefinitionArgs{\n\t\t\t\tHost:     pulumi.String(\"example.org\"),\n\t\t\t\tPort:     pulumi.String(\"443\"),\n\t\t\t\tCallType: pulumi.String(\"unary\"),\n\t\t\t\tService:  pulumi.String(\"greeter.Greeter\"),\n\t\t\t\tMethod:   pulumi.String(\"SayHello\"),\n\t\t\t\tMessage:  pulumi.String(\"{\\\"name\\\": \\\"John\\\"}\"),\n\t\t\t\tPlainProtoFile: pulumi.String(`syntax = \"proto3\";\n\npackage greeter;\n\n// The greeting service definition.\nservice Greeter {\n  // Sends a greeting\n  rpc SayHello (HelloRequest) returns (HelloReply) {}\n}\n\n// The request message containing the user's name.\nmessage HelloRequest {\n  string name = 1;\n}\n\n// The response message containing the greetings\nmessage HelloReply {\n  string message = 1;\n}\n`),\n\t\t\t},\n\t\t\tRequestMetadata: pulumi.StringMap{\n\t\t\t\t\"header\": pulumi.String(\"value\"),\n\t\t\t},\n\t\t\tAssertions: datadog.SyntheticsTestAssertionArray{\n\t\t\t\t\u0026datadog.SyntheticsTestAssertionArgs{\n\t\t\t\t\tType:     pulumi.String(\"responseTime\"),\n\t\t\t\t\tOperator: pulumi.String(\"lessThan\"),\n\t\t\t\t\tTarget:   pulumi.String(\"2000\"),\n\t\t\t\t},\n\t\t\t\t\u0026datadog.SyntheticsTestAssertionArgs{\n\t\t\t\t\tOperator: pulumi.String(\"is\"),\n\t\t\t\t\tType:     pulumi.String(\"grpcHealthcheckStatus\"),\n\t\t\t\t\tTarget:   pulumi.String(\"1\"),\n\t\t\t\t},\n\t\t\t\t\u0026datadog.SyntheticsTestAssertionArgs{\n\t\t\t\t\tOperator: pulumi.String(\"is\"),\n\t\t\t\t\tType:     pulumi.String(\"grpcProto\"),\n\t\t\t\t\tTarget:   pulumi.String(\"proto target\"),\n\t\t\t\t},\n\t\t\t\t\u0026datadog.SyntheticsTestAssertionArgs{\n\t\t\t\t\tOperator: pulumi.String(\"is\"),\n\t\t\t\t\tProperty: pulumi.String(\"property\"),\n\t\t\t\t\tType:     pulumi.String(\"grpcMetadata\"),\n\t\t\t\t\tTarget:   pulumi.String(\"123\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tOptionsList: \u0026datadog.SyntheticsTestOptionsListArgs{\n\t\t\t\tTickEvery: pulumi.Int(900),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t// Example Usage (GRPC API health check test)\n\t\t// Create a new Datadog GRPC API test calling host example.org on port 443\n\t\t// testing the overall health of the service\n\t\t_, err = datadog.NewSyntheticsTest(ctx, \"test_grpc_health\", \u0026datadog.SyntheticsTestArgs{\n\t\t\tName:    pulumi.String(\"GRPC API health check test\"),\n\t\t\tType:    pulumi.String(\"api\"),\n\t\t\tSubtype: pulumi.String(\"grpc\"),\n\t\t\tStatus:  pulumi.String(\"live\"),\n\t\t\tLocations: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"aws:eu-central-1\"),\n\t\t\t},\n\t\t\tTags: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"foo:bar\"),\n\t\t\t\tpulumi.String(\"foo\"),\n\t\t\t\tpulumi.String(\"env:test\"),\n\t\t\t},\n\t\t\tRequestDefinition: \u0026datadog.SyntheticsTestRequestDefinitionArgs{\n\t\t\t\tHost:     pulumi.String(\"example.org\"),\n\t\t\t\tPort:     pulumi.String(\"443\"),\n\t\t\t\tCallType: pulumi.String(\"healthcheck\"),\n\t\t\t\tService:  pulumi.String(\"greeter.Greeter\"),\n\t\t\t},\n\t\t\tAssertions: datadog.SyntheticsTestAssertionArray{\n\t\t\t\t\u0026datadog.SyntheticsTestAssertionArgs{\n\t\t\t\t\tType:     pulumi.String(\"responseTime\"),\n\t\t\t\t\tOperator: pulumi.String(\"lessThan\"),\n\t\t\t\t\tTarget:   pulumi.String(\"2000\"),\n\t\t\t\t},\n\t\t\t\t\u0026datadog.SyntheticsTestAssertionArgs{\n\t\t\t\t\tOperator: pulumi.String(\"is\"),\n\t\t\t\t\tType:     pulumi.String(\"grpcHealthcheckStatus\"),\n\t\t\t\t\tTarget:   pulumi.String(\"1\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tOptionsList: \u0026datadog.SyntheticsTestOptionsListArgs{\n\t\t\t\tTickEvery: pulumi.Int(900),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.datadog.SyntheticsTest;\nimport com.pulumi.datadog.SyntheticsTestArgs;\nimport com.pulumi.datadog.inputs.SyntheticsTestRequestDefinitionArgs;\nimport com.pulumi.datadog.inputs.SyntheticsTestAssertionArgs;\nimport com.pulumi.datadog.inputs.SyntheticsTestOptionsListArgs;\nimport com.pulumi.datadog.inputs.SyntheticsTestOptionsListRetryArgs;\nimport com.pulumi.datadog.inputs.SyntheticsTestOptionsListMonitorOptionsArgs;\nimport com.pulumi.datadog.inputs.SyntheticsTestConfigVariableArgs;\nimport com.pulumi.datadog.inputs.SyntheticsTestApiStepArgs;\nimport com.pulumi.datadog.inputs.SyntheticsTestApiStepRequestDefinitionArgs;\nimport com.pulumi.datadog.inputs.SyntheticsTestBrowserStepArgs;\nimport com.pulumi.datadog.inputs.SyntheticsTestBrowserStepParamsArgs;\nimport com.pulumi.datadog.inputs.SyntheticsTestBrowserVariableArgs;\nimport static com.pulumi.codegen.internal.Serialization.*;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        // Example Usage (Synthetics API test)\n        // Create a new Datadog Synthetics API/HTTP test on https://www.example.org\n        var testUptime = new SyntheticsTest(\"testUptime\", SyntheticsTestArgs.builder()\n            .name(\"An Uptime test on example.org\")\n            .type(\"api\")\n            .subtype(\"http\")\n            .status(\"live\")\n            .message(\"Notify @pagerduty\")\n            .locations(\"aws:eu-central-1\")\n            .tags(            \n                \"foo:bar\",\n                \"foo\",\n                \"env:test\")\n            .requestDefinition(SyntheticsTestRequestDefinitionArgs.builder()\n                .method(\"GET\")\n                .url(\"https://www.example.org\")\n                .build())\n            .requestHeaders(Map.of(\"Content-Type\", \"application/json\"))\n            .assertions(SyntheticsTestAssertionArgs.builder()\n                .type(\"statusCode\")\n                .operator(\"is\")\n                .target(\"200\")\n                .build())\n            .optionsList(SyntheticsTestOptionsListArgs.builder()\n                .tickEvery(900)\n                .retry(SyntheticsTestOptionsListRetryArgs.builder()\n                    .count(2)\n                    .interval(300)\n                    .build())\n                .monitorOptions(SyntheticsTestOptionsListMonitorOptionsArgs.builder()\n                    .renotifyInterval(120)\n                    .build())\n                .build())\n            .build());\n\n        // Example Usage (Authenticated API test)\n        // Create a new Datadog Synthetics API/HTTP test on https://www.example.org\n        var testApi = new SyntheticsTest(\"testApi\", SyntheticsTestArgs.builder()\n            .name(\"An API test on example.org\")\n            .type(\"api\")\n            .subtype(\"http\")\n            .status(\"live\")\n            .message(\"Notify @pagerduty\")\n            .locations(\"aws:eu-central-1\")\n            .tags(            \n                \"foo:bar\",\n                \"foo\",\n                \"env:test\")\n            .requestDefinition(SyntheticsTestRequestDefinitionArgs.builder()\n                .method(\"GET\")\n                .url(\"https://www.example.org\")\n                .build())\n            .requestHeaders(Map.ofEntries(\n                Map.entry(\"Content-Type\", \"application/json\"),\n                Map.entry(\"Authentication\", \"Token: 1234566789\")\n            ))\n            .assertions(SyntheticsTestAssertionArgs.builder()\n                .type(\"statusCode\")\n                .operator(\"is\")\n                .target(\"200\")\n                .build())\n            .optionsList(SyntheticsTestOptionsListArgs.builder()\n                .tickEvery(900)\n                .retry(SyntheticsTestOptionsListRetryArgs.builder()\n                    .count(2)\n                    .interval(300)\n                    .build())\n                .monitorOptions(SyntheticsTestOptionsListMonitorOptionsArgs.builder()\n                    .renotifyInterval(120)\n                    .build())\n                .build())\n            .build());\n\n        // Example Usage (Synthetics SSL test)\n        // Create a new Datadog Synthetics API/SSL test on example.org\n        var testSsl = new SyntheticsTest(\"testSsl\", SyntheticsTestArgs.builder()\n            .name(\"An API test on example.org\")\n            .type(\"api\")\n            .subtype(\"ssl\")\n            .status(\"live\")\n            .message(\"Notify @pagerduty\")\n            .locations(\"aws:eu-central-1\")\n            .tags(            \n                \"foo:bar\",\n                \"foo\",\n                \"env:test\")\n            .requestDefinition(SyntheticsTestRequestDefinitionArgs.builder()\n                .host(\"example.org\")\n                .port(\"443\")\n                .build())\n            .assertions(SyntheticsTestAssertionArgs.builder()\n                .type(\"certificate\")\n                .operator(\"isInMoreThan\")\n                .target(30)\n                .build())\n            .optionsList(SyntheticsTestOptionsListArgs.builder()\n                .tickEvery(900)\n                .acceptSelfSigned(true)\n                .build())\n            .build());\n\n        // Example Usage (Synthetics TCP test)\n        // Create a new Datadog Synthetics API/TCP test on example.org\n        var testTcp = new SyntheticsTest(\"testTcp\", SyntheticsTestArgs.builder()\n            .name(\"An API test on example.org\")\n            .type(\"api\")\n            .subtype(\"tcp\")\n            .status(\"live\")\n            .message(\"Notify @pagerduty\")\n            .locations(\"aws:eu-central-1\")\n            .tags(            \n                \"foo:bar\",\n                \"foo\",\n                \"env:test\")\n            .requestDefinition(SyntheticsTestRequestDefinitionArgs.builder()\n                .host(\"example.org\")\n                .port(\"443\")\n                .build())\n            .assertions(SyntheticsTestAssertionArgs.builder()\n                .type(\"responseTime\")\n                .operator(\"lessThan\")\n                .target(2000)\n                .build())\n            .configVariables(SyntheticsTestConfigVariableArgs.builder()\n                .type(\"global\")\n                .name(\"MY_GLOBAL_VAR\")\n                .id(\"76636cd1-82e2-4aeb-9cfe-51366a8198a2\")\n                .build())\n            .optionsList(SyntheticsTestOptionsListArgs.builder()\n                .tickEvery(900)\n                .build())\n            .build());\n\n        // Example Usage (Synthetics DNS test)\n        // Create a new Datadog Synthetics API/DNS test on example.org\n        var testDns = new SyntheticsTest(\"testDns\", SyntheticsTestArgs.builder()\n            .name(\"An API test on example.org\")\n            .type(\"api\")\n            .subtype(\"dns\")\n            .status(\"live\")\n            .message(\"Notify @pagerduty\")\n            .locations(\"aws:eu-central-1\")\n            .tags(            \n                \"foo:bar\",\n                \"foo\",\n                \"env:test\")\n            .requestDefinition(SyntheticsTestRequestDefinitionArgs.builder()\n                .host(\"example.org\")\n                .build())\n            .assertions(SyntheticsTestAssertionArgs.builder()\n                .type(\"recordSome\")\n                .operator(\"is\")\n                .property(\"A\")\n                .target(\"0.0.0.0\")\n                .build())\n            .optionsList(SyntheticsTestOptionsListArgs.builder()\n                .tickEvery(900)\n                .build())\n            .build());\n\n        // Example Usage (Synthetics Multistep API test)\n        // Create a new Datadog Synthetics Multistep API test\n        var testMultiStep = new SyntheticsTest(\"testMultiStep\", SyntheticsTestArgs.builder()\n            .name(\"Multistep API test\")\n            .type(\"api\")\n            .subtype(\"multi\")\n            .status(\"live\")\n            .locations(\"aws:eu-central-1\")\n            .tags(            \n                \"foo:bar\",\n                \"foo\",\n                \"env:test\")\n            .apiSteps(            \n                SyntheticsTestApiStepArgs.builder()\n                    .name(\"An API test on example.org\")\n                    .subtype(\"http\")\n                    .assertions(SyntheticsTestApiStepAssertionArgs.builder()\n                        .type(\"statusCode\")\n                        .operator(\"is\")\n                        .target(\"200\")\n                        .build())\n                    .requestDefinition(SyntheticsTestApiStepRequestDefinitionArgs.builder()\n                        .method(\"GET\")\n                        .url(\"https://www.example.org\")\n                        .build())\n                    .requestHeaders(Map.ofEntries(\n                        Map.entry(\"Content-Type\", \"application/json\"),\n                        Map.entry(\"Authentication\", \"Token: 1234566789\")\n                    ))\n                    .build(),\n                SyntheticsTestApiStepArgs.builder()\n                    .name(\"An API test on example.org\")\n                    .subtype(\"http\")\n                    .assertions(SyntheticsTestApiStepAssertionArgs.builder()\n                        .type(\"statusCode\")\n                        .operator(\"is\")\n                        .target(\"200\")\n                        .build())\n                    .requestDefinition(SyntheticsTestApiStepRequestDefinitionArgs.builder()\n                        .method(\"GET\")\n                        .url(\"http://example.org\")\n                        .build())\n                    .build(),\n                SyntheticsTestApiStepArgs.builder()\n                    .name(\"A gRPC health check on example.org\")\n                    .subtype(\"grpc\")\n                    .assertions(SyntheticsTestApiStepAssertionArgs.builder()\n                        .type(\"statusCode\")\n                        .operator(\"is\")\n                        .target(\"200\")\n                        .build())\n                    .requestDefinition(SyntheticsTestApiStepRequestDefinitionArgs.builder()\n                        .host(\"example.org\")\n                        .port(\"443\")\n                        .callType(\"healthcheck\")\n                        .service(\"greeter.Greeter\")\n                        .build())\n                    .build(),\n                SyntheticsTestApiStepArgs.builder()\n                    .name(\"A gRPC behavior check on example.org\")\n                    .subtype(\"grpc\")\n                    .assertions(SyntheticsTestApiStepAssertionArgs.builder()\n                        .type(\"statusCode\")\n                        .operator(\"is\")\n                        .target(\"200\")\n                        .build())\n                    .requestDefinition(SyntheticsTestApiStepRequestDefinitionArgs.builder()\n                        .host(\"example.org\")\n                        .port(\"443\")\n                        .callType(\"unary\")\n                        .service(\"greeter.Greeter\")\n                        .method(\"SayHello\")\n                        .message(\"{\\\"name\\\": \\\"John\\\"}\")\n                        .plainProtoFile(\"\"\"\nsyntax = \"proto3\";\n\npackage greeter;\n\n// The greeting service definition.\nservice Greeter {\n  // Sends a greeting\n  rpc SayHello (HelloRequest) returns (HelloReply) {}\n}\n\n// The request message containing the user's name.\nmessage HelloRequest {\n  string name = 1;\n}\n\n// The response message containing the greetings\nmessage HelloReply {\n  string message = 1;\n}\n                        \"\"\")\n                        .build())\n                    .build())\n            .optionsList(SyntheticsTestOptionsListArgs.builder()\n                .tickEvery(900)\n                .acceptSelfSigned(true)\n                .build())\n            .build());\n\n        // Example Usage (Synthetics Browser test)\n        // Create a new Datadog Synthetics Browser test starting on https://www.example.org\n        var testBrowser = new SyntheticsTest(\"testBrowser\", SyntheticsTestArgs.builder()\n            .name(\"A Browser test on example.org\")\n            .type(\"browser\")\n            .status(\"paused\")\n            .message(\"Notify @qa\")\n            .deviceIds(\"laptop_large\")\n            .locations(\"aws:eu-central-1\")\n            .tags()\n            .requestDefinition(SyntheticsTestRequestDefinitionArgs.builder()\n                .method(\"GET\")\n                .url(\"https://www.example.org\")\n                .build())\n            .browserSteps(            \n                SyntheticsTestBrowserStepArgs.builder()\n                    .name(\"Check current url\")\n                    .type(\"assertCurrentUrl\")\n                    .params(SyntheticsTestBrowserStepParamsArgs.builder()\n                        .check(\"contains\")\n                        .value(\"datadoghq\")\n                        .build())\n                    .build(),\n                SyntheticsTestBrowserStepArgs.builder()\n                    .name(\"Test a downloaded file\")\n                    .type(\"assertFileDownload\")\n                    .params(SyntheticsTestBrowserStepParamsArgs.builder()\n                        .file(serializeJson(\n                            jsonObject(\n                                jsonProperty(\"md5\", \"abcdef1234567890\"),\n                                jsonProperty(\"sizeCheck\", jsonObject(\n                                    jsonProperty(\"type\", \"equals\"),\n                                    jsonProperty(\"value\", 1)\n                                )),\n                                jsonProperty(\"nameCheck\", jsonObject(\n                                    jsonProperty(\"type\", \"contains\"),\n                                    jsonProperty(\"value\", \".xls\")\n                                ))\n                            )))\n                        .build())\n                    .build())\n            .browserVariables(            \n                SyntheticsTestBrowserVariableArgs.builder()\n                    .type(\"text\")\n                    .name(\"MY_PATTERN_VAR\")\n                    .pattern(\"{{numeric(3)}}\")\n                    .example(\"597\")\n                    .build(),\n                SyntheticsTestBrowserVariableArgs.builder()\n                    .type(\"email\")\n                    .name(\"MY_EMAIL_VAR\")\n                    .pattern(\"jd8-afe-ydv.{{ numeric(10) }}@synthetics.dtdg.co\")\n                    .example(\"jd8-afe-ydv.4546132139@synthetics.dtdg.co\")\n                    .build(),\n                SyntheticsTestBrowserVariableArgs.builder()\n                    .type(\"global\")\n                    .name(\"MY_GLOBAL_VAR\")\n                    .id(\"76636cd1-82e2-4aeb-9cfe-51366a8198a2\")\n                    .build())\n            .optionsList(SyntheticsTestOptionsListArgs.builder()\n                .tickEvery(3600)\n                .build())\n            .build());\n\n        // Example Usage (GRPC API behavior check test)\n        // Create a new Datadog GRPC API test calling host example.org on port 443\n        // targeting service `greeter.Greeter` with the method `SayHello`\n        // and the message {\"name\": \"John\"}\n        var testGrpcUnary = new SyntheticsTest(\"testGrpcUnary\", SyntheticsTestArgs.builder()\n            .name(\"GRPC API behavior check test\")\n            .type(\"api\")\n            .subtype(\"grpc\")\n            .status(\"live\")\n            .locations(\"aws:eu-central-1\")\n            .tags(            \n                \"foo:bar\",\n                \"foo\",\n                \"env:test\")\n            .requestDefinition(SyntheticsTestRequestDefinitionArgs.builder()\n                .host(\"example.org\")\n                .port(\"443\")\n                .callType(\"unary\")\n                .service(\"greeter.Greeter\")\n                .method(\"SayHello\")\n                .message(\"{\\\"name\\\": \\\"John\\\"}\")\n                .plainProtoFile(\"\"\"\nsyntax = \"proto3\";\n\npackage greeter;\n\n// The greeting service definition.\nservice Greeter {\n  // Sends a greeting\n  rpc SayHello (HelloRequest) returns (HelloReply) {}\n}\n\n// The request message containing the user's name.\nmessage HelloRequest {\n  string name = 1;\n}\n\n// The response message containing the greetings\nmessage HelloReply {\n  string message = 1;\n}\n                \"\"\")\n                .build())\n            .requestMetadata(Map.of(\"header\", \"value\"))\n            .assertions(            \n                SyntheticsTestAssertionArgs.builder()\n                    .type(\"responseTime\")\n                    .operator(\"lessThan\")\n                    .target(\"2000\")\n                    .build(),\n                SyntheticsTestAssertionArgs.builder()\n                    .operator(\"is\")\n                    .type(\"grpcHealthcheckStatus\")\n                    .target(1)\n                    .build(),\n                SyntheticsTestAssertionArgs.builder()\n                    .operator(\"is\")\n                    .type(\"grpcProto\")\n                    .target(\"proto target\")\n                    .build(),\n                SyntheticsTestAssertionArgs.builder()\n                    .operator(\"is\")\n                    .property(\"property\")\n                    .type(\"grpcMetadata\")\n                    .target(\"123\")\n                    .build())\n            .optionsList(SyntheticsTestOptionsListArgs.builder()\n                .tickEvery(900)\n                .build())\n            .build());\n\n        // Example Usage (GRPC API health check test)\n        // Create a new Datadog GRPC API test calling host example.org on port 443\n        // testing the overall health of the service\n        var testGrpcHealth = new SyntheticsTest(\"testGrpcHealth\", SyntheticsTestArgs.builder()\n            .name(\"GRPC API health check test\")\n            .type(\"api\")\n            .subtype(\"grpc\")\n            .status(\"live\")\n            .locations(\"aws:eu-central-1\")\n            .tags(            \n                \"foo:bar\",\n                \"foo\",\n                \"env:test\")\n            .requestDefinition(SyntheticsTestRequestDefinitionArgs.builder()\n                .host(\"example.org\")\n                .port(\"443\")\n                .callType(\"healthcheck\")\n                .service(\"greeter.Greeter\")\n                .build())\n            .assertions(            \n                SyntheticsTestAssertionArgs.builder()\n                    .type(\"responseTime\")\n                    .operator(\"lessThan\")\n                    .target(\"2000\")\n                    .build(),\n                SyntheticsTestAssertionArgs.builder()\n                    .operator(\"is\")\n                    .type(\"grpcHealthcheckStatus\")\n                    .target(1)\n                    .build())\n            .optionsList(SyntheticsTestOptionsListArgs.builder()\n                .tickEvery(900)\n                .build())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  # Example Usage (Synthetics API test)\n  # Create a new Datadog Synthetics API/HTTP test on https://www.example.org\n  testUptime:\n    type: datadog:SyntheticsTest\n    name: test_uptime\n    properties:\n      name: An Uptime test on example.org\n      type: api\n      subtype: http\n      status: live\n      message: Notify @pagerduty\n      locations:\n        - aws:eu-central-1\n      tags:\n        - foo:bar\n        - foo\n        - env:test\n      requestDefinition:\n        method: GET\n        url: https://www.example.org\n      requestHeaders:\n        Content-Type: application/json\n      assertions:\n        - type: statusCode\n          operator: is\n          target: '200'\n      optionsList:\n        tickEvery: 900\n        retry:\n          count: 2\n          interval: 300\n        monitorOptions:\n          renotifyInterval: 120\n  # Example Usage (Authenticated API test)\n  # Create a new Datadog Synthetics API/HTTP test on https://www.example.org\n  testApi:\n    type: datadog:SyntheticsTest\n    name: test_api\n    properties:\n      name: An API test on example.org\n      type: api\n      subtype: http\n      status: live\n      message: Notify @pagerduty\n      locations:\n        - aws:eu-central-1\n      tags:\n        - foo:bar\n        - foo\n        - env:test\n      requestDefinition:\n        method: GET\n        url: https://www.example.org\n      requestHeaders:\n        Content-Type: application/json\n        Authentication: 'Token: 1234566789'\n      assertions:\n        - type: statusCode\n          operator: is\n          target: '200'\n      optionsList:\n        tickEvery: 900\n        retry:\n          count: 2\n          interval: 300\n        monitorOptions:\n          renotifyInterval: 120\n  # Example Usage (Synthetics SSL test)\n  # Create a new Datadog Synthetics API/SSL test on example.org\n  testSsl:\n    type: datadog:SyntheticsTest\n    name: test_ssl\n    properties:\n      name: An API test on example.org\n      type: api\n      subtype: ssl\n      status: live\n      message: Notify @pagerduty\n      locations:\n        - aws:eu-central-1\n      tags:\n        - foo:bar\n        - foo\n        - env:test\n      requestDefinition:\n        host: example.org\n        port: '443'\n      assertions:\n        - type: certificate\n          operator: isInMoreThan\n          target: 30\n      optionsList:\n        tickEvery: 900\n        acceptSelfSigned: true\n  # Example Usage (Synthetics TCP test)\n  # Create a new Datadog Synthetics API/TCP test on example.org\n  testTcp:\n    type: datadog:SyntheticsTest\n    name: test_tcp\n    properties:\n      name: An API test on example.org\n      type: api\n      subtype: tcp\n      status: live\n      message: Notify @pagerduty\n      locations:\n        - aws:eu-central-1\n      tags:\n        - foo:bar\n        - foo\n        - env:test\n      requestDefinition:\n        host: example.org\n        port: '443'\n      assertions:\n        - type: responseTime\n          operator: lessThan\n          target: 2000\n      configVariables:\n        - type: global\n          name: MY_GLOBAL_VAR\n          id: 76636cd1-82e2-4aeb-9cfe-51366a8198a2\n      optionsList:\n        tickEvery: 900\n  # Example Usage (Synthetics DNS test)\n  # Create a new Datadog Synthetics API/DNS test on example.org\n  testDns:\n    type: datadog:SyntheticsTest\n    name: test_dns\n    properties:\n      name: An API test on example.org\n      type: api\n      subtype: dns\n      status: live\n      message: Notify @pagerduty\n      locations:\n        - aws:eu-central-1\n      tags:\n        - foo:bar\n        - foo\n        - env:test\n      requestDefinition:\n        host: example.org\n      assertions:\n        - type: recordSome\n          operator: is\n          property: A\n          target: 0.0.0.0\n      optionsList:\n        tickEvery: 900\n  # Example Usage (Synthetics Multistep API test)\n  # Create a new Datadog Synthetics Multistep API test\n  testMultiStep:\n    type: datadog:SyntheticsTest\n    name: test_multi_step\n    properties:\n      name: Multistep API test\n      type: api\n      subtype: multi\n      status: live\n      locations:\n        - aws:eu-central-1\n      tags:\n        - foo:bar\n        - foo\n        - env:test\n      apiSteps:\n        - name: An API test on example.org\n          subtype: http\n          assertions:\n            - type: statusCode\n              operator: is\n              target: '200'\n          requestDefinition:\n            method: GET\n            url: https://www.example.org\n          requestHeaders:\n            Content-Type: application/json\n            Authentication: 'Token: 1234566789'\n        - name: An API test on example.org\n          subtype: http\n          assertions:\n            - type: statusCode\n              operator: is\n              target: '200'\n          requestDefinition:\n            method: GET\n            url: http://example.org\n        - name: A gRPC health check on example.org\n          subtype: grpc\n          assertions:\n            - type: statusCode\n              operator: is\n              target: '200'\n          requestDefinition:\n            host: example.org\n            port: '443'\n            callType: healthcheck\n            service: greeter.Greeter\n        - name: A gRPC behavior check on example.org\n          subtype: grpc\n          assertions:\n            - type: statusCode\n              operator: is\n              target: '200'\n          requestDefinition:\n            host: example.org\n            port: '443'\n            callType: unary\n            service: greeter.Greeter\n            method: SayHello\n            message: '{\"name\": \"John\"}'\n            plainProtoFile: |\n              syntax = \"proto3\";\n\n              package greeter;\n\n              // The greeting service definition.\n              service Greeter {\n                // Sends a greeting\n                rpc SayHello (HelloRequest) returns (HelloReply) {}\n              }\n\n              // The request message containing the user's name.\n              message HelloRequest {\n                string name = 1;\n              }\n\n              // The response message containing the greetings\n              message HelloReply {\n                string message = 1;\n              }\n      optionsList:\n        tickEvery: 900\n        acceptSelfSigned: true\n  # Example Usage (Synthetics Browser test)\n  # Create a new Datadog Synthetics Browser test starting on https://www.example.org\n  testBrowser:\n    type: datadog:SyntheticsTest\n    name: test_browser\n    properties:\n      name: A Browser test on example.org\n      type: browser\n      status: paused\n      message: Notify @qa\n      deviceIds:\n        - laptop_large\n      locations:\n        - aws:eu-central-1\n      tags: []\n      requestDefinition:\n        method: GET\n        url: https://www.example.org\n      browserSteps:\n        - name: Check current url\n          type: assertCurrentUrl\n          params:\n            check: contains\n            value: datadoghq\n        - name: Test a downloaded file\n          type: assertFileDownload\n          params:\n            file:\n              fn::toJSON:\n                md5: abcdef1234567890\n                sizeCheck:\n                  type: equals\n                  value: 1\n                nameCheck:\n                  type: contains\n                  value: .xls\n      browserVariables:\n        - type: text\n          name: MY_PATTERN_VAR\n          pattern: '{{numeric(3)}}'\n          example: '597'\n        - type: email\n          name: MY_EMAIL_VAR\n          pattern: jd8-afe-ydv.{{ numeric(10) }}@synthetics.dtdg.co\n          example: jd8-afe-ydv.4546132139@synthetics.dtdg.co\n        - type: global\n          name: MY_GLOBAL_VAR\n          id: 76636cd1-82e2-4aeb-9cfe-51366a8198a2\n      optionsList:\n        tickEvery: 3600\n  # Example Usage (GRPC API behavior check test)\n  # Create a new Datadog GRPC API test calling host example.org on port 443\n  # targeting service `greeter.Greeter` with the method `SayHello`\n  # and the message {\"name\": \"John\"}\n  testGrpcUnary:\n    type: datadog:SyntheticsTest\n    name: test_grpc_unary\n    properties:\n      name: GRPC API behavior check test\n      type: api\n      subtype: grpc\n      status: live\n      locations:\n        - aws:eu-central-1\n      tags:\n        - foo:bar\n        - foo\n        - env:test\n      requestDefinition:\n        host: example.org\n        port: '443'\n        callType: unary\n        service: greeter.Greeter\n        method: SayHello\n        message: '{\"name\": \"John\"}'\n        plainProtoFile: |\n          syntax = \"proto3\";\n\n          package greeter;\n\n          // The greeting service definition.\n          service Greeter {\n            // Sends a greeting\n            rpc SayHello (HelloRequest) returns (HelloReply) {}\n          }\n\n          // The request message containing the user's name.\n          message HelloRequest {\n            string name = 1;\n          }\n\n          // The response message containing the greetings\n          message HelloReply {\n            string message = 1;\n          }\n      requestMetadata:\n        header: value\n      assertions:\n        - type: responseTime\n          operator: lessThan\n          target: '2000'\n        - operator: is\n          type: grpcHealthcheckStatus\n          target: 1\n        - operator: is\n          type: grpcProto\n          target: proto target\n        - operator: is\n          property: property\n          type: grpcMetadata\n          target: '123'\n      optionsList:\n        tickEvery: 900\n  # Example Usage (GRPC API health check test)\n  # Create a new Datadog GRPC API test calling host example.org on port 443\n  # testing the overall health of the service\n  testGrpcHealth:\n    type: datadog:SyntheticsTest\n    name: test_grpc_health\n    properties:\n      name: GRPC API health check test\n      type: api\n      subtype: grpc\n      status: live\n      locations:\n        - aws:eu-central-1\n      tags:\n        - foo:bar\n        - foo\n        - env:test\n      requestDefinition:\n        host: example.org\n        port: '443'\n        callType: healthcheck\n        service: greeter.Greeter\n      assertions:\n        - type: responseTime\n          operator: lessThan\n          target: '2000'\n        - operator: is\n          type: grpcHealthcheckStatus\n          target: 1\n      optionsList:\n        tickEvery: 900\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\nSynthetics tests can be imported using their public string ID, e.g.\n\n```sh\n$ pulumi import datadog:index/syntheticsTest:SyntheticsTest fizz abc-123-xyz\n```\n\n",
            "properties": {
                "apiSteps": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/SyntheticsTestApiStep:SyntheticsTestApiStep"
                    },
                    "description": "Steps for multi-step api tests\n"
                },
                "assertions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/SyntheticsTestAssertion:SyntheticsTestAssertion"
                    },
                    "description": "Assertions used for the test. Multiple `assertion` blocks are allowed with the structure below.\n"
                },
                "browserSteps": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/SyntheticsTestBrowserStep:SyntheticsTestBrowserStep"
                    },
                    "description": "Steps for browser tests.\n"
                },
                "browserVariables": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/SyntheticsTestBrowserVariable:SyntheticsTestBrowserVariable"
                    },
                    "description": "Variables used for a browser test steps. Multiple `variable` blocks are allowed with the structure below.\n"
                },
                "configVariables": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/SyntheticsTestConfigVariable:SyntheticsTestConfigVariable"
                    },
                    "description": "Variables used for the test configuration. Multiple `config_variable` blocks are allowed with the structure below.\n"
                },
                "deviceIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Required if `type = \"browser\"`. Array with the different device IDs used to run the test. Valid values are `laptop_large`, `tablet`, `mobile_small`, `chrome.laptop_large`, `chrome.tablet`, `chrome.mobile_small`, `firefox.laptop_large`, `firefox.tablet`, `firefox.mobile_small`, `edge.laptop_large`, `edge.tablet`, `edge.mobile_small`.\n"
                },
                "forceDeleteDependencies": {
                    "type": "boolean",
                    "description": "A boolean indicating whether this synthetics test can be deleted even if it's referenced by other resources (for example, SLOs and composite monitors).\n"
                },
                "locations": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Array of locations used to run the test. Refer to the Datadog Synthetics location data source to retrieve the list of locations.\n"
                },
                "message": {
                    "type": "string",
                    "description": "A message to include with notifications for this synthetics test. Email notifications can be sent to specific users by using the same `@username` notation as events. Defaults to `\"\"`.\n"
                },
                "monitorId": {
                    "type": "integer",
                    "description": "ID of the monitor associated with the Datadog synthetics test.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of Datadog synthetics test.\n"
                },
                "optionsList": {
                    "$ref": "#/types/datadog:index/SyntheticsTestOptionsList:SyntheticsTestOptionsList"
                },
                "requestBasicauth": {
                    "$ref": "#/types/datadog:index/SyntheticsTestRequestBasicauth:SyntheticsTestRequestBasicauth",
                    "description": "The HTTP basic authentication credentials. Exactly one nested block is allowed with the structure below.\n"
                },
                "requestClientCertificate": {
                    "$ref": "#/types/datadog:index/SyntheticsTestRequestClientCertificate:SyntheticsTestRequestClientCertificate",
                    "description": "Client certificate to use when performing the test request. Exactly one nested block is allowed with the structure below.\n"
                },
                "requestDefinition": {
                    "$ref": "#/types/datadog:index/SyntheticsTestRequestDefinition:SyntheticsTestRequestDefinition",
                    "description": "Required if `type = \"api\"`. The synthetics test request.\n"
                },
                "requestFiles": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/SyntheticsTestRequestFile:SyntheticsTestRequestFile"
                    },
                    "description": "Files to be used as part of the request in the test.\n"
                },
                "requestHeaders": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Header name and value map.\n"
                },
                "requestMetadata": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Metadata to include when performing the gRPC request.\n"
                },
                "requestProxy": {
                    "$ref": "#/types/datadog:index/SyntheticsTestRequestProxy:SyntheticsTestRequestProxy",
                    "description": "The proxy to perform the test.\n"
                },
                "requestQuery": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Query arguments name and value map.\n"
                },
                "setCookie": {
                    "type": "string",
                    "description": "Cookies to be used for a browser test request, using the [Set-Cookie](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Set-Cookie) syntax.\n"
                },
                "status": {
                    "type": "string",
                    "description": "Define whether you want to start (`live`) or pause (`paused`) a Synthetic test. Valid values are `live`, `paused`.\n"
                },
                "subtype": {
                    "type": "string",
                    "description": "The subtype of the Synthetic API test. Defaults to `http`. Valid values are `http`, `ssl`, `tcp`, `dns`, `multi`, `icmp`, `udp`, `websocket`, `grpc`.\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tags to associate with your synthetics test. This can help you categorize and filter tests in the manage synthetics page of the UI. Default is an empty list (`[]`).\n"
                },
                "type": {
                    "type": "string",
                    "description": "Synthetics test type. Valid values are `api`, `browser`.\n"
                },
                "variablesFromScript": {
                    "type": "string",
                    "description": "Variables defined from JavaScript code for API HTTP tests.\n"
                }
            },
            "required": [
                "locations",
                "monitorId",
                "name",
                "status",
                "type"
            ],
            "inputProperties": {
                "apiSteps": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/SyntheticsTestApiStep:SyntheticsTestApiStep"
                    },
                    "description": "Steps for multi-step api tests\n"
                },
                "assertions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/SyntheticsTestAssertion:SyntheticsTestAssertion"
                    },
                    "description": "Assertions used for the test. Multiple `assertion` blocks are allowed with the structure below.\n"
                },
                "browserSteps": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/SyntheticsTestBrowserStep:SyntheticsTestBrowserStep"
                    },
                    "description": "Steps for browser tests.\n"
                },
                "browserVariables": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/SyntheticsTestBrowserVariable:SyntheticsTestBrowserVariable"
                    },
                    "description": "Variables used for a browser test steps. Multiple `variable` blocks are allowed with the structure below.\n"
                },
                "configVariables": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/SyntheticsTestConfigVariable:SyntheticsTestConfigVariable"
                    },
                    "description": "Variables used for the test configuration. Multiple `config_variable` blocks are allowed with the structure below.\n"
                },
                "deviceIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Required if `type = \"browser\"`. Array with the different device IDs used to run the test. Valid values are `laptop_large`, `tablet`, `mobile_small`, `chrome.laptop_large`, `chrome.tablet`, `chrome.mobile_small`, `firefox.laptop_large`, `firefox.tablet`, `firefox.mobile_small`, `edge.laptop_large`, `edge.tablet`, `edge.mobile_small`.\n"
                },
                "forceDeleteDependencies": {
                    "type": "boolean",
                    "description": "A boolean indicating whether this synthetics test can be deleted even if it's referenced by other resources (for example, SLOs and composite monitors).\n"
                },
                "locations": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Array of locations used to run the test. Refer to the Datadog Synthetics location data source to retrieve the list of locations.\n"
                },
                "message": {
                    "type": "string",
                    "description": "A message to include with notifications for this synthetics test. Email notifications can be sent to specific users by using the same `@username` notation as events. Defaults to `\"\"`.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of Datadog synthetics test.\n"
                },
                "optionsList": {
                    "$ref": "#/types/datadog:index/SyntheticsTestOptionsList:SyntheticsTestOptionsList"
                },
                "requestBasicauth": {
                    "$ref": "#/types/datadog:index/SyntheticsTestRequestBasicauth:SyntheticsTestRequestBasicauth",
                    "description": "The HTTP basic authentication credentials. Exactly one nested block is allowed with the structure below.\n"
                },
                "requestClientCertificate": {
                    "$ref": "#/types/datadog:index/SyntheticsTestRequestClientCertificate:SyntheticsTestRequestClientCertificate",
                    "description": "Client certificate to use when performing the test request. Exactly one nested block is allowed with the structure below.\n"
                },
                "requestDefinition": {
                    "$ref": "#/types/datadog:index/SyntheticsTestRequestDefinition:SyntheticsTestRequestDefinition",
                    "description": "Required if `type = \"api\"`. The synthetics test request.\n"
                },
                "requestFiles": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/SyntheticsTestRequestFile:SyntheticsTestRequestFile"
                    },
                    "description": "Files to be used as part of the request in the test.\n"
                },
                "requestHeaders": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Header name and value map.\n"
                },
                "requestMetadata": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Metadata to include when performing the gRPC request.\n"
                },
                "requestProxy": {
                    "$ref": "#/types/datadog:index/SyntheticsTestRequestProxy:SyntheticsTestRequestProxy",
                    "description": "The proxy to perform the test.\n"
                },
                "requestQuery": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Query arguments name and value map.\n"
                },
                "setCookie": {
                    "type": "string",
                    "description": "Cookies to be used for a browser test request, using the [Set-Cookie](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Set-Cookie) syntax.\n"
                },
                "status": {
                    "type": "string",
                    "description": "Define whether you want to start (`live`) or pause (`paused`) a Synthetic test. Valid values are `live`, `paused`.\n"
                },
                "subtype": {
                    "type": "string",
                    "description": "The subtype of the Synthetic API test. Defaults to `http`. Valid values are `http`, `ssl`, `tcp`, `dns`, `multi`, `icmp`, `udp`, `websocket`, `grpc`.\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tags to associate with your synthetics test. This can help you categorize and filter tests in the manage synthetics page of the UI. Default is an empty list (`[]`).\n"
                },
                "type": {
                    "type": "string",
                    "description": "Synthetics test type. Valid values are `api`, `browser`.\n"
                },
                "variablesFromScript": {
                    "type": "string",
                    "description": "Variables defined from JavaScript code for API HTTP tests.\n"
                }
            },
            "requiredInputs": [
                "locations",
                "name",
                "status",
                "type"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SyntheticsTest resources.\n",
                "properties": {
                    "apiSteps": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/datadog:index/SyntheticsTestApiStep:SyntheticsTestApiStep"
                        },
                        "description": "Steps for multi-step api tests\n"
                    },
                    "assertions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/datadog:index/SyntheticsTestAssertion:SyntheticsTestAssertion"
                        },
                        "description": "Assertions used for the test. Multiple `assertion` blocks are allowed with the structure below.\n"
                    },
                    "browserSteps": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/datadog:index/SyntheticsTestBrowserStep:SyntheticsTestBrowserStep"
                        },
                        "description": "Steps for browser tests.\n"
                    },
                    "browserVariables": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/datadog:index/SyntheticsTestBrowserVariable:SyntheticsTestBrowserVariable"
                        },
                        "description": "Variables used for a browser test steps. Multiple `variable` blocks are allowed with the structure below.\n"
                    },
                    "configVariables": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/datadog:index/SyntheticsTestConfigVariable:SyntheticsTestConfigVariable"
                        },
                        "description": "Variables used for the test configuration. Multiple `config_variable` blocks are allowed with the structure below.\n"
                    },
                    "deviceIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Required if `type = \"browser\"`. Array with the different device IDs used to run the test. Valid values are `laptop_large`, `tablet`, `mobile_small`, `chrome.laptop_large`, `chrome.tablet`, `chrome.mobile_small`, `firefox.laptop_large`, `firefox.tablet`, `firefox.mobile_small`, `edge.laptop_large`, `edge.tablet`, `edge.mobile_small`.\n"
                    },
                    "forceDeleteDependencies": {
                        "type": "boolean",
                        "description": "A boolean indicating whether this synthetics test can be deleted even if it's referenced by other resources (for example, SLOs and composite monitors).\n"
                    },
                    "locations": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Array of locations used to run the test. Refer to the Datadog Synthetics location data source to retrieve the list of locations.\n"
                    },
                    "message": {
                        "type": "string",
                        "description": "A message to include with notifications for this synthetics test. Email notifications can be sent to specific users by using the same `@username` notation as events. Defaults to `\"\"`.\n"
                    },
                    "monitorId": {
                        "type": "integer",
                        "description": "ID of the monitor associated with the Datadog synthetics test.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of Datadog synthetics test.\n"
                    },
                    "optionsList": {
                        "$ref": "#/types/datadog:index/SyntheticsTestOptionsList:SyntheticsTestOptionsList"
                    },
                    "requestBasicauth": {
                        "$ref": "#/types/datadog:index/SyntheticsTestRequestBasicauth:SyntheticsTestRequestBasicauth",
                        "description": "The HTTP basic authentication credentials. Exactly one nested block is allowed with the structure below.\n"
                    },
                    "requestClientCertificate": {
                        "$ref": "#/types/datadog:index/SyntheticsTestRequestClientCertificate:SyntheticsTestRequestClientCertificate",
                        "description": "Client certificate to use when performing the test request. Exactly one nested block is allowed with the structure below.\n"
                    },
                    "requestDefinition": {
                        "$ref": "#/types/datadog:index/SyntheticsTestRequestDefinition:SyntheticsTestRequestDefinition",
                        "description": "Required if `type = \"api\"`. The synthetics test request.\n"
                    },
                    "requestFiles": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/datadog:index/SyntheticsTestRequestFile:SyntheticsTestRequestFile"
                        },
                        "description": "Files to be used as part of the request in the test.\n"
                    },
                    "requestHeaders": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "Header name and value map.\n"
                    },
                    "requestMetadata": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "Metadata to include when performing the gRPC request.\n"
                    },
                    "requestProxy": {
                        "$ref": "#/types/datadog:index/SyntheticsTestRequestProxy:SyntheticsTestRequestProxy",
                        "description": "The proxy to perform the test.\n"
                    },
                    "requestQuery": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "Query arguments name and value map.\n"
                    },
                    "setCookie": {
                        "type": "string",
                        "description": "Cookies to be used for a browser test request, using the [Set-Cookie](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Set-Cookie) syntax.\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "Define whether you want to start (`live`) or pause (`paused`) a Synthetic test. Valid values are `live`, `paused`.\n"
                    },
                    "subtype": {
                        "type": "string",
                        "description": "The subtype of the Synthetic API test. Defaults to `http`. Valid values are `http`, `ssl`, `tcp`, `dns`, `multi`, `icmp`, `udp`, `websocket`, `grpc`.\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of tags to associate with your synthetics test. This can help you categorize and filter tests in the manage synthetics page of the UI. Default is an empty list (`[]`).\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "Synthetics test type. Valid values are `api`, `browser`.\n"
                    },
                    "variablesFromScript": {
                        "type": "string",
                        "description": "Variables defined from JavaScript code for API HTTP tests.\n"
                    }
                },
                "type": "object"
            }
        },
        "datadog:index/team:Team": {
            "description": "Provides a Datadog Team resource. This can be used to create and manage Datadog team.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as datadog from \"@pulumi/datadog\";\n\n// Create new team resource\nconst foo = new datadog.Team(\"foo\", {\n    description: \"Team description\",\n    handle: \"example-team\",\n    name: \"Example Team\",\n});\n```\n```python\nimport pulumi\nimport pulumi_datadog as datadog\n\n# Create new team resource\nfoo = datadog.Team(\"foo\",\n    description=\"Team description\",\n    handle=\"example-team\",\n    name=\"Example Team\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Datadog = Pulumi.Datadog;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    // Create new team resource\n    var foo = new Datadog.Team(\"foo\", new()\n    {\n        Description = \"Team description\",\n        Handle = \"example-team\",\n        Name = \"Example Team\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-datadog/sdk/v4/go/datadog\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t// Create new team resource\n\t\t_, err := datadog.NewTeam(ctx, \"foo\", \u0026datadog.TeamArgs{\n\t\t\tDescription: pulumi.String(\"Team description\"),\n\t\t\tHandle:      pulumi.String(\"example-team\"),\n\t\t\tName:        pulumi.String(\"Example Team\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.datadog.Team;\nimport com.pulumi.datadog.TeamArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        // Create new team resource\n        var foo = new Team(\"foo\", TeamArgs.builder()\n            .description(\"Team description\")\n            .handle(\"example-team\")\n            .name(\"Example Team\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  # Create new team resource\n  foo:\n    type: datadog:Team\n    properties:\n      description: Team description\n      handle: example-team\n      name: Example Team\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\n```sh\n$ pulumi import datadog:index/team:Team foo \"bf064c56-edb0-11ed-ae91-da7ad0900002\"\n```\n\n",
            "properties": {
                "description": {
                    "type": "string",
                    "description": "Free-form markdown description/content for the team's homepage.\n"
                },
                "handle": {
                    "type": "string",
                    "description": "The team's identifier\n"
                },
                "linkCount": {
                    "type": "integer",
                    "description": "The number of links belonging to the team.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the team.\n"
                },
                "summary": {
                    "type": "string",
                    "description": "A brief summary of the team, derived from the `description`.\n"
                },
                "userCount": {
                    "type": "integer",
                    "description": "The number of users belonging to the team.\n"
                }
            },
            "required": [
                "description",
                "handle",
                "linkCount",
                "name",
                "summary",
                "userCount"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "Free-form markdown description/content for the team's homepage.\n"
                },
                "handle": {
                    "type": "string",
                    "description": "The team's identifier\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the team.\n"
                }
            },
            "requiredInputs": [
                "description",
                "handle",
                "name"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Team resources.\n",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "Free-form markdown description/content for the team's homepage.\n"
                    },
                    "handle": {
                        "type": "string",
                        "description": "The team's identifier\n"
                    },
                    "linkCount": {
                        "type": "integer",
                        "description": "The number of links belonging to the team.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the team.\n"
                    },
                    "summary": {
                        "type": "string",
                        "description": "A brief summary of the team, derived from the `description`.\n"
                    },
                    "userCount": {
                        "type": "integer",
                        "description": "The number of users belonging to the team.\n"
                    }
                },
                "type": "object"
            }
        },
        "datadog:index/teamLink:TeamLink": {
            "description": "Provides a Datadog TeamLink resource. This can be used to create and manage Datadog team_link.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as datadog from \"@pulumi/datadog\";\n\nconst foo = new datadog.Team(\"foo\", {\n    description: \"Example team\",\n    handle: \"example-team-updated\",\n    name: \"Example Team-updated\",\n});\n// Create new team_link resource\nconst fooTeamLink = new datadog.TeamLink(\"foo\", {\n    teamId: foo.id,\n    label: \"Link label\",\n    position: 0,\n    url: \"https://example.com\",\n});\n```\n```python\nimport pulumi\nimport pulumi_datadog as datadog\n\nfoo = datadog.Team(\"foo\",\n    description=\"Example team\",\n    handle=\"example-team-updated\",\n    name=\"Example Team-updated\")\n# Create new team_link resource\nfoo_team_link = datadog.TeamLink(\"foo\",\n    team_id=foo.id,\n    label=\"Link label\",\n    position=0,\n    url=\"https://example.com\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Datadog = Pulumi.Datadog;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var foo = new Datadog.Team(\"foo\", new()\n    {\n        Description = \"Example team\",\n        Handle = \"example-team-updated\",\n        Name = \"Example Team-updated\",\n    });\n\n    // Create new team_link resource\n    var fooTeamLink = new Datadog.TeamLink(\"foo\", new()\n    {\n        TeamId = foo.Id,\n        Label = \"Link label\",\n        Position = 0,\n        Url = \"https://example.com\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-datadog/sdk/v4/go/datadog\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tfoo, err := datadog.NewTeam(ctx, \"foo\", \u0026datadog.TeamArgs{\n\t\t\tDescription: pulumi.String(\"Example team\"),\n\t\t\tHandle:      pulumi.String(\"example-team-updated\"),\n\t\t\tName:        pulumi.String(\"Example Team-updated\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t// Create new team_link resource\n\t\t_, err = datadog.NewTeamLink(ctx, \"foo\", \u0026datadog.TeamLinkArgs{\n\t\t\tTeamId:   foo.ID(),\n\t\t\tLabel:    pulumi.String(\"Link label\"),\n\t\t\tPosition: pulumi.Int(0),\n\t\t\tUrl:      pulumi.String(\"https://example.com\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.datadog.Team;\nimport com.pulumi.datadog.TeamArgs;\nimport com.pulumi.datadog.TeamLink;\nimport com.pulumi.datadog.TeamLinkArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var foo = new Team(\"foo\", TeamArgs.builder()\n            .description(\"Example team\")\n            .handle(\"example-team-updated\")\n            .name(\"Example Team-updated\")\n            .build());\n\n        // Create new team_link resource\n        var fooTeamLink = new TeamLink(\"fooTeamLink\", TeamLinkArgs.builder()\n            .teamId(foo.id())\n            .label(\"Link label\")\n            .position(0)\n            .url(\"https://example.com\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  foo:\n    type: datadog:Team\n    properties:\n      description: Example team\n      handle: example-team-updated\n      name: Example Team-updated\n  # Create new team_link resource\n  fooTeamLink:\n    type: datadog:TeamLink\n    name: foo\n    properties:\n      teamId: ${foo.id}\n      label: Link label\n      position: 0\n      url: https://example.com\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\n```sh\n$ pulumi import datadog:index/teamLink:TeamLink new_list \"${team_id}:${resource_id}\"\n```\n\n",
            "properties": {
                "label": {
                    "type": "string",
                    "description": "The link's label.\n"
                },
                "position": {
                    "type": "integer",
                    "description": "The link's position, used to sort links for the team.\n"
                },
                "teamId": {
                    "type": "string",
                    "description": "ID of the team the link is associated with.\n"
                },
                "url": {
                    "type": "string",
                    "description": "The URL for the link.\n"
                }
            },
            "required": [
                "label",
                "position",
                "teamId",
                "url"
            ],
            "inputProperties": {
                "label": {
                    "type": "string",
                    "description": "The link's label.\n"
                },
                "position": {
                    "type": "integer",
                    "description": "The link's position, used to sort links for the team.\n"
                },
                "teamId": {
                    "type": "string",
                    "description": "ID of the team the link is associated with.\n"
                },
                "url": {
                    "type": "string",
                    "description": "The URL for the link.\n"
                }
            },
            "requiredInputs": [
                "label",
                "teamId",
                "url"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering TeamLink resources.\n",
                "properties": {
                    "label": {
                        "type": "string",
                        "description": "The link's label.\n"
                    },
                    "position": {
                        "type": "integer",
                        "description": "The link's position, used to sort links for the team.\n"
                    },
                    "teamId": {
                        "type": "string",
                        "description": "ID of the team the link is associated with.\n"
                    },
                    "url": {
                        "type": "string",
                        "description": "The URL for the link.\n"
                    }
                },
                "type": "object"
            }
        },
        "datadog:index/teamMembership:TeamMembership": {
            "description": "Provides a Datadog TeamMembership resource. This can be used to create and manage Datadog team_membership.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as datadog from \"@pulumi/datadog\";\n\nconst foo = new datadog.Team(\"foo\", {\n    description: \"Example team\",\n    handle: \"example-team-updated\",\n    name: \"Example Team-updated\",\n});\nconst fooUser = new datadog.User(\"foo\", {email: \"new@example.com\"});\n// Create new team_membership resource\nconst fooTeamMembership = new datadog.TeamMembership(\"foo\", {\n    teamId: foo.id,\n    userId: fooUser.id,\n    role: \"admin\",\n});\n```\n```python\nimport pulumi\nimport pulumi_datadog as datadog\n\nfoo = datadog.Team(\"foo\",\n    description=\"Example team\",\n    handle=\"example-team-updated\",\n    name=\"Example Team-updated\")\nfoo_user = datadog.User(\"foo\", email=\"new@example.com\")\n# Create new team_membership resource\nfoo_team_membership = datadog.TeamMembership(\"foo\",\n    team_id=foo.id,\n    user_id=foo_user.id,\n    role=\"admin\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Datadog = Pulumi.Datadog;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var foo = new Datadog.Team(\"foo\", new()\n    {\n        Description = \"Example team\",\n        Handle = \"example-team-updated\",\n        Name = \"Example Team-updated\",\n    });\n\n    var fooUser = new Datadog.User(\"foo\", new()\n    {\n        Email = \"new@example.com\",\n    });\n\n    // Create new team_membership resource\n    var fooTeamMembership = new Datadog.TeamMembership(\"foo\", new()\n    {\n        TeamId = foo.Id,\n        UserId = fooUser.Id,\n        Role = \"admin\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-datadog/sdk/v4/go/datadog\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tfoo, err := datadog.NewTeam(ctx, \"foo\", \u0026datadog.TeamArgs{\n\t\t\tDescription: pulumi.String(\"Example team\"),\n\t\t\tHandle:      pulumi.String(\"example-team-updated\"),\n\t\t\tName:        pulumi.String(\"Example Team-updated\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tfooUser, err := datadog.NewUser(ctx, \"foo\", \u0026datadog.UserArgs{\n\t\t\tEmail: pulumi.String(\"new@example.com\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t// Create new team_membership resource\n\t\t_, err = datadog.NewTeamMembership(ctx, \"foo\", \u0026datadog.TeamMembershipArgs{\n\t\t\tTeamId: foo.ID(),\n\t\t\tUserId: fooUser.ID(),\n\t\t\tRole:   pulumi.String(\"admin\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.datadog.Team;\nimport com.pulumi.datadog.TeamArgs;\nimport com.pulumi.datadog.User;\nimport com.pulumi.datadog.UserArgs;\nimport com.pulumi.datadog.TeamMembership;\nimport com.pulumi.datadog.TeamMembershipArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var foo = new Team(\"foo\", TeamArgs.builder()\n            .description(\"Example team\")\n            .handle(\"example-team-updated\")\n            .name(\"Example Team-updated\")\n            .build());\n\n        var fooUser = new User(\"fooUser\", UserArgs.builder()\n            .email(\"new@example.com\")\n            .build());\n\n        // Create new team_membership resource\n        var fooTeamMembership = new TeamMembership(\"fooTeamMembership\", TeamMembershipArgs.builder()\n            .teamId(foo.id())\n            .userId(fooUser.id())\n            .role(\"admin\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  foo:\n    type: datadog:Team\n    properties:\n      description: Example team\n      handle: example-team-updated\n      name: Example Team-updated\n  fooUser:\n    type: datadog:User\n    name: foo\n    properties:\n      email: new@example.com\n  # Create new team_membership resource\n  fooTeamMembership:\n    type: datadog:TeamMembership\n    name: foo\n    properties:\n      teamId: ${foo.id}\n      userId: ${fooUser.id}\n      role: admin\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\nThis resource is imported using team_id and user_id seperated by `:`.\n\n```sh\n$ pulumi import datadog:index/teamMembership:TeamMembership foo \"${team_id}:${user_id}\"\n```\n\n",
            "properties": {
                "role": {
                    "type": "string",
                    "description": "The user's role within the team. Valid values are `admin`.\n"
                },
                "teamId": {
                    "type": "string",
                    "description": "ID of the team the team membership is associated with.\n"
                },
                "userId": {
                    "type": "string",
                    "description": "The ID of the user.\n"
                }
            },
            "required": [
                "teamId",
                "userId"
            ],
            "inputProperties": {
                "role": {
                    "type": "string",
                    "description": "The user's role within the team. Valid values are `admin`.\n"
                },
                "teamId": {
                    "type": "string",
                    "description": "ID of the team the team membership is associated with.\n"
                },
                "userId": {
                    "type": "string",
                    "description": "The ID of the user.\n"
                }
            },
            "requiredInputs": [
                "teamId",
                "userId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering TeamMembership resources.\n",
                "properties": {
                    "role": {
                        "type": "string",
                        "description": "The user's role within the team. Valid values are `admin`.\n"
                    },
                    "teamId": {
                        "type": "string",
                        "description": "ID of the team the team membership is associated with.\n"
                    },
                    "userId": {
                        "type": "string",
                        "description": "The ID of the user.\n"
                    }
                },
                "type": "object"
            }
        },
        "datadog:index/teamPermissionSetting:TeamPermissionSetting": {
            "description": "Provides a Datadog TeamPermissionSetting resource. This can be used to manage Datadog team_permission_setting.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as datadog from \"@pulumi/datadog\";\n\nconst foo = new datadog.Team(\"foo\", {\n    description: \"Example team\",\n    handle: \"example-team-updated\",\n    name: \"Example Team-updated\",\n});\nconst fooTeamPermissionSetting = new datadog.TeamPermissionSetting(\"foo\", {\n    teamId: foo.id,\n    action: \"manage_membership\",\n    value: \"organization\",\n});\n```\n```python\nimport pulumi\nimport pulumi_datadog as datadog\n\nfoo = datadog.Team(\"foo\",\n    description=\"Example team\",\n    handle=\"example-team-updated\",\n    name=\"Example Team-updated\")\nfoo_team_permission_setting = datadog.TeamPermissionSetting(\"foo\",\n    team_id=foo.id,\n    action=\"manage_membership\",\n    value=\"organization\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Datadog = Pulumi.Datadog;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var foo = new Datadog.Team(\"foo\", new()\n    {\n        Description = \"Example team\",\n        Handle = \"example-team-updated\",\n        Name = \"Example Team-updated\",\n    });\n\n    var fooTeamPermissionSetting = new Datadog.TeamPermissionSetting(\"foo\", new()\n    {\n        TeamId = foo.Id,\n        Action = \"manage_membership\",\n        Value = \"organization\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-datadog/sdk/v4/go/datadog\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tfoo, err := datadog.NewTeam(ctx, \"foo\", \u0026datadog.TeamArgs{\n\t\t\tDescription: pulumi.String(\"Example team\"),\n\t\t\tHandle:      pulumi.String(\"example-team-updated\"),\n\t\t\tName:        pulumi.String(\"Example Team-updated\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = datadog.NewTeamPermissionSetting(ctx, \"foo\", \u0026datadog.TeamPermissionSettingArgs{\n\t\t\tTeamId: foo.ID(),\n\t\t\tAction: pulumi.String(\"manage_membership\"),\n\t\t\tValue:  pulumi.String(\"organization\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.datadog.Team;\nimport com.pulumi.datadog.TeamArgs;\nimport com.pulumi.datadog.TeamPermissionSetting;\nimport com.pulumi.datadog.TeamPermissionSettingArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var foo = new Team(\"foo\", TeamArgs.builder()\n            .description(\"Example team\")\n            .handle(\"example-team-updated\")\n            .name(\"Example Team-updated\")\n            .build());\n\n        var fooTeamPermissionSetting = new TeamPermissionSetting(\"fooTeamPermissionSetting\", TeamPermissionSettingArgs.builder()\n            .teamId(foo.id())\n            .action(\"manage_membership\")\n            .value(\"organization\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  foo:\n    type: datadog:Team\n    properties:\n      description: Example team\n      handle: example-team-updated\n      name: Example Team-updated\n  fooTeamPermissionSetting:\n    type: datadog:TeamPermissionSetting\n    name: foo\n    properties:\n      teamId: ${foo.id}\n      action: manage_membership\n      value: organization\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "properties": {
                "action": {
                    "type": "string",
                    "description": "The identifier for the action. Valid values are `manage_membership`, `edit`.\n"
                },
                "teamId": {
                    "type": "string",
                    "description": "ID of the team the team permission setting is associated with.\n"
                },
                "value": {
                    "type": "string",
                    "description": "The action value. Valid values are dependent on the action. `manage_membership` action allows `admins`, `members`, `organization`, `user_access_manage` values. `edit` action allows `admins`, `members`, `teams_manage` values.\n"
                }
            },
            "required": [
                "action",
                "teamId",
                "value"
            ],
            "inputProperties": {
                "action": {
                    "type": "string",
                    "description": "The identifier for the action. Valid values are `manage_membership`, `edit`.\n"
                },
                "teamId": {
                    "type": "string",
                    "description": "ID of the team the team permission setting is associated with.\n"
                },
                "value": {
                    "type": "string",
                    "description": "The action value. Valid values are dependent on the action. `manage_membership` action allows `admins`, `members`, `organization`, `user_access_manage` values. `edit` action allows `admins`, `members`, `teams_manage` values.\n"
                }
            },
            "requiredInputs": [
                "action",
                "teamId",
                "value"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering TeamPermissionSetting resources.\n",
                "properties": {
                    "action": {
                        "type": "string",
                        "description": "The identifier for the action. Valid values are `manage_membership`, `edit`.\n"
                    },
                    "teamId": {
                        "type": "string",
                        "description": "ID of the team the team permission setting is associated with.\n"
                    },
                    "value": {
                        "type": "string",
                        "description": "The action value. Valid values are dependent on the action. `manage_membership` action allows `admins`, `members`, `organization`, `user_access_manage` values. `edit` action allows `admins`, `members`, `teams_manage` values.\n"
                    }
                },
                "type": "object"
            }
        },
        "datadog:index/user:User": {
            "description": "Provides a Datadog user resource. This can be used to create and manage Datadog users.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as datadog from \"@pulumi/datadog\";\n\n// Source a role\nconst roRole = datadog.getRole({\n    filter: \"Datadog Read Only Role\",\n});\n// Create a new Datadog user\nconst foo = new datadog.User(\"foo\", {\n    email: \"new@example.com\",\n    roles: [roRole.then(roRole =\u003e roRole.id)],\n});\n```\n```python\nimport pulumi\nimport pulumi_datadog as datadog\n\n# Source a role\nro_role = datadog.get_role(filter=\"Datadog Read Only Role\")\n# Create a new Datadog user\nfoo = datadog.User(\"foo\",\n    email=\"new@example.com\",\n    roles=[ro_role.id])\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Datadog = Pulumi.Datadog;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    // Source a role\n    var roRole = Datadog.GetRole.Invoke(new()\n    {\n        Filter = \"Datadog Read Only Role\",\n    });\n\n    // Create a new Datadog user\n    var foo = new Datadog.User(\"foo\", new()\n    {\n        Email = \"new@example.com\",\n        Roles = new[]\n        {\n            roRole.Apply(getRoleResult =\u003e getRoleResult.Id),\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-datadog/sdk/v4/go/datadog\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t// Source a role\n\t\troRole, err := datadog.LookupRole(ctx, \u0026datadog.LookupRoleArgs{\n\t\t\tFilter: \"Datadog Read Only Role\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t// Create a new Datadog user\n\t\t_, err = datadog.NewUser(ctx, \"foo\", \u0026datadog.UserArgs{\n\t\t\tEmail: pulumi.String(\"new@example.com\"),\n\t\t\tRoles: pulumi.StringArray{\n\t\t\t\tpulumi.String(roRole.Id),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.datadog.DatadogFunctions;\nimport com.pulumi.datadog.inputs.GetRoleArgs;\nimport com.pulumi.datadog.User;\nimport com.pulumi.datadog.UserArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        // Source a role\n        final var roRole = DatadogFunctions.getRole(GetRoleArgs.builder()\n            .filter(\"Datadog Read Only Role\")\n            .build());\n\n        // Create a new Datadog user\n        var foo = new User(\"foo\", UserArgs.builder()\n            .email(\"new@example.com\")\n            .roles(roRole.applyValue(getRoleResult -\u003e getRoleResult.id()))\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  # Create a new Datadog user\n  foo:\n    type: datadog:User\n    properties:\n      email: new@example.com\n      roles:\n        - ${roRole.id}\nvariables:\n  # Source a role\n  roRole:\n    fn::invoke:\n      Function: datadog:getRole\n      Arguments:\n        filter: Datadog Read Only Role\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\n```sh\n$ pulumi import datadog:index/user:User example_user 6f1b44c0-30b2-11eb-86bc-279f7c1ebaa4\n```\n\n",
            "properties": {
                "disabled": {
                    "type": "boolean",
                    "description": "Whether the user is disabled. Defaults to `false`.\n"
                },
                "email": {
                    "type": "string",
                    "description": "Email address for user.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name for user.\n"
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of role IDs to assign to the user.\n"
                },
                "sendUserInvitation": {
                    "type": "boolean",
                    "description": "Whether an invitation email should be sent when the user is created. Defaults to `true`.\n"
                },
                "userInvitationId": {
                    "type": "string",
                    "description": "The ID of the user invitation that was sent when creating the user.\n"
                },
                "verified": {
                    "type": "boolean",
                    "description": "Returns `true` if the user is verified.\n"
                }
            },
            "required": [
                "email",
                "roles",
                "userInvitationId",
                "verified"
            ],
            "inputProperties": {
                "disabled": {
                    "type": "boolean",
                    "description": "Whether the user is disabled. Defaults to `false`.\n"
                },
                "email": {
                    "type": "string",
                    "description": "Email address for user.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name for user.\n"
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of role IDs to assign to the user.\n"
                },
                "sendUserInvitation": {
                    "type": "boolean",
                    "description": "Whether an invitation email should be sent when the user is created. Defaults to `true`.\n"
                }
            },
            "requiredInputs": [
                "email"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering User resources.\n",
                "properties": {
                    "disabled": {
                        "type": "boolean",
                        "description": "Whether the user is disabled. Defaults to `false`.\n"
                    },
                    "email": {
                        "type": "string",
                        "description": "Email address for user.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name for user.\n"
                    },
                    "roles": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of role IDs to assign to the user.\n"
                    },
                    "sendUserInvitation": {
                        "type": "boolean",
                        "description": "Whether an invitation email should be sent when the user is created. Defaults to `true`.\n"
                    },
                    "userInvitationId": {
                        "type": "string",
                        "description": "The ID of the user invitation that was sent when creating the user.\n"
                    },
                    "verified": {
                        "type": "boolean",
                        "description": "Returns `true` if the user is verified.\n"
                    }
                },
                "type": "object"
            }
        },
        "datadog:index/userRole:UserRole": {
            "description": "Provides a Datadog UserRole resource. This can be used to create and manage Datadog User Roles. Conflicts may occur if used together with the `datadog.User` resource's `roles` attribute or the `datadog.ServiceAccount` resource's `roles` attribute. This resource is in beta and is subject to change.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as datadog from \"@pulumi/datadog\";\n\nconst monitorWriterRole = new datadog.Role(\"monitor_writer_role\", {\n    name: \"Monitor Writer Role\",\n    permissions: [{\n        id: bar.permissions.monitorsWrite,\n    }],\n});\nconst newUser = new datadog.User(\"new_user\", {email: \"new@example.com\"});\n// Create new user_role resource\nconst newUserWithMonitorWriterRole = new datadog.UserRole(\"new_user_with_monitor_writer_role\", {\n    roleId: monitorWriterRole.id,\n    userId: newUser.id,\n});\n```\n```python\nimport pulumi\nimport pulumi_datadog as datadog\n\nmonitor_writer_role = datadog.Role(\"monitor_writer_role\",\n    name=\"Monitor Writer Role\",\n    permissions=[{\n        \"id\": bar[\"permissions\"][\"monitorsWrite\"],\n    }])\nnew_user = datadog.User(\"new_user\", email=\"new@example.com\")\n# Create new user_role resource\nnew_user_with_monitor_writer_role = datadog.UserRole(\"new_user_with_monitor_writer_role\",\n    role_id=monitor_writer_role.id,\n    user_id=new_user.id)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Datadog = Pulumi.Datadog;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var monitorWriterRole = new Datadog.Role(\"monitor_writer_role\", new()\n    {\n        Name = \"Monitor Writer Role\",\n        Permissions = new[]\n        {\n            new Datadog.Inputs.RolePermissionArgs\n            {\n                Id = bar.Permissions.MonitorsWrite,\n            },\n        },\n    });\n\n    var newUser = new Datadog.User(\"new_user\", new()\n    {\n        Email = \"new@example.com\",\n    });\n\n    // Create new user_role resource\n    var newUserWithMonitorWriterRole = new Datadog.UserRole(\"new_user_with_monitor_writer_role\", new()\n    {\n        RoleId = monitorWriterRole.Id,\n        UserId = newUser.Id,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-datadog/sdk/v4/go/datadog\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tmonitorWriterRole, err := datadog.NewRole(ctx, \"monitor_writer_role\", \u0026datadog.RoleArgs{\n\t\t\tName: pulumi.String(\"Monitor Writer Role\"),\n\t\t\tPermissions: datadog.RolePermissionArray{\n\t\t\t\t\u0026datadog.RolePermissionArgs{\n\t\t\t\t\tId: pulumi.Any(bar.Permissions.MonitorsWrite),\n\t\t\t\t},\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tnewUser, err := datadog.NewUser(ctx, \"new_user\", \u0026datadog.UserArgs{\n\t\t\tEmail: pulumi.String(\"new@example.com\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t// Create new user_role resource\n\t\t_, err = datadog.NewUserRole(ctx, \"new_user_with_monitor_writer_role\", \u0026datadog.UserRoleArgs{\n\t\t\tRoleId: monitorWriterRole.ID(),\n\t\t\tUserId: newUser.ID(),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.datadog.Role;\nimport com.pulumi.datadog.RoleArgs;\nimport com.pulumi.datadog.inputs.RolePermissionArgs;\nimport com.pulumi.datadog.User;\nimport com.pulumi.datadog.UserArgs;\nimport com.pulumi.datadog.UserRole;\nimport com.pulumi.datadog.UserRoleArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var monitorWriterRole = new Role(\"monitorWriterRole\", RoleArgs.builder()\n            .name(\"Monitor Writer Role\")\n            .permissions(RolePermissionArgs.builder()\n                .id(bar.permissions().monitorsWrite())\n                .build())\n            .build());\n\n        var newUser = new User(\"newUser\", UserArgs.builder()\n            .email(\"new@example.com\")\n            .build());\n\n        // Create new user_role resource\n        var newUserWithMonitorWriterRole = new UserRole(\"newUserWithMonitorWriterRole\", UserRoleArgs.builder()\n            .roleId(monitorWriterRole.id())\n            .userId(newUser.id())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  monitorWriterRole:\n    type: datadog:Role\n    name: monitor_writer_role\n    properties:\n      name: Monitor Writer Role\n      permissions:\n        - id: ${bar.permissions.monitorsWrite}\n  newUser:\n    type: datadog:User\n    name: new_user\n    properties:\n      email: new@example.com\n  # Create new user_role resource\n  newUserWithMonitorWriterRole:\n    type: datadog:UserRole\n    name: new_user_with_monitor_writer_role\n    properties:\n      roleId: ${monitorWriterRole.id}\n      userId: ${newUser.id}\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\nThis resource is imported using user_id and role_id seperated by `:`.\n\n```sh\n$ pulumi import datadog:index/userRole:UserRole user_with_admin_role \"${role_id}:${user_id}\"\n```\n\n",
            "properties": {
                "roleId": {
                    "type": "string",
                    "description": "ID of the role that the user is assigned to.\n"
                },
                "userId": {
                    "type": "string",
                    "description": "The ID of the user.\n"
                }
            },
            "required": [
                "roleId",
                "userId"
            ],
            "inputProperties": {
                "roleId": {
                    "type": "string",
                    "description": "ID of the role that the user is assigned to.\n"
                },
                "userId": {
                    "type": "string",
                    "description": "The ID of the user.\n"
                }
            },
            "requiredInputs": [
                "roleId",
                "userId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering UserRole resources.\n",
                "properties": {
                    "roleId": {
                        "type": "string",
                        "description": "ID of the role that the user is assigned to.\n"
                    },
                    "userId": {
                        "type": "string",
                        "description": "The ID of the user.\n"
                    }
                },
                "type": "object"
            }
        },
        "datadog:index/webhook:Webhook": {
            "description": "Provides a Datadog webhook resource. This can be used to create and manage Datadog webhooks.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as datadog from \"@pulumi/datadog\";\n\n// Create a new Datadog webhook\nconst foo = new datadog.Webhook(\"foo\", {\n    name: \"test-webhook\",\n    url: \"example.com\",\n    encodeAs: \"json\",\n    customHeaders: JSON.stringify({\n        custom: \"header\",\n    }),\n    payload: JSON.stringify({\n        custom: \"payload\",\n    }),\n});\n```\n```python\nimport pulumi\nimport json\nimport pulumi_datadog as datadog\n\n# Create a new Datadog webhook\nfoo = datadog.Webhook(\"foo\",\n    name=\"test-webhook\",\n    url=\"example.com\",\n    encode_as=\"json\",\n    custom_headers=json.dumps({\n        \"custom\": \"header\",\n    }),\n    payload=json.dumps({\n        \"custom\": \"payload\",\n    }))\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text.Json;\nusing Pulumi;\nusing Datadog = Pulumi.Datadog;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    // Create a new Datadog webhook\n    var foo = new Datadog.Webhook(\"foo\", new()\n    {\n        Name = \"test-webhook\",\n        Url = \"example.com\",\n        EncodeAs = \"json\",\n        CustomHeaders = JsonSerializer.Serialize(new Dictionary\u003cstring, object?\u003e\n        {\n            [\"custom\"] = \"header\",\n        }),\n        Payload = JsonSerializer.Serialize(new Dictionary\u003cstring, object?\u003e\n        {\n            [\"custom\"] = \"payload\",\n        }),\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"encoding/json\"\n\n\t\"github.com/pulumi/pulumi-datadog/sdk/v4/go/datadog\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\ttmpJSON0, err := json.Marshal(map[string]interface{}{\n\t\t\t\"custom\": \"header\",\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tjson0 := string(tmpJSON0)\n\t\ttmpJSON1, err := json.Marshal(map[string]interface{}{\n\t\t\t\"custom\": \"payload\",\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tjson1 := string(tmpJSON1)\n\t\t// Create a new Datadog webhook\n\t\t_, err = datadog.NewWebhook(ctx, \"foo\", \u0026datadog.WebhookArgs{\n\t\t\tName:          pulumi.String(\"test-webhook\"),\n\t\t\tUrl:           pulumi.String(\"example.com\"),\n\t\t\tEncodeAs:      pulumi.String(\"json\"),\n\t\t\tCustomHeaders: pulumi.String(json0),\n\t\t\tPayload:       pulumi.String(json1),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.datadog.Webhook;\nimport com.pulumi.datadog.WebhookArgs;\nimport static com.pulumi.codegen.internal.Serialization.*;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        // Create a new Datadog webhook\n        var foo = new Webhook(\"foo\", WebhookArgs.builder()\n            .name(\"test-webhook\")\n            .url(\"example.com\")\n            .encodeAs(\"json\")\n            .customHeaders(serializeJson(\n                jsonObject(\n                    jsonProperty(\"custom\", \"header\")\n                )))\n            .payload(serializeJson(\n                jsonObject(\n                    jsonProperty(\"custom\", \"payload\")\n                )))\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  # Create a new Datadog webhook\n  foo:\n    type: datadog:Webhook\n    properties:\n      name: test-webhook\n      url: example.com\n      encodeAs: json\n      customHeaders:\n        fn::toJSON:\n          custom: header\n      payload:\n        fn::toJSON:\n          custom: payload\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\n```sh\n$ pulumi import datadog:index/webhook:Webhook foo example-webhook\n```\n\n",
            "properties": {
                "customHeaders": {
                    "type": "string",
                    "description": "The headers attached to the webhook.\n"
                },
                "encodeAs": {
                    "type": "string",
                    "description": "Encoding type. Valid values are `json`, `form`.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the webhook. It corresponds with `\u003cWEBHOOK_NAME\u003e`.\n"
                },
                "payload": {
                    "type": "string",
                    "description": "The payload of the webhook.\n"
                },
                "url": {
                    "type": "string",
                    "description": "The URL of the webhook.\n"
                }
            },
            "required": [
                "encodeAs",
                "name",
                "payload",
                "url"
            ],
            "inputProperties": {
                "customHeaders": {
                    "type": "string",
                    "description": "The headers attached to the webhook.\n"
                },
                "encodeAs": {
                    "type": "string",
                    "description": "Encoding type. Valid values are `json`, `form`.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the webhook. It corresponds with `\u003cWEBHOOK_NAME\u003e`.\n"
                },
                "payload": {
                    "type": "string",
                    "description": "The payload of the webhook.\n"
                },
                "url": {
                    "type": "string",
                    "description": "The URL of the webhook.\n"
                }
            },
            "requiredInputs": [
                "name",
                "url"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Webhook resources.\n",
                "properties": {
                    "customHeaders": {
                        "type": "string",
                        "description": "The headers attached to the webhook.\n"
                    },
                    "encodeAs": {
                        "type": "string",
                        "description": "Encoding type. Valid values are `json`, `form`.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the webhook. It corresponds with `\u003cWEBHOOK_NAME\u003e`.\n"
                    },
                    "payload": {
                        "type": "string",
                        "description": "The payload of the webhook.\n"
                    },
                    "url": {
                        "type": "string",
                        "description": "The URL of the webhook.\n"
                    }
                },
                "type": "object"
            }
        },
        "datadog:index/webhookCustomVariable:WebhookCustomVariable": {
            "description": "Provides a Datadog webhooks custom variable resource. This can be used to create and manage Datadog webhooks custom variables.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as datadog from \"@pulumi/datadog\";\n\n// Create a new Datadog webhook custom variable.\nconst foo = new datadog.WebhookCustomVariable(\"foo\", {\n    name: \"EXAMPLE_VARIABLE\",\n    value: \"EXAMPLE-VALUE\",\n    isSecret: true,\n});\n```\n```python\nimport pulumi\nimport pulumi_datadog as datadog\n\n# Create a new Datadog webhook custom variable.\nfoo = datadog.WebhookCustomVariable(\"foo\",\n    name=\"EXAMPLE_VARIABLE\",\n    value=\"EXAMPLE-VALUE\",\n    is_secret=True)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Datadog = Pulumi.Datadog;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    // Create a new Datadog webhook custom variable.\n    var foo = new Datadog.WebhookCustomVariable(\"foo\", new()\n    {\n        Name = \"EXAMPLE_VARIABLE\",\n        Value = \"EXAMPLE-VALUE\",\n        IsSecret = true,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-datadog/sdk/v4/go/datadog\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t// Create a new Datadog webhook custom variable.\n\t\t_, err := datadog.NewWebhookCustomVariable(ctx, \"foo\", \u0026datadog.WebhookCustomVariableArgs{\n\t\t\tName:     pulumi.String(\"EXAMPLE_VARIABLE\"),\n\t\t\tValue:    pulumi.String(\"EXAMPLE-VALUE\"),\n\t\t\tIsSecret: pulumi.Bool(true),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.datadog.WebhookCustomVariable;\nimport com.pulumi.datadog.WebhookCustomVariableArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        // Create a new Datadog webhook custom variable.\n        var foo = new WebhookCustomVariable(\"foo\", WebhookCustomVariableArgs.builder()\n            .name(\"EXAMPLE_VARIABLE\")\n            .value(\"EXAMPLE-VALUE\")\n            .isSecret(true)\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  # Create a new Datadog webhook custom variable.\n  foo:\n    type: datadog:WebhookCustomVariable\n    properties:\n      name: EXAMPLE_VARIABLE\n      value: EXAMPLE-VALUE\n      isSecret: true\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\n```sh\n$ pulumi import datadog:index/webhookCustomVariable:WebhookCustomVariable foo EXAMPLE_VARIABLE\n```\n\n",
            "properties": {
                "isSecret": {
                    "type": "boolean",
                    "description": "Whether the custom variable is secret or not.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the variable. It corresponds with `\u003cCUSTOM_VARIABLE_NAME\u003e`.\n"
                },
                "value": {
                    "type": "string",
                    "description": "The value of the custom variable.\n",
                    "secret": true
                }
            },
            "required": [
                "isSecret",
                "name",
                "value"
            ],
            "inputProperties": {
                "isSecret": {
                    "type": "boolean",
                    "description": "Whether the custom variable is secret or not.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the variable. It corresponds with `\u003cCUSTOM_VARIABLE_NAME\u003e`.\n"
                },
                "value": {
                    "type": "string",
                    "description": "The value of the custom variable.\n",
                    "secret": true
                }
            },
            "requiredInputs": [
                "isSecret",
                "name",
                "value"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering WebhookCustomVariable resources.\n",
                "properties": {
                    "isSecret": {
                        "type": "boolean",
                        "description": "Whether the custom variable is secret or not.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the variable. It corresponds with `\u003cCUSTOM_VARIABLE_NAME\u003e`.\n"
                    },
                    "value": {
                        "type": "string",
                        "description": "The value of the custom variable.\n",
                        "secret": true
                    }
                },
                "type": "object"
            }
        },
        "datadog:opsgenie/serviceObject:ServiceObject": {
            "description": "Resource for interacting with Datadog Opsgenie Service API.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as datadog from \"@pulumi/datadog\";\n\nconst fakeServiceName = new datadog.opsgenie.ServiceObject(\"fake_service_name\", {\n    name: \"fake_service_name\",\n    opsgenieApiKey: \"00000000-0000-0000-0000-000000000000\",\n    region: \"us\",\n});\nconst fakeServiceName2 = new datadog.opsgenie.ServiceObject(\"fake_service_name_2\", {\n    name: \"fake_service_name_2\",\n    opsgenieApiKey: \"11111111-1111-1111-1111-111111111111\",\n    region: \"eu\",\n});\n```\n```python\nimport pulumi\nimport pulumi_datadog as datadog\n\nfake_service_name = datadog.opsgenie.ServiceObject(\"fake_service_name\",\n    name=\"fake_service_name\",\n    opsgenie_api_key=\"00000000-0000-0000-0000-000000000000\",\n    region=\"us\")\nfake_service_name2 = datadog.opsgenie.ServiceObject(\"fake_service_name_2\",\n    name=\"fake_service_name_2\",\n    opsgenie_api_key=\"11111111-1111-1111-1111-111111111111\",\n    region=\"eu\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Datadog = Pulumi.Datadog;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var fakeServiceName = new Datadog.OpsGenie.ServiceObject(\"fake_service_name\", new()\n    {\n        Name = \"fake_service_name\",\n        OpsgenieApiKey = \"00000000-0000-0000-0000-000000000000\",\n        Region = \"us\",\n    });\n\n    var fakeServiceName2 = new Datadog.OpsGenie.ServiceObject(\"fake_service_name_2\", new()\n    {\n        Name = \"fake_service_name_2\",\n        OpsgenieApiKey = \"11111111-1111-1111-1111-111111111111\",\n        Region = \"eu\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-datadog/sdk/v4/go/datadog/opsgenie\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := opsgenie.NewServiceObject(ctx, \"fake_service_name\", \u0026opsgenie.ServiceObjectArgs{\n\t\t\tName:           pulumi.String(\"fake_service_name\"),\n\t\t\tOpsgenieApiKey: pulumi.String(\"00000000-0000-0000-0000-000000000000\"),\n\t\t\tRegion:         pulumi.String(\"us\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = opsgenie.NewServiceObject(ctx, \"fake_service_name_2\", \u0026opsgenie.ServiceObjectArgs{\n\t\t\tName:           pulumi.String(\"fake_service_name_2\"),\n\t\t\tOpsgenieApiKey: pulumi.String(\"11111111-1111-1111-1111-111111111111\"),\n\t\t\tRegion:         pulumi.String(\"eu\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.datadog.opsgenie.ServiceObject;\nimport com.pulumi.datadog.opsgenie.ServiceObjectArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var fakeServiceName = new ServiceObject(\"fakeServiceName\", ServiceObjectArgs.builder()\n            .name(\"fake_service_name\")\n            .opsgenieApiKey(\"00000000-0000-0000-0000-000000000000\")\n            .region(\"us\")\n            .build());\n\n        var fakeServiceName2 = new ServiceObject(\"fakeServiceName2\", ServiceObjectArgs.builder()\n            .name(\"fake_service_name_2\")\n            .opsgenieApiKey(\"11111111-1111-1111-1111-111111111111\")\n            .region(\"eu\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  fakeServiceName:\n    type: datadog:opsgenie:ServiceObject\n    name: fake_service_name\n    properties:\n      name: fake_service_name\n      opsgenieApiKey: 00000000-0000-0000-0000-000000000000\n      region: us\n  fakeServiceName2:\n    type: datadog:opsgenie:ServiceObject\n    name: fake_service_name_2\n    properties:\n      name: fake_service_name_2\n      opsgenieApiKey: 11111111-1111-1111-1111-111111111111\n      region: eu\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "properties": {
                "customUrl": {
                    "type": "string",
                    "description": "The custom url for a custom region.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name for the Opsgenie service.\n"
                },
                "opsgenieApiKey": {
                    "type": "string",
                    "secret": true
                },
                "region": {
                    "type": "string",
                    "description": "The region for the Opsgenie service. Valid values are `us`, `eu`, `custom`.\n"
                }
            },
            "required": [
                "name",
                "opsgenieApiKey",
                "region"
            ],
            "inputProperties": {
                "customUrl": {
                    "type": "string",
                    "description": "The custom url for a custom region.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name for the Opsgenie service.\n"
                },
                "opsgenieApiKey": {
                    "type": "string",
                    "secret": true
                },
                "region": {
                    "type": "string",
                    "description": "The region for the Opsgenie service. Valid values are `us`, `eu`, `custom`.\n"
                }
            },
            "requiredInputs": [
                "name",
                "opsgenieApiKey",
                "region"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ServiceObject resources.\n",
                "properties": {
                    "customUrl": {
                        "type": "string",
                        "description": "The custom url for a custom region.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name for the Opsgenie service.\n"
                    },
                    "opsgenieApiKey": {
                        "type": "string",
                        "secret": true
                    },
                    "region": {
                        "type": "string",
                        "description": "The region for the Opsgenie service. Valid values are `us`, `eu`, `custom`.\n"
                    }
                },
                "type": "object"
            }
        },
        "datadog:pagerduty/integration:Integration": {
            "description": "Provides a Datadog - PagerDuty resource. This can be used to create and manage Datadog - PagerDuty integration. See also [PagerDuty Integration Guide](https://www.pagerduty.com/docs/guides/datadog-integration-guide/).\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as datadog from \"@pulumi/datadog\";\n\n// Note: Until terraform-provider-datadog version 2.1.0, service objects under the services key were specified inside the datadog_integration_pagerduty resource. This was incompatible with multi-configuration-file setups, where users wanted to have individual service objects controlled from different Terraform configuration files. The recommended approach now is specifying service objects as individual resources using datadog_integration_pagerduty_service_object.\n// Services as Individual Resources\nconst pd = new datadog.pagerduty.Integration(\"pd\", {\n    schedules: [\n        \"https://ddog.pagerduty.com/schedules/X123VF\",\n        \"https://ddog.pagerduty.com/schedules/X321XX\",\n    ],\n    subdomain: \"ddog\",\n    apiToken: \"38457822378273432587234242874\",\n});\nconst testingFoo = new datadog.pagerduty.ServiceObject(\"testing_foo\", {\n    serviceName: \"testing_foo\",\n    serviceKey: \"9876543210123456789\",\n}, {\n    dependsOn: [pd],\n});\nconst testingBar = new datadog.pagerduty.ServiceObject(\"testing_bar\", {\n    serviceName: \"testing_bar\",\n    serviceKey: \"54321098765432109876\",\n}, {\n    dependsOn: [pd],\n});\n```\n```python\nimport pulumi\nimport pulumi_datadog as datadog\n\n# Note: Until terraform-provider-datadog version 2.1.0, service objects under the services key were specified inside the datadog_integration_pagerduty resource. This was incompatible with multi-configuration-file setups, where users wanted to have individual service objects controlled from different Terraform configuration files. The recommended approach now is specifying service objects as individual resources using datadog_integration_pagerduty_service_object.\n# Services as Individual Resources\npd = datadog.pagerduty.Integration(\"pd\",\n    schedules=[\n        \"https://ddog.pagerduty.com/schedules/X123VF\",\n        \"https://ddog.pagerduty.com/schedules/X321XX\",\n    ],\n    subdomain=\"ddog\",\n    api_token=\"38457822378273432587234242874\")\ntesting_foo = datadog.pagerduty.ServiceObject(\"testing_foo\",\n    service_name=\"testing_foo\",\n    service_key=\"9876543210123456789\",\n    opts = pulumi.ResourceOptions(depends_on=[pd]))\ntesting_bar = datadog.pagerduty.ServiceObject(\"testing_bar\",\n    service_name=\"testing_bar\",\n    service_key=\"54321098765432109876\",\n    opts = pulumi.ResourceOptions(depends_on=[pd]))\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Datadog = Pulumi.Datadog;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    // Note: Until terraform-provider-datadog version 2.1.0, service objects under the services key were specified inside the datadog_integration_pagerduty resource. This was incompatible with multi-configuration-file setups, where users wanted to have individual service objects controlled from different Terraform configuration files. The recommended approach now is specifying service objects as individual resources using datadog_integration_pagerduty_service_object.\n    // Services as Individual Resources\n    var pd = new Datadog.PagerDuty.Integration(\"pd\", new()\n    {\n        Schedules = new[]\n        {\n            \"https://ddog.pagerduty.com/schedules/X123VF\",\n            \"https://ddog.pagerduty.com/schedules/X321XX\",\n        },\n        Subdomain = \"ddog\",\n        ApiToken = \"38457822378273432587234242874\",\n    });\n\n    var testingFoo = new Datadog.PagerDuty.ServiceObject(\"testing_foo\", new()\n    {\n        ServiceName = \"testing_foo\",\n        ServiceKey = \"9876543210123456789\",\n    }, new CustomResourceOptions\n    {\n        DependsOn =\n        {\n            pd,\n        },\n    });\n\n    var testingBar = new Datadog.PagerDuty.ServiceObject(\"testing_bar\", new()\n    {\n        ServiceName = \"testing_bar\",\n        ServiceKey = \"54321098765432109876\",\n    }, new CustomResourceOptions\n    {\n        DependsOn =\n        {\n            pd,\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-datadog/sdk/v4/go/datadog/pagerduty\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t// Note: Until terraform-provider-datadog version 2.1.0, service objects under the services key were specified inside the datadog_integration_pagerduty resource. This was incompatible with multi-configuration-file setups, where users wanted to have individual service objects controlled from different Terraform configuration files. The recommended approach now is specifying service objects as individual resources using datadog_integration_pagerduty_service_object.\n\t\t// Services as Individual Resources\n\t\tpd, err := pagerduty.NewIntegration(ctx, \"pd\", \u0026pagerduty.IntegrationArgs{\n\t\t\tSchedules: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"https://ddog.pagerduty.com/schedules/X123VF\"),\n\t\t\t\tpulumi.String(\"https://ddog.pagerduty.com/schedules/X321XX\"),\n\t\t\t},\n\t\t\tSubdomain: pulumi.String(\"ddog\"),\n\t\t\tApiToken:  pulumi.String(\"38457822378273432587234242874\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = pagerduty.NewServiceObject(ctx, \"testing_foo\", \u0026pagerduty.ServiceObjectArgs{\n\t\t\tServiceName: pulumi.String(\"testing_foo\"),\n\t\t\tServiceKey:  pulumi.String(\"9876543210123456789\"),\n\t\t}, pulumi.DependsOn([]pulumi.Resource{\n\t\t\tpd,\n\t\t}))\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = pagerduty.NewServiceObject(ctx, \"testing_bar\", \u0026pagerduty.ServiceObjectArgs{\n\t\t\tServiceName: pulumi.String(\"testing_bar\"),\n\t\t\tServiceKey:  pulumi.String(\"54321098765432109876\"),\n\t\t}, pulumi.DependsOn([]pulumi.Resource{\n\t\t\tpd,\n\t\t}))\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.datadog.pagerduty.Integration;\nimport com.pulumi.datadog.pagerduty.IntegrationArgs;\nimport com.pulumi.datadog.pagerduty.ServiceObject;\nimport com.pulumi.datadog.pagerduty.ServiceObjectArgs;\nimport com.pulumi.resources.CustomResourceOptions;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        // Note: Until terraform-provider-datadog version 2.1.0, service objects under the services key were specified inside the datadog_integration_pagerduty resource. This was incompatible with multi-configuration-file setups, where users wanted to have individual service objects controlled from different Terraform configuration files. The recommended approach now is specifying service objects as individual resources using datadog_integration_pagerduty_service_object.\n        // Services as Individual Resources\n        var pd = new Integration(\"pd\", IntegrationArgs.builder()\n            .schedules(            \n                \"https://ddog.pagerduty.com/schedules/X123VF\",\n                \"https://ddog.pagerduty.com/schedules/X321XX\")\n            .subdomain(\"ddog\")\n            .apiToken(\"38457822378273432587234242874\")\n            .build());\n\n        var testingFoo = new ServiceObject(\"testingFoo\", ServiceObjectArgs.builder()\n            .serviceName(\"testing_foo\")\n            .serviceKey(\"9876543210123456789\")\n            .build(), CustomResourceOptions.builder()\n                .dependsOn(pd)\n                .build());\n\n        var testingBar = new ServiceObject(\"testingBar\", ServiceObjectArgs.builder()\n            .serviceName(\"testing_bar\")\n            .serviceKey(\"54321098765432109876\")\n            .build(), CustomResourceOptions.builder()\n                .dependsOn(pd)\n                .build());\n\n    }\n}\n```\n```yaml\nresources:\n  # Note: Until terraform-provider-datadog version 2.1.0, service objects under the services key were specified inside the datadog_integration_pagerduty resource. This was incompatible with multi-configuration-file setups, where users wanted to have individual service objects controlled from different Terraform configuration files. The recommended approach now is specifying service objects as individual resources using datadog_integration_pagerduty_service_object.\n\n  # Services as Individual Resources\n  pd:\n    type: datadog:pagerduty:Integration\n    properties:\n      schedules:\n        - https://ddog.pagerduty.com/schedules/X123VF\n        - https://ddog.pagerduty.com/schedules/X321XX\n      subdomain: ddog\n      apiToken: '38457822378273432587234242874'\n  testingFoo:\n    type: datadog:pagerduty:ServiceObject\n    name: testing_foo\n    properties:\n      serviceName: testing_foo\n      serviceKey: '9876543210123456789'\n    options:\n      dependson:\n        - ${pd}\n  testingBar:\n    type: datadog:pagerduty:ServiceObject\n    name: testing_bar\n    properties:\n      serviceName: testing_bar\n      serviceKey: '54321098765432109876'\n    options:\n      dependson:\n        - ${pd}\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "properties": {
                "apiToken": {
                    "type": "string",
                    "description": "Your PagerDuty API token.\n",
                    "secret": true
                },
                "schedules": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Array of your schedule URLs.\n"
                },
                "subdomain": {
                    "type": "string",
                    "description": "Your PagerDuty account’s personalized subdomain name.\n"
                }
            },
            "required": [
                "subdomain"
            ],
            "inputProperties": {
                "apiToken": {
                    "type": "string",
                    "description": "Your PagerDuty API token.\n",
                    "secret": true
                },
                "schedules": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Array of your schedule URLs.\n"
                },
                "subdomain": {
                    "type": "string",
                    "description": "Your PagerDuty account’s personalized subdomain name.\n"
                }
            },
            "requiredInputs": [
                "subdomain"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Integration resources.\n",
                "properties": {
                    "apiToken": {
                        "type": "string",
                        "description": "Your PagerDuty API token.\n",
                        "secret": true
                    },
                    "schedules": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Array of your schedule URLs.\n"
                    },
                    "subdomain": {
                        "type": "string",
                        "description": "Your PagerDuty account’s personalized subdomain name.\n"
                    }
                },
                "type": "object"
            }
        },
        "datadog:pagerduty/serviceObject:ServiceObject": {
            "description": "Provides access to individual Service Objects of Datadog - PagerDuty integrations. Note that the Datadog - PagerDuty integration must be activated in the Datadog UI in order for this resource to be usable.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as datadog from \"@pulumi/datadog\";\n\nconst testingFoo = new datadog.pagerduty.ServiceObject(\"testing_foo\", {\n    serviceName: \"testing_foo\",\n    serviceKey: \"9876543210123456789\",\n});\nconst testingBar = new datadog.pagerduty.ServiceObject(\"testing_bar\", {\n    serviceName: \"testing_bar\",\n    serviceKey: \"54321098765432109876\",\n});\n```\n```python\nimport pulumi\nimport pulumi_datadog as datadog\n\ntesting_foo = datadog.pagerduty.ServiceObject(\"testing_foo\",\n    service_name=\"testing_foo\",\n    service_key=\"9876543210123456789\")\ntesting_bar = datadog.pagerduty.ServiceObject(\"testing_bar\",\n    service_name=\"testing_bar\",\n    service_key=\"54321098765432109876\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Datadog = Pulumi.Datadog;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var testingFoo = new Datadog.PagerDuty.ServiceObject(\"testing_foo\", new()\n    {\n        ServiceName = \"testing_foo\",\n        ServiceKey = \"9876543210123456789\",\n    });\n\n    var testingBar = new Datadog.PagerDuty.ServiceObject(\"testing_bar\", new()\n    {\n        ServiceName = \"testing_bar\",\n        ServiceKey = \"54321098765432109876\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-datadog/sdk/v4/go/datadog/pagerduty\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := pagerduty.NewServiceObject(ctx, \"testing_foo\", \u0026pagerduty.ServiceObjectArgs{\n\t\t\tServiceName: pulumi.String(\"testing_foo\"),\n\t\t\tServiceKey:  pulumi.String(\"9876543210123456789\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = pagerduty.NewServiceObject(ctx, \"testing_bar\", \u0026pagerduty.ServiceObjectArgs{\n\t\t\tServiceName: pulumi.String(\"testing_bar\"),\n\t\t\tServiceKey:  pulumi.String(\"54321098765432109876\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.datadog.pagerduty.ServiceObject;\nimport com.pulumi.datadog.pagerduty.ServiceObjectArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var testingFoo = new ServiceObject(\"testingFoo\", ServiceObjectArgs.builder()\n            .serviceName(\"testing_foo\")\n            .serviceKey(\"9876543210123456789\")\n            .build());\n\n        var testingBar = new ServiceObject(\"testingBar\", ServiceObjectArgs.builder()\n            .serviceName(\"testing_bar\")\n            .serviceKey(\"54321098765432109876\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  testingFoo:\n    type: datadog:pagerduty:ServiceObject\n    name: testing_foo\n    properties:\n      serviceName: testing_foo\n      serviceKey: '9876543210123456789'\n  testingBar:\n    type: datadog:pagerduty:ServiceObject\n    name: testing_bar\n    properties:\n      serviceName: testing_bar\n      serviceKey: '54321098765432109876'\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\nPagerduty service object can be imported using the service_name, while the service_key should be passed by setting the environment variable SERVICE_KEY\n\n```sh\n$ pulumi import datadog:pagerduty/serviceObject:ServiceObject SERVICE_KEY=${service_key} datadog_integration_pagerduty_service_object.foo ${service_name}\n```\n\n",
            "properties": {
                "serviceKey": {
                    "type": "string",
                    "secret": true
                },
                "serviceName": {
                    "type": "string",
                    "description": "Your Service name in PagerDuty.\n"
                }
            },
            "required": [
                "serviceKey",
                "serviceName"
            ],
            "inputProperties": {
                "serviceKey": {
                    "type": "string",
                    "secret": true
                },
                "serviceName": {
                    "type": "string",
                    "description": "Your Service name in PagerDuty.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "serviceKey",
                "serviceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ServiceObject resources.\n",
                "properties": {
                    "serviceKey": {
                        "type": "string",
                        "secret": true
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Your Service name in PagerDuty.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "datadog:slack/channel:Channel": {
            "description": "Resource for interacting with the Datadog Slack channel API\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as datadog from \"@pulumi/datadog\";\n\nconst testChannel = new datadog.slack.Channel(\"test_channel\", {\n    accountName: \"foo\",\n    channelName: \"#test_channel\",\n    display: {\n        message: true,\n        notified: false,\n        snapshot: false,\n        tags: true,\n    },\n});\n```\n```python\nimport pulumi\nimport pulumi_datadog as datadog\n\ntest_channel = datadog.slack.Channel(\"test_channel\",\n    account_name=\"foo\",\n    channel_name=\"#test_channel\",\n    display={\n        \"message\": True,\n        \"notified\": False,\n        \"snapshot\": False,\n        \"tags\": True,\n    })\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Datadog = Pulumi.Datadog;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var testChannel = new Datadog.Slack.Channel(\"test_channel\", new()\n    {\n        AccountName = \"foo\",\n        ChannelName = \"#test_channel\",\n        Display = new Datadog.Slack.Inputs.ChannelDisplayArgs\n        {\n            Message = true,\n            Notified = false,\n            Snapshot = false,\n            Tags = true,\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-datadog/sdk/v4/go/datadog/slack\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := slack.NewChannel(ctx, \"test_channel\", \u0026slack.ChannelArgs{\n\t\t\tAccountName: pulumi.String(\"foo\"),\n\t\t\tChannelName: pulumi.String(\"#test_channel\"),\n\t\t\tDisplay: \u0026slack.ChannelDisplayArgs{\n\t\t\t\tMessage:  pulumi.Bool(true),\n\t\t\t\tNotified: pulumi.Bool(false),\n\t\t\t\tSnapshot: pulumi.Bool(false),\n\t\t\t\tTags:     pulumi.Bool(true),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.datadog.slack.Channel;\nimport com.pulumi.datadog.slack.ChannelArgs;\nimport com.pulumi.datadog.slack.inputs.ChannelDisplayArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var testChannel = new Channel(\"testChannel\", ChannelArgs.builder()\n            .accountName(\"foo\")\n            .channelName(\"#test_channel\")\n            .display(ChannelDisplayArgs.builder()\n                .message(true)\n                .notified(false)\n                .snapshot(false)\n                .tags(true)\n                .build())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  testChannel:\n    type: datadog:slack:Channel\n    name: test_channel\n    properties:\n      accountName: foo\n      channelName: '#test_channel'\n      display:\n        message: true\n        notified: false\n        snapshot: false\n        tags: true\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\nSlack channel integrations can be imported using their account_name and channel_name separated with a colon (`:`).\n\n```sh\n$ pulumi import datadog:slack/channel:Channel test_channel \"foo:#test_channel\"\n```\n\n",
            "properties": {
                "accountName": {
                    "type": "string",
                    "description": "Slack account name.\n"
                },
                "channelName": {
                    "type": "string",
                    "description": "Slack channel name.\n"
                },
                "display": {
                    "$ref": "#/types/datadog:slack/ChannelDisplay:ChannelDisplay",
                    "description": "Configuration options for what is shown in an alert event message.\n"
                }
            },
            "required": [
                "accountName",
                "channelName",
                "display"
            ],
            "inputProperties": {
                "accountName": {
                    "type": "string",
                    "description": "Slack account name.\n",
                    "willReplaceOnChanges": true
                },
                "channelName": {
                    "type": "string",
                    "description": "Slack channel name.\n"
                },
                "display": {
                    "$ref": "#/types/datadog:slack/ChannelDisplay:ChannelDisplay",
                    "description": "Configuration options for what is shown in an alert event message.\n"
                }
            },
            "requiredInputs": [
                "accountName",
                "channelName",
                "display"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Channel resources.\n",
                "properties": {
                    "accountName": {
                        "type": "string",
                        "description": "Slack account name.\n",
                        "willReplaceOnChanges": true
                    },
                    "channelName": {
                        "type": "string",
                        "description": "Slack channel name.\n"
                    },
                    "display": {
                        "$ref": "#/types/datadog:slack/ChannelDisplay:ChannelDisplay",
                        "description": "Configuration options for what is shown in an alert event message.\n"
                    }
                },
                "type": "object"
            }
        }
    },
    "functions": {
        "datadog:aws/getIntegrationLogsServices:getIntegrationLogsServices": {
            "description": "Use this data source to retrieve all AWS log ready services.\n",
            "outputs": {
                "description": "A collection of values returned by getIntegrationLogsServices.\n",
                "properties": {
                    "awsLogsServices": {
                        "description": "List of AWS log ready services.\n",
                        "items": {
                            "$ref": "#/types/datadog:aws/getIntegrationLogsServicesAwsLogsService:getIntegrationLogsServicesAwsLogsService"
                        },
                        "type": "array"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    }
                },
                "required": [
                    "awsLogsServices",
                    "id"
                ],
                "type": "object"
            }
        },
        "datadog:aws/getIntegrationNamespaceRules:getIntegrationNamespaceRules": {
            "description": "Provides a Datadog AWS Integration Namespace Rules data source. This can be used to retrieve all available namespace rules for a Datadog-AWS integration.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as datadog from \"@pulumi/datadog\";\n\nconst rules = datadog.aws.getIntegrationNamespaceRules({});\n```\n```python\nimport pulumi\nimport pulumi_datadog as datadog\n\nrules = datadog.aws.get_integration_namespace_rules()\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Datadog = Pulumi.Datadog;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var rules = Datadog.Aws.GetIntegrationNamespaceRules.Invoke();\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-datadog/sdk/v4/go/datadog/aws\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aws.GetIntegrationNamespaceRules(ctx, nil, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.datadog.aws.AwsFunctions;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var rules = AwsFunctions.getIntegrationNamespaceRules();\n\n    }\n}\n```\n```yaml\nvariables:\n  rules:\n    fn::invoke:\n      Function: datadog:aws:getIntegrationNamespaceRules\n      Arguments: {}\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "outputs": {
                "description": "A collection of values returned by getIntegrationNamespaceRules.\n",
                "properties": {
                    "id": {
                        "description": "The ID of this resource.\n",
                        "type": "string"
                    },
                    "namespaceRules": {
                        "description": "The list of available namespace rules for a Datadog-AWS integration.\n",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "id",
                    "namespaceRules"
                ],
                "type": "object"
            }
        },
        "datadog:index/getApiKey:getApiKey": {
            "description": "Use this data source to retrieve information about an existing api key. Deprecated. This will be removed in a future release with prior notice. Securely store your API keys using a secret management system or use the datadog.ApiKey resource to manage API keys in your Datadog account.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as datadog from \"@pulumi/datadog\";\n\nconst foo = datadog.getApiKey({\n    name: \"foo-application\",\n});\n```\n```python\nimport pulumi\nimport pulumi_datadog as datadog\n\nfoo = datadog.get_api_key(name=\"foo-application\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Datadog = Pulumi.Datadog;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var foo = Datadog.GetApiKey.Invoke(new()\n    {\n        Name = \"foo-application\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-datadog/sdk/v4/go/datadog\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := datadog.LookupApiKey(ctx, \u0026datadog.LookupApiKeyArgs{\n\t\t\tName: pulumi.StringRef(\"foo-application\"),\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.datadog.DatadogFunctions;\nimport com.pulumi.datadog.inputs.GetApiKeyArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var foo = DatadogFunctions.getApiKey(GetApiKeyArgs.builder()\n            .name(\"foo-application\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  foo:\n    fn::invoke:\n      Function: datadog:getApiKey\n      Arguments:\n        name: foo-application\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getApiKey.\n",
                "properties": {
                    "exactMatch": {
                        "type": "boolean",
                        "description": "Whether to use exact match when searching by name.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The ID of this resource.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name for API Key.\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getApiKey.\n",
                "properties": {
                    "exactMatch": {
                        "description": "Whether to use exact match when searching by name.\n",
                        "type": "boolean"
                    },
                    "id": {
                        "description": "The ID of this resource.\n",
                        "type": "string"
                    },
                    "key": {
                        "description": "The value of the API Key.\n",
                        "secret": true,
                        "type": "string"
                    },
                    "name": {
                        "description": "Name for API Key.\n",
                        "type": "string"
                    }
                },
                "required": [
                    "key"
                ],
                "type": "object"
            }
        },
        "datadog:index/getApmRetentionFiltersOrder:getApmRetentionFiltersOrder": {
            "description": "Provides a Datadog [APM Retention Filters API](https://docs.datadoghq.com/api/v2/apm-retention-filters/) order datasource. This can be used to retrieve APM retention filters order.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as datadog from \"@pulumi/datadog\";\n\nconst foo = datadog.getApmRetentionFiltersOrder({});\n```\n```python\nimport pulumi\nimport pulumi_datadog as datadog\n\nfoo = datadog.get_apm_retention_filters_order()\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Datadog = Pulumi.Datadog;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var foo = Datadog.GetApmRetentionFiltersOrder.Invoke();\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-datadog/sdk/v4/go/datadog\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := datadog.GetApmRetentionFiltersOrder(ctx, nil, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.datadog.DatadogFunctions;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var foo = DatadogFunctions.getApmRetentionFiltersOrder();\n\n    }\n}\n```\n```yaml\nvariables:\n  foo:\n    fn::invoke:\n      Function: datadog:getApmRetentionFiltersOrder\n      Arguments: {}\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "outputs": {
                "description": "A collection of values returned by getApmRetentionFiltersOrder.\n",
                "properties": {
                    "filterIds": {
                        "description": "The filter IDs list. The order of filters IDs in this attribute defines the overall APM retention filters order.\n",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "id": {
                        "description": "The ID of this resource.\n",
                        "type": "string"
                    }
                },
                "required": [
                    "filterIds",
                    "id"
                ],
                "type": "object"
            }
        },
        "datadog:index/getApplicationKey:getApplicationKey": {
            "description": "Use this data source to retrieve information about an existing application key. Deprecated. This will be removed in a future release with prior notice. Securely store your application keys using a secret management system or use the datadog.ApplicationKey resource to manage application keys in your Datadog account.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as datadog from \"@pulumi/datadog\";\n\nconst foo = datadog.getApplicationKey({\n    name: \"foo-application\",\n});\n```\n```python\nimport pulumi\nimport pulumi_datadog as datadog\n\nfoo = datadog.get_application_key(name=\"foo-application\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Datadog = Pulumi.Datadog;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var foo = Datadog.GetApplicationKey.Invoke(new()\n    {\n        Name = \"foo-application\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-datadog/sdk/v4/go/datadog\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := datadog.LookupApplicationKey(ctx, \u0026datadog.LookupApplicationKeyArgs{\n\t\t\tName: pulumi.StringRef(\"foo-application\"),\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.datadog.DatadogFunctions;\nimport com.pulumi.datadog.inputs.GetApplicationKeyArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var foo = DatadogFunctions.getApplicationKey(GetApplicationKeyArgs.builder()\n            .name(\"foo-application\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  foo:\n    fn::invoke:\n      Function: datadog:getApplicationKey\n      Arguments:\n        name: foo-application\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getApplicationKey.\n",
                "properties": {
                    "exactMatch": {
                        "type": "boolean",
                        "description": "Whether to use exact match when searching by name.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "Id for Application Key.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name for Application Key.\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getApplicationKey.\n",
                "properties": {
                    "exactMatch": {
                        "description": "Whether to use exact match when searching by name.\n",
                        "type": "boolean"
                    },
                    "id": {
                        "description": "Id for Application Key.\n",
                        "type": "string"
                    },
                    "key": {
                        "description": "The value of the Application Key.\n",
                        "secret": true,
                        "type": "string"
                    },
                    "name": {
                        "description": "Name for Application Key.\n",
                        "type": "string"
                    }
                },
                "required": [
                    "key"
                ],
                "type": "object"
            }
        },
        "datadog:index/getCloudWorkloadSecurityAgentRules:getCloudWorkloadSecurityAgentRules": {
            "description": "## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as datadog from \"@pulumi/datadog\";\n\nconst test = datadog.getCloudWorkloadSecurityAgentRules({});\n```\n```python\nimport pulumi\nimport pulumi_datadog as datadog\n\ntest = datadog.get_cloud_workload_security_agent_rules()\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Datadog = Pulumi.Datadog;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var test = Datadog.GetCloudWorkloadSecurityAgentRules.Invoke();\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-datadog/sdk/v4/go/datadog\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := datadog.GetCloudWorkloadSecurityAgentRules(ctx, nil, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.datadog.DatadogFunctions;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var test = DatadogFunctions.getCloudWorkloadSecurityAgentRules();\n\n    }\n}\n```\n```yaml\nvariables:\n  test:\n    fn::invoke:\n      Function: datadog:getCloudWorkloadSecurityAgentRules\n      Arguments: {}\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "outputs": {
                "description": "A collection of values returned by getCloudWorkloadSecurityAgentRules.\n",
                "properties": {
                    "agentRules": {
                        "description": "List of Agent rules.\n",
                        "items": {
                            "$ref": "#/types/datadog:index/getCloudWorkloadSecurityAgentRulesAgentRule:getCloudWorkloadSecurityAgentRulesAgentRule"
                        },
                        "type": "array"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    }
                },
                "required": [
                    "agentRules",
                    "id"
                ],
                "type": "object"
            }
        },
        "datadog:index/getCsmThreatsAgentRules:getCsmThreatsAgentRules": {
            "description": "Use this data source to retrieve information about existing Agent rules.\n",
            "outputs": {
                "description": "A collection of values returned by getCsmThreatsAgentRules.\n",
                "properties": {
                    "agentRules": {
                        "description": "List of Agent rules\n",
                        "items": {
                            "$ref": "#/types/datadog:index/getCsmThreatsAgentRulesAgentRule:getCsmThreatsAgentRulesAgentRule"
                        },
                        "type": "array"
                    },
                    "agentRulesIds": {
                        "description": "List of IDs for the Agent rules.\n",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "id": {
                        "description": "The ID of this resource.\n",
                        "type": "string"
                    }
                },
                "required": [
                    "agentRules",
                    "agentRulesIds",
                    "id"
                ],
                "type": "object"
            }
        },
        "datadog:index/getDashboard:getDashboard": {
            "description": "Use this data source to retrieve information about an existing dashboard, for use in other resources. In particular, it can be used in a monitor message to link to a specific dashboard.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as datadog from \"@pulumi/datadog\";\n\nconst test = datadog.getDashboard({\n    name: \"My super dashboard\",\n});\n```\n```python\nimport pulumi\nimport pulumi_datadog as datadog\n\ntest = datadog.get_dashboard(name=\"My super dashboard\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Datadog = Pulumi.Datadog;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var test = Datadog.GetDashboard.Invoke(new()\n    {\n        Name = \"My super dashboard\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-datadog/sdk/v4/go/datadog\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := datadog.LookupDashboard(ctx, \u0026datadog.LookupDashboardArgs{\n\t\t\tName: \"My super dashboard\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.datadog.DatadogFunctions;\nimport com.pulumi.datadog.inputs.GetDashboardArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var test = DatadogFunctions.getDashboard(GetDashboardArgs.builder()\n            .name(\"My super dashboard\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  test:\n    fn::invoke:\n      Function: datadog:getDashboard\n      Arguments:\n        name: My super dashboard\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getDashboard.\n",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The dashboard name to search for. Must only match one dashboard.\n"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getDashboard.\n",
                "properties": {
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "name": {
                        "description": "The dashboard name to search for. Must only match one dashboard.\n",
                        "type": "string"
                    },
                    "title": {
                        "description": "The name of the dashboard.\n",
                        "type": "string"
                    },
                    "url": {
                        "description": "The URL to a specific dashboard.\n",
                        "type": "string"
                    }
                },
                "required": [
                    "name",
                    "title",
                    "url",
                    "id"
                ],
                "type": "object"
            }
        },
        "datadog:index/getDashboardList:getDashboardList": {
            "description": "Use this data source to retrieve information about an existing dashboard list, for use in other resources. In particular, it can be used in a dashboard to register it in the list.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as datadog from \"@pulumi/datadog\";\n\nconst test = datadog.getDashboardList({\n    name: \"My super list\",\n});\n// Create a dashboard and register it in the list above.\nconst time = new datadog.Dashboard(\"time\", {\n    title: \"TF Test Layout Dashboard\",\n    description: \"Created using the Datadog provider in Pulumi\",\n    dashboardLists: [test.then(test =\u003e test.id)],\n    layoutType: \"ordered\",\n    isReadOnly: true,\n    widgets: [{\n        alertGraphDefinition: {\n            alertId: \"1234\",\n            vizType: \"timeseries\",\n            title: \"Widget Title\",\n            liveSpan: \"1h\",\n        },\n    }],\n});\n```\n```python\nimport pulumi\nimport pulumi_datadog as datadog\n\ntest = datadog.get_dashboard_list(name=\"My super list\")\n# Create a dashboard and register it in the list above.\ntime = datadog.Dashboard(\"time\",\n    title=\"TF Test Layout Dashboard\",\n    description=\"Created using the Datadog provider in Pulumi\",\n    dashboard_lists=[test.id],\n    layout_type=\"ordered\",\n    is_read_only=True,\n    widgets=[{\n        \"alert_graph_definition\": {\n            \"alert_id\": \"1234\",\n            \"viz_type\": \"timeseries\",\n            \"title\": \"Widget Title\",\n            \"live_span\": \"1h\",\n        },\n    }])\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Datadog = Pulumi.Datadog;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var test = Datadog.GetDashboardList.Invoke(new()\n    {\n        Name = \"My super list\",\n    });\n\n    // Create a dashboard and register it in the list above.\n    var time = new Datadog.Dashboard(\"time\", new()\n    {\n        Title = \"TF Test Layout Dashboard\",\n        Description = \"Created using the Datadog provider in Pulumi\",\n        DashboardLists = new[]\n        {\n            test.Apply(getDashboardListResult =\u003e getDashboardListResult.Id),\n        },\n        LayoutType = \"ordered\",\n        IsReadOnly = true,\n        Widgets = new[]\n        {\n            new Datadog.Inputs.DashboardWidgetArgs\n            {\n                AlertGraphDefinition = new Datadog.Inputs.DashboardWidgetAlertGraphDefinitionArgs\n                {\n                    AlertId = \"1234\",\n                    VizType = \"timeseries\",\n                    Title = \"Widget Title\",\n                    LiveSpan = \"1h\",\n                },\n            },\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-datadog/sdk/v4/go/datadog\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\ttest, err := datadog.LookupDashboardList(ctx, \u0026datadog.LookupDashboardListArgs{\n\t\t\tName: \"My super list\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t// Create a dashboard and register it in the list above.\n\t\t_, err = datadog.NewDashboard(ctx, \"time\", \u0026datadog.DashboardArgs{\n\t\t\tTitle:       pulumi.String(\"TF Test Layout Dashboard\"),\n\t\t\tDescription: pulumi.String(\"Created using the Datadog provider in Pulumi\"),\n\t\t\tDashboardLists: pulumi.IntArray{\n\t\t\t\tpulumi.String(test.Id),\n\t\t\t},\n\t\t\tLayoutType: pulumi.String(\"ordered\"),\n\t\t\tIsReadOnly: pulumi.Bool(true),\n\t\t\tWidgets: datadog.DashboardWidgetArray{\n\t\t\t\t\u0026datadog.DashboardWidgetArgs{\n\t\t\t\t\tAlertGraphDefinition: \u0026datadog.DashboardWidgetAlertGraphDefinitionArgs{\n\t\t\t\t\t\tAlertId:  pulumi.String(\"1234\"),\n\t\t\t\t\t\tVizType:  pulumi.String(\"timeseries\"),\n\t\t\t\t\t\tTitle:    pulumi.String(\"Widget Title\"),\n\t\t\t\t\t\tLiveSpan: pulumi.String(\"1h\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.datadog.DatadogFunctions;\nimport com.pulumi.datadog.inputs.GetDashboardListArgs;\nimport com.pulumi.datadog.Dashboard;\nimport com.pulumi.datadog.DashboardArgs;\nimport com.pulumi.datadog.inputs.DashboardWidgetArgs;\nimport com.pulumi.datadog.inputs.DashboardWidgetAlertGraphDefinitionArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var test = DatadogFunctions.getDashboardList(GetDashboardListArgs.builder()\n            .name(\"My super list\")\n            .build());\n\n        // Create a dashboard and register it in the list above.\n        var time = new Dashboard(\"time\", DashboardArgs.builder()\n            .title(\"TF Test Layout Dashboard\")\n            .description(\"Created using the Datadog provider in Pulumi\")\n            .dashboardLists(test.applyValue(getDashboardListResult -\u003e getDashboardListResult.id()))\n            .layoutType(\"ordered\")\n            .isReadOnly(true)\n            .widgets(DashboardWidgetArgs.builder()\n                .alertGraphDefinition(DashboardWidgetAlertGraphDefinitionArgs.builder()\n                    .alertId(\"1234\")\n                    .vizType(\"timeseries\")\n                    .title(\"Widget Title\")\n                    .liveSpan(\"1h\")\n                    .build())\n                .build())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  # Create a dashboard and register it in the list above.\n  time:\n    type: datadog:Dashboard\n    properties:\n      title: TF Test Layout Dashboard\n      description: Created using the Datadog provider in Pulumi\n      dashboardLists:\n        - ${test.id}\n      layoutType: ordered\n      isReadOnly: true\n      widgets:\n        - alertGraphDefinition:\n            alertId: '1234'\n            vizType: timeseries\n            title: Widget Title\n            liveSpan: 1h\nvariables:\n  test:\n    fn::invoke:\n      Function: datadog:getDashboardList\n      Arguments:\n        name: My super list\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getDashboardList.\n",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "A dashboard list name to limit the search.\n"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getDashboardList.\n",
                "properties": {
                    "id": {
                        "description": "The ID of this resource.\n",
                        "type": "string"
                    },
                    "name": {
                        "description": "A dashboard list name to limit the search.\n",
                        "type": "string"
                    }
                },
                "required": [
                    "id",
                    "name"
                ],
                "type": "object"
            }
        },
        "datadog:index/getHosts:getHosts": {
            "description": "Use this data source to retrieve information about your live hosts in Datadog.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.datadog.DatadogFunctions;\nimport com.pulumi.datadog.inputs.GetHostsArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var foo = DatadogFunctions.getHosts(GetHostsArgs.builder()\n            .includeMutedHostsData(true)\n            .includeHostsMetadata(true)\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  foo:\n    fn::invoke:\n      Function: datadog:getHosts\n      Arguments:\n        includeMutedHostsData: true\n        includeHostsMetadata: true\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getHosts.\n",
                "properties": {
                    "filter": {
                        "type": "string",
                        "description": "String to filter search results.\n"
                    },
                    "from": {
                        "type": "integer",
                        "description": "Number of seconds since UNIX epoch from which you want to search your hosts.\n"
                    },
                    "includeMutedHostsData": {
                        "type": "boolean",
                        "description": "Include information on the muted status of hosts and when the mute expires.\n"
                    },
                    "sortDir": {
                        "type": "string",
                        "description": "Direction of sort.\n"
                    },
                    "sortField": {
                        "type": "string",
                        "description": "Sort hosts by this field.\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getHosts.\n",
                "properties": {
                    "filter": {
                        "description": "String to filter search results.\n",
                        "type": "string"
                    },
                    "from": {
                        "description": "Number of seconds since UNIX epoch from which you want to search your hosts.\n",
                        "type": "integer"
                    },
                    "hostLists": {
                        "description": "List of hosts (1000 Max).\n",
                        "items": {
                            "$ref": "#/types/datadog:index/getHostsHostList:getHostsHostList"
                        },
                        "type": "array"
                    },
                    "id": {
                        "description": "The ID of this resource.\n",
                        "type": "string"
                    },
                    "includeMutedHostsData": {
                        "description": "Include information on the muted status of hosts and when the mute expires.\n",
                        "type": "boolean"
                    },
                    "sortDir": {
                        "description": "Direction of sort.\n",
                        "type": "string"
                    },
                    "sortField": {
                        "description": "Sort hosts by this field.\n",
                        "type": "string"
                    },
                    "totalMatching": {
                        "description": "Number of host matching the query.\n",
                        "type": "integer"
                    },
                    "totalReturned": {
                        "description": "Number of host returned.\n",
                        "type": "integer"
                    }
                },
                "required": [
                    "hostLists",
                    "id",
                    "totalMatching",
                    "totalReturned"
                ],
                "type": "object"
            }
        },
        "datadog:index/getIpRanges:getIpRanges": {
            "description": "Use this data source to retrieve information about Datadog's IP addresses.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as datadog from \"@pulumi/datadog\";\n\nconst test = datadog.getIpRanges({});\n```\n```python\nimport pulumi\nimport pulumi_datadog as datadog\n\ntest = datadog.get_ip_ranges()\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Datadog = Pulumi.Datadog;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var test = Datadog.GetIpRanges.Invoke();\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-datadog/sdk/v4/go/datadog\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := datadog.GetIpRanges(ctx, nil, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.datadog.DatadogFunctions;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var test = DatadogFunctions.getIpRanges();\n\n    }\n}\n```\n```yaml\nvariables:\n  test:\n    fn::invoke:\n      Function: datadog:getIpRanges\n      Arguments: {}\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "outputs": {
                "description": "A collection of values returned by getIpRanges.\n",
                "properties": {
                    "agentsIpv4s": {
                        "description": "An Array of IPv4 addresses in CIDR format specifying the A records for the Agent endpoint.\n",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "agentsIpv6s": {
                        "description": "An Array of IPv6 addresses in CIDR format specifying the A records for the Agent endpoint.\n",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "apiIpv4s": {
                        "description": "An Array of IPv4 addresses in CIDR format specifying the A records for the API endpoint.\n",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "apiIpv6s": {
                        "description": "An Array of IPv6 addresses in CIDR format specifying the A records for the API endpoint.\n",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "apmIpv4s": {
                        "description": "An Array of IPv4 addresses in CIDR format specifying the A records for the APM endpoint.\n",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "apmIpv6s": {
                        "description": "An Array of IPv6 addresses in CIDR format specifying the A records for the APM endpoint.\n",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "globalIpv4s": {
                        "description": "An Array of IPv4 addresses in CIDR format specifying the A records for all Datadog endpoints.\n",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "globalIpv6s": {
                        "description": "An Array of IPv6 addresses in CIDR format specifying the A records for all Datadog endpoints.\n",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "id": {
                        "description": "The ID of this resource.\n",
                        "type": "string"
                    },
                    "logsIpv4s": {
                        "description": "An Array of IPv4 addresses in CIDR format specifying the A records for the Logs endpoint.\n",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "logsIpv6s": {
                        "description": "An Array of IPv6 addresses in CIDR format specifying the A records for the Logs endpoint.\n",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "orchestratorIpv4s": {
                        "description": "An Array of IPv4 addresses in CIDR format specifying the A records for the Orchestrator endpoint.\n",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "orchestratorIpv6s": {
                        "description": "An Array of IPv6 addresses in CIDR format specifying the A records for the Orchestrator endpoint.\n",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "processIpv4s": {
                        "description": "An Array of IPv4 addresses in CIDR format specifying the A records for the Process endpoint.\n",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "processIpv6s": {
                        "description": "An Array of IPv6 addresses in CIDR format specifying the A records for the Process endpoint.\n",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "syntheticsIpv4ByLocation": {
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "A map of IPv4 prefixes (string of concatenated IPs, delimited by ',') by location.\n",
                        "type": "object"
                    },
                    "syntheticsIpv4s": {
                        "description": "An Array of IPv4 addresses in CIDR format specifying the A records for the Synthetics endpoint.\n",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "syntheticsIpv6ByLocation": {
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "A map of IPv6 prefixes (string of concatenated IPs, delimited by ',') by location.\n",
                        "type": "object"
                    },
                    "syntheticsIpv6s": {
                        "description": "An Array of IPv6 addresses in CIDR format specifying the A records for the Synthetics endpoint.\n",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "webhooksIpv4s": {
                        "description": "An Array of IPv4 addresses in CIDR format specifying the A records for the Webhooks endpoint.\n",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "webhooksIpv6s": {
                        "description": "An Array of IPv6 addresses in CIDR format specifying the A records for the Webhooks endpoint.\n",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "agentsIpv4s",
                    "agentsIpv6s",
                    "apiIpv4s",
                    "apiIpv6s",
                    "apmIpv4s",
                    "apmIpv6s",
                    "globalIpv4s",
                    "globalIpv6s",
                    "id",
                    "logsIpv4s",
                    "logsIpv6s",
                    "orchestratorIpv4s",
                    "orchestratorIpv6s",
                    "processIpv4s",
                    "processIpv6s",
                    "syntheticsIpv4s",
                    "syntheticsIpv4ByLocation",
                    "syntheticsIpv6s",
                    "syntheticsIpv6ByLocation",
                    "webhooksIpv4s",
                    "webhooksIpv6s"
                ],
                "type": "object"
            }
        },
        "datadog:index/getLogsArchivesOrder:getLogsArchivesOrder": {
            "description": "Get the current order of your logs archives.\n",
            "outputs": {
                "description": "A collection of values returned by getLogsArchivesOrder.\n",
                "properties": {
                    "archiveIds": {
                        "description": "The archive IDs list. The order of archive IDs in this attribute defines the overall archive order for logs.\n",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    }
                },
                "required": [
                    "archiveIds",
                    "id"
                ],
                "type": "object"
            }
        },
        "datadog:index/getLogsIndexes:getLogsIndexes": {
            "description": "Use this data source to list several existing logs indexes for use in other resources.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as datadog from \"@pulumi/datadog\";\n\nconst test = datadog.getLogsIndexes({});\n```\n```python\nimport pulumi\nimport pulumi_datadog as datadog\n\ntest = datadog.get_logs_indexes()\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Datadog = Pulumi.Datadog;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var test = Datadog.GetLogsIndexes.Invoke();\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-datadog/sdk/v4/go/datadog\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := datadog.GetLogsIndexes(ctx, nil, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.datadog.DatadogFunctions;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var test = DatadogFunctions.getLogsIndexes();\n\n    }\n}\n```\n```yaml\nvariables:\n  test:\n    fn::invoke:\n      Function: datadog:getLogsIndexes\n      Arguments: {}\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "outputs": {
                "description": "A collection of values returned by getLogsIndexes.\n",
                "properties": {
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "logsIndexes": {
                        "description": "List of logs indexes\n",
                        "items": {
                            "$ref": "#/types/datadog:index/getLogsIndexesLogsIndex:getLogsIndexesLogsIndex"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "logsIndexes",
                    "id"
                ],
                "type": "object"
            }
        },
        "datadog:index/getLogsIndexesOrder:getLogsIndexesOrder": {
            "description": "Get the current order of your log indexes.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as datadog from \"@pulumi/datadog\";\n\nconst test = datadog.getLogsIndexesOrder({});\n```\n```python\nimport pulumi\nimport pulumi_datadog as datadog\n\ntest = datadog.get_logs_indexes_order()\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Datadog = Pulumi.Datadog;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var test = Datadog.GetLogsIndexesOrder.Invoke();\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-datadog/sdk/v4/go/datadog\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := datadog.GetLogsIndexesOrder(ctx, nil, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.datadog.DatadogFunctions;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var test = DatadogFunctions.getLogsIndexesOrder();\n\n    }\n}\n```\n```yaml\nvariables:\n  test:\n    fn::invoke:\n      Function: datadog:getLogsIndexesOrder\n      Arguments: {}\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "outputs": {
                "description": "A collection of values returned by getLogsIndexesOrder.\n",
                "properties": {
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "indexNames": {
                        "description": "Array of strings identifying by their name(s) the index(es) of your organization. Logs are tested against the query filter of each index one by one, following the order of the array. Logs are eventually stored in the first matching index.\n",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "indexNames",
                    "id"
                ],
                "type": "object"
            }
        },
        "datadog:index/getLogsPipelines:getLogsPipelines": {
            "description": "Use this data source to list all existing logs pipelines for use in other resources.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as datadog from \"@pulumi/datadog\";\n\n// Gets all pipelines\nconst pipelines = datadog.getLogsPipelines({});\n// Using data source to set pipeline order\nconst lpo = new datadog.LogsPipelineOrder(\"lpo\", {\n    name: \"lpo\",\n    pipelines: pipelines.then(pipelines =\u003e .map(pipeline =\u003e (pipeline.id))),\n});\n```\n```python\nimport pulumi\nimport pulumi_datadog as datadog\n\n# Gets all pipelines\npipelines = datadog.get_logs_pipelines()\n# Using data source to set pipeline order\nlpo = datadog.LogsPipelineOrder(\"lpo\",\n    name=\"lpo\",\n    pipelines=[pipeline.id for pipeline in pipelines.logs_pipelines])\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Datadog = Pulumi.Datadog;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    // Gets all pipelines\n    var pipelines = Datadog.GetLogsPipelines.Invoke();\n\n    // Using data source to set pipeline order\n    var lpo = new Datadog.LogsPipelineOrder(\"lpo\", new()\n    {\n        Name = \"lpo\",\n        Pipelines = .Select(pipeline =\u003e \n        {\n            return pipeline.Id;\n        }).ToList(),\n    });\n\n});\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getLogsPipelines.\n",
                "properties": {
                    "isReadOnly": {
                        "type": "string",
                        "description": "Filter parameter for retrieved pipelines\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getLogsPipelines.\n",
                "properties": {
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "isReadOnly": {
                        "description": "Filter parameter for retrieved pipelines\n",
                        "type": "string"
                    },
                    "logsPipelines": {
                        "description": "List of logs pipelines\n",
                        "items": {
                            "$ref": "#/types/datadog:index/getLogsPipelinesLogsPipeline:getLogsPipelinesLogsPipeline"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "logsPipelines",
                    "id"
                ],
                "type": "object"
            }
        },
        "datadog:index/getMonitor:getMonitor": {
            "description": "Use this data source to retrieve information about an existing monitor for use in other resources.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as datadog from \"@pulumi/datadog\";\n\nconst test = datadog.getMonitor({\n    nameFilter: \"My awesome monitor\",\n    monitorTagsFilters: [\"foo:bar\"],\n});\n```\n```python\nimport pulumi\nimport pulumi_datadog as datadog\n\ntest = datadog.get_monitor(name_filter=\"My awesome monitor\",\n    monitor_tags_filters=[\"foo:bar\"])\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Datadog = Pulumi.Datadog;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var test = Datadog.GetMonitor.Invoke(new()\n    {\n        NameFilter = \"My awesome monitor\",\n        MonitorTagsFilters = new[]\n        {\n            \"foo:bar\",\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-datadog/sdk/v4/go/datadog\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := datadog.LookupMonitor(ctx, \u0026datadog.LookupMonitorArgs{\n\t\t\tNameFilter: pulumi.StringRef(\"My awesome monitor\"),\n\t\t\tMonitorTagsFilters: []string{\n\t\t\t\t\"foo:bar\",\n\t\t\t},\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.datadog.DatadogFunctions;\nimport com.pulumi.datadog.inputs.GetMonitorArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var test = DatadogFunctions.getMonitor(GetMonitorArgs.builder()\n            .nameFilter(\"My awesome monitor\")\n            .monitorTagsFilters(\"foo:bar\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  test:\n    fn::invoke:\n      Function: datadog:getMonitor\n      Arguments:\n        nameFilter: My awesome monitor\n        monitorTagsFilters:\n          - foo:bar\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getMonitor.\n",
                "properties": {
                    "monitorTagsFilters": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of monitor tags to limit the search. This filters on the tags set on the monitor itself.\n"
                    },
                    "nameFilter": {
                        "type": "string",
                        "description": "A monitor name to limit the search.\n"
                    },
                    "tagsFilters": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of tags to limit the search. This filters on the monitor scope.\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getMonitor.\n",
                "properties": {
                    "enableLogsSample": {
                        "description": "Whether or not a list of log values which triggered the alert is included. This is only used by log monitors.\n",
                        "type": "boolean"
                    },
                    "enableSamples": {
                        "description": "Whether or not a list of samples which triggered the alert is included. This is only used by CI Test and Pipeline monitors.\n",
                        "type": "boolean"
                    },
                    "escalationMessage": {
                        "description": "Message included with a re-notification for this monitor.\n",
                        "type": "string"
                    },
                    "evaluationDelay": {
                        "description": "Time (in seconds) for which evaluation is delayed. This is only used by metric monitors.\n",
                        "type": "integer"
                    },
                    "groupRetentionDuration": {
                        "description": "The time span after which groups with missing data are dropped from the monitor state. The minimum value is one hour, and the maximum value is 72 hours. Example values are: 60m, 1h, and 2d. This option is only available for APM Trace Analytics, Audit Trail, CI, Error Tracking, Event, Logs, and RUM monitors.\n",
                        "type": "string"
                    },
                    "groupbySimpleMonitor": {
                        "description": "Whether or not to trigger one alert if any source breaches a threshold.\n",
                        "type": "boolean"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "includeTags": {
                        "description": "Whether or not notifications from the monitor automatically inserts its triggering tags into the title.\n",
                        "type": "boolean"
                    },
                    "locked": {
                        "description": "Whether or not changes to the monitor are restricted to the creator or admins.\n",
                        "type": "boolean"
                    },
                    "message": {
                        "description": "Message included with notifications for this monitor\n",
                        "type": "string"
                    },
                    "monitorTagsFilters": {
                        "description": "A list of monitor tags to limit the search. This filters on the tags set on the monitor itself.\n",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "monitorThresholdWindows": {
                        "description": "Mapping containing `recovery_window` and `trigger_window` values, e.g. `last_15m`. This is only used by anomaly monitors.\n",
                        "items": {
                            "$ref": "#/types/datadog:index/getMonitorMonitorThresholdWindow:getMonitorMonitorThresholdWindow"
                        },
                        "type": "array"
                    },
                    "monitorThresholds": {
                        "description": "Alert thresholds of the monitor.\n",
                        "items": {
                            "$ref": "#/types/datadog:index/getMonitorMonitorThreshold:getMonitorMonitorThreshold"
                        },
                        "type": "array"
                    },
                    "name": {
                        "description": "Name of the monitor\n",
                        "type": "string"
                    },
                    "nameFilter": {
                        "description": "A monitor name to limit the search.\n",
                        "type": "string"
                    },
                    "newGroupDelay": {
                        "description": "Time (in seconds) to skip evaluations for new groups.\n",
                        "type": "integer"
                    },
                    "newHostDelay": {
                        "description": "Time (in seconds) allowing a host to boot and applications to fully start before starting the evaluation of monitor results.\n",
                        "type": "integer"
                    },
                    "noDataTimeframe": {
                        "description": "The number of minutes before the monitor notifies when data stops reporting.\n",
                        "type": "integer"
                    },
                    "notificationPresetName": {
                        "description": "Toggles the display of additional content sent in the monitor notification. Valid values are: `show_all`, `hide_query`, `hide_handles`, and `hide_all`.\n",
                        "type": "string"
                    },
                    "notifyAudit": {
                        "description": "Whether or not tagged users are notified on changes to the monitor.\n",
                        "type": "boolean"
                    },
                    "notifyBies": {
                        "description": "Controls what granularity a monitor alerts on. Only available for monitors with groupings. For instance, a monitor grouped by `cluster`, `namespace`, and `pod` can be configured to only notify on each new `cluster` violating the alert conditions by setting `notify_by` to `['cluster']`. Tags mentioned in `notify_by` must be a subset of the grouping tags in the query. For example, a query grouped by `cluster` and `namespace` cannot notify on `region`. Setting `notify_by` to `[*]` configures the monitor to notify as a simple-alert.\n",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "notifyNoData": {
                        "description": "Whether or not this monitor notifies when data stops reporting.\n",
                        "type": "boolean"
                    },
                    "onMissingData": {
                        "description": "Controls how groups or monitors are treated if an evaluation does not return any data points. The default option results in different behavior depending on the monitor query type. For monitors using `Count` queries, an empty monitor evaluation is treated as 0 and is compared to the threshold conditions. For monitors using any query type other than `Count`, for example `Gauge`, `Measure`, or `Rate`, the monitor shows the last known status. This option is only available for APM Trace Analytics, Audit Trail, CI, Error Tracking, Event, Logs, and RUM monitors. Valid values are: `show_no_data`, `show_and_notify_no_data`, `resolve`, and `default`.\n",
                        "type": "string"
                    },
                    "query": {
                        "description": "Query of the monitor.\n",
                        "type": "string"
                    },
                    "renotifyInterval": {
                        "description": "The number of minutes after the last notification before the monitor re-notifies on the current status.\n",
                        "type": "integer"
                    },
                    "renotifyOccurrences": {
                        "description": "The number of re-notification messages that should be sent on the current status.\n",
                        "type": "integer"
                    },
                    "renotifyStatuses": {
                        "description": "The types of statuses for which re-notification messages should be sent. Valid values are `alert`, `warn`, `no data`.\n",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "requireFullWindow": {
                        "description": "Whether or not the monitor needs a full window of data before it is evaluated.\n",
                        "type": "boolean"
                    },
                    "restrictedRoles": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "schedulingOptions": {
                        "description": "Configuration options for scheduling.\n",
                        "items": {
                            "$ref": "#/types/datadog:index/getMonitorSchedulingOption:getMonitorSchedulingOption"
                        },
                        "type": "array"
                    },
                    "tags": {
                        "description": "List of tags associated with the monitor.\n",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "tagsFilters": {
                        "description": "A list of tags to limit the search. This filters on the monitor scope.\n",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "timeoutH": {
                        "description": "Number of hours of the monitor not reporting data before it automatically resolves from a triggered state.\n",
                        "type": "integer"
                    },
                    "type": {
                        "description": "Type of the monitor.\n",
                        "type": "string"
                    }
                },
                "required": [
                    "enableLogsSample",
                    "enableSamples",
                    "escalationMessage",
                    "evaluationDelay",
                    "groupRetentionDuration",
                    "groupbySimpleMonitor",
                    "includeTags",
                    "locked",
                    "message",
                    "monitorThresholdWindows",
                    "monitorThresholds",
                    "name",
                    "newGroupDelay",
                    "newHostDelay",
                    "noDataTimeframe",
                    "notificationPresetName",
                    "notifyAudit",
                    "notifyBies",
                    "notifyNoData",
                    "onMissingData",
                    "query",
                    "renotifyInterval",
                    "renotifyOccurrences",
                    "renotifyStatuses",
                    "requireFullWindow",
                    "restrictedRoles",
                    "schedulingOptions",
                    "tags",
                    "timeoutH",
                    "type",
                    "id"
                ],
                "type": "object"
            }
        },
        "datadog:index/getMonitorConfigPolicies:getMonitorConfigPolicies": {
            "description": "Use this data source to list existing monitor config policies for use in other resources.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as datadog from \"@pulumi/datadog\";\n\nconst test = datadog.getMonitorConfigPolicies({});\n```\n```python\nimport pulumi\nimport pulumi_datadog as datadog\n\ntest = datadog.get_monitor_config_policies()\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Datadog = Pulumi.Datadog;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var test = Datadog.GetMonitorConfigPolicies.Invoke();\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-datadog/sdk/v4/go/datadog\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := datadog.GetMonitorConfigPolicies(ctx, nil, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.datadog.DatadogFunctions;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var test = DatadogFunctions.getMonitorConfigPolicies();\n\n    }\n}\n```\n```yaml\nvariables:\n  test:\n    fn::invoke:\n      Function: datadog:getMonitorConfigPolicies\n      Arguments: {}\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "outputs": {
                "description": "A collection of values returned by getMonitorConfigPolicies.\n",
                "properties": {
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "monitorConfigPolicies": {
                        "description": "List of monitor config policies\n",
                        "items": {
                            "$ref": "#/types/datadog:index/getMonitorConfigPoliciesMonitorConfigPolicy:getMonitorConfigPoliciesMonitorConfigPolicy"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "monitorConfigPolicies",
                    "id"
                ],
                "type": "object"
            }
        },
        "datadog:index/getMonitors:getMonitors": {
            "description": "Use this data source to list several existing monitors for use in other resources.\n",
            "inputs": {
                "description": "A collection of arguments for invoking getMonitors.\n",
                "properties": {
                    "monitorTagsFilters": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of monitor tags to limit the search. This filters on the tags set on the monitor itself.\n"
                    },
                    "nameFilter": {
                        "type": "string",
                        "description": "A monitor name to limit the search.\n"
                    },
                    "tagsFilters": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of tags to limit the search. This filters on the monitor scope.\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getMonitors.\n",
                "properties": {
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "monitorTagsFilters": {
                        "description": "A list of monitor tags to limit the search. This filters on the tags set on the monitor itself.\n",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "monitors": {
                        "description": "List of monitors\n",
                        "items": {
                            "$ref": "#/types/datadog:index/getMonitorsMonitor:getMonitorsMonitor"
                        },
                        "type": "array"
                    },
                    "nameFilter": {
                        "description": "A monitor name to limit the search.\n",
                        "type": "string"
                    },
                    "tagsFilters": {
                        "description": "A list of tags to limit the search. This filters on the monitor scope.\n",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "monitors",
                    "id"
                ],
                "type": "object"
            }
        },
        "datadog:index/getPermissions:getPermissions": {
            "description": "Use this data source to retrieve the list of Datadog permissions by name and their corresponding ID, for use in the role resource.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as datadog from \"@pulumi/datadog\";\n\nconst permissions = datadog.getPermissions({});\n```\n```python\nimport pulumi\nimport pulumi_datadog as datadog\n\npermissions = datadog.get_permissions()\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Datadog = Pulumi.Datadog;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var permissions = Datadog.GetPermissions.Invoke();\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-datadog/sdk/v4/go/datadog\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := datadog.GetPermissions(ctx, nil, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.datadog.DatadogFunctions;\nimport com.pulumi.datadog.inputs.GetPermissionsArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var permissions = DatadogFunctions.getPermissions();\n\n    }\n}\n```\n```yaml\nvariables:\n  permissions:\n    fn::invoke:\n      Function: datadog:getPermissions\n      Arguments: {}\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getPermissions.\n",
                "properties": {
                    "includeRestricted": {
                        "type": "boolean",
                        "description": "Whether to include restricted permissions. Restricted permissions are granted by default to all users of a Datadog org, and cannot be manually granted or revoked. Defaults to `false`.\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getPermissions.\n",
                "properties": {
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "includeRestricted": {
                        "description": "Whether to include restricted permissions. Restricted permissions are granted by default to all users of a Datadog org, and cannot be manually granted or revoked. Defaults to `false`.\n",
                        "type": "boolean"
                    },
                    "permissions": {
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "Map of permissions names to their corresponding ID.\n",
                        "type": "object"
                    }
                },
                "required": [
                    "permissions",
                    "id"
                ],
                "type": "object"
            }
        },
        "datadog:index/getPowerpack:getPowerpack": {
            "description": "Use this data source to retrieve information about an existing Datadog Powerpack.\n",
            "inputs": {
                "description": "A collection of arguments for invoking getPowerpack.\n",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The name of the Powerpack to search for.\n"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getPowerpack.\n",
                "properties": {
                    "id": {
                        "description": "The ID of this resource.\n",
                        "type": "string"
                    },
                    "name": {
                        "description": "The name of the Powerpack to search for.\n",
                        "type": "string"
                    }
                },
                "required": [
                    "id",
                    "name"
                ],
                "type": "object"
            }
        },
        "datadog:index/getRole:getRole": {
            "description": "Use this data source to retrieve information about an existing role for use in other resources.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as datadog from \"@pulumi/datadog\";\n\nconst test = datadog.getRole({\n    filter: \"Datadog Standard Role\",\n});\n```\n```python\nimport pulumi\nimport pulumi_datadog as datadog\n\ntest = datadog.get_role(filter=\"Datadog Standard Role\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Datadog = Pulumi.Datadog;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var test = Datadog.GetRole.Invoke(new()\n    {\n        Filter = \"Datadog Standard Role\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-datadog/sdk/v4/go/datadog\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := datadog.LookupRole(ctx, \u0026datadog.LookupRoleArgs{\n\t\t\tFilter: \"Datadog Standard Role\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.datadog.DatadogFunctions;\nimport com.pulumi.datadog.inputs.GetRoleArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var test = DatadogFunctions.getRole(GetRoleArgs.builder()\n            .filter(\"Datadog Standard Role\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  test:\n    fn::invoke:\n      Function: datadog:getRole\n      Arguments:\n        filter: Datadog Standard Role\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getRole.\n",
                "properties": {
                    "filter": {
                        "type": "string",
                        "description": "A string on which to filter the roles.\n"
                    }
                },
                "type": "object",
                "required": [
                    "filter"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getRole.\n",
                "properties": {
                    "filter": {
                        "description": "A string on which to filter the roles.\n",
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "name": {
                        "description": "Name of the role.\n",
                        "type": "string"
                    },
                    "userCount": {
                        "description": "Number of users assigned to this role.\n",
                        "type": "integer"
                    }
                },
                "required": [
                    "filter",
                    "name",
                    "userCount",
                    "id"
                ],
                "type": "object"
            }
        },
        "datadog:index/getRoleUsers:getRoleUsers": {
            "description": "Use this data source to retrieve information about existing Datadog role users assignments. This data source is in beta and is subject to change.\n",
            "inputs": {
                "description": "A collection of arguments for invoking getRoleUsers.\n",
                "properties": {
                    "exactMatch": {
                        "type": "boolean",
                        "description": "When true, `filter_keyword` string is exact matched against the user's `name`.\n"
                    },
                    "filter": {
                        "type": "string",
                        "description": "Search query, can be user name.\n"
                    },
                    "roleId": {
                        "type": "string",
                        "description": "The role's identifier.\n"
                    }
                },
                "type": "object",
                "required": [
                    "roleId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getRoleUsers.\n",
                "properties": {
                    "exactMatch": {
                        "description": "When true, `filter_keyword` string is exact matched against the user's `name`.\n",
                        "type": "boolean"
                    },
                    "filter": {
                        "description": "Search query, can be user name.\n",
                        "type": "string"
                    },
                    "id": {
                        "description": "The ID of this resource.\n",
                        "type": "string"
                    },
                    "roleId": {
                        "description": "The role's identifier.\n",
                        "type": "string"
                    },
                    "roleUsers": {
                        "description": "List of users assigned to role.\n",
                        "items": {
                            "$ref": "#/types/datadog:index/getRoleUsersRoleUser:getRoleUsersRoleUser"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "id",
                    "roleId",
                    "roleUsers"
                ],
                "type": "object"
            }
        },
        "datadog:index/getRoles:getRoles": {
            "description": "Use this data source to retrieve information about multiple roles for use in other resources.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as datadog from \"@pulumi/datadog\";\n\nconst foo = datadog.getRoles({\n    filter: \"Datadog\",\n});\n```\n```python\nimport pulumi\nimport pulumi_datadog as datadog\n\nfoo = datadog.get_roles(filter=\"Datadog\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Datadog = Pulumi.Datadog;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var foo = Datadog.GetRoles.Invoke(new()\n    {\n        Filter = \"Datadog\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-datadog/sdk/v4/go/datadog\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := datadog.GetRoles(ctx, \u0026datadog.GetRolesArgs{\n\t\t\tFilter: pulumi.StringRef(\"Datadog\"),\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.datadog.DatadogFunctions;\nimport com.pulumi.datadog.inputs.GetRolesArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var foo = DatadogFunctions.getRoles(GetRolesArgs.builder()\n            .filter(\"Datadog\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  foo:\n    fn::invoke:\n      Function: datadog:getRoles\n      Arguments:\n        filter: Datadog\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getRoles.\n",
                "properties": {
                    "filter": {
                        "type": "string",
                        "description": "Filter all roles by the given string.\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getRoles.\n",
                "properties": {
                    "filter": {
                        "description": "Filter all roles by the given string.\n",
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "roles": {
                        "description": "List of Roles\n",
                        "items": {
                            "$ref": "#/types/datadog:index/getRolesRole:getRolesRole"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "roles",
                    "id"
                ],
                "type": "object"
            }
        },
        "datadog:index/getRumApplication:getRumApplication": {
            "description": "Use this data source to retrieve a Datadog RUM Application.\n",
            "inputs": {
                "description": "A collection of arguments for invoking getRumApplication.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "ID of the RUM application. Cannot be used with name and type filters.\n"
                    },
                    "nameFilter": {
                        "type": "string",
                        "description": "The name used to search for a RUM application.\n"
                    },
                    "typeFilter": {
                        "type": "string",
                        "description": "The type used to search for a RUM application.\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getRumApplication.\n",
                "properties": {
                    "clientToken": {
                        "description": "The client token.\n",
                        "type": "string"
                    },
                    "id": {
                        "description": "ID of the RUM application. Cannot be used with name and type filters.\n",
                        "type": "string"
                    },
                    "name": {
                        "description": "Name of the RUM application.\n",
                        "type": "string"
                    },
                    "nameFilter": {
                        "description": "The name used to search for a RUM application.\n",
                        "type": "string"
                    },
                    "type": {
                        "description": "Type of the RUM application. Supported values are `browser`, `ios`, `android`, `react-native`, `flutter`.\n",
                        "type": "string"
                    },
                    "typeFilter": {
                        "description": "The type used to search for a RUM application.\n",
                        "type": "string"
                    }
                },
                "required": [
                    "clientToken",
                    "id",
                    "name",
                    "type"
                ],
                "type": "object"
            }
        },
        "datadog:index/getSecurityMonitoringFilters:getSecurityMonitoringFilters": {
            "description": "Use this data source to retrieve information about existing security monitoring filters for use in other resources.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as datadog from \"@pulumi/datadog\";\n\nconst test = datadog.getSecurityMonitoringFilters({});\n```\n```python\nimport pulumi\nimport pulumi_datadog as datadog\n\ntest = datadog.get_security_monitoring_filters()\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Datadog = Pulumi.Datadog;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var test = Datadog.GetSecurityMonitoringFilters.Invoke();\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-datadog/sdk/v4/go/datadog\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := datadog.GetSecurityMonitoringFilters(ctx, nil, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.datadog.DatadogFunctions;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var test = DatadogFunctions.getSecurityMonitoringFilters();\n\n    }\n}\n```\n```yaml\nvariables:\n  test:\n    fn::invoke:\n      Function: datadog:getSecurityMonitoringFilters\n      Arguments: {}\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "outputs": {
                "description": "A collection of values returned by getSecurityMonitoringFilters.\n",
                "properties": {
                    "filters": {
                        "description": "List of filters.\n",
                        "items": {
                            "$ref": "#/types/datadog:index/getSecurityMonitoringFiltersFilter:getSecurityMonitoringFiltersFilter"
                        },
                        "type": "array"
                    },
                    "filtersIds": {
                        "description": "List of IDs of filters.\n",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    }
                },
                "required": [
                    "filters",
                    "filtersIds",
                    "id"
                ],
                "type": "object"
            }
        },
        "datadog:index/getSecurityMonitoringRules:getSecurityMonitoringRules": {
            "description": "Use this data source to retrieve information about existing security monitoring rules for use in other resources.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as datadog from \"@pulumi/datadog\";\n\nconst test = datadog.getSecurityMonitoringRules({\n    nameFilter: \"attack\",\n    tagsFilters: [\"foo:bar\"],\n    defaultOnlyFilter: true,\n});\n```\n```python\nimport pulumi\nimport pulumi_datadog as datadog\n\ntest = datadog.get_security_monitoring_rules(name_filter=\"attack\",\n    tags_filters=[\"foo:bar\"],\n    default_only_filter=True)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Datadog = Pulumi.Datadog;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var test = Datadog.GetSecurityMonitoringRules.Invoke(new()\n    {\n        NameFilter = \"attack\",\n        TagsFilters = new[]\n        {\n            \"foo:bar\",\n        },\n        DefaultOnlyFilter = true,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-datadog/sdk/v4/go/datadog\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := datadog.GetSecurityMonitoringRules(ctx, \u0026datadog.GetSecurityMonitoringRulesArgs{\n\t\t\tNameFilter: pulumi.StringRef(\"attack\"),\n\t\t\tTagsFilters: []string{\n\t\t\t\t\"foo:bar\",\n\t\t\t},\n\t\t\tDefaultOnlyFilter: pulumi.BoolRef(true),\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.datadog.DatadogFunctions;\nimport com.pulumi.datadog.inputs.GetSecurityMonitoringRulesArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var test = DatadogFunctions.getSecurityMonitoringRules(GetSecurityMonitoringRulesArgs.builder()\n            .nameFilter(\"attack\")\n            .tagsFilters(\"foo:bar\")\n            .defaultOnlyFilter(true)\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  test:\n    fn::invoke:\n      Function: datadog:getSecurityMonitoringRules\n      Arguments:\n        nameFilter: attack\n        tagsFilters:\n          - foo:bar\n        defaultOnlyFilter: true\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getSecurityMonitoringRules.\n",
                "properties": {
                    "defaultOnlyFilter": {
                        "type": "boolean",
                        "description": "Limit the search to default rules\n"
                    },
                    "nameFilter": {
                        "type": "string",
                        "description": "A rule name to limit the search\n"
                    },
                    "tagsFilters": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of tags to limit the search\n"
                    },
                    "userOnlyFilter": {
                        "type": "boolean",
                        "description": "Limit the search to user rules\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getSecurityMonitoringRules.\n",
                "properties": {
                    "defaultOnlyFilter": {
                        "description": "Limit the search to default rules\n",
                        "type": "boolean"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "nameFilter": {
                        "description": "A rule name to limit the search\n",
                        "type": "string"
                    },
                    "ruleIds": {
                        "description": "List of IDs of the matched rules.\n",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "rules": {
                        "description": "List of rules.\n",
                        "items": {
                            "$ref": "#/types/datadog:index/getSecurityMonitoringRulesRule:getSecurityMonitoringRulesRule"
                        },
                        "type": "array"
                    },
                    "tagsFilters": {
                        "description": "A list of tags to limit the search\n",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "userOnlyFilter": {
                        "description": "Limit the search to user rules\n",
                        "type": "boolean"
                    }
                },
                "required": [
                    "ruleIds",
                    "rules",
                    "id"
                ],
                "type": "object"
            }
        },
        "datadog:index/getSecurityMonitoringSuppressions:getSecurityMonitoringSuppressions": {
            "description": "Use this data source to retrieve information about existing suppression rules, and use them in other resources.\n",
            "outputs": {
                "description": "A collection of values returned by getSecurityMonitoringSuppressions.\n",
                "properties": {
                    "id": {
                        "description": "The ID of this resource.\n",
                        "type": "string"
                    },
                    "suppressionIds": {
                        "description": "List of IDs of suppressions\n",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "suppressions": {
                        "description": "List of suppressions\n",
                        "items": {
                            "$ref": "#/types/datadog:index/getSecurityMonitoringSuppressionsSuppression:getSecurityMonitoringSuppressionsSuppression"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "id",
                    "suppressionIds",
                    "suppressions"
                ],
                "type": "object"
            }
        },
        "datadog:index/getSensitiveDataScannerGroupOrder:getSensitiveDataScannerGroupOrder": {
            "description": "Provides a Datadog Sensitive Data Scanner Group Order API data source. This can be used to retrieve the order of Datadog Sensitive Data Scanner Groups.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as datadog from \"@pulumi/datadog\";\n\nconst foo = datadog.getSensitiveDataScannerGroupOrder({});\nconst foobar = new datadog.SensitiveDataScannerGroupOrder(\"foobar\", {groupIds: foo.then(foo =\u003e foo.groupIds)});\n```\n```python\nimport pulumi\nimport pulumi_datadog as datadog\n\nfoo = datadog.get_sensitive_data_scanner_group_order()\nfoobar = datadog.SensitiveDataScannerGroupOrder(\"foobar\", group_ids=foo.group_ids)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Datadog = Pulumi.Datadog;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var foo = Datadog.GetSensitiveDataScannerGroupOrder.Invoke();\n\n    var foobar = new Datadog.SensitiveDataScannerGroupOrder(\"foobar\", new()\n    {\n        GroupIds = foo.Apply(getSensitiveDataScannerGroupOrderResult =\u003e getSensitiveDataScannerGroupOrderResult.GroupIds),\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-datadog/sdk/v4/go/datadog\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tfoo, err := datadog.LookupSensitiveDataScannerGroupOrder(ctx, nil, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = datadog.NewSensitiveDataScannerGroupOrder(ctx, \"foobar\", \u0026datadog.SensitiveDataScannerGroupOrderArgs{\n\t\t\tGroupIds: interface{}(foo.GroupIds),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.datadog.DatadogFunctions;\nimport com.pulumi.datadog.SensitiveDataScannerGroupOrder;\nimport com.pulumi.datadog.SensitiveDataScannerGroupOrderArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var foo = DatadogFunctions.getSensitiveDataScannerGroupOrder();\n\n        var foobar = new SensitiveDataScannerGroupOrder(\"foobar\", SensitiveDataScannerGroupOrderArgs.builder()\n            .groupIds(foo.applyValue(getSensitiveDataScannerGroupOrderResult -\u003e getSensitiveDataScannerGroupOrderResult.groupIds()))\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  foobar:\n    type: datadog:SensitiveDataScannerGroupOrder\n    properties:\n      groupIds: ${foo.groupIds}\nvariables:\n  foo:\n    fn::invoke:\n      Function: datadog:getSensitiveDataScannerGroupOrder\n      Arguments: {}\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "outputs": {
                "description": "A collection of values returned by getSensitiveDataScannerGroupOrder.\n",
                "properties": {
                    "groupIds": {
                        "description": "The list of Sensitive Data Scanner group IDs, in order. Logs are tested against the query filter of each index one by one following the order of the list.\n",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "id": {
                        "description": "The ID of this resource.\n",
                        "type": "string"
                    }
                },
                "required": [
                    "groupIds",
                    "id"
                ],
                "type": "object"
            }
        },
        "datadog:index/getSensitiveDataScannerStandardPattern:getSensitiveDataScannerStandardPattern": {
            "description": "Use this data source to retrieve information about an existing sensitive data scanner standard pattern.\n",
            "inputs": {
                "description": "A collection of arguments for invoking getSensitiveDataScannerStandardPattern.\n",
                "properties": {
                    "filter": {
                        "type": "string",
                        "description": "Filter all the Datadog standard patterns by name.\n"
                    }
                },
                "type": "object",
                "required": [
                    "filter"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSensitiveDataScannerStandardPattern.\n",
                "properties": {
                    "filter": {
                        "description": "Filter all the Datadog standard patterns by name.\n",
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "includedKeywords": {
                        "description": "List of recommended keywords to improve rule accuracy.\n",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "name": {
                        "description": "Name of the standard pattern.\n",
                        "type": "string"
                    },
                    "pattern": {
                        "description": "Regex that the standard pattern applies.\n",
                        "type": "string"
                    },
                    "tags": {
                        "description": "List of tags.\n",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "filter",
                    "includedKeywords",
                    "name",
                    "pattern",
                    "tags",
                    "id"
                ],
                "type": "object"
            }
        },
        "datadog:index/getServiceAccount:getServiceAccount": {
            "description": "Use this data source to retrieve information about an existing Datadog service account.\n",
            "inputs": {
                "description": "A collection of arguments for invoking getServiceAccount.\n",
                "properties": {
                    "exactMatch": {
                        "type": "boolean",
                        "description": "When true, `filter` string is exact matched against the user's `email`, followed by `name` attribute.\n"
                    },
                    "filter": {
                        "type": "string",
                        "description": "Filter all users and service accounts by name, email, or role.\n"
                    },
                    "filterStatus": {
                        "type": "string",
                        "description": "Filter on status attribute. Comma separated list, with possible values `Active`, `Pending`, and `Disabled`.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The service account's ID.\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getServiceAccount.\n",
                "properties": {
                    "disabled": {
                        "description": "Whether the user is disabled.\n",
                        "type": "boolean"
                    },
                    "email": {
                        "description": "Email of the user.\n",
                        "type": "string"
                    },
                    "exactMatch": {
                        "description": "When true, `filter` string is exact matched against the user's `email`, followed by `name` attribute.\n",
                        "type": "boolean"
                    },
                    "filter": {
                        "description": "Filter all users and service accounts by name, email, or role.\n",
                        "type": "string"
                    },
                    "filterStatus": {
                        "description": "Filter on status attribute. Comma separated list, with possible values `Active`, `Pending`, and `Disabled`.\n",
                        "type": "string"
                    },
                    "handle": {
                        "description": "Handle of the user.\n",
                        "type": "string"
                    },
                    "icon": {
                        "description": "URL of the user's icon.\n",
                        "type": "string"
                    },
                    "id": {
                        "description": "The service account's ID.\n",
                        "type": "string"
                    },
                    "name": {
                        "description": "Name of the user.\n",
                        "type": "string"
                    },
                    "roles": {
                        "description": "Roles assigned to this service account.\n",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "status": {
                        "description": "Status of the user.\n",
                        "type": "string"
                    },
                    "title": {
                        "description": "Title of the user.\n",
                        "type": "string"
                    },
                    "verified": {
                        "description": "Whether the user is verified.\n",
                        "type": "boolean"
                    }
                },
                "required": [
                    "disabled",
                    "email",
                    "handle",
                    "icon",
                    "id",
                    "name",
                    "roles",
                    "status",
                    "title",
                    "verified"
                ],
                "type": "object"
            }
        },
        "datadog:index/getServiceLevelObjective:getServiceLevelObjective": {
            "description": "Use this data source to retrieve information about an existing SLO for use in other resources.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as datadog from \"@pulumi/datadog\";\n\nconst test = datadog.getServiceLevelObjective({\n    nameQuery: \"My test SLO\",\n    tagsQuery: \"foo:bar\",\n});\nconst apiSlo = datadog.getServiceLevelObjective({\n    id: api.outputs.slo,\n});\n```\n```python\nimport pulumi\nimport pulumi_datadog as datadog\n\ntest = datadog.get_service_level_objective(name_query=\"My test SLO\",\n    tags_query=\"foo:bar\")\napi_slo = datadog.get_service_level_objective(id=api[\"outputs\"][\"slo\"])\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Datadog = Pulumi.Datadog;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var test = Datadog.GetServiceLevelObjective.Invoke(new()\n    {\n        NameQuery = \"My test SLO\",\n        TagsQuery = \"foo:bar\",\n    });\n\n    var apiSlo = Datadog.GetServiceLevelObjective.Invoke(new()\n    {\n        Id = api.Outputs.Slo,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-datadog/sdk/v4/go/datadog\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := datadog.LookupServiceLevelObjective(ctx, \u0026datadog.LookupServiceLevelObjectiveArgs{\n\t\t\tNameQuery: pulumi.StringRef(\"My test SLO\"),\n\t\t\tTagsQuery: pulumi.StringRef(\"foo:bar\"),\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = datadog.LookupServiceLevelObjective(ctx, \u0026datadog.LookupServiceLevelObjectiveArgs{\n\t\t\tId: pulumi.StringRef(api.Outputs.Slo),\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.datadog.DatadogFunctions;\nimport com.pulumi.datadog.inputs.GetServiceLevelObjectiveArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var test = DatadogFunctions.getServiceLevelObjective(GetServiceLevelObjectiveArgs.builder()\n            .nameQuery(\"My test SLO\")\n            .tagsQuery(\"foo:bar\")\n            .build());\n\n        final var apiSlo = DatadogFunctions.getServiceLevelObjective(GetServiceLevelObjectiveArgs.builder()\n            .id(api.outputs().slo())\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  test:\n    fn::invoke:\n      Function: datadog:getServiceLevelObjective\n      Arguments:\n        nameQuery: My test SLO\n        tagsQuery: foo:bar\n  apiSlo:\n    fn::invoke:\n      Function: datadog:getServiceLevelObjective\n      Arguments:\n        id: ${api.outputs.slo}\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getServiceLevelObjective.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "A SLO ID to limit the search.\n"
                    },
                    "metricsQuery": {
                        "type": "string",
                        "description": "Filter results based on SLO numerator and denominator.\n"
                    },
                    "nameQuery": {
                        "type": "string",
                        "description": "Filter results based on SLO names.\n"
                    },
                    "tagsQuery": {
                        "type": "string",
                        "description": "Filter results based on a single SLO tag.\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getServiceLevelObjective.\n",
                "properties": {
                    "description": {
                        "description": "The description of the service level objective.\n",
                        "type": "string"
                    },
                    "id": {
                        "description": "A SLO ID to limit the search.\n",
                        "type": "string"
                    },
                    "metricsQuery": {
                        "description": "Filter results based on SLO numerator and denominator.\n",
                        "type": "string"
                    },
                    "name": {
                        "description": "Name of the Datadog service level objective\n",
                        "type": "string"
                    },
                    "nameQuery": {
                        "description": "Filter results based on SLO names.\n",
                        "type": "string"
                    },
                    "queries": {
                        "description": "The metric query of good / total events\n",
                        "items": {
                            "$ref": "#/types/datadog:index/getServiceLevelObjectiveQuery:getServiceLevelObjectiveQuery"
                        },
                        "type": "array"
                    },
                    "tagsQuery": {
                        "description": "Filter results based on a single SLO tag.\n",
                        "type": "string"
                    },
                    "targetThreshold": {
                        "description": "The primary target threshold of the service level objective.\n",
                        "type": "number"
                    },
                    "timeframe": {
                        "description": "The primary timeframe of the service level objective.\n",
                        "type": "string"
                    },
                    "type": {
                        "description": "The type of the service level objective. The mapping from these types to the types found in the Datadog Web UI can be found in the Datadog API [documentation page](https://docs.datadoghq.com/api/v1/service-level-objectives/#create-a-slo-object). Available values are: `metric` and `monitor`.\n",
                        "type": "string"
                    },
                    "warningThreshold": {
                        "description": "The primary warning threshold of the service level objective.\n",
                        "type": "number"
                    }
                },
                "required": [
                    "description",
                    "name",
                    "queries",
                    "targetThreshold",
                    "timeframe",
                    "type",
                    "warningThreshold"
                ],
                "type": "object"
            }
        },
        "datadog:index/getServiceLevelObjectives:getServiceLevelObjectives": {
            "description": "Use this data source to retrieve information about multiple SLOs for use in other resources.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as datadog from \"@pulumi/datadog\";\n\nconst ftFooSlos = datadog.getServiceLevelObjectives({\n    tagsQuery: \"owner:ft-foo\",\n});\n```\n```python\nimport pulumi\nimport pulumi_datadog as datadog\n\nft_foo_slos = datadog.get_service_level_objectives(tags_query=\"owner:ft-foo\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Datadog = Pulumi.Datadog;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var ftFooSlos = Datadog.GetServiceLevelObjectives.Invoke(new()\n    {\n        TagsQuery = \"owner:ft-foo\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-datadog/sdk/v4/go/datadog\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := datadog.GetServiceLevelObjectives(ctx, \u0026datadog.GetServiceLevelObjectivesArgs{\n\t\t\tTagsQuery: pulumi.StringRef(\"owner:ft-foo\"),\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.datadog.DatadogFunctions;\nimport com.pulumi.datadog.inputs.GetServiceLevelObjectivesArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var ftFooSlos = DatadogFunctions.getServiceLevelObjectives(GetServiceLevelObjectivesArgs.builder()\n            .tagsQuery(\"owner:ft-foo\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  ftFooSlos:\n    fn::invoke:\n      Function: datadog:getServiceLevelObjectives\n      Arguments:\n        tagsQuery: owner:ft-foo\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getServiceLevelObjectives.\n",
                "properties": {
                    "errorOnEmptyResult": {
                        "type": "boolean",
                        "description": "Throw an error if no results are found. Defaults to `true`.\n"
                    },
                    "ids": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "An array of SLO IDs to limit the search.\n"
                    },
                    "metricsQuery": {
                        "type": "string",
                        "description": "Filter results based on SLO numerator and denominator.\n"
                    },
                    "nameQuery": {
                        "type": "string",
                        "description": "Filter results based on SLO names.\n"
                    },
                    "query": {
                        "type": "string",
                        "description": "The query string to filter results based on SLO names. Some examples of queries include service:\\n\\n and \\n\\n.\n"
                    },
                    "tagsQuery": {
                        "type": "string",
                        "description": "Filter results based on a single SLO tag.\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getServiceLevelObjectives.\n",
                "properties": {
                    "errorOnEmptyResult": {
                        "description": "Throw an error if no results are found. Defaults to `true`.\n",
                        "type": "boolean"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "ids": {
                        "description": "An array of SLO IDs to limit the search.\n",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "metricsQuery": {
                        "description": "Filter results based on SLO numerator and denominator.\n",
                        "type": "string"
                    },
                    "nameQuery": {
                        "description": "Filter results based on SLO names.\n",
                        "type": "string"
                    },
                    "query": {
                        "description": "The query string to filter results based on SLO names. Some examples of queries include service:\\n\\n and \\n\\n.\n",
                        "type": "string"
                    },
                    "slos": {
                        "description": "List of SLOs\n",
                        "items": {
                            "$ref": "#/types/datadog:index/getServiceLevelObjectivesSlo:getServiceLevelObjectivesSlo"
                        },
                        "type": "array"
                    },
                    "tagsQuery": {
                        "description": "Filter results based on a single SLO tag.\n",
                        "type": "string"
                    }
                },
                "required": [
                    "slos",
                    "id"
                ],
                "type": "object"
            }
        },
        "datadog:index/getSyntheticsGlobalVariable:getSyntheticsGlobalVariable": {
            "description": "Use this data source to retrieve a Datadog Synthetics global variable (to be used in Synthetics tests).\n",
            "inputs": {
                "description": "A collection of arguments for invoking getSyntheticsGlobalVariable.\n",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The synthetics global variable name to search for. Must only match one global variable.\n"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSyntheticsGlobalVariable.\n",
                "properties": {
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "name": {
                        "description": "The synthetics global variable name to search for. Must only match one global variable.\n",
                        "type": "string"
                    },
                    "tags": {
                        "description": "A list of tags assigned to the Synthetics global variable.\n",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "name",
                    "tags",
                    "id"
                ],
                "type": "object"
            }
        },
        "datadog:index/getSyntheticsLocations:getSyntheticsLocations": {
            "description": "Use this data source to retrieve Datadog's Synthetics Locations (to be used in Synthetics tests).\n\n",
            "outputs": {
                "description": "A collection of values returned by getSyntheticsLocations.\n",
                "properties": {
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "locations": {
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "A map of available Synthetics location IDs to names for Synthetics tests.\n",
                        "type": "object"
                    }
                },
                "required": [
                    "locations",
                    "id"
                ],
                "type": "object"
            }
        },
        "datadog:index/getSyntheticsTest:getSyntheticsTest": {
            "description": "Use this data source to retrieve a Datadog Synthetic Test.\n",
            "inputs": {
                "description": "A collection of arguments for invoking getSyntheticsTest.\n",
                "properties": {
                    "testId": {
                        "type": "string",
                        "description": "The synthetic test id or URL to search for\n"
                    }
                },
                "type": "object",
                "required": [
                    "testId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSyntheticsTest.\n",
                "properties": {
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "name": {
                        "description": "The name of the synthetic test.\n",
                        "type": "string"
                    },
                    "tags": {
                        "description": "A list of tags assigned to the synthetic test.\n",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "testId": {
                        "description": "The synthetic test id or URL to search for\n",
                        "type": "string"
                    },
                    "url": {
                        "description": "The start URL of the synthetic test.\n",
                        "type": "string"
                    }
                },
                "required": [
                    "name",
                    "tags",
                    "testId",
                    "url",
                    "id"
                ],
                "type": "object"
            }
        },
        "datadog:index/getTeam:getTeam": {
            "description": "Use this data source to retrieve information about an existing Datadog team.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as datadog from \"@pulumi/datadog\";\n\nconst foo = datadog.getTeam({\n    teamId: \"e6723c40-edb1-11ed-b816-da7ad0900002\",\n});\n```\n```python\nimport pulumi\nimport pulumi_datadog as datadog\n\nfoo = datadog.get_team(team_id=\"e6723c40-edb1-11ed-b816-da7ad0900002\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Datadog = Pulumi.Datadog;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var foo = Datadog.GetTeam.Invoke(new()\n    {\n        TeamId = \"e6723c40-edb1-11ed-b816-da7ad0900002\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-datadog/sdk/v4/go/datadog\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := datadog.LookupTeam(ctx, \u0026datadog.LookupTeamArgs{\n\t\t\tTeamId: pulumi.StringRef(\"e6723c40-edb1-11ed-b816-da7ad0900002\"),\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.datadog.DatadogFunctions;\nimport com.pulumi.datadog.inputs.GetTeamArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var foo = DatadogFunctions.getTeam(GetTeamArgs.builder()\n            .teamId(\"e6723c40-edb1-11ed-b816-da7ad0900002\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  foo:\n    fn::invoke:\n      Function: datadog:getTeam\n      Arguments:\n        teamId: e6723c40-edb1-11ed-b816-da7ad0900002\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getTeam.\n",
                "properties": {
                    "filterKeyword": {
                        "type": "string",
                        "description": "Search query. Can be team name, team handle, or email of team member.\n"
                    },
                    "teamId": {
                        "type": "string",
                        "description": "The team's identifier.\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getTeam.\n",
                "properties": {
                    "description": {
                        "description": "Free-form markdown description/content for the team's homepage.\n",
                        "type": "string"
                    },
                    "filterKeyword": {
                        "description": "Search query. Can be team name, team handle, or email of team member.\n",
                        "type": "string"
                    },
                    "handle": {
                        "description": "The team's handle.\n",
                        "type": "string"
                    },
                    "id": {
                        "description": "The ID of this resource.\n",
                        "type": "string"
                    },
                    "linkCount": {
                        "description": "The number of links belonging to the team.\n",
                        "type": "integer"
                    },
                    "name": {
                        "description": "The name of the team.\n",
                        "type": "string"
                    },
                    "summary": {
                        "description": "A brief summary of the team, derived from the `description`.\n",
                        "type": "string"
                    },
                    "teamId": {
                        "description": "The team's identifier.\n",
                        "type": "string"
                    },
                    "userCount": {
                        "description": "The number of users belonging to the team.\n",
                        "type": "integer"
                    }
                },
                "required": [
                    "description",
                    "handle",
                    "id",
                    "linkCount",
                    "name",
                    "summary",
                    "teamId",
                    "userCount"
                ],
                "type": "object"
            }
        },
        "datadog:index/getTeamMemberships:getTeamMemberships": {
            "description": "Use this data source to retrieve information about existing Datadog team memberships.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as datadog from \"@pulumi/datadog\";\n\nconst foo = datadog.getTeamMemberships({\n    teamId: \"e6723c40-edb1-11ed-b816-da7ad0900002\",\n    filterKeyword: \"foo@example.com\",\n});\n```\n```python\nimport pulumi\nimport pulumi_datadog as datadog\n\nfoo = datadog.get_team_memberships(team_id=\"e6723c40-edb1-11ed-b816-da7ad0900002\",\n    filter_keyword=\"foo@example.com\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Datadog = Pulumi.Datadog;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var foo = Datadog.GetTeamMemberships.Invoke(new()\n    {\n        TeamId = \"e6723c40-edb1-11ed-b816-da7ad0900002\",\n        FilterKeyword = \"foo@example.com\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-datadog/sdk/v4/go/datadog\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := datadog.GetTeamMemberships(ctx, \u0026datadog.GetTeamMembershipsArgs{\n\t\t\tTeamId:        \"e6723c40-edb1-11ed-b816-da7ad0900002\",\n\t\t\tFilterKeyword: pulumi.StringRef(\"foo@example.com\"),\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.datadog.DatadogFunctions;\nimport com.pulumi.datadog.inputs.GetTeamMembershipsArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var foo = DatadogFunctions.getTeamMemberships(GetTeamMembershipsArgs.builder()\n            .teamId(\"e6723c40-edb1-11ed-b816-da7ad0900002\")\n            .filterKeyword(\"foo@example.com\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  foo:\n    fn::invoke:\n      Function: datadog:getTeamMemberships\n      Arguments:\n        teamId: e6723c40-edb1-11ed-b816-da7ad0900002\n        filterKeyword: foo@example.com\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getTeamMemberships.\n",
                "properties": {
                    "exactMatch": {
                        "type": "boolean",
                        "description": "When true, `filter_keyword` string is exact matched against the user's `email`, followed by `name`.\n"
                    },
                    "filterKeyword": {
                        "type": "string",
                        "description": "Search query, can be user email or name.\n"
                    },
                    "teamId": {
                        "type": "string",
                        "description": "The team's identifier.\n"
                    }
                },
                "type": "object",
                "required": [
                    "teamId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getTeamMemberships.\n",
                "properties": {
                    "exactMatch": {
                        "description": "When true, `filter_keyword` string is exact matched against the user's `email`, followed by `name`.\n",
                        "type": "boolean"
                    },
                    "filterKeyword": {
                        "description": "Search query, can be user email or name.\n",
                        "type": "string"
                    },
                    "id": {
                        "description": "The ID of this resource.\n",
                        "type": "string"
                    },
                    "teamId": {
                        "description": "The team's identifier.\n",
                        "type": "string"
                    },
                    "teamMemberships": {
                        "description": "List of team memberships.\n",
                        "items": {
                            "$ref": "#/types/datadog:index/getTeamMembershipsTeamMembership:getTeamMembershipsTeamMembership"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "id",
                    "teamId",
                    "teamMemberships"
                ],
                "type": "object"
            }
        },
        "datadog:index/getUser:getUser": {
            "description": "Use this data source to retrieve information about an existing user to use it in an other resources.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as datadog from \"@pulumi/datadog\";\n\nconst test = datadog.getUser({\n    filter: \"user.name@company.com\",\n});\n```\n```python\nimport pulumi\nimport pulumi_datadog as datadog\n\ntest = datadog.get_user(filter=\"user.name@company.com\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Datadog = Pulumi.Datadog;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var test = Datadog.GetUser.Invoke(new()\n    {\n        Filter = \"user.name@company.com\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-datadog/sdk/v4/go/datadog\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := datadog.LookupUser(ctx, \u0026datadog.LookupUserArgs{\n\t\t\tFilter: \"user.name@company.com\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.datadog.DatadogFunctions;\nimport com.pulumi.datadog.inputs.GetUserArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var test = DatadogFunctions.getUser(GetUserArgs.builder()\n            .filter(\"user.name@company.com\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  test:\n    fn::invoke:\n      Function: datadog:getUser\n      Arguments:\n        filter: user.name@company.com\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getUser.\n",
                "properties": {
                    "exactMatch": {
                        "type": "boolean",
                        "description": "When true, `filter` string is exact matched against the user's `email`, followed by `name` attribute. Defaults to `false`.\n"
                    },
                    "filter": {
                        "type": "string",
                        "description": "Filter all users by the given string.\n"
                    }
                },
                "type": "object",
                "required": [
                    "filter"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getUser.\n",
                "properties": {
                    "email": {
                        "description": "Email of the user.\n",
                        "type": "string"
                    },
                    "exactMatch": {
                        "description": "When true, `filter` string is exact matched against the user's `email`, followed by `name` attribute. Defaults to `false`.\n",
                        "type": "boolean"
                    },
                    "filter": {
                        "description": "Filter all users by the given string.\n",
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "name": {
                        "description": "Name of the user.\n",
                        "type": "string"
                    }
                },
                "required": [
                    "email",
                    "filter",
                    "name",
                    "id"
                ],
                "type": "object"
            }
        },
        "datadog:index/getUsers:getUsers": {
            "description": "Use this data source to retrieve information about existing users for use in other resources.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as datadog from \"@pulumi/datadog\";\n\nconst test = datadog.getUsers({\n    filter: \"user.name@company.com\",\n    filterStatus: \"Active,Pending\",\n});\n```\n```python\nimport pulumi\nimport pulumi_datadog as datadog\n\ntest = datadog.get_users(filter=\"user.name@company.com\",\n    filter_status=\"Active,Pending\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Datadog = Pulumi.Datadog;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var test = Datadog.GetUsers.Invoke(new()\n    {\n        Filter = \"user.name@company.com\",\n        FilterStatus = \"Active,Pending\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-datadog/sdk/v4/go/datadog\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := datadog.GetUsers(ctx, \u0026datadog.GetUsersArgs{\n\t\t\tFilter:       pulumi.StringRef(\"user.name@company.com\"),\n\t\t\tFilterStatus: pulumi.StringRef(\"Active,Pending\"),\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.datadog.DatadogFunctions;\nimport com.pulumi.datadog.inputs.GetUsersArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var test = DatadogFunctions.getUsers(GetUsersArgs.builder()\n            .filter(\"user.name@company.com\")\n            .filterStatus(\"Active,Pending\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  test:\n    fn::invoke:\n      Function: datadog:getUsers\n      Arguments:\n        filter: user.name@company.com\n        filterStatus: Active,Pending\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getUsers.\n",
                "properties": {
                    "filter": {
                        "type": "string",
                        "description": "Filter all users by the given string.\n"
                    },
                    "filterStatus": {
                        "type": "string",
                        "description": "Filter on status attribute. Comma-separated list with possible values of Active, Pending, and Disabled.\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getUsers.\n",
                "properties": {
                    "filter": {
                        "description": "Filter all users by the given string.\n",
                        "type": "string"
                    },
                    "filterStatus": {
                        "description": "Filter on status attribute. Comma-separated list with possible values of Active, Pending, and Disabled.\n",
                        "type": "string"
                    },
                    "id": {
                        "description": "The ID of this resource.\n",
                        "type": "string"
                    },
                    "users": {
                        "description": "List of users\n",
                        "items": {
                            "$ref": "#/types/datadog:index/getUsersUser:getUsersUser"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "id",
                    "users"
                ],
                "type": "object"
            }
        }
    }
}