{
    "name": "datadog",
    "description": "A Pulumi package for creating and managing Datadog resources.",
    "keywords": [
        "pulumi",
        "datadog"
    ],
    "homepage": "https://pulumi.io",
    "license": "Apache-2.0",
    "attribution": "This Pulumi package is based on the [`datadog` Terraform Provider](https://github.com/terraform-providers/terraform-provider-datadog).",
    "repository": "https://github.com/pulumi/pulumi-datadog",
    "meta": {
        "moduleFormat": "(.*)(?:/[^/]*)"
    },
    "config": {
        "variables": {
            "apiKey": {
                "type": "string",
                "defaultInfo": {
                    "environment": [
                        "DATADOG_API_KEY"
                    ]
                }
            },
            "apiUrl": {
                "type": "string",
                "defaultInfo": {
                    "environment": [
                        "DATADOG_HOST"
                    ]
                }
            },
            "appKey": {
                "type": "string",
                "defaultInfo": {
                    "environment": [
                        "DATADOG_APP_KEY"
                    ]
                }
            }
        },
        "defaults": [
            "apiKey",
            "appKey"
        ]
    },
    "types": {
        "datadog:/DashboardListDashItem:DashboardListDashItem": {
            "properties": {
                "dashId": {
                    "type": "string",
                    "description": "The ID of this dashboard.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "description": "The type of this dashboard. Available options are: `custom_timeboard`, `custom_screenboard`, `integration_screenboard`, `integration_timeboard`, and `host_timeboard`\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "dashId",
                "type"
            ]
        },
        "datadog:/DashboardTemplateVariable:DashboardTemplateVariable": {
            "properties": {
                "default": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "prefix": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "name"
            ]
        },
        "datadog:/DashboardTemplateVariablePreset:DashboardTemplateVariablePreset": {
            "properties": {
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "templateVariables": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardTemplateVariablePresetTemplateVariable:DashboardTemplateVariablePresetTemplateVariable"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "name",
                "templateVariables"
            ]
        },
        "datadog:/DashboardTemplateVariablePresetTemplateVariable:DashboardTemplateVariablePresetTemplateVariable": {
            "properties": {
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "name",
                "value"
            ]
        },
        "datadog:/DashboardWidget:DashboardWidget": {
            "properties": {
                "alertGraphDefinition": {
                    "$ref": "#/types/datadog:/DashboardWidgetAlertGraphDefinition:DashboardWidgetAlertGraphDefinition",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "alertValueDefinition": {
                    "$ref": "#/types/datadog:/DashboardWidgetAlertValueDefinition:DashboardWidgetAlertValueDefinition",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "changeDefinition": {
                    "$ref": "#/types/datadog:/DashboardWidgetChangeDefinition:DashboardWidgetChangeDefinition",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "checkStatusDefinition": {
                    "$ref": "#/types/datadog:/DashboardWidgetCheckStatusDefinition:DashboardWidgetCheckStatusDefinition",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "distributionDefinition": {
                    "$ref": "#/types/datadog:/DashboardWidgetDistributionDefinition:DashboardWidgetDistributionDefinition",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "eventStreamDefinition": {
                    "$ref": "#/types/datadog:/DashboardWidgetEventStreamDefinition:DashboardWidgetEventStreamDefinition",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "eventTimelineDefinition": {
                    "$ref": "#/types/datadog:/DashboardWidgetEventTimelineDefinition:DashboardWidgetEventTimelineDefinition",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "freeTextDefinition": {
                    "$ref": "#/types/datadog:/DashboardWidgetFreeTextDefinition:DashboardWidgetFreeTextDefinition",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupDefinition": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinition:DashboardWidgetGroupDefinition",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "heatmapDefinition": {
                    "$ref": "#/types/datadog:/DashboardWidgetHeatmapDefinition:DashboardWidgetHeatmapDefinition",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "hostmapDefinition": {
                    "$ref": "#/types/datadog:/DashboardWidgetHostmapDefinition:DashboardWidgetHostmapDefinition",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "iframeDefinition": {
                    "$ref": "#/types/datadog:/DashboardWidgetIframeDefinition:DashboardWidgetIframeDefinition",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "imageDefinition": {
                    "$ref": "#/types/datadog:/DashboardWidgetImageDefinition:DashboardWidgetImageDefinition",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "layout": {
                    "$ref": "#/types/datadog:/DashboardWidgetLayout:DashboardWidgetLayout",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logStreamDefinition": {
                    "$ref": "#/types/datadog:/DashboardWidgetLogStreamDefinition:DashboardWidgetLogStreamDefinition",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "manageStatusDefinition": {
                    "$ref": "#/types/datadog:/DashboardWidgetManageStatusDefinition:DashboardWidgetManageStatusDefinition",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "noteDefinition": {
                    "$ref": "#/types/datadog:/DashboardWidgetNoteDefinition:DashboardWidgetNoteDefinition",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "queryTableDefinition": {
                    "$ref": "#/types/datadog:/DashboardWidgetQueryTableDefinition:DashboardWidgetQueryTableDefinition",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "queryValueDefinition": {
                    "$ref": "#/types/datadog:/DashboardWidgetQueryValueDefinition:DashboardWidgetQueryValueDefinition",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "scatterplotDefinition": {
                    "$ref": "#/types/datadog:/DashboardWidgetScatterplotDefinition:DashboardWidgetScatterplotDefinition",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "serviceLevelObjectiveDefinition": {
                    "$ref": "#/types/datadog:/DashboardWidgetServiceLevelObjectiveDefinition:DashboardWidgetServiceLevelObjectiveDefinition",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "timeseriesDefinition": {
                    "$ref": "#/types/datadog:/DashboardWidgetTimeseriesDefinition:DashboardWidgetTimeseriesDefinition",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "toplistDefinition": {
                    "$ref": "#/types/datadog:/DashboardWidgetToplistDefinition:DashboardWidgetToplistDefinition",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "traceServiceDefinition": {
                    "$ref": "#/types/datadog:/DashboardWidgetTraceServiceDefinition:DashboardWidgetTraceServiceDefinition",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetAlertGraphDefinition:DashboardWidgetAlertGraphDefinition": {
            "properties": {
                "alertId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "time": {
                    "$ref": "#/types/datadog:/DashboardWidgetAlertGraphDefinitionTime:DashboardWidgetAlertGraphDefinitionTime",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "title": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleAlign": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "vizType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "alertId",
                "vizType"
            ]
        },
        "datadog:/DashboardWidgetAlertGraphDefinitionTime:DashboardWidgetAlertGraphDefinitionTime": {
            "properties": {
                "liveSpan": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetAlertValueDefinition:DashboardWidgetAlertValueDefinition": {
            "properties": {
                "alertId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "precision": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "textAlign": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "title": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleAlign": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unit": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "alertId"
            ]
        },
        "datadog:/DashboardWidgetChangeDefinition:DashboardWidgetChangeDefinition": {
            "properties": {
                "requests": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetChangeDefinitionRequest:DashboardWidgetChangeDefinitionRequest"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "time": {
                    "$ref": "#/types/datadog:/DashboardWidgetChangeDefinitionTime:DashboardWidgetChangeDefinitionTime",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "title": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleAlign": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetChangeDefinitionRequest:DashboardWidgetChangeDefinitionRequest": {
            "properties": {
                "apmQuery": {
                    "$ref": "#/types/datadog:/DashboardWidgetChangeDefinitionRequestApmQuery:DashboardWidgetChangeDefinitionRequestApmQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "changeType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "compareTo": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "increaseGood": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logQuery": {
                    "$ref": "#/types/datadog:/DashboardWidgetChangeDefinitionRequestLogQuery:DashboardWidgetChangeDefinitionRequestLogQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "orderBy": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "orderDir": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "processQuery": {
                    "$ref": "#/types/datadog:/DashboardWidgetChangeDefinitionRequestProcessQuery:DashboardWidgetChangeDefinitionRequestProcessQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "q": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "showPresent": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetChangeDefinitionRequestApmQuery:DashboardWidgetChangeDefinitionRequestApmQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:/DashboardWidgetChangeDefinitionRequestApmQueryCompute:DashboardWidgetChangeDefinitionRequestApmQueryCompute",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetChangeDefinitionRequestApmQueryGroupBy:DashboardWidgetChangeDefinitionRequestApmQueryGroupBy"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:/DashboardWidgetChangeDefinitionRequestApmQuerySearch:DashboardWidgetChangeDefinitionRequestApmQuerySearch",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "compute",
                "index"
            ]
        },
        "datadog:/DashboardWidgetChangeDefinitionRequestApmQueryCompute:DashboardWidgetChangeDefinitionRequestApmQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:/DashboardWidgetChangeDefinitionRequestApmQueryGroupBy:DashboardWidgetChangeDefinitionRequestApmQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:/DashboardWidgetChangeDefinitionRequestApmQueryGroupBySort:DashboardWidgetChangeDefinitionRequestApmQueryGroupBySort",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetChangeDefinitionRequestApmQueryGroupBySort:DashboardWidgetChangeDefinitionRequestApmQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:/DashboardWidgetChangeDefinitionRequestApmQuerySearch:DashboardWidgetChangeDefinitionRequestApmQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:/DashboardWidgetChangeDefinitionRequestLogQuery:DashboardWidgetChangeDefinitionRequestLogQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:/DashboardWidgetChangeDefinitionRequestLogQueryCompute:DashboardWidgetChangeDefinitionRequestLogQueryCompute",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetChangeDefinitionRequestLogQueryGroupBy:DashboardWidgetChangeDefinitionRequestLogQueryGroupBy"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:/DashboardWidgetChangeDefinitionRequestLogQuerySearch:DashboardWidgetChangeDefinitionRequestLogQuerySearch",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "compute",
                "index"
            ]
        },
        "datadog:/DashboardWidgetChangeDefinitionRequestLogQueryCompute:DashboardWidgetChangeDefinitionRequestLogQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:/DashboardWidgetChangeDefinitionRequestLogQueryGroupBy:DashboardWidgetChangeDefinitionRequestLogQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:/DashboardWidgetChangeDefinitionRequestLogQueryGroupBySort:DashboardWidgetChangeDefinitionRequestLogQueryGroupBySort",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetChangeDefinitionRequestLogQueryGroupBySort:DashboardWidgetChangeDefinitionRequestLogQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:/DashboardWidgetChangeDefinitionRequestLogQuerySearch:DashboardWidgetChangeDefinitionRequestLogQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:/DashboardWidgetChangeDefinitionRequestProcessQuery:DashboardWidgetChangeDefinitionRequestProcessQuery": {
            "properties": {
                "filterBies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "metric": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchBy": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "metric"
            ]
        },
        "datadog:/DashboardWidgetChangeDefinitionTime:DashboardWidgetChangeDefinitionTime": {
            "properties": {
                "liveSpan": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetCheckStatusDefinition:DashboardWidgetCheckStatusDefinition": {
            "properties": {
                "check": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "group": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "grouping": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "time": {
                    "$ref": "#/types/datadog:/DashboardWidgetCheckStatusDefinitionTime:DashboardWidgetCheckStatusDefinitionTime",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "title": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleAlign": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "check",
                "grouping"
            ]
        },
        "datadog:/DashboardWidgetCheckStatusDefinitionTime:DashboardWidgetCheckStatusDefinitionTime": {
            "properties": {
                "liveSpan": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetDistributionDefinition:DashboardWidgetDistributionDefinition": {
            "properties": {
                "requests": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetDistributionDefinitionRequest:DashboardWidgetDistributionDefinitionRequest"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "time": {
                    "$ref": "#/types/datadog:/DashboardWidgetDistributionDefinitionTime:DashboardWidgetDistributionDefinitionTime",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "title": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleAlign": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetDistributionDefinitionRequest:DashboardWidgetDistributionDefinitionRequest": {
            "properties": {
                "apmQuery": {
                    "$ref": "#/types/datadog:/DashboardWidgetDistributionDefinitionRequestApmQuery:DashboardWidgetDistributionDefinitionRequestApmQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logQuery": {
                    "$ref": "#/types/datadog:/DashboardWidgetDistributionDefinitionRequestLogQuery:DashboardWidgetDistributionDefinitionRequestLogQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "processQuery": {
                    "$ref": "#/types/datadog:/DashboardWidgetDistributionDefinitionRequestProcessQuery:DashboardWidgetDistributionDefinitionRequestProcessQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "q": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "style": {
                    "$ref": "#/types/datadog:/DashboardWidgetDistributionDefinitionRequestStyle:DashboardWidgetDistributionDefinitionRequestStyle",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetDistributionDefinitionRequestApmQuery:DashboardWidgetDistributionDefinitionRequestApmQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:/DashboardWidgetDistributionDefinitionRequestApmQueryCompute:DashboardWidgetDistributionDefinitionRequestApmQueryCompute",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetDistributionDefinitionRequestApmQueryGroupBy:DashboardWidgetDistributionDefinitionRequestApmQueryGroupBy"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:/DashboardWidgetDistributionDefinitionRequestApmQuerySearch:DashboardWidgetDistributionDefinitionRequestApmQuerySearch",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "compute",
                "index"
            ]
        },
        "datadog:/DashboardWidgetDistributionDefinitionRequestApmQueryCompute:DashboardWidgetDistributionDefinitionRequestApmQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:/DashboardWidgetDistributionDefinitionRequestApmQueryGroupBy:DashboardWidgetDistributionDefinitionRequestApmQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:/DashboardWidgetDistributionDefinitionRequestApmQueryGroupBySort:DashboardWidgetDistributionDefinitionRequestApmQueryGroupBySort",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetDistributionDefinitionRequestApmQueryGroupBySort:DashboardWidgetDistributionDefinitionRequestApmQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:/DashboardWidgetDistributionDefinitionRequestApmQuerySearch:DashboardWidgetDistributionDefinitionRequestApmQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:/DashboardWidgetDistributionDefinitionRequestLogQuery:DashboardWidgetDistributionDefinitionRequestLogQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:/DashboardWidgetDistributionDefinitionRequestLogQueryCompute:DashboardWidgetDistributionDefinitionRequestLogQueryCompute",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetDistributionDefinitionRequestLogQueryGroupBy:DashboardWidgetDistributionDefinitionRequestLogQueryGroupBy"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:/DashboardWidgetDistributionDefinitionRequestLogQuerySearch:DashboardWidgetDistributionDefinitionRequestLogQuerySearch",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "compute",
                "index"
            ]
        },
        "datadog:/DashboardWidgetDistributionDefinitionRequestLogQueryCompute:DashboardWidgetDistributionDefinitionRequestLogQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:/DashboardWidgetDistributionDefinitionRequestLogQueryGroupBy:DashboardWidgetDistributionDefinitionRequestLogQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:/DashboardWidgetDistributionDefinitionRequestLogQueryGroupBySort:DashboardWidgetDistributionDefinitionRequestLogQueryGroupBySort",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetDistributionDefinitionRequestLogQueryGroupBySort:DashboardWidgetDistributionDefinitionRequestLogQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:/DashboardWidgetDistributionDefinitionRequestLogQuerySearch:DashboardWidgetDistributionDefinitionRequestLogQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:/DashboardWidgetDistributionDefinitionRequestProcessQuery:DashboardWidgetDistributionDefinitionRequestProcessQuery": {
            "properties": {
                "filterBies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "metric": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchBy": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "metric"
            ]
        },
        "datadog:/DashboardWidgetDistributionDefinitionRequestStyle:DashboardWidgetDistributionDefinitionRequestStyle": {
            "properties": {
                "palette": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetDistributionDefinitionTime:DashboardWidgetDistributionDefinitionTime": {
            "properties": {
                "liveSpan": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetEventStreamDefinition:DashboardWidgetEventStreamDefinition": {
            "properties": {
                "eventSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "time": {
                    "$ref": "#/types/datadog:/DashboardWidgetEventStreamDefinitionTime:DashboardWidgetEventStreamDefinitionTime",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "title": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleAlign": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:/DashboardWidgetEventStreamDefinitionTime:DashboardWidgetEventStreamDefinitionTime": {
            "properties": {
                "liveSpan": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetEventTimelineDefinition:DashboardWidgetEventTimelineDefinition": {
            "properties": {
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "time": {
                    "$ref": "#/types/datadog:/DashboardWidgetEventTimelineDefinitionTime:DashboardWidgetEventTimelineDefinitionTime",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "title": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleAlign": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:/DashboardWidgetEventTimelineDefinitionTime:DashboardWidgetEventTimelineDefinitionTime": {
            "properties": {
                "liveSpan": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetFreeTextDefinition:DashboardWidgetFreeTextDefinition": {
            "properties": {
                "color": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "fontSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "text": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "textAlign": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "text"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinition:DashboardWidgetGroupDefinition": {
            "properties": {
                "layoutType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "title": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "widgets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidget:DashboardWidgetGroupDefinitionWidget"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "layoutType",
                "widgets"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidget:DashboardWidgetGroupDefinitionWidget": {
            "properties": {
                "alertGraphDefinition": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetAlertGraphDefinition:DashboardWidgetGroupDefinitionWidgetAlertGraphDefinition",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "alertValueDefinition": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetAlertValueDefinition:DashboardWidgetGroupDefinitionWidgetAlertValueDefinition",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "changeDefinition": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetChangeDefinition:DashboardWidgetGroupDefinitionWidgetChangeDefinition",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "checkStatusDefinition": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetCheckStatusDefinition:DashboardWidgetGroupDefinitionWidgetCheckStatusDefinition",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "distributionDefinition": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetDistributionDefinition:DashboardWidgetGroupDefinitionWidgetDistributionDefinition",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "eventStreamDefinition": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetEventStreamDefinition:DashboardWidgetGroupDefinitionWidgetEventStreamDefinition",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "eventTimelineDefinition": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetEventTimelineDefinition:DashboardWidgetGroupDefinitionWidgetEventTimelineDefinition",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "freeTextDefinition": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetFreeTextDefinition:DashboardWidgetGroupDefinitionWidgetFreeTextDefinition",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "heatmapDefinition": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetHeatmapDefinition:DashboardWidgetGroupDefinitionWidgetHeatmapDefinition",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "hostmapDefinition": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetHostmapDefinition:DashboardWidgetGroupDefinitionWidgetHostmapDefinition",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "iframeDefinition": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetIframeDefinition:DashboardWidgetGroupDefinitionWidgetIframeDefinition",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "imageDefinition": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetImageDefinition:DashboardWidgetGroupDefinitionWidgetImageDefinition",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "layout": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetLayout:DashboardWidgetGroupDefinitionWidgetLayout",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logStreamDefinition": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetLogStreamDefinition:DashboardWidgetGroupDefinitionWidgetLogStreamDefinition",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "manageStatusDefinition": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetManageStatusDefinition:DashboardWidgetGroupDefinitionWidgetManageStatusDefinition",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "noteDefinition": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetNoteDefinition:DashboardWidgetGroupDefinitionWidgetNoteDefinition",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "queryTableDefinition": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetQueryTableDefinition:DashboardWidgetGroupDefinitionWidgetQueryTableDefinition",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "queryValueDefinition": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetQueryValueDefinition:DashboardWidgetGroupDefinitionWidgetQueryValueDefinition",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "scatterplotDefinition": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetScatterplotDefinition:DashboardWidgetGroupDefinitionWidgetScatterplotDefinition",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "serviceLevelObjectiveDefinition": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetServiceLevelObjectiveDefinition:DashboardWidgetGroupDefinitionWidgetServiceLevelObjectiveDefinition",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "timeseriesDefinition": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinition:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinition",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "toplistDefinition": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetToplistDefinition:DashboardWidgetGroupDefinitionWidgetToplistDefinition",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "traceServiceDefinition": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetTraceServiceDefinition:DashboardWidgetGroupDefinitionWidgetTraceServiceDefinition",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetAlertGraphDefinition:DashboardWidgetGroupDefinitionWidgetAlertGraphDefinition": {
            "properties": {
                "alertId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "time": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetAlertGraphDefinitionTime:DashboardWidgetGroupDefinitionWidgetAlertGraphDefinitionTime",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "title": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleAlign": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "vizType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "alertId",
                "vizType"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetAlertGraphDefinitionTime:DashboardWidgetGroupDefinitionWidgetAlertGraphDefinitionTime": {
            "properties": {
                "liveSpan": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetAlertValueDefinition:DashboardWidgetGroupDefinitionWidgetAlertValueDefinition": {
            "properties": {
                "alertId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "precision": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "textAlign": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "title": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleAlign": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unit": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "alertId"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetChangeDefinition:DashboardWidgetGroupDefinitionWidgetChangeDefinition": {
            "properties": {
                "requests": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequest:DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequest"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "time": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetChangeDefinitionTime:DashboardWidgetGroupDefinitionWidgetChangeDefinitionTime",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "title": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleAlign": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequest:DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequest": {
            "properties": {
                "apmQuery": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestApmQuery:DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestApmQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "changeType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "compareTo": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "increaseGood": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logQuery": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestLogQuery:DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestLogQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "orderBy": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "orderDir": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "processQuery": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestProcessQuery:DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestProcessQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "q": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "showPresent": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestApmQuery:DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestApmQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestApmQueryCompute:DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestApmQueryCompute",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestApmQueryGroupBy:DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestApmQueryGroupBy"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestApmQuerySearch:DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestApmQuerySearch",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "compute",
                "index"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestApmQueryCompute:DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestApmQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestApmQueryGroupBy:DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestApmQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestApmQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestApmQueryGroupBySort",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestApmQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestApmQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestApmQuerySearch:DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestApmQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestLogQuery:DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestLogQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestLogQueryCompute:DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestLogQueryCompute",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestLogQueryGroupBy:DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestLogQueryGroupBy"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestLogQuerySearch:DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestLogQuerySearch",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "compute",
                "index"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestLogQueryCompute:DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestLogQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestLogQueryGroupBy:DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestLogQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestLogQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestLogQueryGroupBySort",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestLogQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestLogQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestLogQuerySearch:DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestLogQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestProcessQuery:DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestProcessQuery": {
            "properties": {
                "filterBies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "metric": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchBy": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "metric"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetChangeDefinitionTime:DashboardWidgetGroupDefinitionWidgetChangeDefinitionTime": {
            "properties": {
                "liveSpan": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetCheckStatusDefinition:DashboardWidgetGroupDefinitionWidgetCheckStatusDefinition": {
            "properties": {
                "check": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "group": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "grouping": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "time": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetCheckStatusDefinitionTime:DashboardWidgetGroupDefinitionWidgetCheckStatusDefinitionTime",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "title": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleAlign": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "check",
                "grouping"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetCheckStatusDefinitionTime:DashboardWidgetGroupDefinitionWidgetCheckStatusDefinitionTime": {
            "properties": {
                "liveSpan": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetDistributionDefinition:DashboardWidgetGroupDefinitionWidgetDistributionDefinition": {
            "properties": {
                "requests": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequest:DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequest"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "time": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetDistributionDefinitionTime:DashboardWidgetGroupDefinitionWidgetDistributionDefinitionTime",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "title": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleAlign": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequest:DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequest": {
            "properties": {
                "apmQuery": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestApmQuery:DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestApmQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logQuery": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestLogQuery:DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestLogQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "processQuery": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestProcessQuery:DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestProcessQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "q": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "style": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestStyle:DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestStyle",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestApmQuery:DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestApmQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestApmQueryCompute:DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestApmQueryCompute",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestApmQueryGroupBy:DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestApmQueryGroupBy"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestApmQuerySearch:DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestApmQuerySearch",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "compute",
                "index"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestApmQueryCompute:DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestApmQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestApmQueryGroupBy:DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestApmQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestApmQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestApmQueryGroupBySort",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestApmQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestApmQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestApmQuerySearch:DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestApmQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestLogQuery:DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestLogQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestLogQueryCompute:DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestLogQueryCompute",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestLogQueryGroupBy:DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestLogQueryGroupBy"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestLogQuerySearch:DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestLogQuerySearch",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "compute",
                "index"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestLogQueryCompute:DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestLogQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestLogQueryGroupBy:DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestLogQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestLogQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestLogQueryGroupBySort",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestLogQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestLogQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestLogQuerySearch:DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestLogQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestProcessQuery:DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestProcessQuery": {
            "properties": {
                "filterBies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "metric": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchBy": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "metric"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestStyle:DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestStyle": {
            "properties": {
                "palette": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetDistributionDefinitionTime:DashboardWidgetGroupDefinitionWidgetDistributionDefinitionTime": {
            "properties": {
                "liveSpan": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetEventStreamDefinition:DashboardWidgetGroupDefinitionWidgetEventStreamDefinition": {
            "properties": {
                "eventSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "time": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetEventStreamDefinitionTime:DashboardWidgetGroupDefinitionWidgetEventStreamDefinitionTime",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "title": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleAlign": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetEventStreamDefinitionTime:DashboardWidgetGroupDefinitionWidgetEventStreamDefinitionTime": {
            "properties": {
                "liveSpan": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetEventTimelineDefinition:DashboardWidgetGroupDefinitionWidgetEventTimelineDefinition": {
            "properties": {
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "time": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetEventTimelineDefinitionTime:DashboardWidgetGroupDefinitionWidgetEventTimelineDefinitionTime",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "title": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleAlign": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetEventTimelineDefinitionTime:DashboardWidgetGroupDefinitionWidgetEventTimelineDefinitionTime": {
            "properties": {
                "liveSpan": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetFreeTextDefinition:DashboardWidgetGroupDefinitionWidgetFreeTextDefinition": {
            "properties": {
                "color": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "fontSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "text": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "textAlign": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "text"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetHeatmapDefinition:DashboardWidgetGroupDefinitionWidgetHeatmapDefinition": {
            "properties": {
                "requests": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequest:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequest"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "time": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionTime:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionTime",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "title": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleAlign": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "yaxis": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionYaxis:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionYaxis",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequest:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequest": {
            "properties": {
                "apmQuery": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestApmQuery:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestApmQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logQuery": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestLogQuery:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestLogQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "processQuery": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestProcessQuery:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestProcessQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "q": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "style": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestStyle:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestStyle",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestApmQuery:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestApmQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestApmQueryCompute:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestApmQueryCompute",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestApmQueryGroupBy:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestApmQueryGroupBy"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestApmQuerySearch:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestApmQuerySearch",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "compute",
                "index"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestApmQueryCompute:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestApmQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestApmQueryGroupBy:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestApmQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestApmQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestApmQueryGroupBySort",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestApmQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestApmQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestApmQuerySearch:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestApmQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestLogQuery:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestLogQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestLogQueryCompute:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestLogQueryCompute",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestLogQueryGroupBy:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestLogQueryGroupBy"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestLogQuerySearch:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestLogQuerySearch",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "compute",
                "index"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestLogQueryCompute:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestLogQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestLogQueryGroupBy:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestLogQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestLogQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestLogQueryGroupBySort",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestLogQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestLogQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestLogQuerySearch:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestLogQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestProcessQuery:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestProcessQuery": {
            "properties": {
                "filterBies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "metric": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchBy": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "metric"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestStyle:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestStyle": {
            "properties": {
                "palette": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionTime:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionTime": {
            "properties": {
                "liveSpan": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionYaxis:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionYaxis": {
            "properties": {
                "includeZero": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "label": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "max": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "min": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "scale": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetHostmapDefinition:DashboardWidgetGroupDefinitionWidgetHostmapDefinition": {
            "properties": {
                "groups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "noGroupHosts": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "noMetricHosts": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "nodeType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "request": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequest:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequest",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "scopes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "style": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionStyle:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionStyle",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "title": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleAlign": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequest:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequest": {
            "properties": {
                "fills": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFill:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFill"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sizes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSize:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSize"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFill:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFill": {
            "properties": {
                "apmQuery": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillApmQuery:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillApmQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logQuery": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillLogQuery:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillLogQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "processQuery": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillProcessQuery:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillProcessQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "q": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillApmQuery:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillApmQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillApmQueryCompute:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillApmQueryCompute",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillApmQueryGroupBy:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillApmQueryGroupBy"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillApmQuerySearch:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillApmQuerySearch",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "compute",
                "index"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillApmQueryCompute:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillApmQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillApmQueryGroupBy:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillApmQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillApmQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillApmQueryGroupBySort",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillApmQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillApmQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillApmQuerySearch:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillApmQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillLogQuery:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillLogQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillLogQueryCompute:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillLogQueryCompute",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillLogQueryGroupBy:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillLogQueryGroupBy"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillLogQuerySearch:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillLogQuerySearch",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "compute",
                "index"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillLogQueryCompute:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillLogQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillLogQueryGroupBy:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillLogQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillLogQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillLogQueryGroupBySort",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillLogQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillLogQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillLogQuerySearch:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillLogQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillProcessQuery:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillProcessQuery": {
            "properties": {
                "filterBies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "metric": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchBy": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "metric"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSize:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSize": {
            "properties": {
                "apmQuery": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeApmQuery:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeApmQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logQuery": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeLogQuery:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeLogQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "processQuery": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeProcessQuery:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeProcessQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "q": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeApmQuery:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeApmQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeApmQueryCompute:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeApmQueryCompute",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeApmQueryGroupBy:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeApmQueryGroupBy"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeApmQuerySearch:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeApmQuerySearch",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "compute",
                "index"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeApmQueryCompute:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeApmQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeApmQueryGroupBy:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeApmQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeApmQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeApmQueryGroupBySort",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeApmQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeApmQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeApmQuerySearch:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeApmQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeLogQuery:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeLogQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeLogQueryCompute:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeLogQueryCompute",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeLogQueryGroupBy:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeLogQueryGroupBy"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeLogQuerySearch:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeLogQuerySearch",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "compute",
                "index"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeLogQueryCompute:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeLogQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeLogQueryGroupBy:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeLogQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeLogQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeLogQueryGroupBySort",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeLogQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeLogQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeLogQuerySearch:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeLogQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeProcessQuery:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeProcessQuery": {
            "properties": {
                "filterBies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "metric": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchBy": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "metric"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionStyle:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionStyle": {
            "properties": {
                "fillMax": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "fillMin": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "palette": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "paletteFlip": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetIframeDefinition:DashboardWidgetGroupDefinitionWidgetIframeDefinition": {
            "properties": {
                "url": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "url"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetImageDefinition:DashboardWidgetGroupDefinitionWidgetImageDefinition": {
            "properties": {
                "margin": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sizing": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "url": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "url"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetLayout:DashboardWidgetGroupDefinitionWidgetLayout": {
            "properties": {
                "height": {
                    "type": "number",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "width": {
                    "type": "number",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "x": {
                    "type": "number",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "y": {
                    "type": "number",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "height",
                "width",
                "x",
                "y"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetLogStreamDefinition:DashboardWidgetGroupDefinitionWidgetLogStreamDefinition": {
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logset": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "time": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetLogStreamDefinitionTime:DashboardWidgetGroupDefinitionWidgetLogStreamDefinitionTime",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "title": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleAlign": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "logset"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetLogStreamDefinitionTime:DashboardWidgetGroupDefinitionWidgetLogStreamDefinitionTime": {
            "properties": {
                "liveSpan": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetManageStatusDefinition:DashboardWidgetGroupDefinitionWidgetManageStatusDefinition": {
            "properties": {
                "colorPreference": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "count": {
                    "type": "integer",
                    "deprecationMessage": "This parameter may be removed from the dashboard API in the future",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "displayFormat": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "hideZeroCounts": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "showLastTriggered": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "start": {
                    "type": "integer",
                    "deprecationMessage": "This parameter may be removed from the dashboard API in the future",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "summaryType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "title": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleAlign": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetNoteDefinition:DashboardWidgetGroupDefinitionWidgetNoteDefinition": {
            "properties": {
                "backgroundColor": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "content": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "fontSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "showTick": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "textAlign": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tickEdge": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tickPos": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "content"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetQueryTableDefinition:DashboardWidgetGroupDefinitionWidgetQueryTableDefinition": {
            "properties": {
                "requests": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequest:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequest"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "time": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionTime:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionTime",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "title": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleAlign": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequest:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequest": {
            "properties": {
                "aggregator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "alias": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "apmQuery": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestApmQuery:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestApmQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "conditionalFormats": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestConditionalFormat:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestConditionalFormat"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logQuery": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestLogQuery:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestLogQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "processQuery": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestProcessQuery:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestProcessQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "q": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestApmQuery:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestApmQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestApmQueryCompute:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestApmQueryCompute",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestApmQueryGroupBy:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestApmQueryGroupBy"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestApmQuerySearch:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestApmQuerySearch",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "compute",
                "index"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestApmQueryCompute:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestApmQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestApmQueryGroupBy:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestApmQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestApmQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestApmQueryGroupBySort",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestApmQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestApmQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestApmQuerySearch:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestApmQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestConditionalFormat:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestConditionalFormat": {
            "properties": {
                "comparator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "customBgColor": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "customFgColor": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "hideValue": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "imageUrl": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "palette": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "timeframe": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "number",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "comparator",
                "palette",
                "value"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestLogQuery:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestLogQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestLogQueryCompute:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestLogQueryCompute",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestLogQueryGroupBy:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestLogQueryGroupBy"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestLogQuerySearch:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestLogQuerySearch",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "compute",
                "index"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestLogQueryCompute:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestLogQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestLogQueryGroupBy:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestLogQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestLogQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestLogQueryGroupBySort",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestLogQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestLogQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestLogQuerySearch:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestLogQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestProcessQuery:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestProcessQuery": {
            "properties": {
                "filterBies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "metric": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchBy": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "metric"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionTime:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionTime": {
            "properties": {
                "liveSpan": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetQueryValueDefinition:DashboardWidgetGroupDefinitionWidgetQueryValueDefinition": {
            "properties": {
                "autoscale": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "customUnit": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "precision": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "requests": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequest:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequest"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "textAlign": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "time": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionTime:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionTime",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "title": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleAlign": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequest:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequest": {
            "properties": {
                "aggregator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "apmQuery": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestApmQuery:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestApmQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "conditionalFormats": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestConditionalFormat:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestConditionalFormat"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logQuery": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestLogQuery:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestLogQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "processQuery": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestProcessQuery:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestProcessQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "q": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestApmQuery:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestApmQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestApmQueryCompute:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestApmQueryCompute",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestApmQueryGroupBy:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestApmQueryGroupBy"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestApmQuerySearch:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestApmQuerySearch",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "compute",
                "index"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestApmQueryCompute:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestApmQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestApmQueryGroupBy:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestApmQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestApmQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestApmQueryGroupBySort",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestApmQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestApmQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestApmQuerySearch:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestApmQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestConditionalFormat:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestConditionalFormat": {
            "properties": {
                "comparator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "customBgColor": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "customFgColor": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "hideValue": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "imageUrl": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "palette": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "timeframe": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "number",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "comparator",
                "palette",
                "value"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestLogQuery:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestLogQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestLogQueryCompute:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestLogQueryCompute",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestLogQueryGroupBy:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestLogQueryGroupBy"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestLogQuerySearch:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestLogQuerySearch",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "compute",
                "index"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestLogQueryCompute:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestLogQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestLogQueryGroupBy:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestLogQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestLogQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestLogQueryGroupBySort",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestLogQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestLogQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestLogQuerySearch:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestLogQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestProcessQuery:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestProcessQuery": {
            "properties": {
                "filterBies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "metric": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchBy": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "metric"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionTime:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionTime": {
            "properties": {
                "liveSpan": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetScatterplotDefinition:DashboardWidgetGroupDefinitionWidgetScatterplotDefinition": {
            "properties": {
                "colorByGroups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "request": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequest:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequest",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "time": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionTime:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionTime",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "title": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleAlign": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "xaxis": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionXaxis:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionXaxis",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "yaxis": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionYaxis:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionYaxis",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequest:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequest": {
            "properties": {
                "xes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestX:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestX"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ys": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestY:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestY"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestX:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestX": {
            "properties": {
                "aggregator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "apmQuery": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXApmQuery:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXApmQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logQuery": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXLogQuery:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXLogQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "processQuery": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXProcessQuery:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXProcessQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "q": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXApmQuery:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXApmQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXApmQueryCompute:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXApmQueryCompute",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXApmQueryGroupBy:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXApmQueryGroupBy"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXApmQuerySearch:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXApmQuerySearch",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "compute",
                "index"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXApmQueryCompute:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXApmQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXApmQueryGroupBy:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXApmQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXApmQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXApmQueryGroupBySort",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXApmQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXApmQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXApmQuerySearch:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXApmQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXLogQuery:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXLogQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXLogQueryCompute:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXLogQueryCompute",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXLogQueryGroupBy:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXLogQueryGroupBy"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXLogQuerySearch:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXLogQuerySearch",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "compute",
                "index"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXLogQueryCompute:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXLogQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXLogQueryGroupBy:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXLogQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXLogQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXLogQueryGroupBySort",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXLogQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXLogQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXLogQuerySearch:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXLogQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXProcessQuery:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXProcessQuery": {
            "properties": {
                "filterBies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "metric": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchBy": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "metric"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestY:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestY": {
            "properties": {
                "aggregator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "apmQuery": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYApmQuery:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYApmQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logQuery": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYLogQuery:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYLogQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "processQuery": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYProcessQuery:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYProcessQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "q": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYApmQuery:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYApmQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYApmQueryCompute:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYApmQueryCompute",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYApmQueryGroupBy:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYApmQueryGroupBy"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYApmQuerySearch:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYApmQuerySearch",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "compute",
                "index"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYApmQueryCompute:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYApmQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYApmQueryGroupBy:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYApmQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYApmQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYApmQueryGroupBySort",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYApmQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYApmQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYApmQuerySearch:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYApmQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYLogQuery:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYLogQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYLogQueryCompute:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYLogQueryCompute",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYLogQueryGroupBy:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYLogQueryGroupBy"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYLogQuerySearch:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYLogQuerySearch",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "compute",
                "index"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYLogQueryCompute:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYLogQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYLogQueryGroupBy:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYLogQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYLogQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYLogQueryGroupBySort",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYLogQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYLogQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYLogQuerySearch:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYLogQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYProcessQuery:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYProcessQuery": {
            "properties": {
                "filterBies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "metric": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchBy": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "metric"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionTime:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionTime": {
            "properties": {
                "liveSpan": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionXaxis:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionXaxis": {
            "properties": {
                "includeZero": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "label": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "max": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "min": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "scale": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionYaxis:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionYaxis": {
            "properties": {
                "includeZero": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "label": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "max": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "min": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "scale": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetServiceLevelObjectiveDefinition:DashboardWidgetGroupDefinitionWidgetServiceLevelObjectiveDefinition": {
            "properties": {
                "showErrorBudget": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sloId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "timeWindows": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "title": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleAlign": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "viewMode": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "viewType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "sloId",
                "timeWindows",
                "viewMode",
                "viewType"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinition:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinition": {
            "properties": {
                "events": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionEvent:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionEvent"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "legendSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "markers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionMarker:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionMarker"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "requests": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequest:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequest"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "showLegend": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "time": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionTime:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionTime",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "title": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleAlign": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "yaxis": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionYaxis:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionYaxis",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionEvent:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionEvent": {
            "properties": {
                "q": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "q"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionMarker:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionMarker": {
            "properties": {
                "displayType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "label": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "value"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequest:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequest": {
            "properties": {
                "apmQuery": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestApmQuery:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestApmQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "displayType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logQuery": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestLogQuery:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestLogQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "metadatas": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestMetadata:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestMetadata"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "processQuery": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestProcessQuery:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestProcessQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "q": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "style": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestStyle:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestStyle",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestApmQuery:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestApmQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestApmQueryCompute:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestApmQueryCompute",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestApmQueryGroupBy:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestApmQueryGroupBy"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestApmQuerySearch:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestApmQuerySearch",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "compute",
                "index"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestApmQueryCompute:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestApmQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestApmQueryGroupBy:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestApmQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestApmQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestApmQueryGroupBySort",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestApmQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestApmQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestApmQuerySearch:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestApmQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestLogQuery:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestLogQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestLogQueryCompute:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestLogQueryCompute",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestLogQueryGroupBy:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestLogQueryGroupBy"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestLogQuerySearch:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestLogQuerySearch",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "compute",
                "index"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestLogQueryCompute:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestLogQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestLogQueryGroupBy:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestLogQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestLogQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestLogQueryGroupBySort",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestLogQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestLogQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestLogQuerySearch:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestLogQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestMetadata:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestMetadata": {
            "properties": {
                "aliasName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "expression": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "expression"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestProcessQuery:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestProcessQuery": {
            "properties": {
                "filterBies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "metric": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchBy": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "metric"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestStyle:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestStyle": {
            "properties": {
                "lineType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "lineWidth": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "palette": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionTime:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionTime": {
            "properties": {
                "liveSpan": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionYaxis:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionYaxis": {
            "properties": {
                "includeZero": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "label": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "max": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "min": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "scale": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetToplistDefinition:DashboardWidgetGroupDefinitionWidgetToplistDefinition": {
            "properties": {
                "requests": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequest:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequest"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "time": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetToplistDefinitionTime:DashboardWidgetGroupDefinitionWidgetToplistDefinitionTime",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "title": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleAlign": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequest:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequest": {
            "properties": {
                "apmQuery": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestApmQuery:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestApmQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "conditionalFormats": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestConditionalFormat:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestConditionalFormat"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logQuery": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestLogQuery:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestLogQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "processQuery": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestProcessQuery:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestProcessQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "q": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "style": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestStyle:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestStyle",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestApmQuery:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestApmQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestApmQueryCompute:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestApmQueryCompute",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestApmQueryGroupBy:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestApmQueryGroupBy"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestApmQuerySearch:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestApmQuerySearch",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "compute",
                "index"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestApmQueryCompute:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestApmQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestApmQueryGroupBy:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestApmQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestApmQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestApmQueryGroupBySort",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestApmQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestApmQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestApmQuerySearch:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestApmQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestConditionalFormat:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestConditionalFormat": {
            "properties": {
                "comparator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "customBgColor": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "customFgColor": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "hideValue": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "imageUrl": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "palette": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "timeframe": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "number",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "comparator",
                "palette",
                "value"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestLogQuery:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestLogQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestLogQueryCompute:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestLogQueryCompute",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestLogQueryGroupBy:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestLogQueryGroupBy"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestLogQuerySearch:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestLogQuerySearch",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "compute",
                "index"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestLogQueryCompute:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestLogQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestLogQueryGroupBy:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestLogQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestLogQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestLogQueryGroupBySort",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestLogQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestLogQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestLogQuerySearch:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestLogQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestProcessQuery:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestProcessQuery": {
            "properties": {
                "filterBies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "metric": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchBy": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "metric"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestStyle:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestStyle": {
            "properties": {
                "palette": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetToplistDefinitionTime:DashboardWidgetGroupDefinitionWidgetToplistDefinitionTime": {
            "properties": {
                "liveSpan": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetTraceServiceDefinition:DashboardWidgetGroupDefinitionWidgetTraceServiceDefinition": {
            "properties": {
                "displayFormat": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "env": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "service": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "showBreakdown": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "showDistribution": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "showErrors": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "showHits": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "showLatency": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "showResourceList": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sizeFormat": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "spanName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "time": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetTraceServiceDefinitionTime:DashboardWidgetGroupDefinitionWidgetTraceServiceDefinitionTime",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "title": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleAlign": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "env",
                "service",
                "spanName"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetTraceServiceDefinitionTime:DashboardWidgetGroupDefinitionWidgetTraceServiceDefinitionTime": {
            "properties": {
                "liveSpan": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetHeatmapDefinition:DashboardWidgetHeatmapDefinition": {
            "properties": {
                "requests": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetHeatmapDefinitionRequest:DashboardWidgetHeatmapDefinitionRequest"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "time": {
                    "$ref": "#/types/datadog:/DashboardWidgetHeatmapDefinitionTime:DashboardWidgetHeatmapDefinitionTime",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "title": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleAlign": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "yaxis": {
                    "$ref": "#/types/datadog:/DashboardWidgetHeatmapDefinitionYaxis:DashboardWidgetHeatmapDefinitionYaxis",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetHeatmapDefinitionRequest:DashboardWidgetHeatmapDefinitionRequest": {
            "properties": {
                "apmQuery": {
                    "$ref": "#/types/datadog:/DashboardWidgetHeatmapDefinitionRequestApmQuery:DashboardWidgetHeatmapDefinitionRequestApmQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logQuery": {
                    "$ref": "#/types/datadog:/DashboardWidgetHeatmapDefinitionRequestLogQuery:DashboardWidgetHeatmapDefinitionRequestLogQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "processQuery": {
                    "$ref": "#/types/datadog:/DashboardWidgetHeatmapDefinitionRequestProcessQuery:DashboardWidgetHeatmapDefinitionRequestProcessQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "q": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "style": {
                    "$ref": "#/types/datadog:/DashboardWidgetHeatmapDefinitionRequestStyle:DashboardWidgetHeatmapDefinitionRequestStyle",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetHeatmapDefinitionRequestApmQuery:DashboardWidgetHeatmapDefinitionRequestApmQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:/DashboardWidgetHeatmapDefinitionRequestApmQueryCompute:DashboardWidgetHeatmapDefinitionRequestApmQueryCompute",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetHeatmapDefinitionRequestApmQueryGroupBy:DashboardWidgetHeatmapDefinitionRequestApmQueryGroupBy"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:/DashboardWidgetHeatmapDefinitionRequestApmQuerySearch:DashboardWidgetHeatmapDefinitionRequestApmQuerySearch",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "compute",
                "index"
            ]
        },
        "datadog:/DashboardWidgetHeatmapDefinitionRequestApmQueryCompute:DashboardWidgetHeatmapDefinitionRequestApmQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:/DashboardWidgetHeatmapDefinitionRequestApmQueryGroupBy:DashboardWidgetHeatmapDefinitionRequestApmQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:/DashboardWidgetHeatmapDefinitionRequestApmQueryGroupBySort:DashboardWidgetHeatmapDefinitionRequestApmQueryGroupBySort",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetHeatmapDefinitionRequestApmQueryGroupBySort:DashboardWidgetHeatmapDefinitionRequestApmQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:/DashboardWidgetHeatmapDefinitionRequestApmQuerySearch:DashboardWidgetHeatmapDefinitionRequestApmQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:/DashboardWidgetHeatmapDefinitionRequestLogQuery:DashboardWidgetHeatmapDefinitionRequestLogQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:/DashboardWidgetHeatmapDefinitionRequestLogQueryCompute:DashboardWidgetHeatmapDefinitionRequestLogQueryCompute",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetHeatmapDefinitionRequestLogQueryGroupBy:DashboardWidgetHeatmapDefinitionRequestLogQueryGroupBy"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:/DashboardWidgetHeatmapDefinitionRequestLogQuerySearch:DashboardWidgetHeatmapDefinitionRequestLogQuerySearch",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "compute",
                "index"
            ]
        },
        "datadog:/DashboardWidgetHeatmapDefinitionRequestLogQueryCompute:DashboardWidgetHeatmapDefinitionRequestLogQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:/DashboardWidgetHeatmapDefinitionRequestLogQueryGroupBy:DashboardWidgetHeatmapDefinitionRequestLogQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:/DashboardWidgetHeatmapDefinitionRequestLogQueryGroupBySort:DashboardWidgetHeatmapDefinitionRequestLogQueryGroupBySort",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetHeatmapDefinitionRequestLogQueryGroupBySort:DashboardWidgetHeatmapDefinitionRequestLogQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:/DashboardWidgetHeatmapDefinitionRequestLogQuerySearch:DashboardWidgetHeatmapDefinitionRequestLogQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:/DashboardWidgetHeatmapDefinitionRequestProcessQuery:DashboardWidgetHeatmapDefinitionRequestProcessQuery": {
            "properties": {
                "filterBies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "metric": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchBy": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "metric"
            ]
        },
        "datadog:/DashboardWidgetHeatmapDefinitionRequestStyle:DashboardWidgetHeatmapDefinitionRequestStyle": {
            "properties": {
                "palette": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetHeatmapDefinitionTime:DashboardWidgetHeatmapDefinitionTime": {
            "properties": {
                "liveSpan": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetHeatmapDefinitionYaxis:DashboardWidgetHeatmapDefinitionYaxis": {
            "properties": {
                "includeZero": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "label": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "max": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "min": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "scale": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetHostmapDefinition:DashboardWidgetHostmapDefinition": {
            "properties": {
                "groups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "noGroupHosts": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "noMetricHosts": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "nodeType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "request": {
                    "$ref": "#/types/datadog:/DashboardWidgetHostmapDefinitionRequest:DashboardWidgetHostmapDefinitionRequest",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "scopes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "style": {
                    "$ref": "#/types/datadog:/DashboardWidgetHostmapDefinitionStyle:DashboardWidgetHostmapDefinitionStyle",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "title": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleAlign": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetHostmapDefinitionRequest:DashboardWidgetHostmapDefinitionRequest": {
            "properties": {
                "fills": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetHostmapDefinitionRequestFill:DashboardWidgetHostmapDefinitionRequestFill"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sizes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetHostmapDefinitionRequestSize:DashboardWidgetHostmapDefinitionRequestSize"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetHostmapDefinitionRequestFill:DashboardWidgetHostmapDefinitionRequestFill": {
            "properties": {
                "apmQuery": {
                    "$ref": "#/types/datadog:/DashboardWidgetHostmapDefinitionRequestFillApmQuery:DashboardWidgetHostmapDefinitionRequestFillApmQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logQuery": {
                    "$ref": "#/types/datadog:/DashboardWidgetHostmapDefinitionRequestFillLogQuery:DashboardWidgetHostmapDefinitionRequestFillLogQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "processQuery": {
                    "$ref": "#/types/datadog:/DashboardWidgetHostmapDefinitionRequestFillProcessQuery:DashboardWidgetHostmapDefinitionRequestFillProcessQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "q": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetHostmapDefinitionRequestFillApmQuery:DashboardWidgetHostmapDefinitionRequestFillApmQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:/DashboardWidgetHostmapDefinitionRequestFillApmQueryCompute:DashboardWidgetHostmapDefinitionRequestFillApmQueryCompute",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetHostmapDefinitionRequestFillApmQueryGroupBy:DashboardWidgetHostmapDefinitionRequestFillApmQueryGroupBy"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:/DashboardWidgetHostmapDefinitionRequestFillApmQuerySearch:DashboardWidgetHostmapDefinitionRequestFillApmQuerySearch",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "compute",
                "index"
            ]
        },
        "datadog:/DashboardWidgetHostmapDefinitionRequestFillApmQueryCompute:DashboardWidgetHostmapDefinitionRequestFillApmQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:/DashboardWidgetHostmapDefinitionRequestFillApmQueryGroupBy:DashboardWidgetHostmapDefinitionRequestFillApmQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:/DashboardWidgetHostmapDefinitionRequestFillApmQueryGroupBySort:DashboardWidgetHostmapDefinitionRequestFillApmQueryGroupBySort",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetHostmapDefinitionRequestFillApmQueryGroupBySort:DashboardWidgetHostmapDefinitionRequestFillApmQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:/DashboardWidgetHostmapDefinitionRequestFillApmQuerySearch:DashboardWidgetHostmapDefinitionRequestFillApmQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:/DashboardWidgetHostmapDefinitionRequestFillLogQuery:DashboardWidgetHostmapDefinitionRequestFillLogQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:/DashboardWidgetHostmapDefinitionRequestFillLogQueryCompute:DashboardWidgetHostmapDefinitionRequestFillLogQueryCompute",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetHostmapDefinitionRequestFillLogQueryGroupBy:DashboardWidgetHostmapDefinitionRequestFillLogQueryGroupBy"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:/DashboardWidgetHostmapDefinitionRequestFillLogQuerySearch:DashboardWidgetHostmapDefinitionRequestFillLogQuerySearch",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "compute",
                "index"
            ]
        },
        "datadog:/DashboardWidgetHostmapDefinitionRequestFillLogQueryCompute:DashboardWidgetHostmapDefinitionRequestFillLogQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:/DashboardWidgetHostmapDefinitionRequestFillLogQueryGroupBy:DashboardWidgetHostmapDefinitionRequestFillLogQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:/DashboardWidgetHostmapDefinitionRequestFillLogQueryGroupBySort:DashboardWidgetHostmapDefinitionRequestFillLogQueryGroupBySort",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetHostmapDefinitionRequestFillLogQueryGroupBySort:DashboardWidgetHostmapDefinitionRequestFillLogQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:/DashboardWidgetHostmapDefinitionRequestFillLogQuerySearch:DashboardWidgetHostmapDefinitionRequestFillLogQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:/DashboardWidgetHostmapDefinitionRequestFillProcessQuery:DashboardWidgetHostmapDefinitionRequestFillProcessQuery": {
            "properties": {
                "filterBies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "metric": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchBy": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "metric"
            ]
        },
        "datadog:/DashboardWidgetHostmapDefinitionRequestSize:DashboardWidgetHostmapDefinitionRequestSize": {
            "properties": {
                "apmQuery": {
                    "$ref": "#/types/datadog:/DashboardWidgetHostmapDefinitionRequestSizeApmQuery:DashboardWidgetHostmapDefinitionRequestSizeApmQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logQuery": {
                    "$ref": "#/types/datadog:/DashboardWidgetHostmapDefinitionRequestSizeLogQuery:DashboardWidgetHostmapDefinitionRequestSizeLogQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "processQuery": {
                    "$ref": "#/types/datadog:/DashboardWidgetHostmapDefinitionRequestSizeProcessQuery:DashboardWidgetHostmapDefinitionRequestSizeProcessQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "q": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetHostmapDefinitionRequestSizeApmQuery:DashboardWidgetHostmapDefinitionRequestSizeApmQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:/DashboardWidgetHostmapDefinitionRequestSizeApmQueryCompute:DashboardWidgetHostmapDefinitionRequestSizeApmQueryCompute",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetHostmapDefinitionRequestSizeApmQueryGroupBy:DashboardWidgetHostmapDefinitionRequestSizeApmQueryGroupBy"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:/DashboardWidgetHostmapDefinitionRequestSizeApmQuerySearch:DashboardWidgetHostmapDefinitionRequestSizeApmQuerySearch",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "compute",
                "index"
            ]
        },
        "datadog:/DashboardWidgetHostmapDefinitionRequestSizeApmQueryCompute:DashboardWidgetHostmapDefinitionRequestSizeApmQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:/DashboardWidgetHostmapDefinitionRequestSizeApmQueryGroupBy:DashboardWidgetHostmapDefinitionRequestSizeApmQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:/DashboardWidgetHostmapDefinitionRequestSizeApmQueryGroupBySort:DashboardWidgetHostmapDefinitionRequestSizeApmQueryGroupBySort",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetHostmapDefinitionRequestSizeApmQueryGroupBySort:DashboardWidgetHostmapDefinitionRequestSizeApmQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:/DashboardWidgetHostmapDefinitionRequestSizeApmQuerySearch:DashboardWidgetHostmapDefinitionRequestSizeApmQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:/DashboardWidgetHostmapDefinitionRequestSizeLogQuery:DashboardWidgetHostmapDefinitionRequestSizeLogQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:/DashboardWidgetHostmapDefinitionRequestSizeLogQueryCompute:DashboardWidgetHostmapDefinitionRequestSizeLogQueryCompute",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetHostmapDefinitionRequestSizeLogQueryGroupBy:DashboardWidgetHostmapDefinitionRequestSizeLogQueryGroupBy"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:/DashboardWidgetHostmapDefinitionRequestSizeLogQuerySearch:DashboardWidgetHostmapDefinitionRequestSizeLogQuerySearch",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "compute",
                "index"
            ]
        },
        "datadog:/DashboardWidgetHostmapDefinitionRequestSizeLogQueryCompute:DashboardWidgetHostmapDefinitionRequestSizeLogQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:/DashboardWidgetHostmapDefinitionRequestSizeLogQueryGroupBy:DashboardWidgetHostmapDefinitionRequestSizeLogQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:/DashboardWidgetHostmapDefinitionRequestSizeLogQueryGroupBySort:DashboardWidgetHostmapDefinitionRequestSizeLogQueryGroupBySort",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetHostmapDefinitionRequestSizeLogQueryGroupBySort:DashboardWidgetHostmapDefinitionRequestSizeLogQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:/DashboardWidgetHostmapDefinitionRequestSizeLogQuerySearch:DashboardWidgetHostmapDefinitionRequestSizeLogQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:/DashboardWidgetHostmapDefinitionRequestSizeProcessQuery:DashboardWidgetHostmapDefinitionRequestSizeProcessQuery": {
            "properties": {
                "filterBies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "metric": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchBy": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "metric"
            ]
        },
        "datadog:/DashboardWidgetHostmapDefinitionStyle:DashboardWidgetHostmapDefinitionStyle": {
            "properties": {
                "fillMax": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "fillMin": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "palette": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "paletteFlip": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetIframeDefinition:DashboardWidgetIframeDefinition": {
            "properties": {
                "url": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "url"
            ]
        },
        "datadog:/DashboardWidgetImageDefinition:DashboardWidgetImageDefinition": {
            "properties": {
                "margin": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sizing": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "url": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "url"
            ]
        },
        "datadog:/DashboardWidgetLayout:DashboardWidgetLayout": {
            "properties": {
                "height": {
                    "type": "number",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "width": {
                    "type": "number",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "x": {
                    "type": "number",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "y": {
                    "type": "number",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "height",
                "width",
                "x",
                "y"
            ]
        },
        "datadog:/DashboardWidgetLogStreamDefinition:DashboardWidgetLogStreamDefinition": {
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logset": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "time": {
                    "$ref": "#/types/datadog:/DashboardWidgetLogStreamDefinitionTime:DashboardWidgetLogStreamDefinitionTime",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "title": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleAlign": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "logset"
            ]
        },
        "datadog:/DashboardWidgetLogStreamDefinitionTime:DashboardWidgetLogStreamDefinitionTime": {
            "properties": {
                "liveSpan": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetManageStatusDefinition:DashboardWidgetManageStatusDefinition": {
            "properties": {
                "colorPreference": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "count": {
                    "type": "integer",
                    "deprecationMessage": "This parameter may be removed from the dashboard API in the future",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "displayFormat": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "hideZeroCounts": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "showLastTriggered": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "start": {
                    "type": "integer",
                    "deprecationMessage": "This parameter may be removed from the dashboard API in the future",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "summaryType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "title": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleAlign": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:/DashboardWidgetNoteDefinition:DashboardWidgetNoteDefinition": {
            "properties": {
                "backgroundColor": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "content": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "fontSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "showTick": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "textAlign": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tickEdge": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tickPos": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "content"
            ]
        },
        "datadog:/DashboardWidgetQueryTableDefinition:DashboardWidgetQueryTableDefinition": {
            "properties": {
                "requests": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetQueryTableDefinitionRequest:DashboardWidgetQueryTableDefinitionRequest"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "time": {
                    "$ref": "#/types/datadog:/DashboardWidgetQueryTableDefinitionTime:DashboardWidgetQueryTableDefinitionTime",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "title": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleAlign": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetQueryTableDefinitionRequest:DashboardWidgetQueryTableDefinitionRequest": {
            "properties": {
                "aggregator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "alias": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "apmQuery": {
                    "$ref": "#/types/datadog:/DashboardWidgetQueryTableDefinitionRequestApmQuery:DashboardWidgetQueryTableDefinitionRequestApmQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "conditionalFormats": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetQueryTableDefinitionRequestConditionalFormat:DashboardWidgetQueryTableDefinitionRequestConditionalFormat"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logQuery": {
                    "$ref": "#/types/datadog:/DashboardWidgetQueryTableDefinitionRequestLogQuery:DashboardWidgetQueryTableDefinitionRequestLogQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "processQuery": {
                    "$ref": "#/types/datadog:/DashboardWidgetQueryTableDefinitionRequestProcessQuery:DashboardWidgetQueryTableDefinitionRequestProcessQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "q": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetQueryTableDefinitionRequestApmQuery:DashboardWidgetQueryTableDefinitionRequestApmQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:/DashboardWidgetQueryTableDefinitionRequestApmQueryCompute:DashboardWidgetQueryTableDefinitionRequestApmQueryCompute",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetQueryTableDefinitionRequestApmQueryGroupBy:DashboardWidgetQueryTableDefinitionRequestApmQueryGroupBy"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:/DashboardWidgetQueryTableDefinitionRequestApmQuerySearch:DashboardWidgetQueryTableDefinitionRequestApmQuerySearch",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "compute",
                "index"
            ]
        },
        "datadog:/DashboardWidgetQueryTableDefinitionRequestApmQueryCompute:DashboardWidgetQueryTableDefinitionRequestApmQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:/DashboardWidgetQueryTableDefinitionRequestApmQueryGroupBy:DashboardWidgetQueryTableDefinitionRequestApmQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:/DashboardWidgetQueryTableDefinitionRequestApmQueryGroupBySort:DashboardWidgetQueryTableDefinitionRequestApmQueryGroupBySort",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetQueryTableDefinitionRequestApmQueryGroupBySort:DashboardWidgetQueryTableDefinitionRequestApmQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:/DashboardWidgetQueryTableDefinitionRequestApmQuerySearch:DashboardWidgetQueryTableDefinitionRequestApmQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:/DashboardWidgetQueryTableDefinitionRequestConditionalFormat:DashboardWidgetQueryTableDefinitionRequestConditionalFormat": {
            "properties": {
                "comparator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "customBgColor": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "customFgColor": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "hideValue": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "imageUrl": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "palette": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "timeframe": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "number",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "comparator",
                "palette",
                "value"
            ]
        },
        "datadog:/DashboardWidgetQueryTableDefinitionRequestLogQuery:DashboardWidgetQueryTableDefinitionRequestLogQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:/DashboardWidgetQueryTableDefinitionRequestLogQueryCompute:DashboardWidgetQueryTableDefinitionRequestLogQueryCompute",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetQueryTableDefinitionRequestLogQueryGroupBy:DashboardWidgetQueryTableDefinitionRequestLogQueryGroupBy"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:/DashboardWidgetQueryTableDefinitionRequestLogQuerySearch:DashboardWidgetQueryTableDefinitionRequestLogQuerySearch",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "compute",
                "index"
            ]
        },
        "datadog:/DashboardWidgetQueryTableDefinitionRequestLogQueryCompute:DashboardWidgetQueryTableDefinitionRequestLogQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:/DashboardWidgetQueryTableDefinitionRequestLogQueryGroupBy:DashboardWidgetQueryTableDefinitionRequestLogQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:/DashboardWidgetQueryTableDefinitionRequestLogQueryGroupBySort:DashboardWidgetQueryTableDefinitionRequestLogQueryGroupBySort",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetQueryTableDefinitionRequestLogQueryGroupBySort:DashboardWidgetQueryTableDefinitionRequestLogQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:/DashboardWidgetQueryTableDefinitionRequestLogQuerySearch:DashboardWidgetQueryTableDefinitionRequestLogQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:/DashboardWidgetQueryTableDefinitionRequestProcessQuery:DashboardWidgetQueryTableDefinitionRequestProcessQuery": {
            "properties": {
                "filterBies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "metric": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchBy": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "metric"
            ]
        },
        "datadog:/DashboardWidgetQueryTableDefinitionTime:DashboardWidgetQueryTableDefinitionTime": {
            "properties": {
                "liveSpan": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetQueryValueDefinition:DashboardWidgetQueryValueDefinition": {
            "properties": {
                "autoscale": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "customUnit": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "precision": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "requests": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetQueryValueDefinitionRequest:DashboardWidgetQueryValueDefinitionRequest"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "textAlign": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "time": {
                    "$ref": "#/types/datadog:/DashboardWidgetQueryValueDefinitionTime:DashboardWidgetQueryValueDefinitionTime",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "title": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleAlign": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetQueryValueDefinitionRequest:DashboardWidgetQueryValueDefinitionRequest": {
            "properties": {
                "aggregator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "apmQuery": {
                    "$ref": "#/types/datadog:/DashboardWidgetQueryValueDefinitionRequestApmQuery:DashboardWidgetQueryValueDefinitionRequestApmQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "conditionalFormats": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetQueryValueDefinitionRequestConditionalFormat:DashboardWidgetQueryValueDefinitionRequestConditionalFormat"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logQuery": {
                    "$ref": "#/types/datadog:/DashboardWidgetQueryValueDefinitionRequestLogQuery:DashboardWidgetQueryValueDefinitionRequestLogQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "processQuery": {
                    "$ref": "#/types/datadog:/DashboardWidgetQueryValueDefinitionRequestProcessQuery:DashboardWidgetQueryValueDefinitionRequestProcessQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "q": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetQueryValueDefinitionRequestApmQuery:DashboardWidgetQueryValueDefinitionRequestApmQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:/DashboardWidgetQueryValueDefinitionRequestApmQueryCompute:DashboardWidgetQueryValueDefinitionRequestApmQueryCompute",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetQueryValueDefinitionRequestApmQueryGroupBy:DashboardWidgetQueryValueDefinitionRequestApmQueryGroupBy"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:/DashboardWidgetQueryValueDefinitionRequestApmQuerySearch:DashboardWidgetQueryValueDefinitionRequestApmQuerySearch",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "compute",
                "index"
            ]
        },
        "datadog:/DashboardWidgetQueryValueDefinitionRequestApmQueryCompute:DashboardWidgetQueryValueDefinitionRequestApmQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:/DashboardWidgetQueryValueDefinitionRequestApmQueryGroupBy:DashboardWidgetQueryValueDefinitionRequestApmQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:/DashboardWidgetQueryValueDefinitionRequestApmQueryGroupBySort:DashboardWidgetQueryValueDefinitionRequestApmQueryGroupBySort",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetQueryValueDefinitionRequestApmQueryGroupBySort:DashboardWidgetQueryValueDefinitionRequestApmQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:/DashboardWidgetQueryValueDefinitionRequestApmQuerySearch:DashboardWidgetQueryValueDefinitionRequestApmQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:/DashboardWidgetQueryValueDefinitionRequestConditionalFormat:DashboardWidgetQueryValueDefinitionRequestConditionalFormat": {
            "properties": {
                "comparator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "customBgColor": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "customFgColor": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "hideValue": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "imageUrl": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "palette": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "timeframe": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "number",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "comparator",
                "palette",
                "value"
            ]
        },
        "datadog:/DashboardWidgetQueryValueDefinitionRequestLogQuery:DashboardWidgetQueryValueDefinitionRequestLogQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:/DashboardWidgetQueryValueDefinitionRequestLogQueryCompute:DashboardWidgetQueryValueDefinitionRequestLogQueryCompute",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetQueryValueDefinitionRequestLogQueryGroupBy:DashboardWidgetQueryValueDefinitionRequestLogQueryGroupBy"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:/DashboardWidgetQueryValueDefinitionRequestLogQuerySearch:DashboardWidgetQueryValueDefinitionRequestLogQuerySearch",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "compute",
                "index"
            ]
        },
        "datadog:/DashboardWidgetQueryValueDefinitionRequestLogQueryCompute:DashboardWidgetQueryValueDefinitionRequestLogQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:/DashboardWidgetQueryValueDefinitionRequestLogQueryGroupBy:DashboardWidgetQueryValueDefinitionRequestLogQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:/DashboardWidgetQueryValueDefinitionRequestLogQueryGroupBySort:DashboardWidgetQueryValueDefinitionRequestLogQueryGroupBySort",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetQueryValueDefinitionRequestLogQueryGroupBySort:DashboardWidgetQueryValueDefinitionRequestLogQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:/DashboardWidgetQueryValueDefinitionRequestLogQuerySearch:DashboardWidgetQueryValueDefinitionRequestLogQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:/DashboardWidgetQueryValueDefinitionRequestProcessQuery:DashboardWidgetQueryValueDefinitionRequestProcessQuery": {
            "properties": {
                "filterBies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "metric": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchBy": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "metric"
            ]
        },
        "datadog:/DashboardWidgetQueryValueDefinitionTime:DashboardWidgetQueryValueDefinitionTime": {
            "properties": {
                "liveSpan": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetScatterplotDefinition:DashboardWidgetScatterplotDefinition": {
            "properties": {
                "colorByGroups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "request": {
                    "$ref": "#/types/datadog:/DashboardWidgetScatterplotDefinitionRequest:DashboardWidgetScatterplotDefinitionRequest",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "time": {
                    "$ref": "#/types/datadog:/DashboardWidgetScatterplotDefinitionTime:DashboardWidgetScatterplotDefinitionTime",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "title": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleAlign": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "xaxis": {
                    "$ref": "#/types/datadog:/DashboardWidgetScatterplotDefinitionXaxis:DashboardWidgetScatterplotDefinitionXaxis",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "yaxis": {
                    "$ref": "#/types/datadog:/DashboardWidgetScatterplotDefinitionYaxis:DashboardWidgetScatterplotDefinitionYaxis",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetScatterplotDefinitionRequest:DashboardWidgetScatterplotDefinitionRequest": {
            "properties": {
                "xes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetScatterplotDefinitionRequestX:DashboardWidgetScatterplotDefinitionRequestX"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ys": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetScatterplotDefinitionRequestY:DashboardWidgetScatterplotDefinitionRequestY"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetScatterplotDefinitionRequestX:DashboardWidgetScatterplotDefinitionRequestX": {
            "properties": {
                "aggregator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "apmQuery": {
                    "$ref": "#/types/datadog:/DashboardWidgetScatterplotDefinitionRequestXApmQuery:DashboardWidgetScatterplotDefinitionRequestXApmQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logQuery": {
                    "$ref": "#/types/datadog:/DashboardWidgetScatterplotDefinitionRequestXLogQuery:DashboardWidgetScatterplotDefinitionRequestXLogQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "processQuery": {
                    "$ref": "#/types/datadog:/DashboardWidgetScatterplotDefinitionRequestXProcessQuery:DashboardWidgetScatterplotDefinitionRequestXProcessQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "q": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetScatterplotDefinitionRequestXApmQuery:DashboardWidgetScatterplotDefinitionRequestXApmQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:/DashboardWidgetScatterplotDefinitionRequestXApmQueryCompute:DashboardWidgetScatterplotDefinitionRequestXApmQueryCompute",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetScatterplotDefinitionRequestXApmQueryGroupBy:DashboardWidgetScatterplotDefinitionRequestXApmQueryGroupBy"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:/DashboardWidgetScatterplotDefinitionRequestXApmQuerySearch:DashboardWidgetScatterplotDefinitionRequestXApmQuerySearch",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "compute",
                "index"
            ]
        },
        "datadog:/DashboardWidgetScatterplotDefinitionRequestXApmQueryCompute:DashboardWidgetScatterplotDefinitionRequestXApmQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:/DashboardWidgetScatterplotDefinitionRequestXApmQueryGroupBy:DashboardWidgetScatterplotDefinitionRequestXApmQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:/DashboardWidgetScatterplotDefinitionRequestXApmQueryGroupBySort:DashboardWidgetScatterplotDefinitionRequestXApmQueryGroupBySort",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetScatterplotDefinitionRequestXApmQueryGroupBySort:DashboardWidgetScatterplotDefinitionRequestXApmQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:/DashboardWidgetScatterplotDefinitionRequestXApmQuerySearch:DashboardWidgetScatterplotDefinitionRequestXApmQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:/DashboardWidgetScatterplotDefinitionRequestXLogQuery:DashboardWidgetScatterplotDefinitionRequestXLogQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:/DashboardWidgetScatterplotDefinitionRequestXLogQueryCompute:DashboardWidgetScatterplotDefinitionRequestXLogQueryCompute",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetScatterplotDefinitionRequestXLogQueryGroupBy:DashboardWidgetScatterplotDefinitionRequestXLogQueryGroupBy"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:/DashboardWidgetScatterplotDefinitionRequestXLogQuerySearch:DashboardWidgetScatterplotDefinitionRequestXLogQuerySearch",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "compute",
                "index"
            ]
        },
        "datadog:/DashboardWidgetScatterplotDefinitionRequestXLogQueryCompute:DashboardWidgetScatterplotDefinitionRequestXLogQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:/DashboardWidgetScatterplotDefinitionRequestXLogQueryGroupBy:DashboardWidgetScatterplotDefinitionRequestXLogQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:/DashboardWidgetScatterplotDefinitionRequestXLogQueryGroupBySort:DashboardWidgetScatterplotDefinitionRequestXLogQueryGroupBySort",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetScatterplotDefinitionRequestXLogQueryGroupBySort:DashboardWidgetScatterplotDefinitionRequestXLogQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:/DashboardWidgetScatterplotDefinitionRequestXLogQuerySearch:DashboardWidgetScatterplotDefinitionRequestXLogQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:/DashboardWidgetScatterplotDefinitionRequestXProcessQuery:DashboardWidgetScatterplotDefinitionRequestXProcessQuery": {
            "properties": {
                "filterBies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "metric": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchBy": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "metric"
            ]
        },
        "datadog:/DashboardWidgetScatterplotDefinitionRequestY:DashboardWidgetScatterplotDefinitionRequestY": {
            "properties": {
                "aggregator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "apmQuery": {
                    "$ref": "#/types/datadog:/DashboardWidgetScatterplotDefinitionRequestYApmQuery:DashboardWidgetScatterplotDefinitionRequestYApmQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logQuery": {
                    "$ref": "#/types/datadog:/DashboardWidgetScatterplotDefinitionRequestYLogQuery:DashboardWidgetScatterplotDefinitionRequestYLogQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "processQuery": {
                    "$ref": "#/types/datadog:/DashboardWidgetScatterplotDefinitionRequestYProcessQuery:DashboardWidgetScatterplotDefinitionRequestYProcessQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "q": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetScatterplotDefinitionRequestYApmQuery:DashboardWidgetScatterplotDefinitionRequestYApmQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:/DashboardWidgetScatterplotDefinitionRequestYApmQueryCompute:DashboardWidgetScatterplotDefinitionRequestYApmQueryCompute",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetScatterplotDefinitionRequestYApmQueryGroupBy:DashboardWidgetScatterplotDefinitionRequestYApmQueryGroupBy"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:/DashboardWidgetScatterplotDefinitionRequestYApmQuerySearch:DashboardWidgetScatterplotDefinitionRequestYApmQuerySearch",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "compute",
                "index"
            ]
        },
        "datadog:/DashboardWidgetScatterplotDefinitionRequestYApmQueryCompute:DashboardWidgetScatterplotDefinitionRequestYApmQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:/DashboardWidgetScatterplotDefinitionRequestYApmQueryGroupBy:DashboardWidgetScatterplotDefinitionRequestYApmQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:/DashboardWidgetScatterplotDefinitionRequestYApmQueryGroupBySort:DashboardWidgetScatterplotDefinitionRequestYApmQueryGroupBySort",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetScatterplotDefinitionRequestYApmQueryGroupBySort:DashboardWidgetScatterplotDefinitionRequestYApmQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:/DashboardWidgetScatterplotDefinitionRequestYApmQuerySearch:DashboardWidgetScatterplotDefinitionRequestYApmQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:/DashboardWidgetScatterplotDefinitionRequestYLogQuery:DashboardWidgetScatterplotDefinitionRequestYLogQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:/DashboardWidgetScatterplotDefinitionRequestYLogQueryCompute:DashboardWidgetScatterplotDefinitionRequestYLogQueryCompute",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetScatterplotDefinitionRequestYLogQueryGroupBy:DashboardWidgetScatterplotDefinitionRequestYLogQueryGroupBy"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:/DashboardWidgetScatterplotDefinitionRequestYLogQuerySearch:DashboardWidgetScatterplotDefinitionRequestYLogQuerySearch",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "compute",
                "index"
            ]
        },
        "datadog:/DashboardWidgetScatterplotDefinitionRequestYLogQueryCompute:DashboardWidgetScatterplotDefinitionRequestYLogQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:/DashboardWidgetScatterplotDefinitionRequestYLogQueryGroupBy:DashboardWidgetScatterplotDefinitionRequestYLogQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:/DashboardWidgetScatterplotDefinitionRequestYLogQueryGroupBySort:DashboardWidgetScatterplotDefinitionRequestYLogQueryGroupBySort",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetScatterplotDefinitionRequestYLogQueryGroupBySort:DashboardWidgetScatterplotDefinitionRequestYLogQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:/DashboardWidgetScatterplotDefinitionRequestYLogQuerySearch:DashboardWidgetScatterplotDefinitionRequestYLogQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:/DashboardWidgetScatterplotDefinitionRequestYProcessQuery:DashboardWidgetScatterplotDefinitionRequestYProcessQuery": {
            "properties": {
                "filterBies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "metric": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchBy": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "metric"
            ]
        },
        "datadog:/DashboardWidgetScatterplotDefinitionTime:DashboardWidgetScatterplotDefinitionTime": {
            "properties": {
                "liveSpan": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetScatterplotDefinitionXaxis:DashboardWidgetScatterplotDefinitionXaxis": {
            "properties": {
                "includeZero": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "label": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "max": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "min": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "scale": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetScatterplotDefinitionYaxis:DashboardWidgetScatterplotDefinitionYaxis": {
            "properties": {
                "includeZero": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "label": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "max": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "min": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "scale": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetServiceLevelObjectiveDefinition:DashboardWidgetServiceLevelObjectiveDefinition": {
            "properties": {
                "showErrorBudget": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sloId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "timeWindows": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "title": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleAlign": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "viewMode": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "viewType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "sloId",
                "timeWindows",
                "viewMode",
                "viewType"
            ]
        },
        "datadog:/DashboardWidgetTimeseriesDefinition:DashboardWidgetTimeseriesDefinition": {
            "properties": {
                "events": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetTimeseriesDefinitionEvent:DashboardWidgetTimeseriesDefinitionEvent"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "legendSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "markers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetTimeseriesDefinitionMarker:DashboardWidgetTimeseriesDefinitionMarker"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "requests": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetTimeseriesDefinitionRequest:DashboardWidgetTimeseriesDefinitionRequest"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "showLegend": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "time": {
                    "$ref": "#/types/datadog:/DashboardWidgetTimeseriesDefinitionTime:DashboardWidgetTimeseriesDefinitionTime",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "title": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleAlign": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "yaxis": {
                    "$ref": "#/types/datadog:/DashboardWidgetTimeseriesDefinitionYaxis:DashboardWidgetTimeseriesDefinitionYaxis",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetTimeseriesDefinitionEvent:DashboardWidgetTimeseriesDefinitionEvent": {
            "properties": {
                "q": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "q"
            ]
        },
        "datadog:/DashboardWidgetTimeseriesDefinitionMarker:DashboardWidgetTimeseriesDefinitionMarker": {
            "properties": {
                "displayType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "label": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "value"
            ]
        },
        "datadog:/DashboardWidgetTimeseriesDefinitionRequest:DashboardWidgetTimeseriesDefinitionRequest": {
            "properties": {
                "apmQuery": {
                    "$ref": "#/types/datadog:/DashboardWidgetTimeseriesDefinitionRequestApmQuery:DashboardWidgetTimeseriesDefinitionRequestApmQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "displayType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logQuery": {
                    "$ref": "#/types/datadog:/DashboardWidgetTimeseriesDefinitionRequestLogQuery:DashboardWidgetTimeseriesDefinitionRequestLogQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "metadatas": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetTimeseriesDefinitionRequestMetadata:DashboardWidgetTimeseriesDefinitionRequestMetadata"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "processQuery": {
                    "$ref": "#/types/datadog:/DashboardWidgetTimeseriesDefinitionRequestProcessQuery:DashboardWidgetTimeseriesDefinitionRequestProcessQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "q": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "style": {
                    "$ref": "#/types/datadog:/DashboardWidgetTimeseriesDefinitionRequestStyle:DashboardWidgetTimeseriesDefinitionRequestStyle",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetTimeseriesDefinitionRequestApmQuery:DashboardWidgetTimeseriesDefinitionRequestApmQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:/DashboardWidgetTimeseriesDefinitionRequestApmQueryCompute:DashboardWidgetTimeseriesDefinitionRequestApmQueryCompute",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetTimeseriesDefinitionRequestApmQueryGroupBy:DashboardWidgetTimeseriesDefinitionRequestApmQueryGroupBy"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:/DashboardWidgetTimeseriesDefinitionRequestApmQuerySearch:DashboardWidgetTimeseriesDefinitionRequestApmQuerySearch",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "compute",
                "index"
            ]
        },
        "datadog:/DashboardWidgetTimeseriesDefinitionRequestApmQueryCompute:DashboardWidgetTimeseriesDefinitionRequestApmQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:/DashboardWidgetTimeseriesDefinitionRequestApmQueryGroupBy:DashboardWidgetTimeseriesDefinitionRequestApmQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:/DashboardWidgetTimeseriesDefinitionRequestApmQueryGroupBySort:DashboardWidgetTimeseriesDefinitionRequestApmQueryGroupBySort",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetTimeseriesDefinitionRequestApmQueryGroupBySort:DashboardWidgetTimeseriesDefinitionRequestApmQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:/DashboardWidgetTimeseriesDefinitionRequestApmQuerySearch:DashboardWidgetTimeseriesDefinitionRequestApmQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:/DashboardWidgetTimeseriesDefinitionRequestLogQuery:DashboardWidgetTimeseriesDefinitionRequestLogQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:/DashboardWidgetTimeseriesDefinitionRequestLogQueryCompute:DashboardWidgetTimeseriesDefinitionRequestLogQueryCompute",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetTimeseriesDefinitionRequestLogQueryGroupBy:DashboardWidgetTimeseriesDefinitionRequestLogQueryGroupBy"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:/DashboardWidgetTimeseriesDefinitionRequestLogQuerySearch:DashboardWidgetTimeseriesDefinitionRequestLogQuerySearch",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "compute",
                "index"
            ]
        },
        "datadog:/DashboardWidgetTimeseriesDefinitionRequestLogQueryCompute:DashboardWidgetTimeseriesDefinitionRequestLogQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:/DashboardWidgetTimeseriesDefinitionRequestLogQueryGroupBy:DashboardWidgetTimeseriesDefinitionRequestLogQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:/DashboardWidgetTimeseriesDefinitionRequestLogQueryGroupBySort:DashboardWidgetTimeseriesDefinitionRequestLogQueryGroupBySort",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetTimeseriesDefinitionRequestLogQueryGroupBySort:DashboardWidgetTimeseriesDefinitionRequestLogQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:/DashboardWidgetTimeseriesDefinitionRequestLogQuerySearch:DashboardWidgetTimeseriesDefinitionRequestLogQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:/DashboardWidgetTimeseriesDefinitionRequestMetadata:DashboardWidgetTimeseriesDefinitionRequestMetadata": {
            "properties": {
                "aliasName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "expression": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "expression"
            ]
        },
        "datadog:/DashboardWidgetTimeseriesDefinitionRequestProcessQuery:DashboardWidgetTimeseriesDefinitionRequestProcessQuery": {
            "properties": {
                "filterBies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "metric": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchBy": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "metric"
            ]
        },
        "datadog:/DashboardWidgetTimeseriesDefinitionRequestStyle:DashboardWidgetTimeseriesDefinitionRequestStyle": {
            "properties": {
                "lineType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "lineWidth": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "palette": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetTimeseriesDefinitionTime:DashboardWidgetTimeseriesDefinitionTime": {
            "properties": {
                "liveSpan": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetTimeseriesDefinitionYaxis:DashboardWidgetTimeseriesDefinitionYaxis": {
            "properties": {
                "includeZero": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "label": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "max": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "min": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "scale": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetToplistDefinition:DashboardWidgetToplistDefinition": {
            "properties": {
                "requests": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetToplistDefinitionRequest:DashboardWidgetToplistDefinitionRequest"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "time": {
                    "$ref": "#/types/datadog:/DashboardWidgetToplistDefinitionTime:DashboardWidgetToplistDefinitionTime",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "title": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleAlign": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetToplistDefinitionRequest:DashboardWidgetToplistDefinitionRequest": {
            "properties": {
                "apmQuery": {
                    "$ref": "#/types/datadog:/DashboardWidgetToplistDefinitionRequestApmQuery:DashboardWidgetToplistDefinitionRequestApmQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "conditionalFormats": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetToplistDefinitionRequestConditionalFormat:DashboardWidgetToplistDefinitionRequestConditionalFormat"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logQuery": {
                    "$ref": "#/types/datadog:/DashboardWidgetToplistDefinitionRequestLogQuery:DashboardWidgetToplistDefinitionRequestLogQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "processQuery": {
                    "$ref": "#/types/datadog:/DashboardWidgetToplistDefinitionRequestProcessQuery:DashboardWidgetToplistDefinitionRequestProcessQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "q": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "style": {
                    "$ref": "#/types/datadog:/DashboardWidgetToplistDefinitionRequestStyle:DashboardWidgetToplistDefinitionRequestStyle",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetToplistDefinitionRequestApmQuery:DashboardWidgetToplistDefinitionRequestApmQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:/DashboardWidgetToplistDefinitionRequestApmQueryCompute:DashboardWidgetToplistDefinitionRequestApmQueryCompute",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetToplistDefinitionRequestApmQueryGroupBy:DashboardWidgetToplistDefinitionRequestApmQueryGroupBy"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:/DashboardWidgetToplistDefinitionRequestApmQuerySearch:DashboardWidgetToplistDefinitionRequestApmQuerySearch",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "compute",
                "index"
            ]
        },
        "datadog:/DashboardWidgetToplistDefinitionRequestApmQueryCompute:DashboardWidgetToplistDefinitionRequestApmQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:/DashboardWidgetToplistDefinitionRequestApmQueryGroupBy:DashboardWidgetToplistDefinitionRequestApmQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:/DashboardWidgetToplistDefinitionRequestApmQueryGroupBySort:DashboardWidgetToplistDefinitionRequestApmQueryGroupBySort",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetToplistDefinitionRequestApmQueryGroupBySort:DashboardWidgetToplistDefinitionRequestApmQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:/DashboardWidgetToplistDefinitionRequestApmQuerySearch:DashboardWidgetToplistDefinitionRequestApmQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:/DashboardWidgetToplistDefinitionRequestConditionalFormat:DashboardWidgetToplistDefinitionRequestConditionalFormat": {
            "properties": {
                "comparator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "customBgColor": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "customFgColor": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "hideValue": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "imageUrl": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "palette": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "timeframe": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "number",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "comparator",
                "palette",
                "value"
            ]
        },
        "datadog:/DashboardWidgetToplistDefinitionRequestLogQuery:DashboardWidgetToplistDefinitionRequestLogQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:/DashboardWidgetToplistDefinitionRequestLogQueryCompute:DashboardWidgetToplistDefinitionRequestLogQueryCompute",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetToplistDefinitionRequestLogQueryGroupBy:DashboardWidgetToplistDefinitionRequestLogQueryGroupBy"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:/DashboardWidgetToplistDefinitionRequestLogQuerySearch:DashboardWidgetToplistDefinitionRequestLogQuerySearch",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "compute",
                "index"
            ]
        },
        "datadog:/DashboardWidgetToplistDefinitionRequestLogQueryCompute:DashboardWidgetToplistDefinitionRequestLogQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:/DashboardWidgetToplistDefinitionRequestLogQueryGroupBy:DashboardWidgetToplistDefinitionRequestLogQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:/DashboardWidgetToplistDefinitionRequestLogQueryGroupBySort:DashboardWidgetToplistDefinitionRequestLogQueryGroupBySort",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetToplistDefinitionRequestLogQueryGroupBySort:DashboardWidgetToplistDefinitionRequestLogQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:/DashboardWidgetToplistDefinitionRequestLogQuerySearch:DashboardWidgetToplistDefinitionRequestLogQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:/DashboardWidgetToplistDefinitionRequestProcessQuery:DashboardWidgetToplistDefinitionRequestProcessQuery": {
            "properties": {
                "filterBies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "metric": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchBy": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "metric"
            ]
        },
        "datadog:/DashboardWidgetToplistDefinitionRequestStyle:DashboardWidgetToplistDefinitionRequestStyle": {
            "properties": {
                "palette": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetToplistDefinitionTime:DashboardWidgetToplistDefinitionTime": {
            "properties": {
                "liveSpan": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetTraceServiceDefinition:DashboardWidgetTraceServiceDefinition": {
            "properties": {
                "displayFormat": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "env": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "service": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "showBreakdown": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "showDistribution": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "showErrors": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "showHits": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "showLatency": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "showResourceList": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sizeFormat": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "spanName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "time": {
                    "$ref": "#/types/datadog:/DashboardWidgetTraceServiceDefinitionTime:DashboardWidgetTraceServiceDefinitionTime",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "title": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleAlign": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "env",
                "service",
                "spanName"
            ]
        },
        "datadog:/DashboardWidgetTraceServiceDefinitionTime:DashboardWidgetTraceServiceDefinitionTime": {
            "properties": {
                "liveSpan": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DowntimeRecurrence:DowntimeRecurrence": {
            "properties": {
                "period": {
                    "type": "integer",
                    "description": "How often to repeat as an integer. For example to repeat every 3 days, select a type of days and a period of 3.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "description": "days, weeks, months, or years\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "untilDate": {
                    "type": "integer",
                    "description": "The date at which the recurrence should end as a POSIX timestamp. `until_occurrences` and `until_date` are mutually exclusive.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "untilOccurrences": {
                    "type": "integer",
                    "description": "How many times the downtime will be rescheduled. `until_occurrences` and `until_date` are mutually exclusive.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "weekDays": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of week days to repeat on. Choose from: Mon, Tue, Wed, Thu, Fri, Sat or Sun. Only applicable when type is weeks. First letter must be capitalized.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "period",
                "type"
            ]
        },
        "datadog:/LogsCustomPipelineFilter:LogsCustomPipelineFilter": {
            "properties": {
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:/LogsCustomPipelineProcessor:LogsCustomPipelineProcessor": {
            "properties": {
                "arithmeticProcessor": {
                    "$ref": "#/types/datadog:/LogsCustomPipelineProcessorArithmeticProcessor:LogsCustomPipelineProcessorArithmeticProcessor",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "attributeRemapper": {
                    "$ref": "#/types/datadog:/LogsCustomPipelineProcessorAttributeRemapper:LogsCustomPipelineProcessorAttributeRemapper",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "categoryProcessor": {
                    "$ref": "#/types/datadog:/LogsCustomPipelineProcessorCategoryProcessor:LogsCustomPipelineProcessorCategoryProcessor",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "dateRemapper": {
                    "$ref": "#/types/datadog:/LogsCustomPipelineProcessorDateRemapper:LogsCustomPipelineProcessorDateRemapper",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "geoIpParser": {
                    "$ref": "#/types/datadog:/LogsCustomPipelineProcessorGeoIpParser:LogsCustomPipelineProcessorGeoIpParser",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "grokParser": {
                    "$ref": "#/types/datadog:/LogsCustomPipelineProcessorGrokParser:LogsCustomPipelineProcessorGrokParser",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "messageRemapper": {
                    "$ref": "#/types/datadog:/LogsCustomPipelineProcessorMessageRemapper:LogsCustomPipelineProcessorMessageRemapper",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "pipeline": {
                    "$ref": "#/types/datadog:/LogsCustomPipelineProcessorPipeline:LogsCustomPipelineProcessorPipeline",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "serviceRemapper": {
                    "$ref": "#/types/datadog:/LogsCustomPipelineProcessorServiceRemapper:LogsCustomPipelineProcessorServiceRemapper",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "statusRemapper": {
                    "$ref": "#/types/datadog:/LogsCustomPipelineProcessorStatusRemapper:LogsCustomPipelineProcessorStatusRemapper",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "stringBuilderProcessor": {
                    "$ref": "#/types/datadog:/LogsCustomPipelineProcessorStringBuilderProcessor:LogsCustomPipelineProcessorStringBuilderProcessor",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "traceIdRemapper": {
                    "$ref": "#/types/datadog:/LogsCustomPipelineProcessorTraceIdRemapper:LogsCustomPipelineProcessorTraceIdRemapper",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "urlParser": {
                    "$ref": "#/types/datadog:/LogsCustomPipelineProcessorUrlParser:LogsCustomPipelineProcessorUrlParser",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "userAgentParser": {
                    "$ref": "#/types/datadog:/LogsCustomPipelineProcessorUserAgentParser:LogsCustomPipelineProcessorUserAgentParser",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/LogsCustomPipelineProcessorArithmeticProcessor:LogsCustomPipelineProcessorArithmeticProcessor": {
            "properties": {
                "expression": {
                    "type": "string",
                    "description": "Arithmetic operation between one or more log attributes.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "isEnabled": {
                    "type": "boolean",
                    "description": "If the processor is enabled or not.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "isReplaceMissing": {
                    "type": "boolean",
                    "description": "If it replaces all missing attributes of `template` by an empty string.\n* trace_id_remapper\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "Name of the processor\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "target": {
                    "type": "string",
                    "description": "Name of the parent attribute that contains all the extracted details from the sources.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "expression",
                "target"
            ]
        },
        "datadog:/LogsCustomPipelineProcessorAttributeRemapper:LogsCustomPipelineProcessorAttributeRemapper": {
            "properties": {
                "isEnabled": {
                    "type": "boolean",
                    "description": "If the processor is enabled or not.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "Name of the processor\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "overrideOnConflict": {
                    "type": "boolean",
                    "description": "Override the target element if already set.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "preserveSource": {
                    "type": "boolean",
                    "description": "Remove or preserve the remapped source element.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sourceType": {
                    "type": "string",
                    "description": "Defines where the sources are from (log `attribute` or `tag`). \n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sources": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of source attributes.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "target": {
                    "type": "string",
                    "description": "Name of the parent attribute that contains all the extracted details from the sources.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "targetType": {
                    "type": "string",
                    "description": "Defines if the target is a log `attribute` or `tag`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "sourceType",
                "sources",
                "target",
                "targetType"
            ]
        },
        "datadog:/LogsCustomPipelineProcessorCategoryProcessor:LogsCustomPipelineProcessorCategoryProcessor": {
            "properties": {
                "categories": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/LogsCustomPipelineProcessorCategoryProcessorCategory:LogsCustomPipelineProcessorCategoryProcessorCategory"
                    },
                    "description": "List of filters to match or exclude a log with their corresponding name to assign a custom value to the log.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "isEnabled": {
                    "type": "boolean",
                    "description": "If the processor is enabled or not.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "Name of the processor\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "target": {
                    "type": "string",
                    "description": "Name of the parent attribute that contains all the extracted details from the sources.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "categories",
                "target"
            ]
        },
        "datadog:/LogsCustomPipelineProcessorCategoryProcessorCategory:LogsCustomPipelineProcessorCategoryProcessorCategory": {
            "properties": {
                "filters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/LogsCustomPipelineProcessorCategoryProcessorCategoryFilter:LogsCustomPipelineProcessorCategoryProcessorCategoryFilter"
                    },
                    "description": "Defines the nested pipeline filter. Only logs that match the filter criteria are processed by this pipeline.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "Name of the processor\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "filters",
                "name"
            ]
        },
        "datadog:/LogsCustomPipelineProcessorCategoryProcessorCategoryFilter:LogsCustomPipelineProcessorCategoryProcessorCategoryFilter": {
            "properties": {
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:/LogsCustomPipelineProcessorDateRemapper:LogsCustomPipelineProcessorDateRemapper": {
            "properties": {
                "isEnabled": {
                    "type": "boolean",
                    "description": "If the processor is enabled or not.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "Name of the processor\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sources": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of source attributes.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "sources"
            ]
        },
        "datadog:/LogsCustomPipelineProcessorGeoIpParser:LogsCustomPipelineProcessorGeoIpParser": {
            "properties": {
                "isEnabled": {
                    "type": "boolean",
                    "description": "If the processor is enabled or not.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "Name of the processor\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sources": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of source attributes.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "target": {
                    "type": "string",
                    "description": "Name of the parent attribute that contains all the extracted details from the sources.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "sources",
                "target"
            ]
        },
        "datadog:/LogsCustomPipelineProcessorGrokParser:LogsCustomPipelineProcessorGrokParser": {
            "properties": {
                "grok": {
                    "$ref": "#/types/datadog:/LogsCustomPipelineProcessorGrokParserGrok:LogsCustomPipelineProcessorGrokParserGrok",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "isEnabled": {
                    "type": "boolean",
                    "description": "If the processor is enabled or not.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "Name of the processor\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "samples": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of sample logs for this parser. It can save up to 5 samples. Each sample takes up to 5000 characters.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "source": {
                    "type": "string",
                    "description": "Name of the log attribute to parse.\n* `grok`\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "grok",
                "source"
            ]
        },
        "datadog:/LogsCustomPipelineProcessorGrokParserGrok:LogsCustomPipelineProcessorGrokParserGrok": {
            "properties": {
                "matchRules": {
                    "type": "string",
                    "description": "Match rules for your grok parser.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "supportRules": {
                    "type": "string",
                    "description": "Support rules for your grok parser.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "matchRules",
                "supportRules"
            ]
        },
        "datadog:/LogsCustomPipelineProcessorMessageRemapper:LogsCustomPipelineProcessorMessageRemapper": {
            "properties": {
                "isEnabled": {
                    "type": "boolean",
                    "description": "If the processor is enabled or not.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "Name of the processor\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sources": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of source attributes.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "sources"
            ]
        },
        "datadog:/LogsCustomPipelineProcessorPipeline:LogsCustomPipelineProcessorPipeline": {
            "properties": {
                "filters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/LogsCustomPipelineProcessorPipelineFilter:LogsCustomPipelineProcessorPipelineFilter"
                    },
                    "description": "Defines the nested pipeline filter. Only logs that match the filter criteria are processed by this pipeline.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "isEnabled": {
                    "type": "boolean",
                    "description": "If the processor is enabled or not.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "Name of the processor\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "processors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/LogsCustomPipelineProcessorPipelineProcessor:LogsCustomPipelineProcessorPipelineProcessor"
                    },
                    "description": "Processors. Nested pipeline can't take any other nested pipeline as its processor.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "filters",
                "name"
            ]
        },
        "datadog:/LogsCustomPipelineProcessorPipelineFilter:LogsCustomPipelineProcessorPipelineFilter": {
            "properties": {
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:/LogsCustomPipelineProcessorPipelineProcessor:LogsCustomPipelineProcessorPipelineProcessor": {
            "properties": {
                "arithmeticProcessor": {
                    "$ref": "#/types/datadog:/LogsCustomPipelineProcessorPipelineProcessorArithmeticProcessor:LogsCustomPipelineProcessorPipelineProcessorArithmeticProcessor",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "attributeRemapper": {
                    "$ref": "#/types/datadog:/LogsCustomPipelineProcessorPipelineProcessorAttributeRemapper:LogsCustomPipelineProcessorPipelineProcessorAttributeRemapper",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "categoryProcessor": {
                    "$ref": "#/types/datadog:/LogsCustomPipelineProcessorPipelineProcessorCategoryProcessor:LogsCustomPipelineProcessorPipelineProcessorCategoryProcessor",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "dateRemapper": {
                    "$ref": "#/types/datadog:/LogsCustomPipelineProcessorPipelineProcessorDateRemapper:LogsCustomPipelineProcessorPipelineProcessorDateRemapper",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "geoIpParser": {
                    "$ref": "#/types/datadog:/LogsCustomPipelineProcessorPipelineProcessorGeoIpParser:LogsCustomPipelineProcessorPipelineProcessorGeoIpParser",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "grokParser": {
                    "$ref": "#/types/datadog:/LogsCustomPipelineProcessorPipelineProcessorGrokParser:LogsCustomPipelineProcessorPipelineProcessorGrokParser",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "messageRemapper": {
                    "$ref": "#/types/datadog:/LogsCustomPipelineProcessorPipelineProcessorMessageRemapper:LogsCustomPipelineProcessorPipelineProcessorMessageRemapper",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "serviceRemapper": {
                    "$ref": "#/types/datadog:/LogsCustomPipelineProcessorPipelineProcessorServiceRemapper:LogsCustomPipelineProcessorPipelineProcessorServiceRemapper",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "statusRemapper": {
                    "$ref": "#/types/datadog:/LogsCustomPipelineProcessorPipelineProcessorStatusRemapper:LogsCustomPipelineProcessorPipelineProcessorStatusRemapper",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "stringBuilderProcessor": {
                    "$ref": "#/types/datadog:/LogsCustomPipelineProcessorPipelineProcessorStringBuilderProcessor:LogsCustomPipelineProcessorPipelineProcessorStringBuilderProcessor",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "traceIdRemapper": {
                    "$ref": "#/types/datadog:/LogsCustomPipelineProcessorPipelineProcessorTraceIdRemapper:LogsCustomPipelineProcessorPipelineProcessorTraceIdRemapper",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "urlParser": {
                    "$ref": "#/types/datadog:/LogsCustomPipelineProcessorPipelineProcessorUrlParser:LogsCustomPipelineProcessorPipelineProcessorUrlParser",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "userAgentParser": {
                    "$ref": "#/types/datadog:/LogsCustomPipelineProcessorPipelineProcessorUserAgentParser:LogsCustomPipelineProcessorPipelineProcessorUserAgentParser",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/LogsCustomPipelineProcessorPipelineProcessorArithmeticProcessor:LogsCustomPipelineProcessorPipelineProcessorArithmeticProcessor": {
            "properties": {
                "expression": {
                    "type": "string",
                    "description": "Arithmetic operation between one or more log attributes.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "isEnabled": {
                    "type": "boolean",
                    "description": "If the processor is enabled or not.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "isReplaceMissing": {
                    "type": "boolean",
                    "description": "If it replaces all missing attributes of `template` by an empty string.\n* trace_id_remapper\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "Name of the processor\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "target": {
                    "type": "string",
                    "description": "Name of the parent attribute that contains all the extracted details from the sources.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "expression",
                "target"
            ]
        },
        "datadog:/LogsCustomPipelineProcessorPipelineProcessorAttributeRemapper:LogsCustomPipelineProcessorPipelineProcessorAttributeRemapper": {
            "properties": {
                "isEnabled": {
                    "type": "boolean",
                    "description": "If the processor is enabled or not.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "Name of the processor\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "overrideOnConflict": {
                    "type": "boolean",
                    "description": "Override the target element if already set.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "preserveSource": {
                    "type": "boolean",
                    "description": "Remove or preserve the remapped source element.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sourceType": {
                    "type": "string",
                    "description": "Defines where the sources are from (log `attribute` or `tag`). \n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sources": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of source attributes.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "target": {
                    "type": "string",
                    "description": "Name of the parent attribute that contains all the extracted details from the sources.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "targetType": {
                    "type": "string",
                    "description": "Defines if the target is a log `attribute` or `tag`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "sourceType",
                "sources",
                "target",
                "targetType"
            ]
        },
        "datadog:/LogsCustomPipelineProcessorPipelineProcessorCategoryProcessor:LogsCustomPipelineProcessorPipelineProcessorCategoryProcessor": {
            "properties": {
                "categories": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/LogsCustomPipelineProcessorPipelineProcessorCategoryProcessorCategory:LogsCustomPipelineProcessorPipelineProcessorCategoryProcessorCategory"
                    },
                    "description": "List of filters to match or exclude a log with their corresponding name to assign a custom value to the log.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "isEnabled": {
                    "type": "boolean",
                    "description": "If the processor is enabled or not.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "Name of the processor\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "target": {
                    "type": "string",
                    "description": "Name of the parent attribute that contains all the extracted details from the sources.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "categories",
                "target"
            ]
        },
        "datadog:/LogsCustomPipelineProcessorPipelineProcessorCategoryProcessorCategory:LogsCustomPipelineProcessorPipelineProcessorCategoryProcessorCategory": {
            "properties": {
                "filters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/LogsCustomPipelineProcessorPipelineProcessorCategoryProcessorCategoryFilter:LogsCustomPipelineProcessorPipelineProcessorCategoryProcessorCategoryFilter"
                    },
                    "description": "Defines the nested pipeline filter. Only logs that match the filter criteria are processed by this pipeline.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "Name of the processor\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "filters",
                "name"
            ]
        },
        "datadog:/LogsCustomPipelineProcessorPipelineProcessorCategoryProcessorCategoryFilter:LogsCustomPipelineProcessorPipelineProcessorCategoryProcessorCategoryFilter": {
            "properties": {
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:/LogsCustomPipelineProcessorPipelineProcessorDateRemapper:LogsCustomPipelineProcessorPipelineProcessorDateRemapper": {
            "properties": {
                "isEnabled": {
                    "type": "boolean",
                    "description": "If the processor is enabled or not.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "Name of the processor\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sources": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of source attributes.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "sources"
            ]
        },
        "datadog:/LogsCustomPipelineProcessorPipelineProcessorGeoIpParser:LogsCustomPipelineProcessorPipelineProcessorGeoIpParser": {
            "properties": {
                "isEnabled": {
                    "type": "boolean",
                    "description": "If the processor is enabled or not.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "Name of the processor\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sources": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of source attributes.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "target": {
                    "type": "string",
                    "description": "Name of the parent attribute that contains all the extracted details from the sources.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "sources",
                "target"
            ]
        },
        "datadog:/LogsCustomPipelineProcessorPipelineProcessorGrokParser:LogsCustomPipelineProcessorPipelineProcessorGrokParser": {
            "properties": {
                "grok": {
                    "$ref": "#/types/datadog:/LogsCustomPipelineProcessorPipelineProcessorGrokParserGrok:LogsCustomPipelineProcessorPipelineProcessorGrokParserGrok",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "isEnabled": {
                    "type": "boolean",
                    "description": "If the processor is enabled or not.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "Name of the processor\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "samples": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of sample logs for this parser. It can save up to 5 samples. Each sample takes up to 5000 characters.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "source": {
                    "type": "string",
                    "description": "Name of the log attribute to parse.\n* `grok`\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "grok",
                "source"
            ]
        },
        "datadog:/LogsCustomPipelineProcessorPipelineProcessorGrokParserGrok:LogsCustomPipelineProcessorPipelineProcessorGrokParserGrok": {
            "properties": {
                "matchRules": {
                    "type": "string",
                    "description": "Match rules for your grok parser.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "supportRules": {
                    "type": "string",
                    "description": "Support rules for your grok parser.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "matchRules",
                "supportRules"
            ]
        },
        "datadog:/LogsCustomPipelineProcessorPipelineProcessorMessageRemapper:LogsCustomPipelineProcessorPipelineProcessorMessageRemapper": {
            "properties": {
                "isEnabled": {
                    "type": "boolean",
                    "description": "If the processor is enabled or not.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "Name of the processor\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sources": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of source attributes.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "sources"
            ]
        },
        "datadog:/LogsCustomPipelineProcessorPipelineProcessorServiceRemapper:LogsCustomPipelineProcessorPipelineProcessorServiceRemapper": {
            "properties": {
                "isEnabled": {
                    "type": "boolean",
                    "description": "If the processor is enabled or not.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "Name of the processor\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sources": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of source attributes.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "sources"
            ]
        },
        "datadog:/LogsCustomPipelineProcessorPipelineProcessorStatusRemapper:LogsCustomPipelineProcessorPipelineProcessorStatusRemapper": {
            "properties": {
                "isEnabled": {
                    "type": "boolean",
                    "description": "If the processor is enabled or not.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "Name of the processor\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sources": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of source attributes.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "sources"
            ]
        },
        "datadog:/LogsCustomPipelineProcessorPipelineProcessorStringBuilderProcessor:LogsCustomPipelineProcessorPipelineProcessorStringBuilderProcessor": {
            "properties": {
                "isEnabled": {
                    "type": "boolean",
                    "description": "If the processor is enabled or not.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "isReplaceMissing": {
                    "type": "boolean",
                    "description": "If it replaces all missing attributes of `template` by an empty string.\n* trace_id_remapper\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "Name of the processor\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "target": {
                    "type": "string",
                    "description": "Name of the parent attribute that contains all the extracted details from the sources.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "template": {
                    "type": "string",
                    "description": "The formula with one or more attributes and raw text.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "target",
                "template"
            ]
        },
        "datadog:/LogsCustomPipelineProcessorPipelineProcessorTraceIdRemapper:LogsCustomPipelineProcessorPipelineProcessorTraceIdRemapper": {
            "properties": {
                "isEnabled": {
                    "type": "boolean",
                    "description": "If the processor is enabled or not.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "Name of the processor\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sources": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of source attributes.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "sources"
            ]
        },
        "datadog:/LogsCustomPipelineProcessorPipelineProcessorUrlParser:LogsCustomPipelineProcessorPipelineProcessorUrlParser": {
            "properties": {
                "isEnabled": {
                    "type": "boolean",
                    "description": "If the processor is enabled or not.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "Name of the processor\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "normalizeEndingSlashes": {
                    "type": "boolean",
                    "description": "Normalize the ending slashes or not.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sources": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of source attributes.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "target": {
                    "type": "string",
                    "description": "Name of the parent attribute that contains all the extracted details from the sources.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "sources",
                "target"
            ]
        },
        "datadog:/LogsCustomPipelineProcessorPipelineProcessorUserAgentParser:LogsCustomPipelineProcessorPipelineProcessorUserAgentParser": {
            "properties": {
                "isEnabled": {
                    "type": "boolean",
                    "description": "If the processor is enabled or not.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "isEncoded": {
                    "type": "boolean",
                    "description": "If the source attribute is URL encoded or not.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "Name of the processor\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sources": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of source attributes.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "target": {
                    "type": "string",
                    "description": "Name of the parent attribute that contains all the extracted details from the sources.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "sources",
                "target"
            ]
        },
        "datadog:/LogsCustomPipelineProcessorServiceRemapper:LogsCustomPipelineProcessorServiceRemapper": {
            "properties": {
                "isEnabled": {
                    "type": "boolean",
                    "description": "If the processor is enabled or not.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "Name of the processor\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sources": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of source attributes.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "sources"
            ]
        },
        "datadog:/LogsCustomPipelineProcessorStatusRemapper:LogsCustomPipelineProcessorStatusRemapper": {
            "properties": {
                "isEnabled": {
                    "type": "boolean",
                    "description": "If the processor is enabled or not.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "Name of the processor\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sources": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of source attributes.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "sources"
            ]
        },
        "datadog:/LogsCustomPipelineProcessorStringBuilderProcessor:LogsCustomPipelineProcessorStringBuilderProcessor": {
            "properties": {
                "isEnabled": {
                    "type": "boolean",
                    "description": "If the processor is enabled or not.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "isReplaceMissing": {
                    "type": "boolean",
                    "description": "If it replaces all missing attributes of `template` by an empty string.\n* trace_id_remapper\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "Name of the processor\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "target": {
                    "type": "string",
                    "description": "Name of the parent attribute that contains all the extracted details from the sources.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "template": {
                    "type": "string",
                    "description": "The formula with one or more attributes and raw text.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "target",
                "template"
            ]
        },
        "datadog:/LogsCustomPipelineProcessorTraceIdRemapper:LogsCustomPipelineProcessorTraceIdRemapper": {
            "properties": {
                "isEnabled": {
                    "type": "boolean",
                    "description": "If the processor is enabled or not.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "Name of the processor\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sources": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of source attributes.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "sources"
            ]
        },
        "datadog:/LogsCustomPipelineProcessorUrlParser:LogsCustomPipelineProcessorUrlParser": {
            "properties": {
                "isEnabled": {
                    "type": "boolean",
                    "description": "If the processor is enabled or not.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "Name of the processor\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "normalizeEndingSlashes": {
                    "type": "boolean",
                    "description": "Normalize the ending slashes or not.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sources": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of source attributes.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "target": {
                    "type": "string",
                    "description": "Name of the parent attribute that contains all the extracted details from the sources.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "sources",
                "target"
            ]
        },
        "datadog:/LogsCustomPipelineProcessorUserAgentParser:LogsCustomPipelineProcessorUserAgentParser": {
            "properties": {
                "isEnabled": {
                    "type": "boolean",
                    "description": "If the processor is enabled or not.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "isEncoded": {
                    "type": "boolean",
                    "description": "If the source attribute is URL encoded or not.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "Name of the processor\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sources": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of source attributes.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "target": {
                    "type": "string",
                    "description": "Name of the parent attribute that contains all the extracted details from the sources.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "sources",
                "target"
            ]
        },
        "datadog:/LogsIndexExclusionFilter:LogsIndexExclusionFilter": {
            "properties": {
                "filters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/LogsIndexExclusionFilterFilter:LogsIndexExclusionFilterFilter"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "isEnabled": {
                    "type": "boolean",
                    "description": "A boolean stating if the exclusion is active or not.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "The name of the exclusion filter.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/LogsIndexExclusionFilterFilter:LogsIndexExclusionFilterFilter": {
            "properties": {
                "query": {
                    "type": "string",
                    "description": "Only logs matching the filter criteria and the query of the parent index will be considered for this exclusion filter.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sampleRate": {
                    "type": "number",
                    "description": "The fraction of logs excluded by the exclusion filter, when active.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/LogsIndexFilter:LogsIndexFilter": {
            "properties": {
                "query": {
                    "type": "string",
                    "description": "Only logs matching the filter criteria and the query of the parent index will be considered for this exclusion filter.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:/MonitorThresholdWindows:MonitorThresholdWindows": {
            "properties": {
                "recoveryWindow": {
                    "type": "string",
                    "description": "describes how long an anomalous metric must be normal before the alert recovers.\n"
                },
                "triggerWindow": {
                    "type": "string",
                    "description": "describes how long a metric must be anomalous before an alert triggers.\n"
                }
            },
            "type": "object"
        },
        "datadog:/MonitorThresholds:MonitorThresholds": {
            "properties": {
                "critical": {
                    "type": "number"
                },
                "criticalRecovery": {
                    "type": "number"
                },
                "ok": {
                    "type": "number"
                },
                "unknown": {
                    "type": "number"
                },
                "warning": {
                    "type": "number"
                },
                "warningRecovery": {
                    "type": "number"
                }
            },
            "type": "object"
        },
        "datadog:/ScreenBoardTemplateVariable:ScreenBoardTemplateVariable": {
            "properties": {
                "default": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "prefix": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "name"
            ]
        },
        "datadog:/ScreenBoardWidget:ScreenBoardWidget": {
            "properties": {
                "alertId": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "autoRefresh": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "bgcolor": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "check": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "color": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "colorPreference": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "columns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "displayFormat": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "env": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "eventSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "fontSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "group": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "grouping": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "height": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "hideZeroCounts": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "html": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "layoutVersion": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "legend": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "legendSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logset": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "manageStatusShowTitle": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "manageStatusTitleAlign": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "manageStatusTitleSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "manageStatusTitleText": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "margin": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "monitor": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "mustShowBreakdown": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "mustShowDistribution": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "mustShowErrors": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "mustShowHits": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "mustShowLatency": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "mustShowResourceList": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "params": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "precision": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "rules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/ScreenBoardWidgetRule:ScreenBoardWidgetRule"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "serviceName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "serviceService": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "showLastTriggered": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sizeVersion": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sizing": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "summaryType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "text": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "textAlign": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "textSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tick": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tickEdge": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tickPos": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tileDeves": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/ScreenBoardWidgetTileDef:ScreenBoardWidgetTileDef"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "time": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "timeframes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "title": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleAlign": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleSize": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unit": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "url": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "vizType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "width": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "x": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "y": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "type",
                "x",
                "y"
            ]
        },
        "datadog:/ScreenBoardWidgetRule:ScreenBoardWidgetRule": {
            "properties": {
                "color": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "threshold": {
                    "type": "number",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "timeframe": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/ScreenBoardWidgetTileDef:ScreenBoardWidgetTileDef": {
            "properties": {
                "autoscale": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "customUnit": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "events": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/ScreenBoardWidgetTileDefEvent:ScreenBoardWidgetTileDefEvent"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "markers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/ScreenBoardWidgetTileDefMarker:ScreenBoardWidgetTileDefMarker"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "noGroupHosts": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "noMetricHosts": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "nodeType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "precision": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "requests": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/ScreenBoardWidgetTileDefRequest:ScreenBoardWidgetTileDefRequest"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "scopes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "style": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "textAlign": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "viz": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "requests",
                "viz"
            ]
        },
        "datadog:/ScreenBoardWidgetTileDefEvent:ScreenBoardWidgetTileDefEvent": {
            "properties": {
                "q": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "q"
            ]
        },
        "datadog:/ScreenBoardWidgetTileDefMarker:ScreenBoardWidgetTileDefMarker": {
            "properties": {
                "label": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "type",
                "value"
            ]
        },
        "datadog:/ScreenBoardWidgetTileDefRequest:ScreenBoardWidgetTileDefRequest": {
            "properties": {
                "aggregator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "apmQuery": {
                    "$ref": "#/types/datadog:/ScreenBoardWidgetTileDefRequestApmQuery:ScreenBoardWidgetTileDefRequestApmQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "changeType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "compareTo": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "conditionalFormats": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/ScreenBoardWidgetTileDefRequestConditionalFormat:ScreenBoardWidgetTileDefRequestConditionalFormat"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "extraCol": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "increaseGood": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logQuery": {
                    "$ref": "#/types/datadog:/ScreenBoardWidgetTileDefRequestLogQuery:ScreenBoardWidgetTileDefRequestLogQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "metadataJson": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "metric": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "orderBy": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "orderDir": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "processQuery": {
                    "$ref": "#/types/datadog:/ScreenBoardWidgetTileDefRequestProcessQuery:ScreenBoardWidgetTileDefRequestProcessQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "q": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "queryType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "style": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tagFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "textFilter": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/ScreenBoardWidgetTileDefRequestApmQuery:ScreenBoardWidgetTileDefRequestApmQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:/ScreenBoardWidgetTileDefRequestApmQueryCompute:ScreenBoardWidgetTileDefRequestApmQueryCompute",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/ScreenBoardWidgetTileDefRequestApmQueryGroupBy:ScreenBoardWidgetTileDefRequestApmQueryGroupBy"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:/ScreenBoardWidgetTileDefRequestApmQuerySearch:ScreenBoardWidgetTileDefRequestApmQuerySearch",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "compute",
                "index"
            ]
        },
        "datadog:/ScreenBoardWidgetTileDefRequestApmQueryCompute:ScreenBoardWidgetTileDefRequestApmQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:/ScreenBoardWidgetTileDefRequestApmQueryGroupBy:ScreenBoardWidgetTileDefRequestApmQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:/ScreenBoardWidgetTileDefRequestApmQueryGroupBySort:ScreenBoardWidgetTileDefRequestApmQueryGroupBySort",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "facet"
            ]
        },
        "datadog:/ScreenBoardWidgetTileDefRequestApmQueryGroupBySort:ScreenBoardWidgetTileDefRequestApmQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:/ScreenBoardWidgetTileDefRequestApmQuerySearch:ScreenBoardWidgetTileDefRequestApmQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:/ScreenBoardWidgetTileDefRequestConditionalFormat:ScreenBoardWidgetTileDefRequestConditionalFormat": {
            "properties": {
                "color": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "comparator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "customBgColor": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "invert": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "palette": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "comparator"
            ]
        },
        "datadog:/ScreenBoardWidgetTileDefRequestLogQuery:ScreenBoardWidgetTileDefRequestLogQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:/ScreenBoardWidgetTileDefRequestLogQueryCompute:ScreenBoardWidgetTileDefRequestLogQueryCompute",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/ScreenBoardWidgetTileDefRequestLogQueryGroupBy:ScreenBoardWidgetTileDefRequestLogQueryGroupBy"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:/ScreenBoardWidgetTileDefRequestLogQuerySearch:ScreenBoardWidgetTileDefRequestLogQuerySearch",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "compute",
                "index"
            ]
        },
        "datadog:/ScreenBoardWidgetTileDefRequestLogQueryCompute:ScreenBoardWidgetTileDefRequestLogQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:/ScreenBoardWidgetTileDefRequestLogQueryGroupBy:ScreenBoardWidgetTileDefRequestLogQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:/ScreenBoardWidgetTileDefRequestLogQueryGroupBySort:ScreenBoardWidgetTileDefRequestLogQueryGroupBySort",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "facet"
            ]
        },
        "datadog:/ScreenBoardWidgetTileDefRequestLogQueryGroupBySort:ScreenBoardWidgetTileDefRequestLogQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:/ScreenBoardWidgetTileDefRequestLogQuerySearch:ScreenBoardWidgetTileDefRequestLogQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:/ScreenBoardWidgetTileDefRequestProcessQuery:ScreenBoardWidgetTileDefRequestProcessQuery": {
            "properties": {
                "filterBies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "metric": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchBy": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "metric"
            ]
        },
        "datadog:/ServiceLevelObjectiveQuery:ServiceLevelObjectiveQuery": {
            "properties": {
                "denominator": {
                    "type": "string",
                    "description": "the sum of the `total` events\n* Example Usage:\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "numerator": {
                    "type": "string",
                    "description": "the sum of all the `good` events\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "denominator",
                "numerator"
            ]
        },
        "datadog:/ServiceLevelObjectiveThreshold:ServiceLevelObjectiveThreshold": {
            "properties": {
                "target": {
                    "type": "number",
                    "description": "the objective's target `[0,100]`\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "targetDisplay": {
                    "type": "string",
                    "description": "the string version to specify additional digits in the case of `99` but want 3 digits like `99.000` to display.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "timeframe": {
                    "type": "string",
                    "description": "the time frame for the objective. The mapping from these types to the types found in the Datadog Web UI can be found in the Datadog API [documentation](https://docs.datadoghq.com/api/?lang=python#create-a-service-level-objective) page. Available options to choose from are:\n* `7d`\n* `30d`\n* `90d`\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "warning": {
                    "type": "number",
                    "description": "the objective's warning value `[0,100]`. This must be `\u003e target` value.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "warningDisplay": {
                    "type": "string",
                    "description": "the string version to specify additional digits in the case of `99` but want 3 digits like `99.000` to display.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "target",
                "timeframe"
            ]
        },
        "datadog:/SyntheticsTestOptions:SyntheticsTestOptions": {
            "properties": {
                "acceptSelfSigned": {
                    "type": "boolean"
                },
                "followRedirects": {
                    "type": "boolean"
                },
                "minFailureDuration": {
                    "type": "integer"
                },
                "minLocationFailed": {
                    "type": "integer"
                },
                "tickEvery": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "tickEvery"
            ]
        },
        "datadog:/SyntheticsTestRequest:SyntheticsTestRequest": {
            "properties": {
                "body": {
                    "type": "string"
                },
                "host": {
                    "type": "string"
                },
                "method": {
                    "type": "string"
                },
                "port": {
                    "type": "integer"
                },
                "timeout": {
                    "type": "integer"
                },
                "url": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "datadog:/TimeBoardGraph:TimeBoardGraph": {
            "properties": {
                "autoscale": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "customUnit": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "events": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "includeNoMetricHosts": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "includeUngroupedHosts": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "markers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/TimeBoardGraphMarker:TimeBoardGraphMarker"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "nodeType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "precision": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "requests": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/TimeBoardGraphRequest:TimeBoardGraphRequest"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "scopes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "style": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "textAlign": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "title": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "viz": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "yaxis": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "requests",
                "title",
                "viz"
            ]
        },
        "datadog:/TimeBoardGraphMarker:TimeBoardGraphMarker": {
            "properties": {
                "label": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "type",
                "value"
            ]
        },
        "datadog:/TimeBoardGraphRequest:TimeBoardGraphRequest": {
            "properties": {
                "aggregator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "apmQuery": {
                    "$ref": "#/types/datadog:/TimeBoardGraphRequestApmQuery:TimeBoardGraphRequestApmQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "changeType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "compareTo": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "conditionalFormats": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/TimeBoardGraphRequestConditionalFormat:TimeBoardGraphRequestConditionalFormat"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "extraCol": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "increaseGood": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logQuery": {
                    "$ref": "#/types/datadog:/TimeBoardGraphRequestLogQuery:TimeBoardGraphRequestLogQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "metadataJson": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "orderBy": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "orderDirection": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "processQuery": {
                    "$ref": "#/types/datadog:/TimeBoardGraphRequestProcessQuery:TimeBoardGraphRequestProcessQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "q": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "stacked": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "style": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/TimeBoardGraphRequestApmQuery:TimeBoardGraphRequestApmQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:/TimeBoardGraphRequestApmQueryCompute:TimeBoardGraphRequestApmQueryCompute",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/TimeBoardGraphRequestApmQueryGroupBy:TimeBoardGraphRequestApmQueryGroupBy"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:/TimeBoardGraphRequestApmQuerySearch:TimeBoardGraphRequestApmQuerySearch",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "compute",
                "index"
            ]
        },
        "datadog:/TimeBoardGraphRequestApmQueryCompute:TimeBoardGraphRequestApmQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:/TimeBoardGraphRequestApmQueryGroupBy:TimeBoardGraphRequestApmQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:/TimeBoardGraphRequestApmQueryGroupBySort:TimeBoardGraphRequestApmQueryGroupBySort",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "facet"
            ]
        },
        "datadog:/TimeBoardGraphRequestApmQueryGroupBySort:TimeBoardGraphRequestApmQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:/TimeBoardGraphRequestApmQuerySearch:TimeBoardGraphRequestApmQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:/TimeBoardGraphRequestConditionalFormat:TimeBoardGraphRequestConditionalFormat": {
            "properties": {
                "comparator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "customBgColor": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "customFgColor": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "palette": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "comparator"
            ]
        },
        "datadog:/TimeBoardGraphRequestLogQuery:TimeBoardGraphRequestLogQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:/TimeBoardGraphRequestLogQueryCompute:TimeBoardGraphRequestLogQueryCompute",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/TimeBoardGraphRequestLogQueryGroupBy:TimeBoardGraphRequestLogQueryGroupBy"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:/TimeBoardGraphRequestLogQuerySearch:TimeBoardGraphRequestLogQuerySearch",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "compute",
                "index"
            ]
        },
        "datadog:/TimeBoardGraphRequestLogQueryCompute:TimeBoardGraphRequestLogQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:/TimeBoardGraphRequestLogQueryGroupBy:TimeBoardGraphRequestLogQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:/TimeBoardGraphRequestLogQueryGroupBySort:TimeBoardGraphRequestLogQueryGroupBySort",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "facet"
            ]
        },
        "datadog:/TimeBoardGraphRequestLogQueryGroupBySort:TimeBoardGraphRequestLogQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:/TimeBoardGraphRequestLogQuerySearch:TimeBoardGraphRequestLogQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:/TimeBoardGraphRequestProcessQuery:TimeBoardGraphRequestProcessQuery": {
            "properties": {
                "filterBies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "metric": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchBy": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "metric"
            ]
        },
        "datadog:/TimeBoardTemplateVariable:TimeBoardTemplateVariable": {
            "properties": {
                "default": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "prefix": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "name"
            ]
        },
        "datadog:pagerduty/IntegrationService:IntegrationService": {
            "properties": {
                "serviceKey": {
                    "type": "string",
                    "description": "Your Service name associated service key in Pagerduty.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "serviceName": {
                    "type": "string",
                    "description": "Your Service name in PagerDuty.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "serviceKey",
                "serviceName"
            ]
        }
    },
    "provider": {
        "description": "The provider type for the datadog package. By default, resources use package-wide configuration\nsettings, however an explicit `Provider` instance may be created and passed during resource\nconstruction to achieve fine-grained programmatic control over provider settings. See the\n[documentation](https://www.pulumi.com/docs/reference/programming-model/#providers) for more information.\n",
        "inputProperties": {
            "apiKey": {
                "type": "string",
                "defaultInfo": {
                    "environment": [
                        "DATADOG_API_KEY"
                    ]
                }
            },
            "apiUrl": {
                "type": "string",
                "defaultInfo": {
                    "environment": [
                        "DATADOG_HOST"
                    ]
                }
            },
            "appKey": {
                "type": "string",
                "defaultInfo": {
                    "environment": [
                        "DATADOG_APP_KEY"
                    ]
                }
            }
        }
    },
    "resources": {
        "datadog:aws/integration:Integration": {
            "description": "Provides a Datadog - Amazon Web Services integration resource. This can be used to create and manage Datadog - Amazon Web Services integration.\n\nUpdate operations are currently not supported with datadog API so any change forces a new resource.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as datadog from \"@pulumi/datadog\";\n\n// Create a new Datadog - Amazon Web Services integration\nconst sandbox = new datadog.aws.Integration(\"sandbox\", {\n    accountId: \"1234567890\",\n    accountSpecificNamespaceRules: {\n        auto_scaling: false,\n        opsworks: false,\n    },\n    filterTags: [\"key:value\"],\n    hostTags: [\n        \"key:value\",\n        \"key2:value2\",\n    ],\n    roleName: \"DatadogAWSIntegrationRole\",\n});\n```\n```python\nimport pulumi\nimport pulumi_datadog as datadog\n\n# Create a new Datadog - Amazon Web Services integration\nsandbox = datadog.aws.Integration(\"sandbox\",\n    account_id=\"1234567890\",\n    account_specific_namespace_rules={\n        \"auto_scaling\": False,\n        \"opsworks\": False,\n    },\n    filter_tags=[\"key:value\"],\n    host_tags=[\n        \"key:value\",\n        \"key2:value2\",\n    ],\n    role_name=\"DatadogAWSIntegrationRole\")\n```\n```csharp\nusing Pulumi;\nusing Datadog = Pulumi.Datadog;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        // Create a new Datadog - Amazon Web Services integration\n        var sandbox = new Datadog.Aws.Integration(\"sandbox\", new Datadog.Aws.IntegrationArgs\n        {\n            AccountId = \"1234567890\",\n            AccountSpecificNamespaceRules = \n            {\n                { \"auto_scaling\", false },\n                { \"opsworks\", false },\n            },\n            FilterTags = \n            {\n                \"key:value\",\n            },\n            HostTags = \n            {\n                \"key:value\",\n                \"key2:value2\",\n            },\n            RoleName = \"DatadogAWSIntegrationRole\",\n        });\n    }\n\n}\n```\n\n{{% /example %}}\n{{% /examples %}}\n",
            "properties": {
                "accountId": {
                    "type": "string",
                    "description": "Your AWS Account ID without dashes.\n"
                },
                "accountSpecificNamespaceRules": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "description": "Enables or disables metric collection for specific AWS namespaces for this AWS account only. A list of namespaces can be found at the [available namespace rules API endpoint](https://api.datadoghq.com/api/v1/integration/aws/available_namespace_rules).\n"
                },
                "externalId": {
                    "type": "string",
                    "description": "AWS External ID\n"
                },
                "filterTags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Array of EC2 tags (in the form `key:value`) defines a filter that Datadog use when collecting metrics from EC2. Wildcards, such as `?` (for single characters) and `*` (for multiple characters) can also be used.\n"
                },
                "hostTags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Array of tags (in the form key:value) to add to all hosts and metrics reporting through this integration.\n"
                },
                "roleName": {
                    "type": "string",
                    "description": "Your Datadog role delegation name.\n"
                }
            },
            "required": [
                "accountId",
                "externalId",
                "roleName"
            ],
            "inputProperties": {
                "accountId": {
                    "type": "string",
                    "description": "Your AWS Account ID without dashes.\n"
                },
                "accountSpecificNamespaceRules": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "description": "Enables or disables metric collection for specific AWS namespaces for this AWS account only. A list of namespaces can be found at the [available namespace rules API endpoint](https://api.datadoghq.com/api/v1/integration/aws/available_namespace_rules).\n"
                },
                "filterTags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Array of EC2 tags (in the form `key:value`) defines a filter that Datadog use when collecting metrics from EC2. Wildcards, such as `?` (for single characters) and `*` (for multiple characters) can also be used.\n"
                },
                "hostTags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Array of tags (in the form key:value) to add to all hosts and metrics reporting through this integration.\n"
                },
                "roleName": {
                    "type": "string",
                    "description": "Your Datadog role delegation name.\n"
                }
            },
            "requiredInputs": [
                "accountId",
                "roleName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Integration resources.\n",
                "properties": {
                    "accountId": {
                        "type": "string",
                        "description": "Your AWS Account ID without dashes.\n"
                    },
                    "accountSpecificNamespaceRules": {
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "pulumi.json#/Any"
                        },
                        "description": "Enables or disables metric collection for specific AWS namespaces for this AWS account only. A list of namespaces can be found at the [available namespace rules API endpoint](https://api.datadoghq.com/api/v1/integration/aws/available_namespace_rules).\n"
                    },
                    "externalId": {
                        "type": "string",
                        "description": "AWS External ID\n"
                    },
                    "filterTags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Array of EC2 tags (in the form `key:value`) defines a filter that Datadog use when collecting metrics from EC2. Wildcards, such as `?` (for single characters) and `*` (for multiple characters) can also be used.\n"
                    },
                    "hostTags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Array of tags (in the form key:value) to add to all hosts and metrics reporting through this integration.\n"
                    },
                    "roleName": {
                        "type": "string",
                        "description": "Your Datadog role delegation name.\n"
                    }
                },
                "type": "object"
            }
        },
        "datadog:gcp/integration:Integration": {
            "description": "Provides a Datadog - Google Cloud Platform integration resource. This can be used to create and manage Datadog - Google Cloud Platform integration.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as datadog from \"@pulumi/datadog\";\n\n// Create a new Datadog - Google Cloud Platform integration\nconst awesomeGcpProjectIntegration = new datadog.gcp.Integration(\"awesome_gcp_project_integration\", {\n    clientEmail: \"awesome-service-account@awesome-project-id.iam.gserviceaccount.com\",\n    clientId: \"123456789012345678901\",\n    hostFilters: \"foo:bar,buzz:lightyear\",\n    privateKey: `-----BEGIN PRIVATE KEY-----\n...\n-----END PRIVATE KEY-----\n`,\n    privateKeyId: \"1234567890123456789012345678901234567890\",\n    projectId: \"awesome-project-id\",\n});\n```\n```python\nimport pulumi\nimport pulumi_datadog as datadog\n\n# Create a new Datadog - Google Cloud Platform integration\nawesome_gcp_project_integration = datadog.gcp.Integration(\"awesomeGcpProjectIntegration\",\n    client_email=\"awesome-service-account@awesome-project-id.iam.gserviceaccount.com\",\n    client_id=\"123456789012345678901\",\n    host_filters=\"foo:bar,buzz:lightyear\",\n    private_key=\"\"\"-----BEGIN PRIVATE KEY-----\n...\n-----END PRIVATE KEY-----\n\n\"\"\",\n    private_key_id=\"1234567890123456789012345678901234567890\",\n    project_id=\"awesome-project-id\")\n```\n```csharp\nusing Pulumi;\nusing Datadog = Pulumi.Datadog;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        // Create a new Datadog - Google Cloud Platform integration\n        var awesomeGcpProjectIntegration = new Datadog.Gcp.Integration(\"awesomeGcpProjectIntegration\", new Datadog.Gcp.IntegrationArgs\n        {\n            ClientEmail = \"awesome-service-account@awesome-project-id.iam.gserviceaccount.com\",\n            ClientId = \"123456789012345678901\",\n            HostFilters = \"foo:bar,buzz:lightyear\",\n            PrivateKey = @\"-----BEGIN PRIVATE KEY-----\n...\n-----END PRIVATE KEY-----\n\n\",\n            PrivateKeyId = \"1234567890123456789012345678901234567890\",\n            ProjectId = \"awesome-project-id\",\n        });\n    }\n\n}\n```\n\n{{% /example %}}\n{{% /examples %}}\n",
            "properties": {
                "clientEmail": {
                    "type": "string",
                    "description": "Your email found in your JSON service account key.\n"
                },
                "clientId": {
                    "type": "string",
                    "description": "Your ID found in your JSON service account key.\n"
                },
                "hostFilters": {
                    "type": "string",
                    "description": "Limit the GCE instances that are pulled into Datadog by using tags. Only hosts that match one of the defined tags are imported into Datadog.\n"
                },
                "privateKey": {
                    "type": "string",
                    "description": "Your private key name found in your JSON service account key.\n"
                },
                "privateKeyId": {
                    "type": "string",
                    "description": "Your private key ID found in your JSON service account key.\n"
                },
                "projectId": {
                    "type": "string",
                    "description": "Your Google Cloud project ID found in your JSON service account key.\n"
                }
            },
            "required": [
                "clientEmail",
                "clientId",
                "privateKey",
                "privateKeyId",
                "projectId"
            ],
            "inputProperties": {
                "clientEmail": {
                    "type": "string",
                    "description": "Your email found in your JSON service account key.\n"
                },
                "clientId": {
                    "type": "string",
                    "description": "Your ID found in your JSON service account key.\n"
                },
                "hostFilters": {
                    "type": "string",
                    "description": "Limit the GCE instances that are pulled into Datadog by using tags. Only hosts that match one of the defined tags are imported into Datadog.\n"
                },
                "privateKey": {
                    "type": "string",
                    "description": "Your private key name found in your JSON service account key.\n"
                },
                "privateKeyId": {
                    "type": "string",
                    "description": "Your private key ID found in your JSON service account key.\n"
                },
                "projectId": {
                    "type": "string",
                    "description": "Your Google Cloud project ID found in your JSON service account key.\n"
                }
            },
            "requiredInputs": [
                "clientEmail",
                "clientId",
                "privateKey",
                "privateKeyId",
                "projectId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Integration resources.\n",
                "properties": {
                    "clientEmail": {
                        "type": "string",
                        "description": "Your email found in your JSON service account key.\n"
                    },
                    "clientId": {
                        "type": "string",
                        "description": "Your ID found in your JSON service account key.\n"
                    },
                    "hostFilters": {
                        "type": "string",
                        "description": "Limit the GCE instances that are pulled into Datadog by using tags. Only hosts that match one of the defined tags are imported into Datadog.\n"
                    },
                    "privateKey": {
                        "type": "string",
                        "description": "Your private key name found in your JSON service account key.\n"
                    },
                    "privateKeyId": {
                        "type": "string",
                        "description": "Your private key ID found in your JSON service account key.\n"
                    },
                    "projectId": {
                        "type": "string",
                        "description": "Your Google Cloud project ID found in your JSON service account key.\n"
                    }
                },
                "type": "object"
            }
        },
        "datadog:index/dashboard:Dashboard": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "The description of the dashboard.\n"
                },
                "isReadOnly": {
                    "type": "boolean",
                    "description": "Whether this dashboard is read-only.\n"
                },
                "layoutType": {
                    "type": "string",
                    "description": "The layout type of the dashboard, either 'free' or 'ordered'.\n"
                },
                "notifyLists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The list of handles of users to notify when changes are made to this dashboard.\n"
                },
                "templateVariablePresets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardTemplateVariablePreset:DashboardTemplateVariablePreset"
                    },
                    "description": "The list of selectable template variable presets for this dashboard.\n"
                },
                "templateVariables": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardTemplateVariable:DashboardTemplateVariable"
                    },
                    "description": "The list of template variables for this dashboard.\n"
                },
                "title": {
                    "type": "string",
                    "description": "The title of the dashboard.\n"
                },
                "widgets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidget:DashboardWidget"
                    },
                    "description": "The list of widgets to display on the dashboard.\n"
                }
            },
            "required": [
                "layoutType",
                "title",
                "widgets"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "The description of the dashboard.\n"
                },
                "isReadOnly": {
                    "type": "boolean",
                    "description": "Whether this dashboard is read-only.\n"
                },
                "layoutType": {
                    "type": "string",
                    "description": "The layout type of the dashboard, either 'free' or 'ordered'.\n"
                },
                "notifyLists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The list of handles of users to notify when changes are made to this dashboard.\n"
                },
                "templateVariablePresets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardTemplateVariablePreset:DashboardTemplateVariablePreset"
                    },
                    "description": "The list of selectable template variable presets for this dashboard.\n"
                },
                "templateVariables": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardTemplateVariable:DashboardTemplateVariable"
                    },
                    "description": "The list of template variables for this dashboard.\n"
                },
                "title": {
                    "type": "string",
                    "description": "The title of the dashboard.\n"
                },
                "widgets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidget:DashboardWidget"
                    },
                    "description": "The list of widgets to display on the dashboard.\n"
                }
            },
            "requiredInputs": [
                "layoutType",
                "title",
                "widgets"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Dashboard resources.\n",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "The description of the dashboard.\n"
                    },
                    "isReadOnly": {
                        "type": "boolean",
                        "description": "Whether this dashboard is read-only.\n"
                    },
                    "layoutType": {
                        "type": "string",
                        "description": "The layout type of the dashboard, either 'free' or 'ordered'.\n"
                    },
                    "notifyLists": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The list of handles of users to notify when changes are made to this dashboard.\n"
                    },
                    "templateVariablePresets": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/datadog:/DashboardTemplateVariablePreset:DashboardTemplateVariablePreset"
                        },
                        "description": "The list of selectable template variable presets for this dashboard.\n"
                    },
                    "templateVariables": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/datadog:/DashboardTemplateVariable:DashboardTemplateVariable"
                        },
                        "description": "The list of template variables for this dashboard.\n"
                    },
                    "title": {
                        "type": "string",
                        "description": "The title of the dashboard.\n"
                    },
                    "widgets": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/datadog:/DashboardWidget:DashboardWidget"
                        },
                        "description": "The list of widgets to display on the dashboard.\n"
                    }
                },
                "type": "object"
            }
        },
        "datadog:index/dashboardList:DashboardList": {
            "properties": {
                "dashItems": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardListDashItem:DashboardListDashItem"
                    },
                    "description": "An individual dashboard object to add to this Dashboard List. If present, must contain the following:\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of this Dashbaord List.\n"
                }
            },
            "required": [
                "name"
            ],
            "inputProperties": {
                "dashItems": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardListDashItem:DashboardListDashItem"
                    },
                    "description": "An individual dashboard object to add to this Dashboard List. If present, must contain the following:\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of this Dashbaord List.\n"
                }
            },
            "requiredInputs": [
                "name"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DashboardList resources.\n",
                "properties": {
                    "dashItems": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/datadog:/DashboardListDashItem:DashboardListDashItem"
                        },
                        "description": "An individual dashboard object to add to this Dashboard List. If present, must contain the following:\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of this Dashbaord List.\n"
                    }
                },
                "type": "object"
            }
        },
        "datadog:index/downtime:Downtime": {
            "description": "Provides a Datadog downtime resource. This can be used to create and manage Datadog downtimes.\n\n## Example: downtime for a specific monitor\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as datadog from \"@pulumi/datadog\";\n\n// Create a new daily 1700-0900 Datadog downtime for a specific monitor id\nconst foo = new datadog.Downtime(\"foo\", {\n    end: 1483365600,\n    monitorId: 12345,\n    recurrence: {\n        period: 1,\n        type: \"days\",\n    },\n    scopes: [\"*\"],\n    start: 1483308000,\n});\n```\n```python\nimport pulumi\nimport pulumi_datadog as datadog\n\n# Create a new daily 1700-0900 Datadog downtime for a specific monitor id\nfoo = datadog.Downtime(\"foo\",\n    end=1483365600,\n    monitor_id=12345,\n    recurrence={\n        \"period\": 1,\n        \"type\": \"days\",\n    },\n    scopes=[\"*\"],\n    start=1483308000)\n```\n```csharp\nusing Pulumi;\nusing Datadog = Pulumi.Datadog;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        // Create a new daily 1700-0900 Datadog downtime for a specific monitor id\n        var foo = new Datadog.Downtime(\"foo\", new Datadog.DowntimeArgs\n        {\n            End = 1483365600,\n            MonitorId = 12345,\n            Recurrence = new Datadog.Inputs.DowntimeRecurrenceArgs\n            {\n                Period = 1,\n                Type = \"days\",\n            },\n            Scopes = \n            {\n                \"*\",\n            },\n            Start = 1483308000,\n        });\n    }\n\n}\n```\n\n## Example: downtime for all monitors\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as datadog from \"@pulumi/datadog\";\n\n// Create a new daily 1700-0900 Datadog downtime for all monitors\nconst foo = new datadog.Downtime(\"foo\", {\n    end: 1483365600,\n    recurrence: {\n        period: 1,\n        type: \"days\",\n    },\n    scopes: [\"*\"],\n    start: 1483308000,\n});\n```\n```python\nimport pulumi\nimport pulumi_datadog as datadog\n\n# Create a new daily 1700-0900 Datadog downtime for all monitors\nfoo = datadog.Downtime(\"foo\",\n    end=1483365600,\n    recurrence={\n        \"period\": 1,\n        \"type\": \"days\",\n    },\n    scopes=[\"*\"],\n    start=1483308000)\n```\n```csharp\nusing Pulumi;\nusing Datadog = Pulumi.Datadog;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        // Create a new daily 1700-0900 Datadog downtime for all monitors\n        var foo = new Datadog.Downtime(\"foo\", new Datadog.DowntimeArgs\n        {\n            End = 1483365600,\n            Recurrence = new Datadog.Inputs.DowntimeRecurrenceArgs\n            {\n                Period = 1,\n                Type = \"days\",\n            },\n            Scopes = \n            {\n                \"*\",\n            },\n            Start = 1483308000,\n        });\n    }\n\n}\n```\n",
            "properties": {
                "active": {
                    "type": "boolean",
                    "description": "A flag indicating if the downtime is active now.\n"
                },
                "disabled": {
                    "type": "boolean",
                    "description": "A flag indicating if the downtime was disabled.\n"
                },
                "end": {
                    "type": "integer",
                    "description": "POSIX timestamp to end the downtime.\n"
                },
                "endDate": {
                    "type": "string",
                    "description": "String representing date and time to end the downtime in RFC3339 format.\n"
                },
                "message": {
                    "type": "string",
                    "description": "A message to include with notifications for this downtime.\n"
                },
                "monitorId": {
                    "type": "integer",
                    "description": "When specified, this downtime will only apply to this monitor\n"
                },
                "monitorTags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of monitor tags to match. The resulting downtime applies to monitors that match **all** provided monitor tags. This option conflicts with `monitor_id` as it will match all monitors that match these tags.\n"
                },
                "recurrence": {
                    "$ref": "#/types/datadog:/DowntimeRecurrence:DowntimeRecurrence",
                    "description": "A dictionary to configure the downtime to be recurring.\n"
                },
                "scopes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of items to apply the downtime to, e.g. host:X\n"
                },
                "start": {
                    "type": "integer",
                    "description": "POSIX timestamp to start the downtime.\n"
                },
                "startDate": {
                    "type": "string",
                    "description": "String representing date and time to start the downtime in RFC3339 format.\n"
                },
                "timezone": {
                    "type": "string",
                    "description": "The timezone for the downtime, default UTC. It must be a valid IANA Time Zone.\n"
                }
            },
            "required": [
                "scopes"
            ],
            "inputProperties": {
                "active": {
                    "type": "boolean",
                    "description": "A flag indicating if the downtime is active now.\n"
                },
                "disabled": {
                    "type": "boolean",
                    "description": "A flag indicating if the downtime was disabled.\n"
                },
                "end": {
                    "type": "integer",
                    "description": "POSIX timestamp to end the downtime.\n"
                },
                "endDate": {
                    "type": "string",
                    "description": "String representing date and time to end the downtime in RFC3339 format.\n"
                },
                "message": {
                    "type": "string",
                    "description": "A message to include with notifications for this downtime.\n"
                },
                "monitorId": {
                    "type": "integer",
                    "description": "When specified, this downtime will only apply to this monitor\n"
                },
                "monitorTags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of monitor tags to match. The resulting downtime applies to monitors that match **all** provided monitor tags. This option conflicts with `monitor_id` as it will match all monitors that match these tags.\n"
                },
                "recurrence": {
                    "$ref": "#/types/datadog:/DowntimeRecurrence:DowntimeRecurrence",
                    "description": "A dictionary to configure the downtime to be recurring.\n"
                },
                "scopes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of items to apply the downtime to, e.g. host:X\n"
                },
                "start": {
                    "type": "integer",
                    "description": "POSIX timestamp to start the downtime.\n"
                },
                "startDate": {
                    "type": "string",
                    "description": "String representing date and time to start the downtime in RFC3339 format.\n"
                },
                "timezone": {
                    "type": "string",
                    "description": "The timezone for the downtime, default UTC. It must be a valid IANA Time Zone.\n"
                }
            },
            "requiredInputs": [
                "scopes"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Downtime resources.\n",
                "properties": {
                    "active": {
                        "type": "boolean",
                        "description": "A flag indicating if the downtime is active now.\n"
                    },
                    "disabled": {
                        "type": "boolean",
                        "description": "A flag indicating if the downtime was disabled.\n"
                    },
                    "end": {
                        "type": "integer",
                        "description": "POSIX timestamp to end the downtime.\n"
                    },
                    "endDate": {
                        "type": "string",
                        "description": "String representing date and time to end the downtime in RFC3339 format.\n"
                    },
                    "message": {
                        "type": "string",
                        "description": "A message to include with notifications for this downtime.\n"
                    },
                    "monitorId": {
                        "type": "integer",
                        "description": "When specified, this downtime will only apply to this monitor\n"
                    },
                    "monitorTags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of monitor tags to match. The resulting downtime applies to monitors that match **all** provided monitor tags. This option conflicts with `monitor_id` as it will match all monitors that match these tags.\n"
                    },
                    "recurrence": {
                        "$ref": "#/types/datadog:/DowntimeRecurrence:DowntimeRecurrence",
                        "description": "A dictionary to configure the downtime to be recurring.\n"
                    },
                    "scopes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of items to apply the downtime to, e.g. host:X\n"
                    },
                    "start": {
                        "type": "integer",
                        "description": "POSIX timestamp to start the downtime.\n"
                    },
                    "startDate": {
                        "type": "string",
                        "description": "String representing date and time to start the downtime in RFC3339 format.\n"
                    },
                    "timezone": {
                        "type": "string",
                        "description": "The timezone for the downtime, default UTC. It must be a valid IANA Time Zone.\n"
                    }
                },
                "type": "object"
            }
        },
        "datadog:index/logsCustomPipeline:LogsCustomPipeline": {
            "description": "Provides a Datadog [Logs Pipeline API](https://docs.datadoghq.com/api/?lang=python#logs-pipelines) resource, which is used to create and manage Datadog logs custom pipelines.\n\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nCreate a Datadog logs pipeline:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as datadog from \"@pulumi/datadog\";\n\nconst samplePipeline = new datadog.LogsCustomPipeline(\"sample_pipeline\", {\n    filters: [{\n        query: \"source:foo\",\n    }],\n    isEnabled: true,\n    name: \"sample pipeline\",\n    processors: [\n        {\n            arithmeticProcessor: {\n                expression: \"(time1 - time2)*1000\",\n                isEnabled: true,\n                isReplaceMissing: true,\n                name: \"sample arithmetic processor\",\n                target: \"my_arithmetic\",\n            },\n        },\n        {\n            attributeRemapper: {\n                isEnabled: true,\n                name: \"sample attribute processor\",\n                overrideOnConflict: false,\n                preserveSource: true,\n                sourceType: \"tag\",\n                sources: [\"db.instance\"],\n                target: \"db\",\n                targetType: \"tag\",\n            },\n        },\n        {\n            categoryProcessor: {\n                categories: [\n                    {\n                        filters: [{\n                            query: \"@severity: \\\".\\\"\",\n                        }],\n                        name: \"debug\",\n                    },\n                    {\n                        filters: [{\n                            query: \"@severity: \\\"-\\\"\",\n                        }],\n                        name: \"verbose\",\n                    },\n                ],\n                isEnabled: true,\n                name: \"sample category processor\",\n                target: \"foo.severity\",\n            },\n        },\n        {\n            dateRemapper: {\n                isEnabled: true,\n                name: \"sample date remapper\",\n                sources: [\n                    \"_timestamp\",\n                    \"published_date\",\n                ],\n            },\n        },\n        {\n            geoIpParser: {\n                isEnabled: true,\n                name: \"sample geo ip parser\",\n                sources: [\"network.client.ip\"],\n                target: \"network.client.geoip\",\n            },\n        },\n        {\n            grokParser: {\n                grok: {\n                    matchRules: \"Rule %%{word:my_word2} %%{number:my_float2}\",\n                    supportRules: \"\",\n                },\n                isEnabled: true,\n                name: \"sample grok parser\",\n                samples: [\"sample log 1\"],\n                source: \"message\",\n            },\n        },\n        {\n            messageRemapper: {\n                isEnabled: true,\n                name: \"sample message remapper\",\n                sources: [\"msg\"],\n            },\n        },\n        {\n            pipeline: {\n                filters: [{\n                    query: \"source:foo\",\n                }],\n                isEnabled: true,\n                name: \"nested pipeline\",\n                processors: [{\n                    urlParser: {\n                        name: \"sample url parser\",\n                        normalizeEndingSlashes: true,\n                        sources: [\n                            \"url\",\n                            \"extra\",\n                        ],\n                        target: \"http_url\",\n                    },\n                }],\n            },\n        },\n        {\n            serviceRemapper: {\n                isEnabled: true,\n                name: \"sample service remapper\",\n                sources: [\"service\"],\n            },\n        },\n        {\n            statusRemapper: {\n                isEnabled: true,\n                name: \"sample status remapper\",\n                sources: [\n                    \"info\",\n                    \"trace\",\n                ],\n            },\n        },\n        {\n            stringBuilderProcessor: {\n                isEnabled: true,\n                isReplaceMissing: false,\n                name: \"sample string builder processor\",\n                target: \"user_activity\",\n                template: \"%%{user.name} logged in at %%{timestamp}\",\n            },\n        },\n        {\n            traceIdRemapper: {\n                isEnabled: true,\n                name: \"sample trace id remapper\",\n                sources: [\"dd.trace_id\"],\n            },\n        },\n        {\n            userAgentParser: {\n                isEnabled: true,\n                isEncoded: false,\n                name: \"sample user agent parser\",\n                sources: [\n                    \"user\",\n                    \"agent\",\n                ],\n                target: \"http_agent\",\n            },\n        },\n    ],\n});\n```\n\n{{% /example %}}\n{{% /examples %}}\n## Important Notes\n\nEach `datadog..LogsCustomPipeline` resource defines a complete pipeline. The order of the pipelines is maintained in\na different resource datadog_logs_pipeline_order.\nWhen creating a new pipeline, you need to **explicitly** add this pipeline to the `datadog..LogsPipelineOrder` \nresource to track the pipeline. Similarly, when a pipeline needs to be destroyed, remove its references from the \n`datadog..LogsPipelineOrder` resource.\n",
            "properties": {
                "filters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/LogsCustomPipelineFilter:LogsCustomPipelineFilter"
                    },
                    "description": "Defines the nested pipeline filter. Only logs that match the filter criteria are processed by this pipeline.\n"
                },
                "isEnabled": {
                    "type": "boolean",
                    "description": "If the processor is enabled or not.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the processor\n"
                },
                "processors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/LogsCustomPipelineProcessor:LogsCustomPipelineProcessor"
                    },
                    "description": "Processors. Nested pipeline can't take any other nested pipeline as its processor.\n"
                }
            },
            "required": [
                "filters",
                "name"
            ],
            "inputProperties": {
                "filters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/LogsCustomPipelineFilter:LogsCustomPipelineFilter"
                    },
                    "description": "Defines the nested pipeline filter. Only logs that match the filter criteria are processed by this pipeline.\n"
                },
                "isEnabled": {
                    "type": "boolean",
                    "description": "If the processor is enabled or not.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the processor\n"
                },
                "processors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/LogsCustomPipelineProcessor:LogsCustomPipelineProcessor"
                    },
                    "description": "Processors. Nested pipeline can't take any other nested pipeline as its processor.\n"
                }
            },
            "requiredInputs": [
                "filters",
                "name"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering LogsCustomPipeline resources.\n",
                "properties": {
                    "filters": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/datadog:/LogsCustomPipelineFilter:LogsCustomPipelineFilter"
                        },
                        "description": "Defines the nested pipeline filter. Only logs that match the filter criteria are processed by this pipeline.\n"
                    },
                    "isEnabled": {
                        "type": "boolean",
                        "description": "If the processor is enabled or not.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the processor\n"
                    },
                    "processors": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/datadog:/LogsCustomPipelineProcessor:LogsCustomPipelineProcessor"
                        },
                        "description": "Processors. Nested pipeline can't take any other nested pipeline as its processor.\n"
                    }
                },
                "type": "object"
            }
        },
        "datadog:index/logsIndex:LogsIndex": {
            "properties": {
                "exclusionFilters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/LogsIndexExclusionFilter:LogsIndexExclusionFilter"
                    },
                    "description": "List of exclusion filters.\n"
                },
                "filters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/LogsIndexFilter:LogsIndexFilter"
                    }
                },
                "name": {
                    "type": "string",
                    "description": "The name of the exclusion filter.\n"
                }
            },
            "required": [
                "filters",
                "name"
            ],
            "inputProperties": {
                "exclusionFilters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/LogsIndexExclusionFilter:LogsIndexExclusionFilter"
                    },
                    "description": "List of exclusion filters.\n"
                },
                "filters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/LogsIndexFilter:LogsIndexFilter"
                    }
                },
                "name": {
                    "type": "string",
                    "description": "The name of the exclusion filter.\n"
                }
            },
            "requiredInputs": [
                "filters",
                "name"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering LogsIndex resources.\n",
                "properties": {
                    "exclusionFilters": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/datadog:/LogsIndexExclusionFilter:LogsIndexExclusionFilter"
                        },
                        "description": "List of exclusion filters.\n"
                    },
                    "filters": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/datadog:/LogsIndexFilter:LogsIndexFilter"
                        }
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the exclusion filter.\n"
                    }
                },
                "type": "object"
            }
        },
        "datadog:index/logsIndexOrder:LogsIndexOrder": {
            "description": "Provides a Datadog [Logs Index API](https://docs.datadoghq.com/api/?lang=python#logs-indexes) resource. This can be used to manage the order of Datadog logs indexes.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as datadog from \"@pulumi/datadog\";\n\nconst sampleIndexOrder = new datadog.LogsIndexOrder(\"sampleIndexOrder\", {\n    name: \"sample_index_order\",\n    indexes: [datadog_logs_index.sample_index.id],\n});\n```\n```python\nimport pulumi\nimport pulumi_datadog as datadog\n\nsample_index_order = datadog.LogsIndexOrder(\"sampleIndexOrder\",\n    name=\"sample_index_order\",\n    indexes=[datadog_logs_index[\"sample_index\"][\"id\"]])\n```\n```csharp\nusing Pulumi;\nusing Datadog = Pulumi.Datadog;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var sampleIndexOrder = new Datadog.LogsIndexOrder(\"sampleIndexOrder\", new Datadog.LogsIndexOrderArgs\n        {\n            Name = \"sample_index_order\",\n            Indexes = \n            {\n                datadog_logs_index.Sample_index.Id,\n            },\n        });\n    }\n\n}\n```\n\n{{% /example %}}\n{{% /examples %}}\n",
            "properties": {
                "indexes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The index resource list. Logs are tested against the query filter of each index one by one following the order of the list.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The unique name of the index order resource. \n"
                }
            },
            "required": [
                "indexes",
                "name"
            ],
            "inputProperties": {
                "indexes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The index resource list. Logs are tested against the query filter of each index one by one following the order of the list.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The unique name of the index order resource. \n"
                }
            },
            "requiredInputs": [
                "indexes",
                "name"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering LogsIndexOrder resources.\n",
                "properties": {
                    "indexes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The index resource list. Logs are tested against the query filter of each index one by one following the order of the list.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The unique name of the index order resource. \n"
                    }
                },
                "type": "object"
            }
        },
        "datadog:index/logsIntegrationPipeline:LogsIntegrationPipeline": {
            "description": "Provides a Datadog [Logs Pipeline API](https://docs.datadoghq.com/api/?lang=python#logs-pipelines) resource to manage\nthe [integrations](https://docs.datadoghq.com/logs/log_collection/?tab=tcpussite).\n\nIntegration pipelines are the pipelines that are automatically installed for your organization when sending the logs with \nspecific sources. You don't need to maintain or update these types of pipelines. Keeping them as resources, however, \nallows you to manage the order of your pipelines by referencing them in your \ndatadog..LogsPipelineOrder resource. If you don't need the\n`pipeline_order` feature, this resource declaration can be omitted.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as datadog from \"@pulumi/datadog\";\n\nconst python = new datadog.LogsIntegrationPipeline(\"python\", {\n    isEnabled: true,\n});\n```\n```python\nimport pulumi\nimport pulumi_datadog as datadog\n\npython = datadog.LogsIntegrationPipeline(\"python\", is_enabled=True)\n```\n```csharp\nusing Pulumi;\nusing Datadog = Pulumi.Datadog;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var python = new Datadog.LogsIntegrationPipeline(\"python\", new Datadog.LogsIntegrationPipelineArgs\n        {\n            IsEnabled = true,\n        });\n    }\n\n}\n```\n\n{{% /example %}}\n{{% /examples %}}\n",
            "properties": {
                "isEnabled": {
                    "type": "boolean",
                    "description": "Boolean value to enable your pipeline.\n"
                }
            },
            "inputProperties": {
                "isEnabled": {
                    "type": "boolean",
                    "description": "Boolean value to enable your pipeline.\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering LogsIntegrationPipeline resources.\n",
                "properties": {
                    "isEnabled": {
                        "type": "boolean",
                        "description": "Boolean value to enable your pipeline.\n"
                    }
                },
                "type": "object"
            }
        },
        "datadog:index/logsPipelineOrder:LogsPipelineOrder": {
            "description": "Provides a Datadog [Logs Pipeline API](https://docs.datadoghq.com/api/?lang=python#logs-pipelines) resource, which is used to manage Datadog log pipelines order.\n\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as datadog from \"@pulumi/datadog\";\n\nconst samplePipelineOrder = new datadog.LogsPipelineOrder(\"samplePipelineOrder\", {\n    name: \"sample_pipeline_order\",\n    pipelines: [\n        datadog_logs_custom_pipeline.sample_pipeline.id,\n        datadog_logs_integration_pipeline.python.id,\n    ],\n});\n```\n```python\nimport pulumi\nimport pulumi_datadog as datadog\n\nsample_pipeline_order = datadog.LogsPipelineOrder(\"samplePipelineOrder\",\n    name=\"sample_pipeline_order\",\n    pipelines=[\n        datadog_logs_custom_pipeline[\"sample_pipeline\"][\"id\"],\n        datadog_logs_integration_pipeline[\"python\"][\"id\"],\n    ])\n```\n```csharp\nusing Pulumi;\nusing Datadog = Pulumi.Datadog;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var samplePipelineOrder = new Datadog.LogsPipelineOrder(\"samplePipelineOrder\", new Datadog.LogsPipelineOrderArgs\n        {\n            Name = \"sample_pipeline_order\",\n            Pipelines = \n            {\n                datadog_logs_custom_pipeline.Sample_pipeline.Id,\n                datadog_logs_integration_pipeline.Python.Id,\n            },\n        });\n    }\n\n}\n```\n\n{{% /example %}}\n{{% /examples %}}\n",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "The name attribute in the resource `datadog..LogsPipelineOrder` needs to be unique. It's recommended to use the same value as the resource `NAME`. \nNo related field is available in  [Logs Pipeline API](https://docs.datadoghq.com/api/?lang=python#get-pipeline-order).\n"
                },
                "pipelines": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The pipeline IDs list. The order of pipeline IDs in this attribute defines the overall pipeline order for logs.\n"
                }
            },
            "required": [
                "name",
                "pipelines"
            ],
            "inputProperties": {
                "name": {
                    "type": "string",
                    "description": "The name attribute in the resource `datadog..LogsPipelineOrder` needs to be unique. It's recommended to use the same value as the resource `NAME`. \nNo related field is available in  [Logs Pipeline API](https://docs.datadoghq.com/api/?lang=python#get-pipeline-order).\n"
                },
                "pipelines": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The pipeline IDs list. The order of pipeline IDs in this attribute defines the overall pipeline order for logs.\n"
                }
            },
            "requiredInputs": [
                "name",
                "pipelines"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering LogsPipelineOrder resources.\n",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The name attribute in the resource `datadog..LogsPipelineOrder` needs to be unique. It's recommended to use the same value as the resource `NAME`. \nNo related field is available in  [Logs Pipeline API](https://docs.datadoghq.com/api/?lang=python#get-pipeline-order).\n"
                    },
                    "pipelines": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The pipeline IDs list. The order of pipeline IDs in this attribute defines the overall pipeline order for logs.\n"
                    }
                },
                "type": "object"
            }
        },
        "datadog:index/metricMetadata:MetricMetadata": {
            "description": "Provides a Datadog metric_metadata resource. This can be used to manage a metric's metadata.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as datadog from \"@pulumi/datadog\";\n\n// Manage a Datadog metric's metadata\nconst requestTime = new datadog.MetricMetadata(\"request_time\", {\n    description: \"99th percentile request time in millseconds\",\n    metric: \"request.time\",\n    shortName: \"Request time\",\n    type: \"gauge\",\n    unit: \"millisecond\",\n});\n```\n```python\nimport pulumi\nimport pulumi_datadog as datadog\n\n# Manage a Datadog metric's metadata\nrequest_time = datadog.MetricMetadata(\"requestTime\",\n    description=\"99th percentile request time in millseconds\",\n    metric=\"request.time\",\n    short_name=\"Request time\",\n    type=\"gauge\",\n    unit=\"millisecond\")\n```\n```csharp\nusing Pulumi;\nusing Datadog = Pulumi.Datadog;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        // Manage a Datadog metric's metadata\n        var requestTime = new Datadog.MetricMetadata(\"requestTime\", new Datadog.MetricMetadataArgs\n        {\n            Description = \"99th percentile request time in millseconds\",\n            Metric = \"request.time\",\n            ShortName = \"Request time\",\n            Type = \"gauge\",\n            Unit = \"millisecond\",\n        });\n    }\n\n}\n```\n\n{{% /example %}}\n{{% /examples %}}\n",
            "properties": {
                "description": {
                    "type": "string",
                    "description": "A description of the metric.\n"
                },
                "metric": {
                    "type": "string",
                    "description": "The name of the metric.\n"
                },
                "perUnit": {
                    "type": "string",
                    "description": "'Per' unit of the metric such as 'second' in 'bytes per second'.\n"
                },
                "shortName": {
                    "type": "string",
                    "description": "A short name of the metric.\n"
                },
                "statsdInterval": {
                    "type": "integer",
                    "description": "If applicable, stasd flush interval in seconds for the metric.\n"
                },
                "type": {
                    "type": "string"
                },
                "unit": {
                    "type": "string",
                    "description": "Primary unit of the metric such as 'byte' or 'operation'.\n"
                }
            },
            "required": [
                "metric"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "A description of the metric.\n"
                },
                "metric": {
                    "type": "string",
                    "description": "The name of the metric.\n"
                },
                "perUnit": {
                    "type": "string",
                    "description": "'Per' unit of the metric such as 'second' in 'bytes per second'.\n"
                },
                "shortName": {
                    "type": "string",
                    "description": "A short name of the metric.\n"
                },
                "statsdInterval": {
                    "type": "integer",
                    "description": "If applicable, stasd flush interval in seconds for the metric.\n"
                },
                "type": {
                    "type": "string"
                },
                "unit": {
                    "type": "string",
                    "description": "Primary unit of the metric such as 'byte' or 'operation'.\n"
                }
            },
            "requiredInputs": [
                "metric"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering MetricMetadata resources.\n",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "A description of the metric.\n"
                    },
                    "metric": {
                        "type": "string",
                        "description": "The name of the metric.\n"
                    },
                    "perUnit": {
                        "type": "string",
                        "description": "'Per' unit of the metric such as 'second' in 'bytes per second'.\n"
                    },
                    "shortName": {
                        "type": "string",
                        "description": "A short name of the metric.\n"
                    },
                    "statsdInterval": {
                        "type": "integer",
                        "description": "If applicable, stasd flush interval in seconds for the metric.\n"
                    },
                    "type": {
                        "type": "string"
                    },
                    "unit": {
                        "type": "string",
                        "description": "Primary unit of the metric such as 'byte' or 'operation'.\n"
                    }
                },
                "type": "object"
            }
        },
        "datadog:index/monitor:Monitor": {
            "properties": {
                "enableLogsSample": {
                    "type": "boolean",
                    "description": "A boolean indicating whether or not to include a list of log values which triggered the alert. Defaults to false. This is only used by log monitors.\ntriggering tags into the title. Defaults to true.\n"
                },
                "escalationMessage": {
                    "type": "string",
                    "description": "A message to include with a re-notification. Supports the '@username'\nnotification allowed elsewhere.\n"
                },
                "evaluationDelay": {
                    "type": "integer",
                    "description": "Time (in seconds) to delay evaluation, as a non-negative integer.\nFor example, if the value is set to 300 (5min), the timeframe is set to last_5m and the time is 7:00,\nthe monitor will evaluate data from 6:50 to 6:55. This is useful for AWS CloudWatch and other backfilled\nmetrics to ensure the monitor will always have data during evaluation.\n"
                },
                "includeTags": {
                    "type": "boolean",
                    "description": "A boolean indicating whether notifications from this monitor automatically insert its triggering tags into the title. Defaults to true.\n"
                },
                "locked": {
                    "type": "boolean",
                    "description": "A boolean indicating whether changes to to this monitor should be restricted to the creator or admins. Defaults to False.\n"
                },
                "message": {
                    "type": "string",
                    "description": "A message to include with notifications for this monitor.\nEmail notifications can be sent to specific users by using the same '@username' notation as events.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of Datadog monitor\n"
                },
                "newHostDelay": {
                    "type": "integer",
                    "description": "Time (in seconds) to allow a host to boot and\napplications to fully start before starting the evaluation of monitor\nresults. Should be a non negative integer. Defaults to 300.\n"
                },
                "noDataTimeframe": {
                    "type": "integer",
                    "description": "The number of minutes before a monitor will notify when data stops reporting. Must be at\nleast 2x the monitor timeframe for metric alerts or 2 minutes for service checks. Default: 2x timeframe for\nmetric alerts, 2 minutes for service checks. Defaults to 10 minutes.\n"
                },
                "notifyAudit": {
                    "type": "boolean",
                    "description": "A boolean indicating whether tagged users will be notified on changes to this monitor.\nDefaults to false.\n"
                },
                "notifyNoData": {
                    "type": "boolean",
                    "description": "A boolean indicating whether this monitor will notify when data stops reporting. Defaults\nto false.\n"
                },
                "query": {
                    "type": "string"
                },
                "renotifyInterval": {
                    "type": "integer",
                    "description": "The number of minutes after the last notification before a monitor will re-notify\non the current status. It will only re-notify if it's not resolved.\n"
                },
                "requireFullWindow": {
                    "type": "boolean",
                    "description": "A boolean indicating whether this monitor needs a full window of data before it's evaluated.\nWe highly recommend you set this to False for sparse metrics, otherwise some evaluations will be skipped.\nDefault: True for \"on average\", \"at all times\" and \"in total\" aggregation. False otherwise.\n"
                },
                "silenced": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "deprecationMessage": "use Downtime Resource instead"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tags to associate with your monitor. This can help you categorize and filter monitors in the manage monitors page of the UI. Note: it's not currently possible to filter by these tags when querying via the API\n"
                },
                "thresholdWindows": {
                    "$ref": "#/types/datadog:/MonitorThresholdWindows:MonitorThresholdWindows",
                    "description": "A mapping containing `recovery_window` and `trigger_window` values, e.g. `last_15m`. Can only be used for, and are required for, anomaly monitors.\n"
                },
                "thresholds": {
                    "$ref": "#/types/datadog:/MonitorThresholds:MonitorThresholds",
                    "description": "\n* Metric alerts:\nA dictionary of thresholds by threshold type. Currently we have four threshold types for metric alerts: critical, critical recovery, warning, and warning recovery. Critical is defined in the query, but can also be specified in this option. Warning and recovery thresholds can only be specified using the thresholds option.\nExample usage:\n```\nthresholds = {\ncritical          = 90\ncritical_recovery = 85\nwarning           = 80\nwarning_recovery  = 75\n}\n```\n**Warning:** the `critical` threshold value must match the one contained in the `query` argument. The `threshold` from the previous example is valid along with a query like `avg(last_1h):avg:system.disk.in_use{role:sqlserver} by {host} \u003e 90` but\nalong with something like `avg(last_1h):avg:system.disk.in_use{role:sqlserver} by {host} \u003e 95` would make the Datadog API return a HTTP error 400, complaining \"The value provided for parameter 'query' is invalid\".\n* Service checks:\nA dictionary of thresholds by status. Because service checks can have multiple thresholds, we don't define them directly in the query.\nDefault values:\n```\nthresholds = {\nok       = 1\ncritical = 1\nwarning  = 1\nunknown  = 1\n}\n```\n"
                },
                "timeoutH": {
                    "type": "integer",
                    "description": "The number of hours of the monitor not reporting data before it will automatically resolve\nfrom a triggered state. Defaults to false.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The type of the monitor. The mapping from these types to the types found in the Datadog Web UI can be found in the Datadog API [documentation](https://docs.datadoghq.com/api/?lang=python#create-a-monitor) page. The available options are below. **Note**: The monitor type cannot be changed after a monitor is created.\n* `metric alert`\n* `service check`\n* `event alert`\n* `query alert`\n* `composite`\n* `log alert`\n"
                }
            },
            "required": [
                "evaluationDelay",
                "message",
                "name",
                "query",
                "type"
            ],
            "inputProperties": {
                "enableLogsSample": {
                    "type": "boolean",
                    "description": "A boolean indicating whether or not to include a list of log values which triggered the alert. Defaults to false. This is only used by log monitors.\ntriggering tags into the title. Defaults to true.\n"
                },
                "escalationMessage": {
                    "type": "string",
                    "description": "A message to include with a re-notification. Supports the '@username'\nnotification allowed elsewhere.\n"
                },
                "evaluationDelay": {
                    "type": "integer",
                    "description": "Time (in seconds) to delay evaluation, as a non-negative integer.\nFor example, if the value is set to 300 (5min), the timeframe is set to last_5m and the time is 7:00,\nthe monitor will evaluate data from 6:50 to 6:55. This is useful for AWS CloudWatch and other backfilled\nmetrics to ensure the monitor will always have data during evaluation.\n"
                },
                "includeTags": {
                    "type": "boolean",
                    "description": "A boolean indicating whether notifications from this monitor automatically insert its triggering tags into the title. Defaults to true.\n"
                },
                "locked": {
                    "type": "boolean",
                    "description": "A boolean indicating whether changes to to this monitor should be restricted to the creator or admins. Defaults to False.\n"
                },
                "message": {
                    "type": "string",
                    "description": "A message to include with notifications for this monitor.\nEmail notifications can be sent to specific users by using the same '@username' notation as events.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of Datadog monitor\n"
                },
                "newHostDelay": {
                    "type": "integer",
                    "description": "Time (in seconds) to allow a host to boot and\napplications to fully start before starting the evaluation of monitor\nresults. Should be a non negative integer. Defaults to 300.\n"
                },
                "noDataTimeframe": {
                    "type": "integer",
                    "description": "The number of minutes before a monitor will notify when data stops reporting. Must be at\nleast 2x the monitor timeframe for metric alerts or 2 minutes for service checks. Default: 2x timeframe for\nmetric alerts, 2 minutes for service checks. Defaults to 10 minutes.\n"
                },
                "notifyAudit": {
                    "type": "boolean",
                    "description": "A boolean indicating whether tagged users will be notified on changes to this monitor.\nDefaults to false.\n"
                },
                "notifyNoData": {
                    "type": "boolean",
                    "description": "A boolean indicating whether this monitor will notify when data stops reporting. Defaults\nto false.\n"
                },
                "query": {
                    "type": "string"
                },
                "renotifyInterval": {
                    "type": "integer",
                    "description": "The number of minutes after the last notification before a monitor will re-notify\non the current status. It will only re-notify if it's not resolved.\n"
                },
                "requireFullWindow": {
                    "type": "boolean",
                    "description": "A boolean indicating whether this monitor needs a full window of data before it's evaluated.\nWe highly recommend you set this to False for sparse metrics, otherwise some evaluations will be skipped.\nDefault: True for \"on average\", \"at all times\" and \"in total\" aggregation. False otherwise.\n"
                },
                "silenced": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "deprecationMessage": "use Downtime Resource instead"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tags to associate with your monitor. This can help you categorize and filter monitors in the manage monitors page of the UI. Note: it's not currently possible to filter by these tags when querying via the API\n"
                },
                "thresholdWindows": {
                    "$ref": "#/types/datadog:/MonitorThresholdWindows:MonitorThresholdWindows",
                    "description": "A mapping containing `recovery_window` and `trigger_window` values, e.g. `last_15m`. Can only be used for, and are required for, anomaly monitors.\n"
                },
                "thresholds": {
                    "$ref": "#/types/datadog:/MonitorThresholds:MonitorThresholds",
                    "description": "\n* Metric alerts:\nA dictionary of thresholds by threshold type. Currently we have four threshold types for metric alerts: critical, critical recovery, warning, and warning recovery. Critical is defined in the query, but can also be specified in this option. Warning and recovery thresholds can only be specified using the thresholds option.\nExample usage:\n```\nthresholds = {\ncritical          = 90\ncritical_recovery = 85\nwarning           = 80\nwarning_recovery  = 75\n}\n```\n**Warning:** the `critical` threshold value must match the one contained in the `query` argument. The `threshold` from the previous example is valid along with a query like `avg(last_1h):avg:system.disk.in_use{role:sqlserver} by {host} \u003e 90` but\nalong with something like `avg(last_1h):avg:system.disk.in_use{role:sqlserver} by {host} \u003e 95` would make the Datadog API return a HTTP error 400, complaining \"The value provided for parameter 'query' is invalid\".\n* Service checks:\nA dictionary of thresholds by status. Because service checks can have multiple thresholds, we don't define them directly in the query.\nDefault values:\n```\nthresholds = {\nok       = 1\ncritical = 1\nwarning  = 1\nunknown  = 1\n}\n```\n"
                },
                "timeoutH": {
                    "type": "integer",
                    "description": "The number of hours of the monitor not reporting data before it will automatically resolve\nfrom a triggered state. Defaults to false.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The type of the monitor. The mapping from these types to the types found in the Datadog Web UI can be found in the Datadog API [documentation](https://docs.datadoghq.com/api/?lang=python#create-a-monitor) page. The available options are below. **Note**: The monitor type cannot be changed after a monitor is created.\n* `metric alert`\n* `service check`\n* `event alert`\n* `query alert`\n* `composite`\n* `log alert`\n"
                }
            },
            "requiredInputs": [
                "message",
                "name",
                "query",
                "type"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Monitor resources.\n",
                "properties": {
                    "enableLogsSample": {
                        "type": "boolean",
                        "description": "A boolean indicating whether or not to include a list of log values which triggered the alert. Defaults to false. This is only used by log monitors.\ntriggering tags into the title. Defaults to true.\n"
                    },
                    "escalationMessage": {
                        "type": "string",
                        "description": "A message to include with a re-notification. Supports the '@username'\nnotification allowed elsewhere.\n"
                    },
                    "evaluationDelay": {
                        "type": "integer",
                        "description": "Time (in seconds) to delay evaluation, as a non-negative integer.\nFor example, if the value is set to 300 (5min), the timeframe is set to last_5m and the time is 7:00,\nthe monitor will evaluate data from 6:50 to 6:55. This is useful for AWS CloudWatch and other backfilled\nmetrics to ensure the monitor will always have data during evaluation.\n"
                    },
                    "includeTags": {
                        "type": "boolean",
                        "description": "A boolean indicating whether notifications from this monitor automatically insert its triggering tags into the title. Defaults to true.\n"
                    },
                    "locked": {
                        "type": "boolean",
                        "description": "A boolean indicating whether changes to to this monitor should be restricted to the creator or admins. Defaults to False.\n"
                    },
                    "message": {
                        "type": "string",
                        "description": "A message to include with notifications for this monitor.\nEmail notifications can be sent to specific users by using the same '@username' notation as events.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of Datadog monitor\n"
                    },
                    "newHostDelay": {
                        "type": "integer",
                        "description": "Time (in seconds) to allow a host to boot and\napplications to fully start before starting the evaluation of monitor\nresults. Should be a non negative integer. Defaults to 300.\n"
                    },
                    "noDataTimeframe": {
                        "type": "integer",
                        "description": "The number of minutes before a monitor will notify when data stops reporting. Must be at\nleast 2x the monitor timeframe for metric alerts or 2 minutes for service checks. Default: 2x timeframe for\nmetric alerts, 2 minutes for service checks. Defaults to 10 minutes.\n"
                    },
                    "notifyAudit": {
                        "type": "boolean",
                        "description": "A boolean indicating whether tagged users will be notified on changes to this monitor.\nDefaults to false.\n"
                    },
                    "notifyNoData": {
                        "type": "boolean",
                        "description": "A boolean indicating whether this monitor will notify when data stops reporting. Defaults\nto false.\n"
                    },
                    "query": {
                        "type": "string"
                    },
                    "renotifyInterval": {
                        "type": "integer",
                        "description": "The number of minutes after the last notification before a monitor will re-notify\non the current status. It will only re-notify if it's not resolved.\n"
                    },
                    "requireFullWindow": {
                        "type": "boolean",
                        "description": "A boolean indicating whether this monitor needs a full window of data before it's evaluated.\nWe highly recommend you set this to False for sparse metrics, otherwise some evaluations will be skipped.\nDefault: True for \"on average\", \"at all times\" and \"in total\" aggregation. False otherwise.\n"
                    },
                    "silenced": {
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "pulumi.json#/Any"
                        },
                        "deprecationMessage": "use Downtime Resource instead"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of tags to associate with your monitor. This can help you categorize and filter monitors in the manage monitors page of the UI. Note: it's not currently possible to filter by these tags when querying via the API\n"
                    },
                    "thresholdWindows": {
                        "$ref": "#/types/datadog:/MonitorThresholdWindows:MonitorThresholdWindows",
                        "description": "A mapping containing `recovery_window` and `trigger_window` values, e.g. `last_15m`. Can only be used for, and are required for, anomaly monitors.\n"
                    },
                    "thresholds": {
                        "$ref": "#/types/datadog:/MonitorThresholds:MonitorThresholds",
                        "description": "\n* Metric alerts:\nA dictionary of thresholds by threshold type. Currently we have four threshold types for metric alerts: critical, critical recovery, warning, and warning recovery. Critical is defined in the query, but can also be specified in this option. Warning and recovery thresholds can only be specified using the thresholds option.\nExample usage:\n```\nthresholds = {\ncritical          = 90\ncritical_recovery = 85\nwarning           = 80\nwarning_recovery  = 75\n}\n```\n**Warning:** the `critical` threshold value must match the one contained in the `query` argument. The `threshold` from the previous example is valid along with a query like `avg(last_1h):avg:system.disk.in_use{role:sqlserver} by {host} \u003e 90` but\nalong with something like `avg(last_1h):avg:system.disk.in_use{role:sqlserver} by {host} \u003e 95` would make the Datadog API return a HTTP error 400, complaining \"The value provided for parameter 'query' is invalid\".\n* Service checks:\nA dictionary of thresholds by status. Because service checks can have multiple thresholds, we don't define them directly in the query.\nDefault values:\n```\nthresholds = {\nok       = 1\ncritical = 1\nwarning  = 1\nunknown  = 1\n}\n```\n"
                    },
                    "timeoutH": {
                        "type": "integer",
                        "description": "The number of hours of the monitor not reporting data before it will automatically resolve\nfrom a triggered state. Defaults to false.\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "The type of the monitor. The mapping from these types to the types found in the Datadog Web UI can be found in the Datadog API [documentation](https://docs.datadoghq.com/api/?lang=python#create-a-monitor) page. The available options are below. **Note**: The monitor type cannot be changed after a monitor is created.\n* `metric alert`\n* `service check`\n* `event alert`\n* `query alert`\n* `composite`\n* `log alert`\n"
                    }
                },
                "type": "object"
            }
        },
        "datadog:index/screenBoard:ScreenBoard": {
            "description": "Provides a Datadog screenboard resource. This can be used to create and manage Datadog screenboards.\n\n\u003e **Note:** This resource is outdated. Use the new `datadog..Dashboard` resource instead.\n\n{{% examples %}}\n{{% /examples %}}\n",
            "properties": {
                "height": {
                    "type": "string",
                    "description": "Height of the screenboard\n"
                },
                "readOnly": {
                    "type": "boolean"
                },
                "shared": {
                    "type": "boolean",
                    "description": "Whether the screenboard is shared or not\n"
                },
                "templateVariables": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/ScreenBoardTemplateVariable:ScreenBoardTemplateVariable"
                    },
                    "description": "A list of template variables for using Dashboard templating.\n"
                },
                "title": {
                    "type": "string",
                    "description": "Name of the screenboard\n"
                },
                "widgets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/ScreenBoardWidget:ScreenBoardWidget"
                    },
                    "description": "A list of widget definitions.\n"
                },
                "width": {
                    "type": "string",
                    "description": "Width of the screenboard\n"
                }
            },
            "required": [
                "title",
                "widgets"
            ],
            "inputProperties": {
                "height": {
                    "type": "string",
                    "description": "Height of the screenboard\n"
                },
                "readOnly": {
                    "type": "boolean"
                },
                "shared": {
                    "type": "boolean",
                    "description": "Whether the screenboard is shared or not\n"
                },
                "templateVariables": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/ScreenBoardTemplateVariable:ScreenBoardTemplateVariable"
                    },
                    "description": "A list of template variables for using Dashboard templating.\n"
                },
                "title": {
                    "type": "string",
                    "description": "Name of the screenboard\n"
                },
                "widgets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/ScreenBoardWidget:ScreenBoardWidget"
                    },
                    "description": "A list of widget definitions.\n"
                },
                "width": {
                    "type": "string",
                    "description": "Width of the screenboard\n"
                }
            },
            "requiredInputs": [
                "title",
                "widgets"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ScreenBoard resources.\n",
                "properties": {
                    "height": {
                        "type": "string",
                        "description": "Height of the screenboard\n"
                    },
                    "readOnly": {
                        "type": "boolean"
                    },
                    "shared": {
                        "type": "boolean",
                        "description": "Whether the screenboard is shared or not\n"
                    },
                    "templateVariables": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/datadog:/ScreenBoardTemplateVariable:ScreenBoardTemplateVariable"
                        },
                        "description": "A list of template variables for using Dashboard templating.\n"
                    },
                    "title": {
                        "type": "string",
                        "description": "Name of the screenboard\n"
                    },
                    "widgets": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/datadog:/ScreenBoardWidget:ScreenBoardWidget"
                        },
                        "description": "A list of widget definitions.\n"
                    },
                    "width": {
                        "type": "string",
                        "description": "Width of the screenboard\n"
                    }
                },
                "type": "object"
            }
        },
        "datadog:index/serviceLevelObjective:ServiceLevelObjective": {
            "description": "Provides a Datadog service level objective resource. This can be used to create and manage Datadog service level objectives.\n\n{{% examples %}}\n## Example Usage\n\n{{% example %}}\n### Metric-Based SLO\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as datadog from \"@pulumi/datadog\";\n\n// Create a new Datadog service level objective\nconst foo = new datadog.ServiceLevelObjective(\"foo\", {\n    description: \"My custom metric SLO\",\n    name: \"Example Metric SLO\",\n    query: {\n        denominator: \"sum:my.custom.count.metric{*}.as_count()\",\n        numerator: \"sum:my.custom.count.metric{type:good_events}.as_count()\",\n    },\n    tags: [\n        \"foo:bar\",\n        \"baz\",\n    ],\n    thresholds: [\n        {\n            target: 99.9,\n            targetDisplay: \"99.900\",\n            timeframe: \"7d\",\n            warning: 99.99,\n            warningDisplay: \"99.990\",\n        },\n        {\n            target: 99.9,\n            targetDisplay: \"99.900\",\n            timeframe: \"30d\",\n            warning: 99.99,\n            warningDisplay: \"99.990\",\n        },\n    ],\n    type: \"metric\",\n});\n```\n```python\nimport pulumi\nimport pulumi_datadog as datadog\n\n# Create a new Datadog service level objective\nfoo = datadog.ServiceLevelObjective(\"foo\",\n    description=\"My custom metric SLO\",\n    name=\"Example Metric SLO\",\n    query={\n        \"denominator\": \"sum:my.custom.count.metric{*}.as_count()\",\n        \"numerator\": \"sum:my.custom.count.metric{type:good_events}.as_count()\",\n    },\n    tags=[\n        \"foo:bar\",\n        \"baz\",\n    ],\n    thresholds=[\n        {\n            \"target\": 99.9,\n            \"targetDisplay\": \"99.900\",\n            \"timeframe\": \"7d\",\n            \"warning\": 99.99,\n            \"warningDisplay\": \"99.990\",\n        },\n        {\n            \"target\": 99.9,\n            \"targetDisplay\": \"99.900\",\n            \"timeframe\": \"30d\",\n            \"warning\": 99.99,\n            \"warningDisplay\": \"99.990\",\n        },\n    ],\n    type=\"metric\")\n```\n```csharp\nusing Pulumi;\nusing Datadog = Pulumi.Datadog;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        // Create a new Datadog service level objective\n        var foo = new Datadog.ServiceLevelObjective(\"foo\", new Datadog.ServiceLevelObjectiveArgs\n        {\n            Description = \"My custom metric SLO\",\n            Name = \"Example Metric SLO\",\n            Query = new Datadog.Inputs.ServiceLevelObjectiveQueryArgs\n            {\n                Denominator = \"sum:my.custom.count.metric{*}.as_count()\",\n                Numerator = \"sum:my.custom.count.metric{type:good_events}.as_count()\",\n            },\n            Tags = \n            {\n                \"foo:bar\",\n                \"baz\",\n            },\n            Thresholds = \n            {\n                new Datadog.Inputs.ServiceLevelObjectiveThresholdArgs\n                {\n                    Target = 99.9,\n                    TargetDisplay = \"99.900\",\n                    Timeframe = \"7d\",\n                    Warning = 99.99,\n                    WarningDisplay = \"99.990\",\n                },\n                new Datadog.Inputs.ServiceLevelObjectiveThresholdArgs\n                {\n                    Target = 99.9,\n                    TargetDisplay = \"99.900\",\n                    Timeframe = \"30d\",\n                    Warning = 99.99,\n                    WarningDisplay = \"99.990\",\n                },\n            },\n            Type = \"metric\",\n        });\n    }\n\n}\n```\n\n{{% /example %}}\n{{% example %}}\n### Monitor-Based SLO\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as datadog from \"@pulumi/datadog\";\n\n// Create a new Datadog service level objective\nconst bar = new datadog.ServiceLevelObjective(\"bar\", {\n    description: \"My custom monitor SLO\",\n    monitorIds: [\n        1,\n        2,\n        3,\n    ],\n    name: \"Example Monitor SLO\",\n    tags: [\n        \"foo:bar\",\n        \"baz\",\n    ],\n    thresholds: [\n        {\n            target: 99.9,\n            timeframe: \"7d\",\n            warning: 99.99,\n        },\n        {\n            target: 99.9,\n            timeframe: \"30d\",\n            warning: 99.99,\n        },\n    ],\n    type: \"monitor\",\n});\n```\n```python\nimport pulumi\nimport pulumi_datadog as datadog\n\n# Create a new Datadog service level objective\nbar = datadog.ServiceLevelObjective(\"bar\",\n    description=\"My custom monitor SLO\",\n    monitor_ids=[\n        1,\n        2,\n        3,\n    ],\n    name=\"Example Monitor SLO\",\n    tags=[\n        \"foo:bar\",\n        \"baz\",\n    ],\n    thresholds=[\n        {\n            \"target\": 99.9,\n            \"timeframe\": \"7d\",\n            \"warning\": 99.99,\n        },\n        {\n            \"target\": 99.9,\n            \"timeframe\": \"30d\",\n            \"warning\": 99.99,\n        },\n    ],\n    type=\"monitor\")\n```\n```csharp\nusing Pulumi;\nusing Datadog = Pulumi.Datadog;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        // Create a new Datadog service level objective\n        var bar = new Datadog.ServiceLevelObjective(\"bar\", new Datadog.ServiceLevelObjectiveArgs\n        {\n            Description = \"My custom monitor SLO\",\n            MonitorIds = \n            {\n                1,\n                2,\n                3,\n            },\n            Name = \"Example Monitor SLO\",\n            Tags = \n            {\n                \"foo:bar\",\n                \"baz\",\n            },\n            Thresholds = \n            {\n                new Datadog.Inputs.ServiceLevelObjectiveThresholdArgs\n                {\n                    Target = 99.9,\n                    Timeframe = \"7d\",\n                    Warning = 99.99,\n                },\n                new Datadog.Inputs.ServiceLevelObjectiveThresholdArgs\n                {\n                    Target = 99.9,\n                    Timeframe = \"30d\",\n                    Warning = 99.99,\n                },\n            },\n            Type = \"monitor\",\n        });\n    }\n\n}\n```\n\n{{% /example %}}\n{{% /examples %}}\n",
            "properties": {
                "description": {
                    "type": "string",
                    "description": "A description of this service level objective.\n"
                },
                "groups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A custom set of groups from the monitor(s) for which to use as the SLI instead of all the groups.\n"
                },
                "monitorIds": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "A list of numeric monitor IDs for which to use as SLIs. Their tags will be auto-imported into `monitor_tags` field in the API resource.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of Datadog service level objective\n"
                },
                "query": {
                    "$ref": "#/types/datadog:/ServiceLevelObjectiveQuery:ServiceLevelObjectiveQuery",
                    "description": "The metric query configuration to use for the SLI. This is a dictionary and requires both the `numerator` and `denominator` fields which should be `count` metrics using the `sum` aggregator.\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tags to associate with your service level objective. This can help you categorize and filter service level objectives in the service level objectives page of the UI. Note: it's not currently possible to filter by these tags when querying via the API\n"
                },
                "thresholds": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/ServiceLevelObjectiveThreshold:ServiceLevelObjectiveThreshold"
                    },
                    "description": "- A list of thresholds and targets that define the service level objectives from the provided SLIs.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The type of the service level objective. The mapping from these types to the types found in the Datadog Web UI can be found in the Datadog API [documentation](https://docs.datadoghq.com/api/?lang=python#create-a-service-level-objective) page. Available options to choose from are:\n* `metric`\n* `monitor`\n"
                }
            },
            "required": [
                "name",
                "thresholds",
                "type"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "A description of this service level objective.\n"
                },
                "groups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A custom set of groups from the monitor(s) for which to use as the SLI instead of all the groups.\n"
                },
                "monitorIds": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "A list of numeric monitor IDs for which to use as SLIs. Their tags will be auto-imported into `monitor_tags` field in the API resource.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of Datadog service level objective\n"
                },
                "query": {
                    "$ref": "#/types/datadog:/ServiceLevelObjectiveQuery:ServiceLevelObjectiveQuery",
                    "description": "The metric query configuration to use for the SLI. This is a dictionary and requires both the `numerator` and `denominator` fields which should be `count` metrics using the `sum` aggregator.\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tags to associate with your service level objective. This can help you categorize and filter service level objectives in the service level objectives page of the UI. Note: it's not currently possible to filter by these tags when querying via the API\n"
                },
                "thresholds": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/ServiceLevelObjectiveThreshold:ServiceLevelObjectiveThreshold"
                    },
                    "description": "- A list of thresholds and targets that define the service level objectives from the provided SLIs.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The type of the service level objective. The mapping from these types to the types found in the Datadog Web UI can be found in the Datadog API [documentation](https://docs.datadoghq.com/api/?lang=python#create-a-service-level-objective) page. Available options to choose from are:\n* `metric`\n* `monitor`\n"
                }
            },
            "requiredInputs": [
                "name",
                "thresholds",
                "type"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ServiceLevelObjective resources.\n",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "A description of this service level objective.\n"
                    },
                    "groups": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A custom set of groups from the monitor(s) for which to use as the SLI instead of all the groups.\n"
                    },
                    "monitorIds": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "description": "A list of numeric monitor IDs for which to use as SLIs. Their tags will be auto-imported into `monitor_tags` field in the API resource.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of Datadog service level objective\n"
                    },
                    "query": {
                        "$ref": "#/types/datadog:/ServiceLevelObjectiveQuery:ServiceLevelObjectiveQuery",
                        "description": "The metric query configuration to use for the SLI. This is a dictionary and requires both the `numerator` and `denominator` fields which should be `count` metrics using the `sum` aggregator.\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of tags to associate with your service level objective. This can help you categorize and filter service level objectives in the service level objectives page of the UI. Note: it's not currently possible to filter by these tags when querying via the API\n"
                    },
                    "thresholds": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/datadog:/ServiceLevelObjectiveThreshold:ServiceLevelObjectiveThreshold"
                        },
                        "description": "- A list of thresholds and targets that define the service level objectives from the provided SLIs.\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "The type of the service level objective. The mapping from these types to the types found in the Datadog Web UI can be found in the Datadog API [documentation](https://docs.datadoghq.com/api/?lang=python#create-a-service-level-objective) page. Available options to choose from are:\n* `metric`\n* `monitor`\n"
                    }
                },
                "type": "object"
            }
        },
        "datadog:index/syntheticsTest:SyntheticsTest": {
            "properties": {
                "assertions": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "pulumi.json#/Any"
                        }
                    }
                },
                "deviceIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "locations": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "message": {
                    "type": "string"
                },
                "monitorId": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "options": {
                    "$ref": "#/types/datadog:/SyntheticsTestOptions:SyntheticsTestOptions"
                },
                "request": {
                    "$ref": "#/types/datadog:/SyntheticsTestRequest:SyntheticsTestRequest"
                },
                "requestHeaders": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    }
                },
                "status": {
                    "type": "string"
                },
                "subtype": {
                    "type": "string"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "type": {
                    "type": "string"
                }
            },
            "required": [
                "locations",
                "monitorId",
                "name",
                "request",
                "status",
                "tags",
                "type"
            ],
            "inputProperties": {
                "assertions": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "pulumi.json#/Any"
                        }
                    }
                },
                "deviceIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "locations": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "message": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "options": {
                    "$ref": "#/types/datadog:/SyntheticsTestOptions:SyntheticsTestOptions"
                },
                "request": {
                    "$ref": "#/types/datadog:/SyntheticsTestRequest:SyntheticsTestRequest"
                },
                "requestHeaders": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    }
                },
                "status": {
                    "type": "string"
                },
                "subtype": {
                    "type": "string"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "type": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "locations",
                "name",
                "request",
                "status",
                "tags",
                "type"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SyntheticsTest resources.\n",
                "properties": {
                    "assertions": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "additionalProperties": {
                                "$ref": "pulumi.json#/Any"
                            }
                        }
                    },
                    "deviceIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "locations": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "message": {
                        "type": "string"
                    },
                    "monitorId": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "options": {
                        "$ref": "#/types/datadog:/SyntheticsTestOptions:SyntheticsTestOptions"
                    },
                    "request": {
                        "$ref": "#/types/datadog:/SyntheticsTestRequest:SyntheticsTestRequest"
                    },
                    "requestHeaders": {
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "pulumi.json#/Any"
                        }
                    },
                    "status": {
                        "type": "string"
                    },
                    "subtype": {
                        "type": "string"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "type": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "datadog:index/timeBoard:TimeBoard": {
            "description": "Provides a Datadog timeboard resource. This can be used to create and manage Datadog timeboards.\n\n\u003e **Note:**This resource is outdated. Use the new `datadog..Dashboard` resource instead.\n\n{{% examples %}}\n{{% /examples %}}\n",
            "properties": {
                "description": {
                    "type": "string",
                    "description": "A description of the dashboard's content.\n"
                },
                "graphs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/TimeBoardGraph:TimeBoardGraph"
                    },
                    "description": "A list of graph definitions.\n"
                },
                "readOnly": {
                    "type": "boolean"
                },
                "templateVariables": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/TimeBoardTemplateVariable:TimeBoardTemplateVariable"
                    },
                    "description": "A list of template variables for using Dashboard templating.\n"
                },
                "title": {
                    "type": "string",
                    "description": "The name of the dashboard.\n"
                }
            },
            "required": [
                "description",
                "graphs",
                "title"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "A description of the dashboard's content.\n"
                },
                "graphs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/TimeBoardGraph:TimeBoardGraph"
                    },
                    "description": "A list of graph definitions.\n"
                },
                "readOnly": {
                    "type": "boolean"
                },
                "templateVariables": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/TimeBoardTemplateVariable:TimeBoardTemplateVariable"
                    },
                    "description": "A list of template variables for using Dashboard templating.\n"
                },
                "title": {
                    "type": "string",
                    "description": "The name of the dashboard.\n"
                }
            },
            "requiredInputs": [
                "description",
                "graphs",
                "title"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering TimeBoard resources.\n",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "A description of the dashboard's content.\n"
                    },
                    "graphs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/datadog:/TimeBoardGraph:TimeBoardGraph"
                        },
                        "description": "A list of graph definitions.\n"
                    },
                    "readOnly": {
                        "type": "boolean"
                    },
                    "templateVariables": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/datadog:/TimeBoardTemplateVariable:TimeBoardTemplateVariable"
                        },
                        "description": "A list of template variables for using Dashboard templating.\n"
                    },
                    "title": {
                        "type": "string",
                        "description": "The name of the dashboard.\n"
                    }
                },
                "type": "object"
            }
        },
        "datadog:index/user:User": {
            "description": "Provides a Datadog user resource. This can be used to create and manage Datadog users.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as datadog from \"@pulumi/datadog\";\n\n// Create a new Datadog user\nconst foo = new datadog.User(\"foo\", {\n    email: \"new@example.com\",\n    handle: \"new@example.com\",\n    name: \"New User\",\n});\n```\n```python\nimport pulumi\nimport pulumi_datadog as datadog\n\n# Create a new Datadog user\nfoo = datadog.User(\"foo\",\n    email=\"new@example.com\",\n    handle=\"new@example.com\",\n    name=\"New User\")\n```\n```csharp\nusing Pulumi;\nusing Datadog = Pulumi.Datadog;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        // Create a new Datadog user\n        var foo = new Datadog.User(\"foo\", new Datadog.UserArgs\n        {\n            Email = \"new@example.com\",\n            Handle = \"new@example.com\",\n            Name = \"New User\",\n        });\n    }\n\n}\n```\n\n{{% /example %}}\n{{% /examples %}}\n",
            "properties": {
                "accessRole": {
                    "type": "string",
                    "description": "Role description for user. Can be `st` (standard user), `adm` (admin user) or `ro` (read-only user).  Default is `st`.\n"
                },
                "disabled": {
                    "type": "boolean",
                    "description": "Whether the user is disabled\n"
                },
                "email": {
                    "type": "string",
                    "description": "Email address for user\n"
                },
                "handle": {
                    "type": "string",
                    "description": "The user handle, must be a valid email.\n"
                },
                "isAdmin": {
                    "type": "boolean",
                    "description": "(Optional) Whether the user is an administrator. **Warning**: the corresponding query parameter is ignored by the Datadog API, thus the argument would always trigger an execution plan.\n",
                    "deprecationMessage": "This parameter will be replaced by `access_role` and will be removed from the next Major version"
                },
                "name": {
                    "type": "string",
                    "description": "Name for user\n"
                },
                "role": {
                    "type": "string",
                    "description": "Role description for user. **Warning**: the corresponding query parameter is ignored by the Datadog API, thus the argument would always trigger an execution plan.\n",
                    "deprecationMessage": "This parameter was removed from the API and has no effect"
                },
                "verified": {
                    "type": "boolean",
                    "description": "Returns true if Datadog user is verified\n"
                }
            },
            "required": [
                "email",
                "handle",
                "isAdmin",
                "name",
                "verified"
            ],
            "inputProperties": {
                "accessRole": {
                    "type": "string",
                    "description": "Role description for user. Can be `st` (standard user), `adm` (admin user) or `ro` (read-only user).  Default is `st`.\n"
                },
                "disabled": {
                    "type": "boolean",
                    "description": "Whether the user is disabled\n"
                },
                "email": {
                    "type": "string",
                    "description": "Email address for user\n"
                },
                "handle": {
                    "type": "string",
                    "description": "The user handle, must be a valid email.\n"
                },
                "isAdmin": {
                    "type": "boolean",
                    "description": "(Optional) Whether the user is an administrator. **Warning**: the corresponding query parameter is ignored by the Datadog API, thus the argument would always trigger an execution plan.\n",
                    "deprecationMessage": "This parameter will be replaced by `access_role` and will be removed from the next Major version"
                },
                "name": {
                    "type": "string",
                    "description": "Name for user\n"
                },
                "role": {
                    "type": "string",
                    "description": "Role description for user. **Warning**: the corresponding query parameter is ignored by the Datadog API, thus the argument would always trigger an execution plan.\n",
                    "deprecationMessage": "This parameter was removed from the API and has no effect"
                }
            },
            "requiredInputs": [
                "email",
                "handle",
                "name"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering User resources.\n",
                "properties": {
                    "accessRole": {
                        "type": "string",
                        "description": "Role description for user. Can be `st` (standard user), `adm` (admin user) or `ro` (read-only user).  Default is `st`.\n"
                    },
                    "disabled": {
                        "type": "boolean",
                        "description": "Whether the user is disabled\n"
                    },
                    "email": {
                        "type": "string",
                        "description": "Email address for user\n"
                    },
                    "handle": {
                        "type": "string",
                        "description": "The user handle, must be a valid email.\n"
                    },
                    "isAdmin": {
                        "type": "boolean",
                        "description": "(Optional) Whether the user is an administrator. **Warning**: the corresponding query parameter is ignored by the Datadog API, thus the argument would always trigger an execution plan.\n",
                        "deprecationMessage": "This parameter will be replaced by `access_role` and will be removed from the next Major version"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name for user\n"
                    },
                    "role": {
                        "type": "string",
                        "description": "Role description for user. **Warning**: the corresponding query parameter is ignored by the Datadog API, thus the argument would always trigger an execution plan.\n",
                        "deprecationMessage": "This parameter was removed from the API and has no effect"
                    },
                    "verified": {
                        "type": "boolean",
                        "description": "Returns true if Datadog user is verified\n"
                    }
                },
                "type": "object"
            }
        },
        "datadog:pagerduty/integration:Integration": {
            "properties": {
                "apiToken": {
                    "type": "string",
                    "description": "Your PagerDuty API token.\n"
                },
                "individualServices": {
                    "type": "boolean",
                    "description": "Boolean to specify whether or not individual service objects specified by [datadog.pagerduty.ServiceObject](https://www.terraform.io/docs/providers/datadog/r/integration_pagerduty_service_object.html) resource are to be used. Mutually exclusive with `services` key.\n"
                },
                "schedules": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Array of your schedule URLs.\n"
                },
                "services": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:pagerduty/IntegrationService:IntegrationService"
                    },
                    "description": "Array of PagerDuty service objects. **Deprecated** The `services` list is now deprecated in favour of [datadog.pagerduty.ServiceObject](https://www.terraform.io/docs/providers/datadog/r/integration_pagerduty_service_object.html) resource. Note that `individual_services` must be set to `true` to ignore the `service` attribute and use individual services properly.\n",
                    "deprecationMessage": "set \"individual_services\" to true and use datadog_pagerduty_integration_service_object"
                },
                "subdomain": {
                    "type": "string",
                    "description": "Your PagerDuty account’s personalized subdomain name.\n"
                }
            },
            "required": [
                "subdomain"
            ],
            "inputProperties": {
                "apiToken": {
                    "type": "string",
                    "description": "Your PagerDuty API token.\n"
                },
                "individualServices": {
                    "type": "boolean",
                    "description": "Boolean to specify whether or not individual service objects specified by [datadog.pagerduty.ServiceObject](https://www.terraform.io/docs/providers/datadog/r/integration_pagerduty_service_object.html) resource are to be used. Mutually exclusive with `services` key.\n"
                },
                "schedules": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Array of your schedule URLs.\n"
                },
                "services": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:pagerduty/IntegrationService:IntegrationService"
                    },
                    "description": "Array of PagerDuty service objects. **Deprecated** The `services` list is now deprecated in favour of [datadog.pagerduty.ServiceObject](https://www.terraform.io/docs/providers/datadog/r/integration_pagerduty_service_object.html) resource. Note that `individual_services` must be set to `true` to ignore the `service` attribute and use individual services properly.\n",
                    "deprecationMessage": "set \"individual_services\" to true and use datadog_pagerduty_integration_service_object"
                },
                "subdomain": {
                    "type": "string",
                    "description": "Your PagerDuty account’s personalized subdomain name.\n"
                }
            },
            "requiredInputs": [
                "subdomain"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Integration resources.\n",
                "properties": {
                    "apiToken": {
                        "type": "string",
                        "description": "Your PagerDuty API token.\n"
                    },
                    "individualServices": {
                        "type": "boolean",
                        "description": "Boolean to specify whether or not individual service objects specified by [datadog.pagerduty.ServiceObject](https://www.terraform.io/docs/providers/datadog/r/integration_pagerduty_service_object.html) resource are to be used. Mutually exclusive with `services` key.\n"
                    },
                    "schedules": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Array of your schedule URLs.\n"
                    },
                    "services": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/datadog:pagerduty/IntegrationService:IntegrationService"
                        },
                        "description": "Array of PagerDuty service objects. **Deprecated** The `services` list is now deprecated in favour of [datadog.pagerduty.ServiceObject](https://www.terraform.io/docs/providers/datadog/r/integration_pagerduty_service_object.html) resource. Note that `individual_services` must be set to `true` to ignore the `service` attribute and use individual services properly.\n",
                        "deprecationMessage": "set \"individual_services\" to true and use datadog_pagerduty_integration_service_object"
                    },
                    "subdomain": {
                        "type": "string",
                        "description": "Your PagerDuty account’s personalized subdomain name.\n"
                    }
                },
                "type": "object"
            }
        },
        "datadog:pagerduty/serviceObject:ServiceObject": {
            "description": "Provides access to individual Service Objects of Datadog - PagerDuty integrations. Note that the Datadog - PagerDuty integration must be activated (either manually in the Datadog UI or by using [datadog.pagerduty.Integration](https://www.terraform.io/docs/providers/datadog/r/integration_pagerduty.html)) in order for this resource to be usable.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as datadog from \"@pulumi/datadog\";\n\nconst pd = new datadog.pagerduty.Integration(\"pd\", {\n    apiToken: \"38457822378273432587234242874\",\n    individualServices: true,\n    schedules: [\n        \"https://ddog.pagerduty.com/schedules/X123VF\",\n        \"https://ddog.pagerduty.com/schedules/X321XX\",\n    ],\n    subdomain: \"ddog\",\n});\nconst testingFoo = new datadog.pagerduty.ServiceObject(\"testing_foo\", {\n    serviceKey: \"9876543210123456789\",\n    serviceName: \"testing_foo\",\n}, { dependsOn: [pd] });\nconst testingBar = new datadog.pagerduty.ServiceObject(\"testing_bar\", {\n    serviceKey: \"54321098765432109876\",\n    serviceName: \"testing_bar\",\n}, { dependsOn: [pd] });\n```\n```python\nimport pulumi\nimport pulumi_datadog as datadog\n\npd = datadog.pagerduty.Integration(\"pd\",\n    api_token=\"38457822378273432587234242874\",\n    individual_services=True,\n    schedules=[\n        \"https://ddog.pagerduty.com/schedules/X123VF\",\n        \"https://ddog.pagerduty.com/schedules/X321XX\",\n    ],\n    subdomain=\"ddog\")\ntesting_foo = datadog.pagerduty.ServiceObject(\"testingFoo\",\n    service_key=\"9876543210123456789\",\n    service_name=\"testing_foo\")\ntesting_bar = datadog.pagerduty.ServiceObject(\"testingBar\",\n    service_key=\"54321098765432109876\",\n    service_name=\"testing_bar\")\n```\n```csharp\nusing Pulumi;\nusing Datadog = Pulumi.Datadog;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var pd = new Datadog.PagerDuty.Integration(\"pd\", new Datadog.PagerDuty.IntegrationArgs\n        {\n            ApiToken = \"38457822378273432587234242874\",\n            IndividualServices = true,\n            Schedules = \n            {\n                \"https://ddog.pagerduty.com/schedules/X123VF\",\n                \"https://ddog.pagerduty.com/schedules/X321XX\",\n            },\n            Subdomain = \"ddog\",\n        });\n        var testingFoo = new Datadog.PagerDuty.ServiceObject(\"testingFoo\", new Datadog.PagerDuty.ServiceObjectArgs\n        {\n            ServiceKey = \"9876543210123456789\",\n            ServiceName = \"testing_foo\",\n        });\n        var testingBar = new Datadog.PagerDuty.ServiceObject(\"testingBar\", new Datadog.PagerDuty.ServiceObjectArgs\n        {\n            ServiceKey = \"54321098765432109876\",\n            ServiceName = \"testing_bar\",\n        });\n    }\n\n}\n```\n\n{{% /example %}}\n{{% /examples %}}\n",
            "properties": {
                "serviceKey": {
                    "type": "string"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Your Service name in PagerDuty.\n"
                }
            },
            "required": [
                "serviceKey",
                "serviceName"
            ],
            "inputProperties": {
                "serviceKey": {
                    "type": "string"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Your Service name in PagerDuty.\n"
                }
            },
            "requiredInputs": [
                "serviceKey",
                "serviceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ServiceObject resources.\n",
                "properties": {
                    "serviceKey": {
                        "type": "string"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Your Service name in PagerDuty.\n"
                    }
                },
                "type": "object"
            }
        }
    },
    "functions": {
        "datadog:index/getIpRanges:getIpRanges": {
            "description": "Use this data source to retrieve information about Datadog's IP addresses.\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as datadog from \"@pulumi/datadog\";\n\nconst test = pulumi.output(datadog.getIpRanges({ async: true }));\n```\n```python\nimport pulumi\nimport pulumi_datadog as datadog\n\ntest = datadog.get_ip_ranges()\n```\n```csharp\nusing Pulumi;\nusing Datadog = Pulumi.Datadog;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var test = Output.Create(Datadog.GetIpRanges.InvokeAsync());\n    }\n\n}\n```\n\n{{% /example %}}\n{{% /examples %}}\n",
            "outputs": {
                "description": "A collection of values returned by getIpRanges.\n",
                "properties": {
                    "agentsIpv4s": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "An Array of IPv4 addresses in CIDR format specifying the A records for the agent endpoint.\n"
                    },
                    "agentsIpv6s": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "An Array of IPv6 addresses in CIDR format specifying the A records for the agent endpoint.\n"
                    },
                    "apiIpv4s": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "An Array of IPv4 addresses in CIDR format specifying the A records for the api endpoint.\n"
                    },
                    "apiIpv6s": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "An Array of IPv6 addresses in CIDR format specifying the A records for the api endpoint.\n"
                    },
                    "apmIpv4s": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "An Array of IPv4 addresses in CIDR format specifying the A records for the apm endpoint.\n"
                    },
                    "apmIpv6s": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "An Array of IPv6 addresses in CIDR format specifying the A records for the apm endpoint.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "logsIpv4s": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "An Array of IPv4 addresses in CIDR format specifying the A records for the logs endpoint.\n"
                    },
                    "logsIpv6s": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "An Array of IPv6 addresses in CIDR format specifying the A records for the logs endpoint.\n"
                    },
                    "processIpv4s": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "An Array of IPv4 addresses in CIDR format specifying the A records for the process endpoint.\n"
                    },
                    "processIpv6s": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "An Array of IPv6 addresses in CIDR format specifying the A records for the process endpoint.\n"
                    },
                    "syntheticsIpv4s": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "An Array of IPv4 addresses in CIDR format specifying the A records for the synthetics endpoint.\n"
                    },
                    "syntheticsIpv6s": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "An Array of IPv6 addresses in CIDR format specifying the A records for the synthetics endpoint.\n"
                    },
                    "webhooksIpv4s": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "An Array of IPv4 addresses in CIDR format specifying the A records for the webhooks endpoint.\n"
                    },
                    "webhooksIpv6s": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "An Array of IPv6 addresses in CIDR format specifying the A records for the webhooks endpoint.\n"
                    }
                },
                "type": "object",
                "required": [
                    "agentsIpv4s",
                    "agentsIpv6s",
                    "apiIpv4s",
                    "apiIpv6s",
                    "apmIpv4s",
                    "apmIpv6s",
                    "logsIpv4s",
                    "logsIpv6s",
                    "processIpv4s",
                    "processIpv6s",
                    "syntheticsIpv4s",
                    "syntheticsIpv6s",
                    "webhooksIpv4s",
                    "webhooksIpv6s",
                    "id"
                ]
            }
        }
    },
    "language": {
        "csharp": {
            "namespaces": {
                "aws": "Aws",
                "datadog": "Datadog",
                "gcp": "Gcp",
                "index": "index",
                "pagerduty": "PagerDuty"
            },
            "packageReferences": {
                "Pulumi": "2.*",
                "System.Collections.Immutable": "1.6.0"
            }
        },
        "nodejs": {
            "dependencies": {
                "@pulumi/pulumi": "^2.0.0"
            },
            "devDependencies": {
                "@types/node": "^8.0.25"
            },
            "packageDescription": "A Pulumi package for creating and managing Datadog resources.",
            "packageName": "",
            "typescriptVersion": ""
        },
        "python": {
            "requires": {
                "pulumi": "\u003e=2.0.0,\u003c3.0.0"
            }
        }
    }
}