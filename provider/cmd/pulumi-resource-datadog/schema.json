{
    "name": "datadog",
    "description": "A Pulumi package for creating and managing Datadog resources.",
    "keywords": [
        "pulumi",
        "datadog"
    ],
    "homepage": "https://pulumi.io",
    "license": "Apache-2.0",
    "attribution": "This Pulumi package is based on the [`datadog` Terraform Provider](https://github.com/terraform-providers/terraform-provider-datadog).",
    "repository": "https://github.com/pulumi/pulumi-datadog",
    "meta": {
        "moduleFormat": "(.*)(?:/[^/]*)"
    },
    "language": {
        "csharp": {
            "compatibility": "tfbridge20",
            "namespaces": {
                "aws": "Aws",
                "azure": "Azure",
                "datadog": "Datadog",
                "gcp": "Gcp",
                "index": "index",
                "opsgenie": "OpsGenie",
                "pagerduty": "PagerDuty",
                "slack": "Slack"
            },
            "packageReferences": {
                "Pulumi": "3.*"
            }
        },
        "go": {
            "generateExtraInputTypes": true,
            "generateResourceContainerTypes": true,
            "importBasePath": "github.com/pulumi/pulumi-datadog/sdk/v4/go/datadog"
        },
        "nodejs": {
            "compatibility": "tfbridge20",
            "dependencies": {
                "@pulumi/pulumi": "^3.0.0"
            },
            "devDependencies": {
                "@types/node": "^10.0.0"
            },
            "disableUnionOutputTypes": true,
            "packageDescription": "A Pulumi package for creating and managing Datadog resources.",
            "packageName": "",
            "pluginName": "",
            "pluginVersion": "",
            "readme": "\u003e This provider is a derived work of the [Terraform Provider](https://github.com/terraform-providers/terraform-provider-datadog)\n\u003e distributed under [MPL 2.0](https://www.mozilla.org/en-US/MPL/2.0/). If you encounter a bug or missing feature,\n\u003e first check the [`pulumi-datadog` repo](https://github.com/pulumi/pulumi-datadog/issues); however, if that doesn't turn up anything,\n\u003e please consult the source [`terraform-provider-datadog` repo](https://github.com/terraform-providers/terraform-provider-datadog/issues).",
            "typescriptVersion": ""
        },
        "python": {
            "compatibility": "tfbridge20",
            "readme": "\u003e This provider is a derived work of the [Terraform Provider](https://github.com/terraform-providers/terraform-provider-datadog)\n\u003e distributed under [MPL 2.0](https://www.mozilla.org/en-US/MPL/2.0/). If you encounter a bug or missing feature,\n\u003e first check the [`pulumi-datadog` repo](https://github.com/pulumi/pulumi-datadog/issues); however, if that doesn't turn up anything,\n\u003e please consult the source [`terraform-provider-datadog` repo](https://github.com/terraform-providers/terraform-provider-datadog/issues).",
            "requires": {
                "pulumi": "\u003e=3.0.0,\u003c4.0.0"
            }
        }
    },
    "config": {
        "variables": {
            "apiKey": {
                "type": "string",
                "description": "(Required unless validate is false) Datadog API key. This can also be set via the DD_API_KEY environment variable.\n",
                "secret": true
            },
            "apiUrl": {
                "type": "string",
                "description": "The API URL. This can also be set via the DD_HOST environment variable. Note that this URL must not end with the `/api/`\npath. For example, `https://api.datadoghq.com/` is a correct value, while `https://api.datadoghq.com/api/` is not. And\nif you're working with \"EU\" version of Datadog, use `https://api.datadoghq.eu/`. Other Datadog region examples:\n`https://api.us5.datadoghq.com/`, `https://api.us3.datadoghq.com/` and `https://api.ddog-gov.com/`. See\nhttps://docs.datadoghq.com/getting_started/site/ for all available regions.\n"
            },
            "appKey": {
                "type": "string",
                "description": "(Required unless validate is false) Datadog APP key. This can also be set via the DD_APP_KEY environment variable.\n",
                "secret": true
            },
            "httpClientRetryBackoffBase": {
                "type": "integer",
                "description": "The HTTP request retry back off base. Defaults to 2.\n"
            },
            "httpClientRetryBackoffMultiplier": {
                "type": "integer",
                "description": "The HTTP request retry back off multiplier. Defaults to 2.\n"
            },
            "httpClientRetryEnabled": {
                "type": "string",
                "description": "Enables request retries on HTTP status codes 429 and 5xx. Valid values are [`true`, `false`]. Defaults to `true`.\n"
            },
            "httpClientRetryMaxRetries": {
                "type": "integer",
                "description": "The HTTP request maximum retry number. Defaults to 3.\n"
            },
            "httpClientRetryTimeout": {
                "type": "integer",
                "description": "The HTTP request retry timeout period. Defaults to 60 seconds.\n"
            },
            "validate": {
                "type": "string",
                "description": "Enables validation of the provided API key during provider initialization. Valid values are [`true`, `false`]. Default\nis true. When false, api_key won't be checked.\n"
            }
        }
    },
    "types": {
        "datadog:aws/getIntegrationLogsServicesAwsLogsService:getIntegrationLogsServicesAwsLogsService": {
            "properties": {
                "id": {
                    "type": "string",
                    "description": "The ID of this resource.\n"
                },
                "label": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "id",
                "label"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "datadog:index/ChildOrganizationApiKey:ChildOrganizationApiKey": {
            "properties": {
                "key": {
                    "type": "string",
                    "secret": true
                },
                "name": {
                    "type": "string",
                    "description": "Name for Child Organization after creation.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "key",
                        "name"
                    ]
                }
            }
        },
        "datadog:index/ChildOrganizationApplicationKey:ChildOrganizationApplicationKey": {
            "properties": {
                "hash": {
                    "type": "string",
                    "secret": true
                },
                "name": {
                    "type": "string",
                    "description": "Name for Child Organization after creation.\n"
                },
                "owner": {
                    "type": "string"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "hash",
                        "name",
                        "owner"
                    ]
                }
            }
        },
        "datadog:index/ChildOrganizationSetting:ChildOrganizationSetting": {
            "properties": {
                "privateWidgetShare": {
                    "type": "boolean"
                },
                "samlAutocreateAccessRole": {
                    "type": "string"
                },
                "samlAutocreateUsersDomains": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/ChildOrganizationSettingSamlAutocreateUsersDomain:ChildOrganizationSettingSamlAutocreateUsersDomain"
                    }
                },
                "samlCanBeEnabled": {
                    "type": "boolean"
                },
                "samlIdpEndpoint": {
                    "type": "string"
                },
                "samlIdpInitiatedLogins": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/ChildOrganizationSettingSamlIdpInitiatedLogin:ChildOrganizationSettingSamlIdpInitiatedLogin"
                    }
                },
                "samlIdpMetadataUploaded": {
                    "type": "boolean"
                },
                "samlLoginUrl": {
                    "type": "string"
                },
                "samlStrictModes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/ChildOrganizationSettingSamlStrictMode:ChildOrganizationSettingSamlStrictMode"
                    }
                },
                "samls": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/ChildOrganizationSettingSaml:ChildOrganizationSettingSaml"
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "privateWidgetShare",
                        "samlAutocreateAccessRole",
                        "samlAutocreateUsersDomains",
                        "samlCanBeEnabled",
                        "samlIdpEndpoint",
                        "samlIdpInitiatedLogins",
                        "samlIdpMetadataUploaded",
                        "samlLoginUrl",
                        "samlStrictModes",
                        "samls"
                    ]
                }
            }
        },
        "datadog:index/ChildOrganizationSettingSaml:ChildOrganizationSettingSaml": {
            "properties": {
                "enabled": {
                    "type": "boolean"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "enabled"
                    ]
                }
            }
        },
        "datadog:index/ChildOrganizationSettingSamlAutocreateUsersDomain:ChildOrganizationSettingSamlAutocreateUsersDomain": {
            "properties": {
                "domains": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "enabled": {
                    "type": "boolean"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "domains",
                        "enabled"
                    ]
                }
            }
        },
        "datadog:index/ChildOrganizationSettingSamlIdpInitiatedLogin:ChildOrganizationSettingSamlIdpInitiatedLogin": {
            "properties": {
                "enabled": {
                    "type": "boolean"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "enabled"
                    ]
                }
            }
        },
        "datadog:index/ChildOrganizationSettingSamlStrictMode:ChildOrganizationSettingSamlStrictMode": {
            "properties": {
                "enabled": {
                    "type": "boolean"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "enabled"
                    ]
                }
            }
        },
        "datadog:index/ChildOrganizationUser:ChildOrganizationUser": {
            "properties": {
                "accessRole": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "description": "Name for Child Organization after creation.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "accessRole",
                        "email",
                        "name"
                    ]
                }
            }
        },
        "datadog:index/DashboardListDashItem:DashboardListDashItem": {
            "properties": {
                "dashId": {
                    "type": "string",
                    "description": "The ID of the dashboard to add\n"
                },
                "type": {
                    "type": "string",
                    "description": "The type of this dashboard. Valid values are `custom_timeboard`, `custom_screenboard`, `integration_screenboard`, `integration_timeboard`, `host_timeboard`.\n"
                }
            },
            "type": "object",
            "required": [
                "dashId",
                "type"
            ]
        },
        "datadog:index/DashboardTemplateVariable:DashboardTemplateVariable": {
            "properties": {
                "availableValues": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The list of values that the template variable drop-down is be limited to\n"
                },
                "default": {
                    "type": "string",
                    "description": "The default value for the template variable on dashboard load. Cannot be used in conjunction with `defaults`. **Deprecated.** Use `defaults` instead.\n",
                    "deprecationMessage": "Use `defaults` instead."
                },
                "defaults": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "One or many default values for template variables on load. If more than one default is specified, they will be unioned together with `OR`. Cannot be used in conjunction with `default`.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the variable.\n"
                },
                "prefix": {
                    "type": "string",
                    "description": "The tag prefix associated with the variable. Only tags with this prefix appear in the variable dropdown.\n"
                }
            },
            "type": "object",
            "required": [
                "name"
            ]
        },
        "datadog:index/DashboardTemplateVariablePreset:DashboardTemplateVariablePreset": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "The name of the preset.\n"
                },
                "templateVariables": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardTemplateVariablePresetTemplateVariable:DashboardTemplateVariablePresetTemplateVariable"
                    },
                    "description": "The template variable names and assumed values under the given preset\n"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardTemplateVariablePresetTemplateVariable:DashboardTemplateVariablePresetTemplateVariable": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "The name of the variable.\n"
                },
                "value": {
                    "type": "string",
                    "deprecationMessage": "Use `values` instead."
                },
                "values": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidget:DashboardWidget": {
            "properties": {
                "alertGraphDefinition": {
                    "$ref": "#/types/datadog:index/DashboardWidgetAlertGraphDefinition:DashboardWidgetAlertGraphDefinition",
                    "description": "The definition for a Alert Graph widget.\n"
                },
                "alertValueDefinition": {
                    "$ref": "#/types/datadog:index/DashboardWidgetAlertValueDefinition:DashboardWidgetAlertValueDefinition",
                    "description": "The definition for a Alert Value widget.\n"
                },
                "changeDefinition": {
                    "$ref": "#/types/datadog:index/DashboardWidgetChangeDefinition:DashboardWidgetChangeDefinition",
                    "description": "The definition for a Change widget.\n"
                },
                "checkStatusDefinition": {
                    "$ref": "#/types/datadog:index/DashboardWidgetCheckStatusDefinition:DashboardWidgetCheckStatusDefinition",
                    "description": "The definition for a Check Status widget.\n"
                },
                "distributionDefinition": {
                    "$ref": "#/types/datadog:index/DashboardWidgetDistributionDefinition:DashboardWidgetDistributionDefinition",
                    "description": "The definition for a Distribution widget.\n"
                },
                "eventStreamDefinition": {
                    "$ref": "#/types/datadog:index/DashboardWidgetEventStreamDefinition:DashboardWidgetEventStreamDefinition",
                    "description": "The definition for a Event Stream widget.\n"
                },
                "eventTimelineDefinition": {
                    "$ref": "#/types/datadog:index/DashboardWidgetEventTimelineDefinition:DashboardWidgetEventTimelineDefinition",
                    "description": "The definition for a Event Timeline widget.\n"
                },
                "freeTextDefinition": {
                    "$ref": "#/types/datadog:index/DashboardWidgetFreeTextDefinition:DashboardWidgetFreeTextDefinition",
                    "description": "The definition for a Free Text widget.\n"
                },
                "geomapDefinition": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGeomapDefinition:DashboardWidgetGeomapDefinition",
                    "description": "The definition for a Geomap widget.\n"
                },
                "groupDefinition": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinition:DashboardWidgetGroupDefinition",
                    "description": "The definition for a Group widget.\n"
                },
                "heatmapDefinition": {
                    "$ref": "#/types/datadog:index/DashboardWidgetHeatmapDefinition:DashboardWidgetHeatmapDefinition",
                    "description": "The definition for a Heatmap widget.\n"
                },
                "hostmapDefinition": {
                    "$ref": "#/types/datadog:index/DashboardWidgetHostmapDefinition:DashboardWidgetHostmapDefinition",
                    "description": "The definition for a Hostmap widget.\n"
                },
                "id": {
                    "type": "integer",
                    "description": "The ID of the widget.\n"
                },
                "iframeDefinition": {
                    "$ref": "#/types/datadog:index/DashboardWidgetIframeDefinition:DashboardWidgetIframeDefinition",
                    "description": "The definition for an Iframe widget.\n"
                },
                "imageDefinition": {
                    "$ref": "#/types/datadog:index/DashboardWidgetImageDefinition:DashboardWidgetImageDefinition",
                    "description": "The definition for an Image widget\n"
                },
                "listStreamDefinition": {
                    "$ref": "#/types/datadog:index/DashboardWidgetListStreamDefinition:DashboardWidgetListStreamDefinition",
                    "description": "The definition for a List Stream widget.\n"
                },
                "logStreamDefinition": {
                    "$ref": "#/types/datadog:index/DashboardWidgetLogStreamDefinition:DashboardWidgetLogStreamDefinition",
                    "description": "The definition for an Log Stream widget.\n"
                },
                "manageStatusDefinition": {
                    "$ref": "#/types/datadog:index/DashboardWidgetManageStatusDefinition:DashboardWidgetManageStatusDefinition",
                    "description": "The definition for an Manage Status widget.\n"
                },
                "noteDefinition": {
                    "$ref": "#/types/datadog:index/DashboardWidgetNoteDefinition:DashboardWidgetNoteDefinition",
                    "description": "The definition for a Note widget.\n"
                },
                "queryTableDefinition": {
                    "$ref": "#/types/datadog:index/DashboardWidgetQueryTableDefinition:DashboardWidgetQueryTableDefinition",
                    "description": "The definition for a Query Table widget.\n"
                },
                "queryValueDefinition": {
                    "$ref": "#/types/datadog:index/DashboardWidgetQueryValueDefinition:DashboardWidgetQueryValueDefinition",
                    "description": "The definition for a Query Value widget.\n"
                },
                "runWorkflowDefinition": {
                    "$ref": "#/types/datadog:index/DashboardWidgetRunWorkflowDefinition:DashboardWidgetRunWorkflowDefinition",
                    "description": "The definition for a Run Workflow widget.\n"
                },
                "scatterplotDefinition": {
                    "$ref": "#/types/datadog:index/DashboardWidgetScatterplotDefinition:DashboardWidgetScatterplotDefinition",
                    "description": "The definition for a Scatterplot widget.\n"
                },
                "serviceLevelObjectiveDefinition": {
                    "$ref": "#/types/datadog:index/DashboardWidgetServiceLevelObjectiveDefinition:DashboardWidgetServiceLevelObjectiveDefinition",
                    "description": "The definition for a Service Level Objective widget.\n"
                },
                "servicemapDefinition": {
                    "$ref": "#/types/datadog:index/DashboardWidgetServicemapDefinition:DashboardWidgetServicemapDefinition",
                    "description": "The definition for a Service Map widget.\n"
                },
                "sloListDefinition": {
                    "$ref": "#/types/datadog:index/DashboardWidgetSloListDefinition:DashboardWidgetSloListDefinition",
                    "description": "The definition for an SLO (Service Level Objective) List widget.\n"
                },
                "sunburstDefinition": {
                    "$ref": "#/types/datadog:index/DashboardWidgetSunburstDefinition:DashboardWidgetSunburstDefinition",
                    "description": "The definition for a Sunburst widget.\n"
                },
                "timeseriesDefinition": {
                    "$ref": "#/types/datadog:index/DashboardWidgetTimeseriesDefinition:DashboardWidgetTimeseriesDefinition",
                    "description": "The definition for a Timeseries widget.\n"
                },
                "toplistDefinition": {
                    "$ref": "#/types/datadog:index/DashboardWidgetToplistDefinition:DashboardWidgetToplistDefinition",
                    "description": "The definition for a Toplist widget.\n"
                },
                "topologyMapDefinition": {
                    "$ref": "#/types/datadog:index/DashboardWidgetTopologyMapDefinition:DashboardWidgetTopologyMapDefinition",
                    "description": "The definition for a Topology Map widget.\n"
                },
                "traceServiceDefinition": {
                    "$ref": "#/types/datadog:index/DashboardWidgetTraceServiceDefinition:DashboardWidgetTraceServiceDefinition",
                    "description": "The definition for a Trace Service widget.\n"
                },
                "treemapDefinition": {
                    "$ref": "#/types/datadog:index/DashboardWidgetTreemapDefinition:DashboardWidgetTreemapDefinition",
                    "description": "The definition for a Treemap widget.\n"
                },
                "widgetLayout": {
                    "$ref": "#/types/datadog:index/DashboardWidgetWidgetLayout:DashboardWidgetWidgetLayout",
                    "description": "The layout of the widget on a 'free' dashboard.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "id"
                    ]
                }
            }
        },
        "datadog:index/DashboardWidgetAlertGraphDefinition:DashboardWidgetAlertGraphDefinition": {
            "properties": {
                "alertId": {
                    "type": "string"
                },
                "liveSpan": {
                    "type": "string"
                },
                "title": {
                    "type": "string",
                    "description": "The title of the dashboard.\n"
                },
                "titleAlign": {
                    "type": "string"
                },
                "titleSize": {
                    "type": "string"
                },
                "vizType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "alertId",
                "vizType"
            ]
        },
        "datadog:index/DashboardWidgetAlertValueDefinition:DashboardWidgetAlertValueDefinition": {
            "properties": {
                "alertId": {
                    "type": "string"
                },
                "precision": {
                    "type": "integer"
                },
                "textAlign": {
                    "type": "string"
                },
                "title": {
                    "type": "string",
                    "description": "The title of the dashboard.\n"
                },
                "titleAlign": {
                    "type": "string"
                },
                "titleSize": {
                    "type": "string"
                },
                "unit": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "alertId"
            ]
        },
        "datadog:index/DashboardWidgetChangeDefinition:DashboardWidgetChangeDefinition": {
            "properties": {
                "customLinks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetChangeDefinitionCustomLink:DashboardWidgetChangeDefinitionCustomLink"
                    }
                },
                "liveSpan": {
                    "type": "string"
                },
                "requests": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetChangeDefinitionRequest:DashboardWidgetChangeDefinitionRequest"
                    }
                },
                "title": {
                    "type": "string",
                    "description": "The title of the dashboard.\n"
                },
                "titleAlign": {
                    "type": "string"
                },
                "titleSize": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetChangeDefinitionCustomLink:DashboardWidgetChangeDefinitionCustomLink": {
            "properties": {
                "isHidden": {
                    "type": "boolean"
                },
                "label": {
                    "type": "string"
                },
                "link": {
                    "type": "string"
                },
                "overrideLabel": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetChangeDefinitionRequest:DashboardWidgetChangeDefinitionRequest": {
            "properties": {
                "apmQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetChangeDefinitionRequestApmQuery:DashboardWidgetChangeDefinitionRequestApmQuery"
                },
                "changeType": {
                    "type": "string"
                },
                "compareTo": {
                    "type": "string"
                },
                "formulas": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetChangeDefinitionRequestFormula:DashboardWidgetChangeDefinitionRequestFormula"
                    }
                },
                "increaseGood": {
                    "type": "boolean"
                },
                "logQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetChangeDefinitionRequestLogQuery:DashboardWidgetChangeDefinitionRequestLogQuery"
                },
                "orderBy": {
                    "type": "string"
                },
                "orderDir": {
                    "type": "string"
                },
                "processQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetChangeDefinitionRequestProcessQuery:DashboardWidgetChangeDefinitionRequestProcessQuery"
                },
                "q": {
                    "type": "string"
                },
                "queries": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetChangeDefinitionRequestQuery:DashboardWidgetChangeDefinitionRequestQuery"
                    }
                },
                "rumQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetChangeDefinitionRequestRumQuery:DashboardWidgetChangeDefinitionRequestRumQuery"
                },
                "securityQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetChangeDefinitionRequestSecurityQuery:DashboardWidgetChangeDefinitionRequestSecurityQuery"
                },
                "showPresent": {
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetChangeDefinitionRequestApmQuery:DashboardWidgetChangeDefinitionRequestApmQuery": {
            "properties": {
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetChangeDefinitionRequestApmQueryComputeQuery:DashboardWidgetChangeDefinitionRequestApmQueryComputeQuery"
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetChangeDefinitionRequestApmQueryGroupBy:DashboardWidgetChangeDefinitionRequestApmQueryGroupBy"
                    }
                },
                "index": {
                    "type": "string"
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetChangeDefinitionRequestApmQueryMultiCompute:DashboardWidgetChangeDefinitionRequestApmQueryMultiCompute"
                    }
                },
                "searchQuery": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetChangeDefinitionRequestApmQueryComputeQuery:DashboardWidgetChangeDefinitionRequestApmQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "interval": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetChangeDefinitionRequestApmQueryGroupBy:DashboardWidgetChangeDefinitionRequestApmQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string"
                },
                "limit": {
                    "type": "integer"
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetChangeDefinitionRequestApmQueryGroupBySortQuery:DashboardWidgetChangeDefinitionRequestApmQueryGroupBySortQuery"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetChangeDefinitionRequestApmQueryGroupBySortQuery:DashboardWidgetChangeDefinitionRequestApmQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "order": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetChangeDefinitionRequestApmQueryMultiCompute:DashboardWidgetChangeDefinitionRequestApmQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "interval": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetChangeDefinitionRequestFormula:DashboardWidgetChangeDefinitionRequestFormula": {
            "properties": {
                "alias": {
                    "type": "string"
                },
                "cellDisplayMode": {
                    "type": "string"
                },
                "conditionalFormats": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetChangeDefinitionRequestFormulaConditionalFormat:DashboardWidgetChangeDefinitionRequestFormulaConditionalFormat"
                    }
                },
                "formulaExpression": {
                    "type": "string"
                },
                "limit": {
                    "$ref": "#/types/datadog:index/DashboardWidgetChangeDefinitionRequestFormulaLimit:DashboardWidgetChangeDefinitionRequestFormulaLimit"
                },
                "style": {
                    "$ref": "#/types/datadog:index/DashboardWidgetChangeDefinitionRequestFormulaStyle:DashboardWidgetChangeDefinitionRequestFormulaStyle"
                }
            },
            "type": "object",
            "required": [
                "formulaExpression"
            ]
        },
        "datadog:index/DashboardWidgetChangeDefinitionRequestFormulaConditionalFormat:DashboardWidgetChangeDefinitionRequestFormulaConditionalFormat": {
            "properties": {
                "comparator": {
                    "type": "string"
                },
                "customBgColor": {
                    "type": "string"
                },
                "customFgColor": {
                    "type": "string"
                },
                "hideValue": {
                    "type": "boolean"
                },
                "imageUrl": {
                    "type": "string"
                },
                "metric": {
                    "type": "string"
                },
                "palette": {
                    "type": "string"
                },
                "timeframe": {
                    "type": "string"
                },
                "value": {
                    "type": "number"
                }
            },
            "type": "object",
            "required": [
                "comparator",
                "palette",
                "value"
            ]
        },
        "datadog:index/DashboardWidgetChangeDefinitionRequestFormulaLimit:DashboardWidgetChangeDefinitionRequestFormulaLimit": {
            "properties": {
                "count": {
                    "type": "integer"
                },
                "order": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetChangeDefinitionRequestFormulaStyle:DashboardWidgetChangeDefinitionRequestFormulaStyle": {
            "properties": {
                "palette": {
                    "type": "string"
                },
                "paletteIndex": {
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetChangeDefinitionRequestLogQuery:DashboardWidgetChangeDefinitionRequestLogQuery": {
            "properties": {
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetChangeDefinitionRequestLogQueryComputeQuery:DashboardWidgetChangeDefinitionRequestLogQueryComputeQuery"
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetChangeDefinitionRequestLogQueryGroupBy:DashboardWidgetChangeDefinitionRequestLogQueryGroupBy"
                    }
                },
                "index": {
                    "type": "string"
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetChangeDefinitionRequestLogQueryMultiCompute:DashboardWidgetChangeDefinitionRequestLogQueryMultiCompute"
                    }
                },
                "searchQuery": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetChangeDefinitionRequestLogQueryComputeQuery:DashboardWidgetChangeDefinitionRequestLogQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "interval": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetChangeDefinitionRequestLogQueryGroupBy:DashboardWidgetChangeDefinitionRequestLogQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string"
                },
                "limit": {
                    "type": "integer"
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetChangeDefinitionRequestLogQueryGroupBySortQuery:DashboardWidgetChangeDefinitionRequestLogQueryGroupBySortQuery"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetChangeDefinitionRequestLogQueryGroupBySortQuery:DashboardWidgetChangeDefinitionRequestLogQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "order": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetChangeDefinitionRequestLogQueryMultiCompute:DashboardWidgetChangeDefinitionRequestLogQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "interval": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetChangeDefinitionRequestProcessQuery:DashboardWidgetChangeDefinitionRequestProcessQuery": {
            "properties": {
                "filterBies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "limit": {
                    "type": "integer"
                },
                "metric": {
                    "type": "string"
                },
                "searchBy": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "metric"
            ]
        },
        "datadog:index/DashboardWidgetChangeDefinitionRequestQuery:DashboardWidgetChangeDefinitionRequestQuery": {
            "properties": {
                "apmDependencyStatsQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetChangeDefinitionRequestQueryApmDependencyStatsQuery:DashboardWidgetChangeDefinitionRequestQueryApmDependencyStatsQuery"
                },
                "apmResourceStatsQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetChangeDefinitionRequestQueryApmResourceStatsQuery:DashboardWidgetChangeDefinitionRequestQueryApmResourceStatsQuery"
                },
                "eventQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetChangeDefinitionRequestQueryEventQuery:DashboardWidgetChangeDefinitionRequestQueryEventQuery"
                },
                "metricQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetChangeDefinitionRequestQueryMetricQuery:DashboardWidgetChangeDefinitionRequestQueryMetricQuery"
                },
                "processQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetChangeDefinitionRequestQueryProcessQuery:DashboardWidgetChangeDefinitionRequestQueryProcessQuery"
                },
                "sloQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetChangeDefinitionRequestQuerySloQuery:DashboardWidgetChangeDefinitionRequestQuerySloQuery"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetChangeDefinitionRequestQueryApmDependencyStatsQuery:DashboardWidgetChangeDefinitionRequestQueryApmDependencyStatsQuery": {
            "properties": {
                "dataSource": {
                    "type": "string"
                },
                "env": {
                    "type": "string"
                },
                "isUpstream": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "operationName": {
                    "type": "string"
                },
                "primaryTagName": {
                    "type": "string"
                },
                "primaryTagValue": {
                    "type": "string"
                },
                "resourceName": {
                    "type": "string"
                },
                "service": {
                    "type": "string"
                },
                "stat": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "dataSource",
                "env",
                "name",
                "operationName",
                "resourceName",
                "service",
                "stat"
            ]
        },
        "datadog:index/DashboardWidgetChangeDefinitionRequestQueryApmResourceStatsQuery:DashboardWidgetChangeDefinitionRequestQueryApmResourceStatsQuery": {
            "properties": {
                "dataSource": {
                    "type": "string"
                },
                "env": {
                    "type": "string"
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "name": {
                    "type": "string"
                },
                "operationName": {
                    "type": "string"
                },
                "primaryTagName": {
                    "type": "string"
                },
                "primaryTagValue": {
                    "type": "string"
                },
                "resourceName": {
                    "type": "string"
                },
                "service": {
                    "type": "string"
                },
                "stat": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "dataSource",
                "env",
                "name",
                "service",
                "stat"
            ]
        },
        "datadog:index/DashboardWidgetChangeDefinitionRequestQueryEventQuery:DashboardWidgetChangeDefinitionRequestQueryEventQuery": {
            "properties": {
                "computes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetChangeDefinitionRequestQueryEventQueryCompute:DashboardWidgetChangeDefinitionRequestQueryEventQueryCompute"
                    }
                },
                "dataSource": {
                    "type": "string"
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetChangeDefinitionRequestQueryEventQueryGroupBy:DashboardWidgetChangeDefinitionRequestQueryEventQueryGroupBy"
                    }
                },
                "indexes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "name": {
                    "type": "string"
                },
                "search": {
                    "$ref": "#/types/datadog:index/DashboardWidgetChangeDefinitionRequestQueryEventQuerySearch:DashboardWidgetChangeDefinitionRequestQueryEventQuerySearch"
                },
                "storage": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "computes",
                "dataSource",
                "name"
            ]
        },
        "datadog:index/DashboardWidgetChangeDefinitionRequestQueryEventQueryCompute:DashboardWidgetChangeDefinitionRequestQueryEventQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "interval": {
                    "type": "integer"
                },
                "metric": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetChangeDefinitionRequestQueryEventQueryGroupBy:DashboardWidgetChangeDefinitionRequestQueryEventQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string"
                },
                "limit": {
                    "type": "integer"
                },
                "sort": {
                    "$ref": "#/types/datadog:index/DashboardWidgetChangeDefinitionRequestQueryEventQueryGroupBySort:DashboardWidgetChangeDefinitionRequestQueryEventQueryGroupBySort"
                }
            },
            "type": "object",
            "required": [
                "facet"
            ]
        },
        "datadog:index/DashboardWidgetChangeDefinitionRequestQueryEventQueryGroupBySort:DashboardWidgetChangeDefinitionRequestQueryEventQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "metric": {
                    "type": "string"
                },
                "order": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetChangeDefinitionRequestQueryEventQuerySearch:DashboardWidgetChangeDefinitionRequestQueryEventQuerySearch": {
            "properties": {
                "query": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/DashboardWidgetChangeDefinitionRequestQueryMetricQuery:DashboardWidgetChangeDefinitionRequestQueryMetricQuery": {
            "properties": {
                "aggregator": {
                    "type": "string"
                },
                "dataSource": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "query": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "name",
                "query"
            ]
        },
        "datadog:index/DashboardWidgetChangeDefinitionRequestQueryProcessQuery:DashboardWidgetChangeDefinitionRequestQueryProcessQuery": {
            "properties": {
                "aggregator": {
                    "type": "string"
                },
                "dataSource": {
                    "type": "string"
                },
                "isNormalizedCpu": {
                    "type": "boolean"
                },
                "limit": {
                    "type": "integer"
                },
                "metric": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "sort": {
                    "type": "string"
                },
                "tagFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "textFilter": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "dataSource",
                "metric",
                "name"
            ]
        },
        "datadog:index/DashboardWidgetChangeDefinitionRequestQuerySloQuery:DashboardWidgetChangeDefinitionRequestQuerySloQuery": {
            "properties": {
                "dataSource": {
                    "type": "string"
                },
                "groupMode": {
                    "type": "string"
                },
                "measure": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "sloId": {
                    "type": "string"
                },
                "sloQueryType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "dataSource",
                "measure",
                "sloId"
            ]
        },
        "datadog:index/DashboardWidgetChangeDefinitionRequestRumQuery:DashboardWidgetChangeDefinitionRequestRumQuery": {
            "properties": {
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetChangeDefinitionRequestRumQueryComputeQuery:DashboardWidgetChangeDefinitionRequestRumQueryComputeQuery"
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetChangeDefinitionRequestRumQueryGroupBy:DashboardWidgetChangeDefinitionRequestRumQueryGroupBy"
                    }
                },
                "index": {
                    "type": "string"
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetChangeDefinitionRequestRumQueryMultiCompute:DashboardWidgetChangeDefinitionRequestRumQueryMultiCompute"
                    }
                },
                "searchQuery": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetChangeDefinitionRequestRumQueryComputeQuery:DashboardWidgetChangeDefinitionRequestRumQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "interval": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetChangeDefinitionRequestRumQueryGroupBy:DashboardWidgetChangeDefinitionRequestRumQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string"
                },
                "limit": {
                    "type": "integer"
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetChangeDefinitionRequestRumQueryGroupBySortQuery:DashboardWidgetChangeDefinitionRequestRumQueryGroupBySortQuery"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetChangeDefinitionRequestRumQueryGroupBySortQuery:DashboardWidgetChangeDefinitionRequestRumQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "order": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetChangeDefinitionRequestRumQueryMultiCompute:DashboardWidgetChangeDefinitionRequestRumQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "interval": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetChangeDefinitionRequestSecurityQuery:DashboardWidgetChangeDefinitionRequestSecurityQuery": {
            "properties": {
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetChangeDefinitionRequestSecurityQueryComputeQuery:DashboardWidgetChangeDefinitionRequestSecurityQueryComputeQuery"
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetChangeDefinitionRequestSecurityQueryGroupBy:DashboardWidgetChangeDefinitionRequestSecurityQueryGroupBy"
                    }
                },
                "index": {
                    "type": "string"
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetChangeDefinitionRequestSecurityQueryMultiCompute:DashboardWidgetChangeDefinitionRequestSecurityQueryMultiCompute"
                    }
                },
                "searchQuery": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetChangeDefinitionRequestSecurityQueryComputeQuery:DashboardWidgetChangeDefinitionRequestSecurityQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "interval": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetChangeDefinitionRequestSecurityQueryGroupBy:DashboardWidgetChangeDefinitionRequestSecurityQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string"
                },
                "limit": {
                    "type": "integer"
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetChangeDefinitionRequestSecurityQueryGroupBySortQuery:DashboardWidgetChangeDefinitionRequestSecurityQueryGroupBySortQuery"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetChangeDefinitionRequestSecurityQueryGroupBySortQuery:DashboardWidgetChangeDefinitionRequestSecurityQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "order": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetChangeDefinitionRequestSecurityQueryMultiCompute:DashboardWidgetChangeDefinitionRequestSecurityQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "interval": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetCheckStatusDefinition:DashboardWidgetCheckStatusDefinition": {
            "properties": {
                "check": {
                    "type": "string"
                },
                "group": {
                    "type": "string"
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "grouping": {
                    "type": "string"
                },
                "liveSpan": {
                    "type": "string"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tags assigned to the Dashboard. Only team names of the form `team:\u003cname\u003e` are supported.\n"
                },
                "title": {
                    "type": "string",
                    "description": "The title of the dashboard.\n"
                },
                "titleAlign": {
                    "type": "string"
                },
                "titleSize": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "check",
                "grouping"
            ]
        },
        "datadog:index/DashboardWidgetDistributionDefinition:DashboardWidgetDistributionDefinition": {
            "properties": {
                "legendSize": {
                    "type": "string"
                },
                "liveSpan": {
                    "type": "string"
                },
                "requests": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetDistributionDefinitionRequest:DashboardWidgetDistributionDefinitionRequest"
                    }
                },
                "showLegend": {
                    "type": "boolean"
                },
                "title": {
                    "type": "string",
                    "description": "The title of the dashboard.\n"
                },
                "titleAlign": {
                    "type": "string"
                },
                "titleSize": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetDistributionDefinitionRequest:DashboardWidgetDistributionDefinitionRequest": {
            "properties": {
                "apmQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetDistributionDefinitionRequestApmQuery:DashboardWidgetDistributionDefinitionRequestApmQuery"
                },
                "apmStatsQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetDistributionDefinitionRequestApmStatsQuery:DashboardWidgetDistributionDefinitionRequestApmStatsQuery"
                },
                "logQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetDistributionDefinitionRequestLogQuery:DashboardWidgetDistributionDefinitionRequestLogQuery"
                },
                "processQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetDistributionDefinitionRequestProcessQuery:DashboardWidgetDistributionDefinitionRequestProcessQuery"
                },
                "q": {
                    "type": "string"
                },
                "rumQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetDistributionDefinitionRequestRumQuery:DashboardWidgetDistributionDefinitionRequestRumQuery"
                },
                "securityQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetDistributionDefinitionRequestSecurityQuery:DashboardWidgetDistributionDefinitionRequestSecurityQuery"
                },
                "style": {
                    "$ref": "#/types/datadog:index/DashboardWidgetDistributionDefinitionRequestStyle:DashboardWidgetDistributionDefinitionRequestStyle"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetDistributionDefinitionRequestApmQuery:DashboardWidgetDistributionDefinitionRequestApmQuery": {
            "properties": {
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetDistributionDefinitionRequestApmQueryComputeQuery:DashboardWidgetDistributionDefinitionRequestApmQueryComputeQuery"
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetDistributionDefinitionRequestApmQueryGroupBy:DashboardWidgetDistributionDefinitionRequestApmQueryGroupBy"
                    }
                },
                "index": {
                    "type": "string"
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetDistributionDefinitionRequestApmQueryMultiCompute:DashboardWidgetDistributionDefinitionRequestApmQueryMultiCompute"
                    }
                },
                "searchQuery": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetDistributionDefinitionRequestApmQueryComputeQuery:DashboardWidgetDistributionDefinitionRequestApmQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "interval": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetDistributionDefinitionRequestApmQueryGroupBy:DashboardWidgetDistributionDefinitionRequestApmQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string"
                },
                "limit": {
                    "type": "integer"
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetDistributionDefinitionRequestApmQueryGroupBySortQuery:DashboardWidgetDistributionDefinitionRequestApmQueryGroupBySortQuery"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetDistributionDefinitionRequestApmQueryGroupBySortQuery:DashboardWidgetDistributionDefinitionRequestApmQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "order": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetDistributionDefinitionRequestApmQueryMultiCompute:DashboardWidgetDistributionDefinitionRequestApmQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "interval": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetDistributionDefinitionRequestApmStatsQuery:DashboardWidgetDistributionDefinitionRequestApmStatsQuery": {
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetDistributionDefinitionRequestApmStatsQueryColumn:DashboardWidgetDistributionDefinitionRequestApmStatsQueryColumn"
                    }
                },
                "env": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "primaryTag": {
                    "type": "string"
                },
                "resource": {
                    "type": "string"
                },
                "rowType": {
                    "type": "string"
                },
                "service": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "env",
                "name",
                "primaryTag",
                "rowType",
                "service"
            ]
        },
        "datadog:index/DashboardWidgetDistributionDefinitionRequestApmStatsQueryColumn:DashboardWidgetDistributionDefinitionRequestApmStatsQueryColumn": {
            "properties": {
                "alias": {
                    "type": "string"
                },
                "cellDisplayMode": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "order": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "name"
            ]
        },
        "datadog:index/DashboardWidgetDistributionDefinitionRequestLogQuery:DashboardWidgetDistributionDefinitionRequestLogQuery": {
            "properties": {
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetDistributionDefinitionRequestLogQueryComputeQuery:DashboardWidgetDistributionDefinitionRequestLogQueryComputeQuery"
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetDistributionDefinitionRequestLogQueryGroupBy:DashboardWidgetDistributionDefinitionRequestLogQueryGroupBy"
                    }
                },
                "index": {
                    "type": "string"
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetDistributionDefinitionRequestLogQueryMultiCompute:DashboardWidgetDistributionDefinitionRequestLogQueryMultiCompute"
                    }
                },
                "searchQuery": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetDistributionDefinitionRequestLogQueryComputeQuery:DashboardWidgetDistributionDefinitionRequestLogQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "interval": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetDistributionDefinitionRequestLogQueryGroupBy:DashboardWidgetDistributionDefinitionRequestLogQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string"
                },
                "limit": {
                    "type": "integer"
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetDistributionDefinitionRequestLogQueryGroupBySortQuery:DashboardWidgetDistributionDefinitionRequestLogQueryGroupBySortQuery"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetDistributionDefinitionRequestLogQueryGroupBySortQuery:DashboardWidgetDistributionDefinitionRequestLogQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "order": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetDistributionDefinitionRequestLogQueryMultiCompute:DashboardWidgetDistributionDefinitionRequestLogQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "interval": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetDistributionDefinitionRequestProcessQuery:DashboardWidgetDistributionDefinitionRequestProcessQuery": {
            "properties": {
                "filterBies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "limit": {
                    "type": "integer"
                },
                "metric": {
                    "type": "string"
                },
                "searchBy": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "metric"
            ]
        },
        "datadog:index/DashboardWidgetDistributionDefinitionRequestRumQuery:DashboardWidgetDistributionDefinitionRequestRumQuery": {
            "properties": {
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetDistributionDefinitionRequestRumQueryComputeQuery:DashboardWidgetDistributionDefinitionRequestRumQueryComputeQuery"
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetDistributionDefinitionRequestRumQueryGroupBy:DashboardWidgetDistributionDefinitionRequestRumQueryGroupBy"
                    }
                },
                "index": {
                    "type": "string"
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetDistributionDefinitionRequestRumQueryMultiCompute:DashboardWidgetDistributionDefinitionRequestRumQueryMultiCompute"
                    }
                },
                "searchQuery": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetDistributionDefinitionRequestRumQueryComputeQuery:DashboardWidgetDistributionDefinitionRequestRumQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "interval": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetDistributionDefinitionRequestRumQueryGroupBy:DashboardWidgetDistributionDefinitionRequestRumQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string"
                },
                "limit": {
                    "type": "integer"
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetDistributionDefinitionRequestRumQueryGroupBySortQuery:DashboardWidgetDistributionDefinitionRequestRumQueryGroupBySortQuery"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetDistributionDefinitionRequestRumQueryGroupBySortQuery:DashboardWidgetDistributionDefinitionRequestRumQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "order": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetDistributionDefinitionRequestRumQueryMultiCompute:DashboardWidgetDistributionDefinitionRequestRumQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "interval": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetDistributionDefinitionRequestSecurityQuery:DashboardWidgetDistributionDefinitionRequestSecurityQuery": {
            "properties": {
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetDistributionDefinitionRequestSecurityQueryComputeQuery:DashboardWidgetDistributionDefinitionRequestSecurityQueryComputeQuery"
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetDistributionDefinitionRequestSecurityQueryGroupBy:DashboardWidgetDistributionDefinitionRequestSecurityQueryGroupBy"
                    }
                },
                "index": {
                    "type": "string"
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetDistributionDefinitionRequestSecurityQueryMultiCompute:DashboardWidgetDistributionDefinitionRequestSecurityQueryMultiCompute"
                    }
                },
                "searchQuery": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetDistributionDefinitionRequestSecurityQueryComputeQuery:DashboardWidgetDistributionDefinitionRequestSecurityQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "interval": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetDistributionDefinitionRequestSecurityQueryGroupBy:DashboardWidgetDistributionDefinitionRequestSecurityQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string"
                },
                "limit": {
                    "type": "integer"
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetDistributionDefinitionRequestSecurityQueryGroupBySortQuery:DashboardWidgetDistributionDefinitionRequestSecurityQueryGroupBySortQuery"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetDistributionDefinitionRequestSecurityQueryGroupBySortQuery:DashboardWidgetDistributionDefinitionRequestSecurityQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "order": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetDistributionDefinitionRequestSecurityQueryMultiCompute:DashboardWidgetDistributionDefinitionRequestSecurityQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "interval": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetDistributionDefinitionRequestStyle:DashboardWidgetDistributionDefinitionRequestStyle": {
            "properties": {
                "palette": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetEventStreamDefinition:DashboardWidgetEventStreamDefinition": {
            "properties": {
                "eventSize": {
                    "type": "string"
                },
                "liveSpan": {
                    "type": "string"
                },
                "query": {
                    "type": "string"
                },
                "tagsExecution": {
                    "type": "string"
                },
                "title": {
                    "type": "string",
                    "description": "The title of the dashboard.\n"
                },
                "titleAlign": {
                    "type": "string"
                },
                "titleSize": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/DashboardWidgetEventTimelineDefinition:DashboardWidgetEventTimelineDefinition": {
            "properties": {
                "liveSpan": {
                    "type": "string"
                },
                "query": {
                    "type": "string"
                },
                "tagsExecution": {
                    "type": "string"
                },
                "title": {
                    "type": "string",
                    "description": "The title of the dashboard.\n"
                },
                "titleAlign": {
                    "type": "string"
                },
                "titleSize": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/DashboardWidgetFreeTextDefinition:DashboardWidgetFreeTextDefinition": {
            "properties": {
                "color": {
                    "type": "string"
                },
                "fontSize": {
                    "type": "string"
                },
                "text": {
                    "type": "string"
                },
                "textAlign": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "text"
            ]
        },
        "datadog:index/DashboardWidgetGeomapDefinition:DashboardWidgetGeomapDefinition": {
            "properties": {
                "customLinks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGeomapDefinitionCustomLink:DashboardWidgetGeomapDefinitionCustomLink"
                    }
                },
                "liveSpan": {
                    "type": "string"
                },
                "requests": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGeomapDefinitionRequest:DashboardWidgetGeomapDefinitionRequest"
                    }
                },
                "style": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGeomapDefinitionStyle:DashboardWidgetGeomapDefinitionStyle"
                },
                "title": {
                    "type": "string",
                    "description": "The title of the dashboard.\n"
                },
                "titleAlign": {
                    "type": "string"
                },
                "titleSize": {
                    "type": "string"
                },
                "view": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGeomapDefinitionView:DashboardWidgetGeomapDefinitionView"
                }
            },
            "type": "object",
            "required": [
                "view"
            ]
        },
        "datadog:index/DashboardWidgetGeomapDefinitionCustomLink:DashboardWidgetGeomapDefinitionCustomLink": {
            "properties": {
                "isHidden": {
                    "type": "boolean"
                },
                "label": {
                    "type": "string"
                },
                "link": {
                    "type": "string"
                },
                "overrideLabel": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGeomapDefinitionRequest:DashboardWidgetGeomapDefinitionRequest": {
            "properties": {
                "formulas": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGeomapDefinitionRequestFormula:DashboardWidgetGeomapDefinitionRequestFormula"
                    }
                },
                "logQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGeomapDefinitionRequestLogQuery:DashboardWidgetGeomapDefinitionRequestLogQuery"
                },
                "q": {
                    "type": "string"
                },
                "queries": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGeomapDefinitionRequestQuery:DashboardWidgetGeomapDefinitionRequestQuery"
                    }
                },
                "rumQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGeomapDefinitionRequestRumQuery:DashboardWidgetGeomapDefinitionRequestRumQuery"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGeomapDefinitionRequestFormula:DashboardWidgetGeomapDefinitionRequestFormula": {
            "properties": {
                "alias": {
                    "type": "string"
                },
                "cellDisplayMode": {
                    "type": "string"
                },
                "conditionalFormats": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGeomapDefinitionRequestFormulaConditionalFormat:DashboardWidgetGeomapDefinitionRequestFormulaConditionalFormat"
                    }
                },
                "formulaExpression": {
                    "type": "string"
                },
                "limit": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGeomapDefinitionRequestFormulaLimit:DashboardWidgetGeomapDefinitionRequestFormulaLimit"
                },
                "style": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGeomapDefinitionRequestFormulaStyle:DashboardWidgetGeomapDefinitionRequestFormulaStyle"
                }
            },
            "type": "object",
            "required": [
                "formulaExpression"
            ]
        },
        "datadog:index/DashboardWidgetGeomapDefinitionRequestFormulaConditionalFormat:DashboardWidgetGeomapDefinitionRequestFormulaConditionalFormat": {
            "properties": {
                "comparator": {
                    "type": "string"
                },
                "customBgColor": {
                    "type": "string"
                },
                "customFgColor": {
                    "type": "string"
                },
                "hideValue": {
                    "type": "boolean"
                },
                "imageUrl": {
                    "type": "string"
                },
                "metric": {
                    "type": "string"
                },
                "palette": {
                    "type": "string"
                },
                "timeframe": {
                    "type": "string"
                },
                "value": {
                    "type": "number"
                }
            },
            "type": "object",
            "required": [
                "comparator",
                "palette",
                "value"
            ]
        },
        "datadog:index/DashboardWidgetGeomapDefinitionRequestFormulaLimit:DashboardWidgetGeomapDefinitionRequestFormulaLimit": {
            "properties": {
                "count": {
                    "type": "integer"
                },
                "order": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGeomapDefinitionRequestFormulaStyle:DashboardWidgetGeomapDefinitionRequestFormulaStyle": {
            "properties": {
                "palette": {
                    "type": "string"
                },
                "paletteIndex": {
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGeomapDefinitionRequestLogQuery:DashboardWidgetGeomapDefinitionRequestLogQuery": {
            "properties": {
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGeomapDefinitionRequestLogQueryComputeQuery:DashboardWidgetGeomapDefinitionRequestLogQueryComputeQuery"
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGeomapDefinitionRequestLogQueryGroupBy:DashboardWidgetGeomapDefinitionRequestLogQueryGroupBy"
                    }
                },
                "index": {
                    "type": "string"
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGeomapDefinitionRequestLogQueryMultiCompute:DashboardWidgetGeomapDefinitionRequestLogQueryMultiCompute"
                    }
                },
                "searchQuery": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetGeomapDefinitionRequestLogQueryComputeQuery:DashboardWidgetGeomapDefinitionRequestLogQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "interval": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGeomapDefinitionRequestLogQueryGroupBy:DashboardWidgetGeomapDefinitionRequestLogQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string"
                },
                "limit": {
                    "type": "integer"
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGeomapDefinitionRequestLogQueryGroupBySortQuery:DashboardWidgetGeomapDefinitionRequestLogQueryGroupBySortQuery"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGeomapDefinitionRequestLogQueryGroupBySortQuery:DashboardWidgetGeomapDefinitionRequestLogQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "order": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetGeomapDefinitionRequestLogQueryMultiCompute:DashboardWidgetGeomapDefinitionRequestLogQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "interval": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGeomapDefinitionRequestQuery:DashboardWidgetGeomapDefinitionRequestQuery": {
            "properties": {
                "apmDependencyStatsQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGeomapDefinitionRequestQueryApmDependencyStatsQuery:DashboardWidgetGeomapDefinitionRequestQueryApmDependencyStatsQuery"
                },
                "apmResourceStatsQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGeomapDefinitionRequestQueryApmResourceStatsQuery:DashboardWidgetGeomapDefinitionRequestQueryApmResourceStatsQuery"
                },
                "eventQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGeomapDefinitionRequestQueryEventQuery:DashboardWidgetGeomapDefinitionRequestQueryEventQuery"
                },
                "metricQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGeomapDefinitionRequestQueryMetricQuery:DashboardWidgetGeomapDefinitionRequestQueryMetricQuery"
                },
                "processQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGeomapDefinitionRequestQueryProcessQuery:DashboardWidgetGeomapDefinitionRequestQueryProcessQuery"
                },
                "sloQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGeomapDefinitionRequestQuerySloQuery:DashboardWidgetGeomapDefinitionRequestQuerySloQuery"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGeomapDefinitionRequestQueryApmDependencyStatsQuery:DashboardWidgetGeomapDefinitionRequestQueryApmDependencyStatsQuery": {
            "properties": {
                "dataSource": {
                    "type": "string"
                },
                "env": {
                    "type": "string"
                },
                "isUpstream": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "operationName": {
                    "type": "string"
                },
                "primaryTagName": {
                    "type": "string"
                },
                "primaryTagValue": {
                    "type": "string"
                },
                "resourceName": {
                    "type": "string"
                },
                "service": {
                    "type": "string"
                },
                "stat": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "dataSource",
                "env",
                "name",
                "operationName",
                "resourceName",
                "service",
                "stat"
            ]
        },
        "datadog:index/DashboardWidgetGeomapDefinitionRequestQueryApmResourceStatsQuery:DashboardWidgetGeomapDefinitionRequestQueryApmResourceStatsQuery": {
            "properties": {
                "dataSource": {
                    "type": "string"
                },
                "env": {
                    "type": "string"
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "name": {
                    "type": "string"
                },
                "operationName": {
                    "type": "string"
                },
                "primaryTagName": {
                    "type": "string"
                },
                "primaryTagValue": {
                    "type": "string"
                },
                "resourceName": {
                    "type": "string"
                },
                "service": {
                    "type": "string"
                },
                "stat": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "dataSource",
                "env",
                "name",
                "service",
                "stat"
            ]
        },
        "datadog:index/DashboardWidgetGeomapDefinitionRequestQueryEventQuery:DashboardWidgetGeomapDefinitionRequestQueryEventQuery": {
            "properties": {
                "computes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGeomapDefinitionRequestQueryEventQueryCompute:DashboardWidgetGeomapDefinitionRequestQueryEventQueryCompute"
                    }
                },
                "dataSource": {
                    "type": "string"
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGeomapDefinitionRequestQueryEventQueryGroupBy:DashboardWidgetGeomapDefinitionRequestQueryEventQueryGroupBy"
                    }
                },
                "indexes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "name": {
                    "type": "string"
                },
                "search": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGeomapDefinitionRequestQueryEventQuerySearch:DashboardWidgetGeomapDefinitionRequestQueryEventQuerySearch"
                },
                "storage": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "computes",
                "dataSource",
                "name"
            ]
        },
        "datadog:index/DashboardWidgetGeomapDefinitionRequestQueryEventQueryCompute:DashboardWidgetGeomapDefinitionRequestQueryEventQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "interval": {
                    "type": "integer"
                },
                "metric": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGeomapDefinitionRequestQueryEventQueryGroupBy:DashboardWidgetGeomapDefinitionRequestQueryEventQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string"
                },
                "limit": {
                    "type": "integer"
                },
                "sort": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGeomapDefinitionRequestQueryEventQueryGroupBySort:DashboardWidgetGeomapDefinitionRequestQueryEventQueryGroupBySort"
                }
            },
            "type": "object",
            "required": [
                "facet"
            ]
        },
        "datadog:index/DashboardWidgetGeomapDefinitionRequestQueryEventQueryGroupBySort:DashboardWidgetGeomapDefinitionRequestQueryEventQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "metric": {
                    "type": "string"
                },
                "order": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGeomapDefinitionRequestQueryEventQuerySearch:DashboardWidgetGeomapDefinitionRequestQueryEventQuerySearch": {
            "properties": {
                "query": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/DashboardWidgetGeomapDefinitionRequestQueryMetricQuery:DashboardWidgetGeomapDefinitionRequestQueryMetricQuery": {
            "properties": {
                "aggregator": {
                    "type": "string"
                },
                "dataSource": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "query": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "name",
                "query"
            ]
        },
        "datadog:index/DashboardWidgetGeomapDefinitionRequestQueryProcessQuery:DashboardWidgetGeomapDefinitionRequestQueryProcessQuery": {
            "properties": {
                "aggregator": {
                    "type": "string"
                },
                "dataSource": {
                    "type": "string"
                },
                "isNormalizedCpu": {
                    "type": "boolean"
                },
                "limit": {
                    "type": "integer"
                },
                "metric": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "sort": {
                    "type": "string"
                },
                "tagFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "textFilter": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "dataSource",
                "metric",
                "name"
            ]
        },
        "datadog:index/DashboardWidgetGeomapDefinitionRequestQuerySloQuery:DashboardWidgetGeomapDefinitionRequestQuerySloQuery": {
            "properties": {
                "dataSource": {
                    "type": "string"
                },
                "groupMode": {
                    "type": "string"
                },
                "measure": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "sloId": {
                    "type": "string"
                },
                "sloQueryType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "dataSource",
                "measure",
                "sloId"
            ]
        },
        "datadog:index/DashboardWidgetGeomapDefinitionRequestRumQuery:DashboardWidgetGeomapDefinitionRequestRumQuery": {
            "properties": {
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGeomapDefinitionRequestRumQueryComputeQuery:DashboardWidgetGeomapDefinitionRequestRumQueryComputeQuery"
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGeomapDefinitionRequestRumQueryGroupBy:DashboardWidgetGeomapDefinitionRequestRumQueryGroupBy"
                    }
                },
                "index": {
                    "type": "string"
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGeomapDefinitionRequestRumQueryMultiCompute:DashboardWidgetGeomapDefinitionRequestRumQueryMultiCompute"
                    }
                },
                "searchQuery": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetGeomapDefinitionRequestRumQueryComputeQuery:DashboardWidgetGeomapDefinitionRequestRumQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "interval": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGeomapDefinitionRequestRumQueryGroupBy:DashboardWidgetGeomapDefinitionRequestRumQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string"
                },
                "limit": {
                    "type": "integer"
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGeomapDefinitionRequestRumQueryGroupBySortQuery:DashboardWidgetGeomapDefinitionRequestRumQueryGroupBySortQuery"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGeomapDefinitionRequestRumQueryGroupBySortQuery:DashboardWidgetGeomapDefinitionRequestRumQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "order": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetGeomapDefinitionRequestRumQueryMultiCompute:DashboardWidgetGeomapDefinitionRequestRumQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "interval": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGeomapDefinitionStyle:DashboardWidgetGeomapDefinitionStyle": {
            "properties": {
                "palette": {
                    "type": "string"
                },
                "paletteFlip": {
                    "type": "boolean"
                }
            },
            "type": "object",
            "required": [
                "palette",
                "paletteFlip"
            ]
        },
        "datadog:index/DashboardWidgetGeomapDefinitionView:DashboardWidgetGeomapDefinitionView": {
            "properties": {
                "focus": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "focus"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinition:DashboardWidgetGroupDefinition": {
            "properties": {
                "backgroundColor": {
                    "type": "string"
                },
                "bannerImg": {
                    "type": "string"
                },
                "layoutType": {
                    "type": "string",
                    "description": "The layout type of the dashboard. Valid values are `ordered`, `free`.\n"
                },
                "showTitle": {
                    "type": "boolean"
                },
                "title": {
                    "type": "string",
                    "description": "The title of the dashboard.\n"
                },
                "widgets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidget:DashboardWidgetGroupDefinitionWidget"
                    },
                    "description": "The list of widgets to display on the dashboard.\n"
                }
            },
            "type": "object",
            "required": [
                "layoutType"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidget:DashboardWidgetGroupDefinitionWidget": {
            "properties": {
                "alertGraphDefinition": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetAlertGraphDefinition:DashboardWidgetGroupDefinitionWidgetAlertGraphDefinition",
                    "description": "The definition for a Alert Graph widget.\n"
                },
                "alertValueDefinition": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetAlertValueDefinition:DashboardWidgetGroupDefinitionWidgetAlertValueDefinition",
                    "description": "The definition for a Alert Value widget.\n"
                },
                "changeDefinition": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetChangeDefinition:DashboardWidgetGroupDefinitionWidgetChangeDefinition",
                    "description": "The definition for a Change widget.\n"
                },
                "checkStatusDefinition": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetCheckStatusDefinition:DashboardWidgetGroupDefinitionWidgetCheckStatusDefinition",
                    "description": "The definition for a Check Status widget.\n"
                },
                "distributionDefinition": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetDistributionDefinition:DashboardWidgetGroupDefinitionWidgetDistributionDefinition",
                    "description": "The definition for a Distribution widget.\n"
                },
                "eventStreamDefinition": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetEventStreamDefinition:DashboardWidgetGroupDefinitionWidgetEventStreamDefinition",
                    "description": "The definition for a Event Stream widget.\n"
                },
                "eventTimelineDefinition": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetEventTimelineDefinition:DashboardWidgetGroupDefinitionWidgetEventTimelineDefinition",
                    "description": "The definition for a Event Timeline widget.\n"
                },
                "freeTextDefinition": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetFreeTextDefinition:DashboardWidgetGroupDefinitionWidgetFreeTextDefinition",
                    "description": "The definition for a Free Text widget.\n"
                },
                "geomapDefinition": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetGeomapDefinition:DashboardWidgetGroupDefinitionWidgetGeomapDefinition",
                    "description": "The definition for a Geomap widget.\n"
                },
                "heatmapDefinition": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHeatmapDefinition:DashboardWidgetGroupDefinitionWidgetHeatmapDefinition",
                    "description": "The definition for a Heatmap widget.\n"
                },
                "hostmapDefinition": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinition:DashboardWidgetGroupDefinitionWidgetHostmapDefinition",
                    "description": "The definition for a Hostmap widget.\n"
                },
                "id": {
                    "type": "integer",
                    "description": "The ID of the widget.\n"
                },
                "iframeDefinition": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetIframeDefinition:DashboardWidgetGroupDefinitionWidgetIframeDefinition",
                    "description": "The definition for an Iframe widget.\n"
                },
                "imageDefinition": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetImageDefinition:DashboardWidgetGroupDefinitionWidgetImageDefinition",
                    "description": "The definition for an Image widget\n"
                },
                "listStreamDefinition": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetListStreamDefinition:DashboardWidgetGroupDefinitionWidgetListStreamDefinition",
                    "description": "The definition for a List Stream widget.\n"
                },
                "logStreamDefinition": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetLogStreamDefinition:DashboardWidgetGroupDefinitionWidgetLogStreamDefinition",
                    "description": "The definition for an Log Stream widget.\n"
                },
                "manageStatusDefinition": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetManageStatusDefinition:DashboardWidgetGroupDefinitionWidgetManageStatusDefinition",
                    "description": "The definition for an Manage Status widget.\n"
                },
                "noteDefinition": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetNoteDefinition:DashboardWidgetGroupDefinitionWidgetNoteDefinition",
                    "description": "The definition for a Note widget.\n"
                },
                "queryTableDefinition": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetQueryTableDefinition:DashboardWidgetGroupDefinitionWidgetQueryTableDefinition",
                    "description": "The definition for a Query Table widget.\n"
                },
                "queryValueDefinition": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetQueryValueDefinition:DashboardWidgetGroupDefinitionWidgetQueryValueDefinition",
                    "description": "The definition for a Query Value widget.\n"
                },
                "runWorkflowDefinition": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetRunWorkflowDefinition:DashboardWidgetGroupDefinitionWidgetRunWorkflowDefinition",
                    "description": "The definition for a Run Workflow widget.\n"
                },
                "scatterplotDefinition": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinition:DashboardWidgetGroupDefinitionWidgetScatterplotDefinition",
                    "description": "The definition for a Scatterplot widget.\n"
                },
                "serviceLevelObjectiveDefinition": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetServiceLevelObjectiveDefinition:DashboardWidgetGroupDefinitionWidgetServiceLevelObjectiveDefinition",
                    "description": "The definition for a Service Level Objective widget.\n"
                },
                "servicemapDefinition": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetServicemapDefinition:DashboardWidgetGroupDefinitionWidgetServicemapDefinition",
                    "description": "The definition for a Service Map widget.\n"
                },
                "sloListDefinition": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetSloListDefinition:DashboardWidgetGroupDefinitionWidgetSloListDefinition",
                    "description": "The definition for an SLO (Service Level Objective) List widget.\n"
                },
                "sunburstDefinition": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetSunburstDefinition:DashboardWidgetGroupDefinitionWidgetSunburstDefinition",
                    "description": "The definition for a Sunburst widget.\n"
                },
                "timeseriesDefinition": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinition:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinition",
                    "description": "The definition for a Timeseries widget.\n"
                },
                "toplistDefinition": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetToplistDefinition:DashboardWidgetGroupDefinitionWidgetToplistDefinition",
                    "description": "The definition for a Toplist widget.\n"
                },
                "topologyMapDefinition": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetTopologyMapDefinition:DashboardWidgetGroupDefinitionWidgetTopologyMapDefinition",
                    "description": "The definition for a Topology Map widget.\n"
                },
                "traceServiceDefinition": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetTraceServiceDefinition:DashboardWidgetGroupDefinitionWidgetTraceServiceDefinition",
                    "description": "The definition for a Trace Service widget.\n"
                },
                "treemapDefinition": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetTreemapDefinition:DashboardWidgetGroupDefinitionWidgetTreemapDefinition",
                    "description": "The definition for a Treemap widget.\n"
                },
                "widgetLayout": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetWidgetLayout:DashboardWidgetGroupDefinitionWidgetWidgetLayout",
                    "description": "The layout of the widget on a 'free' dashboard.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "id"
                    ]
                }
            }
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetAlertGraphDefinition:DashboardWidgetGroupDefinitionWidgetAlertGraphDefinition": {
            "properties": {
                "alertId": {
                    "type": "string"
                },
                "liveSpan": {
                    "type": "string"
                },
                "title": {
                    "type": "string",
                    "description": "The title of the dashboard.\n"
                },
                "titleAlign": {
                    "type": "string"
                },
                "titleSize": {
                    "type": "string"
                },
                "vizType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "alertId",
                "vizType"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetAlertValueDefinition:DashboardWidgetGroupDefinitionWidgetAlertValueDefinition": {
            "properties": {
                "alertId": {
                    "type": "string"
                },
                "precision": {
                    "type": "integer"
                },
                "textAlign": {
                    "type": "string"
                },
                "title": {
                    "type": "string",
                    "description": "The title of the dashboard.\n"
                },
                "titleAlign": {
                    "type": "string"
                },
                "titleSize": {
                    "type": "string"
                },
                "unit": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "alertId"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetChangeDefinition:DashboardWidgetGroupDefinitionWidgetChangeDefinition": {
            "properties": {
                "customLinks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetChangeDefinitionCustomLink:DashboardWidgetGroupDefinitionWidgetChangeDefinitionCustomLink"
                    }
                },
                "liveSpan": {
                    "type": "string"
                },
                "requests": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequest:DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequest"
                    }
                },
                "title": {
                    "type": "string",
                    "description": "The title of the dashboard.\n"
                },
                "titleAlign": {
                    "type": "string"
                },
                "titleSize": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetChangeDefinitionCustomLink:DashboardWidgetGroupDefinitionWidgetChangeDefinitionCustomLink": {
            "properties": {
                "isHidden": {
                    "type": "boolean"
                },
                "label": {
                    "type": "string"
                },
                "link": {
                    "type": "string"
                },
                "overrideLabel": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequest:DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequest": {
            "properties": {
                "apmQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestApmQuery:DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestApmQuery"
                },
                "changeType": {
                    "type": "string"
                },
                "compareTo": {
                    "type": "string"
                },
                "formulas": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestFormula:DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestFormula"
                    }
                },
                "increaseGood": {
                    "type": "boolean"
                },
                "logQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestLogQuery:DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestLogQuery"
                },
                "orderBy": {
                    "type": "string"
                },
                "orderDir": {
                    "type": "string"
                },
                "processQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestProcessQuery:DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestProcessQuery"
                },
                "q": {
                    "type": "string"
                },
                "queries": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestQuery:DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestQuery"
                    }
                },
                "rumQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestRumQuery:DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestRumQuery"
                },
                "securityQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestSecurityQuery:DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestSecurityQuery"
                },
                "showPresent": {
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestApmQuery:DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestApmQuery": {
            "properties": {
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestApmQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestApmQueryComputeQuery"
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestApmQueryGroupBy:DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestApmQueryGroupBy"
                    }
                },
                "index": {
                    "type": "string"
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestApmQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestApmQueryMultiCompute"
                    }
                },
                "searchQuery": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestApmQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestApmQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "interval": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestApmQueryGroupBy:DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestApmQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string"
                },
                "limit": {
                    "type": "integer"
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestApmQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestApmQueryGroupBySortQuery"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestApmQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestApmQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "order": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestApmQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestApmQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "interval": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestFormula:DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestFormula": {
            "properties": {
                "alias": {
                    "type": "string"
                },
                "cellDisplayMode": {
                    "type": "string"
                },
                "conditionalFormats": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestFormulaConditionalFormat:DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestFormulaConditionalFormat"
                    }
                },
                "formulaExpression": {
                    "type": "string"
                },
                "limit": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestFormulaLimit:DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestFormulaLimit"
                },
                "style": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestFormulaStyle:DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestFormulaStyle"
                }
            },
            "type": "object",
            "required": [
                "formulaExpression"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestFormulaConditionalFormat:DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestFormulaConditionalFormat": {
            "properties": {
                "comparator": {
                    "type": "string"
                },
                "customBgColor": {
                    "type": "string"
                },
                "customFgColor": {
                    "type": "string"
                },
                "hideValue": {
                    "type": "boolean"
                },
                "imageUrl": {
                    "type": "string"
                },
                "metric": {
                    "type": "string"
                },
                "palette": {
                    "type": "string"
                },
                "timeframe": {
                    "type": "string"
                },
                "value": {
                    "type": "number"
                }
            },
            "type": "object",
            "required": [
                "comparator",
                "palette",
                "value"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestFormulaLimit:DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestFormulaLimit": {
            "properties": {
                "count": {
                    "type": "integer"
                },
                "order": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestFormulaStyle:DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestFormulaStyle": {
            "properties": {
                "palette": {
                    "type": "string"
                },
                "paletteIndex": {
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestLogQuery:DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestLogQuery": {
            "properties": {
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestLogQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestLogQueryComputeQuery"
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestLogQueryGroupBy:DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestLogQueryGroupBy"
                    }
                },
                "index": {
                    "type": "string"
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestLogQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestLogQueryMultiCompute"
                    }
                },
                "searchQuery": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestLogQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestLogQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "interval": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestLogQueryGroupBy:DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestLogQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string"
                },
                "limit": {
                    "type": "integer"
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestLogQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestLogQueryGroupBySortQuery"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestLogQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestLogQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "order": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestLogQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestLogQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "interval": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestProcessQuery:DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestProcessQuery": {
            "properties": {
                "filterBies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "limit": {
                    "type": "integer"
                },
                "metric": {
                    "type": "string"
                },
                "searchBy": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "metric"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestQuery:DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestQuery": {
            "properties": {
                "apmDependencyStatsQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestQueryApmDependencyStatsQuery:DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestQueryApmDependencyStatsQuery"
                },
                "apmResourceStatsQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestQueryApmResourceStatsQuery:DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestQueryApmResourceStatsQuery"
                },
                "eventQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestQueryEventQuery:DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestQueryEventQuery"
                },
                "metricQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestQueryMetricQuery:DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestQueryMetricQuery"
                },
                "processQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestQueryProcessQuery:DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestQueryProcessQuery"
                },
                "sloQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestQuerySloQuery:DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestQuerySloQuery"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestQueryApmDependencyStatsQuery:DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestQueryApmDependencyStatsQuery": {
            "properties": {
                "dataSource": {
                    "type": "string"
                },
                "env": {
                    "type": "string"
                },
                "isUpstream": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "operationName": {
                    "type": "string"
                },
                "primaryTagName": {
                    "type": "string"
                },
                "primaryTagValue": {
                    "type": "string"
                },
                "resourceName": {
                    "type": "string"
                },
                "service": {
                    "type": "string"
                },
                "stat": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "dataSource",
                "env",
                "name",
                "operationName",
                "resourceName",
                "service",
                "stat"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestQueryApmResourceStatsQuery:DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestQueryApmResourceStatsQuery": {
            "properties": {
                "dataSource": {
                    "type": "string"
                },
                "env": {
                    "type": "string"
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "name": {
                    "type": "string"
                },
                "operationName": {
                    "type": "string"
                },
                "primaryTagName": {
                    "type": "string"
                },
                "primaryTagValue": {
                    "type": "string"
                },
                "resourceName": {
                    "type": "string"
                },
                "service": {
                    "type": "string"
                },
                "stat": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "dataSource",
                "env",
                "name",
                "service",
                "stat"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestQueryEventQuery:DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestQueryEventQuery": {
            "properties": {
                "computes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestQueryEventQueryCompute:DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestQueryEventQueryCompute"
                    }
                },
                "dataSource": {
                    "type": "string"
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestQueryEventQueryGroupBy:DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestQueryEventQueryGroupBy"
                    }
                },
                "indexes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "name": {
                    "type": "string"
                },
                "search": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestQueryEventQuerySearch:DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestQueryEventQuerySearch"
                },
                "storage": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "computes",
                "dataSource",
                "name"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestQueryEventQueryCompute:DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestQueryEventQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "interval": {
                    "type": "integer"
                },
                "metric": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestQueryEventQueryGroupBy:DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestQueryEventQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string"
                },
                "limit": {
                    "type": "integer"
                },
                "sort": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestQueryEventQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestQueryEventQueryGroupBySort"
                }
            },
            "type": "object",
            "required": [
                "facet"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestQueryEventQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestQueryEventQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "metric": {
                    "type": "string"
                },
                "order": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestQueryEventQuerySearch:DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestQueryEventQuerySearch": {
            "properties": {
                "query": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestQueryMetricQuery:DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestQueryMetricQuery": {
            "properties": {
                "aggregator": {
                    "type": "string"
                },
                "dataSource": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "query": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "name",
                "query"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestQueryProcessQuery:DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestQueryProcessQuery": {
            "properties": {
                "aggregator": {
                    "type": "string"
                },
                "dataSource": {
                    "type": "string"
                },
                "isNormalizedCpu": {
                    "type": "boolean"
                },
                "limit": {
                    "type": "integer"
                },
                "metric": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "sort": {
                    "type": "string"
                },
                "tagFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "textFilter": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "dataSource",
                "metric",
                "name"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestQuerySloQuery:DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestQuerySloQuery": {
            "properties": {
                "dataSource": {
                    "type": "string"
                },
                "groupMode": {
                    "type": "string"
                },
                "measure": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "sloId": {
                    "type": "string"
                },
                "sloQueryType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "dataSource",
                "measure",
                "sloId"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestRumQuery:DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestRumQuery": {
            "properties": {
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestRumQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestRumQueryComputeQuery"
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestRumQueryGroupBy:DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestRumQueryGroupBy"
                    }
                },
                "index": {
                    "type": "string"
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestRumQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestRumQueryMultiCompute"
                    }
                },
                "searchQuery": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestRumQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestRumQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "interval": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestRumQueryGroupBy:DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestRumQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string"
                },
                "limit": {
                    "type": "integer"
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestRumQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestRumQueryGroupBySortQuery"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestRumQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestRumQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "order": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestRumQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestRumQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "interval": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestSecurityQuery:DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestSecurityQuery": {
            "properties": {
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestSecurityQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestSecurityQueryComputeQuery"
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestSecurityQueryGroupBy:DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestSecurityQueryGroupBy"
                    }
                },
                "index": {
                    "type": "string"
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestSecurityQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestSecurityQueryMultiCompute"
                    }
                },
                "searchQuery": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestSecurityQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestSecurityQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "interval": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestSecurityQueryGroupBy:DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestSecurityQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string"
                },
                "limit": {
                    "type": "integer"
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestSecurityQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestSecurityQueryGroupBySortQuery"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestSecurityQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestSecurityQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "order": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestSecurityQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestSecurityQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "interval": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetCheckStatusDefinition:DashboardWidgetGroupDefinitionWidgetCheckStatusDefinition": {
            "properties": {
                "check": {
                    "type": "string"
                },
                "group": {
                    "type": "string"
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "grouping": {
                    "type": "string"
                },
                "liveSpan": {
                    "type": "string"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tags assigned to the Dashboard. Only team names of the form `team:\u003cname\u003e` are supported.\n"
                },
                "title": {
                    "type": "string",
                    "description": "The title of the dashboard.\n"
                },
                "titleAlign": {
                    "type": "string"
                },
                "titleSize": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "check",
                "grouping"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetDistributionDefinition:DashboardWidgetGroupDefinitionWidgetDistributionDefinition": {
            "properties": {
                "legendSize": {
                    "type": "string"
                },
                "liveSpan": {
                    "type": "string"
                },
                "requests": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequest:DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequest"
                    }
                },
                "showLegend": {
                    "type": "boolean"
                },
                "title": {
                    "type": "string",
                    "description": "The title of the dashboard.\n"
                },
                "titleAlign": {
                    "type": "string"
                },
                "titleSize": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequest:DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequest": {
            "properties": {
                "apmQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestApmQuery:DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestApmQuery"
                },
                "apmStatsQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestApmStatsQuery:DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestApmStatsQuery"
                },
                "logQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestLogQuery:DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestLogQuery"
                },
                "processQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestProcessQuery:DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestProcessQuery"
                },
                "q": {
                    "type": "string"
                },
                "rumQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestRumQuery:DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestRumQuery"
                },
                "securityQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestSecurityQuery:DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestSecurityQuery"
                },
                "style": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestStyle:DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestStyle"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestApmQuery:DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestApmQuery": {
            "properties": {
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestApmQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestApmQueryComputeQuery"
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestApmQueryGroupBy:DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestApmQueryGroupBy"
                    }
                },
                "index": {
                    "type": "string"
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestApmQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestApmQueryMultiCompute"
                    }
                },
                "searchQuery": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestApmQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestApmQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "interval": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestApmQueryGroupBy:DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestApmQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string"
                },
                "limit": {
                    "type": "integer"
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestApmQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestApmQueryGroupBySortQuery"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestApmQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestApmQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "order": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestApmQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestApmQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "interval": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestApmStatsQuery:DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestApmStatsQuery": {
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestApmStatsQueryColumn:DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestApmStatsQueryColumn"
                    }
                },
                "env": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "primaryTag": {
                    "type": "string"
                },
                "resource": {
                    "type": "string"
                },
                "rowType": {
                    "type": "string"
                },
                "service": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "env",
                "name",
                "primaryTag",
                "rowType",
                "service"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestApmStatsQueryColumn:DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestApmStatsQueryColumn": {
            "properties": {
                "alias": {
                    "type": "string"
                },
                "cellDisplayMode": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "order": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "name"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestLogQuery:DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestLogQuery": {
            "properties": {
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestLogQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestLogQueryComputeQuery"
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestLogQueryGroupBy:DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestLogQueryGroupBy"
                    }
                },
                "index": {
                    "type": "string"
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestLogQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestLogQueryMultiCompute"
                    }
                },
                "searchQuery": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestLogQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestLogQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "interval": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestLogQueryGroupBy:DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestLogQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string"
                },
                "limit": {
                    "type": "integer"
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestLogQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestLogQueryGroupBySortQuery"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestLogQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestLogQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "order": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestLogQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestLogQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "interval": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestProcessQuery:DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestProcessQuery": {
            "properties": {
                "filterBies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "limit": {
                    "type": "integer"
                },
                "metric": {
                    "type": "string"
                },
                "searchBy": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "metric"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestRumQuery:DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestRumQuery": {
            "properties": {
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestRumQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestRumQueryComputeQuery"
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestRumQueryGroupBy:DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestRumQueryGroupBy"
                    }
                },
                "index": {
                    "type": "string"
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestRumQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestRumQueryMultiCompute"
                    }
                },
                "searchQuery": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestRumQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestRumQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "interval": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestRumQueryGroupBy:DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestRumQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string"
                },
                "limit": {
                    "type": "integer"
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestRumQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestRumQueryGroupBySortQuery"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestRumQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestRumQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "order": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestRumQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestRumQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "interval": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestSecurityQuery:DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestSecurityQuery": {
            "properties": {
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestSecurityQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestSecurityQueryComputeQuery"
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestSecurityQueryGroupBy:DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestSecurityQueryGroupBy"
                    }
                },
                "index": {
                    "type": "string"
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestSecurityQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestSecurityQueryMultiCompute"
                    }
                },
                "searchQuery": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestSecurityQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestSecurityQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "interval": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestSecurityQueryGroupBy:DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestSecurityQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string"
                },
                "limit": {
                    "type": "integer"
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestSecurityQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestSecurityQueryGroupBySortQuery"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestSecurityQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestSecurityQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "order": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestSecurityQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestSecurityQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "interval": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestStyle:DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestStyle": {
            "properties": {
                "palette": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetEventStreamDefinition:DashboardWidgetGroupDefinitionWidgetEventStreamDefinition": {
            "properties": {
                "eventSize": {
                    "type": "string"
                },
                "liveSpan": {
                    "type": "string"
                },
                "query": {
                    "type": "string"
                },
                "tagsExecution": {
                    "type": "string"
                },
                "title": {
                    "type": "string",
                    "description": "The title of the dashboard.\n"
                },
                "titleAlign": {
                    "type": "string"
                },
                "titleSize": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetEventTimelineDefinition:DashboardWidgetGroupDefinitionWidgetEventTimelineDefinition": {
            "properties": {
                "liveSpan": {
                    "type": "string"
                },
                "query": {
                    "type": "string"
                },
                "tagsExecution": {
                    "type": "string"
                },
                "title": {
                    "type": "string",
                    "description": "The title of the dashboard.\n"
                },
                "titleAlign": {
                    "type": "string"
                },
                "titleSize": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetFreeTextDefinition:DashboardWidgetGroupDefinitionWidgetFreeTextDefinition": {
            "properties": {
                "color": {
                    "type": "string"
                },
                "fontSize": {
                    "type": "string"
                },
                "text": {
                    "type": "string"
                },
                "textAlign": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "text"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetGeomapDefinition:DashboardWidgetGroupDefinitionWidgetGeomapDefinition": {
            "properties": {
                "customLinks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetGeomapDefinitionCustomLink:DashboardWidgetGroupDefinitionWidgetGeomapDefinitionCustomLink"
                    }
                },
                "liveSpan": {
                    "type": "string"
                },
                "requests": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequest:DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequest"
                    }
                },
                "style": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetGeomapDefinitionStyle:DashboardWidgetGroupDefinitionWidgetGeomapDefinitionStyle"
                },
                "title": {
                    "type": "string",
                    "description": "The title of the dashboard.\n"
                },
                "titleAlign": {
                    "type": "string"
                },
                "titleSize": {
                    "type": "string"
                },
                "view": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetGeomapDefinitionView:DashboardWidgetGroupDefinitionWidgetGeomapDefinitionView"
                }
            },
            "type": "object",
            "required": [
                "view"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetGeomapDefinitionCustomLink:DashboardWidgetGroupDefinitionWidgetGeomapDefinitionCustomLink": {
            "properties": {
                "isHidden": {
                    "type": "boolean"
                },
                "label": {
                    "type": "string"
                },
                "link": {
                    "type": "string"
                },
                "overrideLabel": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequest:DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequest": {
            "properties": {
                "formulas": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestFormula:DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestFormula"
                    }
                },
                "logQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestLogQuery:DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestLogQuery"
                },
                "q": {
                    "type": "string"
                },
                "queries": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestQuery:DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestQuery"
                    }
                },
                "rumQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestRumQuery:DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestRumQuery"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestFormula:DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestFormula": {
            "properties": {
                "alias": {
                    "type": "string"
                },
                "cellDisplayMode": {
                    "type": "string"
                },
                "conditionalFormats": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestFormulaConditionalFormat:DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestFormulaConditionalFormat"
                    }
                },
                "formulaExpression": {
                    "type": "string"
                },
                "limit": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestFormulaLimit:DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestFormulaLimit"
                },
                "style": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestFormulaStyle:DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestFormulaStyle"
                }
            },
            "type": "object",
            "required": [
                "formulaExpression"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestFormulaConditionalFormat:DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestFormulaConditionalFormat": {
            "properties": {
                "comparator": {
                    "type": "string"
                },
                "customBgColor": {
                    "type": "string"
                },
                "customFgColor": {
                    "type": "string"
                },
                "hideValue": {
                    "type": "boolean"
                },
                "imageUrl": {
                    "type": "string"
                },
                "metric": {
                    "type": "string"
                },
                "palette": {
                    "type": "string"
                },
                "timeframe": {
                    "type": "string"
                },
                "value": {
                    "type": "number"
                }
            },
            "type": "object",
            "required": [
                "comparator",
                "palette",
                "value"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestFormulaLimit:DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestFormulaLimit": {
            "properties": {
                "count": {
                    "type": "integer"
                },
                "order": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestFormulaStyle:DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestFormulaStyle": {
            "properties": {
                "palette": {
                    "type": "string"
                },
                "paletteIndex": {
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestLogQuery:DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestLogQuery": {
            "properties": {
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestLogQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestLogQueryComputeQuery"
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestLogQueryGroupBy:DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestLogQueryGroupBy"
                    }
                },
                "index": {
                    "type": "string"
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestLogQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestLogQueryMultiCompute"
                    }
                },
                "searchQuery": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestLogQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestLogQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "interval": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestLogQueryGroupBy:DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestLogQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string"
                },
                "limit": {
                    "type": "integer"
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestLogQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestLogQueryGroupBySortQuery"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestLogQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestLogQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "order": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestLogQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestLogQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "interval": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestQuery:DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestQuery": {
            "properties": {
                "apmDependencyStatsQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestQueryApmDependencyStatsQuery:DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestQueryApmDependencyStatsQuery"
                },
                "apmResourceStatsQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestQueryApmResourceStatsQuery:DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestQueryApmResourceStatsQuery"
                },
                "eventQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestQueryEventQuery:DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestQueryEventQuery"
                },
                "metricQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestQueryMetricQuery:DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestQueryMetricQuery"
                },
                "processQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestQueryProcessQuery:DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestQueryProcessQuery"
                },
                "sloQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestQuerySloQuery:DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestQuerySloQuery"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestQueryApmDependencyStatsQuery:DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestQueryApmDependencyStatsQuery": {
            "properties": {
                "dataSource": {
                    "type": "string"
                },
                "env": {
                    "type": "string"
                },
                "isUpstream": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "operationName": {
                    "type": "string"
                },
                "primaryTagName": {
                    "type": "string"
                },
                "primaryTagValue": {
                    "type": "string"
                },
                "resourceName": {
                    "type": "string"
                },
                "service": {
                    "type": "string"
                },
                "stat": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "dataSource",
                "env",
                "name",
                "operationName",
                "resourceName",
                "service",
                "stat"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestQueryApmResourceStatsQuery:DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestQueryApmResourceStatsQuery": {
            "properties": {
                "dataSource": {
                    "type": "string"
                },
                "env": {
                    "type": "string"
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "name": {
                    "type": "string"
                },
                "operationName": {
                    "type": "string"
                },
                "primaryTagName": {
                    "type": "string"
                },
                "primaryTagValue": {
                    "type": "string"
                },
                "resourceName": {
                    "type": "string"
                },
                "service": {
                    "type": "string"
                },
                "stat": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "dataSource",
                "env",
                "name",
                "service",
                "stat"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestQueryEventQuery:DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestQueryEventQuery": {
            "properties": {
                "computes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestQueryEventQueryCompute:DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestQueryEventQueryCompute"
                    }
                },
                "dataSource": {
                    "type": "string"
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestQueryEventQueryGroupBy:DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestQueryEventQueryGroupBy"
                    }
                },
                "indexes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "name": {
                    "type": "string"
                },
                "search": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestQueryEventQuerySearch:DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestQueryEventQuerySearch"
                },
                "storage": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "computes",
                "dataSource",
                "name"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestQueryEventQueryCompute:DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestQueryEventQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "interval": {
                    "type": "integer"
                },
                "metric": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestQueryEventQueryGroupBy:DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestQueryEventQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string"
                },
                "limit": {
                    "type": "integer"
                },
                "sort": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestQueryEventQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestQueryEventQueryGroupBySort"
                }
            },
            "type": "object",
            "required": [
                "facet"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestQueryEventQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestQueryEventQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "metric": {
                    "type": "string"
                },
                "order": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestQueryEventQuerySearch:DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestQueryEventQuerySearch": {
            "properties": {
                "query": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestQueryMetricQuery:DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestQueryMetricQuery": {
            "properties": {
                "aggregator": {
                    "type": "string"
                },
                "dataSource": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "query": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "name",
                "query"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestQueryProcessQuery:DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestQueryProcessQuery": {
            "properties": {
                "aggregator": {
                    "type": "string"
                },
                "dataSource": {
                    "type": "string"
                },
                "isNormalizedCpu": {
                    "type": "boolean"
                },
                "limit": {
                    "type": "integer"
                },
                "metric": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "sort": {
                    "type": "string"
                },
                "tagFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "textFilter": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "dataSource",
                "metric",
                "name"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestQuerySloQuery:DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestQuerySloQuery": {
            "properties": {
                "dataSource": {
                    "type": "string"
                },
                "groupMode": {
                    "type": "string"
                },
                "measure": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "sloId": {
                    "type": "string"
                },
                "sloQueryType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "dataSource",
                "measure",
                "sloId"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestRumQuery:DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestRumQuery": {
            "properties": {
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestRumQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestRumQueryComputeQuery"
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestRumQueryGroupBy:DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestRumQueryGroupBy"
                    }
                },
                "index": {
                    "type": "string"
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestRumQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestRumQueryMultiCompute"
                    }
                },
                "searchQuery": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestRumQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestRumQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "interval": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestRumQueryGroupBy:DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestRumQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string"
                },
                "limit": {
                    "type": "integer"
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestRumQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestRumQueryGroupBySortQuery"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestRumQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestRumQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "order": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestRumQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestRumQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "interval": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetGeomapDefinitionStyle:DashboardWidgetGroupDefinitionWidgetGeomapDefinitionStyle": {
            "properties": {
                "palette": {
                    "type": "string"
                },
                "paletteFlip": {
                    "type": "boolean"
                }
            },
            "type": "object",
            "required": [
                "palette",
                "paletteFlip"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetGeomapDefinitionView:DashboardWidgetGroupDefinitionWidgetGeomapDefinitionView": {
            "properties": {
                "focus": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "focus"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHeatmapDefinition:DashboardWidgetGroupDefinitionWidgetHeatmapDefinition": {
            "properties": {
                "customLinks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionCustomLink:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionCustomLink"
                    }
                },
                "events": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionEvent:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionEvent"
                    }
                },
                "legendSize": {
                    "type": "string"
                },
                "liveSpan": {
                    "type": "string"
                },
                "requests": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequest:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequest"
                    }
                },
                "showLegend": {
                    "type": "boolean"
                },
                "title": {
                    "type": "string",
                    "description": "The title of the dashboard.\n"
                },
                "titleAlign": {
                    "type": "string"
                },
                "titleSize": {
                    "type": "string"
                },
                "yaxis": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionYaxis:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionYaxis"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionCustomLink:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionCustomLink": {
            "properties": {
                "isHidden": {
                    "type": "boolean"
                },
                "label": {
                    "type": "string"
                },
                "link": {
                    "type": "string"
                },
                "overrideLabel": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionEvent:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionEvent": {
            "properties": {
                "q": {
                    "type": "string"
                },
                "tagsExecution": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "q"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequest:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequest": {
            "properties": {
                "apmQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestApmQuery:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestApmQuery"
                },
                "logQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestLogQuery:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestLogQuery"
                },
                "processQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestProcessQuery:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestProcessQuery"
                },
                "q": {
                    "type": "string"
                },
                "rumQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestRumQuery:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestRumQuery"
                },
                "securityQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestSecurityQuery:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestSecurityQuery"
                },
                "style": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestStyle:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestStyle"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestApmQuery:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestApmQuery": {
            "properties": {
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestApmQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestApmQueryComputeQuery"
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestApmQueryGroupBy:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestApmQueryGroupBy"
                    }
                },
                "index": {
                    "type": "string"
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestApmQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestApmQueryMultiCompute"
                    }
                },
                "searchQuery": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestApmQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestApmQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "interval": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestApmQueryGroupBy:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestApmQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string"
                },
                "limit": {
                    "type": "integer"
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestApmQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestApmQueryGroupBySortQuery"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestApmQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestApmQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "order": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestApmQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestApmQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "interval": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestLogQuery:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestLogQuery": {
            "properties": {
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestLogQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestLogQueryComputeQuery"
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestLogQueryGroupBy:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestLogQueryGroupBy"
                    }
                },
                "index": {
                    "type": "string"
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestLogQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestLogQueryMultiCompute"
                    }
                },
                "searchQuery": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestLogQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestLogQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "interval": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestLogQueryGroupBy:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestLogQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string"
                },
                "limit": {
                    "type": "integer"
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestLogQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestLogQueryGroupBySortQuery"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestLogQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestLogQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "order": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestLogQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestLogQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "interval": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestProcessQuery:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestProcessQuery": {
            "properties": {
                "filterBies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "limit": {
                    "type": "integer"
                },
                "metric": {
                    "type": "string"
                },
                "searchBy": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "metric"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestRumQuery:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestRumQuery": {
            "properties": {
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestRumQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestRumQueryComputeQuery"
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestRumQueryGroupBy:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestRumQueryGroupBy"
                    }
                },
                "index": {
                    "type": "string"
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestRumQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestRumQueryMultiCompute"
                    }
                },
                "searchQuery": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestRumQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestRumQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "interval": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestRumQueryGroupBy:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestRumQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string"
                },
                "limit": {
                    "type": "integer"
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestRumQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestRumQueryGroupBySortQuery"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestRumQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestRumQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "order": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestRumQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestRumQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "interval": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestSecurityQuery:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestSecurityQuery": {
            "properties": {
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestSecurityQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestSecurityQueryComputeQuery"
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestSecurityQueryGroupBy:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestSecurityQueryGroupBy"
                    }
                },
                "index": {
                    "type": "string"
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestSecurityQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestSecurityQueryMultiCompute"
                    }
                },
                "searchQuery": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestSecurityQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestSecurityQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "interval": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestSecurityQueryGroupBy:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestSecurityQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string"
                },
                "limit": {
                    "type": "integer"
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestSecurityQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestSecurityQueryGroupBySortQuery"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestSecurityQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestSecurityQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "order": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestSecurityQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestSecurityQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "interval": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestStyle:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestStyle": {
            "properties": {
                "palette": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionYaxis:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionYaxis": {
            "properties": {
                "includeZero": {
                    "type": "boolean"
                },
                "label": {
                    "type": "string"
                },
                "max": {
                    "type": "string"
                },
                "min": {
                    "type": "string"
                },
                "scale": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinition:DashboardWidgetGroupDefinitionWidgetHostmapDefinition": {
            "properties": {
                "customLinks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionCustomLink:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionCustomLink"
                    }
                },
                "groups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "noGroupHosts": {
                    "type": "boolean"
                },
                "noMetricHosts": {
                    "type": "boolean"
                },
                "nodeType": {
                    "type": "string"
                },
                "request": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequest:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequest"
                },
                "scopes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "style": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionStyle:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionStyle"
                },
                "title": {
                    "type": "string",
                    "description": "The title of the dashboard.\n"
                },
                "titleAlign": {
                    "type": "string"
                },
                "titleSize": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionCustomLink:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionCustomLink": {
            "properties": {
                "isHidden": {
                    "type": "boolean"
                },
                "label": {
                    "type": "string"
                },
                "link": {
                    "type": "string"
                },
                "overrideLabel": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequest:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequest": {
            "properties": {
                "fills": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFill:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFill"
                    }
                },
                "sizes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSize:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSize"
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFill:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFill": {
            "properties": {
                "apmQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillApmQuery:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillApmQuery"
                },
                "logQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillLogQuery:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillLogQuery"
                },
                "processQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillProcessQuery:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillProcessQuery"
                },
                "q": {
                    "type": "string"
                },
                "rumQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillRumQuery:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillRumQuery"
                },
                "securityQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillSecurityQuery:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillSecurityQuery"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillApmQuery:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillApmQuery": {
            "properties": {
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillApmQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillApmQueryComputeQuery"
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillApmQueryGroupBy:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillApmQueryGroupBy"
                    }
                },
                "index": {
                    "type": "string"
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillApmQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillApmQueryMultiCompute"
                    }
                },
                "searchQuery": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillApmQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillApmQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "interval": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillApmQueryGroupBy:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillApmQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string"
                },
                "limit": {
                    "type": "integer"
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillApmQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillApmQueryGroupBySortQuery"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillApmQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillApmQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "order": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillApmQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillApmQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "interval": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillLogQuery:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillLogQuery": {
            "properties": {
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillLogQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillLogQueryComputeQuery"
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillLogQueryGroupBy:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillLogQueryGroupBy"
                    }
                },
                "index": {
                    "type": "string"
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillLogQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillLogQueryMultiCompute"
                    }
                },
                "searchQuery": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillLogQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillLogQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "interval": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillLogQueryGroupBy:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillLogQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string"
                },
                "limit": {
                    "type": "integer"
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillLogQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillLogQueryGroupBySortQuery"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillLogQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillLogQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "order": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillLogQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillLogQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "interval": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillProcessQuery:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillProcessQuery": {
            "properties": {
                "filterBies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "limit": {
                    "type": "integer"
                },
                "metric": {
                    "type": "string"
                },
                "searchBy": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "metric"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillRumQuery:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillRumQuery": {
            "properties": {
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillRumQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillRumQueryComputeQuery"
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillRumQueryGroupBy:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillRumQueryGroupBy"
                    }
                },
                "index": {
                    "type": "string"
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillRumQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillRumQueryMultiCompute"
                    }
                },
                "searchQuery": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillRumQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillRumQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "interval": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillRumQueryGroupBy:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillRumQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string"
                },
                "limit": {
                    "type": "integer"
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillRumQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillRumQueryGroupBySortQuery"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillRumQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillRumQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "order": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillRumQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillRumQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "interval": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillSecurityQuery:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillSecurityQuery": {
            "properties": {
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillSecurityQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillSecurityQueryComputeQuery"
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillSecurityQueryGroupBy:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillSecurityQueryGroupBy"
                    }
                },
                "index": {
                    "type": "string"
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillSecurityQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillSecurityQueryMultiCompute"
                    }
                },
                "searchQuery": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillSecurityQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillSecurityQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "interval": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillSecurityQueryGroupBy:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillSecurityQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string"
                },
                "limit": {
                    "type": "integer"
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillSecurityQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillSecurityQueryGroupBySortQuery"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillSecurityQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillSecurityQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "order": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillSecurityQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillSecurityQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "interval": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSize:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSize": {
            "properties": {
                "apmQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeApmQuery:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeApmQuery"
                },
                "logQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeLogQuery:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeLogQuery"
                },
                "processQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeProcessQuery:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeProcessQuery"
                },
                "q": {
                    "type": "string"
                },
                "rumQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeRumQuery:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeRumQuery"
                },
                "securityQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeSecurityQuery:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeSecurityQuery"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeApmQuery:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeApmQuery": {
            "properties": {
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeApmQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeApmQueryComputeQuery"
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeApmQueryGroupBy:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeApmQueryGroupBy"
                    }
                },
                "index": {
                    "type": "string"
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeApmQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeApmQueryMultiCompute"
                    }
                },
                "searchQuery": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeApmQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeApmQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "interval": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeApmQueryGroupBy:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeApmQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string"
                },
                "limit": {
                    "type": "integer"
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeApmQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeApmQueryGroupBySortQuery"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeApmQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeApmQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "order": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeApmQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeApmQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "interval": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeLogQuery:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeLogQuery": {
            "properties": {
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeLogQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeLogQueryComputeQuery"
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeLogQueryGroupBy:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeLogQueryGroupBy"
                    }
                },
                "index": {
                    "type": "string"
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeLogQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeLogQueryMultiCompute"
                    }
                },
                "searchQuery": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeLogQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeLogQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "interval": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeLogQueryGroupBy:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeLogQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string"
                },
                "limit": {
                    "type": "integer"
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeLogQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeLogQueryGroupBySortQuery"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeLogQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeLogQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "order": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeLogQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeLogQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "interval": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeProcessQuery:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeProcessQuery": {
            "properties": {
                "filterBies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "limit": {
                    "type": "integer"
                },
                "metric": {
                    "type": "string"
                },
                "searchBy": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "metric"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeRumQuery:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeRumQuery": {
            "properties": {
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeRumQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeRumQueryComputeQuery"
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeRumQueryGroupBy:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeRumQueryGroupBy"
                    }
                },
                "index": {
                    "type": "string"
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeRumQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeRumQueryMultiCompute"
                    }
                },
                "searchQuery": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeRumQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeRumQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "interval": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeRumQueryGroupBy:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeRumQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string"
                },
                "limit": {
                    "type": "integer"
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeRumQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeRumQueryGroupBySortQuery"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeRumQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeRumQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "order": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeRumQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeRumQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "interval": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeSecurityQuery:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeSecurityQuery": {
            "properties": {
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeSecurityQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeSecurityQueryComputeQuery"
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeSecurityQueryGroupBy:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeSecurityQueryGroupBy"
                    }
                },
                "index": {
                    "type": "string"
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeSecurityQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeSecurityQueryMultiCompute"
                    }
                },
                "searchQuery": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeSecurityQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeSecurityQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "interval": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeSecurityQueryGroupBy:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeSecurityQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string"
                },
                "limit": {
                    "type": "integer"
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeSecurityQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeSecurityQueryGroupBySortQuery"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeSecurityQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeSecurityQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "order": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeSecurityQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeSecurityQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "interval": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionStyle:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionStyle": {
            "properties": {
                "fillMax": {
                    "type": "string"
                },
                "fillMin": {
                    "type": "string"
                },
                "palette": {
                    "type": "string"
                },
                "paletteFlip": {
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetIframeDefinition:DashboardWidgetGroupDefinitionWidgetIframeDefinition": {
            "properties": {
                "url": {
                    "type": "string",
                    "description": "The URL of the dashboard.\n"
                }
            },
            "type": "object",
            "required": [
                "url"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetImageDefinition:DashboardWidgetGroupDefinitionWidgetImageDefinition": {
            "properties": {
                "hasBackground": {
                    "type": "boolean"
                },
                "hasBorder": {
                    "type": "boolean"
                },
                "horizontalAlign": {
                    "type": "string"
                },
                "margin": {
                    "type": "string"
                },
                "sizing": {
                    "type": "string"
                },
                "url": {
                    "type": "string",
                    "description": "The URL of the dashboard.\n"
                },
                "urlDarkTheme": {
                    "type": "string"
                },
                "verticalAlign": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "url"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetListStreamDefinition:DashboardWidgetGroupDefinitionWidgetListStreamDefinition": {
            "properties": {
                "requests": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetListStreamDefinitionRequest:DashboardWidgetGroupDefinitionWidgetListStreamDefinitionRequest"
                    }
                },
                "title": {
                    "type": "string",
                    "description": "The title of the dashboard.\n"
                },
                "titleAlign": {
                    "type": "string"
                },
                "titleSize": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "requests"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetListStreamDefinitionRequest:DashboardWidgetGroupDefinitionWidgetListStreamDefinitionRequest": {
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetListStreamDefinitionRequestColumn:DashboardWidgetGroupDefinitionWidgetListStreamDefinitionRequestColumn"
                    }
                },
                "query": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetListStreamDefinitionRequestQuery:DashboardWidgetGroupDefinitionWidgetListStreamDefinitionRequestQuery"
                },
                "responseFormat": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "columns",
                "query",
                "responseFormat"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetListStreamDefinitionRequestColumn:DashboardWidgetGroupDefinitionWidgetListStreamDefinitionRequestColumn": {
            "properties": {
                "field": {
                    "type": "string"
                },
                "width": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "field",
                "width"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetListStreamDefinitionRequestQuery:DashboardWidgetGroupDefinitionWidgetListStreamDefinitionRequestQuery": {
            "properties": {
                "dataSource": {
                    "type": "string"
                },
                "eventSize": {
                    "type": "string"
                },
                "indexes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "queryString": {
                    "type": "string"
                },
                "sort": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetListStreamDefinitionRequestQuerySort:DashboardWidgetGroupDefinitionWidgetListStreamDefinitionRequestQuerySort"
                },
                "storage": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "dataSource"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetListStreamDefinitionRequestQuerySort:DashboardWidgetGroupDefinitionWidgetListStreamDefinitionRequestQuerySort": {
            "properties": {
                "column": {
                    "type": "string"
                },
                "order": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "column",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetLogStreamDefinition:DashboardWidgetGroupDefinitionWidgetLogStreamDefinition": {
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "indexes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "liveSpan": {
                    "type": "string"
                },
                "messageDisplay": {
                    "type": "string"
                },
                "query": {
                    "type": "string"
                },
                "showDateColumn": {
                    "type": "boolean"
                },
                "showMessageColumn": {
                    "type": "boolean"
                },
                "sort": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetLogStreamDefinitionSort:DashboardWidgetGroupDefinitionWidgetLogStreamDefinitionSort"
                },
                "title": {
                    "type": "string",
                    "description": "The title of the dashboard.\n"
                },
                "titleAlign": {
                    "type": "string"
                },
                "titleSize": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetLogStreamDefinitionSort:DashboardWidgetGroupDefinitionWidgetLogStreamDefinitionSort": {
            "properties": {
                "column": {
                    "type": "string"
                },
                "order": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "column",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetManageStatusDefinition:DashboardWidgetGroupDefinitionWidgetManageStatusDefinition": {
            "properties": {
                "colorPreference": {
                    "type": "string"
                },
                "displayFormat": {
                    "type": "string"
                },
                "hideZeroCounts": {
                    "type": "boolean"
                },
                "query": {
                    "type": "string"
                },
                "showLastTriggered": {
                    "type": "boolean"
                },
                "showPriority": {
                    "type": "boolean"
                },
                "sort": {
                    "type": "string"
                },
                "summaryType": {
                    "type": "string"
                },
                "title": {
                    "type": "string",
                    "description": "The title of the dashboard.\n"
                },
                "titleAlign": {
                    "type": "string"
                },
                "titleSize": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetNoteDefinition:DashboardWidgetGroupDefinitionWidgetNoteDefinition": {
            "properties": {
                "backgroundColor": {
                    "type": "string"
                },
                "content": {
                    "type": "string"
                },
                "fontSize": {
                    "type": "string"
                },
                "hasPadding": {
                    "type": "boolean"
                },
                "showTick": {
                    "type": "boolean"
                },
                "textAlign": {
                    "type": "string"
                },
                "tickEdge": {
                    "type": "string"
                },
                "tickPos": {
                    "type": "string"
                },
                "verticalAlign": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "content"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetQueryTableDefinition:DashboardWidgetGroupDefinitionWidgetQueryTableDefinition": {
            "properties": {
                "customLinks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionCustomLink:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionCustomLink"
                    }
                },
                "hasSearchBar": {
                    "type": "string"
                },
                "liveSpan": {
                    "type": "string"
                },
                "requests": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequest:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequest"
                    }
                },
                "title": {
                    "type": "string",
                    "description": "The title of the dashboard.\n"
                },
                "titleAlign": {
                    "type": "string"
                },
                "titleSize": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionCustomLink:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionCustomLink": {
            "properties": {
                "isHidden": {
                    "type": "boolean"
                },
                "label": {
                    "type": "string"
                },
                "link": {
                    "type": "string"
                },
                "overrideLabel": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequest:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequest": {
            "properties": {
                "aggregator": {
                    "type": "string"
                },
                "alias": {
                    "type": "string"
                },
                "apmQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestApmQuery:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestApmQuery"
                },
                "apmStatsQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestApmStatsQuery:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestApmStatsQuery"
                },
                "cellDisplayModes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "conditionalFormats": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestConditionalFormat:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestConditionalFormat"
                    }
                },
                "formulas": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestFormula:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestFormula"
                    }
                },
                "limit": {
                    "type": "integer"
                },
                "logQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestLogQuery:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestLogQuery"
                },
                "order": {
                    "type": "string"
                },
                "processQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestProcessQuery:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestProcessQuery"
                },
                "q": {
                    "type": "string"
                },
                "queries": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestQuery:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestQuery"
                    }
                },
                "rumQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestRumQuery:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestRumQuery"
                },
                "securityQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestSecurityQuery:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestSecurityQuery"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestApmQuery:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestApmQuery": {
            "properties": {
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestApmQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestApmQueryComputeQuery"
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestApmQueryGroupBy:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestApmQueryGroupBy"
                    }
                },
                "index": {
                    "type": "string"
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestApmQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestApmQueryMultiCompute"
                    }
                },
                "searchQuery": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestApmQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestApmQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "interval": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestApmQueryGroupBy:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestApmQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string"
                },
                "limit": {
                    "type": "integer"
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestApmQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestApmQueryGroupBySortQuery"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestApmQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestApmQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "order": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestApmQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestApmQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "interval": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestApmStatsQuery:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestApmStatsQuery": {
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestApmStatsQueryColumn:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestApmStatsQueryColumn"
                    }
                },
                "env": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "primaryTag": {
                    "type": "string"
                },
                "resource": {
                    "type": "string"
                },
                "rowType": {
                    "type": "string"
                },
                "service": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "env",
                "name",
                "primaryTag",
                "rowType",
                "service"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestApmStatsQueryColumn:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestApmStatsQueryColumn": {
            "properties": {
                "alias": {
                    "type": "string"
                },
                "cellDisplayMode": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "order": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "name"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestConditionalFormat:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestConditionalFormat": {
            "properties": {
                "comparator": {
                    "type": "string"
                },
                "customBgColor": {
                    "type": "string"
                },
                "customFgColor": {
                    "type": "string"
                },
                "hideValue": {
                    "type": "boolean"
                },
                "imageUrl": {
                    "type": "string"
                },
                "metric": {
                    "type": "string"
                },
                "palette": {
                    "type": "string"
                },
                "timeframe": {
                    "type": "string"
                },
                "value": {
                    "type": "number"
                }
            },
            "type": "object",
            "required": [
                "comparator",
                "palette",
                "value"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestFormula:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestFormula": {
            "properties": {
                "alias": {
                    "type": "string"
                },
                "cellDisplayMode": {
                    "type": "string"
                },
                "conditionalFormats": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestFormulaConditionalFormat:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestFormulaConditionalFormat"
                    }
                },
                "formulaExpression": {
                    "type": "string"
                },
                "limit": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestFormulaLimit:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestFormulaLimit"
                },
                "style": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestFormulaStyle:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestFormulaStyle"
                }
            },
            "type": "object",
            "required": [
                "formulaExpression"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestFormulaConditionalFormat:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestFormulaConditionalFormat": {
            "properties": {
                "comparator": {
                    "type": "string"
                },
                "customBgColor": {
                    "type": "string"
                },
                "customFgColor": {
                    "type": "string"
                },
                "hideValue": {
                    "type": "boolean"
                },
                "imageUrl": {
                    "type": "string"
                },
                "metric": {
                    "type": "string"
                },
                "palette": {
                    "type": "string"
                },
                "timeframe": {
                    "type": "string"
                },
                "value": {
                    "type": "number"
                }
            },
            "type": "object",
            "required": [
                "comparator",
                "palette",
                "value"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestFormulaLimit:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestFormulaLimit": {
            "properties": {
                "count": {
                    "type": "integer"
                },
                "order": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestFormulaStyle:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestFormulaStyle": {
            "properties": {
                "palette": {
                    "type": "string"
                },
                "paletteIndex": {
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestLogQuery:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestLogQuery": {
            "properties": {
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestLogQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestLogQueryComputeQuery"
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestLogQueryGroupBy:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestLogQueryGroupBy"
                    }
                },
                "index": {
                    "type": "string"
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestLogQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestLogQueryMultiCompute"
                    }
                },
                "searchQuery": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestLogQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestLogQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "interval": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestLogQueryGroupBy:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestLogQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string"
                },
                "limit": {
                    "type": "integer"
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestLogQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestLogQueryGroupBySortQuery"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestLogQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestLogQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "order": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestLogQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestLogQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "interval": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestProcessQuery:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestProcessQuery": {
            "properties": {
                "filterBies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "limit": {
                    "type": "integer"
                },
                "metric": {
                    "type": "string"
                },
                "searchBy": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "metric"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestQuery:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestQuery": {
            "properties": {
                "apmDependencyStatsQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestQueryApmDependencyStatsQuery:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestQueryApmDependencyStatsQuery"
                },
                "apmResourceStatsQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestQueryApmResourceStatsQuery:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestQueryApmResourceStatsQuery"
                },
                "eventQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestQueryEventQuery:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestQueryEventQuery"
                },
                "metricQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestQueryMetricQuery:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestQueryMetricQuery"
                },
                "processQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestQueryProcessQuery:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestQueryProcessQuery"
                },
                "sloQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestQuerySloQuery:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestQuerySloQuery"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestQueryApmDependencyStatsQuery:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestQueryApmDependencyStatsQuery": {
            "properties": {
                "dataSource": {
                    "type": "string"
                },
                "env": {
                    "type": "string"
                },
                "isUpstream": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "operationName": {
                    "type": "string"
                },
                "primaryTagName": {
                    "type": "string"
                },
                "primaryTagValue": {
                    "type": "string"
                },
                "resourceName": {
                    "type": "string"
                },
                "service": {
                    "type": "string"
                },
                "stat": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "dataSource",
                "env",
                "name",
                "operationName",
                "resourceName",
                "service",
                "stat"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestQueryApmResourceStatsQuery:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestQueryApmResourceStatsQuery": {
            "properties": {
                "dataSource": {
                    "type": "string"
                },
                "env": {
                    "type": "string"
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "name": {
                    "type": "string"
                },
                "operationName": {
                    "type": "string"
                },
                "primaryTagName": {
                    "type": "string"
                },
                "primaryTagValue": {
                    "type": "string"
                },
                "resourceName": {
                    "type": "string"
                },
                "service": {
                    "type": "string"
                },
                "stat": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "dataSource",
                "env",
                "name",
                "service",
                "stat"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestQueryEventQuery:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestQueryEventQuery": {
            "properties": {
                "computes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestQueryEventQueryCompute:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestQueryEventQueryCompute"
                    }
                },
                "dataSource": {
                    "type": "string"
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestQueryEventQueryGroupBy:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestQueryEventQueryGroupBy"
                    }
                },
                "indexes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "name": {
                    "type": "string"
                },
                "search": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestQueryEventQuerySearch:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestQueryEventQuerySearch"
                },
                "storage": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "computes",
                "dataSource",
                "name"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestQueryEventQueryCompute:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestQueryEventQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "interval": {
                    "type": "integer"
                },
                "metric": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestQueryEventQueryGroupBy:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestQueryEventQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string"
                },
                "limit": {
                    "type": "integer"
                },
                "sort": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestQueryEventQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestQueryEventQueryGroupBySort"
                }
            },
            "type": "object",
            "required": [
                "facet"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestQueryEventQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestQueryEventQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "metric": {
                    "type": "string"
                },
                "order": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestQueryEventQuerySearch:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestQueryEventQuerySearch": {
            "properties": {
                "query": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestQueryMetricQuery:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestQueryMetricQuery": {
            "properties": {
                "aggregator": {
                    "type": "string"
                },
                "dataSource": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "query": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "name",
                "query"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestQueryProcessQuery:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestQueryProcessQuery": {
            "properties": {
                "aggregator": {
                    "type": "string"
                },
                "dataSource": {
                    "type": "string"
                },
                "isNormalizedCpu": {
                    "type": "boolean"
                },
                "limit": {
                    "type": "integer"
                },
                "metric": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "sort": {
                    "type": "string"
                },
                "tagFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "textFilter": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "dataSource",
                "metric",
                "name"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestQuerySloQuery:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestQuerySloQuery": {
            "properties": {
                "dataSource": {
                    "type": "string"
                },
                "groupMode": {
                    "type": "string"
                },
                "measure": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "sloId": {
                    "type": "string"
                },
                "sloQueryType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "dataSource",
                "measure",
                "sloId"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestRumQuery:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestRumQuery": {
            "properties": {
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestRumQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestRumQueryComputeQuery"
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestRumQueryGroupBy:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestRumQueryGroupBy"
                    }
                },
                "index": {
                    "type": "string"
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestRumQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestRumQueryMultiCompute"
                    }
                },
                "searchQuery": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestRumQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestRumQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "interval": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestRumQueryGroupBy:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestRumQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string"
                },
                "limit": {
                    "type": "integer"
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestRumQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestRumQueryGroupBySortQuery"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestRumQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestRumQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "order": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestRumQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestRumQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "interval": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestSecurityQuery:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestSecurityQuery": {
            "properties": {
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestSecurityQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestSecurityQueryComputeQuery"
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestSecurityQueryGroupBy:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestSecurityQueryGroupBy"
                    }
                },
                "index": {
                    "type": "string"
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestSecurityQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestSecurityQueryMultiCompute"
                    }
                },
                "searchQuery": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestSecurityQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestSecurityQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "interval": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestSecurityQueryGroupBy:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestSecurityQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string"
                },
                "limit": {
                    "type": "integer"
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestSecurityQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestSecurityQueryGroupBySortQuery"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestSecurityQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestSecurityQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "order": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestSecurityQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestSecurityQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "interval": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetQueryValueDefinition:DashboardWidgetGroupDefinitionWidgetQueryValueDefinition": {
            "properties": {
                "autoscale": {
                    "type": "boolean"
                },
                "customLinks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionCustomLink:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionCustomLink"
                    }
                },
                "customUnit": {
                    "type": "string"
                },
                "liveSpan": {
                    "type": "string"
                },
                "precision": {
                    "type": "integer"
                },
                "requests": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequest:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequest"
                    }
                },
                "textAlign": {
                    "type": "string"
                },
                "timeseriesBackground": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionTimeseriesBackground:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionTimeseriesBackground"
                },
                "title": {
                    "type": "string",
                    "description": "The title of the dashboard.\n"
                },
                "titleAlign": {
                    "type": "string"
                },
                "titleSize": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionCustomLink:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionCustomLink": {
            "properties": {
                "isHidden": {
                    "type": "boolean"
                },
                "label": {
                    "type": "string"
                },
                "link": {
                    "type": "string"
                },
                "overrideLabel": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequest:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequest": {
            "properties": {
                "aggregator": {
                    "type": "string"
                },
                "apmQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestApmQuery:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestApmQuery"
                },
                "auditQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestAuditQuery:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestAuditQuery"
                },
                "conditionalFormats": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestConditionalFormat:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestConditionalFormat"
                    }
                },
                "formulas": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestFormula:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestFormula"
                    }
                },
                "logQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestLogQuery:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestLogQuery"
                },
                "processQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestProcessQuery:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestProcessQuery"
                },
                "q": {
                    "type": "string"
                },
                "queries": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestQuery:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestQuery"
                    }
                },
                "rumQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestRumQuery:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestRumQuery"
                },
                "securityQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestSecurityQuery:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestSecurityQuery"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestApmQuery:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestApmQuery": {
            "properties": {
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestApmQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestApmQueryComputeQuery"
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestApmQueryGroupBy:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestApmQueryGroupBy"
                    }
                },
                "index": {
                    "type": "string"
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestApmQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestApmQueryMultiCompute"
                    }
                },
                "searchQuery": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestApmQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestApmQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "interval": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestApmQueryGroupBy:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestApmQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string"
                },
                "limit": {
                    "type": "integer"
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestApmQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestApmQueryGroupBySortQuery"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestApmQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestApmQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "order": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestApmQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestApmQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "interval": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestAuditQuery:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestAuditQuery": {
            "properties": {
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestAuditQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestAuditQueryComputeQuery"
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestAuditQueryGroupBy:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestAuditQueryGroupBy"
                    }
                },
                "index": {
                    "type": "string"
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestAuditQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestAuditQueryMultiCompute"
                    }
                },
                "searchQuery": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestAuditQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestAuditQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "interval": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestAuditQueryGroupBy:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestAuditQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string"
                },
                "limit": {
                    "type": "integer"
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestAuditQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestAuditQueryGroupBySortQuery"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestAuditQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestAuditQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "order": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestAuditQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestAuditQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "interval": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestConditionalFormat:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestConditionalFormat": {
            "properties": {
                "comparator": {
                    "type": "string"
                },
                "customBgColor": {
                    "type": "string"
                },
                "customFgColor": {
                    "type": "string"
                },
                "hideValue": {
                    "type": "boolean"
                },
                "imageUrl": {
                    "type": "string"
                },
                "metric": {
                    "type": "string"
                },
                "palette": {
                    "type": "string"
                },
                "timeframe": {
                    "type": "string"
                },
                "value": {
                    "type": "number"
                }
            },
            "type": "object",
            "required": [
                "comparator",
                "palette",
                "value"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestFormula:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestFormula": {
            "properties": {
                "alias": {
                    "type": "string"
                },
                "cellDisplayMode": {
                    "type": "string"
                },
                "conditionalFormats": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestFormulaConditionalFormat:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestFormulaConditionalFormat"
                    }
                },
                "formulaExpression": {
                    "type": "string"
                },
                "limit": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestFormulaLimit:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestFormulaLimit"
                },
                "style": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestFormulaStyle:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestFormulaStyle"
                }
            },
            "type": "object",
            "required": [
                "formulaExpression"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestFormulaConditionalFormat:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestFormulaConditionalFormat": {
            "properties": {
                "comparator": {
                    "type": "string"
                },
                "customBgColor": {
                    "type": "string"
                },
                "customFgColor": {
                    "type": "string"
                },
                "hideValue": {
                    "type": "boolean"
                },
                "imageUrl": {
                    "type": "string"
                },
                "metric": {
                    "type": "string"
                },
                "palette": {
                    "type": "string"
                },
                "timeframe": {
                    "type": "string"
                },
                "value": {
                    "type": "number"
                }
            },
            "type": "object",
            "required": [
                "comparator",
                "palette",
                "value"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestFormulaLimit:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestFormulaLimit": {
            "properties": {
                "count": {
                    "type": "integer"
                },
                "order": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestFormulaStyle:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestFormulaStyle": {
            "properties": {
                "palette": {
                    "type": "string"
                },
                "paletteIndex": {
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestLogQuery:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestLogQuery": {
            "properties": {
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestLogQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestLogQueryComputeQuery"
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestLogQueryGroupBy:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestLogQueryGroupBy"
                    }
                },
                "index": {
                    "type": "string"
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestLogQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestLogQueryMultiCompute"
                    }
                },
                "searchQuery": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestLogQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestLogQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "interval": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestLogQueryGroupBy:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestLogQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string"
                },
                "limit": {
                    "type": "integer"
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestLogQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestLogQueryGroupBySortQuery"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestLogQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestLogQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "order": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestLogQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestLogQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "interval": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestProcessQuery:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestProcessQuery": {
            "properties": {
                "filterBies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "limit": {
                    "type": "integer"
                },
                "metric": {
                    "type": "string"
                },
                "searchBy": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "metric"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestQuery:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestQuery": {
            "properties": {
                "apmDependencyStatsQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestQueryApmDependencyStatsQuery:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestQueryApmDependencyStatsQuery"
                },
                "apmResourceStatsQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestQueryApmResourceStatsQuery:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestQueryApmResourceStatsQuery"
                },
                "eventQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestQueryEventQuery:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestQueryEventQuery"
                },
                "metricQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestQueryMetricQuery:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestQueryMetricQuery"
                },
                "processQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestQueryProcessQuery:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestQueryProcessQuery"
                },
                "sloQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestQuerySloQuery:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestQuerySloQuery"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestQueryApmDependencyStatsQuery:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestQueryApmDependencyStatsQuery": {
            "properties": {
                "dataSource": {
                    "type": "string"
                },
                "env": {
                    "type": "string"
                },
                "isUpstream": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "operationName": {
                    "type": "string"
                },
                "primaryTagName": {
                    "type": "string"
                },
                "primaryTagValue": {
                    "type": "string"
                },
                "resourceName": {
                    "type": "string"
                },
                "service": {
                    "type": "string"
                },
                "stat": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "dataSource",
                "env",
                "name",
                "operationName",
                "resourceName",
                "service",
                "stat"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestQueryApmResourceStatsQuery:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestQueryApmResourceStatsQuery": {
            "properties": {
                "dataSource": {
                    "type": "string"
                },
                "env": {
                    "type": "string"
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "name": {
                    "type": "string"
                },
                "operationName": {
                    "type": "string"
                },
                "primaryTagName": {
                    "type": "string"
                },
                "primaryTagValue": {
                    "type": "string"
                },
                "resourceName": {
                    "type": "string"
                },
                "service": {
                    "type": "string"
                },
                "stat": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "dataSource",
                "env",
                "name",
                "service",
                "stat"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestQueryEventQuery:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestQueryEventQuery": {
            "properties": {
                "computes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestQueryEventQueryCompute:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestQueryEventQueryCompute"
                    }
                },
                "dataSource": {
                    "type": "string"
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestQueryEventQueryGroupBy:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestQueryEventQueryGroupBy"
                    }
                },
                "indexes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "name": {
                    "type": "string"
                },
                "search": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestQueryEventQuerySearch:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestQueryEventQuerySearch"
                },
                "storage": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "computes",
                "dataSource",
                "name"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestQueryEventQueryCompute:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestQueryEventQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "interval": {
                    "type": "integer"
                },
                "metric": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestQueryEventQueryGroupBy:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestQueryEventQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string"
                },
                "limit": {
                    "type": "integer"
                },
                "sort": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestQueryEventQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestQueryEventQueryGroupBySort"
                }
            },
            "type": "object",
            "required": [
                "facet"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestQueryEventQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestQueryEventQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "metric": {
                    "type": "string"
                },
                "order": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestQueryEventQuerySearch:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestQueryEventQuerySearch": {
            "properties": {
                "query": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestQueryMetricQuery:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestQueryMetricQuery": {
            "properties": {
                "aggregator": {
                    "type": "string"
                },
                "dataSource": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "query": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "name",
                "query"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestQueryProcessQuery:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestQueryProcessQuery": {
            "properties": {
                "aggregator": {
                    "type": "string"
                },
                "dataSource": {
                    "type": "string"
                },
                "isNormalizedCpu": {
                    "type": "boolean"
                },
                "limit": {
                    "type": "integer"
                },
                "metric": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "sort": {
                    "type": "string"
                },
                "tagFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "textFilter": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "dataSource",
                "metric",
                "name"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestQuerySloQuery:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestQuerySloQuery": {
            "properties": {
                "dataSource": {
                    "type": "string"
                },
                "groupMode": {
                    "type": "string"
                },
                "measure": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "sloId": {
                    "type": "string"
                },
                "sloQueryType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "dataSource",
                "measure",
                "sloId"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestRumQuery:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestRumQuery": {
            "properties": {
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestRumQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestRumQueryComputeQuery"
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestRumQueryGroupBy:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestRumQueryGroupBy"
                    }
                },
                "index": {
                    "type": "string"
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestRumQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestRumQueryMultiCompute"
                    }
                },
                "searchQuery": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestRumQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestRumQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "interval": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestRumQueryGroupBy:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestRumQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string"
                },
                "limit": {
                    "type": "integer"
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestRumQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestRumQueryGroupBySortQuery"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestRumQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestRumQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "order": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestRumQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestRumQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "interval": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestSecurityQuery:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestSecurityQuery": {
            "properties": {
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestSecurityQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestSecurityQueryComputeQuery"
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestSecurityQueryGroupBy:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestSecurityQueryGroupBy"
                    }
                },
                "index": {
                    "type": "string"
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestSecurityQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestSecurityQueryMultiCompute"
                    }
                },
                "searchQuery": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestSecurityQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestSecurityQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "interval": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestSecurityQueryGroupBy:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestSecurityQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string"
                },
                "limit": {
                    "type": "integer"
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestSecurityQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestSecurityQueryGroupBySortQuery"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestSecurityQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestSecurityQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "order": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestSecurityQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestSecurityQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "interval": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionTimeseriesBackground:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionTimeseriesBackground": {
            "properties": {
                "type": {
                    "type": "string"
                },
                "yaxis": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionTimeseriesBackgroundYaxis:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionTimeseriesBackgroundYaxis"
                }
            },
            "type": "object",
            "required": [
                "type"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionTimeseriesBackgroundYaxis:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionTimeseriesBackgroundYaxis": {
            "properties": {
                "includeZero": {
                    "type": "boolean"
                },
                "label": {
                    "type": "string"
                },
                "max": {
                    "type": "string"
                },
                "min": {
                    "type": "string"
                },
                "scale": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetRunWorkflowDefinition:DashboardWidgetGroupDefinitionWidgetRunWorkflowDefinition": {
            "properties": {
                "customLinks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetRunWorkflowDefinitionCustomLink:DashboardWidgetGroupDefinitionWidgetRunWorkflowDefinitionCustomLink"
                    }
                },
                "inputs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetRunWorkflowDefinitionInput:DashboardWidgetGroupDefinitionWidgetRunWorkflowDefinitionInput"
                    }
                },
                "liveSpan": {
                    "type": "string"
                },
                "title": {
                    "type": "string",
                    "description": "The title of the dashboard.\n"
                },
                "titleAlign": {
                    "type": "string"
                },
                "titleSize": {
                    "type": "string"
                },
                "workflowId": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "workflowId"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetRunWorkflowDefinitionCustomLink:DashboardWidgetGroupDefinitionWidgetRunWorkflowDefinitionCustomLink": {
            "properties": {
                "isHidden": {
                    "type": "boolean"
                },
                "label": {
                    "type": "string"
                },
                "link": {
                    "type": "string"
                },
                "overrideLabel": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetRunWorkflowDefinitionInput:DashboardWidgetGroupDefinitionWidgetRunWorkflowDefinitionInput": {
            "properties": {
                "name": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "name",
                "value"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinition:DashboardWidgetGroupDefinitionWidgetScatterplotDefinition": {
            "properties": {
                "colorByGroups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "customLinks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionCustomLink:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionCustomLink"
                    }
                },
                "liveSpan": {
                    "type": "string"
                },
                "request": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequest:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequest"
                },
                "title": {
                    "type": "string",
                    "description": "The title of the dashboard.\n"
                },
                "titleAlign": {
                    "type": "string"
                },
                "titleSize": {
                    "type": "string"
                },
                "xaxis": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionXaxis:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionXaxis"
                },
                "yaxis": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionYaxis:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionYaxis"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionCustomLink:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionCustomLink": {
            "properties": {
                "isHidden": {
                    "type": "boolean"
                },
                "label": {
                    "type": "string"
                },
                "link": {
                    "type": "string"
                },
                "overrideLabel": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequest:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequest": {
            "properties": {
                "scatterplotTables": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestScatterplotTable:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestScatterplotTable"
                    }
                },
                "xes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestX:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestX"
                    }
                },
                "ys": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestY:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestY"
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestScatterplotTable:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestScatterplotTable": {
            "properties": {
                "formulas": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestScatterplotTableFormula:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestScatterplotTableFormula"
                    }
                },
                "queries": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestScatterplotTableQuery:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestScatterplotTableQuery"
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestScatterplotTableFormula:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestScatterplotTableFormula": {
            "properties": {
                "alias": {
                    "type": "string"
                },
                "dimension": {
                    "type": "string"
                },
                "formulaExpression": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "dimension",
                "formulaExpression"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestScatterplotTableQuery:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestScatterplotTableQuery": {
            "properties": {
                "apmDependencyStatsQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestScatterplotTableQueryApmDependencyStatsQuery:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestScatterplotTableQueryApmDependencyStatsQuery"
                },
                "apmResourceStatsQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestScatterplotTableQueryApmResourceStatsQuery:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestScatterplotTableQueryApmResourceStatsQuery"
                },
                "eventQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestScatterplotTableQueryEventQuery:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestScatterplotTableQueryEventQuery"
                },
                "metricQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestScatterplotTableQueryMetricQuery:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestScatterplotTableQueryMetricQuery"
                },
                "processQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestScatterplotTableQueryProcessQuery:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestScatterplotTableQueryProcessQuery"
                },
                "sloQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestScatterplotTableQuerySloQuery:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestScatterplotTableQuerySloQuery"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestScatterplotTableQueryApmDependencyStatsQuery:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestScatterplotTableQueryApmDependencyStatsQuery": {
            "properties": {
                "dataSource": {
                    "type": "string"
                },
                "env": {
                    "type": "string"
                },
                "isUpstream": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "operationName": {
                    "type": "string"
                },
                "primaryTagName": {
                    "type": "string"
                },
                "primaryTagValue": {
                    "type": "string"
                },
                "resourceName": {
                    "type": "string"
                },
                "service": {
                    "type": "string"
                },
                "stat": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "dataSource",
                "env",
                "name",
                "operationName",
                "resourceName",
                "service",
                "stat"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestScatterplotTableQueryApmResourceStatsQuery:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestScatterplotTableQueryApmResourceStatsQuery": {
            "properties": {
                "dataSource": {
                    "type": "string"
                },
                "env": {
                    "type": "string"
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "name": {
                    "type": "string"
                },
                "operationName": {
                    "type": "string"
                },
                "primaryTagName": {
                    "type": "string"
                },
                "primaryTagValue": {
                    "type": "string"
                },
                "resourceName": {
                    "type": "string"
                },
                "service": {
                    "type": "string"
                },
                "stat": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "dataSource",
                "env",
                "name",
                "service",
                "stat"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestScatterplotTableQueryEventQuery:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestScatterplotTableQueryEventQuery": {
            "properties": {
                "computes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestScatterplotTableQueryEventQueryCompute:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestScatterplotTableQueryEventQueryCompute"
                    }
                },
                "dataSource": {
                    "type": "string"
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestScatterplotTableQueryEventQueryGroupBy:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestScatterplotTableQueryEventQueryGroupBy"
                    }
                },
                "indexes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "name": {
                    "type": "string"
                },
                "search": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestScatterplotTableQueryEventQuerySearch:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestScatterplotTableQueryEventQuerySearch"
                },
                "storage": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "computes",
                "dataSource",
                "name"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestScatterplotTableQueryEventQueryCompute:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestScatterplotTableQueryEventQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "interval": {
                    "type": "integer"
                },
                "metric": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestScatterplotTableQueryEventQueryGroupBy:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestScatterplotTableQueryEventQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string"
                },
                "limit": {
                    "type": "integer"
                },
                "sort": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestScatterplotTableQueryEventQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestScatterplotTableQueryEventQueryGroupBySort"
                }
            },
            "type": "object",
            "required": [
                "facet"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestScatterplotTableQueryEventQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestScatterplotTableQueryEventQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "metric": {
                    "type": "string"
                },
                "order": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestScatterplotTableQueryEventQuerySearch:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestScatterplotTableQueryEventQuerySearch": {
            "properties": {
                "query": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestScatterplotTableQueryMetricQuery:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestScatterplotTableQueryMetricQuery": {
            "properties": {
                "aggregator": {
                    "type": "string"
                },
                "dataSource": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "query": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "name",
                "query"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestScatterplotTableQueryProcessQuery:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestScatterplotTableQueryProcessQuery": {
            "properties": {
                "aggregator": {
                    "type": "string"
                },
                "dataSource": {
                    "type": "string"
                },
                "isNormalizedCpu": {
                    "type": "boolean"
                },
                "limit": {
                    "type": "integer"
                },
                "metric": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "sort": {
                    "type": "string"
                },
                "tagFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "textFilter": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "dataSource",
                "metric",
                "name"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestScatterplotTableQuerySloQuery:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestScatterplotTableQuerySloQuery": {
            "properties": {
                "dataSource": {
                    "type": "string"
                },
                "groupMode": {
                    "type": "string"
                },
                "measure": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "sloId": {
                    "type": "string"
                },
                "sloQueryType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "dataSource",
                "measure",
                "sloId"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestX:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestX": {
            "properties": {
                "aggregator": {
                    "type": "string"
                },
                "apmQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXApmQuery:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXApmQuery"
                },
                "logQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXLogQuery:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXLogQuery"
                },
                "processQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXProcessQuery:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXProcessQuery"
                },
                "q": {
                    "type": "string"
                },
                "rumQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXRumQuery:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXRumQuery"
                },
                "securityQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXSecurityQuery:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXSecurityQuery"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXApmQuery:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXApmQuery": {
            "properties": {
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXApmQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXApmQueryComputeQuery"
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXApmQueryGroupBy:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXApmQueryGroupBy"
                    }
                },
                "index": {
                    "type": "string"
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXApmQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXApmQueryMultiCompute"
                    }
                },
                "searchQuery": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXApmQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXApmQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "interval": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXApmQueryGroupBy:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXApmQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string"
                },
                "limit": {
                    "type": "integer"
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXApmQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXApmQueryGroupBySortQuery"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXApmQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXApmQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "order": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXApmQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXApmQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "interval": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXLogQuery:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXLogQuery": {
            "properties": {
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXLogQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXLogQueryComputeQuery"
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXLogQueryGroupBy:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXLogQueryGroupBy"
                    }
                },
                "index": {
                    "type": "string"
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXLogQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXLogQueryMultiCompute"
                    }
                },
                "searchQuery": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXLogQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXLogQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "interval": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXLogQueryGroupBy:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXLogQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string"
                },
                "limit": {
                    "type": "integer"
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXLogQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXLogQueryGroupBySortQuery"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXLogQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXLogQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "order": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXLogQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXLogQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "interval": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXProcessQuery:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXProcessQuery": {
            "properties": {
                "filterBies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "limit": {
                    "type": "integer"
                },
                "metric": {
                    "type": "string"
                },
                "searchBy": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "metric"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXRumQuery:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXRumQuery": {
            "properties": {
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXRumQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXRumQueryComputeQuery"
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXRumQueryGroupBy:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXRumQueryGroupBy"
                    }
                },
                "index": {
                    "type": "string"
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXRumQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXRumQueryMultiCompute"
                    }
                },
                "searchQuery": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXRumQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXRumQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "interval": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXRumQueryGroupBy:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXRumQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string"
                },
                "limit": {
                    "type": "integer"
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXRumQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXRumQueryGroupBySortQuery"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXRumQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXRumQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "order": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXRumQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXRumQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "interval": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXSecurityQuery:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXSecurityQuery": {
            "properties": {
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXSecurityQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXSecurityQueryComputeQuery"
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXSecurityQueryGroupBy:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXSecurityQueryGroupBy"
                    }
                },
                "index": {
                    "type": "string"
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXSecurityQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXSecurityQueryMultiCompute"
                    }
                },
                "searchQuery": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXSecurityQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXSecurityQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "interval": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXSecurityQueryGroupBy:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXSecurityQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string"
                },
                "limit": {
                    "type": "integer"
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXSecurityQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXSecurityQueryGroupBySortQuery"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXSecurityQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXSecurityQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "order": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXSecurityQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXSecurityQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "interval": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestY:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestY": {
            "properties": {
                "aggregator": {
                    "type": "string"
                },
                "apmQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYApmQuery:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYApmQuery"
                },
                "logQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYLogQuery:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYLogQuery"
                },
                "processQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYProcessQuery:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYProcessQuery"
                },
                "q": {
                    "type": "string"
                },
                "rumQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYRumQuery:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYRumQuery"
                },
                "securityQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYSecurityQuery:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYSecurityQuery"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYApmQuery:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYApmQuery": {
            "properties": {
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYApmQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYApmQueryComputeQuery"
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYApmQueryGroupBy:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYApmQueryGroupBy"
                    }
                },
                "index": {
                    "type": "string"
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYApmQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYApmQueryMultiCompute"
                    }
                },
                "searchQuery": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYApmQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYApmQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "interval": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYApmQueryGroupBy:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYApmQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string"
                },
                "limit": {
                    "type": "integer"
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYApmQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYApmQueryGroupBySortQuery"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYApmQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYApmQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "order": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYApmQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYApmQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "interval": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYLogQuery:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYLogQuery": {
            "properties": {
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYLogQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYLogQueryComputeQuery"
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYLogQueryGroupBy:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYLogQueryGroupBy"
                    }
                },
                "index": {
                    "type": "string"
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYLogQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYLogQueryMultiCompute"
                    }
                },
                "searchQuery": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYLogQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYLogQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "interval": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYLogQueryGroupBy:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYLogQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string"
                },
                "limit": {
                    "type": "integer"
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYLogQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYLogQueryGroupBySortQuery"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYLogQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYLogQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "order": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYLogQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYLogQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "interval": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYProcessQuery:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYProcessQuery": {
            "properties": {
                "filterBies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "limit": {
                    "type": "integer"
                },
                "metric": {
                    "type": "string"
                },
                "searchBy": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "metric"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYRumQuery:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYRumQuery": {
            "properties": {
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYRumQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYRumQueryComputeQuery"
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYRumQueryGroupBy:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYRumQueryGroupBy"
                    }
                },
                "index": {
                    "type": "string"
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYRumQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYRumQueryMultiCompute"
                    }
                },
                "searchQuery": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYRumQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYRumQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "interval": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYRumQueryGroupBy:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYRumQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string"
                },
                "limit": {
                    "type": "integer"
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYRumQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYRumQueryGroupBySortQuery"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYRumQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYRumQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "order": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYRumQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYRumQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "interval": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYSecurityQuery:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYSecurityQuery": {
            "properties": {
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYSecurityQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYSecurityQueryComputeQuery"
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYSecurityQueryGroupBy:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYSecurityQueryGroupBy"
                    }
                },
                "index": {
                    "type": "string"
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYSecurityQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYSecurityQueryMultiCompute"
                    }
                },
                "searchQuery": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYSecurityQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYSecurityQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "interval": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYSecurityQueryGroupBy:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYSecurityQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string"
                },
                "limit": {
                    "type": "integer"
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYSecurityQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYSecurityQueryGroupBySortQuery"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYSecurityQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYSecurityQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "order": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYSecurityQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYSecurityQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "interval": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionXaxis:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionXaxis": {
            "properties": {
                "includeZero": {
                    "type": "boolean"
                },
                "label": {
                    "type": "string"
                },
                "max": {
                    "type": "string"
                },
                "min": {
                    "type": "string"
                },
                "scale": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionYaxis:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionYaxis": {
            "properties": {
                "includeZero": {
                    "type": "boolean"
                },
                "label": {
                    "type": "string"
                },
                "max": {
                    "type": "string"
                },
                "min": {
                    "type": "string"
                },
                "scale": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetServiceLevelObjectiveDefinition:DashboardWidgetGroupDefinitionWidgetServiceLevelObjectiveDefinition": {
            "properties": {
                "additionalQueryFilters": {
                    "type": "string"
                },
                "globalTimeTarget": {
                    "type": "string"
                },
                "showErrorBudget": {
                    "type": "boolean"
                },
                "sloId": {
                    "type": "string"
                },
                "timeWindows": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "title": {
                    "type": "string",
                    "description": "The title of the dashboard.\n"
                },
                "titleAlign": {
                    "type": "string"
                },
                "titleSize": {
                    "type": "string"
                },
                "viewMode": {
                    "type": "string"
                },
                "viewType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "sloId",
                "timeWindows",
                "viewMode",
                "viewType"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetServicemapDefinition:DashboardWidgetGroupDefinitionWidgetServicemapDefinition": {
            "properties": {
                "customLinks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetServicemapDefinitionCustomLink:DashboardWidgetGroupDefinitionWidgetServicemapDefinitionCustomLink"
                    }
                },
                "filters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "service": {
                    "type": "string"
                },
                "title": {
                    "type": "string",
                    "description": "The title of the dashboard.\n"
                },
                "titleAlign": {
                    "type": "string"
                },
                "titleSize": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "filters",
                "service"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetServicemapDefinitionCustomLink:DashboardWidgetGroupDefinitionWidgetServicemapDefinitionCustomLink": {
            "properties": {
                "isHidden": {
                    "type": "boolean"
                },
                "label": {
                    "type": "string"
                },
                "link": {
                    "type": "string"
                },
                "overrideLabel": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetSloListDefinition:DashboardWidgetGroupDefinitionWidgetSloListDefinition": {
            "properties": {
                "request": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetSloListDefinitionRequest:DashboardWidgetGroupDefinitionWidgetSloListDefinitionRequest"
                },
                "title": {
                    "type": "string",
                    "description": "The title of the dashboard.\n"
                },
                "titleAlign": {
                    "type": "string"
                },
                "titleSize": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "request"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetSloListDefinitionRequest:DashboardWidgetGroupDefinitionWidgetSloListDefinitionRequest": {
            "properties": {
                "query": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetSloListDefinitionRequestQuery:DashboardWidgetGroupDefinitionWidgetSloListDefinitionRequestQuery"
                },
                "requestType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "query",
                "requestType"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetSloListDefinitionRequestQuery:DashboardWidgetGroupDefinitionWidgetSloListDefinitionRequestQuery": {
            "properties": {
                "limit": {
                    "type": "integer"
                },
                "queryString": {
                    "type": "string"
                },
                "sort": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetSloListDefinitionRequestQuerySort:DashboardWidgetGroupDefinitionWidgetSloListDefinitionRequestQuerySort"
                }
            },
            "type": "object",
            "required": [
                "queryString"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetSloListDefinitionRequestQuerySort:DashboardWidgetGroupDefinitionWidgetSloListDefinitionRequestQuerySort": {
            "properties": {
                "column": {
                    "type": "string"
                },
                "order": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "column",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetSunburstDefinition:DashboardWidgetGroupDefinitionWidgetSunburstDefinition": {
            "properties": {
                "customLinks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetSunburstDefinitionCustomLink:DashboardWidgetGroupDefinitionWidgetSunburstDefinitionCustomLink"
                    }
                },
                "hideTotal": {
                    "type": "boolean"
                },
                "legendInline": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetSunburstDefinitionLegendInline:DashboardWidgetGroupDefinitionWidgetSunburstDefinitionLegendInline"
                },
                "legendTable": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetSunburstDefinitionLegendTable:DashboardWidgetGroupDefinitionWidgetSunburstDefinitionLegendTable"
                },
                "liveSpan": {
                    "type": "string"
                },
                "requests": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetSunburstDefinitionRequest:DashboardWidgetGroupDefinitionWidgetSunburstDefinitionRequest"
                    }
                },
                "title": {
                    "type": "string",
                    "description": "The title of the dashboard.\n"
                },
                "titleAlign": {
                    "type": "string"
                },
                "titleSize": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetSunburstDefinitionCustomLink:DashboardWidgetGroupDefinitionWidgetSunburstDefinitionCustomLink": {
            "properties": {
                "isHidden": {
                    "type": "boolean"
                },
                "label": {
                    "type": "string"
                },
                "link": {
                    "type": "string"
                },
                "overrideLabel": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetSunburstDefinitionLegendInline:DashboardWidgetGroupDefinitionWidgetSunburstDefinitionLegendInline": {
            "properties": {
                "hidePercent": {
                    "type": "boolean"
                },
                "hideValue": {
                    "type": "boolean"
                },
                "type": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "type"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetSunburstDefinitionLegendTable:DashboardWidgetGroupDefinitionWidgetSunburstDefinitionLegendTable": {
            "properties": {
                "type": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "type"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetSunburstDefinitionRequest:DashboardWidgetGroupDefinitionWidgetSunburstDefinitionRequest": {
            "properties": {
                "apmQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetSunburstDefinitionRequestApmQuery:DashboardWidgetGroupDefinitionWidgetSunburstDefinitionRequestApmQuery"
                },
                "auditQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetSunburstDefinitionRequestAuditQuery:DashboardWidgetGroupDefinitionWidgetSunburstDefinitionRequestAuditQuery"
                },
                "formulas": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetSunburstDefinitionRequestFormula:DashboardWidgetGroupDefinitionWidgetSunburstDefinitionRequestFormula"
                    }
                },
                "logQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetSunburstDefinitionRequestLogQuery:DashboardWidgetGroupDefinitionWidgetSunburstDefinitionRequestLogQuery"
                },
                "networkQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetSunburstDefinitionRequestNetworkQuery:DashboardWidgetGroupDefinitionWidgetSunburstDefinitionRequestNetworkQuery"
                },
                "processQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetSunburstDefinitionRequestProcessQuery:DashboardWidgetGroupDefinitionWidgetSunburstDefinitionRequestProcessQuery"
                },
                "q": {
                    "type": "string"
                },
                "queries": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetSunburstDefinitionRequestQuery:DashboardWidgetGroupDefinitionWidgetSunburstDefinitionRequestQuery"
                    }
                },
                "rumQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetSunburstDefinitionRequestRumQuery:DashboardWidgetGroupDefinitionWidgetSunburstDefinitionRequestRumQuery"
                },
                "securityQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetSunburstDefinitionRequestSecurityQuery:DashboardWidgetGroupDefinitionWidgetSunburstDefinitionRequestSecurityQuery"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetSunburstDefinitionRequestApmQuery:DashboardWidgetGroupDefinitionWidgetSunburstDefinitionRequestApmQuery": {
            "properties": {
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetSunburstDefinitionRequestApmQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetSunburstDefinitionRequestApmQueryComputeQuery"
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetSunburstDefinitionRequestApmQueryGroupBy:DashboardWidgetGroupDefinitionWidgetSunburstDefinitionRequestApmQueryGroupBy"
                    }
                },
                "index": {
                    "type": "string"
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetSunburstDefinitionRequestApmQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetSunburstDefinitionRequestApmQueryMultiCompute"
                    }
                },
                "searchQuery": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetSunburstDefinitionRequestApmQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetSunburstDefinitionRequestApmQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "interval": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetSunburstDefinitionRequestApmQueryGroupBy:DashboardWidgetGroupDefinitionWidgetSunburstDefinitionRequestApmQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string"
                },
                "limit": {
                    "type": "integer"
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetSunburstDefinitionRequestApmQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetSunburstDefinitionRequestApmQueryGroupBySortQuery"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetSunburstDefinitionRequestApmQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetSunburstDefinitionRequestApmQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "order": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetSunburstDefinitionRequestApmQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetSunburstDefinitionRequestApmQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "interval": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetSunburstDefinitionRequestAuditQuery:DashboardWidgetGroupDefinitionWidgetSunburstDefinitionRequestAuditQuery": {
            "properties": {
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetSunburstDefinitionRequestAuditQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetSunburstDefinitionRequestAuditQueryComputeQuery"
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetSunburstDefinitionRequestAuditQueryGroupBy:DashboardWidgetGroupDefinitionWidgetSunburstDefinitionRequestAuditQueryGroupBy"
                    }
                },
                "index": {
                    "type": "string"
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetSunburstDefinitionRequestAuditQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetSunburstDefinitionRequestAuditQueryMultiCompute"
                    }
                },
                "searchQuery": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetSunburstDefinitionRequestAuditQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetSunburstDefinitionRequestAuditQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "interval": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetSunburstDefinitionRequestAuditQueryGroupBy:DashboardWidgetGroupDefinitionWidgetSunburstDefinitionRequestAuditQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string"
                },
                "limit": {
                    "type": "integer"
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetSunburstDefinitionRequestAuditQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetSunburstDefinitionRequestAuditQueryGroupBySortQuery"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetSunburstDefinitionRequestAuditQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetSunburstDefinitionRequestAuditQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "order": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetSunburstDefinitionRequestAuditQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetSunburstDefinitionRequestAuditQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "interval": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetSunburstDefinitionRequestFormula:DashboardWidgetGroupDefinitionWidgetSunburstDefinitionRequestFormula": {
            "properties": {
                "alias": {
                    "type": "string"
                },
                "cellDisplayMode": {
                    "type": "string"
                },
                "conditionalFormats": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetSunburstDefinitionRequestFormulaConditionalFormat:DashboardWidgetGroupDefinitionWidgetSunburstDefinitionRequestFormulaConditionalFormat"
                    }
                },
                "formulaExpression": {
                    "type": "string"
                },
                "limit": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetSunburstDefinitionRequestFormulaLimit:DashboardWidgetGroupDefinitionWidgetSunburstDefinitionRequestFormulaLimit"
                },
                "style": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetSunburstDefinitionRequestFormulaStyle:DashboardWidgetGroupDefinitionWidgetSunburstDefinitionRequestFormulaStyle"
                }
            },
            "type": "object",
            "required": [
                "formulaExpression"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetSunburstDefinitionRequestFormulaConditionalFormat:DashboardWidgetGroupDefinitionWidgetSunburstDefinitionRequestFormulaConditionalFormat": {
            "properties": {
                "comparator": {
                    "type": "string"
                },
                "customBgColor": {
                    "type": "string"
                },
                "customFgColor": {
                    "type": "string"
                },
                "hideValue": {
                    "type": "boolean"
                },
                "imageUrl": {
                    "type": "string"
                },
                "metric": {
                    "type": "string"
                },
                "palette": {
                    "type": "string"
                },
                "timeframe": {
                    "type": "string"
                },
                "value": {
                    "type": "number"
                }
            },
            "type": "object",
            "required": [
                "comparator",
                "palette",
                "value"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetSunburstDefinitionRequestFormulaLimit:DashboardWidgetGroupDefinitionWidgetSunburstDefinitionRequestFormulaLimit": {
            "properties": {
                "count": {
                    "type": "integer"
                },
                "order": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetSunburstDefinitionRequestFormulaStyle:DashboardWidgetGroupDefinitionWidgetSunburstDefinitionRequestFormulaStyle": {
            "properties": {
                "palette": {
                    "type": "string"
                },
                "paletteIndex": {
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetSunburstDefinitionRequestLogQuery:DashboardWidgetGroupDefinitionWidgetSunburstDefinitionRequestLogQuery": {
            "properties": {
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetSunburstDefinitionRequestLogQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetSunburstDefinitionRequestLogQueryComputeQuery"
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetSunburstDefinitionRequestLogQueryGroupBy:DashboardWidgetGroupDefinitionWidgetSunburstDefinitionRequestLogQueryGroupBy"
                    }
                },
                "index": {
                    "type": "string"
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetSunburstDefinitionRequestLogQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetSunburstDefinitionRequestLogQueryMultiCompute"
                    }
                },
                "searchQuery": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetSunburstDefinitionRequestLogQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetSunburstDefinitionRequestLogQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "interval": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetSunburstDefinitionRequestLogQueryGroupBy:DashboardWidgetGroupDefinitionWidgetSunburstDefinitionRequestLogQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string"
                },
                "limit": {
                    "type": "integer"
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetSunburstDefinitionRequestLogQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetSunburstDefinitionRequestLogQueryGroupBySortQuery"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetSunburstDefinitionRequestLogQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetSunburstDefinitionRequestLogQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "order": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetSunburstDefinitionRequestLogQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetSunburstDefinitionRequestLogQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "interval": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetSunburstDefinitionRequestNetworkQuery:DashboardWidgetGroupDefinitionWidgetSunburstDefinitionRequestNetworkQuery": {
            "properties": {
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetSunburstDefinitionRequestNetworkQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetSunburstDefinitionRequestNetworkQueryComputeQuery"
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetSunburstDefinitionRequestNetworkQueryGroupBy:DashboardWidgetGroupDefinitionWidgetSunburstDefinitionRequestNetworkQueryGroupBy"
                    }
                },
                "index": {
                    "type": "string"
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetSunburstDefinitionRequestNetworkQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetSunburstDefinitionRequestNetworkQueryMultiCompute"
                    }
                },
                "searchQuery": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetSunburstDefinitionRequestNetworkQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetSunburstDefinitionRequestNetworkQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "interval": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetSunburstDefinitionRequestNetworkQueryGroupBy:DashboardWidgetGroupDefinitionWidgetSunburstDefinitionRequestNetworkQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string"
                },
                "limit": {
                    "type": "integer"
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetSunburstDefinitionRequestNetworkQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetSunburstDefinitionRequestNetworkQueryGroupBySortQuery"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetSunburstDefinitionRequestNetworkQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetSunburstDefinitionRequestNetworkQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "order": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetSunburstDefinitionRequestNetworkQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetSunburstDefinitionRequestNetworkQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "interval": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetSunburstDefinitionRequestProcessQuery:DashboardWidgetGroupDefinitionWidgetSunburstDefinitionRequestProcessQuery": {
            "properties": {
                "filterBies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "limit": {
                    "type": "integer"
                },
                "metric": {
                    "type": "string"
                },
                "searchBy": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "metric"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetSunburstDefinitionRequestQuery:DashboardWidgetGroupDefinitionWidgetSunburstDefinitionRequestQuery": {
            "properties": {
                "apmDependencyStatsQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetSunburstDefinitionRequestQueryApmDependencyStatsQuery:DashboardWidgetGroupDefinitionWidgetSunburstDefinitionRequestQueryApmDependencyStatsQuery"
                },
                "apmResourceStatsQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetSunburstDefinitionRequestQueryApmResourceStatsQuery:DashboardWidgetGroupDefinitionWidgetSunburstDefinitionRequestQueryApmResourceStatsQuery"
                },
                "eventQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetSunburstDefinitionRequestQueryEventQuery:DashboardWidgetGroupDefinitionWidgetSunburstDefinitionRequestQueryEventQuery"
                },
                "metricQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetSunburstDefinitionRequestQueryMetricQuery:DashboardWidgetGroupDefinitionWidgetSunburstDefinitionRequestQueryMetricQuery"
                },
                "processQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetSunburstDefinitionRequestQueryProcessQuery:DashboardWidgetGroupDefinitionWidgetSunburstDefinitionRequestQueryProcessQuery"
                },
                "sloQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetSunburstDefinitionRequestQuerySloQuery:DashboardWidgetGroupDefinitionWidgetSunburstDefinitionRequestQuerySloQuery"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetSunburstDefinitionRequestQueryApmDependencyStatsQuery:DashboardWidgetGroupDefinitionWidgetSunburstDefinitionRequestQueryApmDependencyStatsQuery": {
            "properties": {
                "dataSource": {
                    "type": "string"
                },
                "env": {
                    "type": "string"
                },
                "isUpstream": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "operationName": {
                    "type": "string"
                },
                "primaryTagName": {
                    "type": "string"
                },
                "primaryTagValue": {
                    "type": "string"
                },
                "resourceName": {
                    "type": "string"
                },
                "service": {
                    "type": "string"
                },
                "stat": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "dataSource",
                "env",
                "name",
                "operationName",
                "resourceName",
                "service",
                "stat"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetSunburstDefinitionRequestQueryApmResourceStatsQuery:DashboardWidgetGroupDefinitionWidgetSunburstDefinitionRequestQueryApmResourceStatsQuery": {
            "properties": {
                "dataSource": {
                    "type": "string"
                },
                "env": {
                    "type": "string"
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "name": {
                    "type": "string"
                },
                "operationName": {
                    "type": "string"
                },
                "primaryTagName": {
                    "type": "string"
                },
                "primaryTagValue": {
                    "type": "string"
                },
                "resourceName": {
                    "type": "string"
                },
                "service": {
                    "type": "string"
                },
                "stat": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "dataSource",
                "env",
                "name",
                "service",
                "stat"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetSunburstDefinitionRequestQueryEventQuery:DashboardWidgetGroupDefinitionWidgetSunburstDefinitionRequestQueryEventQuery": {
            "properties": {
                "computes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetSunburstDefinitionRequestQueryEventQueryCompute:DashboardWidgetGroupDefinitionWidgetSunburstDefinitionRequestQueryEventQueryCompute"
                    }
                },
                "dataSource": {
                    "type": "string"
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetSunburstDefinitionRequestQueryEventQueryGroupBy:DashboardWidgetGroupDefinitionWidgetSunburstDefinitionRequestQueryEventQueryGroupBy"
                    }
                },
                "indexes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "name": {
                    "type": "string"
                },
                "search": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetSunburstDefinitionRequestQueryEventQuerySearch:DashboardWidgetGroupDefinitionWidgetSunburstDefinitionRequestQueryEventQuerySearch"
                },
                "storage": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "computes",
                "dataSource",
                "name"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetSunburstDefinitionRequestQueryEventQueryCompute:DashboardWidgetGroupDefinitionWidgetSunburstDefinitionRequestQueryEventQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "interval": {
                    "type": "integer"
                },
                "metric": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetSunburstDefinitionRequestQueryEventQueryGroupBy:DashboardWidgetGroupDefinitionWidgetSunburstDefinitionRequestQueryEventQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string"
                },
                "limit": {
                    "type": "integer"
                },
                "sort": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetSunburstDefinitionRequestQueryEventQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetSunburstDefinitionRequestQueryEventQueryGroupBySort"
                }
            },
            "type": "object",
            "required": [
                "facet"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetSunburstDefinitionRequestQueryEventQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetSunburstDefinitionRequestQueryEventQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "metric": {
                    "type": "string"
                },
                "order": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetSunburstDefinitionRequestQueryEventQuerySearch:DashboardWidgetGroupDefinitionWidgetSunburstDefinitionRequestQueryEventQuerySearch": {
            "properties": {
                "query": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetSunburstDefinitionRequestQueryMetricQuery:DashboardWidgetGroupDefinitionWidgetSunburstDefinitionRequestQueryMetricQuery": {
            "properties": {
                "aggregator": {
                    "type": "string"
                },
                "dataSource": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "query": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "name",
                "query"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetSunburstDefinitionRequestQueryProcessQuery:DashboardWidgetGroupDefinitionWidgetSunburstDefinitionRequestQueryProcessQuery": {
            "properties": {
                "aggregator": {
                    "type": "string"
                },
                "dataSource": {
                    "type": "string"
                },
                "isNormalizedCpu": {
                    "type": "boolean"
                },
                "limit": {
                    "type": "integer"
                },
                "metric": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "sort": {
                    "type": "string"
                },
                "tagFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "textFilter": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "dataSource",
                "metric",
                "name"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetSunburstDefinitionRequestQuerySloQuery:DashboardWidgetGroupDefinitionWidgetSunburstDefinitionRequestQuerySloQuery": {
            "properties": {
                "dataSource": {
                    "type": "string"
                },
                "groupMode": {
                    "type": "string"
                },
                "measure": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "sloId": {
                    "type": "string"
                },
                "sloQueryType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "dataSource",
                "measure",
                "sloId"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetSunburstDefinitionRequestRumQuery:DashboardWidgetGroupDefinitionWidgetSunburstDefinitionRequestRumQuery": {
            "properties": {
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetSunburstDefinitionRequestRumQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetSunburstDefinitionRequestRumQueryComputeQuery"
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetSunburstDefinitionRequestRumQueryGroupBy:DashboardWidgetGroupDefinitionWidgetSunburstDefinitionRequestRumQueryGroupBy"
                    }
                },
                "index": {
                    "type": "string"
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetSunburstDefinitionRequestRumQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetSunburstDefinitionRequestRumQueryMultiCompute"
                    }
                },
                "searchQuery": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetSunburstDefinitionRequestRumQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetSunburstDefinitionRequestRumQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "interval": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetSunburstDefinitionRequestRumQueryGroupBy:DashboardWidgetGroupDefinitionWidgetSunburstDefinitionRequestRumQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string"
                },
                "limit": {
                    "type": "integer"
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetSunburstDefinitionRequestRumQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetSunburstDefinitionRequestRumQueryGroupBySortQuery"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetSunburstDefinitionRequestRumQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetSunburstDefinitionRequestRumQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "order": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetSunburstDefinitionRequestRumQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetSunburstDefinitionRequestRumQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "interval": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetSunburstDefinitionRequestSecurityQuery:DashboardWidgetGroupDefinitionWidgetSunburstDefinitionRequestSecurityQuery": {
            "properties": {
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetSunburstDefinitionRequestSecurityQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetSunburstDefinitionRequestSecurityQueryComputeQuery"
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetSunburstDefinitionRequestSecurityQueryGroupBy:DashboardWidgetGroupDefinitionWidgetSunburstDefinitionRequestSecurityQueryGroupBy"
                    }
                },
                "index": {
                    "type": "string"
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetSunburstDefinitionRequestSecurityQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetSunburstDefinitionRequestSecurityQueryMultiCompute"
                    }
                },
                "searchQuery": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetSunburstDefinitionRequestSecurityQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetSunburstDefinitionRequestSecurityQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "interval": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetSunburstDefinitionRequestSecurityQueryGroupBy:DashboardWidgetGroupDefinitionWidgetSunburstDefinitionRequestSecurityQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string"
                },
                "limit": {
                    "type": "integer"
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetSunburstDefinitionRequestSecurityQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetSunburstDefinitionRequestSecurityQueryGroupBySortQuery"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetSunburstDefinitionRequestSecurityQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetSunburstDefinitionRequestSecurityQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "order": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetSunburstDefinitionRequestSecurityQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetSunburstDefinitionRequestSecurityQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "interval": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinition:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinition": {
            "properties": {
                "customLinks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionCustomLink:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionCustomLink"
                    }
                },
                "events": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionEvent:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionEvent"
                    }
                },
                "legendColumns": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "legendLayout": {
                    "type": "string"
                },
                "legendSize": {
                    "type": "string"
                },
                "liveSpan": {
                    "type": "string"
                },
                "markers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionMarker:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionMarker"
                    }
                },
                "requests": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequest:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequest"
                    }
                },
                "rightYaxis": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRightYaxis:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRightYaxis"
                },
                "showLegend": {
                    "type": "boolean"
                },
                "title": {
                    "type": "string",
                    "description": "The title of the dashboard.\n"
                },
                "titleAlign": {
                    "type": "string"
                },
                "titleSize": {
                    "type": "string"
                },
                "yaxis": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionYaxis:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionYaxis"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionCustomLink:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionCustomLink": {
            "properties": {
                "isHidden": {
                    "type": "boolean"
                },
                "label": {
                    "type": "string"
                },
                "link": {
                    "type": "string"
                },
                "overrideLabel": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionEvent:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionEvent": {
            "properties": {
                "q": {
                    "type": "string"
                },
                "tagsExecution": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "q"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionMarker:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionMarker": {
            "properties": {
                "displayType": {
                    "type": "string"
                },
                "label": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "value"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequest:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequest": {
            "properties": {
                "apmQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestApmQuery:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestApmQuery"
                },
                "auditQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestAuditQuery:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestAuditQuery"
                },
                "displayType": {
                    "type": "string"
                },
                "formulas": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestFormula:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestFormula"
                    }
                },
                "logQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestLogQuery:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestLogQuery"
                },
                "metadatas": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestMetadata:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestMetadata"
                    }
                },
                "networkQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestNetworkQuery:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestNetworkQuery"
                },
                "onRightYaxis": {
                    "type": "boolean"
                },
                "processQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestProcessQuery:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestProcessQuery"
                },
                "q": {
                    "type": "string"
                },
                "queries": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestQuery:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestQuery"
                    }
                },
                "rumQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestRumQuery:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestRumQuery"
                },
                "securityQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestSecurityQuery:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestSecurityQuery"
                },
                "style": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestStyle:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestStyle"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestApmQuery:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestApmQuery": {
            "properties": {
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestApmQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestApmQueryComputeQuery"
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestApmQueryGroupBy:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestApmQueryGroupBy"
                    }
                },
                "index": {
                    "type": "string"
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestApmQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestApmQueryMultiCompute"
                    }
                },
                "searchQuery": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestApmQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestApmQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "interval": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestApmQueryGroupBy:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestApmQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string"
                },
                "limit": {
                    "type": "integer"
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestApmQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestApmQueryGroupBySortQuery"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestApmQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestApmQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "order": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestApmQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestApmQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "interval": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestAuditQuery:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestAuditQuery": {
            "properties": {
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestAuditQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestAuditQueryComputeQuery"
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestAuditQueryGroupBy:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestAuditQueryGroupBy"
                    }
                },
                "index": {
                    "type": "string"
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestAuditQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestAuditQueryMultiCompute"
                    }
                },
                "searchQuery": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestAuditQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestAuditQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "interval": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestAuditQueryGroupBy:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestAuditQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string"
                },
                "limit": {
                    "type": "integer"
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestAuditQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestAuditQueryGroupBySortQuery"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestAuditQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestAuditQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "order": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestAuditQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestAuditQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "interval": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestFormula:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestFormula": {
            "properties": {
                "alias": {
                    "type": "string"
                },
                "cellDisplayMode": {
                    "type": "string"
                },
                "conditionalFormats": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestFormulaConditionalFormat:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestFormulaConditionalFormat"
                    }
                },
                "formulaExpression": {
                    "type": "string"
                },
                "limit": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestFormulaLimit:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestFormulaLimit"
                },
                "style": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestFormulaStyle:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestFormulaStyle"
                }
            },
            "type": "object",
            "required": [
                "formulaExpression"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestFormulaConditionalFormat:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestFormulaConditionalFormat": {
            "properties": {
                "comparator": {
                    "type": "string"
                },
                "customBgColor": {
                    "type": "string"
                },
                "customFgColor": {
                    "type": "string"
                },
                "hideValue": {
                    "type": "boolean"
                },
                "imageUrl": {
                    "type": "string"
                },
                "metric": {
                    "type": "string"
                },
                "palette": {
                    "type": "string"
                },
                "timeframe": {
                    "type": "string"
                },
                "value": {
                    "type": "number"
                }
            },
            "type": "object",
            "required": [
                "comparator",
                "palette",
                "value"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestFormulaLimit:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestFormulaLimit": {
            "properties": {
                "count": {
                    "type": "integer"
                },
                "order": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestFormulaStyle:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestFormulaStyle": {
            "properties": {
                "palette": {
                    "type": "string"
                },
                "paletteIndex": {
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestLogQuery:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestLogQuery": {
            "properties": {
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestLogQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestLogQueryComputeQuery"
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestLogQueryGroupBy:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestLogQueryGroupBy"
                    }
                },
                "index": {
                    "type": "string"
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestLogQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestLogQueryMultiCompute"
                    }
                },
                "searchQuery": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestLogQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestLogQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "interval": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestLogQueryGroupBy:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestLogQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string"
                },
                "limit": {
                    "type": "integer"
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestLogQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestLogQueryGroupBySortQuery"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestLogQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestLogQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "order": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestLogQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestLogQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "interval": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestMetadata:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestMetadata": {
            "properties": {
                "aliasName": {
                    "type": "string"
                },
                "expression": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "expression"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestNetworkQuery:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestNetworkQuery": {
            "properties": {
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestNetworkQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestNetworkQueryComputeQuery"
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestNetworkQueryGroupBy:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestNetworkQueryGroupBy"
                    }
                },
                "index": {
                    "type": "string"
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestNetworkQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestNetworkQueryMultiCompute"
                    }
                },
                "searchQuery": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestNetworkQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestNetworkQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "interval": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestNetworkQueryGroupBy:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestNetworkQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string"
                },
                "limit": {
                    "type": "integer"
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestNetworkQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestNetworkQueryGroupBySortQuery"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestNetworkQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestNetworkQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "order": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestNetworkQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestNetworkQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "interval": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestProcessQuery:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestProcessQuery": {
            "properties": {
                "filterBies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "limit": {
                    "type": "integer"
                },
                "metric": {
                    "type": "string"
                },
                "searchBy": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "metric"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestQuery:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestQuery": {
            "properties": {
                "apmDependencyStatsQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestQueryApmDependencyStatsQuery:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestQueryApmDependencyStatsQuery"
                },
                "apmResourceStatsQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestQueryApmResourceStatsQuery:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestQueryApmResourceStatsQuery"
                },
                "eventQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestQueryEventQuery:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestQueryEventQuery"
                },
                "metricQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestQueryMetricQuery:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestQueryMetricQuery"
                },
                "processQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestQueryProcessQuery:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestQueryProcessQuery"
                },
                "sloQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestQuerySloQuery:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestQuerySloQuery"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestQueryApmDependencyStatsQuery:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestQueryApmDependencyStatsQuery": {
            "properties": {
                "dataSource": {
                    "type": "string"
                },
                "env": {
                    "type": "string"
                },
                "isUpstream": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "operationName": {
                    "type": "string"
                },
                "primaryTagName": {
                    "type": "string"
                },
                "primaryTagValue": {
                    "type": "string"
                },
                "resourceName": {
                    "type": "string"
                },
                "service": {
                    "type": "string"
                },
                "stat": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "dataSource",
                "env",
                "name",
                "operationName",
                "resourceName",
                "service",
                "stat"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestQueryApmResourceStatsQuery:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestQueryApmResourceStatsQuery": {
            "properties": {
                "dataSource": {
                    "type": "string"
                },
                "env": {
                    "type": "string"
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "name": {
                    "type": "string"
                },
                "operationName": {
                    "type": "string"
                },
                "primaryTagName": {
                    "type": "string"
                },
                "primaryTagValue": {
                    "type": "string"
                },
                "resourceName": {
                    "type": "string"
                },
                "service": {
                    "type": "string"
                },
                "stat": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "dataSource",
                "env",
                "name",
                "service",
                "stat"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestQueryEventQuery:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestQueryEventQuery": {
            "properties": {
                "computes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestQueryEventQueryCompute:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestQueryEventQueryCompute"
                    }
                },
                "dataSource": {
                    "type": "string"
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestQueryEventQueryGroupBy:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestQueryEventQueryGroupBy"
                    }
                },
                "indexes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "name": {
                    "type": "string"
                },
                "search": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestQueryEventQuerySearch:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestQueryEventQuerySearch"
                },
                "storage": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "computes",
                "dataSource",
                "name"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestQueryEventQueryCompute:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestQueryEventQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "interval": {
                    "type": "integer"
                },
                "metric": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestQueryEventQueryGroupBy:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestQueryEventQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string"
                },
                "limit": {
                    "type": "integer"
                },
                "sort": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestQueryEventQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestQueryEventQueryGroupBySort"
                }
            },
            "type": "object",
            "required": [
                "facet"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestQueryEventQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestQueryEventQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "metric": {
                    "type": "string"
                },
                "order": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestQueryEventQuerySearch:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestQueryEventQuerySearch": {
            "properties": {
                "query": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestQueryMetricQuery:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestQueryMetricQuery": {
            "properties": {
                "aggregator": {
                    "type": "string"
                },
                "dataSource": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "query": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "name",
                "query"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestQueryProcessQuery:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestQueryProcessQuery": {
            "properties": {
                "aggregator": {
                    "type": "string"
                },
                "dataSource": {
                    "type": "string"
                },
                "isNormalizedCpu": {
                    "type": "boolean"
                },
                "limit": {
                    "type": "integer"
                },
                "metric": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "sort": {
                    "type": "string"
                },
                "tagFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "textFilter": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "dataSource",
                "metric",
                "name"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestQuerySloQuery:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestQuerySloQuery": {
            "properties": {
                "dataSource": {
                    "type": "string"
                },
                "groupMode": {
                    "type": "string"
                },
                "measure": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "sloId": {
                    "type": "string"
                },
                "sloQueryType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "dataSource",
                "measure",
                "sloId"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestRumQuery:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestRumQuery": {
            "properties": {
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestRumQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestRumQueryComputeQuery"
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestRumQueryGroupBy:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestRumQueryGroupBy"
                    }
                },
                "index": {
                    "type": "string"
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestRumQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestRumQueryMultiCompute"
                    }
                },
                "searchQuery": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestRumQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestRumQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "interval": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestRumQueryGroupBy:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestRumQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string"
                },
                "limit": {
                    "type": "integer"
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestRumQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestRumQueryGroupBySortQuery"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestRumQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestRumQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "order": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestRumQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestRumQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "interval": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestSecurityQuery:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestSecurityQuery": {
            "properties": {
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestSecurityQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestSecurityQueryComputeQuery"
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestSecurityQueryGroupBy:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestSecurityQueryGroupBy"
                    }
                },
                "index": {
                    "type": "string"
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestSecurityQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestSecurityQueryMultiCompute"
                    }
                },
                "searchQuery": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestSecurityQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestSecurityQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "interval": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestSecurityQueryGroupBy:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestSecurityQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string"
                },
                "limit": {
                    "type": "integer"
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestSecurityQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestSecurityQueryGroupBySortQuery"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestSecurityQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestSecurityQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "order": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestSecurityQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestSecurityQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "interval": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestStyle:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestStyle": {
            "properties": {
                "lineType": {
                    "type": "string"
                },
                "lineWidth": {
                    "type": "string"
                },
                "palette": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRightYaxis:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRightYaxis": {
            "properties": {
                "includeZero": {
                    "type": "boolean"
                },
                "label": {
                    "type": "string"
                },
                "max": {
                    "type": "string"
                },
                "min": {
                    "type": "string"
                },
                "scale": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionYaxis:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionYaxis": {
            "properties": {
                "includeZero": {
                    "type": "boolean"
                },
                "label": {
                    "type": "string"
                },
                "max": {
                    "type": "string"
                },
                "min": {
                    "type": "string"
                },
                "scale": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetToplistDefinition:DashboardWidgetGroupDefinitionWidgetToplistDefinition": {
            "properties": {
                "customLinks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetToplistDefinitionCustomLink:DashboardWidgetGroupDefinitionWidgetToplistDefinitionCustomLink"
                    }
                },
                "liveSpan": {
                    "type": "string"
                },
                "requests": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequest:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequest"
                    }
                },
                "title": {
                    "type": "string",
                    "description": "The title of the dashboard.\n"
                },
                "titleAlign": {
                    "type": "string"
                },
                "titleSize": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetToplistDefinitionCustomLink:DashboardWidgetGroupDefinitionWidgetToplistDefinitionCustomLink": {
            "properties": {
                "isHidden": {
                    "type": "boolean"
                },
                "label": {
                    "type": "string"
                },
                "link": {
                    "type": "string"
                },
                "overrideLabel": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequest:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequest": {
            "properties": {
                "apmQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestApmQuery:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestApmQuery"
                },
                "auditQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestAuditQuery:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestAuditQuery"
                },
                "conditionalFormats": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestConditionalFormat:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestConditionalFormat"
                    }
                },
                "formulas": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestFormula:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestFormula"
                    }
                },
                "logQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestLogQuery:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestLogQuery"
                },
                "processQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestProcessQuery:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestProcessQuery"
                },
                "q": {
                    "type": "string"
                },
                "queries": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestQuery:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestQuery"
                    }
                },
                "rumQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestRumQuery:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestRumQuery"
                },
                "securityQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestSecurityQuery:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestSecurityQuery"
                },
                "style": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestStyle:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestStyle"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestApmQuery:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestApmQuery": {
            "properties": {
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestApmQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestApmQueryComputeQuery"
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestApmQueryGroupBy:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestApmQueryGroupBy"
                    }
                },
                "index": {
                    "type": "string"
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestApmQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestApmQueryMultiCompute"
                    }
                },
                "searchQuery": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestApmQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestApmQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "interval": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestApmQueryGroupBy:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestApmQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string"
                },
                "limit": {
                    "type": "integer"
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestApmQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestApmQueryGroupBySortQuery"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestApmQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestApmQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "order": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestApmQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestApmQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "interval": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestAuditQuery:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestAuditQuery": {
            "properties": {
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestAuditQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestAuditQueryComputeQuery"
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestAuditQueryGroupBy:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestAuditQueryGroupBy"
                    }
                },
                "index": {
                    "type": "string"
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestAuditQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestAuditQueryMultiCompute"
                    }
                },
                "searchQuery": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestAuditQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestAuditQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "interval": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestAuditQueryGroupBy:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestAuditQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string"
                },
                "limit": {
                    "type": "integer"
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestAuditQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestAuditQueryGroupBySortQuery"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestAuditQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestAuditQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "order": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestAuditQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestAuditQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "interval": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestConditionalFormat:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestConditionalFormat": {
            "properties": {
                "comparator": {
                    "type": "string"
                },
                "customBgColor": {
                    "type": "string"
                },
                "customFgColor": {
                    "type": "string"
                },
                "hideValue": {
                    "type": "boolean"
                },
                "imageUrl": {
                    "type": "string"
                },
                "metric": {
                    "type": "string"
                },
                "palette": {
                    "type": "string"
                },
                "timeframe": {
                    "type": "string"
                },
                "value": {
                    "type": "number"
                }
            },
            "type": "object",
            "required": [
                "comparator",
                "palette",
                "value"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestFormula:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestFormula": {
            "properties": {
                "alias": {
                    "type": "string"
                },
                "cellDisplayMode": {
                    "type": "string"
                },
                "conditionalFormats": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestFormulaConditionalFormat:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestFormulaConditionalFormat"
                    }
                },
                "formulaExpression": {
                    "type": "string"
                },
                "limit": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestFormulaLimit:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestFormulaLimit"
                },
                "style": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestFormulaStyle:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestFormulaStyle"
                }
            },
            "type": "object",
            "required": [
                "formulaExpression"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestFormulaConditionalFormat:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestFormulaConditionalFormat": {
            "properties": {
                "comparator": {
                    "type": "string"
                },
                "customBgColor": {
                    "type": "string"
                },
                "customFgColor": {
                    "type": "string"
                },
                "hideValue": {
                    "type": "boolean"
                },
                "imageUrl": {
                    "type": "string"
                },
                "metric": {
                    "type": "string"
                },
                "palette": {
                    "type": "string"
                },
                "timeframe": {
                    "type": "string"
                },
                "value": {
                    "type": "number"
                }
            },
            "type": "object",
            "required": [
                "comparator",
                "palette",
                "value"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestFormulaLimit:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestFormulaLimit": {
            "properties": {
                "count": {
                    "type": "integer"
                },
                "order": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestFormulaStyle:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestFormulaStyle": {
            "properties": {
                "palette": {
                    "type": "string"
                },
                "paletteIndex": {
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestLogQuery:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestLogQuery": {
            "properties": {
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestLogQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestLogQueryComputeQuery"
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestLogQueryGroupBy:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestLogQueryGroupBy"
                    }
                },
                "index": {
                    "type": "string"
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestLogQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestLogQueryMultiCompute"
                    }
                },
                "searchQuery": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestLogQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestLogQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "interval": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestLogQueryGroupBy:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestLogQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string"
                },
                "limit": {
                    "type": "integer"
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestLogQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestLogQueryGroupBySortQuery"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestLogQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestLogQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "order": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestLogQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestLogQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "interval": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestProcessQuery:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestProcessQuery": {
            "properties": {
                "filterBies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "limit": {
                    "type": "integer"
                },
                "metric": {
                    "type": "string"
                },
                "searchBy": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "metric"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestQuery:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestQuery": {
            "properties": {
                "apmDependencyStatsQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestQueryApmDependencyStatsQuery:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestQueryApmDependencyStatsQuery"
                },
                "apmResourceStatsQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestQueryApmResourceStatsQuery:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestQueryApmResourceStatsQuery"
                },
                "eventQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestQueryEventQuery:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestQueryEventQuery"
                },
                "metricQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestQueryMetricQuery:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestQueryMetricQuery"
                },
                "processQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestQueryProcessQuery:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestQueryProcessQuery"
                },
                "sloQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestQuerySloQuery:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestQuerySloQuery"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestQueryApmDependencyStatsQuery:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestQueryApmDependencyStatsQuery": {
            "properties": {
                "dataSource": {
                    "type": "string"
                },
                "env": {
                    "type": "string"
                },
                "isUpstream": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "operationName": {
                    "type": "string"
                },
                "primaryTagName": {
                    "type": "string"
                },
                "primaryTagValue": {
                    "type": "string"
                },
                "resourceName": {
                    "type": "string"
                },
                "service": {
                    "type": "string"
                },
                "stat": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "dataSource",
                "env",
                "name",
                "operationName",
                "resourceName",
                "service",
                "stat"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestQueryApmResourceStatsQuery:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestQueryApmResourceStatsQuery": {
            "properties": {
                "dataSource": {
                    "type": "string"
                },
                "env": {
                    "type": "string"
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "name": {
                    "type": "string"
                },
                "operationName": {
                    "type": "string"
                },
                "primaryTagName": {
                    "type": "string"
                },
                "primaryTagValue": {
                    "type": "string"
                },
                "resourceName": {
                    "type": "string"
                },
                "service": {
                    "type": "string"
                },
                "stat": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "dataSource",
                "env",
                "name",
                "service",
                "stat"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestQueryEventQuery:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestQueryEventQuery": {
            "properties": {
                "computes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestQueryEventQueryCompute:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestQueryEventQueryCompute"
                    }
                },
                "dataSource": {
                    "type": "string"
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestQueryEventQueryGroupBy:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestQueryEventQueryGroupBy"
                    }
                },
                "indexes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "name": {
                    "type": "string"
                },
                "search": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestQueryEventQuerySearch:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestQueryEventQuerySearch"
                },
                "storage": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "computes",
                "dataSource",
                "name"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestQueryEventQueryCompute:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestQueryEventQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "interval": {
                    "type": "integer"
                },
                "metric": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestQueryEventQueryGroupBy:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestQueryEventQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string"
                },
                "limit": {
                    "type": "integer"
                },
                "sort": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestQueryEventQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestQueryEventQueryGroupBySort"
                }
            },
            "type": "object",
            "required": [
                "facet"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestQueryEventQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestQueryEventQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "metric": {
                    "type": "string"
                },
                "order": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestQueryEventQuerySearch:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestQueryEventQuerySearch": {
            "properties": {
                "query": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestQueryMetricQuery:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestQueryMetricQuery": {
            "properties": {
                "aggregator": {
                    "type": "string"
                },
                "dataSource": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "query": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "name",
                "query"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestQueryProcessQuery:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestQueryProcessQuery": {
            "properties": {
                "aggregator": {
                    "type": "string"
                },
                "dataSource": {
                    "type": "string"
                },
                "isNormalizedCpu": {
                    "type": "boolean"
                },
                "limit": {
                    "type": "integer"
                },
                "metric": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "sort": {
                    "type": "string"
                },
                "tagFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "textFilter": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "dataSource",
                "metric",
                "name"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestQuerySloQuery:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestQuerySloQuery": {
            "properties": {
                "dataSource": {
                    "type": "string"
                },
                "groupMode": {
                    "type": "string"
                },
                "measure": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "sloId": {
                    "type": "string"
                },
                "sloQueryType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "dataSource",
                "measure",
                "sloId"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestRumQuery:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestRumQuery": {
            "properties": {
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestRumQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestRumQueryComputeQuery"
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestRumQueryGroupBy:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestRumQueryGroupBy"
                    }
                },
                "index": {
                    "type": "string"
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestRumQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestRumQueryMultiCompute"
                    }
                },
                "searchQuery": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestRumQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestRumQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "interval": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestRumQueryGroupBy:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestRumQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string"
                },
                "limit": {
                    "type": "integer"
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestRumQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestRumQueryGroupBySortQuery"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestRumQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestRumQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "order": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestRumQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestRumQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "interval": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestSecurityQuery:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestSecurityQuery": {
            "properties": {
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestSecurityQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestSecurityQueryComputeQuery"
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestSecurityQueryGroupBy:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestSecurityQueryGroupBy"
                    }
                },
                "index": {
                    "type": "string"
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestSecurityQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestSecurityQueryMultiCompute"
                    }
                },
                "searchQuery": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestSecurityQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestSecurityQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "interval": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestSecurityQueryGroupBy:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestSecurityQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string"
                },
                "limit": {
                    "type": "integer"
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestSecurityQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestSecurityQueryGroupBySortQuery"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestSecurityQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestSecurityQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "order": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestSecurityQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestSecurityQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "interval": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestStyle:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestStyle": {
            "properties": {
                "palette": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetTopologyMapDefinition:DashboardWidgetGroupDefinitionWidgetTopologyMapDefinition": {
            "properties": {
                "customLinks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetTopologyMapDefinitionCustomLink:DashboardWidgetGroupDefinitionWidgetTopologyMapDefinitionCustomLink"
                    }
                },
                "requests": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetTopologyMapDefinitionRequest:DashboardWidgetGroupDefinitionWidgetTopologyMapDefinitionRequest"
                    }
                },
                "title": {
                    "type": "string",
                    "description": "The title of the dashboard.\n"
                },
                "titleAlign": {
                    "type": "string"
                },
                "titleSize": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetTopologyMapDefinitionCustomLink:DashboardWidgetGroupDefinitionWidgetTopologyMapDefinitionCustomLink": {
            "properties": {
                "isHidden": {
                    "type": "boolean"
                },
                "label": {
                    "type": "string"
                },
                "link": {
                    "type": "string"
                },
                "overrideLabel": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetTopologyMapDefinitionRequest:DashboardWidgetGroupDefinitionWidgetTopologyMapDefinitionRequest": {
            "properties": {
                "queries": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetTopologyMapDefinitionRequestQuery:DashboardWidgetGroupDefinitionWidgetTopologyMapDefinitionRequestQuery"
                    }
                },
                "requestType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "queries",
                "requestType"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetTopologyMapDefinitionRequestQuery:DashboardWidgetGroupDefinitionWidgetTopologyMapDefinitionRequestQuery": {
            "properties": {
                "dataSource": {
                    "type": "string"
                },
                "filters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "service": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "dataSource",
                "filters",
                "service"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetTraceServiceDefinition:DashboardWidgetGroupDefinitionWidgetTraceServiceDefinition": {
            "properties": {
                "displayFormat": {
                    "type": "string"
                },
                "env": {
                    "type": "string"
                },
                "liveSpan": {
                    "type": "string"
                },
                "service": {
                    "type": "string"
                },
                "showBreakdown": {
                    "type": "boolean"
                },
                "showDistribution": {
                    "type": "boolean"
                },
                "showErrors": {
                    "type": "boolean"
                },
                "showHits": {
                    "type": "boolean"
                },
                "showLatency": {
                    "type": "boolean"
                },
                "showResourceList": {
                    "type": "boolean"
                },
                "sizeFormat": {
                    "type": "string"
                },
                "spanName": {
                    "type": "string"
                },
                "title": {
                    "type": "string",
                    "description": "The title of the dashboard.\n"
                },
                "titleAlign": {
                    "type": "string"
                },
                "titleSize": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "env",
                "service",
                "spanName"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetTreemapDefinition:DashboardWidgetGroupDefinitionWidgetTreemapDefinition": {
            "properties": {
                "requests": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetTreemapDefinitionRequest:DashboardWidgetGroupDefinitionWidgetTreemapDefinitionRequest"
                    }
                },
                "title": {
                    "type": "string",
                    "description": "The title of the dashboard.\n"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetTreemapDefinitionRequest:DashboardWidgetGroupDefinitionWidgetTreemapDefinitionRequest": {
            "properties": {
                "formulas": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetTreemapDefinitionRequestFormula:DashboardWidgetGroupDefinitionWidgetTreemapDefinitionRequestFormula"
                    }
                },
                "queries": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetTreemapDefinitionRequestQuery:DashboardWidgetGroupDefinitionWidgetTreemapDefinitionRequestQuery"
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetTreemapDefinitionRequestFormula:DashboardWidgetGroupDefinitionWidgetTreemapDefinitionRequestFormula": {
            "properties": {
                "alias": {
                    "type": "string"
                },
                "cellDisplayMode": {
                    "type": "string"
                },
                "conditionalFormats": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetTreemapDefinitionRequestFormulaConditionalFormat:DashboardWidgetGroupDefinitionWidgetTreemapDefinitionRequestFormulaConditionalFormat"
                    }
                },
                "formulaExpression": {
                    "type": "string"
                },
                "limit": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetTreemapDefinitionRequestFormulaLimit:DashboardWidgetGroupDefinitionWidgetTreemapDefinitionRequestFormulaLimit"
                },
                "style": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetTreemapDefinitionRequestFormulaStyle:DashboardWidgetGroupDefinitionWidgetTreemapDefinitionRequestFormulaStyle"
                }
            },
            "type": "object",
            "required": [
                "formulaExpression"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetTreemapDefinitionRequestFormulaConditionalFormat:DashboardWidgetGroupDefinitionWidgetTreemapDefinitionRequestFormulaConditionalFormat": {
            "properties": {
                "comparator": {
                    "type": "string"
                },
                "customBgColor": {
                    "type": "string"
                },
                "customFgColor": {
                    "type": "string"
                },
                "hideValue": {
                    "type": "boolean"
                },
                "imageUrl": {
                    "type": "string"
                },
                "metric": {
                    "type": "string"
                },
                "palette": {
                    "type": "string"
                },
                "timeframe": {
                    "type": "string"
                },
                "value": {
                    "type": "number"
                }
            },
            "type": "object",
            "required": [
                "comparator",
                "palette",
                "value"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetTreemapDefinitionRequestFormulaLimit:DashboardWidgetGroupDefinitionWidgetTreemapDefinitionRequestFormulaLimit": {
            "properties": {
                "count": {
                    "type": "integer"
                },
                "order": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetTreemapDefinitionRequestFormulaStyle:DashboardWidgetGroupDefinitionWidgetTreemapDefinitionRequestFormulaStyle": {
            "properties": {
                "palette": {
                    "type": "string"
                },
                "paletteIndex": {
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetTreemapDefinitionRequestQuery:DashboardWidgetGroupDefinitionWidgetTreemapDefinitionRequestQuery": {
            "properties": {
                "apmDependencyStatsQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetTreemapDefinitionRequestQueryApmDependencyStatsQuery:DashboardWidgetGroupDefinitionWidgetTreemapDefinitionRequestQueryApmDependencyStatsQuery"
                },
                "apmResourceStatsQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetTreemapDefinitionRequestQueryApmResourceStatsQuery:DashboardWidgetGroupDefinitionWidgetTreemapDefinitionRequestQueryApmResourceStatsQuery"
                },
                "eventQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetTreemapDefinitionRequestQueryEventQuery:DashboardWidgetGroupDefinitionWidgetTreemapDefinitionRequestQueryEventQuery"
                },
                "metricQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetTreemapDefinitionRequestQueryMetricQuery:DashboardWidgetGroupDefinitionWidgetTreemapDefinitionRequestQueryMetricQuery"
                },
                "processQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetTreemapDefinitionRequestQueryProcessQuery:DashboardWidgetGroupDefinitionWidgetTreemapDefinitionRequestQueryProcessQuery"
                },
                "sloQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetTreemapDefinitionRequestQuerySloQuery:DashboardWidgetGroupDefinitionWidgetTreemapDefinitionRequestQuerySloQuery"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetTreemapDefinitionRequestQueryApmDependencyStatsQuery:DashboardWidgetGroupDefinitionWidgetTreemapDefinitionRequestQueryApmDependencyStatsQuery": {
            "properties": {
                "dataSource": {
                    "type": "string"
                },
                "env": {
                    "type": "string"
                },
                "isUpstream": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "operationName": {
                    "type": "string"
                },
                "primaryTagName": {
                    "type": "string"
                },
                "primaryTagValue": {
                    "type": "string"
                },
                "resourceName": {
                    "type": "string"
                },
                "service": {
                    "type": "string"
                },
                "stat": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "dataSource",
                "env",
                "name",
                "operationName",
                "resourceName",
                "service",
                "stat"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetTreemapDefinitionRequestQueryApmResourceStatsQuery:DashboardWidgetGroupDefinitionWidgetTreemapDefinitionRequestQueryApmResourceStatsQuery": {
            "properties": {
                "dataSource": {
                    "type": "string"
                },
                "env": {
                    "type": "string"
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "name": {
                    "type": "string"
                },
                "operationName": {
                    "type": "string"
                },
                "primaryTagName": {
                    "type": "string"
                },
                "primaryTagValue": {
                    "type": "string"
                },
                "resourceName": {
                    "type": "string"
                },
                "service": {
                    "type": "string"
                },
                "stat": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "dataSource",
                "env",
                "name",
                "service",
                "stat"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetTreemapDefinitionRequestQueryEventQuery:DashboardWidgetGroupDefinitionWidgetTreemapDefinitionRequestQueryEventQuery": {
            "properties": {
                "computes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetTreemapDefinitionRequestQueryEventQueryCompute:DashboardWidgetGroupDefinitionWidgetTreemapDefinitionRequestQueryEventQueryCompute"
                    }
                },
                "dataSource": {
                    "type": "string"
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetTreemapDefinitionRequestQueryEventQueryGroupBy:DashboardWidgetGroupDefinitionWidgetTreemapDefinitionRequestQueryEventQueryGroupBy"
                    }
                },
                "indexes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "name": {
                    "type": "string"
                },
                "search": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetTreemapDefinitionRequestQueryEventQuerySearch:DashboardWidgetGroupDefinitionWidgetTreemapDefinitionRequestQueryEventQuerySearch"
                },
                "storage": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "computes",
                "dataSource",
                "name"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetTreemapDefinitionRequestQueryEventQueryCompute:DashboardWidgetGroupDefinitionWidgetTreemapDefinitionRequestQueryEventQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "interval": {
                    "type": "integer"
                },
                "metric": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetTreemapDefinitionRequestQueryEventQueryGroupBy:DashboardWidgetGroupDefinitionWidgetTreemapDefinitionRequestQueryEventQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string"
                },
                "limit": {
                    "type": "integer"
                },
                "sort": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetTreemapDefinitionRequestQueryEventQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetTreemapDefinitionRequestQueryEventQueryGroupBySort"
                }
            },
            "type": "object",
            "required": [
                "facet"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetTreemapDefinitionRequestQueryEventQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetTreemapDefinitionRequestQueryEventQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "metric": {
                    "type": "string"
                },
                "order": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetTreemapDefinitionRequestQueryEventQuerySearch:DashboardWidgetGroupDefinitionWidgetTreemapDefinitionRequestQueryEventQuerySearch": {
            "properties": {
                "query": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetTreemapDefinitionRequestQueryMetricQuery:DashboardWidgetGroupDefinitionWidgetTreemapDefinitionRequestQueryMetricQuery": {
            "properties": {
                "aggregator": {
                    "type": "string"
                },
                "dataSource": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "query": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "name",
                "query"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetTreemapDefinitionRequestQueryProcessQuery:DashboardWidgetGroupDefinitionWidgetTreemapDefinitionRequestQueryProcessQuery": {
            "properties": {
                "aggregator": {
                    "type": "string"
                },
                "dataSource": {
                    "type": "string"
                },
                "isNormalizedCpu": {
                    "type": "boolean"
                },
                "limit": {
                    "type": "integer"
                },
                "metric": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "sort": {
                    "type": "string"
                },
                "tagFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "textFilter": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "dataSource",
                "metric",
                "name"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetTreemapDefinitionRequestQuerySloQuery:DashboardWidgetGroupDefinitionWidgetTreemapDefinitionRequestQuerySloQuery": {
            "properties": {
                "dataSource": {
                    "type": "string"
                },
                "groupMode": {
                    "type": "string"
                },
                "measure": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "sloId": {
                    "type": "string"
                },
                "sloQueryType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "dataSource",
                "measure",
                "sloId"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetWidgetLayout:DashboardWidgetGroupDefinitionWidgetWidgetLayout": {
            "properties": {
                "height": {
                    "type": "integer"
                },
                "isColumnBreak": {
                    "type": "boolean"
                },
                "width": {
                    "type": "integer"
                },
                "x": {
                    "type": "integer"
                },
                "y": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "height",
                "width",
                "x",
                "y"
            ]
        },
        "datadog:index/DashboardWidgetHeatmapDefinition:DashboardWidgetHeatmapDefinition": {
            "properties": {
                "customLinks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetHeatmapDefinitionCustomLink:DashboardWidgetHeatmapDefinitionCustomLink"
                    }
                },
                "events": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetHeatmapDefinitionEvent:DashboardWidgetHeatmapDefinitionEvent"
                    }
                },
                "legendSize": {
                    "type": "string"
                },
                "liveSpan": {
                    "type": "string"
                },
                "requests": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetHeatmapDefinitionRequest:DashboardWidgetHeatmapDefinitionRequest"
                    }
                },
                "showLegend": {
                    "type": "boolean"
                },
                "title": {
                    "type": "string",
                    "description": "The title of the dashboard.\n"
                },
                "titleAlign": {
                    "type": "string"
                },
                "titleSize": {
                    "type": "string"
                },
                "yaxis": {
                    "$ref": "#/types/datadog:index/DashboardWidgetHeatmapDefinitionYaxis:DashboardWidgetHeatmapDefinitionYaxis"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetHeatmapDefinitionCustomLink:DashboardWidgetHeatmapDefinitionCustomLink": {
            "properties": {
                "isHidden": {
                    "type": "boolean"
                },
                "label": {
                    "type": "string"
                },
                "link": {
                    "type": "string"
                },
                "overrideLabel": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetHeatmapDefinitionEvent:DashboardWidgetHeatmapDefinitionEvent": {
            "properties": {
                "q": {
                    "type": "string"
                },
                "tagsExecution": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "q"
            ]
        },
        "datadog:index/DashboardWidgetHeatmapDefinitionRequest:DashboardWidgetHeatmapDefinitionRequest": {
            "properties": {
                "apmQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetHeatmapDefinitionRequestApmQuery:DashboardWidgetHeatmapDefinitionRequestApmQuery"
                },
                "logQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetHeatmapDefinitionRequestLogQuery:DashboardWidgetHeatmapDefinitionRequestLogQuery"
                },
                "processQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetHeatmapDefinitionRequestProcessQuery:DashboardWidgetHeatmapDefinitionRequestProcessQuery"
                },
                "q": {
                    "type": "string"
                },
                "rumQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetHeatmapDefinitionRequestRumQuery:DashboardWidgetHeatmapDefinitionRequestRumQuery"
                },
                "securityQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetHeatmapDefinitionRequestSecurityQuery:DashboardWidgetHeatmapDefinitionRequestSecurityQuery"
                },
                "style": {
                    "$ref": "#/types/datadog:index/DashboardWidgetHeatmapDefinitionRequestStyle:DashboardWidgetHeatmapDefinitionRequestStyle"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetHeatmapDefinitionRequestApmQuery:DashboardWidgetHeatmapDefinitionRequestApmQuery": {
            "properties": {
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetHeatmapDefinitionRequestApmQueryComputeQuery:DashboardWidgetHeatmapDefinitionRequestApmQueryComputeQuery"
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetHeatmapDefinitionRequestApmQueryGroupBy:DashboardWidgetHeatmapDefinitionRequestApmQueryGroupBy"
                    }
                },
                "index": {
                    "type": "string"
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetHeatmapDefinitionRequestApmQueryMultiCompute:DashboardWidgetHeatmapDefinitionRequestApmQueryMultiCompute"
                    }
                },
                "searchQuery": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetHeatmapDefinitionRequestApmQueryComputeQuery:DashboardWidgetHeatmapDefinitionRequestApmQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "interval": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetHeatmapDefinitionRequestApmQueryGroupBy:DashboardWidgetHeatmapDefinitionRequestApmQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string"
                },
                "limit": {
                    "type": "integer"
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetHeatmapDefinitionRequestApmQueryGroupBySortQuery:DashboardWidgetHeatmapDefinitionRequestApmQueryGroupBySortQuery"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetHeatmapDefinitionRequestApmQueryGroupBySortQuery:DashboardWidgetHeatmapDefinitionRequestApmQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "order": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetHeatmapDefinitionRequestApmQueryMultiCompute:DashboardWidgetHeatmapDefinitionRequestApmQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "interval": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetHeatmapDefinitionRequestLogQuery:DashboardWidgetHeatmapDefinitionRequestLogQuery": {
            "properties": {
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetHeatmapDefinitionRequestLogQueryComputeQuery:DashboardWidgetHeatmapDefinitionRequestLogQueryComputeQuery"
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetHeatmapDefinitionRequestLogQueryGroupBy:DashboardWidgetHeatmapDefinitionRequestLogQueryGroupBy"
                    }
                },
                "index": {
                    "type": "string"
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetHeatmapDefinitionRequestLogQueryMultiCompute:DashboardWidgetHeatmapDefinitionRequestLogQueryMultiCompute"
                    }
                },
                "searchQuery": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetHeatmapDefinitionRequestLogQueryComputeQuery:DashboardWidgetHeatmapDefinitionRequestLogQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "interval": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetHeatmapDefinitionRequestLogQueryGroupBy:DashboardWidgetHeatmapDefinitionRequestLogQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string"
                },
                "limit": {
                    "type": "integer"
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetHeatmapDefinitionRequestLogQueryGroupBySortQuery:DashboardWidgetHeatmapDefinitionRequestLogQueryGroupBySortQuery"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetHeatmapDefinitionRequestLogQueryGroupBySortQuery:DashboardWidgetHeatmapDefinitionRequestLogQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "order": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetHeatmapDefinitionRequestLogQueryMultiCompute:DashboardWidgetHeatmapDefinitionRequestLogQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "interval": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetHeatmapDefinitionRequestProcessQuery:DashboardWidgetHeatmapDefinitionRequestProcessQuery": {
            "properties": {
                "filterBies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "limit": {
                    "type": "integer"
                },
                "metric": {
                    "type": "string"
                },
                "searchBy": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "metric"
            ]
        },
        "datadog:index/DashboardWidgetHeatmapDefinitionRequestRumQuery:DashboardWidgetHeatmapDefinitionRequestRumQuery": {
            "properties": {
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetHeatmapDefinitionRequestRumQueryComputeQuery:DashboardWidgetHeatmapDefinitionRequestRumQueryComputeQuery"
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetHeatmapDefinitionRequestRumQueryGroupBy:DashboardWidgetHeatmapDefinitionRequestRumQueryGroupBy"
                    }
                },
                "index": {
                    "type": "string"
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetHeatmapDefinitionRequestRumQueryMultiCompute:DashboardWidgetHeatmapDefinitionRequestRumQueryMultiCompute"
                    }
                },
                "searchQuery": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetHeatmapDefinitionRequestRumQueryComputeQuery:DashboardWidgetHeatmapDefinitionRequestRumQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "interval": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetHeatmapDefinitionRequestRumQueryGroupBy:DashboardWidgetHeatmapDefinitionRequestRumQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string"
                },
                "limit": {
                    "type": "integer"
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetHeatmapDefinitionRequestRumQueryGroupBySortQuery:DashboardWidgetHeatmapDefinitionRequestRumQueryGroupBySortQuery"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetHeatmapDefinitionRequestRumQueryGroupBySortQuery:DashboardWidgetHeatmapDefinitionRequestRumQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "order": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetHeatmapDefinitionRequestRumQueryMultiCompute:DashboardWidgetHeatmapDefinitionRequestRumQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "interval": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetHeatmapDefinitionRequestSecurityQuery:DashboardWidgetHeatmapDefinitionRequestSecurityQuery": {
            "properties": {
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetHeatmapDefinitionRequestSecurityQueryComputeQuery:DashboardWidgetHeatmapDefinitionRequestSecurityQueryComputeQuery"
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetHeatmapDefinitionRequestSecurityQueryGroupBy:DashboardWidgetHeatmapDefinitionRequestSecurityQueryGroupBy"
                    }
                },
                "index": {
                    "type": "string"
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetHeatmapDefinitionRequestSecurityQueryMultiCompute:DashboardWidgetHeatmapDefinitionRequestSecurityQueryMultiCompute"
                    }
                },
                "searchQuery": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetHeatmapDefinitionRequestSecurityQueryComputeQuery:DashboardWidgetHeatmapDefinitionRequestSecurityQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "interval": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetHeatmapDefinitionRequestSecurityQueryGroupBy:DashboardWidgetHeatmapDefinitionRequestSecurityQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string"
                },
                "limit": {
                    "type": "integer"
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetHeatmapDefinitionRequestSecurityQueryGroupBySortQuery:DashboardWidgetHeatmapDefinitionRequestSecurityQueryGroupBySortQuery"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetHeatmapDefinitionRequestSecurityQueryGroupBySortQuery:DashboardWidgetHeatmapDefinitionRequestSecurityQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "order": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetHeatmapDefinitionRequestSecurityQueryMultiCompute:DashboardWidgetHeatmapDefinitionRequestSecurityQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "interval": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetHeatmapDefinitionRequestStyle:DashboardWidgetHeatmapDefinitionRequestStyle": {
            "properties": {
                "palette": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetHeatmapDefinitionYaxis:DashboardWidgetHeatmapDefinitionYaxis": {
            "properties": {
                "includeZero": {
                    "type": "boolean"
                },
                "label": {
                    "type": "string"
                },
                "max": {
                    "type": "string"
                },
                "min": {
                    "type": "string"
                },
                "scale": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetHostmapDefinition:DashboardWidgetHostmapDefinition": {
            "properties": {
                "customLinks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetHostmapDefinitionCustomLink:DashboardWidgetHostmapDefinitionCustomLink"
                    }
                },
                "groups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "noGroupHosts": {
                    "type": "boolean"
                },
                "noMetricHosts": {
                    "type": "boolean"
                },
                "nodeType": {
                    "type": "string"
                },
                "request": {
                    "$ref": "#/types/datadog:index/DashboardWidgetHostmapDefinitionRequest:DashboardWidgetHostmapDefinitionRequest"
                },
                "scopes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "style": {
                    "$ref": "#/types/datadog:index/DashboardWidgetHostmapDefinitionStyle:DashboardWidgetHostmapDefinitionStyle"
                },
                "title": {
                    "type": "string",
                    "description": "The title of the dashboard.\n"
                },
                "titleAlign": {
                    "type": "string"
                },
                "titleSize": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetHostmapDefinitionCustomLink:DashboardWidgetHostmapDefinitionCustomLink": {
            "properties": {
                "isHidden": {
                    "type": "boolean"
                },
                "label": {
                    "type": "string"
                },
                "link": {
                    "type": "string"
                },
                "overrideLabel": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetHostmapDefinitionRequest:DashboardWidgetHostmapDefinitionRequest": {
            "properties": {
                "fills": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetHostmapDefinitionRequestFill:DashboardWidgetHostmapDefinitionRequestFill"
                    }
                },
                "sizes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetHostmapDefinitionRequestSize:DashboardWidgetHostmapDefinitionRequestSize"
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetHostmapDefinitionRequestFill:DashboardWidgetHostmapDefinitionRequestFill": {
            "properties": {
                "apmQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetHostmapDefinitionRequestFillApmQuery:DashboardWidgetHostmapDefinitionRequestFillApmQuery"
                },
                "logQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetHostmapDefinitionRequestFillLogQuery:DashboardWidgetHostmapDefinitionRequestFillLogQuery"
                },
                "processQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetHostmapDefinitionRequestFillProcessQuery:DashboardWidgetHostmapDefinitionRequestFillProcessQuery"
                },
                "q": {
                    "type": "string"
                },
                "rumQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetHostmapDefinitionRequestFillRumQuery:DashboardWidgetHostmapDefinitionRequestFillRumQuery"
                },
                "securityQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetHostmapDefinitionRequestFillSecurityQuery:DashboardWidgetHostmapDefinitionRequestFillSecurityQuery"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetHostmapDefinitionRequestFillApmQuery:DashboardWidgetHostmapDefinitionRequestFillApmQuery": {
            "properties": {
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetHostmapDefinitionRequestFillApmQueryComputeQuery:DashboardWidgetHostmapDefinitionRequestFillApmQueryComputeQuery"
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetHostmapDefinitionRequestFillApmQueryGroupBy:DashboardWidgetHostmapDefinitionRequestFillApmQueryGroupBy"
                    }
                },
                "index": {
                    "type": "string"
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetHostmapDefinitionRequestFillApmQueryMultiCompute:DashboardWidgetHostmapDefinitionRequestFillApmQueryMultiCompute"
                    }
                },
                "searchQuery": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetHostmapDefinitionRequestFillApmQueryComputeQuery:DashboardWidgetHostmapDefinitionRequestFillApmQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "interval": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetHostmapDefinitionRequestFillApmQueryGroupBy:DashboardWidgetHostmapDefinitionRequestFillApmQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string"
                },
                "limit": {
                    "type": "integer"
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetHostmapDefinitionRequestFillApmQueryGroupBySortQuery:DashboardWidgetHostmapDefinitionRequestFillApmQueryGroupBySortQuery"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetHostmapDefinitionRequestFillApmQueryGroupBySortQuery:DashboardWidgetHostmapDefinitionRequestFillApmQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "order": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetHostmapDefinitionRequestFillApmQueryMultiCompute:DashboardWidgetHostmapDefinitionRequestFillApmQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "interval": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetHostmapDefinitionRequestFillLogQuery:DashboardWidgetHostmapDefinitionRequestFillLogQuery": {
            "properties": {
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetHostmapDefinitionRequestFillLogQueryComputeQuery:DashboardWidgetHostmapDefinitionRequestFillLogQueryComputeQuery"
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetHostmapDefinitionRequestFillLogQueryGroupBy:DashboardWidgetHostmapDefinitionRequestFillLogQueryGroupBy"
                    }
                },
                "index": {
                    "type": "string"
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetHostmapDefinitionRequestFillLogQueryMultiCompute:DashboardWidgetHostmapDefinitionRequestFillLogQueryMultiCompute"
                    }
                },
                "searchQuery": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetHostmapDefinitionRequestFillLogQueryComputeQuery:DashboardWidgetHostmapDefinitionRequestFillLogQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "interval": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetHostmapDefinitionRequestFillLogQueryGroupBy:DashboardWidgetHostmapDefinitionRequestFillLogQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string"
                },
                "limit": {
                    "type": "integer"
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetHostmapDefinitionRequestFillLogQueryGroupBySortQuery:DashboardWidgetHostmapDefinitionRequestFillLogQueryGroupBySortQuery"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetHostmapDefinitionRequestFillLogQueryGroupBySortQuery:DashboardWidgetHostmapDefinitionRequestFillLogQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "order": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetHostmapDefinitionRequestFillLogQueryMultiCompute:DashboardWidgetHostmapDefinitionRequestFillLogQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "interval": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetHostmapDefinitionRequestFillProcessQuery:DashboardWidgetHostmapDefinitionRequestFillProcessQuery": {
            "properties": {
                "filterBies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "limit": {
                    "type": "integer"
                },
                "metric": {
                    "type": "string"
                },
                "searchBy": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "metric"
            ]
        },
        "datadog:index/DashboardWidgetHostmapDefinitionRequestFillRumQuery:DashboardWidgetHostmapDefinitionRequestFillRumQuery": {
            "properties": {
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetHostmapDefinitionRequestFillRumQueryComputeQuery:DashboardWidgetHostmapDefinitionRequestFillRumQueryComputeQuery"
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetHostmapDefinitionRequestFillRumQueryGroupBy:DashboardWidgetHostmapDefinitionRequestFillRumQueryGroupBy"
                    }
                },
                "index": {
                    "type": "string"
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetHostmapDefinitionRequestFillRumQueryMultiCompute:DashboardWidgetHostmapDefinitionRequestFillRumQueryMultiCompute"
                    }
                },
                "searchQuery": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetHostmapDefinitionRequestFillRumQueryComputeQuery:DashboardWidgetHostmapDefinitionRequestFillRumQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "interval": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetHostmapDefinitionRequestFillRumQueryGroupBy:DashboardWidgetHostmapDefinitionRequestFillRumQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string"
                },
                "limit": {
                    "type": "integer"
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetHostmapDefinitionRequestFillRumQueryGroupBySortQuery:DashboardWidgetHostmapDefinitionRequestFillRumQueryGroupBySortQuery"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetHostmapDefinitionRequestFillRumQueryGroupBySortQuery:DashboardWidgetHostmapDefinitionRequestFillRumQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "order": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetHostmapDefinitionRequestFillRumQueryMultiCompute:DashboardWidgetHostmapDefinitionRequestFillRumQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "interval": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetHostmapDefinitionRequestFillSecurityQuery:DashboardWidgetHostmapDefinitionRequestFillSecurityQuery": {
            "properties": {
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetHostmapDefinitionRequestFillSecurityQueryComputeQuery:DashboardWidgetHostmapDefinitionRequestFillSecurityQueryComputeQuery"
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetHostmapDefinitionRequestFillSecurityQueryGroupBy:DashboardWidgetHostmapDefinitionRequestFillSecurityQueryGroupBy"
                    }
                },
                "index": {
                    "type": "string"
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetHostmapDefinitionRequestFillSecurityQueryMultiCompute:DashboardWidgetHostmapDefinitionRequestFillSecurityQueryMultiCompute"
                    }
                },
                "searchQuery": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetHostmapDefinitionRequestFillSecurityQueryComputeQuery:DashboardWidgetHostmapDefinitionRequestFillSecurityQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "interval": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetHostmapDefinitionRequestFillSecurityQueryGroupBy:DashboardWidgetHostmapDefinitionRequestFillSecurityQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string"
                },
                "limit": {
                    "type": "integer"
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetHostmapDefinitionRequestFillSecurityQueryGroupBySortQuery:DashboardWidgetHostmapDefinitionRequestFillSecurityQueryGroupBySortQuery"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetHostmapDefinitionRequestFillSecurityQueryGroupBySortQuery:DashboardWidgetHostmapDefinitionRequestFillSecurityQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "order": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetHostmapDefinitionRequestFillSecurityQueryMultiCompute:DashboardWidgetHostmapDefinitionRequestFillSecurityQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "interval": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetHostmapDefinitionRequestSize:DashboardWidgetHostmapDefinitionRequestSize": {
            "properties": {
                "apmQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetHostmapDefinitionRequestSizeApmQuery:DashboardWidgetHostmapDefinitionRequestSizeApmQuery"
                },
                "logQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetHostmapDefinitionRequestSizeLogQuery:DashboardWidgetHostmapDefinitionRequestSizeLogQuery"
                },
                "processQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetHostmapDefinitionRequestSizeProcessQuery:DashboardWidgetHostmapDefinitionRequestSizeProcessQuery"
                },
                "q": {
                    "type": "string"
                },
                "rumQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetHostmapDefinitionRequestSizeRumQuery:DashboardWidgetHostmapDefinitionRequestSizeRumQuery"
                },
                "securityQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetHostmapDefinitionRequestSizeSecurityQuery:DashboardWidgetHostmapDefinitionRequestSizeSecurityQuery"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetHostmapDefinitionRequestSizeApmQuery:DashboardWidgetHostmapDefinitionRequestSizeApmQuery": {
            "properties": {
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetHostmapDefinitionRequestSizeApmQueryComputeQuery:DashboardWidgetHostmapDefinitionRequestSizeApmQueryComputeQuery"
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetHostmapDefinitionRequestSizeApmQueryGroupBy:DashboardWidgetHostmapDefinitionRequestSizeApmQueryGroupBy"
                    }
                },
                "index": {
                    "type": "string"
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetHostmapDefinitionRequestSizeApmQueryMultiCompute:DashboardWidgetHostmapDefinitionRequestSizeApmQueryMultiCompute"
                    }
                },
                "searchQuery": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetHostmapDefinitionRequestSizeApmQueryComputeQuery:DashboardWidgetHostmapDefinitionRequestSizeApmQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "interval": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetHostmapDefinitionRequestSizeApmQueryGroupBy:DashboardWidgetHostmapDefinitionRequestSizeApmQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string"
                },
                "limit": {
                    "type": "integer"
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetHostmapDefinitionRequestSizeApmQueryGroupBySortQuery:DashboardWidgetHostmapDefinitionRequestSizeApmQueryGroupBySortQuery"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetHostmapDefinitionRequestSizeApmQueryGroupBySortQuery:DashboardWidgetHostmapDefinitionRequestSizeApmQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "order": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetHostmapDefinitionRequestSizeApmQueryMultiCompute:DashboardWidgetHostmapDefinitionRequestSizeApmQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "interval": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetHostmapDefinitionRequestSizeLogQuery:DashboardWidgetHostmapDefinitionRequestSizeLogQuery": {
            "properties": {
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetHostmapDefinitionRequestSizeLogQueryComputeQuery:DashboardWidgetHostmapDefinitionRequestSizeLogQueryComputeQuery"
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetHostmapDefinitionRequestSizeLogQueryGroupBy:DashboardWidgetHostmapDefinitionRequestSizeLogQueryGroupBy"
                    }
                },
                "index": {
                    "type": "string"
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetHostmapDefinitionRequestSizeLogQueryMultiCompute:DashboardWidgetHostmapDefinitionRequestSizeLogQueryMultiCompute"
                    }
                },
                "searchQuery": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetHostmapDefinitionRequestSizeLogQueryComputeQuery:DashboardWidgetHostmapDefinitionRequestSizeLogQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "interval": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetHostmapDefinitionRequestSizeLogQueryGroupBy:DashboardWidgetHostmapDefinitionRequestSizeLogQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string"
                },
                "limit": {
                    "type": "integer"
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetHostmapDefinitionRequestSizeLogQueryGroupBySortQuery:DashboardWidgetHostmapDefinitionRequestSizeLogQueryGroupBySortQuery"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetHostmapDefinitionRequestSizeLogQueryGroupBySortQuery:DashboardWidgetHostmapDefinitionRequestSizeLogQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "order": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetHostmapDefinitionRequestSizeLogQueryMultiCompute:DashboardWidgetHostmapDefinitionRequestSizeLogQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "interval": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetHostmapDefinitionRequestSizeProcessQuery:DashboardWidgetHostmapDefinitionRequestSizeProcessQuery": {
            "properties": {
                "filterBies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "limit": {
                    "type": "integer"
                },
                "metric": {
                    "type": "string"
                },
                "searchBy": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "metric"
            ]
        },
        "datadog:index/DashboardWidgetHostmapDefinitionRequestSizeRumQuery:DashboardWidgetHostmapDefinitionRequestSizeRumQuery": {
            "properties": {
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetHostmapDefinitionRequestSizeRumQueryComputeQuery:DashboardWidgetHostmapDefinitionRequestSizeRumQueryComputeQuery"
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetHostmapDefinitionRequestSizeRumQueryGroupBy:DashboardWidgetHostmapDefinitionRequestSizeRumQueryGroupBy"
                    }
                },
                "index": {
                    "type": "string"
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetHostmapDefinitionRequestSizeRumQueryMultiCompute:DashboardWidgetHostmapDefinitionRequestSizeRumQueryMultiCompute"
                    }
                },
                "searchQuery": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetHostmapDefinitionRequestSizeRumQueryComputeQuery:DashboardWidgetHostmapDefinitionRequestSizeRumQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "interval": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetHostmapDefinitionRequestSizeRumQueryGroupBy:DashboardWidgetHostmapDefinitionRequestSizeRumQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string"
                },
                "limit": {
                    "type": "integer"
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetHostmapDefinitionRequestSizeRumQueryGroupBySortQuery:DashboardWidgetHostmapDefinitionRequestSizeRumQueryGroupBySortQuery"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetHostmapDefinitionRequestSizeRumQueryGroupBySortQuery:DashboardWidgetHostmapDefinitionRequestSizeRumQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "order": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetHostmapDefinitionRequestSizeRumQueryMultiCompute:DashboardWidgetHostmapDefinitionRequestSizeRumQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "interval": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetHostmapDefinitionRequestSizeSecurityQuery:DashboardWidgetHostmapDefinitionRequestSizeSecurityQuery": {
            "properties": {
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetHostmapDefinitionRequestSizeSecurityQueryComputeQuery:DashboardWidgetHostmapDefinitionRequestSizeSecurityQueryComputeQuery"
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetHostmapDefinitionRequestSizeSecurityQueryGroupBy:DashboardWidgetHostmapDefinitionRequestSizeSecurityQueryGroupBy"
                    }
                },
                "index": {
                    "type": "string"
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetHostmapDefinitionRequestSizeSecurityQueryMultiCompute:DashboardWidgetHostmapDefinitionRequestSizeSecurityQueryMultiCompute"
                    }
                },
                "searchQuery": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetHostmapDefinitionRequestSizeSecurityQueryComputeQuery:DashboardWidgetHostmapDefinitionRequestSizeSecurityQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "interval": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetHostmapDefinitionRequestSizeSecurityQueryGroupBy:DashboardWidgetHostmapDefinitionRequestSizeSecurityQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string"
                },
                "limit": {
                    "type": "integer"
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetHostmapDefinitionRequestSizeSecurityQueryGroupBySortQuery:DashboardWidgetHostmapDefinitionRequestSizeSecurityQueryGroupBySortQuery"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetHostmapDefinitionRequestSizeSecurityQueryGroupBySortQuery:DashboardWidgetHostmapDefinitionRequestSizeSecurityQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "order": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetHostmapDefinitionRequestSizeSecurityQueryMultiCompute:DashboardWidgetHostmapDefinitionRequestSizeSecurityQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "interval": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetHostmapDefinitionStyle:DashboardWidgetHostmapDefinitionStyle": {
            "properties": {
                "fillMax": {
                    "type": "string"
                },
                "fillMin": {
                    "type": "string"
                },
                "palette": {
                    "type": "string"
                },
                "paletteFlip": {
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetIframeDefinition:DashboardWidgetIframeDefinition": {
            "properties": {
                "url": {
                    "type": "string",
                    "description": "The URL of the dashboard.\n"
                }
            },
            "type": "object",
            "required": [
                "url"
            ]
        },
        "datadog:index/DashboardWidgetImageDefinition:DashboardWidgetImageDefinition": {
            "properties": {
                "hasBackground": {
                    "type": "boolean"
                },
                "hasBorder": {
                    "type": "boolean"
                },
                "horizontalAlign": {
                    "type": "string"
                },
                "margin": {
                    "type": "string"
                },
                "sizing": {
                    "type": "string"
                },
                "url": {
                    "type": "string",
                    "description": "The URL of the dashboard.\n"
                },
                "urlDarkTheme": {
                    "type": "string"
                },
                "verticalAlign": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "url"
            ]
        },
        "datadog:index/DashboardWidgetListStreamDefinition:DashboardWidgetListStreamDefinition": {
            "properties": {
                "requests": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetListStreamDefinitionRequest:DashboardWidgetListStreamDefinitionRequest"
                    }
                },
                "title": {
                    "type": "string",
                    "description": "The title of the dashboard.\n"
                },
                "titleAlign": {
                    "type": "string"
                },
                "titleSize": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "requests"
            ]
        },
        "datadog:index/DashboardWidgetListStreamDefinitionRequest:DashboardWidgetListStreamDefinitionRequest": {
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetListStreamDefinitionRequestColumn:DashboardWidgetListStreamDefinitionRequestColumn"
                    }
                },
                "query": {
                    "$ref": "#/types/datadog:index/DashboardWidgetListStreamDefinitionRequestQuery:DashboardWidgetListStreamDefinitionRequestQuery"
                },
                "responseFormat": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "columns",
                "query",
                "responseFormat"
            ]
        },
        "datadog:index/DashboardWidgetListStreamDefinitionRequestColumn:DashboardWidgetListStreamDefinitionRequestColumn": {
            "properties": {
                "field": {
                    "type": "string"
                },
                "width": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "field",
                "width"
            ]
        },
        "datadog:index/DashboardWidgetListStreamDefinitionRequestQuery:DashboardWidgetListStreamDefinitionRequestQuery": {
            "properties": {
                "dataSource": {
                    "type": "string"
                },
                "eventSize": {
                    "type": "string"
                },
                "indexes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "queryString": {
                    "type": "string"
                },
                "sort": {
                    "$ref": "#/types/datadog:index/DashboardWidgetListStreamDefinitionRequestQuerySort:DashboardWidgetListStreamDefinitionRequestQuerySort"
                },
                "storage": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "dataSource"
            ]
        },
        "datadog:index/DashboardWidgetListStreamDefinitionRequestQuerySort:DashboardWidgetListStreamDefinitionRequestQuerySort": {
            "properties": {
                "column": {
                    "type": "string"
                },
                "order": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "column",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetLogStreamDefinition:DashboardWidgetLogStreamDefinition": {
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "indexes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "liveSpan": {
                    "type": "string"
                },
                "messageDisplay": {
                    "type": "string"
                },
                "query": {
                    "type": "string"
                },
                "showDateColumn": {
                    "type": "boolean"
                },
                "showMessageColumn": {
                    "type": "boolean"
                },
                "sort": {
                    "$ref": "#/types/datadog:index/DashboardWidgetLogStreamDefinitionSort:DashboardWidgetLogStreamDefinitionSort"
                },
                "title": {
                    "type": "string",
                    "description": "The title of the dashboard.\n"
                },
                "titleAlign": {
                    "type": "string"
                },
                "titleSize": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetLogStreamDefinitionSort:DashboardWidgetLogStreamDefinitionSort": {
            "properties": {
                "column": {
                    "type": "string"
                },
                "order": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "column",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetManageStatusDefinition:DashboardWidgetManageStatusDefinition": {
            "properties": {
                "colorPreference": {
                    "type": "string"
                },
                "displayFormat": {
                    "type": "string"
                },
                "hideZeroCounts": {
                    "type": "boolean"
                },
                "query": {
                    "type": "string"
                },
                "showLastTriggered": {
                    "type": "boolean"
                },
                "showPriority": {
                    "type": "boolean"
                },
                "sort": {
                    "type": "string"
                },
                "summaryType": {
                    "type": "string"
                },
                "title": {
                    "type": "string",
                    "description": "The title of the dashboard.\n"
                },
                "titleAlign": {
                    "type": "string"
                },
                "titleSize": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/DashboardWidgetNoteDefinition:DashboardWidgetNoteDefinition": {
            "properties": {
                "backgroundColor": {
                    "type": "string"
                },
                "content": {
                    "type": "string"
                },
                "fontSize": {
                    "type": "string"
                },
                "hasPadding": {
                    "type": "boolean"
                },
                "showTick": {
                    "type": "boolean"
                },
                "textAlign": {
                    "type": "string"
                },
                "tickEdge": {
                    "type": "string"
                },
                "tickPos": {
                    "type": "string"
                },
                "verticalAlign": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "content"
            ]
        },
        "datadog:index/DashboardWidgetQueryTableDefinition:DashboardWidgetQueryTableDefinition": {
            "properties": {
                "customLinks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetQueryTableDefinitionCustomLink:DashboardWidgetQueryTableDefinitionCustomLink"
                    }
                },
                "hasSearchBar": {
                    "type": "string"
                },
                "liveSpan": {
                    "type": "string"
                },
                "requests": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetQueryTableDefinitionRequest:DashboardWidgetQueryTableDefinitionRequest"
                    }
                },
                "title": {
                    "type": "string",
                    "description": "The title of the dashboard.\n"
                },
                "titleAlign": {
                    "type": "string"
                },
                "titleSize": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetQueryTableDefinitionCustomLink:DashboardWidgetQueryTableDefinitionCustomLink": {
            "properties": {
                "isHidden": {
                    "type": "boolean"
                },
                "label": {
                    "type": "string"
                },
                "link": {
                    "type": "string"
                },
                "overrideLabel": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetQueryTableDefinitionRequest:DashboardWidgetQueryTableDefinitionRequest": {
            "properties": {
                "aggregator": {
                    "type": "string"
                },
                "alias": {
                    "type": "string"
                },
                "apmQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetQueryTableDefinitionRequestApmQuery:DashboardWidgetQueryTableDefinitionRequestApmQuery"
                },
                "apmStatsQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetQueryTableDefinitionRequestApmStatsQuery:DashboardWidgetQueryTableDefinitionRequestApmStatsQuery"
                },
                "cellDisplayModes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "conditionalFormats": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetQueryTableDefinitionRequestConditionalFormat:DashboardWidgetQueryTableDefinitionRequestConditionalFormat"
                    }
                },
                "formulas": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetQueryTableDefinitionRequestFormula:DashboardWidgetQueryTableDefinitionRequestFormula"
                    }
                },
                "limit": {
                    "type": "integer"
                },
                "logQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetQueryTableDefinitionRequestLogQuery:DashboardWidgetQueryTableDefinitionRequestLogQuery"
                },
                "order": {
                    "type": "string"
                },
                "processQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetQueryTableDefinitionRequestProcessQuery:DashboardWidgetQueryTableDefinitionRequestProcessQuery"
                },
                "q": {
                    "type": "string"
                },
                "queries": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetQueryTableDefinitionRequestQuery:DashboardWidgetQueryTableDefinitionRequestQuery"
                    }
                },
                "rumQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetQueryTableDefinitionRequestRumQuery:DashboardWidgetQueryTableDefinitionRequestRumQuery"
                },
                "securityQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetQueryTableDefinitionRequestSecurityQuery:DashboardWidgetQueryTableDefinitionRequestSecurityQuery"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetQueryTableDefinitionRequestApmQuery:DashboardWidgetQueryTableDefinitionRequestApmQuery": {
            "properties": {
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetQueryTableDefinitionRequestApmQueryComputeQuery:DashboardWidgetQueryTableDefinitionRequestApmQueryComputeQuery"
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetQueryTableDefinitionRequestApmQueryGroupBy:DashboardWidgetQueryTableDefinitionRequestApmQueryGroupBy"
                    }
                },
                "index": {
                    "type": "string"
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetQueryTableDefinitionRequestApmQueryMultiCompute:DashboardWidgetQueryTableDefinitionRequestApmQueryMultiCompute"
                    }
                },
                "searchQuery": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetQueryTableDefinitionRequestApmQueryComputeQuery:DashboardWidgetQueryTableDefinitionRequestApmQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "interval": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetQueryTableDefinitionRequestApmQueryGroupBy:DashboardWidgetQueryTableDefinitionRequestApmQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string"
                },
                "limit": {
                    "type": "integer"
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetQueryTableDefinitionRequestApmQueryGroupBySortQuery:DashboardWidgetQueryTableDefinitionRequestApmQueryGroupBySortQuery"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetQueryTableDefinitionRequestApmQueryGroupBySortQuery:DashboardWidgetQueryTableDefinitionRequestApmQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "order": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetQueryTableDefinitionRequestApmQueryMultiCompute:DashboardWidgetQueryTableDefinitionRequestApmQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "interval": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetQueryTableDefinitionRequestApmStatsQuery:DashboardWidgetQueryTableDefinitionRequestApmStatsQuery": {
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetQueryTableDefinitionRequestApmStatsQueryColumn:DashboardWidgetQueryTableDefinitionRequestApmStatsQueryColumn"
                    }
                },
                "env": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "primaryTag": {
                    "type": "string"
                },
                "resource": {
                    "type": "string"
                },
                "rowType": {
                    "type": "string"
                },
                "service": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "env",
                "name",
                "primaryTag",
                "rowType",
                "service"
            ]
        },
        "datadog:index/DashboardWidgetQueryTableDefinitionRequestApmStatsQueryColumn:DashboardWidgetQueryTableDefinitionRequestApmStatsQueryColumn": {
            "properties": {
                "alias": {
                    "type": "string"
                },
                "cellDisplayMode": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "order": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "name"
            ]
        },
        "datadog:index/DashboardWidgetQueryTableDefinitionRequestConditionalFormat:DashboardWidgetQueryTableDefinitionRequestConditionalFormat": {
            "properties": {
                "comparator": {
                    "type": "string"
                },
                "customBgColor": {
                    "type": "string"
                },
                "customFgColor": {
                    "type": "string"
                },
                "hideValue": {
                    "type": "boolean"
                },
                "imageUrl": {
                    "type": "string"
                },
                "metric": {
                    "type": "string"
                },
                "palette": {
                    "type": "string"
                },
                "timeframe": {
                    "type": "string"
                },
                "value": {
                    "type": "number"
                }
            },
            "type": "object",
            "required": [
                "comparator",
                "palette",
                "value"
            ]
        },
        "datadog:index/DashboardWidgetQueryTableDefinitionRequestFormula:DashboardWidgetQueryTableDefinitionRequestFormula": {
            "properties": {
                "alias": {
                    "type": "string"
                },
                "cellDisplayMode": {
                    "type": "string"
                },
                "conditionalFormats": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetQueryTableDefinitionRequestFormulaConditionalFormat:DashboardWidgetQueryTableDefinitionRequestFormulaConditionalFormat"
                    }
                },
                "formulaExpression": {
                    "type": "string"
                },
                "limit": {
                    "$ref": "#/types/datadog:index/DashboardWidgetQueryTableDefinitionRequestFormulaLimit:DashboardWidgetQueryTableDefinitionRequestFormulaLimit"
                },
                "style": {
                    "$ref": "#/types/datadog:index/DashboardWidgetQueryTableDefinitionRequestFormulaStyle:DashboardWidgetQueryTableDefinitionRequestFormulaStyle"
                }
            },
            "type": "object",
            "required": [
                "formulaExpression"
            ]
        },
        "datadog:index/DashboardWidgetQueryTableDefinitionRequestFormulaConditionalFormat:DashboardWidgetQueryTableDefinitionRequestFormulaConditionalFormat": {
            "properties": {
                "comparator": {
                    "type": "string"
                },
                "customBgColor": {
                    "type": "string"
                },
                "customFgColor": {
                    "type": "string"
                },
                "hideValue": {
                    "type": "boolean"
                },
                "imageUrl": {
                    "type": "string"
                },
                "metric": {
                    "type": "string"
                },
                "palette": {
                    "type": "string"
                },
                "timeframe": {
                    "type": "string"
                },
                "value": {
                    "type": "number"
                }
            },
            "type": "object",
            "required": [
                "comparator",
                "palette",
                "value"
            ]
        },
        "datadog:index/DashboardWidgetQueryTableDefinitionRequestFormulaLimit:DashboardWidgetQueryTableDefinitionRequestFormulaLimit": {
            "properties": {
                "count": {
                    "type": "integer"
                },
                "order": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetQueryTableDefinitionRequestFormulaStyle:DashboardWidgetQueryTableDefinitionRequestFormulaStyle": {
            "properties": {
                "palette": {
                    "type": "string"
                },
                "paletteIndex": {
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetQueryTableDefinitionRequestLogQuery:DashboardWidgetQueryTableDefinitionRequestLogQuery": {
            "properties": {
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetQueryTableDefinitionRequestLogQueryComputeQuery:DashboardWidgetQueryTableDefinitionRequestLogQueryComputeQuery"
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetQueryTableDefinitionRequestLogQueryGroupBy:DashboardWidgetQueryTableDefinitionRequestLogQueryGroupBy"
                    }
                },
                "index": {
                    "type": "string"
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetQueryTableDefinitionRequestLogQueryMultiCompute:DashboardWidgetQueryTableDefinitionRequestLogQueryMultiCompute"
                    }
                },
                "searchQuery": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetQueryTableDefinitionRequestLogQueryComputeQuery:DashboardWidgetQueryTableDefinitionRequestLogQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "interval": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetQueryTableDefinitionRequestLogQueryGroupBy:DashboardWidgetQueryTableDefinitionRequestLogQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string"
                },
                "limit": {
                    "type": "integer"
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetQueryTableDefinitionRequestLogQueryGroupBySortQuery:DashboardWidgetQueryTableDefinitionRequestLogQueryGroupBySortQuery"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetQueryTableDefinitionRequestLogQueryGroupBySortQuery:DashboardWidgetQueryTableDefinitionRequestLogQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "order": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetQueryTableDefinitionRequestLogQueryMultiCompute:DashboardWidgetQueryTableDefinitionRequestLogQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "interval": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetQueryTableDefinitionRequestProcessQuery:DashboardWidgetQueryTableDefinitionRequestProcessQuery": {
            "properties": {
                "filterBies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "limit": {
                    "type": "integer"
                },
                "metric": {
                    "type": "string"
                },
                "searchBy": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "metric"
            ]
        },
        "datadog:index/DashboardWidgetQueryTableDefinitionRequestQuery:DashboardWidgetQueryTableDefinitionRequestQuery": {
            "properties": {
                "apmDependencyStatsQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetQueryTableDefinitionRequestQueryApmDependencyStatsQuery:DashboardWidgetQueryTableDefinitionRequestQueryApmDependencyStatsQuery"
                },
                "apmResourceStatsQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetQueryTableDefinitionRequestQueryApmResourceStatsQuery:DashboardWidgetQueryTableDefinitionRequestQueryApmResourceStatsQuery"
                },
                "eventQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetQueryTableDefinitionRequestQueryEventQuery:DashboardWidgetQueryTableDefinitionRequestQueryEventQuery"
                },
                "metricQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetQueryTableDefinitionRequestQueryMetricQuery:DashboardWidgetQueryTableDefinitionRequestQueryMetricQuery"
                },
                "processQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetQueryTableDefinitionRequestQueryProcessQuery:DashboardWidgetQueryTableDefinitionRequestQueryProcessQuery"
                },
                "sloQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetQueryTableDefinitionRequestQuerySloQuery:DashboardWidgetQueryTableDefinitionRequestQuerySloQuery"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetQueryTableDefinitionRequestQueryApmDependencyStatsQuery:DashboardWidgetQueryTableDefinitionRequestQueryApmDependencyStatsQuery": {
            "properties": {
                "dataSource": {
                    "type": "string"
                },
                "env": {
                    "type": "string"
                },
                "isUpstream": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "operationName": {
                    "type": "string"
                },
                "primaryTagName": {
                    "type": "string"
                },
                "primaryTagValue": {
                    "type": "string"
                },
                "resourceName": {
                    "type": "string"
                },
                "service": {
                    "type": "string"
                },
                "stat": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "dataSource",
                "env",
                "name",
                "operationName",
                "resourceName",
                "service",
                "stat"
            ]
        },
        "datadog:index/DashboardWidgetQueryTableDefinitionRequestQueryApmResourceStatsQuery:DashboardWidgetQueryTableDefinitionRequestQueryApmResourceStatsQuery": {
            "properties": {
                "dataSource": {
                    "type": "string"
                },
                "env": {
                    "type": "string"
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "name": {
                    "type": "string"
                },
                "operationName": {
                    "type": "string"
                },
                "primaryTagName": {
                    "type": "string"
                },
                "primaryTagValue": {
                    "type": "string"
                },
                "resourceName": {
                    "type": "string"
                },
                "service": {
                    "type": "string"
                },
                "stat": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "dataSource",
                "env",
                "name",
                "service",
                "stat"
            ]
        },
        "datadog:index/DashboardWidgetQueryTableDefinitionRequestQueryEventQuery:DashboardWidgetQueryTableDefinitionRequestQueryEventQuery": {
            "properties": {
                "computes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetQueryTableDefinitionRequestQueryEventQueryCompute:DashboardWidgetQueryTableDefinitionRequestQueryEventQueryCompute"
                    }
                },
                "dataSource": {
                    "type": "string"
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetQueryTableDefinitionRequestQueryEventQueryGroupBy:DashboardWidgetQueryTableDefinitionRequestQueryEventQueryGroupBy"
                    }
                },
                "indexes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "name": {
                    "type": "string"
                },
                "search": {
                    "$ref": "#/types/datadog:index/DashboardWidgetQueryTableDefinitionRequestQueryEventQuerySearch:DashboardWidgetQueryTableDefinitionRequestQueryEventQuerySearch"
                },
                "storage": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "computes",
                "dataSource",
                "name"
            ]
        },
        "datadog:index/DashboardWidgetQueryTableDefinitionRequestQueryEventQueryCompute:DashboardWidgetQueryTableDefinitionRequestQueryEventQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "interval": {
                    "type": "integer"
                },
                "metric": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetQueryTableDefinitionRequestQueryEventQueryGroupBy:DashboardWidgetQueryTableDefinitionRequestQueryEventQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string"
                },
                "limit": {
                    "type": "integer"
                },
                "sort": {
                    "$ref": "#/types/datadog:index/DashboardWidgetQueryTableDefinitionRequestQueryEventQueryGroupBySort:DashboardWidgetQueryTableDefinitionRequestQueryEventQueryGroupBySort"
                }
            },
            "type": "object",
            "required": [
                "facet"
            ]
        },
        "datadog:index/DashboardWidgetQueryTableDefinitionRequestQueryEventQueryGroupBySort:DashboardWidgetQueryTableDefinitionRequestQueryEventQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "metric": {
                    "type": "string"
                },
                "order": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetQueryTableDefinitionRequestQueryEventQuerySearch:DashboardWidgetQueryTableDefinitionRequestQueryEventQuerySearch": {
            "properties": {
                "query": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/DashboardWidgetQueryTableDefinitionRequestQueryMetricQuery:DashboardWidgetQueryTableDefinitionRequestQueryMetricQuery": {
            "properties": {
                "aggregator": {
                    "type": "string"
                },
                "dataSource": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "query": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "name",
                "query"
            ]
        },
        "datadog:index/DashboardWidgetQueryTableDefinitionRequestQueryProcessQuery:DashboardWidgetQueryTableDefinitionRequestQueryProcessQuery": {
            "properties": {
                "aggregator": {
                    "type": "string"
                },
                "dataSource": {
                    "type": "string"
                },
                "isNormalizedCpu": {
                    "type": "boolean"
                },
                "limit": {
                    "type": "integer"
                },
                "metric": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "sort": {
                    "type": "string"
                },
                "tagFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "textFilter": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "dataSource",
                "metric",
                "name"
            ]
        },
        "datadog:index/DashboardWidgetQueryTableDefinitionRequestQuerySloQuery:DashboardWidgetQueryTableDefinitionRequestQuerySloQuery": {
            "properties": {
                "dataSource": {
                    "type": "string"
                },
                "groupMode": {
                    "type": "string"
                },
                "measure": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "sloId": {
                    "type": "string"
                },
                "sloQueryType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "dataSource",
                "measure",
                "sloId"
            ]
        },
        "datadog:index/DashboardWidgetQueryTableDefinitionRequestRumQuery:DashboardWidgetQueryTableDefinitionRequestRumQuery": {
            "properties": {
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetQueryTableDefinitionRequestRumQueryComputeQuery:DashboardWidgetQueryTableDefinitionRequestRumQueryComputeQuery"
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetQueryTableDefinitionRequestRumQueryGroupBy:DashboardWidgetQueryTableDefinitionRequestRumQueryGroupBy"
                    }
                },
                "index": {
                    "type": "string"
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetQueryTableDefinitionRequestRumQueryMultiCompute:DashboardWidgetQueryTableDefinitionRequestRumQueryMultiCompute"
                    }
                },
                "searchQuery": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetQueryTableDefinitionRequestRumQueryComputeQuery:DashboardWidgetQueryTableDefinitionRequestRumQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "interval": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetQueryTableDefinitionRequestRumQueryGroupBy:DashboardWidgetQueryTableDefinitionRequestRumQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string"
                },
                "limit": {
                    "type": "integer"
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetQueryTableDefinitionRequestRumQueryGroupBySortQuery:DashboardWidgetQueryTableDefinitionRequestRumQueryGroupBySortQuery"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetQueryTableDefinitionRequestRumQueryGroupBySortQuery:DashboardWidgetQueryTableDefinitionRequestRumQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "order": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetQueryTableDefinitionRequestRumQueryMultiCompute:DashboardWidgetQueryTableDefinitionRequestRumQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "interval": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetQueryTableDefinitionRequestSecurityQuery:DashboardWidgetQueryTableDefinitionRequestSecurityQuery": {
            "properties": {
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetQueryTableDefinitionRequestSecurityQueryComputeQuery:DashboardWidgetQueryTableDefinitionRequestSecurityQueryComputeQuery"
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetQueryTableDefinitionRequestSecurityQueryGroupBy:DashboardWidgetQueryTableDefinitionRequestSecurityQueryGroupBy"
                    }
                },
                "index": {
                    "type": "string"
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetQueryTableDefinitionRequestSecurityQueryMultiCompute:DashboardWidgetQueryTableDefinitionRequestSecurityQueryMultiCompute"
                    }
                },
                "searchQuery": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetQueryTableDefinitionRequestSecurityQueryComputeQuery:DashboardWidgetQueryTableDefinitionRequestSecurityQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "interval": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetQueryTableDefinitionRequestSecurityQueryGroupBy:DashboardWidgetQueryTableDefinitionRequestSecurityQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string"
                },
                "limit": {
                    "type": "integer"
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetQueryTableDefinitionRequestSecurityQueryGroupBySortQuery:DashboardWidgetQueryTableDefinitionRequestSecurityQueryGroupBySortQuery"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetQueryTableDefinitionRequestSecurityQueryGroupBySortQuery:DashboardWidgetQueryTableDefinitionRequestSecurityQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "order": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetQueryTableDefinitionRequestSecurityQueryMultiCompute:DashboardWidgetQueryTableDefinitionRequestSecurityQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "interval": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetQueryValueDefinition:DashboardWidgetQueryValueDefinition": {
            "properties": {
                "autoscale": {
                    "type": "boolean"
                },
                "customLinks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetQueryValueDefinitionCustomLink:DashboardWidgetQueryValueDefinitionCustomLink"
                    }
                },
                "customUnit": {
                    "type": "string"
                },
                "liveSpan": {
                    "type": "string"
                },
                "precision": {
                    "type": "integer"
                },
                "requests": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetQueryValueDefinitionRequest:DashboardWidgetQueryValueDefinitionRequest"
                    }
                },
                "textAlign": {
                    "type": "string"
                },
                "timeseriesBackground": {
                    "$ref": "#/types/datadog:index/DashboardWidgetQueryValueDefinitionTimeseriesBackground:DashboardWidgetQueryValueDefinitionTimeseriesBackground"
                },
                "title": {
                    "type": "string",
                    "description": "The title of the dashboard.\n"
                },
                "titleAlign": {
                    "type": "string"
                },
                "titleSize": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetQueryValueDefinitionCustomLink:DashboardWidgetQueryValueDefinitionCustomLink": {
            "properties": {
                "isHidden": {
                    "type": "boolean"
                },
                "label": {
                    "type": "string"
                },
                "link": {
                    "type": "string"
                },
                "overrideLabel": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetQueryValueDefinitionRequest:DashboardWidgetQueryValueDefinitionRequest": {
            "properties": {
                "aggregator": {
                    "type": "string"
                },
                "apmQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetQueryValueDefinitionRequestApmQuery:DashboardWidgetQueryValueDefinitionRequestApmQuery"
                },
                "auditQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetQueryValueDefinitionRequestAuditQuery:DashboardWidgetQueryValueDefinitionRequestAuditQuery"
                },
                "conditionalFormats": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetQueryValueDefinitionRequestConditionalFormat:DashboardWidgetQueryValueDefinitionRequestConditionalFormat"
                    }
                },
                "formulas": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetQueryValueDefinitionRequestFormula:DashboardWidgetQueryValueDefinitionRequestFormula"
                    }
                },
                "logQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetQueryValueDefinitionRequestLogQuery:DashboardWidgetQueryValueDefinitionRequestLogQuery"
                },
                "processQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetQueryValueDefinitionRequestProcessQuery:DashboardWidgetQueryValueDefinitionRequestProcessQuery"
                },
                "q": {
                    "type": "string"
                },
                "queries": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetQueryValueDefinitionRequestQuery:DashboardWidgetQueryValueDefinitionRequestQuery"
                    }
                },
                "rumQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetQueryValueDefinitionRequestRumQuery:DashboardWidgetQueryValueDefinitionRequestRumQuery"
                },
                "securityQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetQueryValueDefinitionRequestSecurityQuery:DashboardWidgetQueryValueDefinitionRequestSecurityQuery"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetQueryValueDefinitionRequestApmQuery:DashboardWidgetQueryValueDefinitionRequestApmQuery": {
            "properties": {
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetQueryValueDefinitionRequestApmQueryComputeQuery:DashboardWidgetQueryValueDefinitionRequestApmQueryComputeQuery"
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetQueryValueDefinitionRequestApmQueryGroupBy:DashboardWidgetQueryValueDefinitionRequestApmQueryGroupBy"
                    }
                },
                "index": {
                    "type": "string"
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetQueryValueDefinitionRequestApmQueryMultiCompute:DashboardWidgetQueryValueDefinitionRequestApmQueryMultiCompute"
                    }
                },
                "searchQuery": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetQueryValueDefinitionRequestApmQueryComputeQuery:DashboardWidgetQueryValueDefinitionRequestApmQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "interval": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetQueryValueDefinitionRequestApmQueryGroupBy:DashboardWidgetQueryValueDefinitionRequestApmQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string"
                },
                "limit": {
                    "type": "integer"
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetQueryValueDefinitionRequestApmQueryGroupBySortQuery:DashboardWidgetQueryValueDefinitionRequestApmQueryGroupBySortQuery"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetQueryValueDefinitionRequestApmQueryGroupBySortQuery:DashboardWidgetQueryValueDefinitionRequestApmQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "order": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetQueryValueDefinitionRequestApmQueryMultiCompute:DashboardWidgetQueryValueDefinitionRequestApmQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "interval": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetQueryValueDefinitionRequestAuditQuery:DashboardWidgetQueryValueDefinitionRequestAuditQuery": {
            "properties": {
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetQueryValueDefinitionRequestAuditQueryComputeQuery:DashboardWidgetQueryValueDefinitionRequestAuditQueryComputeQuery"
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetQueryValueDefinitionRequestAuditQueryGroupBy:DashboardWidgetQueryValueDefinitionRequestAuditQueryGroupBy"
                    }
                },
                "index": {
                    "type": "string"
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetQueryValueDefinitionRequestAuditQueryMultiCompute:DashboardWidgetQueryValueDefinitionRequestAuditQueryMultiCompute"
                    }
                },
                "searchQuery": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetQueryValueDefinitionRequestAuditQueryComputeQuery:DashboardWidgetQueryValueDefinitionRequestAuditQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "interval": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetQueryValueDefinitionRequestAuditQueryGroupBy:DashboardWidgetQueryValueDefinitionRequestAuditQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string"
                },
                "limit": {
                    "type": "integer"
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetQueryValueDefinitionRequestAuditQueryGroupBySortQuery:DashboardWidgetQueryValueDefinitionRequestAuditQueryGroupBySortQuery"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetQueryValueDefinitionRequestAuditQueryGroupBySortQuery:DashboardWidgetQueryValueDefinitionRequestAuditQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "order": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetQueryValueDefinitionRequestAuditQueryMultiCompute:DashboardWidgetQueryValueDefinitionRequestAuditQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "interval": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetQueryValueDefinitionRequestConditionalFormat:DashboardWidgetQueryValueDefinitionRequestConditionalFormat": {
            "properties": {
                "comparator": {
                    "type": "string"
                },
                "customBgColor": {
                    "type": "string"
                },
                "customFgColor": {
                    "type": "string"
                },
                "hideValue": {
                    "type": "boolean"
                },
                "imageUrl": {
                    "type": "string"
                },
                "metric": {
                    "type": "string"
                },
                "palette": {
                    "type": "string"
                },
                "timeframe": {
                    "type": "string"
                },
                "value": {
                    "type": "number"
                }
            },
            "type": "object",
            "required": [
                "comparator",
                "palette",
                "value"
            ]
        },
        "datadog:index/DashboardWidgetQueryValueDefinitionRequestFormula:DashboardWidgetQueryValueDefinitionRequestFormula": {
            "properties": {
                "alias": {
                    "type": "string"
                },
                "cellDisplayMode": {
                    "type": "string"
                },
                "conditionalFormats": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetQueryValueDefinitionRequestFormulaConditionalFormat:DashboardWidgetQueryValueDefinitionRequestFormulaConditionalFormat"
                    }
                },
                "formulaExpression": {
                    "type": "string"
                },
                "limit": {
                    "$ref": "#/types/datadog:index/DashboardWidgetQueryValueDefinitionRequestFormulaLimit:DashboardWidgetQueryValueDefinitionRequestFormulaLimit"
                },
                "style": {
                    "$ref": "#/types/datadog:index/DashboardWidgetQueryValueDefinitionRequestFormulaStyle:DashboardWidgetQueryValueDefinitionRequestFormulaStyle"
                }
            },
            "type": "object",
            "required": [
                "formulaExpression"
            ]
        },
        "datadog:index/DashboardWidgetQueryValueDefinitionRequestFormulaConditionalFormat:DashboardWidgetQueryValueDefinitionRequestFormulaConditionalFormat": {
            "properties": {
                "comparator": {
                    "type": "string"
                },
                "customBgColor": {
                    "type": "string"
                },
                "customFgColor": {
                    "type": "string"
                },
                "hideValue": {
                    "type": "boolean"
                },
                "imageUrl": {
                    "type": "string"
                },
                "metric": {
                    "type": "string"
                },
                "palette": {
                    "type": "string"
                },
                "timeframe": {
                    "type": "string"
                },
                "value": {
                    "type": "number"
                }
            },
            "type": "object",
            "required": [
                "comparator",
                "palette",
                "value"
            ]
        },
        "datadog:index/DashboardWidgetQueryValueDefinitionRequestFormulaLimit:DashboardWidgetQueryValueDefinitionRequestFormulaLimit": {
            "properties": {
                "count": {
                    "type": "integer"
                },
                "order": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetQueryValueDefinitionRequestFormulaStyle:DashboardWidgetQueryValueDefinitionRequestFormulaStyle": {
            "properties": {
                "palette": {
                    "type": "string"
                },
                "paletteIndex": {
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetQueryValueDefinitionRequestLogQuery:DashboardWidgetQueryValueDefinitionRequestLogQuery": {
            "properties": {
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetQueryValueDefinitionRequestLogQueryComputeQuery:DashboardWidgetQueryValueDefinitionRequestLogQueryComputeQuery"
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetQueryValueDefinitionRequestLogQueryGroupBy:DashboardWidgetQueryValueDefinitionRequestLogQueryGroupBy"
                    }
                },
                "index": {
                    "type": "string"
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetQueryValueDefinitionRequestLogQueryMultiCompute:DashboardWidgetQueryValueDefinitionRequestLogQueryMultiCompute"
                    }
                },
                "searchQuery": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetQueryValueDefinitionRequestLogQueryComputeQuery:DashboardWidgetQueryValueDefinitionRequestLogQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "interval": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetQueryValueDefinitionRequestLogQueryGroupBy:DashboardWidgetQueryValueDefinitionRequestLogQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string"
                },
                "limit": {
                    "type": "integer"
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetQueryValueDefinitionRequestLogQueryGroupBySortQuery:DashboardWidgetQueryValueDefinitionRequestLogQueryGroupBySortQuery"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetQueryValueDefinitionRequestLogQueryGroupBySortQuery:DashboardWidgetQueryValueDefinitionRequestLogQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "order": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetQueryValueDefinitionRequestLogQueryMultiCompute:DashboardWidgetQueryValueDefinitionRequestLogQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "interval": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetQueryValueDefinitionRequestProcessQuery:DashboardWidgetQueryValueDefinitionRequestProcessQuery": {
            "properties": {
                "filterBies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "limit": {
                    "type": "integer"
                },
                "metric": {
                    "type": "string"
                },
                "searchBy": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "metric"
            ]
        },
        "datadog:index/DashboardWidgetQueryValueDefinitionRequestQuery:DashboardWidgetQueryValueDefinitionRequestQuery": {
            "properties": {
                "apmDependencyStatsQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetQueryValueDefinitionRequestQueryApmDependencyStatsQuery:DashboardWidgetQueryValueDefinitionRequestQueryApmDependencyStatsQuery"
                },
                "apmResourceStatsQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetQueryValueDefinitionRequestQueryApmResourceStatsQuery:DashboardWidgetQueryValueDefinitionRequestQueryApmResourceStatsQuery"
                },
                "eventQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetQueryValueDefinitionRequestQueryEventQuery:DashboardWidgetQueryValueDefinitionRequestQueryEventQuery"
                },
                "metricQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetQueryValueDefinitionRequestQueryMetricQuery:DashboardWidgetQueryValueDefinitionRequestQueryMetricQuery"
                },
                "processQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetQueryValueDefinitionRequestQueryProcessQuery:DashboardWidgetQueryValueDefinitionRequestQueryProcessQuery"
                },
                "sloQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetQueryValueDefinitionRequestQuerySloQuery:DashboardWidgetQueryValueDefinitionRequestQuerySloQuery"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetQueryValueDefinitionRequestQueryApmDependencyStatsQuery:DashboardWidgetQueryValueDefinitionRequestQueryApmDependencyStatsQuery": {
            "properties": {
                "dataSource": {
                    "type": "string"
                },
                "env": {
                    "type": "string"
                },
                "isUpstream": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "operationName": {
                    "type": "string"
                },
                "primaryTagName": {
                    "type": "string"
                },
                "primaryTagValue": {
                    "type": "string"
                },
                "resourceName": {
                    "type": "string"
                },
                "service": {
                    "type": "string"
                },
                "stat": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "dataSource",
                "env",
                "name",
                "operationName",
                "resourceName",
                "service",
                "stat"
            ]
        },
        "datadog:index/DashboardWidgetQueryValueDefinitionRequestQueryApmResourceStatsQuery:DashboardWidgetQueryValueDefinitionRequestQueryApmResourceStatsQuery": {
            "properties": {
                "dataSource": {
                    "type": "string"
                },
                "env": {
                    "type": "string"
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "name": {
                    "type": "string"
                },
                "operationName": {
                    "type": "string"
                },
                "primaryTagName": {
                    "type": "string"
                },
                "primaryTagValue": {
                    "type": "string"
                },
                "resourceName": {
                    "type": "string"
                },
                "service": {
                    "type": "string"
                },
                "stat": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "dataSource",
                "env",
                "name",
                "service",
                "stat"
            ]
        },
        "datadog:index/DashboardWidgetQueryValueDefinitionRequestQueryEventQuery:DashboardWidgetQueryValueDefinitionRequestQueryEventQuery": {
            "properties": {
                "computes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetQueryValueDefinitionRequestQueryEventQueryCompute:DashboardWidgetQueryValueDefinitionRequestQueryEventQueryCompute"
                    }
                },
                "dataSource": {
                    "type": "string"
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetQueryValueDefinitionRequestQueryEventQueryGroupBy:DashboardWidgetQueryValueDefinitionRequestQueryEventQueryGroupBy"
                    }
                },
                "indexes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "name": {
                    "type": "string"
                },
                "search": {
                    "$ref": "#/types/datadog:index/DashboardWidgetQueryValueDefinitionRequestQueryEventQuerySearch:DashboardWidgetQueryValueDefinitionRequestQueryEventQuerySearch"
                },
                "storage": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "computes",
                "dataSource",
                "name"
            ]
        },
        "datadog:index/DashboardWidgetQueryValueDefinitionRequestQueryEventQueryCompute:DashboardWidgetQueryValueDefinitionRequestQueryEventQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "interval": {
                    "type": "integer"
                },
                "metric": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetQueryValueDefinitionRequestQueryEventQueryGroupBy:DashboardWidgetQueryValueDefinitionRequestQueryEventQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string"
                },
                "limit": {
                    "type": "integer"
                },
                "sort": {
                    "$ref": "#/types/datadog:index/DashboardWidgetQueryValueDefinitionRequestQueryEventQueryGroupBySort:DashboardWidgetQueryValueDefinitionRequestQueryEventQueryGroupBySort"
                }
            },
            "type": "object",
            "required": [
                "facet"
            ]
        },
        "datadog:index/DashboardWidgetQueryValueDefinitionRequestQueryEventQueryGroupBySort:DashboardWidgetQueryValueDefinitionRequestQueryEventQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "metric": {
                    "type": "string"
                },
                "order": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetQueryValueDefinitionRequestQueryEventQuerySearch:DashboardWidgetQueryValueDefinitionRequestQueryEventQuerySearch": {
            "properties": {
                "query": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/DashboardWidgetQueryValueDefinitionRequestQueryMetricQuery:DashboardWidgetQueryValueDefinitionRequestQueryMetricQuery": {
            "properties": {
                "aggregator": {
                    "type": "string"
                },
                "dataSource": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "query": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "name",
                "query"
            ]
        },
        "datadog:index/DashboardWidgetQueryValueDefinitionRequestQueryProcessQuery:DashboardWidgetQueryValueDefinitionRequestQueryProcessQuery": {
            "properties": {
                "aggregator": {
                    "type": "string"
                },
                "dataSource": {
                    "type": "string"
                },
                "isNormalizedCpu": {
                    "type": "boolean"
                },
                "limit": {
                    "type": "integer"
                },
                "metric": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "sort": {
                    "type": "string"
                },
                "tagFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "textFilter": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "dataSource",
                "metric",
                "name"
            ]
        },
        "datadog:index/DashboardWidgetQueryValueDefinitionRequestQuerySloQuery:DashboardWidgetQueryValueDefinitionRequestQuerySloQuery": {
            "properties": {
                "dataSource": {
                    "type": "string"
                },
                "groupMode": {
                    "type": "string"
                },
                "measure": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "sloId": {
                    "type": "string"
                },
                "sloQueryType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "dataSource",
                "measure",
                "sloId"
            ]
        },
        "datadog:index/DashboardWidgetQueryValueDefinitionRequestRumQuery:DashboardWidgetQueryValueDefinitionRequestRumQuery": {
            "properties": {
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetQueryValueDefinitionRequestRumQueryComputeQuery:DashboardWidgetQueryValueDefinitionRequestRumQueryComputeQuery"
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetQueryValueDefinitionRequestRumQueryGroupBy:DashboardWidgetQueryValueDefinitionRequestRumQueryGroupBy"
                    }
                },
                "index": {
                    "type": "string"
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetQueryValueDefinitionRequestRumQueryMultiCompute:DashboardWidgetQueryValueDefinitionRequestRumQueryMultiCompute"
                    }
                },
                "searchQuery": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetQueryValueDefinitionRequestRumQueryComputeQuery:DashboardWidgetQueryValueDefinitionRequestRumQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "interval": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetQueryValueDefinitionRequestRumQueryGroupBy:DashboardWidgetQueryValueDefinitionRequestRumQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string"
                },
                "limit": {
                    "type": "integer"
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetQueryValueDefinitionRequestRumQueryGroupBySortQuery:DashboardWidgetQueryValueDefinitionRequestRumQueryGroupBySortQuery"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetQueryValueDefinitionRequestRumQueryGroupBySortQuery:DashboardWidgetQueryValueDefinitionRequestRumQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "order": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetQueryValueDefinitionRequestRumQueryMultiCompute:DashboardWidgetQueryValueDefinitionRequestRumQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "interval": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetQueryValueDefinitionRequestSecurityQuery:DashboardWidgetQueryValueDefinitionRequestSecurityQuery": {
            "properties": {
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetQueryValueDefinitionRequestSecurityQueryComputeQuery:DashboardWidgetQueryValueDefinitionRequestSecurityQueryComputeQuery"
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetQueryValueDefinitionRequestSecurityQueryGroupBy:DashboardWidgetQueryValueDefinitionRequestSecurityQueryGroupBy"
                    }
                },
                "index": {
                    "type": "string"
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetQueryValueDefinitionRequestSecurityQueryMultiCompute:DashboardWidgetQueryValueDefinitionRequestSecurityQueryMultiCompute"
                    }
                },
                "searchQuery": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetQueryValueDefinitionRequestSecurityQueryComputeQuery:DashboardWidgetQueryValueDefinitionRequestSecurityQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "interval": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetQueryValueDefinitionRequestSecurityQueryGroupBy:DashboardWidgetQueryValueDefinitionRequestSecurityQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string"
                },
                "limit": {
                    "type": "integer"
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetQueryValueDefinitionRequestSecurityQueryGroupBySortQuery:DashboardWidgetQueryValueDefinitionRequestSecurityQueryGroupBySortQuery"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetQueryValueDefinitionRequestSecurityQueryGroupBySortQuery:DashboardWidgetQueryValueDefinitionRequestSecurityQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "order": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetQueryValueDefinitionRequestSecurityQueryMultiCompute:DashboardWidgetQueryValueDefinitionRequestSecurityQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "interval": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetQueryValueDefinitionTimeseriesBackground:DashboardWidgetQueryValueDefinitionTimeseriesBackground": {
            "properties": {
                "type": {
                    "type": "string"
                },
                "yaxis": {
                    "$ref": "#/types/datadog:index/DashboardWidgetQueryValueDefinitionTimeseriesBackgroundYaxis:DashboardWidgetQueryValueDefinitionTimeseriesBackgroundYaxis"
                }
            },
            "type": "object",
            "required": [
                "type"
            ]
        },
        "datadog:index/DashboardWidgetQueryValueDefinitionTimeseriesBackgroundYaxis:DashboardWidgetQueryValueDefinitionTimeseriesBackgroundYaxis": {
            "properties": {
                "includeZero": {
                    "type": "boolean"
                },
                "label": {
                    "type": "string"
                },
                "max": {
                    "type": "string"
                },
                "min": {
                    "type": "string"
                },
                "scale": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetRunWorkflowDefinition:DashboardWidgetRunWorkflowDefinition": {
            "properties": {
                "customLinks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetRunWorkflowDefinitionCustomLink:DashboardWidgetRunWorkflowDefinitionCustomLink"
                    }
                },
                "inputs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetRunWorkflowDefinitionInput:DashboardWidgetRunWorkflowDefinitionInput"
                    }
                },
                "liveSpan": {
                    "type": "string"
                },
                "title": {
                    "type": "string",
                    "description": "The title of the dashboard.\n"
                },
                "titleAlign": {
                    "type": "string"
                },
                "titleSize": {
                    "type": "string"
                },
                "workflowId": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "workflowId"
            ]
        },
        "datadog:index/DashboardWidgetRunWorkflowDefinitionCustomLink:DashboardWidgetRunWorkflowDefinitionCustomLink": {
            "properties": {
                "isHidden": {
                    "type": "boolean"
                },
                "label": {
                    "type": "string"
                },
                "link": {
                    "type": "string"
                },
                "overrideLabel": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetRunWorkflowDefinitionInput:DashboardWidgetRunWorkflowDefinitionInput": {
            "properties": {
                "name": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "name",
                "value"
            ]
        },
        "datadog:index/DashboardWidgetScatterplotDefinition:DashboardWidgetScatterplotDefinition": {
            "properties": {
                "colorByGroups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "customLinks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetScatterplotDefinitionCustomLink:DashboardWidgetScatterplotDefinitionCustomLink"
                    }
                },
                "liveSpan": {
                    "type": "string"
                },
                "request": {
                    "$ref": "#/types/datadog:index/DashboardWidgetScatterplotDefinitionRequest:DashboardWidgetScatterplotDefinitionRequest"
                },
                "title": {
                    "type": "string",
                    "description": "The title of the dashboard.\n"
                },
                "titleAlign": {
                    "type": "string"
                },
                "titleSize": {
                    "type": "string"
                },
                "xaxis": {
                    "$ref": "#/types/datadog:index/DashboardWidgetScatterplotDefinitionXaxis:DashboardWidgetScatterplotDefinitionXaxis"
                },
                "yaxis": {
                    "$ref": "#/types/datadog:index/DashboardWidgetScatterplotDefinitionYaxis:DashboardWidgetScatterplotDefinitionYaxis"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetScatterplotDefinitionCustomLink:DashboardWidgetScatterplotDefinitionCustomLink": {
            "properties": {
                "isHidden": {
                    "type": "boolean"
                },
                "label": {
                    "type": "string"
                },
                "link": {
                    "type": "string"
                },
                "overrideLabel": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetScatterplotDefinitionRequest:DashboardWidgetScatterplotDefinitionRequest": {
            "properties": {
                "scatterplotTables": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetScatterplotDefinitionRequestScatterplotTable:DashboardWidgetScatterplotDefinitionRequestScatterplotTable"
                    }
                },
                "xes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetScatterplotDefinitionRequestX:DashboardWidgetScatterplotDefinitionRequestX"
                    }
                },
                "ys": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetScatterplotDefinitionRequestY:DashboardWidgetScatterplotDefinitionRequestY"
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetScatterplotDefinitionRequestScatterplotTable:DashboardWidgetScatterplotDefinitionRequestScatterplotTable": {
            "properties": {
                "formulas": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetScatterplotDefinitionRequestScatterplotTableFormula:DashboardWidgetScatterplotDefinitionRequestScatterplotTableFormula"
                    }
                },
                "queries": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetScatterplotDefinitionRequestScatterplotTableQuery:DashboardWidgetScatterplotDefinitionRequestScatterplotTableQuery"
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetScatterplotDefinitionRequestScatterplotTableFormula:DashboardWidgetScatterplotDefinitionRequestScatterplotTableFormula": {
            "properties": {
                "alias": {
                    "type": "string"
                },
                "dimension": {
                    "type": "string"
                },
                "formulaExpression": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "dimension",
                "formulaExpression"
            ]
        },
        "datadog:index/DashboardWidgetScatterplotDefinitionRequestScatterplotTableQuery:DashboardWidgetScatterplotDefinitionRequestScatterplotTableQuery": {
            "properties": {
                "apmDependencyStatsQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetScatterplotDefinitionRequestScatterplotTableQueryApmDependencyStatsQuery:DashboardWidgetScatterplotDefinitionRequestScatterplotTableQueryApmDependencyStatsQuery"
                },
                "apmResourceStatsQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetScatterplotDefinitionRequestScatterplotTableQueryApmResourceStatsQuery:DashboardWidgetScatterplotDefinitionRequestScatterplotTableQueryApmResourceStatsQuery"
                },
                "eventQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetScatterplotDefinitionRequestScatterplotTableQueryEventQuery:DashboardWidgetScatterplotDefinitionRequestScatterplotTableQueryEventQuery"
                },
                "metricQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetScatterplotDefinitionRequestScatterplotTableQueryMetricQuery:DashboardWidgetScatterplotDefinitionRequestScatterplotTableQueryMetricQuery"
                },
                "processQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetScatterplotDefinitionRequestScatterplotTableQueryProcessQuery:DashboardWidgetScatterplotDefinitionRequestScatterplotTableQueryProcessQuery"
                },
                "sloQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetScatterplotDefinitionRequestScatterplotTableQuerySloQuery:DashboardWidgetScatterplotDefinitionRequestScatterplotTableQuerySloQuery"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetScatterplotDefinitionRequestScatterplotTableQueryApmDependencyStatsQuery:DashboardWidgetScatterplotDefinitionRequestScatterplotTableQueryApmDependencyStatsQuery": {
            "properties": {
                "dataSource": {
                    "type": "string"
                },
                "env": {
                    "type": "string"
                },
                "isUpstream": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "operationName": {
                    "type": "string"
                },
                "primaryTagName": {
                    "type": "string"
                },
                "primaryTagValue": {
                    "type": "string"
                },
                "resourceName": {
                    "type": "string"
                },
                "service": {
                    "type": "string"
                },
                "stat": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "dataSource",
                "env",
                "name",
                "operationName",
                "resourceName",
                "service",
                "stat"
            ]
        },
        "datadog:index/DashboardWidgetScatterplotDefinitionRequestScatterplotTableQueryApmResourceStatsQuery:DashboardWidgetScatterplotDefinitionRequestScatterplotTableQueryApmResourceStatsQuery": {
            "properties": {
                "dataSource": {
                    "type": "string"
                },
                "env": {
                    "type": "string"
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "name": {
                    "type": "string"
                },
                "operationName": {
                    "type": "string"
                },
                "primaryTagName": {
                    "type": "string"
                },
                "primaryTagValue": {
                    "type": "string"
                },
                "resourceName": {
                    "type": "string"
                },
                "service": {
                    "type": "string"
                },
                "stat": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "dataSource",
                "env",
                "name",
                "service",
                "stat"
            ]
        },
        "datadog:index/DashboardWidgetScatterplotDefinitionRequestScatterplotTableQueryEventQuery:DashboardWidgetScatterplotDefinitionRequestScatterplotTableQueryEventQuery": {
            "properties": {
                "computes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetScatterplotDefinitionRequestScatterplotTableQueryEventQueryCompute:DashboardWidgetScatterplotDefinitionRequestScatterplotTableQueryEventQueryCompute"
                    }
                },
                "dataSource": {
                    "type": "string"
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetScatterplotDefinitionRequestScatterplotTableQueryEventQueryGroupBy:DashboardWidgetScatterplotDefinitionRequestScatterplotTableQueryEventQueryGroupBy"
                    }
                },
                "indexes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "name": {
                    "type": "string"
                },
                "search": {
                    "$ref": "#/types/datadog:index/DashboardWidgetScatterplotDefinitionRequestScatterplotTableQueryEventQuerySearch:DashboardWidgetScatterplotDefinitionRequestScatterplotTableQueryEventQuerySearch"
                },
                "storage": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "computes",
                "dataSource",
                "name"
            ]
        },
        "datadog:index/DashboardWidgetScatterplotDefinitionRequestScatterplotTableQueryEventQueryCompute:DashboardWidgetScatterplotDefinitionRequestScatterplotTableQueryEventQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "interval": {
                    "type": "integer"
                },
                "metric": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetScatterplotDefinitionRequestScatterplotTableQueryEventQueryGroupBy:DashboardWidgetScatterplotDefinitionRequestScatterplotTableQueryEventQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string"
                },
                "limit": {
                    "type": "integer"
                },
                "sort": {
                    "$ref": "#/types/datadog:index/DashboardWidgetScatterplotDefinitionRequestScatterplotTableQueryEventQueryGroupBySort:DashboardWidgetScatterplotDefinitionRequestScatterplotTableQueryEventQueryGroupBySort"
                }
            },
            "type": "object",
            "required": [
                "facet"
            ]
        },
        "datadog:index/DashboardWidgetScatterplotDefinitionRequestScatterplotTableQueryEventQueryGroupBySort:DashboardWidgetScatterplotDefinitionRequestScatterplotTableQueryEventQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "metric": {
                    "type": "string"
                },
                "order": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetScatterplotDefinitionRequestScatterplotTableQueryEventQuerySearch:DashboardWidgetScatterplotDefinitionRequestScatterplotTableQueryEventQuerySearch": {
            "properties": {
                "query": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/DashboardWidgetScatterplotDefinitionRequestScatterplotTableQueryMetricQuery:DashboardWidgetScatterplotDefinitionRequestScatterplotTableQueryMetricQuery": {
            "properties": {
                "aggregator": {
                    "type": "string"
                },
                "dataSource": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "query": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "name",
                "query"
            ]
        },
        "datadog:index/DashboardWidgetScatterplotDefinitionRequestScatterplotTableQueryProcessQuery:DashboardWidgetScatterplotDefinitionRequestScatterplotTableQueryProcessQuery": {
            "properties": {
                "aggregator": {
                    "type": "string"
                },
                "dataSource": {
                    "type": "string"
                },
                "isNormalizedCpu": {
                    "type": "boolean"
                },
                "limit": {
                    "type": "integer"
                },
                "metric": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "sort": {
                    "type": "string"
                },
                "tagFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "textFilter": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "dataSource",
                "metric",
                "name"
            ]
        },
        "datadog:index/DashboardWidgetScatterplotDefinitionRequestScatterplotTableQuerySloQuery:DashboardWidgetScatterplotDefinitionRequestScatterplotTableQuerySloQuery": {
            "properties": {
                "dataSource": {
                    "type": "string"
                },
                "groupMode": {
                    "type": "string"
                },
                "measure": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "sloId": {
                    "type": "string"
                },
                "sloQueryType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "dataSource",
                "measure",
                "sloId"
            ]
        },
        "datadog:index/DashboardWidgetScatterplotDefinitionRequestX:DashboardWidgetScatterplotDefinitionRequestX": {
            "properties": {
                "aggregator": {
                    "type": "string"
                },
                "apmQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetScatterplotDefinitionRequestXApmQuery:DashboardWidgetScatterplotDefinitionRequestXApmQuery"
                },
                "logQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetScatterplotDefinitionRequestXLogQuery:DashboardWidgetScatterplotDefinitionRequestXLogQuery"
                },
                "processQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetScatterplotDefinitionRequestXProcessQuery:DashboardWidgetScatterplotDefinitionRequestXProcessQuery"
                },
                "q": {
                    "type": "string"
                },
                "rumQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetScatterplotDefinitionRequestXRumQuery:DashboardWidgetScatterplotDefinitionRequestXRumQuery"
                },
                "securityQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetScatterplotDefinitionRequestXSecurityQuery:DashboardWidgetScatterplotDefinitionRequestXSecurityQuery"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetScatterplotDefinitionRequestXApmQuery:DashboardWidgetScatterplotDefinitionRequestXApmQuery": {
            "properties": {
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetScatterplotDefinitionRequestXApmQueryComputeQuery:DashboardWidgetScatterplotDefinitionRequestXApmQueryComputeQuery"
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetScatterplotDefinitionRequestXApmQueryGroupBy:DashboardWidgetScatterplotDefinitionRequestXApmQueryGroupBy"
                    }
                },
                "index": {
                    "type": "string"
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetScatterplotDefinitionRequestXApmQueryMultiCompute:DashboardWidgetScatterplotDefinitionRequestXApmQueryMultiCompute"
                    }
                },
                "searchQuery": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetScatterplotDefinitionRequestXApmQueryComputeQuery:DashboardWidgetScatterplotDefinitionRequestXApmQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "interval": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetScatterplotDefinitionRequestXApmQueryGroupBy:DashboardWidgetScatterplotDefinitionRequestXApmQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string"
                },
                "limit": {
                    "type": "integer"
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetScatterplotDefinitionRequestXApmQueryGroupBySortQuery:DashboardWidgetScatterplotDefinitionRequestXApmQueryGroupBySortQuery"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetScatterplotDefinitionRequestXApmQueryGroupBySortQuery:DashboardWidgetScatterplotDefinitionRequestXApmQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "order": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetScatterplotDefinitionRequestXApmQueryMultiCompute:DashboardWidgetScatterplotDefinitionRequestXApmQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "interval": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetScatterplotDefinitionRequestXLogQuery:DashboardWidgetScatterplotDefinitionRequestXLogQuery": {
            "properties": {
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetScatterplotDefinitionRequestXLogQueryComputeQuery:DashboardWidgetScatterplotDefinitionRequestXLogQueryComputeQuery"
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetScatterplotDefinitionRequestXLogQueryGroupBy:DashboardWidgetScatterplotDefinitionRequestXLogQueryGroupBy"
                    }
                },
                "index": {
                    "type": "string"
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetScatterplotDefinitionRequestXLogQueryMultiCompute:DashboardWidgetScatterplotDefinitionRequestXLogQueryMultiCompute"
                    }
                },
                "searchQuery": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetScatterplotDefinitionRequestXLogQueryComputeQuery:DashboardWidgetScatterplotDefinitionRequestXLogQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "interval": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetScatterplotDefinitionRequestXLogQueryGroupBy:DashboardWidgetScatterplotDefinitionRequestXLogQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string"
                },
                "limit": {
                    "type": "integer"
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetScatterplotDefinitionRequestXLogQueryGroupBySortQuery:DashboardWidgetScatterplotDefinitionRequestXLogQueryGroupBySortQuery"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetScatterplotDefinitionRequestXLogQueryGroupBySortQuery:DashboardWidgetScatterplotDefinitionRequestXLogQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "order": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetScatterplotDefinitionRequestXLogQueryMultiCompute:DashboardWidgetScatterplotDefinitionRequestXLogQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "interval": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetScatterplotDefinitionRequestXProcessQuery:DashboardWidgetScatterplotDefinitionRequestXProcessQuery": {
            "properties": {
                "filterBies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "limit": {
                    "type": "integer"
                },
                "metric": {
                    "type": "string"
                },
                "searchBy": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "metric"
            ]
        },
        "datadog:index/DashboardWidgetScatterplotDefinitionRequestXRumQuery:DashboardWidgetScatterplotDefinitionRequestXRumQuery": {
            "properties": {
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetScatterplotDefinitionRequestXRumQueryComputeQuery:DashboardWidgetScatterplotDefinitionRequestXRumQueryComputeQuery"
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetScatterplotDefinitionRequestXRumQueryGroupBy:DashboardWidgetScatterplotDefinitionRequestXRumQueryGroupBy"
                    }
                },
                "index": {
                    "type": "string"
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetScatterplotDefinitionRequestXRumQueryMultiCompute:DashboardWidgetScatterplotDefinitionRequestXRumQueryMultiCompute"
                    }
                },
                "searchQuery": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetScatterplotDefinitionRequestXRumQueryComputeQuery:DashboardWidgetScatterplotDefinitionRequestXRumQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "interval": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetScatterplotDefinitionRequestXRumQueryGroupBy:DashboardWidgetScatterplotDefinitionRequestXRumQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string"
                },
                "limit": {
                    "type": "integer"
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetScatterplotDefinitionRequestXRumQueryGroupBySortQuery:DashboardWidgetScatterplotDefinitionRequestXRumQueryGroupBySortQuery"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetScatterplotDefinitionRequestXRumQueryGroupBySortQuery:DashboardWidgetScatterplotDefinitionRequestXRumQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "order": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetScatterplotDefinitionRequestXRumQueryMultiCompute:DashboardWidgetScatterplotDefinitionRequestXRumQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "interval": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetScatterplotDefinitionRequestXSecurityQuery:DashboardWidgetScatterplotDefinitionRequestXSecurityQuery": {
            "properties": {
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetScatterplotDefinitionRequestXSecurityQueryComputeQuery:DashboardWidgetScatterplotDefinitionRequestXSecurityQueryComputeQuery"
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetScatterplotDefinitionRequestXSecurityQueryGroupBy:DashboardWidgetScatterplotDefinitionRequestXSecurityQueryGroupBy"
                    }
                },
                "index": {
                    "type": "string"
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetScatterplotDefinitionRequestXSecurityQueryMultiCompute:DashboardWidgetScatterplotDefinitionRequestXSecurityQueryMultiCompute"
                    }
                },
                "searchQuery": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetScatterplotDefinitionRequestXSecurityQueryComputeQuery:DashboardWidgetScatterplotDefinitionRequestXSecurityQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "interval": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetScatterplotDefinitionRequestXSecurityQueryGroupBy:DashboardWidgetScatterplotDefinitionRequestXSecurityQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string"
                },
                "limit": {
                    "type": "integer"
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetScatterplotDefinitionRequestXSecurityQueryGroupBySortQuery:DashboardWidgetScatterplotDefinitionRequestXSecurityQueryGroupBySortQuery"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetScatterplotDefinitionRequestXSecurityQueryGroupBySortQuery:DashboardWidgetScatterplotDefinitionRequestXSecurityQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "order": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetScatterplotDefinitionRequestXSecurityQueryMultiCompute:DashboardWidgetScatterplotDefinitionRequestXSecurityQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "interval": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetScatterplotDefinitionRequestY:DashboardWidgetScatterplotDefinitionRequestY": {
            "properties": {
                "aggregator": {
                    "type": "string"
                },
                "apmQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetScatterplotDefinitionRequestYApmQuery:DashboardWidgetScatterplotDefinitionRequestYApmQuery"
                },
                "logQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetScatterplotDefinitionRequestYLogQuery:DashboardWidgetScatterplotDefinitionRequestYLogQuery"
                },
                "processQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetScatterplotDefinitionRequestYProcessQuery:DashboardWidgetScatterplotDefinitionRequestYProcessQuery"
                },
                "q": {
                    "type": "string"
                },
                "rumQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetScatterplotDefinitionRequestYRumQuery:DashboardWidgetScatterplotDefinitionRequestYRumQuery"
                },
                "securityQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetScatterplotDefinitionRequestYSecurityQuery:DashboardWidgetScatterplotDefinitionRequestYSecurityQuery"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetScatterplotDefinitionRequestYApmQuery:DashboardWidgetScatterplotDefinitionRequestYApmQuery": {
            "properties": {
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetScatterplotDefinitionRequestYApmQueryComputeQuery:DashboardWidgetScatterplotDefinitionRequestYApmQueryComputeQuery"
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetScatterplotDefinitionRequestYApmQueryGroupBy:DashboardWidgetScatterplotDefinitionRequestYApmQueryGroupBy"
                    }
                },
                "index": {
                    "type": "string"
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetScatterplotDefinitionRequestYApmQueryMultiCompute:DashboardWidgetScatterplotDefinitionRequestYApmQueryMultiCompute"
                    }
                },
                "searchQuery": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetScatterplotDefinitionRequestYApmQueryComputeQuery:DashboardWidgetScatterplotDefinitionRequestYApmQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "interval": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetScatterplotDefinitionRequestYApmQueryGroupBy:DashboardWidgetScatterplotDefinitionRequestYApmQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string"
                },
                "limit": {
                    "type": "integer"
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetScatterplotDefinitionRequestYApmQueryGroupBySortQuery:DashboardWidgetScatterplotDefinitionRequestYApmQueryGroupBySortQuery"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetScatterplotDefinitionRequestYApmQueryGroupBySortQuery:DashboardWidgetScatterplotDefinitionRequestYApmQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "order": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetScatterplotDefinitionRequestYApmQueryMultiCompute:DashboardWidgetScatterplotDefinitionRequestYApmQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "interval": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetScatterplotDefinitionRequestYLogQuery:DashboardWidgetScatterplotDefinitionRequestYLogQuery": {
            "properties": {
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetScatterplotDefinitionRequestYLogQueryComputeQuery:DashboardWidgetScatterplotDefinitionRequestYLogQueryComputeQuery"
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetScatterplotDefinitionRequestYLogQueryGroupBy:DashboardWidgetScatterplotDefinitionRequestYLogQueryGroupBy"
                    }
                },
                "index": {
                    "type": "string"
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetScatterplotDefinitionRequestYLogQueryMultiCompute:DashboardWidgetScatterplotDefinitionRequestYLogQueryMultiCompute"
                    }
                },
                "searchQuery": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetScatterplotDefinitionRequestYLogQueryComputeQuery:DashboardWidgetScatterplotDefinitionRequestYLogQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "interval": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetScatterplotDefinitionRequestYLogQueryGroupBy:DashboardWidgetScatterplotDefinitionRequestYLogQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string"
                },
                "limit": {
                    "type": "integer"
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetScatterplotDefinitionRequestYLogQueryGroupBySortQuery:DashboardWidgetScatterplotDefinitionRequestYLogQueryGroupBySortQuery"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetScatterplotDefinitionRequestYLogQueryGroupBySortQuery:DashboardWidgetScatterplotDefinitionRequestYLogQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "order": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetScatterplotDefinitionRequestYLogQueryMultiCompute:DashboardWidgetScatterplotDefinitionRequestYLogQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "interval": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetScatterplotDefinitionRequestYProcessQuery:DashboardWidgetScatterplotDefinitionRequestYProcessQuery": {
            "properties": {
                "filterBies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "limit": {
                    "type": "integer"
                },
                "metric": {
                    "type": "string"
                },
                "searchBy": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "metric"
            ]
        },
        "datadog:index/DashboardWidgetScatterplotDefinitionRequestYRumQuery:DashboardWidgetScatterplotDefinitionRequestYRumQuery": {
            "properties": {
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetScatterplotDefinitionRequestYRumQueryComputeQuery:DashboardWidgetScatterplotDefinitionRequestYRumQueryComputeQuery"
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetScatterplotDefinitionRequestYRumQueryGroupBy:DashboardWidgetScatterplotDefinitionRequestYRumQueryGroupBy"
                    }
                },
                "index": {
                    "type": "string"
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetScatterplotDefinitionRequestYRumQueryMultiCompute:DashboardWidgetScatterplotDefinitionRequestYRumQueryMultiCompute"
                    }
                },
                "searchQuery": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetScatterplotDefinitionRequestYRumQueryComputeQuery:DashboardWidgetScatterplotDefinitionRequestYRumQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "interval": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetScatterplotDefinitionRequestYRumQueryGroupBy:DashboardWidgetScatterplotDefinitionRequestYRumQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string"
                },
                "limit": {
                    "type": "integer"
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetScatterplotDefinitionRequestYRumQueryGroupBySortQuery:DashboardWidgetScatterplotDefinitionRequestYRumQueryGroupBySortQuery"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetScatterplotDefinitionRequestYRumQueryGroupBySortQuery:DashboardWidgetScatterplotDefinitionRequestYRumQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "order": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetScatterplotDefinitionRequestYRumQueryMultiCompute:DashboardWidgetScatterplotDefinitionRequestYRumQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "interval": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetScatterplotDefinitionRequestYSecurityQuery:DashboardWidgetScatterplotDefinitionRequestYSecurityQuery": {
            "properties": {
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetScatterplotDefinitionRequestYSecurityQueryComputeQuery:DashboardWidgetScatterplotDefinitionRequestYSecurityQueryComputeQuery"
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetScatterplotDefinitionRequestYSecurityQueryGroupBy:DashboardWidgetScatterplotDefinitionRequestYSecurityQueryGroupBy"
                    }
                },
                "index": {
                    "type": "string"
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetScatterplotDefinitionRequestYSecurityQueryMultiCompute:DashboardWidgetScatterplotDefinitionRequestYSecurityQueryMultiCompute"
                    }
                },
                "searchQuery": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetScatterplotDefinitionRequestYSecurityQueryComputeQuery:DashboardWidgetScatterplotDefinitionRequestYSecurityQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "interval": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetScatterplotDefinitionRequestYSecurityQueryGroupBy:DashboardWidgetScatterplotDefinitionRequestYSecurityQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string"
                },
                "limit": {
                    "type": "integer"
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetScatterplotDefinitionRequestYSecurityQueryGroupBySortQuery:DashboardWidgetScatterplotDefinitionRequestYSecurityQueryGroupBySortQuery"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetScatterplotDefinitionRequestYSecurityQueryGroupBySortQuery:DashboardWidgetScatterplotDefinitionRequestYSecurityQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "order": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetScatterplotDefinitionRequestYSecurityQueryMultiCompute:DashboardWidgetScatterplotDefinitionRequestYSecurityQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "interval": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetScatterplotDefinitionXaxis:DashboardWidgetScatterplotDefinitionXaxis": {
            "properties": {
                "includeZero": {
                    "type": "boolean"
                },
                "label": {
                    "type": "string"
                },
                "max": {
                    "type": "string"
                },
                "min": {
                    "type": "string"
                },
                "scale": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetScatterplotDefinitionYaxis:DashboardWidgetScatterplotDefinitionYaxis": {
            "properties": {
                "includeZero": {
                    "type": "boolean"
                },
                "label": {
                    "type": "string"
                },
                "max": {
                    "type": "string"
                },
                "min": {
                    "type": "string"
                },
                "scale": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetServiceLevelObjectiveDefinition:DashboardWidgetServiceLevelObjectiveDefinition": {
            "properties": {
                "additionalQueryFilters": {
                    "type": "string"
                },
                "globalTimeTarget": {
                    "type": "string"
                },
                "showErrorBudget": {
                    "type": "boolean"
                },
                "sloId": {
                    "type": "string"
                },
                "timeWindows": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "title": {
                    "type": "string",
                    "description": "The title of the dashboard.\n"
                },
                "titleAlign": {
                    "type": "string"
                },
                "titleSize": {
                    "type": "string"
                },
                "viewMode": {
                    "type": "string"
                },
                "viewType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "sloId",
                "timeWindows",
                "viewMode",
                "viewType"
            ]
        },
        "datadog:index/DashboardWidgetServicemapDefinition:DashboardWidgetServicemapDefinition": {
            "properties": {
                "customLinks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetServicemapDefinitionCustomLink:DashboardWidgetServicemapDefinitionCustomLink"
                    }
                },
                "filters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "service": {
                    "type": "string"
                },
                "title": {
                    "type": "string",
                    "description": "The title of the dashboard.\n"
                },
                "titleAlign": {
                    "type": "string"
                },
                "titleSize": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "filters",
                "service"
            ]
        },
        "datadog:index/DashboardWidgetServicemapDefinitionCustomLink:DashboardWidgetServicemapDefinitionCustomLink": {
            "properties": {
                "isHidden": {
                    "type": "boolean"
                },
                "label": {
                    "type": "string"
                },
                "link": {
                    "type": "string"
                },
                "overrideLabel": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetSloListDefinition:DashboardWidgetSloListDefinition": {
            "properties": {
                "request": {
                    "$ref": "#/types/datadog:index/DashboardWidgetSloListDefinitionRequest:DashboardWidgetSloListDefinitionRequest"
                },
                "title": {
                    "type": "string",
                    "description": "The title of the dashboard.\n"
                },
                "titleAlign": {
                    "type": "string"
                },
                "titleSize": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "request"
            ]
        },
        "datadog:index/DashboardWidgetSloListDefinitionRequest:DashboardWidgetSloListDefinitionRequest": {
            "properties": {
                "query": {
                    "$ref": "#/types/datadog:index/DashboardWidgetSloListDefinitionRequestQuery:DashboardWidgetSloListDefinitionRequestQuery"
                },
                "requestType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "query",
                "requestType"
            ]
        },
        "datadog:index/DashboardWidgetSloListDefinitionRequestQuery:DashboardWidgetSloListDefinitionRequestQuery": {
            "properties": {
                "limit": {
                    "type": "integer"
                },
                "queryString": {
                    "type": "string"
                },
                "sort": {
                    "$ref": "#/types/datadog:index/DashboardWidgetSloListDefinitionRequestQuerySort:DashboardWidgetSloListDefinitionRequestQuerySort"
                }
            },
            "type": "object",
            "required": [
                "queryString"
            ]
        },
        "datadog:index/DashboardWidgetSloListDefinitionRequestQuerySort:DashboardWidgetSloListDefinitionRequestQuerySort": {
            "properties": {
                "column": {
                    "type": "string"
                },
                "order": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "column",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetSunburstDefinition:DashboardWidgetSunburstDefinition": {
            "properties": {
                "customLinks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetSunburstDefinitionCustomLink:DashboardWidgetSunburstDefinitionCustomLink"
                    }
                },
                "hideTotal": {
                    "type": "boolean"
                },
                "legendInline": {
                    "$ref": "#/types/datadog:index/DashboardWidgetSunburstDefinitionLegendInline:DashboardWidgetSunburstDefinitionLegendInline"
                },
                "legendTable": {
                    "$ref": "#/types/datadog:index/DashboardWidgetSunburstDefinitionLegendTable:DashboardWidgetSunburstDefinitionLegendTable"
                },
                "liveSpan": {
                    "type": "string"
                },
                "requests": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetSunburstDefinitionRequest:DashboardWidgetSunburstDefinitionRequest"
                    }
                },
                "title": {
                    "type": "string",
                    "description": "The title of the dashboard.\n"
                },
                "titleAlign": {
                    "type": "string"
                },
                "titleSize": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetSunburstDefinitionCustomLink:DashboardWidgetSunburstDefinitionCustomLink": {
            "properties": {
                "isHidden": {
                    "type": "boolean"
                },
                "label": {
                    "type": "string"
                },
                "link": {
                    "type": "string"
                },
                "overrideLabel": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetSunburstDefinitionLegendInline:DashboardWidgetSunburstDefinitionLegendInline": {
            "properties": {
                "hidePercent": {
                    "type": "boolean"
                },
                "hideValue": {
                    "type": "boolean"
                },
                "type": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "type"
            ]
        },
        "datadog:index/DashboardWidgetSunburstDefinitionLegendTable:DashboardWidgetSunburstDefinitionLegendTable": {
            "properties": {
                "type": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "type"
            ]
        },
        "datadog:index/DashboardWidgetSunburstDefinitionRequest:DashboardWidgetSunburstDefinitionRequest": {
            "properties": {
                "apmQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetSunburstDefinitionRequestApmQuery:DashboardWidgetSunburstDefinitionRequestApmQuery"
                },
                "auditQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetSunburstDefinitionRequestAuditQuery:DashboardWidgetSunburstDefinitionRequestAuditQuery"
                },
                "formulas": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetSunburstDefinitionRequestFormula:DashboardWidgetSunburstDefinitionRequestFormula"
                    }
                },
                "logQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetSunburstDefinitionRequestLogQuery:DashboardWidgetSunburstDefinitionRequestLogQuery"
                },
                "networkQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetSunburstDefinitionRequestNetworkQuery:DashboardWidgetSunburstDefinitionRequestNetworkQuery"
                },
                "processQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetSunburstDefinitionRequestProcessQuery:DashboardWidgetSunburstDefinitionRequestProcessQuery"
                },
                "q": {
                    "type": "string"
                },
                "queries": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetSunburstDefinitionRequestQuery:DashboardWidgetSunburstDefinitionRequestQuery"
                    }
                },
                "rumQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetSunburstDefinitionRequestRumQuery:DashboardWidgetSunburstDefinitionRequestRumQuery"
                },
                "securityQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetSunburstDefinitionRequestSecurityQuery:DashboardWidgetSunburstDefinitionRequestSecurityQuery"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetSunburstDefinitionRequestApmQuery:DashboardWidgetSunburstDefinitionRequestApmQuery": {
            "properties": {
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetSunburstDefinitionRequestApmQueryComputeQuery:DashboardWidgetSunburstDefinitionRequestApmQueryComputeQuery"
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetSunburstDefinitionRequestApmQueryGroupBy:DashboardWidgetSunburstDefinitionRequestApmQueryGroupBy"
                    }
                },
                "index": {
                    "type": "string"
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetSunburstDefinitionRequestApmQueryMultiCompute:DashboardWidgetSunburstDefinitionRequestApmQueryMultiCompute"
                    }
                },
                "searchQuery": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetSunburstDefinitionRequestApmQueryComputeQuery:DashboardWidgetSunburstDefinitionRequestApmQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "interval": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetSunburstDefinitionRequestApmQueryGroupBy:DashboardWidgetSunburstDefinitionRequestApmQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string"
                },
                "limit": {
                    "type": "integer"
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetSunburstDefinitionRequestApmQueryGroupBySortQuery:DashboardWidgetSunburstDefinitionRequestApmQueryGroupBySortQuery"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetSunburstDefinitionRequestApmQueryGroupBySortQuery:DashboardWidgetSunburstDefinitionRequestApmQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "order": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetSunburstDefinitionRequestApmQueryMultiCompute:DashboardWidgetSunburstDefinitionRequestApmQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "interval": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetSunburstDefinitionRequestAuditQuery:DashboardWidgetSunburstDefinitionRequestAuditQuery": {
            "properties": {
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetSunburstDefinitionRequestAuditQueryComputeQuery:DashboardWidgetSunburstDefinitionRequestAuditQueryComputeQuery"
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetSunburstDefinitionRequestAuditQueryGroupBy:DashboardWidgetSunburstDefinitionRequestAuditQueryGroupBy"
                    }
                },
                "index": {
                    "type": "string"
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetSunburstDefinitionRequestAuditQueryMultiCompute:DashboardWidgetSunburstDefinitionRequestAuditQueryMultiCompute"
                    }
                },
                "searchQuery": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetSunburstDefinitionRequestAuditQueryComputeQuery:DashboardWidgetSunburstDefinitionRequestAuditQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "interval": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetSunburstDefinitionRequestAuditQueryGroupBy:DashboardWidgetSunburstDefinitionRequestAuditQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string"
                },
                "limit": {
                    "type": "integer"
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetSunburstDefinitionRequestAuditQueryGroupBySortQuery:DashboardWidgetSunburstDefinitionRequestAuditQueryGroupBySortQuery"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetSunburstDefinitionRequestAuditQueryGroupBySortQuery:DashboardWidgetSunburstDefinitionRequestAuditQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "order": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetSunburstDefinitionRequestAuditQueryMultiCompute:DashboardWidgetSunburstDefinitionRequestAuditQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "interval": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetSunburstDefinitionRequestFormula:DashboardWidgetSunburstDefinitionRequestFormula": {
            "properties": {
                "alias": {
                    "type": "string"
                },
                "cellDisplayMode": {
                    "type": "string"
                },
                "conditionalFormats": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetSunburstDefinitionRequestFormulaConditionalFormat:DashboardWidgetSunburstDefinitionRequestFormulaConditionalFormat"
                    }
                },
                "formulaExpression": {
                    "type": "string"
                },
                "limit": {
                    "$ref": "#/types/datadog:index/DashboardWidgetSunburstDefinitionRequestFormulaLimit:DashboardWidgetSunburstDefinitionRequestFormulaLimit"
                },
                "style": {
                    "$ref": "#/types/datadog:index/DashboardWidgetSunburstDefinitionRequestFormulaStyle:DashboardWidgetSunburstDefinitionRequestFormulaStyle"
                }
            },
            "type": "object",
            "required": [
                "formulaExpression"
            ]
        },
        "datadog:index/DashboardWidgetSunburstDefinitionRequestFormulaConditionalFormat:DashboardWidgetSunburstDefinitionRequestFormulaConditionalFormat": {
            "properties": {
                "comparator": {
                    "type": "string"
                },
                "customBgColor": {
                    "type": "string"
                },
                "customFgColor": {
                    "type": "string"
                },
                "hideValue": {
                    "type": "boolean"
                },
                "imageUrl": {
                    "type": "string"
                },
                "metric": {
                    "type": "string"
                },
                "palette": {
                    "type": "string"
                },
                "timeframe": {
                    "type": "string"
                },
                "value": {
                    "type": "number"
                }
            },
            "type": "object",
            "required": [
                "comparator",
                "palette",
                "value"
            ]
        },
        "datadog:index/DashboardWidgetSunburstDefinitionRequestFormulaLimit:DashboardWidgetSunburstDefinitionRequestFormulaLimit": {
            "properties": {
                "count": {
                    "type": "integer"
                },
                "order": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetSunburstDefinitionRequestFormulaStyle:DashboardWidgetSunburstDefinitionRequestFormulaStyle": {
            "properties": {
                "palette": {
                    "type": "string"
                },
                "paletteIndex": {
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetSunburstDefinitionRequestLogQuery:DashboardWidgetSunburstDefinitionRequestLogQuery": {
            "properties": {
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetSunburstDefinitionRequestLogQueryComputeQuery:DashboardWidgetSunburstDefinitionRequestLogQueryComputeQuery"
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetSunburstDefinitionRequestLogQueryGroupBy:DashboardWidgetSunburstDefinitionRequestLogQueryGroupBy"
                    }
                },
                "index": {
                    "type": "string"
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetSunburstDefinitionRequestLogQueryMultiCompute:DashboardWidgetSunburstDefinitionRequestLogQueryMultiCompute"
                    }
                },
                "searchQuery": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetSunburstDefinitionRequestLogQueryComputeQuery:DashboardWidgetSunburstDefinitionRequestLogQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "interval": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetSunburstDefinitionRequestLogQueryGroupBy:DashboardWidgetSunburstDefinitionRequestLogQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string"
                },
                "limit": {
                    "type": "integer"
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetSunburstDefinitionRequestLogQueryGroupBySortQuery:DashboardWidgetSunburstDefinitionRequestLogQueryGroupBySortQuery"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetSunburstDefinitionRequestLogQueryGroupBySortQuery:DashboardWidgetSunburstDefinitionRequestLogQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "order": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetSunburstDefinitionRequestLogQueryMultiCompute:DashboardWidgetSunburstDefinitionRequestLogQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "interval": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetSunburstDefinitionRequestNetworkQuery:DashboardWidgetSunburstDefinitionRequestNetworkQuery": {
            "properties": {
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetSunburstDefinitionRequestNetworkQueryComputeQuery:DashboardWidgetSunburstDefinitionRequestNetworkQueryComputeQuery"
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetSunburstDefinitionRequestNetworkQueryGroupBy:DashboardWidgetSunburstDefinitionRequestNetworkQueryGroupBy"
                    }
                },
                "index": {
                    "type": "string"
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetSunburstDefinitionRequestNetworkQueryMultiCompute:DashboardWidgetSunburstDefinitionRequestNetworkQueryMultiCompute"
                    }
                },
                "searchQuery": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetSunburstDefinitionRequestNetworkQueryComputeQuery:DashboardWidgetSunburstDefinitionRequestNetworkQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "interval": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetSunburstDefinitionRequestNetworkQueryGroupBy:DashboardWidgetSunburstDefinitionRequestNetworkQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string"
                },
                "limit": {
                    "type": "integer"
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetSunburstDefinitionRequestNetworkQueryGroupBySortQuery:DashboardWidgetSunburstDefinitionRequestNetworkQueryGroupBySortQuery"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetSunburstDefinitionRequestNetworkQueryGroupBySortQuery:DashboardWidgetSunburstDefinitionRequestNetworkQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "order": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetSunburstDefinitionRequestNetworkQueryMultiCompute:DashboardWidgetSunburstDefinitionRequestNetworkQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "interval": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetSunburstDefinitionRequestProcessQuery:DashboardWidgetSunburstDefinitionRequestProcessQuery": {
            "properties": {
                "filterBies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "limit": {
                    "type": "integer"
                },
                "metric": {
                    "type": "string"
                },
                "searchBy": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "metric"
            ]
        },
        "datadog:index/DashboardWidgetSunburstDefinitionRequestQuery:DashboardWidgetSunburstDefinitionRequestQuery": {
            "properties": {
                "apmDependencyStatsQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetSunburstDefinitionRequestQueryApmDependencyStatsQuery:DashboardWidgetSunburstDefinitionRequestQueryApmDependencyStatsQuery"
                },
                "apmResourceStatsQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetSunburstDefinitionRequestQueryApmResourceStatsQuery:DashboardWidgetSunburstDefinitionRequestQueryApmResourceStatsQuery"
                },
                "eventQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetSunburstDefinitionRequestQueryEventQuery:DashboardWidgetSunburstDefinitionRequestQueryEventQuery"
                },
                "metricQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetSunburstDefinitionRequestQueryMetricQuery:DashboardWidgetSunburstDefinitionRequestQueryMetricQuery"
                },
                "processQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetSunburstDefinitionRequestQueryProcessQuery:DashboardWidgetSunburstDefinitionRequestQueryProcessQuery"
                },
                "sloQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetSunburstDefinitionRequestQuerySloQuery:DashboardWidgetSunburstDefinitionRequestQuerySloQuery"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetSunburstDefinitionRequestQueryApmDependencyStatsQuery:DashboardWidgetSunburstDefinitionRequestQueryApmDependencyStatsQuery": {
            "properties": {
                "dataSource": {
                    "type": "string"
                },
                "env": {
                    "type": "string"
                },
                "isUpstream": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "operationName": {
                    "type": "string"
                },
                "primaryTagName": {
                    "type": "string"
                },
                "primaryTagValue": {
                    "type": "string"
                },
                "resourceName": {
                    "type": "string"
                },
                "service": {
                    "type": "string"
                },
                "stat": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "dataSource",
                "env",
                "name",
                "operationName",
                "resourceName",
                "service",
                "stat"
            ]
        },
        "datadog:index/DashboardWidgetSunburstDefinitionRequestQueryApmResourceStatsQuery:DashboardWidgetSunburstDefinitionRequestQueryApmResourceStatsQuery": {
            "properties": {
                "dataSource": {
                    "type": "string"
                },
                "env": {
                    "type": "string"
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "name": {
                    "type": "string"
                },
                "operationName": {
                    "type": "string"
                },
                "primaryTagName": {
                    "type": "string"
                },
                "primaryTagValue": {
                    "type": "string"
                },
                "resourceName": {
                    "type": "string"
                },
                "service": {
                    "type": "string"
                },
                "stat": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "dataSource",
                "env",
                "name",
                "service",
                "stat"
            ]
        },
        "datadog:index/DashboardWidgetSunburstDefinitionRequestQueryEventQuery:DashboardWidgetSunburstDefinitionRequestQueryEventQuery": {
            "properties": {
                "computes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetSunburstDefinitionRequestQueryEventQueryCompute:DashboardWidgetSunburstDefinitionRequestQueryEventQueryCompute"
                    }
                },
                "dataSource": {
                    "type": "string"
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetSunburstDefinitionRequestQueryEventQueryGroupBy:DashboardWidgetSunburstDefinitionRequestQueryEventQueryGroupBy"
                    }
                },
                "indexes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "name": {
                    "type": "string"
                },
                "search": {
                    "$ref": "#/types/datadog:index/DashboardWidgetSunburstDefinitionRequestQueryEventQuerySearch:DashboardWidgetSunburstDefinitionRequestQueryEventQuerySearch"
                },
                "storage": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "computes",
                "dataSource",
                "name"
            ]
        },
        "datadog:index/DashboardWidgetSunburstDefinitionRequestQueryEventQueryCompute:DashboardWidgetSunburstDefinitionRequestQueryEventQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "interval": {
                    "type": "integer"
                },
                "metric": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetSunburstDefinitionRequestQueryEventQueryGroupBy:DashboardWidgetSunburstDefinitionRequestQueryEventQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string"
                },
                "limit": {
                    "type": "integer"
                },
                "sort": {
                    "$ref": "#/types/datadog:index/DashboardWidgetSunburstDefinitionRequestQueryEventQueryGroupBySort:DashboardWidgetSunburstDefinitionRequestQueryEventQueryGroupBySort"
                }
            },
            "type": "object",
            "required": [
                "facet"
            ]
        },
        "datadog:index/DashboardWidgetSunburstDefinitionRequestQueryEventQueryGroupBySort:DashboardWidgetSunburstDefinitionRequestQueryEventQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "metric": {
                    "type": "string"
                },
                "order": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetSunburstDefinitionRequestQueryEventQuerySearch:DashboardWidgetSunburstDefinitionRequestQueryEventQuerySearch": {
            "properties": {
                "query": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/DashboardWidgetSunburstDefinitionRequestQueryMetricQuery:DashboardWidgetSunburstDefinitionRequestQueryMetricQuery": {
            "properties": {
                "aggregator": {
                    "type": "string"
                },
                "dataSource": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "query": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "name",
                "query"
            ]
        },
        "datadog:index/DashboardWidgetSunburstDefinitionRequestQueryProcessQuery:DashboardWidgetSunburstDefinitionRequestQueryProcessQuery": {
            "properties": {
                "aggregator": {
                    "type": "string"
                },
                "dataSource": {
                    "type": "string"
                },
                "isNormalizedCpu": {
                    "type": "boolean"
                },
                "limit": {
                    "type": "integer"
                },
                "metric": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "sort": {
                    "type": "string"
                },
                "tagFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "textFilter": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "dataSource",
                "metric",
                "name"
            ]
        },
        "datadog:index/DashboardWidgetSunburstDefinitionRequestQuerySloQuery:DashboardWidgetSunburstDefinitionRequestQuerySloQuery": {
            "properties": {
                "dataSource": {
                    "type": "string"
                },
                "groupMode": {
                    "type": "string"
                },
                "measure": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "sloId": {
                    "type": "string"
                },
                "sloQueryType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "dataSource",
                "measure",
                "sloId"
            ]
        },
        "datadog:index/DashboardWidgetSunburstDefinitionRequestRumQuery:DashboardWidgetSunburstDefinitionRequestRumQuery": {
            "properties": {
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetSunburstDefinitionRequestRumQueryComputeQuery:DashboardWidgetSunburstDefinitionRequestRumQueryComputeQuery"
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetSunburstDefinitionRequestRumQueryGroupBy:DashboardWidgetSunburstDefinitionRequestRumQueryGroupBy"
                    }
                },
                "index": {
                    "type": "string"
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetSunburstDefinitionRequestRumQueryMultiCompute:DashboardWidgetSunburstDefinitionRequestRumQueryMultiCompute"
                    }
                },
                "searchQuery": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetSunburstDefinitionRequestRumQueryComputeQuery:DashboardWidgetSunburstDefinitionRequestRumQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "interval": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetSunburstDefinitionRequestRumQueryGroupBy:DashboardWidgetSunburstDefinitionRequestRumQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string"
                },
                "limit": {
                    "type": "integer"
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetSunburstDefinitionRequestRumQueryGroupBySortQuery:DashboardWidgetSunburstDefinitionRequestRumQueryGroupBySortQuery"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetSunburstDefinitionRequestRumQueryGroupBySortQuery:DashboardWidgetSunburstDefinitionRequestRumQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "order": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetSunburstDefinitionRequestRumQueryMultiCompute:DashboardWidgetSunburstDefinitionRequestRumQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "interval": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetSunburstDefinitionRequestSecurityQuery:DashboardWidgetSunburstDefinitionRequestSecurityQuery": {
            "properties": {
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetSunburstDefinitionRequestSecurityQueryComputeQuery:DashboardWidgetSunburstDefinitionRequestSecurityQueryComputeQuery"
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetSunburstDefinitionRequestSecurityQueryGroupBy:DashboardWidgetSunburstDefinitionRequestSecurityQueryGroupBy"
                    }
                },
                "index": {
                    "type": "string"
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetSunburstDefinitionRequestSecurityQueryMultiCompute:DashboardWidgetSunburstDefinitionRequestSecurityQueryMultiCompute"
                    }
                },
                "searchQuery": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetSunburstDefinitionRequestSecurityQueryComputeQuery:DashboardWidgetSunburstDefinitionRequestSecurityQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "interval": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetSunburstDefinitionRequestSecurityQueryGroupBy:DashboardWidgetSunburstDefinitionRequestSecurityQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string"
                },
                "limit": {
                    "type": "integer"
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetSunburstDefinitionRequestSecurityQueryGroupBySortQuery:DashboardWidgetSunburstDefinitionRequestSecurityQueryGroupBySortQuery"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetSunburstDefinitionRequestSecurityQueryGroupBySortQuery:DashboardWidgetSunburstDefinitionRequestSecurityQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "order": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetSunburstDefinitionRequestSecurityQueryMultiCompute:DashboardWidgetSunburstDefinitionRequestSecurityQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "interval": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetTimeseriesDefinition:DashboardWidgetTimeseriesDefinition": {
            "properties": {
                "customLinks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetTimeseriesDefinitionCustomLink:DashboardWidgetTimeseriesDefinitionCustomLink"
                    }
                },
                "events": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetTimeseriesDefinitionEvent:DashboardWidgetTimeseriesDefinitionEvent"
                    }
                },
                "legendColumns": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "legendLayout": {
                    "type": "string"
                },
                "legendSize": {
                    "type": "string"
                },
                "liveSpan": {
                    "type": "string"
                },
                "markers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetTimeseriesDefinitionMarker:DashboardWidgetTimeseriesDefinitionMarker"
                    }
                },
                "requests": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetTimeseriesDefinitionRequest:DashboardWidgetTimeseriesDefinitionRequest"
                    }
                },
                "rightYaxis": {
                    "$ref": "#/types/datadog:index/DashboardWidgetTimeseriesDefinitionRightYaxis:DashboardWidgetTimeseriesDefinitionRightYaxis"
                },
                "showLegend": {
                    "type": "boolean"
                },
                "title": {
                    "type": "string",
                    "description": "The title of the dashboard.\n"
                },
                "titleAlign": {
                    "type": "string"
                },
                "titleSize": {
                    "type": "string"
                },
                "yaxis": {
                    "$ref": "#/types/datadog:index/DashboardWidgetTimeseriesDefinitionYaxis:DashboardWidgetTimeseriesDefinitionYaxis"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetTimeseriesDefinitionCustomLink:DashboardWidgetTimeseriesDefinitionCustomLink": {
            "properties": {
                "isHidden": {
                    "type": "boolean"
                },
                "label": {
                    "type": "string"
                },
                "link": {
                    "type": "string"
                },
                "overrideLabel": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetTimeseriesDefinitionEvent:DashboardWidgetTimeseriesDefinitionEvent": {
            "properties": {
                "q": {
                    "type": "string"
                },
                "tagsExecution": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "q"
            ]
        },
        "datadog:index/DashboardWidgetTimeseriesDefinitionMarker:DashboardWidgetTimeseriesDefinitionMarker": {
            "properties": {
                "displayType": {
                    "type": "string"
                },
                "label": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "value"
            ]
        },
        "datadog:index/DashboardWidgetTimeseriesDefinitionRequest:DashboardWidgetTimeseriesDefinitionRequest": {
            "properties": {
                "apmQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetTimeseriesDefinitionRequestApmQuery:DashboardWidgetTimeseriesDefinitionRequestApmQuery"
                },
                "auditQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetTimeseriesDefinitionRequestAuditQuery:DashboardWidgetTimeseriesDefinitionRequestAuditQuery"
                },
                "displayType": {
                    "type": "string"
                },
                "formulas": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetTimeseriesDefinitionRequestFormula:DashboardWidgetTimeseriesDefinitionRequestFormula"
                    }
                },
                "logQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetTimeseriesDefinitionRequestLogQuery:DashboardWidgetTimeseriesDefinitionRequestLogQuery"
                },
                "metadatas": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetTimeseriesDefinitionRequestMetadata:DashboardWidgetTimeseriesDefinitionRequestMetadata"
                    }
                },
                "networkQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetTimeseriesDefinitionRequestNetworkQuery:DashboardWidgetTimeseriesDefinitionRequestNetworkQuery"
                },
                "onRightYaxis": {
                    "type": "boolean"
                },
                "processQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetTimeseriesDefinitionRequestProcessQuery:DashboardWidgetTimeseriesDefinitionRequestProcessQuery"
                },
                "q": {
                    "type": "string"
                },
                "queries": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetTimeseriesDefinitionRequestQuery:DashboardWidgetTimeseriesDefinitionRequestQuery"
                    }
                },
                "rumQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetTimeseriesDefinitionRequestRumQuery:DashboardWidgetTimeseriesDefinitionRequestRumQuery"
                },
                "securityQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetTimeseriesDefinitionRequestSecurityQuery:DashboardWidgetTimeseriesDefinitionRequestSecurityQuery"
                },
                "style": {
                    "$ref": "#/types/datadog:index/DashboardWidgetTimeseriesDefinitionRequestStyle:DashboardWidgetTimeseriesDefinitionRequestStyle"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetTimeseriesDefinitionRequestApmQuery:DashboardWidgetTimeseriesDefinitionRequestApmQuery": {
            "properties": {
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetTimeseriesDefinitionRequestApmQueryComputeQuery:DashboardWidgetTimeseriesDefinitionRequestApmQueryComputeQuery"
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetTimeseriesDefinitionRequestApmQueryGroupBy:DashboardWidgetTimeseriesDefinitionRequestApmQueryGroupBy"
                    }
                },
                "index": {
                    "type": "string"
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetTimeseriesDefinitionRequestApmQueryMultiCompute:DashboardWidgetTimeseriesDefinitionRequestApmQueryMultiCompute"
                    }
                },
                "searchQuery": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetTimeseriesDefinitionRequestApmQueryComputeQuery:DashboardWidgetTimeseriesDefinitionRequestApmQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "interval": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetTimeseriesDefinitionRequestApmQueryGroupBy:DashboardWidgetTimeseriesDefinitionRequestApmQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string"
                },
                "limit": {
                    "type": "integer"
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetTimeseriesDefinitionRequestApmQueryGroupBySortQuery:DashboardWidgetTimeseriesDefinitionRequestApmQueryGroupBySortQuery"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetTimeseriesDefinitionRequestApmQueryGroupBySortQuery:DashboardWidgetTimeseriesDefinitionRequestApmQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "order": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetTimeseriesDefinitionRequestApmQueryMultiCompute:DashboardWidgetTimeseriesDefinitionRequestApmQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "interval": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetTimeseriesDefinitionRequestAuditQuery:DashboardWidgetTimeseriesDefinitionRequestAuditQuery": {
            "properties": {
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetTimeseriesDefinitionRequestAuditQueryComputeQuery:DashboardWidgetTimeseriesDefinitionRequestAuditQueryComputeQuery"
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetTimeseriesDefinitionRequestAuditQueryGroupBy:DashboardWidgetTimeseriesDefinitionRequestAuditQueryGroupBy"
                    }
                },
                "index": {
                    "type": "string"
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetTimeseriesDefinitionRequestAuditQueryMultiCompute:DashboardWidgetTimeseriesDefinitionRequestAuditQueryMultiCompute"
                    }
                },
                "searchQuery": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetTimeseriesDefinitionRequestAuditQueryComputeQuery:DashboardWidgetTimeseriesDefinitionRequestAuditQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "interval": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetTimeseriesDefinitionRequestAuditQueryGroupBy:DashboardWidgetTimeseriesDefinitionRequestAuditQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string"
                },
                "limit": {
                    "type": "integer"
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetTimeseriesDefinitionRequestAuditQueryGroupBySortQuery:DashboardWidgetTimeseriesDefinitionRequestAuditQueryGroupBySortQuery"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetTimeseriesDefinitionRequestAuditQueryGroupBySortQuery:DashboardWidgetTimeseriesDefinitionRequestAuditQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "order": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetTimeseriesDefinitionRequestAuditQueryMultiCompute:DashboardWidgetTimeseriesDefinitionRequestAuditQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "interval": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetTimeseriesDefinitionRequestFormula:DashboardWidgetTimeseriesDefinitionRequestFormula": {
            "properties": {
                "alias": {
                    "type": "string"
                },
                "cellDisplayMode": {
                    "type": "string"
                },
                "conditionalFormats": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetTimeseriesDefinitionRequestFormulaConditionalFormat:DashboardWidgetTimeseriesDefinitionRequestFormulaConditionalFormat"
                    }
                },
                "formulaExpression": {
                    "type": "string"
                },
                "limit": {
                    "$ref": "#/types/datadog:index/DashboardWidgetTimeseriesDefinitionRequestFormulaLimit:DashboardWidgetTimeseriesDefinitionRequestFormulaLimit"
                },
                "style": {
                    "$ref": "#/types/datadog:index/DashboardWidgetTimeseriesDefinitionRequestFormulaStyle:DashboardWidgetTimeseriesDefinitionRequestFormulaStyle"
                }
            },
            "type": "object",
            "required": [
                "formulaExpression"
            ]
        },
        "datadog:index/DashboardWidgetTimeseriesDefinitionRequestFormulaConditionalFormat:DashboardWidgetTimeseriesDefinitionRequestFormulaConditionalFormat": {
            "properties": {
                "comparator": {
                    "type": "string"
                },
                "customBgColor": {
                    "type": "string"
                },
                "customFgColor": {
                    "type": "string"
                },
                "hideValue": {
                    "type": "boolean"
                },
                "imageUrl": {
                    "type": "string"
                },
                "metric": {
                    "type": "string"
                },
                "palette": {
                    "type": "string"
                },
                "timeframe": {
                    "type": "string"
                },
                "value": {
                    "type": "number"
                }
            },
            "type": "object",
            "required": [
                "comparator",
                "palette",
                "value"
            ]
        },
        "datadog:index/DashboardWidgetTimeseriesDefinitionRequestFormulaLimit:DashboardWidgetTimeseriesDefinitionRequestFormulaLimit": {
            "properties": {
                "count": {
                    "type": "integer"
                },
                "order": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetTimeseriesDefinitionRequestFormulaStyle:DashboardWidgetTimeseriesDefinitionRequestFormulaStyle": {
            "properties": {
                "palette": {
                    "type": "string"
                },
                "paletteIndex": {
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetTimeseriesDefinitionRequestLogQuery:DashboardWidgetTimeseriesDefinitionRequestLogQuery": {
            "properties": {
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetTimeseriesDefinitionRequestLogQueryComputeQuery:DashboardWidgetTimeseriesDefinitionRequestLogQueryComputeQuery"
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetTimeseriesDefinitionRequestLogQueryGroupBy:DashboardWidgetTimeseriesDefinitionRequestLogQueryGroupBy"
                    }
                },
                "index": {
                    "type": "string"
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetTimeseriesDefinitionRequestLogQueryMultiCompute:DashboardWidgetTimeseriesDefinitionRequestLogQueryMultiCompute"
                    }
                },
                "searchQuery": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetTimeseriesDefinitionRequestLogQueryComputeQuery:DashboardWidgetTimeseriesDefinitionRequestLogQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "interval": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetTimeseriesDefinitionRequestLogQueryGroupBy:DashboardWidgetTimeseriesDefinitionRequestLogQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string"
                },
                "limit": {
                    "type": "integer"
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetTimeseriesDefinitionRequestLogQueryGroupBySortQuery:DashboardWidgetTimeseriesDefinitionRequestLogQueryGroupBySortQuery"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetTimeseriesDefinitionRequestLogQueryGroupBySortQuery:DashboardWidgetTimeseriesDefinitionRequestLogQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "order": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetTimeseriesDefinitionRequestLogQueryMultiCompute:DashboardWidgetTimeseriesDefinitionRequestLogQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "interval": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetTimeseriesDefinitionRequestMetadata:DashboardWidgetTimeseriesDefinitionRequestMetadata": {
            "properties": {
                "aliasName": {
                    "type": "string"
                },
                "expression": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "expression"
            ]
        },
        "datadog:index/DashboardWidgetTimeseriesDefinitionRequestNetworkQuery:DashboardWidgetTimeseriesDefinitionRequestNetworkQuery": {
            "properties": {
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetTimeseriesDefinitionRequestNetworkQueryComputeQuery:DashboardWidgetTimeseriesDefinitionRequestNetworkQueryComputeQuery"
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetTimeseriesDefinitionRequestNetworkQueryGroupBy:DashboardWidgetTimeseriesDefinitionRequestNetworkQueryGroupBy"
                    }
                },
                "index": {
                    "type": "string"
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetTimeseriesDefinitionRequestNetworkQueryMultiCompute:DashboardWidgetTimeseriesDefinitionRequestNetworkQueryMultiCompute"
                    }
                },
                "searchQuery": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetTimeseriesDefinitionRequestNetworkQueryComputeQuery:DashboardWidgetTimeseriesDefinitionRequestNetworkQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "interval": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetTimeseriesDefinitionRequestNetworkQueryGroupBy:DashboardWidgetTimeseriesDefinitionRequestNetworkQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string"
                },
                "limit": {
                    "type": "integer"
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetTimeseriesDefinitionRequestNetworkQueryGroupBySortQuery:DashboardWidgetTimeseriesDefinitionRequestNetworkQueryGroupBySortQuery"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetTimeseriesDefinitionRequestNetworkQueryGroupBySortQuery:DashboardWidgetTimeseriesDefinitionRequestNetworkQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "order": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetTimeseriesDefinitionRequestNetworkQueryMultiCompute:DashboardWidgetTimeseriesDefinitionRequestNetworkQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "interval": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetTimeseriesDefinitionRequestProcessQuery:DashboardWidgetTimeseriesDefinitionRequestProcessQuery": {
            "properties": {
                "filterBies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "limit": {
                    "type": "integer"
                },
                "metric": {
                    "type": "string"
                },
                "searchBy": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "metric"
            ]
        },
        "datadog:index/DashboardWidgetTimeseriesDefinitionRequestQuery:DashboardWidgetTimeseriesDefinitionRequestQuery": {
            "properties": {
                "apmDependencyStatsQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetTimeseriesDefinitionRequestQueryApmDependencyStatsQuery:DashboardWidgetTimeseriesDefinitionRequestQueryApmDependencyStatsQuery"
                },
                "apmResourceStatsQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetTimeseriesDefinitionRequestQueryApmResourceStatsQuery:DashboardWidgetTimeseriesDefinitionRequestQueryApmResourceStatsQuery"
                },
                "eventQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetTimeseriesDefinitionRequestQueryEventQuery:DashboardWidgetTimeseriesDefinitionRequestQueryEventQuery"
                },
                "metricQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetTimeseriesDefinitionRequestQueryMetricQuery:DashboardWidgetTimeseriesDefinitionRequestQueryMetricQuery"
                },
                "processQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetTimeseriesDefinitionRequestQueryProcessQuery:DashboardWidgetTimeseriesDefinitionRequestQueryProcessQuery"
                },
                "sloQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetTimeseriesDefinitionRequestQuerySloQuery:DashboardWidgetTimeseriesDefinitionRequestQuerySloQuery"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetTimeseriesDefinitionRequestQueryApmDependencyStatsQuery:DashboardWidgetTimeseriesDefinitionRequestQueryApmDependencyStatsQuery": {
            "properties": {
                "dataSource": {
                    "type": "string"
                },
                "env": {
                    "type": "string"
                },
                "isUpstream": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "operationName": {
                    "type": "string"
                },
                "primaryTagName": {
                    "type": "string"
                },
                "primaryTagValue": {
                    "type": "string"
                },
                "resourceName": {
                    "type": "string"
                },
                "service": {
                    "type": "string"
                },
                "stat": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "dataSource",
                "env",
                "name",
                "operationName",
                "resourceName",
                "service",
                "stat"
            ]
        },
        "datadog:index/DashboardWidgetTimeseriesDefinitionRequestQueryApmResourceStatsQuery:DashboardWidgetTimeseriesDefinitionRequestQueryApmResourceStatsQuery": {
            "properties": {
                "dataSource": {
                    "type": "string"
                },
                "env": {
                    "type": "string"
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "name": {
                    "type": "string"
                },
                "operationName": {
                    "type": "string"
                },
                "primaryTagName": {
                    "type": "string"
                },
                "primaryTagValue": {
                    "type": "string"
                },
                "resourceName": {
                    "type": "string"
                },
                "service": {
                    "type": "string"
                },
                "stat": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "dataSource",
                "env",
                "name",
                "service",
                "stat"
            ]
        },
        "datadog:index/DashboardWidgetTimeseriesDefinitionRequestQueryEventQuery:DashboardWidgetTimeseriesDefinitionRequestQueryEventQuery": {
            "properties": {
                "computes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetTimeseriesDefinitionRequestQueryEventQueryCompute:DashboardWidgetTimeseriesDefinitionRequestQueryEventQueryCompute"
                    }
                },
                "dataSource": {
                    "type": "string"
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetTimeseriesDefinitionRequestQueryEventQueryGroupBy:DashboardWidgetTimeseriesDefinitionRequestQueryEventQueryGroupBy"
                    }
                },
                "indexes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "name": {
                    "type": "string"
                },
                "search": {
                    "$ref": "#/types/datadog:index/DashboardWidgetTimeseriesDefinitionRequestQueryEventQuerySearch:DashboardWidgetTimeseriesDefinitionRequestQueryEventQuerySearch"
                },
                "storage": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "computes",
                "dataSource",
                "name"
            ]
        },
        "datadog:index/DashboardWidgetTimeseriesDefinitionRequestQueryEventQueryCompute:DashboardWidgetTimeseriesDefinitionRequestQueryEventQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "interval": {
                    "type": "integer"
                },
                "metric": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetTimeseriesDefinitionRequestQueryEventQueryGroupBy:DashboardWidgetTimeseriesDefinitionRequestQueryEventQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string"
                },
                "limit": {
                    "type": "integer"
                },
                "sort": {
                    "$ref": "#/types/datadog:index/DashboardWidgetTimeseriesDefinitionRequestQueryEventQueryGroupBySort:DashboardWidgetTimeseriesDefinitionRequestQueryEventQueryGroupBySort"
                }
            },
            "type": "object",
            "required": [
                "facet"
            ]
        },
        "datadog:index/DashboardWidgetTimeseriesDefinitionRequestQueryEventQueryGroupBySort:DashboardWidgetTimeseriesDefinitionRequestQueryEventQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "metric": {
                    "type": "string"
                },
                "order": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetTimeseriesDefinitionRequestQueryEventQuerySearch:DashboardWidgetTimeseriesDefinitionRequestQueryEventQuerySearch": {
            "properties": {
                "query": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/DashboardWidgetTimeseriesDefinitionRequestQueryMetricQuery:DashboardWidgetTimeseriesDefinitionRequestQueryMetricQuery": {
            "properties": {
                "aggregator": {
                    "type": "string"
                },
                "dataSource": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "query": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "name",
                "query"
            ]
        },
        "datadog:index/DashboardWidgetTimeseriesDefinitionRequestQueryProcessQuery:DashboardWidgetTimeseriesDefinitionRequestQueryProcessQuery": {
            "properties": {
                "aggregator": {
                    "type": "string"
                },
                "dataSource": {
                    "type": "string"
                },
                "isNormalizedCpu": {
                    "type": "boolean"
                },
                "limit": {
                    "type": "integer"
                },
                "metric": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "sort": {
                    "type": "string"
                },
                "tagFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "textFilter": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "dataSource",
                "metric",
                "name"
            ]
        },
        "datadog:index/DashboardWidgetTimeseriesDefinitionRequestQuerySloQuery:DashboardWidgetTimeseriesDefinitionRequestQuerySloQuery": {
            "properties": {
                "dataSource": {
                    "type": "string"
                },
                "groupMode": {
                    "type": "string"
                },
                "measure": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "sloId": {
                    "type": "string"
                },
                "sloQueryType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "dataSource",
                "measure",
                "sloId"
            ]
        },
        "datadog:index/DashboardWidgetTimeseriesDefinitionRequestRumQuery:DashboardWidgetTimeseriesDefinitionRequestRumQuery": {
            "properties": {
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetTimeseriesDefinitionRequestRumQueryComputeQuery:DashboardWidgetTimeseriesDefinitionRequestRumQueryComputeQuery"
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetTimeseriesDefinitionRequestRumQueryGroupBy:DashboardWidgetTimeseriesDefinitionRequestRumQueryGroupBy"
                    }
                },
                "index": {
                    "type": "string"
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetTimeseriesDefinitionRequestRumQueryMultiCompute:DashboardWidgetTimeseriesDefinitionRequestRumQueryMultiCompute"
                    }
                },
                "searchQuery": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetTimeseriesDefinitionRequestRumQueryComputeQuery:DashboardWidgetTimeseriesDefinitionRequestRumQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "interval": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetTimeseriesDefinitionRequestRumQueryGroupBy:DashboardWidgetTimeseriesDefinitionRequestRumQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string"
                },
                "limit": {
                    "type": "integer"
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetTimeseriesDefinitionRequestRumQueryGroupBySortQuery:DashboardWidgetTimeseriesDefinitionRequestRumQueryGroupBySortQuery"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetTimeseriesDefinitionRequestRumQueryGroupBySortQuery:DashboardWidgetTimeseriesDefinitionRequestRumQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "order": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetTimeseriesDefinitionRequestRumQueryMultiCompute:DashboardWidgetTimeseriesDefinitionRequestRumQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "interval": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetTimeseriesDefinitionRequestSecurityQuery:DashboardWidgetTimeseriesDefinitionRequestSecurityQuery": {
            "properties": {
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetTimeseriesDefinitionRequestSecurityQueryComputeQuery:DashboardWidgetTimeseriesDefinitionRequestSecurityQueryComputeQuery"
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetTimeseriesDefinitionRequestSecurityQueryGroupBy:DashboardWidgetTimeseriesDefinitionRequestSecurityQueryGroupBy"
                    }
                },
                "index": {
                    "type": "string"
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetTimeseriesDefinitionRequestSecurityQueryMultiCompute:DashboardWidgetTimeseriesDefinitionRequestSecurityQueryMultiCompute"
                    }
                },
                "searchQuery": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetTimeseriesDefinitionRequestSecurityQueryComputeQuery:DashboardWidgetTimeseriesDefinitionRequestSecurityQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "interval": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetTimeseriesDefinitionRequestSecurityQueryGroupBy:DashboardWidgetTimeseriesDefinitionRequestSecurityQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string"
                },
                "limit": {
                    "type": "integer"
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetTimeseriesDefinitionRequestSecurityQueryGroupBySortQuery:DashboardWidgetTimeseriesDefinitionRequestSecurityQueryGroupBySortQuery"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetTimeseriesDefinitionRequestSecurityQueryGroupBySortQuery:DashboardWidgetTimeseriesDefinitionRequestSecurityQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "order": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetTimeseriesDefinitionRequestSecurityQueryMultiCompute:DashboardWidgetTimeseriesDefinitionRequestSecurityQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "interval": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetTimeseriesDefinitionRequestStyle:DashboardWidgetTimeseriesDefinitionRequestStyle": {
            "properties": {
                "lineType": {
                    "type": "string"
                },
                "lineWidth": {
                    "type": "string"
                },
                "palette": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetTimeseriesDefinitionRightYaxis:DashboardWidgetTimeseriesDefinitionRightYaxis": {
            "properties": {
                "includeZero": {
                    "type": "boolean"
                },
                "label": {
                    "type": "string"
                },
                "max": {
                    "type": "string"
                },
                "min": {
                    "type": "string"
                },
                "scale": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetTimeseriesDefinitionYaxis:DashboardWidgetTimeseriesDefinitionYaxis": {
            "properties": {
                "includeZero": {
                    "type": "boolean"
                },
                "label": {
                    "type": "string"
                },
                "max": {
                    "type": "string"
                },
                "min": {
                    "type": "string"
                },
                "scale": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetToplistDefinition:DashboardWidgetToplistDefinition": {
            "properties": {
                "customLinks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetToplistDefinitionCustomLink:DashboardWidgetToplistDefinitionCustomLink"
                    }
                },
                "liveSpan": {
                    "type": "string"
                },
                "requests": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetToplistDefinitionRequest:DashboardWidgetToplistDefinitionRequest"
                    }
                },
                "title": {
                    "type": "string",
                    "description": "The title of the dashboard.\n"
                },
                "titleAlign": {
                    "type": "string"
                },
                "titleSize": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetToplistDefinitionCustomLink:DashboardWidgetToplistDefinitionCustomLink": {
            "properties": {
                "isHidden": {
                    "type": "boolean"
                },
                "label": {
                    "type": "string"
                },
                "link": {
                    "type": "string"
                },
                "overrideLabel": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetToplistDefinitionRequest:DashboardWidgetToplistDefinitionRequest": {
            "properties": {
                "apmQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetToplistDefinitionRequestApmQuery:DashboardWidgetToplistDefinitionRequestApmQuery"
                },
                "auditQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetToplistDefinitionRequestAuditQuery:DashboardWidgetToplistDefinitionRequestAuditQuery"
                },
                "conditionalFormats": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetToplistDefinitionRequestConditionalFormat:DashboardWidgetToplistDefinitionRequestConditionalFormat"
                    }
                },
                "formulas": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetToplistDefinitionRequestFormula:DashboardWidgetToplistDefinitionRequestFormula"
                    }
                },
                "logQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetToplistDefinitionRequestLogQuery:DashboardWidgetToplistDefinitionRequestLogQuery"
                },
                "processQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetToplistDefinitionRequestProcessQuery:DashboardWidgetToplistDefinitionRequestProcessQuery"
                },
                "q": {
                    "type": "string"
                },
                "queries": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetToplistDefinitionRequestQuery:DashboardWidgetToplistDefinitionRequestQuery"
                    }
                },
                "rumQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetToplistDefinitionRequestRumQuery:DashboardWidgetToplistDefinitionRequestRumQuery"
                },
                "securityQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetToplistDefinitionRequestSecurityQuery:DashboardWidgetToplistDefinitionRequestSecurityQuery"
                },
                "style": {
                    "$ref": "#/types/datadog:index/DashboardWidgetToplistDefinitionRequestStyle:DashboardWidgetToplistDefinitionRequestStyle"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetToplistDefinitionRequestApmQuery:DashboardWidgetToplistDefinitionRequestApmQuery": {
            "properties": {
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetToplistDefinitionRequestApmQueryComputeQuery:DashboardWidgetToplistDefinitionRequestApmQueryComputeQuery"
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetToplistDefinitionRequestApmQueryGroupBy:DashboardWidgetToplistDefinitionRequestApmQueryGroupBy"
                    }
                },
                "index": {
                    "type": "string"
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetToplistDefinitionRequestApmQueryMultiCompute:DashboardWidgetToplistDefinitionRequestApmQueryMultiCompute"
                    }
                },
                "searchQuery": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetToplistDefinitionRequestApmQueryComputeQuery:DashboardWidgetToplistDefinitionRequestApmQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "interval": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetToplistDefinitionRequestApmQueryGroupBy:DashboardWidgetToplistDefinitionRequestApmQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string"
                },
                "limit": {
                    "type": "integer"
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetToplistDefinitionRequestApmQueryGroupBySortQuery:DashboardWidgetToplistDefinitionRequestApmQueryGroupBySortQuery"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetToplistDefinitionRequestApmQueryGroupBySortQuery:DashboardWidgetToplistDefinitionRequestApmQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "order": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetToplistDefinitionRequestApmQueryMultiCompute:DashboardWidgetToplistDefinitionRequestApmQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "interval": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetToplistDefinitionRequestAuditQuery:DashboardWidgetToplistDefinitionRequestAuditQuery": {
            "properties": {
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetToplistDefinitionRequestAuditQueryComputeQuery:DashboardWidgetToplistDefinitionRequestAuditQueryComputeQuery"
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetToplistDefinitionRequestAuditQueryGroupBy:DashboardWidgetToplistDefinitionRequestAuditQueryGroupBy"
                    }
                },
                "index": {
                    "type": "string"
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetToplistDefinitionRequestAuditQueryMultiCompute:DashboardWidgetToplistDefinitionRequestAuditQueryMultiCompute"
                    }
                },
                "searchQuery": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetToplistDefinitionRequestAuditQueryComputeQuery:DashboardWidgetToplistDefinitionRequestAuditQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "interval": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetToplistDefinitionRequestAuditQueryGroupBy:DashboardWidgetToplistDefinitionRequestAuditQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string"
                },
                "limit": {
                    "type": "integer"
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetToplistDefinitionRequestAuditQueryGroupBySortQuery:DashboardWidgetToplistDefinitionRequestAuditQueryGroupBySortQuery"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetToplistDefinitionRequestAuditQueryGroupBySortQuery:DashboardWidgetToplistDefinitionRequestAuditQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "order": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetToplistDefinitionRequestAuditQueryMultiCompute:DashboardWidgetToplistDefinitionRequestAuditQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "interval": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetToplistDefinitionRequestConditionalFormat:DashboardWidgetToplistDefinitionRequestConditionalFormat": {
            "properties": {
                "comparator": {
                    "type": "string"
                },
                "customBgColor": {
                    "type": "string"
                },
                "customFgColor": {
                    "type": "string"
                },
                "hideValue": {
                    "type": "boolean"
                },
                "imageUrl": {
                    "type": "string"
                },
                "metric": {
                    "type": "string"
                },
                "palette": {
                    "type": "string"
                },
                "timeframe": {
                    "type": "string"
                },
                "value": {
                    "type": "number"
                }
            },
            "type": "object",
            "required": [
                "comparator",
                "palette",
                "value"
            ]
        },
        "datadog:index/DashboardWidgetToplistDefinitionRequestFormula:DashboardWidgetToplistDefinitionRequestFormula": {
            "properties": {
                "alias": {
                    "type": "string"
                },
                "cellDisplayMode": {
                    "type": "string"
                },
                "conditionalFormats": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetToplistDefinitionRequestFormulaConditionalFormat:DashboardWidgetToplistDefinitionRequestFormulaConditionalFormat"
                    }
                },
                "formulaExpression": {
                    "type": "string"
                },
                "limit": {
                    "$ref": "#/types/datadog:index/DashboardWidgetToplistDefinitionRequestFormulaLimit:DashboardWidgetToplistDefinitionRequestFormulaLimit"
                },
                "style": {
                    "$ref": "#/types/datadog:index/DashboardWidgetToplistDefinitionRequestFormulaStyle:DashboardWidgetToplistDefinitionRequestFormulaStyle"
                }
            },
            "type": "object",
            "required": [
                "formulaExpression"
            ]
        },
        "datadog:index/DashboardWidgetToplistDefinitionRequestFormulaConditionalFormat:DashboardWidgetToplistDefinitionRequestFormulaConditionalFormat": {
            "properties": {
                "comparator": {
                    "type": "string"
                },
                "customBgColor": {
                    "type": "string"
                },
                "customFgColor": {
                    "type": "string"
                },
                "hideValue": {
                    "type": "boolean"
                },
                "imageUrl": {
                    "type": "string"
                },
                "metric": {
                    "type": "string"
                },
                "palette": {
                    "type": "string"
                },
                "timeframe": {
                    "type": "string"
                },
                "value": {
                    "type": "number"
                }
            },
            "type": "object",
            "required": [
                "comparator",
                "palette",
                "value"
            ]
        },
        "datadog:index/DashboardWidgetToplistDefinitionRequestFormulaLimit:DashboardWidgetToplistDefinitionRequestFormulaLimit": {
            "properties": {
                "count": {
                    "type": "integer"
                },
                "order": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetToplistDefinitionRequestFormulaStyle:DashboardWidgetToplistDefinitionRequestFormulaStyle": {
            "properties": {
                "palette": {
                    "type": "string"
                },
                "paletteIndex": {
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetToplistDefinitionRequestLogQuery:DashboardWidgetToplistDefinitionRequestLogQuery": {
            "properties": {
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetToplistDefinitionRequestLogQueryComputeQuery:DashboardWidgetToplistDefinitionRequestLogQueryComputeQuery"
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetToplistDefinitionRequestLogQueryGroupBy:DashboardWidgetToplistDefinitionRequestLogQueryGroupBy"
                    }
                },
                "index": {
                    "type": "string"
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetToplistDefinitionRequestLogQueryMultiCompute:DashboardWidgetToplistDefinitionRequestLogQueryMultiCompute"
                    }
                },
                "searchQuery": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetToplistDefinitionRequestLogQueryComputeQuery:DashboardWidgetToplistDefinitionRequestLogQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "interval": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetToplistDefinitionRequestLogQueryGroupBy:DashboardWidgetToplistDefinitionRequestLogQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string"
                },
                "limit": {
                    "type": "integer"
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetToplistDefinitionRequestLogQueryGroupBySortQuery:DashboardWidgetToplistDefinitionRequestLogQueryGroupBySortQuery"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetToplistDefinitionRequestLogQueryGroupBySortQuery:DashboardWidgetToplistDefinitionRequestLogQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "order": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetToplistDefinitionRequestLogQueryMultiCompute:DashboardWidgetToplistDefinitionRequestLogQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "interval": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetToplistDefinitionRequestProcessQuery:DashboardWidgetToplistDefinitionRequestProcessQuery": {
            "properties": {
                "filterBies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "limit": {
                    "type": "integer"
                },
                "metric": {
                    "type": "string"
                },
                "searchBy": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "metric"
            ]
        },
        "datadog:index/DashboardWidgetToplistDefinitionRequestQuery:DashboardWidgetToplistDefinitionRequestQuery": {
            "properties": {
                "apmDependencyStatsQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetToplistDefinitionRequestQueryApmDependencyStatsQuery:DashboardWidgetToplistDefinitionRequestQueryApmDependencyStatsQuery"
                },
                "apmResourceStatsQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetToplistDefinitionRequestQueryApmResourceStatsQuery:DashboardWidgetToplistDefinitionRequestQueryApmResourceStatsQuery"
                },
                "eventQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetToplistDefinitionRequestQueryEventQuery:DashboardWidgetToplistDefinitionRequestQueryEventQuery"
                },
                "metricQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetToplistDefinitionRequestQueryMetricQuery:DashboardWidgetToplistDefinitionRequestQueryMetricQuery"
                },
                "processQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetToplistDefinitionRequestQueryProcessQuery:DashboardWidgetToplistDefinitionRequestQueryProcessQuery"
                },
                "sloQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetToplistDefinitionRequestQuerySloQuery:DashboardWidgetToplistDefinitionRequestQuerySloQuery"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetToplistDefinitionRequestQueryApmDependencyStatsQuery:DashboardWidgetToplistDefinitionRequestQueryApmDependencyStatsQuery": {
            "properties": {
                "dataSource": {
                    "type": "string"
                },
                "env": {
                    "type": "string"
                },
                "isUpstream": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "operationName": {
                    "type": "string"
                },
                "primaryTagName": {
                    "type": "string"
                },
                "primaryTagValue": {
                    "type": "string"
                },
                "resourceName": {
                    "type": "string"
                },
                "service": {
                    "type": "string"
                },
                "stat": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "dataSource",
                "env",
                "name",
                "operationName",
                "resourceName",
                "service",
                "stat"
            ]
        },
        "datadog:index/DashboardWidgetToplistDefinitionRequestQueryApmResourceStatsQuery:DashboardWidgetToplistDefinitionRequestQueryApmResourceStatsQuery": {
            "properties": {
                "dataSource": {
                    "type": "string"
                },
                "env": {
                    "type": "string"
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "name": {
                    "type": "string"
                },
                "operationName": {
                    "type": "string"
                },
                "primaryTagName": {
                    "type": "string"
                },
                "primaryTagValue": {
                    "type": "string"
                },
                "resourceName": {
                    "type": "string"
                },
                "service": {
                    "type": "string"
                },
                "stat": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "dataSource",
                "env",
                "name",
                "service",
                "stat"
            ]
        },
        "datadog:index/DashboardWidgetToplistDefinitionRequestQueryEventQuery:DashboardWidgetToplistDefinitionRequestQueryEventQuery": {
            "properties": {
                "computes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetToplistDefinitionRequestQueryEventQueryCompute:DashboardWidgetToplistDefinitionRequestQueryEventQueryCompute"
                    }
                },
                "dataSource": {
                    "type": "string"
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetToplistDefinitionRequestQueryEventQueryGroupBy:DashboardWidgetToplistDefinitionRequestQueryEventQueryGroupBy"
                    }
                },
                "indexes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "name": {
                    "type": "string"
                },
                "search": {
                    "$ref": "#/types/datadog:index/DashboardWidgetToplistDefinitionRequestQueryEventQuerySearch:DashboardWidgetToplistDefinitionRequestQueryEventQuerySearch"
                },
                "storage": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "computes",
                "dataSource",
                "name"
            ]
        },
        "datadog:index/DashboardWidgetToplistDefinitionRequestQueryEventQueryCompute:DashboardWidgetToplistDefinitionRequestQueryEventQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "interval": {
                    "type": "integer"
                },
                "metric": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetToplistDefinitionRequestQueryEventQueryGroupBy:DashboardWidgetToplistDefinitionRequestQueryEventQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string"
                },
                "limit": {
                    "type": "integer"
                },
                "sort": {
                    "$ref": "#/types/datadog:index/DashboardWidgetToplistDefinitionRequestQueryEventQueryGroupBySort:DashboardWidgetToplistDefinitionRequestQueryEventQueryGroupBySort"
                }
            },
            "type": "object",
            "required": [
                "facet"
            ]
        },
        "datadog:index/DashboardWidgetToplistDefinitionRequestQueryEventQueryGroupBySort:DashboardWidgetToplistDefinitionRequestQueryEventQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "metric": {
                    "type": "string"
                },
                "order": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetToplistDefinitionRequestQueryEventQuerySearch:DashboardWidgetToplistDefinitionRequestQueryEventQuerySearch": {
            "properties": {
                "query": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/DashboardWidgetToplistDefinitionRequestQueryMetricQuery:DashboardWidgetToplistDefinitionRequestQueryMetricQuery": {
            "properties": {
                "aggregator": {
                    "type": "string"
                },
                "dataSource": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "query": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "name",
                "query"
            ]
        },
        "datadog:index/DashboardWidgetToplistDefinitionRequestQueryProcessQuery:DashboardWidgetToplistDefinitionRequestQueryProcessQuery": {
            "properties": {
                "aggregator": {
                    "type": "string"
                },
                "dataSource": {
                    "type": "string"
                },
                "isNormalizedCpu": {
                    "type": "boolean"
                },
                "limit": {
                    "type": "integer"
                },
                "metric": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "sort": {
                    "type": "string"
                },
                "tagFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "textFilter": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "dataSource",
                "metric",
                "name"
            ]
        },
        "datadog:index/DashboardWidgetToplistDefinitionRequestQuerySloQuery:DashboardWidgetToplistDefinitionRequestQuerySloQuery": {
            "properties": {
                "dataSource": {
                    "type": "string"
                },
                "groupMode": {
                    "type": "string"
                },
                "measure": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "sloId": {
                    "type": "string"
                },
                "sloQueryType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "dataSource",
                "measure",
                "sloId"
            ]
        },
        "datadog:index/DashboardWidgetToplistDefinitionRequestRumQuery:DashboardWidgetToplistDefinitionRequestRumQuery": {
            "properties": {
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetToplistDefinitionRequestRumQueryComputeQuery:DashboardWidgetToplistDefinitionRequestRumQueryComputeQuery"
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetToplistDefinitionRequestRumQueryGroupBy:DashboardWidgetToplistDefinitionRequestRumQueryGroupBy"
                    }
                },
                "index": {
                    "type": "string"
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetToplistDefinitionRequestRumQueryMultiCompute:DashboardWidgetToplistDefinitionRequestRumQueryMultiCompute"
                    }
                },
                "searchQuery": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetToplistDefinitionRequestRumQueryComputeQuery:DashboardWidgetToplistDefinitionRequestRumQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "interval": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetToplistDefinitionRequestRumQueryGroupBy:DashboardWidgetToplistDefinitionRequestRumQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string"
                },
                "limit": {
                    "type": "integer"
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetToplistDefinitionRequestRumQueryGroupBySortQuery:DashboardWidgetToplistDefinitionRequestRumQueryGroupBySortQuery"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetToplistDefinitionRequestRumQueryGroupBySortQuery:DashboardWidgetToplistDefinitionRequestRumQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "order": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetToplistDefinitionRequestRumQueryMultiCompute:DashboardWidgetToplistDefinitionRequestRumQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "interval": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetToplistDefinitionRequestSecurityQuery:DashboardWidgetToplistDefinitionRequestSecurityQuery": {
            "properties": {
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetToplistDefinitionRequestSecurityQueryComputeQuery:DashboardWidgetToplistDefinitionRequestSecurityQueryComputeQuery"
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetToplistDefinitionRequestSecurityQueryGroupBy:DashboardWidgetToplistDefinitionRequestSecurityQueryGroupBy"
                    }
                },
                "index": {
                    "type": "string"
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetToplistDefinitionRequestSecurityQueryMultiCompute:DashboardWidgetToplistDefinitionRequestSecurityQueryMultiCompute"
                    }
                },
                "searchQuery": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetToplistDefinitionRequestSecurityQueryComputeQuery:DashboardWidgetToplistDefinitionRequestSecurityQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "interval": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetToplistDefinitionRequestSecurityQueryGroupBy:DashboardWidgetToplistDefinitionRequestSecurityQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string"
                },
                "limit": {
                    "type": "integer"
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetToplistDefinitionRequestSecurityQueryGroupBySortQuery:DashboardWidgetToplistDefinitionRequestSecurityQueryGroupBySortQuery"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetToplistDefinitionRequestSecurityQueryGroupBySortQuery:DashboardWidgetToplistDefinitionRequestSecurityQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "order": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetToplistDefinitionRequestSecurityQueryMultiCompute:DashboardWidgetToplistDefinitionRequestSecurityQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "facet": {
                    "type": "string"
                },
                "interval": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetToplistDefinitionRequestStyle:DashboardWidgetToplistDefinitionRequestStyle": {
            "properties": {
                "palette": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetTopologyMapDefinition:DashboardWidgetTopologyMapDefinition": {
            "properties": {
                "customLinks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetTopologyMapDefinitionCustomLink:DashboardWidgetTopologyMapDefinitionCustomLink"
                    }
                },
                "requests": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetTopologyMapDefinitionRequest:DashboardWidgetTopologyMapDefinitionRequest"
                    }
                },
                "title": {
                    "type": "string",
                    "description": "The title of the dashboard.\n"
                },
                "titleAlign": {
                    "type": "string"
                },
                "titleSize": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetTopologyMapDefinitionCustomLink:DashboardWidgetTopologyMapDefinitionCustomLink": {
            "properties": {
                "isHidden": {
                    "type": "boolean"
                },
                "label": {
                    "type": "string"
                },
                "link": {
                    "type": "string"
                },
                "overrideLabel": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetTopologyMapDefinitionRequest:DashboardWidgetTopologyMapDefinitionRequest": {
            "properties": {
                "queries": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetTopologyMapDefinitionRequestQuery:DashboardWidgetTopologyMapDefinitionRequestQuery"
                    }
                },
                "requestType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "queries",
                "requestType"
            ]
        },
        "datadog:index/DashboardWidgetTopologyMapDefinitionRequestQuery:DashboardWidgetTopologyMapDefinitionRequestQuery": {
            "properties": {
                "dataSource": {
                    "type": "string"
                },
                "filters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "service": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "dataSource",
                "filters",
                "service"
            ]
        },
        "datadog:index/DashboardWidgetTraceServiceDefinition:DashboardWidgetTraceServiceDefinition": {
            "properties": {
                "displayFormat": {
                    "type": "string"
                },
                "env": {
                    "type": "string"
                },
                "liveSpan": {
                    "type": "string"
                },
                "service": {
                    "type": "string"
                },
                "showBreakdown": {
                    "type": "boolean"
                },
                "showDistribution": {
                    "type": "boolean"
                },
                "showErrors": {
                    "type": "boolean"
                },
                "showHits": {
                    "type": "boolean"
                },
                "showLatency": {
                    "type": "boolean"
                },
                "showResourceList": {
                    "type": "boolean"
                },
                "sizeFormat": {
                    "type": "string"
                },
                "spanName": {
                    "type": "string"
                },
                "title": {
                    "type": "string",
                    "description": "The title of the dashboard.\n"
                },
                "titleAlign": {
                    "type": "string"
                },
                "titleSize": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "env",
                "service",
                "spanName"
            ]
        },
        "datadog:index/DashboardWidgetTreemapDefinition:DashboardWidgetTreemapDefinition": {
            "properties": {
                "requests": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetTreemapDefinitionRequest:DashboardWidgetTreemapDefinitionRequest"
                    }
                },
                "title": {
                    "type": "string",
                    "description": "The title of the dashboard.\n"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetTreemapDefinitionRequest:DashboardWidgetTreemapDefinitionRequest": {
            "properties": {
                "formulas": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetTreemapDefinitionRequestFormula:DashboardWidgetTreemapDefinitionRequestFormula"
                    }
                },
                "queries": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetTreemapDefinitionRequestQuery:DashboardWidgetTreemapDefinitionRequestQuery"
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetTreemapDefinitionRequestFormula:DashboardWidgetTreemapDefinitionRequestFormula": {
            "properties": {
                "alias": {
                    "type": "string"
                },
                "cellDisplayMode": {
                    "type": "string"
                },
                "conditionalFormats": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetTreemapDefinitionRequestFormulaConditionalFormat:DashboardWidgetTreemapDefinitionRequestFormulaConditionalFormat"
                    }
                },
                "formulaExpression": {
                    "type": "string"
                },
                "limit": {
                    "$ref": "#/types/datadog:index/DashboardWidgetTreemapDefinitionRequestFormulaLimit:DashboardWidgetTreemapDefinitionRequestFormulaLimit"
                },
                "style": {
                    "$ref": "#/types/datadog:index/DashboardWidgetTreemapDefinitionRequestFormulaStyle:DashboardWidgetTreemapDefinitionRequestFormulaStyle"
                }
            },
            "type": "object",
            "required": [
                "formulaExpression"
            ]
        },
        "datadog:index/DashboardWidgetTreemapDefinitionRequestFormulaConditionalFormat:DashboardWidgetTreemapDefinitionRequestFormulaConditionalFormat": {
            "properties": {
                "comparator": {
                    "type": "string"
                },
                "customBgColor": {
                    "type": "string"
                },
                "customFgColor": {
                    "type": "string"
                },
                "hideValue": {
                    "type": "boolean"
                },
                "imageUrl": {
                    "type": "string"
                },
                "metric": {
                    "type": "string"
                },
                "palette": {
                    "type": "string"
                },
                "timeframe": {
                    "type": "string"
                },
                "value": {
                    "type": "number"
                }
            },
            "type": "object",
            "required": [
                "comparator",
                "palette",
                "value"
            ]
        },
        "datadog:index/DashboardWidgetTreemapDefinitionRequestFormulaLimit:DashboardWidgetTreemapDefinitionRequestFormulaLimit": {
            "properties": {
                "count": {
                    "type": "integer"
                },
                "order": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetTreemapDefinitionRequestFormulaStyle:DashboardWidgetTreemapDefinitionRequestFormulaStyle": {
            "properties": {
                "palette": {
                    "type": "string"
                },
                "paletteIndex": {
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetTreemapDefinitionRequestQuery:DashboardWidgetTreemapDefinitionRequestQuery": {
            "properties": {
                "apmDependencyStatsQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetTreemapDefinitionRequestQueryApmDependencyStatsQuery:DashboardWidgetTreemapDefinitionRequestQueryApmDependencyStatsQuery"
                },
                "apmResourceStatsQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetTreemapDefinitionRequestQueryApmResourceStatsQuery:DashboardWidgetTreemapDefinitionRequestQueryApmResourceStatsQuery"
                },
                "eventQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetTreemapDefinitionRequestQueryEventQuery:DashboardWidgetTreemapDefinitionRequestQueryEventQuery"
                },
                "metricQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetTreemapDefinitionRequestQueryMetricQuery:DashboardWidgetTreemapDefinitionRequestQueryMetricQuery"
                },
                "processQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetTreemapDefinitionRequestQueryProcessQuery:DashboardWidgetTreemapDefinitionRequestQueryProcessQuery"
                },
                "sloQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetTreemapDefinitionRequestQuerySloQuery:DashboardWidgetTreemapDefinitionRequestQuerySloQuery"
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetTreemapDefinitionRequestQueryApmDependencyStatsQuery:DashboardWidgetTreemapDefinitionRequestQueryApmDependencyStatsQuery": {
            "properties": {
                "dataSource": {
                    "type": "string"
                },
                "env": {
                    "type": "string"
                },
                "isUpstream": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "operationName": {
                    "type": "string"
                },
                "primaryTagName": {
                    "type": "string"
                },
                "primaryTagValue": {
                    "type": "string"
                },
                "resourceName": {
                    "type": "string"
                },
                "service": {
                    "type": "string"
                },
                "stat": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "dataSource",
                "env",
                "name",
                "operationName",
                "resourceName",
                "service",
                "stat"
            ]
        },
        "datadog:index/DashboardWidgetTreemapDefinitionRequestQueryApmResourceStatsQuery:DashboardWidgetTreemapDefinitionRequestQueryApmResourceStatsQuery": {
            "properties": {
                "dataSource": {
                    "type": "string"
                },
                "env": {
                    "type": "string"
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "name": {
                    "type": "string"
                },
                "operationName": {
                    "type": "string"
                },
                "primaryTagName": {
                    "type": "string"
                },
                "primaryTagValue": {
                    "type": "string"
                },
                "resourceName": {
                    "type": "string"
                },
                "service": {
                    "type": "string"
                },
                "stat": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "dataSource",
                "env",
                "name",
                "service",
                "stat"
            ]
        },
        "datadog:index/DashboardWidgetTreemapDefinitionRequestQueryEventQuery:DashboardWidgetTreemapDefinitionRequestQueryEventQuery": {
            "properties": {
                "computes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetTreemapDefinitionRequestQueryEventQueryCompute:DashboardWidgetTreemapDefinitionRequestQueryEventQueryCompute"
                    }
                },
                "dataSource": {
                    "type": "string"
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetTreemapDefinitionRequestQueryEventQueryGroupBy:DashboardWidgetTreemapDefinitionRequestQueryEventQueryGroupBy"
                    }
                },
                "indexes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "name": {
                    "type": "string"
                },
                "search": {
                    "$ref": "#/types/datadog:index/DashboardWidgetTreemapDefinitionRequestQueryEventQuerySearch:DashboardWidgetTreemapDefinitionRequestQueryEventQuerySearch"
                },
                "storage": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "computes",
                "dataSource",
                "name"
            ]
        },
        "datadog:index/DashboardWidgetTreemapDefinitionRequestQueryEventQueryCompute:DashboardWidgetTreemapDefinitionRequestQueryEventQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "interval": {
                    "type": "integer"
                },
                "metric": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetTreemapDefinitionRequestQueryEventQueryGroupBy:DashboardWidgetTreemapDefinitionRequestQueryEventQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string"
                },
                "limit": {
                    "type": "integer"
                },
                "sort": {
                    "$ref": "#/types/datadog:index/DashboardWidgetTreemapDefinitionRequestQueryEventQueryGroupBySort:DashboardWidgetTreemapDefinitionRequestQueryEventQueryGroupBySort"
                }
            },
            "type": "object",
            "required": [
                "facet"
            ]
        },
        "datadog:index/DashboardWidgetTreemapDefinitionRequestQueryEventQueryGroupBySort:DashboardWidgetTreemapDefinitionRequestQueryEventQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "metric": {
                    "type": "string"
                },
                "order": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetTreemapDefinitionRequestQueryEventQuerySearch:DashboardWidgetTreemapDefinitionRequestQueryEventQuerySearch": {
            "properties": {
                "query": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/DashboardWidgetTreemapDefinitionRequestQueryMetricQuery:DashboardWidgetTreemapDefinitionRequestQueryMetricQuery": {
            "properties": {
                "aggregator": {
                    "type": "string"
                },
                "dataSource": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "query": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "name",
                "query"
            ]
        },
        "datadog:index/DashboardWidgetTreemapDefinitionRequestQueryProcessQuery:DashboardWidgetTreemapDefinitionRequestQueryProcessQuery": {
            "properties": {
                "aggregator": {
                    "type": "string"
                },
                "dataSource": {
                    "type": "string"
                },
                "isNormalizedCpu": {
                    "type": "boolean"
                },
                "limit": {
                    "type": "integer"
                },
                "metric": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "sort": {
                    "type": "string"
                },
                "tagFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "textFilter": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "dataSource",
                "metric",
                "name"
            ]
        },
        "datadog:index/DashboardWidgetTreemapDefinitionRequestQuerySloQuery:DashboardWidgetTreemapDefinitionRequestQuerySloQuery": {
            "properties": {
                "dataSource": {
                    "type": "string"
                },
                "groupMode": {
                    "type": "string"
                },
                "measure": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "sloId": {
                    "type": "string"
                },
                "sloQueryType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "dataSource",
                "measure",
                "sloId"
            ]
        },
        "datadog:index/DashboardWidgetWidgetLayout:DashboardWidgetWidgetLayout": {
            "properties": {
                "height": {
                    "type": "integer"
                },
                "isColumnBreak": {
                    "type": "boolean"
                },
                "width": {
                    "type": "integer"
                },
                "x": {
                    "type": "integer"
                },
                "y": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "height",
                "width",
                "x",
                "y"
            ]
        },
        "datadog:index/DowntimeRecurrence:DowntimeRecurrence": {
            "properties": {
                "period": {
                    "type": "integer",
                    "description": "How often to repeat as an integer. For example to repeat every 3 days, select a `type` of `days` and a `period` of `3`.\n"
                },
                "rrule": {
                    "type": "string",
                    "description": "The RRULE standard for defining recurring events. For example, to have a recurring event on the first day of each month, use `FREQ=MONTHLY;INTERVAL=1`. Most common rrule options from the iCalendar Spec are supported. Attributes specifying the duration in RRULE are not supported (for example, `DTSTART`, `DTEND`, `DURATION`). Only applicable when `type` is `rrule`.\n"
                },
                "type": {
                    "type": "string",
                    "description": "One of `days`, `weeks`, `months`, `years`, or `rrule`.\n"
                },
                "untilDate": {
                    "type": "integer",
                    "description": "The date at which the recurrence should end as a POSIX timestamp. `until_occurrences` and `until_date` are mutually exclusive.\n"
                },
                "untilOccurrences": {
                    "type": "integer",
                    "description": "How many times the downtime will be rescheduled. `until_occurrences` and `until_date` are mutually exclusive.\n"
                },
                "weekDays": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of week days to repeat on. Choose from: `Mon`, `Tue`, `Wed`, `Thu`, `Fri`, `Sat` or `Sun`. Only applicable when `type` is `weeks`. First letter must be capitalized.\n"
                }
            },
            "type": "object",
            "required": [
                "type"
            ]
        },
        "datadog:index/IpAllowlistEntry:IpAllowlistEntry": {
            "properties": {
                "cidrBlock": {
                    "type": "string"
                },
                "note": {
                    "type": "string",
                    "description": "Note accompanying IP address.\n"
                }
            },
            "type": "object",
            "required": [
                "cidrBlock"
            ]
        },
        "datadog:index/LogsArchiveAzureArchive:LogsArchiveAzureArchive": {
            "properties": {
                "clientId": {
                    "type": "string",
                    "description": "Your client id.\n"
                },
                "container": {
                    "type": "string",
                    "description": "The container where the archive is stored.\n"
                },
                "path": {
                    "type": "string",
                    "description": "The path where the archive is stored.\n"
                },
                "storageAccount": {
                    "type": "string",
                    "description": "The associated storage account.\n"
                },
                "tenantId": {
                    "type": "string",
                    "description": "Your tenant id.\n"
                }
            },
            "type": "object",
            "required": [
                "clientId",
                "container",
                "storageAccount",
                "tenantId"
            ]
        },
        "datadog:index/LogsArchiveGcsArchive:LogsArchiveGcsArchive": {
            "properties": {
                "bucket": {
                    "type": "string",
                    "description": "Name of your GCS bucket.\n"
                },
                "clientEmail": {
                    "type": "string",
                    "description": "Your client email.\n"
                },
                "path": {
                    "type": "string",
                    "description": "Path where the archive is stored.\n"
                },
                "projectId": {
                    "type": "string",
                    "description": "Your project id.\n"
                }
            },
            "type": "object",
            "required": [
                "bucket",
                "clientEmail",
                "projectId"
            ]
        },
        "datadog:index/LogsArchiveS3Archive:LogsArchiveS3Archive": {
            "properties": {
                "accountId": {
                    "type": "string",
                    "description": "Your AWS account id.\n"
                },
                "bucket": {
                    "type": "string",
                    "description": "Name of your s3 bucket.\n"
                },
                "path": {
                    "type": "string",
                    "description": "Path where the archive is stored.\n"
                },
                "roleName": {
                    "type": "string",
                    "description": "Your AWS role name\n"
                }
            },
            "type": "object",
            "required": [
                "accountId",
                "bucket",
                "roleName"
            ]
        },
        "datadog:index/LogsCustomPipelineFilter:LogsCustomPipelineFilter": {
            "properties": {
                "query": {
                    "type": "string",
                    "description": "Filter criteria of the category.\n"
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/LogsCustomPipelineProcessor:LogsCustomPipelineProcessor": {
            "properties": {
                "arithmeticProcessor": {
                    "$ref": "#/types/datadog:index/LogsCustomPipelineProcessorArithmeticProcessor:LogsCustomPipelineProcessorArithmeticProcessor",
                    "description": "Arithmetic Processor. More information can be found in the [official docs](https://docs.datadoghq.com/logs/processing/processors/?tab=ui#arithmetic-processor)\n"
                },
                "attributeRemapper": {
                    "$ref": "#/types/datadog:index/LogsCustomPipelineProcessorAttributeRemapper:LogsCustomPipelineProcessorAttributeRemapper",
                    "description": "Attribute Remapper Processor. More information can be found in the [official docs](https://docs.datadoghq.com/logs/processing/processors/?tab=ui#remapper)\n"
                },
                "categoryProcessor": {
                    "$ref": "#/types/datadog:index/LogsCustomPipelineProcessorCategoryProcessor:LogsCustomPipelineProcessorCategoryProcessor",
                    "description": "Category Processor. More information can be found in the [official docs](https://docs.datadoghq.com/logs/processing/processors/?tab=ui#category-processor)\n"
                },
                "dateRemapper": {
                    "$ref": "#/types/datadog:index/LogsCustomPipelineProcessorDateRemapper:LogsCustomPipelineProcessorDateRemapper",
                    "description": "Date Remapper Processor. More information can be found in the [official docs](https://docs.datadoghq.com/logs/processing/processors/?tab=ui#log-date-remapper)\n"
                },
                "geoIpParser": {
                    "$ref": "#/types/datadog:index/LogsCustomPipelineProcessorGeoIpParser:LogsCustomPipelineProcessorGeoIpParser",
                    "description": "Date GeoIP Processor. More information can be found in the [official docs](https://docs.datadoghq.com/logs/processing/processors/?tab=ui#geoip-parser)\n"
                },
                "grokParser": {
                    "$ref": "#/types/datadog:index/LogsCustomPipelineProcessorGrokParser:LogsCustomPipelineProcessorGrokParser",
                    "description": "Grok Processor. More information can be found in the [official docs](https://docs.datadoghq.com/logs/processing/processors/?tab=ui#grok-parser)\n"
                },
                "lookupProcessor": {
                    "$ref": "#/types/datadog:index/LogsCustomPipelineProcessorLookupProcessor:LogsCustomPipelineProcessorLookupProcessor",
                    "description": "Lookup Processor. More information can be found in the [official docs](https://docs.datadoghq.com/logs/processing/processors/?tab=ui#lookup-processor)\n"
                },
                "messageRemapper": {
                    "$ref": "#/types/datadog:index/LogsCustomPipelineProcessorMessageRemapper:LogsCustomPipelineProcessorMessageRemapper",
                    "description": "Message Remapper Processor. More information can be found in the [official docs](https://docs.datadoghq.com/logs/processing/processors/?tab=ui#log-message-remapper)\n"
                },
                "pipeline": {
                    "$ref": "#/types/datadog:index/LogsCustomPipelineProcessorPipeline:LogsCustomPipelineProcessorPipeline"
                },
                "referenceTableLookupProcessor": {
                    "$ref": "#/types/datadog:index/LogsCustomPipelineProcessorReferenceTableLookupProcessor:LogsCustomPipelineProcessorReferenceTableLookupProcessor",
                    "description": "Reference Table Lookup Processor. Reference Tables are in public beta. More information can be found in the [official docs](https://docs.datadoghq.com/logs/processing/processors/?tab=ui#lookup-processor)\n"
                },
                "serviceRemapper": {
                    "$ref": "#/types/datadog:index/LogsCustomPipelineProcessorServiceRemapper:LogsCustomPipelineProcessorServiceRemapper",
                    "description": "Service Remapper Processor. More information can be found in the [official docs](https://docs.datadoghq.com/logs/processing/processors/?tab=ui#service-remapper)\n"
                },
                "statusRemapper": {
                    "$ref": "#/types/datadog:index/LogsCustomPipelineProcessorStatusRemapper:LogsCustomPipelineProcessorStatusRemapper",
                    "description": "Status Remapper Processor. More information can be found in the [official docs](https://docs.datadoghq.com/logs/processing/processors/?tab=ui#log-status-remapper)\n"
                },
                "stringBuilderProcessor": {
                    "$ref": "#/types/datadog:index/LogsCustomPipelineProcessorStringBuilderProcessor:LogsCustomPipelineProcessorStringBuilderProcessor",
                    "description": "String Builder Processor. More information can be found in the [official docs](https://docs.datadoghq.com/logs/processing/processors/?tab=ui#string-builder-processor)\n"
                },
                "traceIdRemapper": {
                    "$ref": "#/types/datadog:index/LogsCustomPipelineProcessorTraceIdRemapper:LogsCustomPipelineProcessorTraceIdRemapper",
                    "description": "Trace ID Remapper Processor. More information can be found in the [official docs](https://docs.datadoghq.com/logs/processing/processors/?tab=ui#trace-remapper)\n"
                },
                "urlParser": {
                    "$ref": "#/types/datadog:index/LogsCustomPipelineProcessorUrlParser:LogsCustomPipelineProcessorUrlParser",
                    "description": "URL Parser Processor. More information can be found in the [official docs](https://docs.datadoghq.com/logs/processing/processors/?tab=ui#url-parser)\n"
                },
                "userAgentParser": {
                    "$ref": "#/types/datadog:index/LogsCustomPipelineProcessorUserAgentParser:LogsCustomPipelineProcessorUserAgentParser",
                    "description": "User-Agent Parser Processor. More information can be found in the [official docs](https://docs.datadoghq.com/logs/processing/processors/?tab=ui#user-agent-parser)\n"
                }
            },
            "type": "object"
        },
        "datadog:index/LogsCustomPipelineProcessorArithmeticProcessor:LogsCustomPipelineProcessorArithmeticProcessor": {
            "properties": {
                "expression": {
                    "type": "string"
                },
                "isEnabled": {
                    "type": "boolean"
                },
                "isReplaceMissing": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "target": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "expression",
                "target"
            ]
        },
        "datadog:index/LogsCustomPipelineProcessorAttributeRemapper:LogsCustomPipelineProcessorAttributeRemapper": {
            "properties": {
                "isEnabled": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "overrideOnConflict": {
                    "type": "boolean"
                },
                "preserveSource": {
                    "type": "boolean"
                },
                "sourceType": {
                    "type": "string"
                },
                "sources": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "target": {
                    "type": "string"
                },
                "targetFormat": {
                    "type": "string"
                },
                "targetType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "sourceType",
                "sources",
                "target",
                "targetType"
            ]
        },
        "datadog:index/LogsCustomPipelineProcessorCategoryProcessor:LogsCustomPipelineProcessorCategoryProcessor": {
            "properties": {
                "categories": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/LogsCustomPipelineProcessorCategoryProcessorCategory:LogsCustomPipelineProcessorCategoryProcessorCategory"
                    }
                },
                "isEnabled": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "target": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "categories",
                "target"
            ]
        },
        "datadog:index/LogsCustomPipelineProcessorCategoryProcessorCategory:LogsCustomPipelineProcessorCategoryProcessorCategory": {
            "properties": {
                "filter": {
                    "$ref": "#/types/datadog:index/LogsCustomPipelineProcessorCategoryProcessorCategoryFilter:LogsCustomPipelineProcessorCategoryProcessorCategoryFilter"
                },
                "name": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "filter",
                "name"
            ]
        },
        "datadog:index/LogsCustomPipelineProcessorCategoryProcessorCategoryFilter:LogsCustomPipelineProcessorCategoryProcessorCategoryFilter": {
            "properties": {
                "query": {
                    "type": "string",
                    "description": "Filter criteria of the category.\n"
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/LogsCustomPipelineProcessorDateRemapper:LogsCustomPipelineProcessorDateRemapper": {
            "properties": {
                "isEnabled": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "sources": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "type": "object",
            "required": [
                "sources"
            ]
        },
        "datadog:index/LogsCustomPipelineProcessorGeoIpParser:LogsCustomPipelineProcessorGeoIpParser": {
            "properties": {
                "isEnabled": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "sources": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "target": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "sources",
                "target"
            ]
        },
        "datadog:index/LogsCustomPipelineProcessorGrokParser:LogsCustomPipelineProcessorGrokParser": {
            "properties": {
                "grok": {
                    "$ref": "#/types/datadog:index/LogsCustomPipelineProcessorGrokParserGrok:LogsCustomPipelineProcessorGrokParserGrok"
                },
                "isEnabled": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "samples": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "source": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "grok",
                "source"
            ]
        },
        "datadog:index/LogsCustomPipelineProcessorGrokParserGrok:LogsCustomPipelineProcessorGrokParserGrok": {
            "properties": {
                "matchRules": {
                    "type": "string"
                },
                "supportRules": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "matchRules",
                "supportRules"
            ]
        },
        "datadog:index/LogsCustomPipelineProcessorLookupProcessor:LogsCustomPipelineProcessorLookupProcessor": {
            "properties": {
                "defaultLookup": {
                    "type": "string"
                },
                "isEnabled": {
                    "type": "boolean"
                },
                "lookupTables": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "name": {
                    "type": "string"
                },
                "source": {
                    "type": "string"
                },
                "target": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "lookupTables",
                "source",
                "target"
            ]
        },
        "datadog:index/LogsCustomPipelineProcessorMessageRemapper:LogsCustomPipelineProcessorMessageRemapper": {
            "properties": {
                "isEnabled": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "sources": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "type": "object",
            "required": [
                "sources"
            ]
        },
        "datadog:index/LogsCustomPipelineProcessorPipeline:LogsCustomPipelineProcessorPipeline": {
            "properties": {
                "filters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/LogsCustomPipelineProcessorPipelineFilter:LogsCustomPipelineProcessorPipelineFilter"
                    }
                },
                "isEnabled": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "processors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/LogsCustomPipelineProcessorPipelineProcessor:LogsCustomPipelineProcessorPipelineProcessor"
                    }
                }
            },
            "type": "object",
            "required": [
                "filters",
                "name"
            ]
        },
        "datadog:index/LogsCustomPipelineProcessorPipelineFilter:LogsCustomPipelineProcessorPipelineFilter": {
            "properties": {
                "query": {
                    "type": "string",
                    "description": "Filter criteria of the category.\n"
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/LogsCustomPipelineProcessorPipelineProcessor:LogsCustomPipelineProcessorPipelineProcessor": {
            "properties": {
                "arithmeticProcessor": {
                    "$ref": "#/types/datadog:index/LogsCustomPipelineProcessorPipelineProcessorArithmeticProcessor:LogsCustomPipelineProcessorPipelineProcessorArithmeticProcessor",
                    "description": "Arithmetic Processor. More information can be found in the [official docs](https://docs.datadoghq.com/logs/processing/processors/?tab=ui#arithmetic-processor)\n"
                },
                "attributeRemapper": {
                    "$ref": "#/types/datadog:index/LogsCustomPipelineProcessorPipelineProcessorAttributeRemapper:LogsCustomPipelineProcessorPipelineProcessorAttributeRemapper",
                    "description": "Attribute Remapper Processor. More information can be found in the [official docs](https://docs.datadoghq.com/logs/processing/processors/?tab=ui#remapper)\n"
                },
                "categoryProcessor": {
                    "$ref": "#/types/datadog:index/LogsCustomPipelineProcessorPipelineProcessorCategoryProcessor:LogsCustomPipelineProcessorPipelineProcessorCategoryProcessor",
                    "description": "Category Processor. More information can be found in the [official docs](https://docs.datadoghq.com/logs/processing/processors/?tab=ui#category-processor)\n"
                },
                "dateRemapper": {
                    "$ref": "#/types/datadog:index/LogsCustomPipelineProcessorPipelineProcessorDateRemapper:LogsCustomPipelineProcessorPipelineProcessorDateRemapper",
                    "description": "Date Remapper Processor. More information can be found in the [official docs](https://docs.datadoghq.com/logs/processing/processors/?tab=ui#log-date-remapper)\n"
                },
                "geoIpParser": {
                    "$ref": "#/types/datadog:index/LogsCustomPipelineProcessorPipelineProcessorGeoIpParser:LogsCustomPipelineProcessorPipelineProcessorGeoIpParser",
                    "description": "Date GeoIP Processor. More information can be found in the [official docs](https://docs.datadoghq.com/logs/processing/processors/?tab=ui#geoip-parser)\n"
                },
                "grokParser": {
                    "$ref": "#/types/datadog:index/LogsCustomPipelineProcessorPipelineProcessorGrokParser:LogsCustomPipelineProcessorPipelineProcessorGrokParser",
                    "description": "Grok Processor. More information can be found in the [official docs](https://docs.datadoghq.com/logs/processing/processors/?tab=ui#grok-parser)\n"
                },
                "lookupProcessor": {
                    "$ref": "#/types/datadog:index/LogsCustomPipelineProcessorPipelineProcessorLookupProcessor:LogsCustomPipelineProcessorPipelineProcessorLookupProcessor",
                    "description": "Lookup Processor. More information can be found in the [official docs](https://docs.datadoghq.com/logs/processing/processors/?tab=ui#lookup-processor)\n"
                },
                "messageRemapper": {
                    "$ref": "#/types/datadog:index/LogsCustomPipelineProcessorPipelineProcessorMessageRemapper:LogsCustomPipelineProcessorPipelineProcessorMessageRemapper",
                    "description": "Message Remapper Processor. More information can be found in the [official docs](https://docs.datadoghq.com/logs/processing/processors/?tab=ui#log-message-remapper)\n"
                },
                "referenceTableLookupProcessor": {
                    "$ref": "#/types/datadog:index/LogsCustomPipelineProcessorPipelineProcessorReferenceTableLookupProcessor:LogsCustomPipelineProcessorPipelineProcessorReferenceTableLookupProcessor",
                    "description": "Reference Table Lookup Processor. Reference Tables are in public beta. More information can be found in the [official docs](https://docs.datadoghq.com/logs/processing/processors/?tab=ui#lookup-processor)\n"
                },
                "serviceRemapper": {
                    "$ref": "#/types/datadog:index/LogsCustomPipelineProcessorPipelineProcessorServiceRemapper:LogsCustomPipelineProcessorPipelineProcessorServiceRemapper",
                    "description": "Service Remapper Processor. More information can be found in the [official docs](https://docs.datadoghq.com/logs/processing/processors/?tab=ui#service-remapper)\n"
                },
                "statusRemapper": {
                    "$ref": "#/types/datadog:index/LogsCustomPipelineProcessorPipelineProcessorStatusRemapper:LogsCustomPipelineProcessorPipelineProcessorStatusRemapper",
                    "description": "Status Remapper Processor. More information can be found in the [official docs](https://docs.datadoghq.com/logs/processing/processors/?tab=ui#log-status-remapper)\n"
                },
                "stringBuilderProcessor": {
                    "$ref": "#/types/datadog:index/LogsCustomPipelineProcessorPipelineProcessorStringBuilderProcessor:LogsCustomPipelineProcessorPipelineProcessorStringBuilderProcessor",
                    "description": "String Builder Processor. More information can be found in the [official docs](https://docs.datadoghq.com/logs/processing/processors/?tab=ui#string-builder-processor)\n"
                },
                "traceIdRemapper": {
                    "$ref": "#/types/datadog:index/LogsCustomPipelineProcessorPipelineProcessorTraceIdRemapper:LogsCustomPipelineProcessorPipelineProcessorTraceIdRemapper",
                    "description": "Trace ID Remapper Processor. More information can be found in the [official docs](https://docs.datadoghq.com/logs/processing/processors/?tab=ui#trace-remapper)\n"
                },
                "urlParser": {
                    "$ref": "#/types/datadog:index/LogsCustomPipelineProcessorPipelineProcessorUrlParser:LogsCustomPipelineProcessorPipelineProcessorUrlParser",
                    "description": "URL Parser Processor. More information can be found in the [official docs](https://docs.datadoghq.com/logs/processing/processors/?tab=ui#url-parser)\n"
                },
                "userAgentParser": {
                    "$ref": "#/types/datadog:index/LogsCustomPipelineProcessorPipelineProcessorUserAgentParser:LogsCustomPipelineProcessorPipelineProcessorUserAgentParser",
                    "description": "User-Agent Parser Processor. More information can be found in the [official docs](https://docs.datadoghq.com/logs/processing/processors/?tab=ui#user-agent-parser)\n"
                }
            },
            "type": "object"
        },
        "datadog:index/LogsCustomPipelineProcessorPipelineProcessorArithmeticProcessor:LogsCustomPipelineProcessorPipelineProcessorArithmeticProcessor": {
            "properties": {
                "expression": {
                    "type": "string"
                },
                "isEnabled": {
                    "type": "boolean"
                },
                "isReplaceMissing": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "target": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "expression",
                "target"
            ]
        },
        "datadog:index/LogsCustomPipelineProcessorPipelineProcessorAttributeRemapper:LogsCustomPipelineProcessorPipelineProcessorAttributeRemapper": {
            "properties": {
                "isEnabled": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "overrideOnConflict": {
                    "type": "boolean"
                },
                "preserveSource": {
                    "type": "boolean"
                },
                "sourceType": {
                    "type": "string"
                },
                "sources": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "target": {
                    "type": "string"
                },
                "targetFormat": {
                    "type": "string"
                },
                "targetType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "sourceType",
                "sources",
                "target",
                "targetType"
            ]
        },
        "datadog:index/LogsCustomPipelineProcessorPipelineProcessorCategoryProcessor:LogsCustomPipelineProcessorPipelineProcessorCategoryProcessor": {
            "properties": {
                "categories": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/LogsCustomPipelineProcessorPipelineProcessorCategoryProcessorCategory:LogsCustomPipelineProcessorPipelineProcessorCategoryProcessorCategory"
                    }
                },
                "isEnabled": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "target": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "categories",
                "target"
            ]
        },
        "datadog:index/LogsCustomPipelineProcessorPipelineProcessorCategoryProcessorCategory:LogsCustomPipelineProcessorPipelineProcessorCategoryProcessorCategory": {
            "properties": {
                "filter": {
                    "$ref": "#/types/datadog:index/LogsCustomPipelineProcessorPipelineProcessorCategoryProcessorCategoryFilter:LogsCustomPipelineProcessorPipelineProcessorCategoryProcessorCategoryFilter"
                },
                "name": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "filter",
                "name"
            ]
        },
        "datadog:index/LogsCustomPipelineProcessorPipelineProcessorCategoryProcessorCategoryFilter:LogsCustomPipelineProcessorPipelineProcessorCategoryProcessorCategoryFilter": {
            "properties": {
                "query": {
                    "type": "string",
                    "description": "Filter criteria of the category.\n"
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/LogsCustomPipelineProcessorPipelineProcessorDateRemapper:LogsCustomPipelineProcessorPipelineProcessorDateRemapper": {
            "properties": {
                "isEnabled": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "sources": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "type": "object",
            "required": [
                "sources"
            ]
        },
        "datadog:index/LogsCustomPipelineProcessorPipelineProcessorGeoIpParser:LogsCustomPipelineProcessorPipelineProcessorGeoIpParser": {
            "properties": {
                "isEnabled": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "sources": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "target": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "sources",
                "target"
            ]
        },
        "datadog:index/LogsCustomPipelineProcessorPipelineProcessorGrokParser:LogsCustomPipelineProcessorPipelineProcessorGrokParser": {
            "properties": {
                "grok": {
                    "$ref": "#/types/datadog:index/LogsCustomPipelineProcessorPipelineProcessorGrokParserGrok:LogsCustomPipelineProcessorPipelineProcessorGrokParserGrok"
                },
                "isEnabled": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "samples": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "source": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "grok",
                "source"
            ]
        },
        "datadog:index/LogsCustomPipelineProcessorPipelineProcessorGrokParserGrok:LogsCustomPipelineProcessorPipelineProcessorGrokParserGrok": {
            "properties": {
                "matchRules": {
                    "type": "string"
                },
                "supportRules": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "matchRules",
                "supportRules"
            ]
        },
        "datadog:index/LogsCustomPipelineProcessorPipelineProcessorLookupProcessor:LogsCustomPipelineProcessorPipelineProcessorLookupProcessor": {
            "properties": {
                "defaultLookup": {
                    "type": "string"
                },
                "isEnabled": {
                    "type": "boolean"
                },
                "lookupTables": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "name": {
                    "type": "string"
                },
                "source": {
                    "type": "string"
                },
                "target": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "lookupTables",
                "source",
                "target"
            ]
        },
        "datadog:index/LogsCustomPipelineProcessorPipelineProcessorMessageRemapper:LogsCustomPipelineProcessorPipelineProcessorMessageRemapper": {
            "properties": {
                "isEnabled": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "sources": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "type": "object",
            "required": [
                "sources"
            ]
        },
        "datadog:index/LogsCustomPipelineProcessorPipelineProcessorReferenceTableLookupProcessor:LogsCustomPipelineProcessorPipelineProcessorReferenceTableLookupProcessor": {
            "properties": {
                "isEnabled": {
                    "type": "boolean"
                },
                "lookupEnrichmentTable": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "source": {
                    "type": "string"
                },
                "target": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "lookupEnrichmentTable",
                "source",
                "target"
            ]
        },
        "datadog:index/LogsCustomPipelineProcessorPipelineProcessorServiceRemapper:LogsCustomPipelineProcessorPipelineProcessorServiceRemapper": {
            "properties": {
                "isEnabled": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "sources": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "type": "object",
            "required": [
                "sources"
            ]
        },
        "datadog:index/LogsCustomPipelineProcessorPipelineProcessorStatusRemapper:LogsCustomPipelineProcessorPipelineProcessorStatusRemapper": {
            "properties": {
                "isEnabled": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "sources": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "type": "object",
            "required": [
                "sources"
            ]
        },
        "datadog:index/LogsCustomPipelineProcessorPipelineProcessorStringBuilderProcessor:LogsCustomPipelineProcessorPipelineProcessorStringBuilderProcessor": {
            "properties": {
                "isEnabled": {
                    "type": "boolean"
                },
                "isReplaceMissing": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "target": {
                    "type": "string"
                },
                "template": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "target",
                "template"
            ]
        },
        "datadog:index/LogsCustomPipelineProcessorPipelineProcessorTraceIdRemapper:LogsCustomPipelineProcessorPipelineProcessorTraceIdRemapper": {
            "properties": {
                "isEnabled": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "sources": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "type": "object",
            "required": [
                "sources"
            ]
        },
        "datadog:index/LogsCustomPipelineProcessorPipelineProcessorUrlParser:LogsCustomPipelineProcessorPipelineProcessorUrlParser": {
            "properties": {
                "isEnabled": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "normalizeEndingSlashes": {
                    "type": "boolean"
                },
                "sources": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "target": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "sources",
                "target"
            ]
        },
        "datadog:index/LogsCustomPipelineProcessorPipelineProcessorUserAgentParser:LogsCustomPipelineProcessorPipelineProcessorUserAgentParser": {
            "properties": {
                "isEnabled": {
                    "type": "boolean"
                },
                "isEncoded": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "sources": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "target": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "sources",
                "target"
            ]
        },
        "datadog:index/LogsCustomPipelineProcessorReferenceTableLookupProcessor:LogsCustomPipelineProcessorReferenceTableLookupProcessor": {
            "properties": {
                "isEnabled": {
                    "type": "boolean"
                },
                "lookupEnrichmentTable": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "source": {
                    "type": "string"
                },
                "target": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "lookupEnrichmentTable",
                "source",
                "target"
            ]
        },
        "datadog:index/LogsCustomPipelineProcessorServiceRemapper:LogsCustomPipelineProcessorServiceRemapper": {
            "properties": {
                "isEnabled": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "sources": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "type": "object",
            "required": [
                "sources"
            ]
        },
        "datadog:index/LogsCustomPipelineProcessorStatusRemapper:LogsCustomPipelineProcessorStatusRemapper": {
            "properties": {
                "isEnabled": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "sources": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "type": "object",
            "required": [
                "sources"
            ]
        },
        "datadog:index/LogsCustomPipelineProcessorStringBuilderProcessor:LogsCustomPipelineProcessorStringBuilderProcessor": {
            "properties": {
                "isEnabled": {
                    "type": "boolean"
                },
                "isReplaceMissing": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "target": {
                    "type": "string"
                },
                "template": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "target",
                "template"
            ]
        },
        "datadog:index/LogsCustomPipelineProcessorTraceIdRemapper:LogsCustomPipelineProcessorTraceIdRemapper": {
            "properties": {
                "isEnabled": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "sources": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "type": "object",
            "required": [
                "sources"
            ]
        },
        "datadog:index/LogsCustomPipelineProcessorUrlParser:LogsCustomPipelineProcessorUrlParser": {
            "properties": {
                "isEnabled": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "normalizeEndingSlashes": {
                    "type": "boolean"
                },
                "sources": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "target": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "sources",
                "target"
            ]
        },
        "datadog:index/LogsCustomPipelineProcessorUserAgentParser:LogsCustomPipelineProcessorUserAgentParser": {
            "properties": {
                "isEnabled": {
                    "type": "boolean"
                },
                "isEncoded": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "sources": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "target": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "sources",
                "target"
            ]
        },
        "datadog:index/LogsIndexExclusionFilter:LogsIndexExclusionFilter": {
            "properties": {
                "filters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/LogsIndexExclusionFilterFilter:LogsIndexExclusionFilterFilter"
                    },
                    "description": "Logs filter\n"
                },
                "isEnabled": {
                    "type": "boolean",
                    "description": "A boolean stating if the exclusion is active or not.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the exclusion filter.\n"
                }
            },
            "type": "object"
        },
        "datadog:index/LogsIndexExclusionFilterFilter:LogsIndexExclusionFilterFilter": {
            "properties": {
                "query": {
                    "type": "string",
                    "description": "Logs filter criteria. Only logs matching this filter criteria are considered for this index.\n"
                },
                "sampleRate": {
                    "type": "number"
                }
            },
            "type": "object"
        },
        "datadog:index/LogsIndexFilter:LogsIndexFilter": {
            "properties": {
                "query": {
                    "type": "string",
                    "description": "Logs filter criteria. Only logs matching this filter criteria are considered for this index.\n"
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/LogsMetricCompute:LogsMetricCompute": {
            "properties": {
                "aggregationType": {
                    "type": "string",
                    "description": "The type of aggregation to use. This field can't be updated after creation. Valid values are `count`, `distribution`.\n",
                    "willReplaceOnChanges": true
                },
                "includePercentiles": {
                    "type": "boolean",
                    "description": "Toggle to include/exclude percentiles for a distribution metric. Defaults to false. Can only be applied to metrics that have an `aggregation_type` of distribution.\n"
                },
                "path": {
                    "type": "string",
                    "description": "The path to the value the log-based metric will aggregate on (only used if the aggregation type is a \"distribution\"). This field can't be updated after creation.\n",
                    "willReplaceOnChanges": true
                }
            },
            "type": "object",
            "required": [
                "aggregationType"
            ]
        },
        "datadog:index/LogsMetricFilter:LogsMetricFilter": {
            "properties": {
                "query": {
                    "type": "string",
                    "description": "The search query - following the log search syntax.\n"
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/LogsMetricGroupBy:LogsMetricGroupBy": {
            "properties": {
                "path": {
                    "type": "string",
                    "description": "The path to the value the log-based metric will be aggregated over.\n"
                },
                "tagName": {
                    "type": "string",
                    "description": "Name of the tag that gets created.\n"
                }
            },
            "type": "object",
            "required": [
                "path",
                "tagName"
            ]
        },
        "datadog:index/MetricTagConfigurationAggregation:MetricTagConfigurationAggregation": {
            "properties": {
                "space": {
                    "type": "string",
                    "description": "A space aggregation for use in query. Valid values are `avg`, `max`, `min`, `sum`.\n"
                },
                "time": {
                    "type": "string",
                    "description": "A time aggregation for use in query. Valid values are `avg`, `count`, `max`, `min`, `sum`.\n"
                }
            },
            "type": "object",
            "required": [
                "space",
                "time"
            ]
        },
        "datadog:index/MonitorConfigPolicyTagPolicy:MonitorConfigPolicyTagPolicy": {
            "properties": {
                "tagKey": {
                    "type": "string",
                    "description": "The key of the tag\n"
                },
                "tagKeyRequired": {
                    "type": "boolean",
                    "description": "If a tag key is required for monitor creation\n"
                },
                "validTagValues": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Valid values for the tag\n"
                }
            },
            "type": "object",
            "required": [
                "tagKey",
                "tagKeyRequired",
                "validTagValues"
            ]
        },
        "datadog:index/MonitorMonitorThresholdWindows:MonitorMonitorThresholdWindows": {
            "properties": {
                "recoveryWindow": {
                    "type": "string",
                    "description": "Describes how long an anomalous metric must be normal before the alert recovers.\n"
                },
                "triggerWindow": {
                    "type": "string",
                    "description": "Describes how long a metric must be anomalous before an alert triggers.\n"
                }
            },
            "type": "object"
        },
        "datadog:index/MonitorMonitorThresholds:MonitorMonitorThresholds": {
            "properties": {
                "critical": {
                    "type": "string",
                    "description": "The monitor `CRITICAL` threshold. Must be a number.\n"
                },
                "criticalRecovery": {
                    "type": "string",
                    "description": "The monitor `CRITICAL` recovery threshold. Must be a number.\n"
                },
                "ok": {
                    "type": "string",
                    "description": "The monitor `OK` threshold. Only supported in monitor type `service check`. Must be a number.\n"
                },
                "unknown": {
                    "type": "string",
                    "description": "The monitor `UNKNOWN` threshold. Only supported in monitor type `service check`. Must be a number.\n"
                },
                "warning": {
                    "type": "string",
                    "description": "The monitor `WARNING` threshold. Must be a number.\n"
                },
                "warningRecovery": {
                    "type": "string",
                    "description": "The monitor `WARNING` recovery threshold. Must be a number.\n"
                }
            },
            "type": "object"
        },
        "datadog:index/MonitorSchedulingOption:MonitorSchedulingOption": {
            "properties": {
                "evaluationWindows": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/MonitorSchedulingOptionEvaluationWindow:MonitorSchedulingOptionEvaluationWindow"
                    },
                    "description": "Configuration options for the evaluation window. If `hour_starts` is set, no other fields may be set. Otherwise, `day_starts` and `month_starts` must be set together.\n"
                }
            },
            "type": "object",
            "required": [
                "evaluationWindows"
            ]
        },
        "datadog:index/MonitorSchedulingOptionEvaluationWindow:MonitorSchedulingOptionEvaluationWindow": {
            "properties": {
                "dayStarts": {
                    "type": "string"
                },
                "hourStarts": {
                    "type": "integer"
                },
                "monthStarts": {
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "datadog:index/MonitorVariables:MonitorVariables": {
            "properties": {
                "eventQueries": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/MonitorVariablesEventQuery:MonitorVariablesEventQuery"
                    },
                    "description": "A timeseries formula and functions events query.\n"
                }
            },
            "type": "object"
        },
        "datadog:index/MonitorVariablesEventQuery:MonitorVariablesEventQuery": {
            "properties": {
                "computes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/MonitorVariablesEventQueryCompute:MonitorVariablesEventQueryCompute"
                    }
                },
                "dataSource": {
                    "type": "string"
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/MonitorVariablesEventQueryGroupBy:MonitorVariablesEventQueryGroupBy"
                    }
                },
                "indexes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "name": {
                    "type": "string"
                },
                "search": {
                    "$ref": "#/types/datadog:index/MonitorVariablesEventQuerySearch:MonitorVariablesEventQuerySearch"
                }
            },
            "type": "object",
            "required": [
                "computes",
                "dataSource",
                "name",
                "search"
            ]
        },
        "datadog:index/MonitorVariablesEventQueryCompute:MonitorVariablesEventQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "interval": {
                    "type": "integer"
                },
                "metric": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/MonitorVariablesEventQueryGroupBy:MonitorVariablesEventQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string"
                },
                "limit": {
                    "type": "integer"
                },
                "sort": {
                    "$ref": "#/types/datadog:index/MonitorVariablesEventQueryGroupBySort:MonitorVariablesEventQueryGroupBySort"
                }
            },
            "type": "object",
            "required": [
                "facet"
            ]
        },
        "datadog:index/MonitorVariablesEventQueryGroupBySort:MonitorVariablesEventQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "metric": {
                    "type": "string"
                },
                "order": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/MonitorVariablesEventQuerySearch:MonitorVariablesEventQuerySearch": {
            "properties": {
                "query": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/OrganizationSettingsSettings:OrganizationSettingsSettings": {
            "properties": {
                "privateWidgetShare": {
                    "type": "boolean",
                    "description": "Whether or not the organization users can share widgets outside of Datadog.\n"
                },
                "saml": {
                    "$ref": "#/types/datadog:index/OrganizationSettingsSettingsSaml:OrganizationSettingsSettingsSaml",
                    "description": "SAML properties\n"
                },
                "samlAutocreateAccessRole": {
                    "type": "string",
                    "description": "The access role of the user. Options are `st` (standard user), `adm` (admin user), or `ro` (read-only user). Allowed enum values: `st`, `adm` , `ro`, `ERROR`\n"
                },
                "samlAutocreateUsersDomains": {
                    "$ref": "#/types/datadog:index/OrganizationSettingsSettingsSamlAutocreateUsersDomains:OrganizationSettingsSettingsSamlAutocreateUsersDomains",
                    "description": "List of domains where the SAML automated user creation is enabled.\n"
                },
                "samlCanBeEnabled": {
                    "type": "boolean",
                    "description": "Whether or not SAML can be enabled for this organization.\n"
                },
                "samlIdpEndpoint": {
                    "type": "string",
                    "description": "Identity provider endpoint for SAML authentication.\n"
                },
                "samlIdpInitiatedLogin": {
                    "$ref": "#/types/datadog:index/OrganizationSettingsSettingsSamlIdpInitiatedLogin:OrganizationSettingsSettingsSamlIdpInitiatedLogin",
                    "description": "Whether or not a SAML identity provider metadata file was provided to the Datadog organization.\n"
                },
                "samlIdpMetadataUploaded": {
                    "type": "boolean",
                    "description": "Whether or not a SAML identity provider metadata file was provided to the Datadog organization.\n"
                },
                "samlLoginUrl": {
                    "type": "string",
                    "description": "URL for SAML logging.\n"
                },
                "samlStrictMode": {
                    "$ref": "#/types/datadog:index/OrganizationSettingsSettingsSamlStrictMode:OrganizationSettingsSettingsSamlStrictMode",
                    "description": "Whether or not the SAML strict mode is enabled. If true, all users must log in with SAML.\n"
                }
            },
            "type": "object",
            "required": [
                "saml",
                "samlAutocreateUsersDomains",
                "samlIdpInitiatedLogin",
                "samlStrictMode"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "saml",
                        "samlAutocreateUsersDomains",
                        "samlCanBeEnabled",
                        "samlIdpEndpoint",
                        "samlIdpInitiatedLogin",
                        "samlIdpMetadataUploaded",
                        "samlLoginUrl",
                        "samlStrictMode"
                    ]
                }
            }
        },
        "datadog:index/OrganizationSettingsSettingsSaml:OrganizationSettingsSettingsSaml": {
            "properties": {
                "enabled": {
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "datadog:index/OrganizationSettingsSettingsSamlAutocreateUsersDomains:OrganizationSettingsSettingsSamlAutocreateUsersDomains": {
            "properties": {
                "domains": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "enabled": {
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "datadog:index/OrganizationSettingsSettingsSamlIdpInitiatedLogin:OrganizationSettingsSettingsSamlIdpInitiatedLogin": {
            "properties": {
                "enabled": {
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "datadog:index/OrganizationSettingsSettingsSamlStrictMode:OrganizationSettingsSettingsSamlStrictMode": {
            "properties": {
                "enabled": {
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "datadog:index/RolePermission:RolePermission": {
            "properties": {
                "id": {
                    "type": "string",
                    "description": "ID of the permission to assign.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the permission.\n"
                }
            },
            "type": "object",
            "required": [
                "id"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "id",
                        "name"
                    ]
                }
            }
        },
        "datadog:index/SecurityMonitoringDefaultRuleCase:SecurityMonitoringDefaultRuleCase": {
            "properties": {
                "notifications": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Notification targets for each rule case.\n"
                },
                "status": {
                    "type": "string",
                    "description": "Status of the rule case to match. Valid values are `info`, `low`, `medium`, `high`, `critical`.\n"
                }
            },
            "type": "object",
            "required": [
                "notifications",
                "status"
            ]
        },
        "datadog:index/SecurityMonitoringDefaultRuleFilter:SecurityMonitoringDefaultRuleFilter": {
            "properties": {
                "action": {
                    "type": "string",
                    "description": "The type of filtering action. Allowed enum values: require, suppress Valid values are `require`, `suppress`.\n"
                },
                "query": {
                    "type": "string",
                    "description": "Query for selecting logs to apply the filtering action.\n"
                }
            },
            "type": "object",
            "required": [
                "action",
                "query"
            ]
        },
        "datadog:index/SecurityMonitoringDefaultRuleOptions:SecurityMonitoringDefaultRuleOptions": {
            "properties": {
                "decreaseCriticalityBasedOnEnv": {
                    "type": "boolean",
                    "description": "If true, signals in non-production environments have a lower severity than what is defined by the rule case, which can reduce noise. The decrement is applied when the environment tag of the signal starts with `staging`, `test`, or `dev`. Only available when the rule type is `log_detection`.\n"
                }
            },
            "type": "object"
        },
        "datadog:index/SecurityMonitoringFilterExclusionFilter:SecurityMonitoringFilterExclusionFilter": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Exclusion filter name.\n"
                },
                "query": {
                    "type": "string",
                    "description": "Exclusion filter query. Logs that match this query are excluded from the security filter.\n"
                }
            },
            "type": "object",
            "required": [
                "name",
                "query"
            ]
        },
        "datadog:index/SecurityMonitoringRuleCase:SecurityMonitoringRuleCase": {
            "properties": {
                "condition": {
                    "type": "string",
                    "description": "A rule case contains logical operations (`\u003e`,`\u003e=`, `\u0026\u0026`, `||`) to determine if a signal should be generated based on the event counts in the previously defined queries.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the case.\n"
                },
                "notifications": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Notification targets for each rule case.\n"
                },
                "status": {
                    "type": "string",
                    "description": "Severity of the Security Signal. Valid values are `info`, `low`, `medium`, `high`, `critical`.\n"
                }
            },
            "type": "object",
            "required": [
                "status"
            ]
        },
        "datadog:index/SecurityMonitoringRuleFilter:SecurityMonitoringRuleFilter": {
            "properties": {
                "action": {
                    "type": "string",
                    "description": "The type of filtering action. Valid values are `require`, `suppress`.\n"
                },
                "query": {
                    "type": "string",
                    "description": "Query for selecting logs to apply the filtering action.\n"
                }
            },
            "type": "object",
            "required": [
                "action",
                "query"
            ]
        },
        "datadog:index/SecurityMonitoringRuleOptions:SecurityMonitoringRuleOptions": {
            "properties": {
                "decreaseCriticalityBasedOnEnv": {
                    "type": "boolean",
                    "description": "If true, signals in non-production environments have a lower severity than what is defined by the rule case, which can reduce noise. The decrement is applied when the environment tag of the signal starts with `staging`, `test`, or `dev`. Only available when the rule type is `log_detection`.\n"
                },
                "detectionMethod": {
                    "type": "string",
                    "description": "The detection method. Valid values are `threshold`, `new_value`, `anomaly_detection`, `impossible_travel`, `hardcoded`, `third_party`.\n"
                },
                "evaluationWindow": {
                    "type": "integer",
                    "description": "A time window is specified to match when at least one of the cases matches true. This is a sliding window and evaluates in real time. Valid values are `0`, `60`, `300`, `600`, `900`, `1800`, `3600`, `7200`.\n"
                },
                "impossibleTravelOptions": {
                    "$ref": "#/types/datadog:index/SecurityMonitoringRuleOptionsImpossibleTravelOptions:SecurityMonitoringRuleOptionsImpossibleTravelOptions",
                    "description": "Options for rules using the impossible travel detection method.\n"
                },
                "keepAlive": {
                    "type": "integer",
                    "description": "Once a signal is generated, the signal will remain “open” if a case is matched at least once within this keep alive window (in seconds). Valid values are `0`, `60`, `300`, `600`, `900`, `1800`, `3600`, `7200`, `10800`, `21600`.\n"
                },
                "maxSignalDuration": {
                    "type": "integer",
                    "description": "A signal will “close” regardless of the query being matched once the time exceeds the maximum duration (in seconds). This time is calculated from the first seen timestamp. Valid values are `0`, `60`, `300`, `600`, `900`, `1800`, `3600`, `7200`, `10800`, `21600`, `43200`, `86400`.\n"
                },
                "newValueOptions": {
                    "$ref": "#/types/datadog:index/SecurityMonitoringRuleOptionsNewValueOptions:SecurityMonitoringRuleOptionsNewValueOptions",
                    "description": "New value rules specific options.\n"
                }
            },
            "type": "object",
            "required": [
                "keepAlive",
                "maxSignalDuration"
            ]
        },
        "datadog:index/SecurityMonitoringRuleOptionsImpossibleTravelOptions:SecurityMonitoringRuleOptionsImpossibleTravelOptions": {
            "properties": {
                "baselineUserLocations": {
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "datadog:index/SecurityMonitoringRuleOptionsNewValueOptions:SecurityMonitoringRuleOptionsNewValueOptions": {
            "properties": {
                "forgetAfter": {
                    "type": "integer"
                },
                "learningDuration": {
                    "type": "integer"
                },
                "learningMethod": {
                    "type": "string"
                },
                "learningThreshold": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "forgetAfter"
            ]
        },
        "datadog:index/SecurityMonitoringRuleQuery:SecurityMonitoringRuleQuery": {
            "properties": {
                "agentRules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/SecurityMonitoringRuleQueryAgentRule:SecurityMonitoringRuleQueryAgentRule"
                    },
                    "description": "**Deprecated**. It won't be applied anymore. **Deprecated.** `agent_rule` has been deprecated in favor of new Agent Rule resource.\n",
                    "deprecationMessage": "`agent_rule` has been deprecated in favor of new Agent Rule resource."
                },
                "aggregation": {
                    "type": "string",
                    "description": "The aggregation type. For Signal Correlation rules, it must be event_count. Valid values are `count`, `cardinality`, `sum`, `max`, `new_value`, `geo_data`, `event_count`, `none`.\n"
                },
                "distinctFields": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Field for which the cardinality is measured. Sent as an array.\n"
                },
                "groupByFields": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Fields to group by.\n"
                },
                "metric": {
                    "type": "string",
                    "description": "The target field to aggregate over when using the `sum`, `max`, or `geo_data` aggregations. **Deprecated.** Configure `metrics` instead. This attribute will be removed in the next major version of the provider.\n",
                    "deprecationMessage": "Configure `metrics` instead. This attribute will be removed in the next major version of the provider."
                },
                "metrics": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Group of target fields to aggregate over when using the `sum`, `max`, `geo_data`, or `new_value` aggregations. The `sum`, `max`, and `geo_data` aggregations only accept one value in this list, whereas the `new_value` aggregation accepts up to five values.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the query. Not compatible with `new_value` aggregations.\n"
                },
                "query": {
                    "type": "string",
                    "description": "Query to run on logs.\n"
                }
            },
            "type": "object",
            "required": [
                "query"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "metrics",
                        "query"
                    ]
                }
            }
        },
        "datadog:index/SecurityMonitoringRuleQueryAgentRule:SecurityMonitoringRuleQueryAgentRule": {
            "properties": {
                "agentRuleId": {
                    "type": "string"
                },
                "expression": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "agentRuleId",
                "expression"
            ]
        },
        "datadog:index/SecurityMonitoringRuleSignalQuery:SecurityMonitoringRuleSignalQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "The aggregation type. For Signal Correlation rules, it must be event_count. Valid values are `count`, `cardinality`, `sum`, `max`, `new_value`, `geo_data`, `event_count`, `none`.\n"
                },
                "correlatedByFields": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Fields to correlate by.\n"
                },
                "correlatedQueryIndex": {
                    "type": "string",
                    "description": "Index of the rule query used to retrieve the correlated field. An empty string applies correlation on the non-projected per query attributes of the rule.\n"
                },
                "defaultRuleId": {
                    "type": "string",
                    "description": "Default Rule ID of the signal to correlate. This value is READ-ONLY.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the query. Not compatible with `new_value` aggregations.\n"
                },
                "ruleId": {
                    "type": "string",
                    "description": "Rule ID of the signal to correlate.\n"
                }
            },
            "type": "object",
            "required": [
                "ruleId"
            ]
        },
        "datadog:index/SensitiveDataScannerGroupFilter:SensitiveDataScannerGroupFilter": {
            "properties": {
                "query": {
                    "type": "string",
                    "description": "Query to filter the events.\n"
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/SensitiveDataScannerRuleTextReplacement:SensitiveDataScannerRuleTextReplacement": {
            "properties": {
                "numberOfChars": {
                    "type": "integer",
                    "description": "Required if type == 'partial*replacement*from*beginning' or 'partial*replacement*from*end'. It must be \u003e 0.\n"
                },
                "replacementString": {
                    "type": "string",
                    "description": "Required if type == 'replacement_string'.\n"
                },
                "type": {
                    "type": "string",
                    "description": "Type of the replacement text. None means no replacement. hash means the data will be stubbed. replacement*string means that one can chose a text to replace the data. partial*replacement*from*beginning allows a user to partially replace the data from the beginning, and partial*replacement*from_end on the other hand, allows to replace data from the end. Valid values are `none`, `hash`, `replacement_string`, `partial_replacement_from_beginning`, `partial_replacement_from_end`.\n"
                }
            },
            "type": "object",
            "required": [
                "type"
            ]
        },
        "datadog:index/ServiceLevelObjectiveQuery:ServiceLevelObjectiveQuery": {
            "properties": {
                "denominator": {
                    "type": "string",
                    "description": "The sum of the `total` events.\n"
                },
                "numerator": {
                    "type": "string",
                    "description": "The sum of all the `good` events.\n"
                }
            },
            "type": "object",
            "required": [
                "denominator",
                "numerator"
            ]
        },
        "datadog:index/ServiceLevelObjectiveThreshold:ServiceLevelObjectiveThreshold": {
            "properties": {
                "target": {
                    "type": "number",
                    "description": "The objective's target in `(0,100)`.\n"
                },
                "targetDisplay": {
                    "type": "string",
                    "description": "A string representation of the target that indicates its precision. It uses trailing zeros to show significant decimal places (e.g. `98.00`).\n"
                },
                "timeframe": {
                    "type": "string",
                    "description": "The time frame for the objective. The mapping from these types to the types found in the Datadog Web UI can be found in the Datadog API documentation page. Valid values are `7d`, `30d`, `90d`, `custom`.\n"
                },
                "warning": {
                    "type": "number",
                    "description": "The objective's warning value in `(0,100)`. This must be greater than the target value.\n"
                },
                "warningDisplay": {
                    "type": "string",
                    "description": "A string representation of the warning target (see the description of the target_display field for details).\n"
                }
            },
            "type": "object",
            "required": [
                "target",
                "timeframe"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "target",
                        "targetDisplay",
                        "timeframe",
                        "warningDisplay"
                    ]
                }
            }
        },
        "datadog:index/SpansMetricCompute:SpansMetricCompute": {
            "properties": {
                "aggregationType": {
                    "type": "string",
                    "description": "The type of aggregation to use. This field can't be updated after creation.\n"
                },
                "includePercentiles": {
                    "type": "boolean",
                    "description": "Toggle to include or exclude percentile aggregations for distribution metrics. Only present when the `aggregation_type` is `distribution`.\n"
                },
                "path": {
                    "type": "string",
                    "description": "The path to the value the span-based metric will aggregate on (only used if the aggregation type is a \"distribution\"). This field can't be updated after creation.\n"
                }
            },
            "type": "object",
            "required": [
                "aggregationType"
            ]
        },
        "datadog:index/SpansMetricFilter:SpansMetricFilter": {
            "properties": {
                "query": {
                    "type": "string",
                    "description": "The search query - following the span search syntax.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "query"
                    ]
                }
            }
        },
        "datadog:index/SpansMetricGroupBy:SpansMetricGroupBy": {
            "properties": {
                "path": {
                    "type": "string",
                    "description": "The path to the value the span-based metric will be aggregated over.\n"
                },
                "tagName": {
                    "type": "string",
                    "description": "Eventual name of the tag that gets created. By default, the path attribute is used as the tag name.\n"
                }
            },
            "type": "object",
            "required": [
                "path"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "path",
                        "tagName"
                    ]
                }
            }
        },
        "datadog:index/SyntheticsGlobalVariableOptions:SyntheticsGlobalVariableOptions": {
            "properties": {
                "totpParameters": {
                    "$ref": "#/types/datadog:index/SyntheticsGlobalVariableOptionsTotpParameters:SyntheticsGlobalVariableOptionsTotpParameters",
                    "description": "Parameters needed for MFA/TOTP.\n"
                }
            },
            "type": "object"
        },
        "datadog:index/SyntheticsGlobalVariableOptionsTotpParameters:SyntheticsGlobalVariableOptionsTotpParameters": {
            "properties": {
                "digits": {
                    "type": "integer"
                },
                "refreshInterval": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "digits",
                "refreshInterval"
            ]
        },
        "datadog:index/SyntheticsGlobalVariableParseTestOptions:SyntheticsGlobalVariableParseTestOptions": {
            "properties": {
                "field": {
                    "type": "string",
                    "description": "Required when type = `http_header`. Defines the header to use to extract the value\n"
                },
                "localVariableName": {
                    "type": "string",
                    "description": "When type is `local_variable`, name of the local variable to use to extract the value.\n"
                },
                "parser": {
                    "$ref": "#/types/datadog:index/SyntheticsGlobalVariableParseTestOptionsParser:SyntheticsGlobalVariableParseTestOptionsParser"
                },
                "type": {
                    "type": "string",
                    "description": "Defines the source to use to extract the value. Valid values are `http_body`, `http_header`, `local_variable`.\n"
                }
            },
            "type": "object",
            "required": [
                "type"
            ]
        },
        "datadog:index/SyntheticsGlobalVariableParseTestOptionsParser:SyntheticsGlobalVariableParseTestOptionsParser": {
            "properties": {
                "type": {
                    "type": "string"
                },
                "value": {
                    "type": "string",
                    "description": "The value of the global variable.\n"
                }
            },
            "type": "object",
            "required": [
                "type"
            ]
        },
        "datadog:index/SyntheticsPrivateLocationMetadata:SyntheticsPrivateLocationMetadata": {
            "properties": {
                "restrictedRoles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of role identifiers pulled from the Roles API to restrict read and write access.\n"
                }
            },
            "type": "object"
        },
        "datadog:index/SyntheticsTestApiStep:SyntheticsTestApiStep": {
            "properties": {
                "allowFailure": {
                    "type": "boolean",
                    "description": "Determines whether or not to continue with test if this step fails.\n"
                },
                "assertions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/SyntheticsTestApiStepAssertion:SyntheticsTestApiStepAssertion"
                    },
                    "description": "Assertions used for the test. Multiple `assertion` blocks are allowed with the structure below.\n"
                },
                "extractedValues": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/SyntheticsTestApiStepExtractedValue:SyntheticsTestApiStepExtractedValue"
                    },
                    "description": "Values to parse and save as variables from the response.\n"
                },
                "isCritical": {
                    "type": "boolean",
                    "description": "Determines whether or not to consider the entire test as failed if this step fails. Can be used only if `allow_failure` is `true`.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the step.\n"
                },
                "requestBasicauth": {
                    "$ref": "#/types/datadog:index/SyntheticsTestApiStepRequestBasicauth:SyntheticsTestApiStepRequestBasicauth",
                    "description": "The HTTP basic authentication credentials. Exactly one nested block is allowed with the structure below.\n"
                },
                "requestClientCertificate": {
                    "$ref": "#/types/datadog:index/SyntheticsTestApiStepRequestClientCertificate:SyntheticsTestApiStepRequestClientCertificate",
                    "description": "Client certificate to use when performing the test request. Exactly one nested block is allowed with the structure below.\n"
                },
                "requestDefinition": {
                    "$ref": "#/types/datadog:index/SyntheticsTestApiStepRequestDefinition:SyntheticsTestApiStepRequestDefinition",
                    "description": "The request for the api step.\n"
                },
                "requestHeaders": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "description": "Header name and value map.\n"
                },
                "requestProxy": {
                    "$ref": "#/types/datadog:index/SyntheticsTestApiStepRequestProxy:SyntheticsTestApiStepRequestProxy",
                    "description": "The proxy to perform the test.\n"
                },
                "requestQuery": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "description": "Query arguments name and value map.\n"
                },
                "retry": {
                    "$ref": "#/types/datadog:index/SyntheticsTestApiStepRetry:SyntheticsTestApiStepRetry"
                },
                "subtype": {
                    "type": "string",
                    "description": "The subtype of the Synthetic multistep API test step. Valid values are `http`.\n"
                }
            },
            "type": "object",
            "required": [
                "name"
            ]
        },
        "datadog:index/SyntheticsTestApiStepAssertion:SyntheticsTestApiStepAssertion": {
            "properties": {
                "operator": {
                    "type": "string",
                    "description": "Assertion operator. **Note** Only some combinations of `type` and `operator` are valid (please refer to [Datadog documentation](https://docs.datadoghq.com/api/latest/synthetics/#create-a-test)).\n"
                },
                "property": {
                    "type": "string",
                    "description": "If assertion type is `header`, this is the header name.\n"
                },
                "target": {
                    "type": "string",
                    "description": "Expected value. Depends on the assertion type, refer to [Datadog documentation](https://docs.datadoghq.com/api/latest/synthetics/#create-a-test) for details.\n"
                },
                "targetjsonpath": {
                    "$ref": "#/types/datadog:index/SyntheticsTestApiStepAssertionTargetjsonpath:SyntheticsTestApiStepAssertionTargetjsonpath",
                    "description": "Expected structure if `operator` is `validatesJSONPath`. Exactly one nested block is allowed with the structure below.\n"
                },
                "targetxpath": {
                    "$ref": "#/types/datadog:index/SyntheticsTestApiStepAssertionTargetxpath:SyntheticsTestApiStepAssertionTargetxpath",
                    "description": "Expected structure if `operator` is `validatesXPath`. Exactly one nested block is allowed with the structure below.\n"
                },
                "type": {
                    "type": "string",
                    "description": "Type of assertion. **Note** Only some combinations of `type` and `operator` are valid (please refer to [Datadog documentation](https://docs.datadoghq.com/api/latest/synthetics/#create-a-test)). Valid values are `body`, `header`, `statusCode`, `certificate`, `responseTime`, `property`, `recordEvery`, `recordSome`, `tlsVersion`, `minTlsVersion`, `latency`, `packetLossPercentage`, `packetsReceived`, `networkHop`, `receivedMessage`, `grpcHealthcheckStatus`, `grpcMetadata`, `grpcProto`, `connection`.\n"
                }
            },
            "type": "object",
            "required": [
                "operator",
                "type"
            ]
        },
        "datadog:index/SyntheticsTestApiStepAssertionTargetjsonpath:SyntheticsTestApiStepAssertionTargetjsonpath": {
            "properties": {
                "jsonpath": {
                    "type": "string"
                },
                "operator": {
                    "type": "string"
                },
                "targetvalue": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "jsonpath",
                "operator"
            ]
        },
        "datadog:index/SyntheticsTestApiStepAssertionTargetxpath:SyntheticsTestApiStepAssertionTargetxpath": {
            "properties": {
                "operator": {
                    "type": "string"
                },
                "targetvalue": {
                    "type": "string"
                },
                "xpath": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "operator",
                "xpath"
            ]
        },
        "datadog:index/SyntheticsTestApiStepExtractedValue:SyntheticsTestApiStepExtractedValue": {
            "properties": {
                "field": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "description": "Name of Datadog synthetics test.\n"
                },
                "parser": {
                    "$ref": "#/types/datadog:index/SyntheticsTestApiStepExtractedValueParser:SyntheticsTestApiStepExtractedValueParser"
                },
                "secure": {
                    "type": "boolean"
                },
                "type": {
                    "type": "string",
                    "description": "Synthetics test type. Valid values are `api`, `browser`.\n"
                }
            },
            "type": "object",
            "required": [
                "name",
                "parser",
                "type"
            ]
        },
        "datadog:index/SyntheticsTestApiStepExtractedValueParser:SyntheticsTestApiStepExtractedValueParser": {
            "properties": {
                "type": {
                    "type": "string",
                    "description": "Synthetics test type. Valid values are `api`, `browser`.\n"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "type"
            ]
        },
        "datadog:index/SyntheticsTestApiStepRequestBasicauth:SyntheticsTestApiStepRequestBasicauth": {
            "properties": {
                "accessKey": {
                    "type": "string",
                    "description": "Access key for `SIGV4` authentication.\n",
                    "secret": true
                },
                "accessTokenUrl": {
                    "type": "string",
                    "description": "Access token url for `oauth-client` or `oauth-rop` authentication.\n"
                },
                "audience": {
                    "type": "string",
                    "description": "Audience for `oauth-client` or `oauth-rop` authentication.\n"
                },
                "clientId": {
                    "type": "string",
                    "description": "Client ID for `oauth-client` or `oauth-rop` authentication.\n"
                },
                "clientSecret": {
                    "type": "string",
                    "description": "Client secret for `oauth-client` or `oauth-rop` authentication.\n",
                    "secret": true
                },
                "domain": {
                    "type": "string",
                    "description": "Domain for `ntlm` authentication.\n"
                },
                "password": {
                    "type": "string",
                    "description": "Password for authentication.\n",
                    "secret": true
                },
                "region": {
                    "type": "string",
                    "description": "Region for `SIGV4` authentication.\n"
                },
                "resource": {
                    "type": "string",
                    "description": "Resource for `oauth-client` or `oauth-rop` authentication.\n"
                },
                "scope": {
                    "type": "string",
                    "description": "Scope for `oauth-client` or `oauth-rop` authentication.\n"
                },
                "secretKey": {
                    "type": "string",
                    "description": "Secret key for `SIGV4` authentication.\n",
                    "secret": true
                },
                "serviceName": {
                    "type": "string",
                    "description": "Service name for `SIGV4` authentication.\n"
                },
                "sessionToken": {
                    "type": "string",
                    "description": "Session token for `SIGV4` authentication.\n"
                },
                "tokenApiAuthentication": {
                    "type": "string",
                    "description": "Token API Authentication for `oauth-client` or `oauth-rop` authentication. Valid values are `header`, `body`.\n"
                },
                "type": {
                    "type": "string",
                    "description": "Type of basic authentication to use when performing the test.\n"
                },
                "username": {
                    "type": "string",
                    "description": "Username for authentication.\n"
                },
                "workstation": {
                    "type": "string",
                    "description": "Workstation for `ntlm` authentication.\n"
                }
            },
            "type": "object"
        },
        "datadog:index/SyntheticsTestApiStepRequestClientCertificate:SyntheticsTestApiStepRequestClientCertificate": {
            "properties": {
                "cert": {
                    "$ref": "#/types/datadog:index/SyntheticsTestApiStepRequestClientCertificateCert:SyntheticsTestApiStepRequestClientCertificateCert"
                },
                "key": {
                    "$ref": "#/types/datadog:index/SyntheticsTestApiStepRequestClientCertificateKey:SyntheticsTestApiStepRequestClientCertificateKey"
                }
            },
            "type": "object",
            "required": [
                "cert",
                "key"
            ]
        },
        "datadog:index/SyntheticsTestApiStepRequestClientCertificateCert:SyntheticsTestApiStepRequestClientCertificateCert": {
            "properties": {
                "content": {
                    "type": "string",
                    "secret": true
                },
                "filename": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "content"
            ]
        },
        "datadog:index/SyntheticsTestApiStepRequestClientCertificateKey:SyntheticsTestApiStepRequestClientCertificateKey": {
            "properties": {
                "content": {
                    "type": "string",
                    "secret": true
                },
                "filename": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "content"
            ]
        },
        "datadog:index/SyntheticsTestApiStepRequestDefinition:SyntheticsTestApiStepRequestDefinition": {
            "properties": {
                "allowInsecure": {
                    "type": "boolean"
                },
                "body": {
                    "type": "string",
                    "description": "The request body.\n"
                },
                "bodyType": {
                    "type": "string",
                    "description": "Type of the request body. Valid values are `text/plain`, `application/json`, `text/xml`, `text/html`, `application/x-www-form-urlencoded`, `graphql`.\n"
                },
                "callType": {
                    "type": "string",
                    "description": "The type of gRPC call to perform. Valid values are `healthcheck`, `unary`.\n"
                },
                "certificateDomains": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "By default, the client certificate is applied on the domain of the starting URL for browser tests. If you want your client certificate to be applied on other domains instead, add them in `certificate_domains`.\n"
                },
                "dnsServer": {
                    "type": "string",
                    "description": "DNS server to use for DNS tests (`subtype = \"dns\"`).\n"
                },
                "dnsServerPort": {
                    "type": "integer",
                    "description": "DNS server port to use for DNS tests.\n"
                },
                "followRedirects": {
                    "type": "boolean"
                },
                "host": {
                    "type": "string",
                    "description": "Host name to perform the test with.\n"
                },
                "message": {
                    "type": "string",
                    "description": "For UDP and websocket tests, message to send with the request.\n"
                },
                "method": {
                    "type": "string",
                    "description": "Either the HTTP method/verb to use or a gRPC method available on the service set in the `service` field. Required if `subtype` is `HTTP` or if `subtype` is `grpc` and `callType` is `unary`.\n"
                },
                "noSavingResponseBody": {
                    "type": "boolean",
                    "description": "Determines whether or not to save the response body.\n"
                },
                "numberOfPackets": {
                    "type": "integer",
                    "description": "Number of pings to use per test for ICMP tests (`subtype = \"icmp\"`) between 0 and 10.\n"
                },
                "port": {
                    "type": "integer",
                    "description": "Port to use when performing the test.\n"
                },
                "servername": {
                    "type": "string",
                    "description": "For SSL tests, it specifies on which server you want to initiate the TLS handshake, allowing the server to present one of multiple possible certificates on the same IP address and TCP port number.\n"
                },
                "service": {
                    "type": "string",
                    "description": "The gRPC service on which you want to perform the gRPC call.\n"
                },
                "shouldTrackHops": {
                    "type": "boolean",
                    "description": "This will turn on a traceroute probe to discover all gateways along the path to the host destination. For ICMP tests (`subtype = \"icmp\"`).\n"
                },
                "timeout": {
                    "type": "integer",
                    "description": "Timeout in seconds for the test. Defaults to `60`.\n"
                },
                "url": {
                    "type": "string",
                    "description": "The URL to send the request to.\n"
                }
            },
            "type": "object"
        },
        "datadog:index/SyntheticsTestApiStepRequestProxy:SyntheticsTestApiStepRequestProxy": {
            "properties": {
                "headers": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "description": "Header name and value map.\n"
                },
                "url": {
                    "type": "string",
                    "description": "URL of the proxy to perform the test.\n"
                }
            },
            "type": "object",
            "required": [
                "url"
            ]
        },
        "datadog:index/SyntheticsTestApiStepRetry:SyntheticsTestApiStepRetry": {
            "properties": {
                "count": {
                    "type": "integer"
                },
                "interval": {
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "datadog:index/SyntheticsTestAssertion:SyntheticsTestAssertion": {
            "properties": {
                "operator": {
                    "type": "string",
                    "description": "Assertion operator. **Note** Only some combinations of `type` and `operator` are valid (please refer to [Datadog documentation](https://docs.datadoghq.com/api/latest/synthetics/#create-a-test)).\n"
                },
                "property": {
                    "type": "string",
                    "description": "If assertion type is `header`, this is the header name.\n"
                },
                "target": {
                    "type": "string",
                    "description": "Expected value. Depends on the assertion type, refer to [Datadog documentation](https://docs.datadoghq.com/api/latest/synthetics/#create-a-test) for details.\n"
                },
                "targetjsonpath": {
                    "$ref": "#/types/datadog:index/SyntheticsTestAssertionTargetjsonpath:SyntheticsTestAssertionTargetjsonpath",
                    "description": "Expected structure if `operator` is `validatesJSONPath`. Exactly one nested block is allowed with the structure below.\n"
                },
                "targetxpath": {
                    "$ref": "#/types/datadog:index/SyntheticsTestAssertionTargetxpath:SyntheticsTestAssertionTargetxpath",
                    "description": "Expected structure if `operator` is `validatesXPath`. Exactly one nested block is allowed with the structure below.\n"
                },
                "type": {
                    "type": "string",
                    "description": "Type of assertion. **Note** Only some combinations of `type` and `operator` are valid (please refer to [Datadog documentation](https://docs.datadoghq.com/api/latest/synthetics/#create-a-test)). Valid values are `body`, `header`, `statusCode`, `certificate`, `responseTime`, `property`, `recordEvery`, `recordSome`, `tlsVersion`, `minTlsVersion`, `latency`, `packetLossPercentage`, `packetsReceived`, `networkHop`, `receivedMessage`, `grpcHealthcheckStatus`, `grpcMetadata`, `grpcProto`, `connection`.\n"
                }
            },
            "type": "object",
            "required": [
                "operator",
                "type"
            ]
        },
        "datadog:index/SyntheticsTestAssertionTargetjsonpath:SyntheticsTestAssertionTargetjsonpath": {
            "properties": {
                "jsonpath": {
                    "type": "string"
                },
                "operator": {
                    "type": "string"
                },
                "targetvalue": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "jsonpath",
                "operator"
            ]
        },
        "datadog:index/SyntheticsTestAssertionTargetxpath:SyntheticsTestAssertionTargetxpath": {
            "properties": {
                "operator": {
                    "type": "string"
                },
                "targetvalue": {
                    "type": "string"
                },
                "xpath": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "operator",
                "xpath"
            ]
        },
        "datadog:index/SyntheticsTestBrowserStep:SyntheticsTestBrowserStep": {
            "properties": {
                "allowFailure": {
                    "type": "boolean",
                    "description": "Determines if the step should be allowed to fail.\n"
                },
                "forceElementUpdate": {
                    "type": "boolean",
                    "description": "Force update of the \"element\" parameter for the step\n"
                },
                "isCritical": {
                    "type": "boolean",
                    "description": "Determines whether or not to consider the entire test as failed if this step fails. Can be used only if `allow_failure` is `true`.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the step.\n"
                },
                "noScreenshot": {
                    "type": "boolean",
                    "description": "Prevents saving screenshots of the step.\n"
                },
                "params": {
                    "$ref": "#/types/datadog:index/SyntheticsTestBrowserStepParams:SyntheticsTestBrowserStepParams",
                    "description": "Parameters for the step.\n"
                },
                "timeout": {
                    "type": "integer",
                    "description": "Used to override the default timeout of a step.\n"
                },
                "type": {
                    "type": "string",
                    "description": "Type of the step. Valid values are `assertCurrentUrl`, `assertElementAttribute`, `assertElementContent`, `assertElementPresent`, `assertEmail`, `assertFileDownload`, `assertFromJavascript`, `assertPageContains`, `assertPageLacks`, `click`, `extractFromJavascript`, `extractVariable`, `goToEmailLink`, `goToUrl`, `goToUrlAndMeasureTti`, `hover`, `playSubTest`, `pressKey`, `refresh`, `runApiTest`, `scroll`, `selectOption`, `typeText`, `uploadFiles`, `wait`.\n"
                }
            },
            "type": "object",
            "required": [
                "name",
                "params",
                "type"
            ]
        },
        "datadog:index/SyntheticsTestBrowserStepParams:SyntheticsTestBrowserStepParams": {
            "properties": {
                "attribute": {
                    "type": "string"
                },
                "check": {
                    "type": "string"
                },
                "clickType": {
                    "type": "string"
                },
                "code": {
                    "type": "string"
                },
                "delay": {
                    "type": "integer"
                },
                "element": {
                    "type": "string"
                },
                "elementUserLocator": {
                    "$ref": "#/types/datadog:index/SyntheticsTestBrowserStepParamsElementUserLocator:SyntheticsTestBrowserStepParamsElementUserLocator"
                },
                "email": {
                    "type": "string"
                },
                "file": {
                    "type": "string"
                },
                "files": {
                    "type": "string"
                },
                "modifiers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "playingTabId": {
                    "type": "string"
                },
                "request": {
                    "type": "string"
                },
                "subtestPublicId": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                },
                "variable": {
                    "$ref": "#/types/datadog:index/SyntheticsTestBrowserStepParamsVariable:SyntheticsTestBrowserStepParamsVariable"
                },
                "withClick": {
                    "type": "boolean"
                },
                "x": {
                    "type": "integer"
                },
                "y": {
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "datadog:index/SyntheticsTestBrowserStepParamsElementUserLocator:SyntheticsTestBrowserStepParamsElementUserLocator": {
            "properties": {
                "failTestOnCannotLocate": {
                    "type": "boolean"
                },
                "value": {
                    "$ref": "#/types/datadog:index/SyntheticsTestBrowserStepParamsElementUserLocatorValue:SyntheticsTestBrowserStepParamsElementUserLocatorValue"
                }
            },
            "type": "object",
            "required": [
                "value"
            ]
        },
        "datadog:index/SyntheticsTestBrowserStepParamsElementUserLocatorValue:SyntheticsTestBrowserStepParamsElementUserLocatorValue": {
            "properties": {
                "type": {
                    "type": "string",
                    "description": "Synthetics test type. Valid values are `api`, `browser`.\n"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "value"
            ]
        },
        "datadog:index/SyntheticsTestBrowserStepParamsVariable:SyntheticsTestBrowserStepParamsVariable": {
            "properties": {
                "example": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "description": "Name of Datadog synthetics test.\n"
                }
            },
            "type": "object"
        },
        "datadog:index/SyntheticsTestBrowserVariable:SyntheticsTestBrowserVariable": {
            "properties": {
                "example": {
                    "type": "string",
                    "description": "Example for the variable.\n"
                },
                "id": {
                    "type": "string",
                    "description": "ID of the global variable to use. This is actually only used (and required) in the case of using a variable of type `global`.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the variable.\n"
                },
                "pattern": {
                    "type": "string",
                    "description": "Pattern of the variable.\n"
                },
                "secure": {
                    "type": "boolean",
                    "description": "Determines whether or not the browser test variable is obfuscated. Can only be used with a browser variable of type `text`\n"
                },
                "type": {
                    "type": "string",
                    "description": "Type of browser test variable. Valid values are `element`, `email`, `global`, `javascript`, `text`.\n"
                }
            },
            "type": "object",
            "required": [
                "name",
                "type"
            ]
        },
        "datadog:index/SyntheticsTestConfigVariable:SyntheticsTestConfigVariable": {
            "properties": {
                "example": {
                    "type": "string"
                },
                "id": {
                    "type": "string",
                    "description": "When type = `global`, ID of the global variable to use.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the variable.\n"
                },
                "pattern": {
                    "type": "string"
                },
                "secure": {
                    "type": "boolean",
                    "description": "Whether the value of this variable will be obfuscated in test results.\n"
                },
                "type": {
                    "type": "string",
                    "description": "Type of test configuration variable. Valid values are `global`, `text`.\n"
                }
            },
            "type": "object",
            "required": [
                "name",
                "type"
            ]
        },
        "datadog:index/SyntheticsTestOptionsList:SyntheticsTestOptionsList": {
            "properties": {
                "acceptSelfSigned": {
                    "type": "boolean",
                    "description": "For SSL test, whether or not the test should allow self signed certificates.\n"
                },
                "allowInsecure": {
                    "type": "boolean",
                    "description": "Allows loading insecure content for an HTTP request in an API test or in a multistep API test step.\n"
                },
                "checkCertificateRevocation": {
                    "type": "boolean",
                    "description": "For SSL test, whether or not the test should fail on revoked certificate in stapled OCSP.\n"
                },
                "ci": {
                    "$ref": "#/types/datadog:index/SyntheticsTestOptionsListCi:SyntheticsTestOptionsListCi",
                    "description": "CI/CD options for a Synthetic test.\n"
                },
                "disableCors": {
                    "type": "boolean",
                    "description": "Disable Cross-Origin Resource Sharing for browser tests.\n"
                },
                "disableCsp": {
                    "type": "boolean",
                    "description": "Disable Content Security Policy for browser tests.\n"
                },
                "followRedirects": {
                    "type": "boolean",
                    "description": "Determines whether or not the API HTTP test should follow redirects.\n"
                },
                "httpVersion": {
                    "type": "string",
                    "description": "HTTP version to use for a Synthetics API test. Valid values are `http1`, `http2`, `any`.\n"
                },
                "ignoreServerCertificateError": {
                    "type": "boolean",
                    "description": "Ignore server certificate error for browser tests.\n"
                },
                "initialNavigationTimeout": {
                    "type": "integer",
                    "description": "Timeout before declaring the initial step as failed (in seconds) for browser tests.\n"
                },
                "minFailureDuration": {
                    "type": "integer",
                    "description": "Minimum amount of time in failure required to trigger an alert (in seconds). Default is `0`.\n"
                },
                "minLocationFailed": {
                    "type": "integer",
                    "description": "Minimum number of locations in failure required to trigger an alert. Default is `1`.\n"
                },
                "monitorName": {
                    "type": "string",
                    "description": "The monitor name is used for the alert title as well as for all monitor dashboard widgets and SLOs.\n"
                },
                "monitorOptions": {
                    "$ref": "#/types/datadog:index/SyntheticsTestOptionsListMonitorOptions:SyntheticsTestOptionsListMonitorOptions"
                },
                "monitorPriority": {
                    "type": "integer"
                },
                "noScreenshot": {
                    "type": "boolean",
                    "description": "Prevents saving screenshots of the steps.\n"
                },
                "restrictedRoles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of role identifiers pulled from the Roles API to restrict read and write access.\n"
                },
                "retry": {
                    "$ref": "#/types/datadog:index/SyntheticsTestOptionsListRetry:SyntheticsTestOptionsListRetry"
                },
                "rumSettings": {
                    "$ref": "#/types/datadog:index/SyntheticsTestOptionsListRumSettings:SyntheticsTestOptionsListRumSettings",
                    "description": "The RUM data collection settings for the Synthetic browser test.\n"
                },
                "scheduling": {
                    "$ref": "#/types/datadog:index/SyntheticsTestOptionsListScheduling:SyntheticsTestOptionsListScheduling",
                    "description": "Object containing timeframes and timezone used for advanced scheduling.\n"
                },
                "tickEvery": {
                    "type": "integer",
                    "description": "How often the test should run (in seconds).\n"
                }
            },
            "type": "object",
            "required": [
                "tickEvery"
            ]
        },
        "datadog:index/SyntheticsTestOptionsListCi:SyntheticsTestOptionsListCi": {
            "properties": {
                "executionRule": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "datadog:index/SyntheticsTestOptionsListMonitorOptions:SyntheticsTestOptionsListMonitorOptions": {
            "properties": {
                "renotifyInterval": {
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "datadog:index/SyntheticsTestOptionsListRetry:SyntheticsTestOptionsListRetry": {
            "properties": {
                "count": {
                    "type": "integer"
                },
                "interval": {
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "datadog:index/SyntheticsTestOptionsListRumSettings:SyntheticsTestOptionsListRumSettings": {
            "properties": {
                "applicationId": {
                    "type": "string"
                },
                "clientTokenId": {
                    "type": "integer",
                    "secret": true
                },
                "isEnabled": {
                    "type": "boolean"
                }
            },
            "type": "object",
            "required": [
                "isEnabled"
            ]
        },
        "datadog:index/SyntheticsTestOptionsListScheduling:SyntheticsTestOptionsListScheduling": {
            "properties": {
                "timeframes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/SyntheticsTestOptionsListSchedulingTimeframe:SyntheticsTestOptionsListSchedulingTimeframe"
                    }
                },
                "timezone": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "timeframes",
                "timezone"
            ]
        },
        "datadog:index/SyntheticsTestOptionsListSchedulingTimeframe:SyntheticsTestOptionsListSchedulingTimeframe": {
            "properties": {
                "day": {
                    "type": "integer"
                },
                "from": {
                    "type": "string"
                },
                "to": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "day",
                "from",
                "to"
            ]
        },
        "datadog:index/SyntheticsTestRequestBasicauth:SyntheticsTestRequestBasicauth": {
            "properties": {
                "accessKey": {
                    "type": "string",
                    "description": "Access key for `SIGV4` authentication.\n",
                    "secret": true
                },
                "accessTokenUrl": {
                    "type": "string",
                    "description": "Access token url for `oauth-client` or `oauth-rop` authentication.\n"
                },
                "audience": {
                    "type": "string",
                    "description": "Audience for `oauth-client` or `oauth-rop` authentication.\n"
                },
                "clientId": {
                    "type": "string",
                    "description": "Client ID for `oauth-client` or `oauth-rop` authentication.\n"
                },
                "clientSecret": {
                    "type": "string",
                    "description": "Client secret for `oauth-client` or `oauth-rop` authentication.\n",
                    "secret": true
                },
                "domain": {
                    "type": "string",
                    "description": "Domain for `ntlm` authentication.\n"
                },
                "password": {
                    "type": "string",
                    "description": "Password for authentication.\n",
                    "secret": true
                },
                "region": {
                    "type": "string",
                    "description": "Region for `SIGV4` authentication.\n"
                },
                "resource": {
                    "type": "string",
                    "description": "Resource for `oauth-client` or `oauth-rop` authentication.\n"
                },
                "scope": {
                    "type": "string",
                    "description": "Scope for `oauth-client` or `oauth-rop` authentication.\n"
                },
                "secretKey": {
                    "type": "string",
                    "description": "Secret key for `SIGV4` authentication.\n",
                    "secret": true
                },
                "serviceName": {
                    "type": "string",
                    "description": "Service name for `SIGV4` authentication.\n"
                },
                "sessionToken": {
                    "type": "string",
                    "description": "Session token for `SIGV4` authentication.\n"
                },
                "tokenApiAuthentication": {
                    "type": "string",
                    "description": "Token API Authentication for `oauth-client` or `oauth-rop` authentication. Valid values are `header`, `body`.\n"
                },
                "type": {
                    "type": "string",
                    "description": "Type of basic authentication to use when performing the test.\n"
                },
                "username": {
                    "type": "string",
                    "description": "Username for authentication.\n"
                },
                "workstation": {
                    "type": "string",
                    "description": "Workstation for `ntlm` authentication.\n"
                }
            },
            "type": "object"
        },
        "datadog:index/SyntheticsTestRequestClientCertificate:SyntheticsTestRequestClientCertificate": {
            "properties": {
                "cert": {
                    "$ref": "#/types/datadog:index/SyntheticsTestRequestClientCertificateCert:SyntheticsTestRequestClientCertificateCert"
                },
                "key": {
                    "$ref": "#/types/datadog:index/SyntheticsTestRequestClientCertificateKey:SyntheticsTestRequestClientCertificateKey"
                }
            },
            "type": "object",
            "required": [
                "cert",
                "key"
            ]
        },
        "datadog:index/SyntheticsTestRequestClientCertificateCert:SyntheticsTestRequestClientCertificateCert": {
            "properties": {
                "content": {
                    "type": "string",
                    "secret": true
                },
                "filename": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "content"
            ]
        },
        "datadog:index/SyntheticsTestRequestClientCertificateKey:SyntheticsTestRequestClientCertificateKey": {
            "properties": {
                "content": {
                    "type": "string",
                    "secret": true
                },
                "filename": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "content"
            ]
        },
        "datadog:index/SyntheticsTestRequestDefinition:SyntheticsTestRequestDefinition": {
            "properties": {
                "body": {
                    "type": "string",
                    "description": "The request body.\n"
                },
                "bodyType": {
                    "type": "string",
                    "description": "Type of the request body. Valid values are `text/plain`, `application/json`, `text/xml`, `text/html`, `application/x-www-form-urlencoded`, `graphql`.\n"
                },
                "callType": {
                    "type": "string",
                    "description": "The type of gRPC call to perform. Valid values are `healthcheck`, `unary`.\n"
                },
                "certificateDomains": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "By default, the client certificate is applied on the domain of the starting URL for browser tests. If you want your client certificate to be applied on other domains instead, add them in `certificate_domains`.\n"
                },
                "dnsServer": {
                    "type": "string",
                    "description": "DNS server to use for DNS tests (`subtype = \"dns\"`).\n"
                },
                "dnsServerPort": {
                    "type": "integer",
                    "description": "DNS server port to use for DNS tests.\n"
                },
                "host": {
                    "type": "string",
                    "description": "Host name to perform the test with.\n"
                },
                "message": {
                    "type": "string",
                    "description": "For UDP and websocket tests, message to send with the request.\n"
                },
                "method": {
                    "type": "string",
                    "description": "Either the HTTP method/verb to use or a gRPC method available on the service set in the `service` field. Required if `subtype` is `HTTP` or if `subtype` is `grpc` and `callType` is `unary`.\n"
                },
                "noSavingResponseBody": {
                    "type": "boolean",
                    "description": "Determines whether or not to save the response body.\n"
                },
                "numberOfPackets": {
                    "type": "integer",
                    "description": "Number of pings to use per test for ICMP tests (`subtype = \"icmp\"`) between 0 and 10.\n"
                },
                "port": {
                    "type": "integer",
                    "description": "Port to use when performing the test.\n"
                },
                "servername": {
                    "type": "string",
                    "description": "For SSL tests, it specifies on which server you want to initiate the TLS handshake, allowing the server to present one of multiple possible certificates on the same IP address and TCP port number.\n"
                },
                "service": {
                    "type": "string",
                    "description": "The gRPC service on which you want to perform the gRPC call.\n"
                },
                "shouldTrackHops": {
                    "type": "boolean",
                    "description": "This will turn on a traceroute probe to discover all gateways along the path to the host destination. For ICMP tests (`subtype = \"icmp\"`).\n"
                },
                "timeout": {
                    "type": "integer",
                    "description": "Timeout in seconds for the test. Defaults to `60`.\n"
                },
                "url": {
                    "type": "string",
                    "description": "The URL to send the request to.\n"
                }
            },
            "type": "object"
        },
        "datadog:index/SyntheticsTestRequestProxy:SyntheticsTestRequestProxy": {
            "properties": {
                "headers": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "description": "Header name and value map.\n"
                },
                "url": {
                    "type": "string",
                    "description": "URL of the proxy to perform the test.\n"
                }
            },
            "type": "object",
            "required": [
                "url"
            ]
        },
        "datadog:index/getCloudWorkloadSecurityAgentRulesAgentRule:getCloudWorkloadSecurityAgentRulesAgentRule": {
            "properties": {
                "description": {
                    "type": "string"
                },
                "enabled": {
                    "type": "boolean"
                },
                "expression": {
                    "type": "string"
                },
                "id": {
                    "type": "string",
                    "description": "The ID of this resource.\n"
                },
                "name": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "description",
                "enabled",
                "expression",
                "id",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "datadog:index/getHostsHostList:getHostsHostList": {
            "properties": {
                "aliases": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "apps": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "awsName": {
                    "type": "string"
                },
                "hostName": {
                    "type": "string"
                },
                "id": {
                    "type": "integer",
                    "description": "The ID of this resource.\n"
                },
                "isMuted": {
                    "type": "boolean"
                },
                "lastReportedTime": {
                    "type": "integer"
                },
                "meta": {
                    "$ref": "#/types/datadog:index/getHostsHostListMeta:getHostsHostListMeta"
                },
                "metrics": {
                    "$ref": "#/types/datadog:index/getHostsHostListMetrics:getHostsHostListMetrics"
                },
                "muteTimeout": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "sources": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "up": {
                    "type": "boolean"
                }
            },
            "type": "object",
            "required": [
                "aliases",
                "apps",
                "awsName",
                "hostName",
                "id",
                "isMuted",
                "lastReportedTime",
                "meta",
                "metrics",
                "muteTimeout",
                "name",
                "sources",
                "up"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "datadog:index/getHostsHostListMeta:getHostsHostListMeta": {
            "properties": {
                "agentVersion": {
                    "type": "string"
                },
                "cpuCores": {
                    "type": "integer"
                },
                "gohai": {
                    "type": "string"
                },
                "machine": {
                    "type": "string"
                },
                "platform": {
                    "type": "string"
                },
                "processor": {
                    "type": "string"
                },
                "pythonVersion": {
                    "type": "string"
                },
                "socketFqdn": {
                    "type": "string"
                },
                "socketHostname": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "agentVersion",
                "cpuCores",
                "gohai",
                "machine",
                "platform",
                "processor",
                "pythonVersion",
                "socketFqdn",
                "socketHostname"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "datadog:index/getHostsHostListMetrics:getHostsHostListMetrics": {
            "properties": {
                "cpu": {
                    "type": "number"
                },
                "iowait": {
                    "type": "number"
                },
                "load": {
                    "type": "number"
                }
            },
            "type": "object",
            "required": [
                "cpu",
                "iowait",
                "load"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "datadog:index/getLogsIndexesLogsIndex:getLogsIndexesLogsIndex": {
            "properties": {
                "dailyLimit": {
                    "type": "integer"
                },
                "exclusionFilters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/getLogsIndexesLogsIndexExclusionFilter:getLogsIndexesLogsIndexExclusionFilter"
                    }
                },
                "filters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/getLogsIndexesLogsIndexFilter:getLogsIndexesLogsIndexFilter"
                    }
                },
                "name": {
                    "type": "string"
                },
                "retentionDays": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "dailyLimit",
                "exclusionFilters",
                "filters",
                "name",
                "retentionDays"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "datadog:index/getLogsIndexesLogsIndexExclusionFilter:getLogsIndexesLogsIndexExclusionFilter": {
            "properties": {
                "filters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/getLogsIndexesLogsIndexExclusionFilterFilter:getLogsIndexesLogsIndexExclusionFilterFilter"
                    }
                },
                "isEnabled": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "isEnabled",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "datadog:index/getLogsIndexesLogsIndexExclusionFilterFilter:getLogsIndexesLogsIndexExclusionFilterFilter": {
            "properties": {
                "query": {
                    "type": "string"
                },
                "sampleRate": {
                    "type": "number"
                }
            },
            "type": "object",
            "required": [
                "query",
                "sampleRate"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "datadog:index/getLogsIndexesLogsIndexFilter:getLogsIndexesLogsIndexFilter": {
            "properties": {
                "query": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "query"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "datadog:index/getLogsPipelinesLogsPipeline:getLogsPipelinesLogsPipeline": {
            "properties": {
                "filters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/getLogsPipelinesLogsPipelineFilter:getLogsPipelinesLogsPipelineFilter"
                    }
                },
                "id": {
                    "type": "string",
                    "description": "The ID of this resource.\n"
                },
                "isEnabled": {
                    "type": "boolean"
                },
                "isReadOnly": {
                    "type": "boolean",
                    "description": "Filter parameter for retrieved pipelines\n"
                },
                "name": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "filters",
                "id",
                "isEnabled",
                "isReadOnly",
                "name",
                "type"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "datadog:index/getLogsPipelinesLogsPipelineFilter:getLogsPipelinesLogsPipelineFilter": {
            "properties": {
                "query": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "query"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "datadog:index/getMonitorConfigPoliciesMonitorConfigPolicy:getMonitorConfigPoliciesMonitorConfigPolicy": {
            "properties": {
                "id": {
                    "type": "string",
                    "description": "The ID of this resource.\n"
                },
                "policyType": {
                    "type": "string"
                },
                "tagPolicy": {
                    "$ref": "#/types/datadog:index/getMonitorConfigPoliciesMonitorConfigPolicyTagPolicy:getMonitorConfigPoliciesMonitorConfigPolicyTagPolicy"
                }
            },
            "type": "object",
            "required": [
                "id",
                "policyType",
                "tagPolicy"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "datadog:index/getMonitorConfigPoliciesMonitorConfigPolicyTagPolicy:getMonitorConfigPoliciesMonitorConfigPolicyTagPolicy": {
            "properties": {
                "tagKey": {
                    "type": "string"
                },
                "tagKeyRequired": {
                    "type": "boolean"
                },
                "validTagValues": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "type": "object",
            "required": [
                "tagKey",
                "tagKeyRequired",
                "validTagValues"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "datadog:index/getMonitorMonitorThreshold:getMonitorMonitorThreshold": {
            "properties": {
                "critical": {
                    "type": "string"
                },
                "criticalRecovery": {
                    "type": "string"
                },
                "ok": {
                    "type": "string"
                },
                "unknown": {
                    "type": "string"
                },
                "warning": {
                    "type": "string"
                },
                "warningRecovery": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "critical",
                "criticalRecovery",
                "ok",
                "unknown",
                "warning",
                "warningRecovery"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "datadog:index/getMonitorMonitorThresholdWindow:getMonitorMonitorThresholdWindow": {
            "properties": {
                "recoveryWindow": {
                    "type": "string"
                },
                "triggerWindow": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "recoveryWindow",
                "triggerWindow"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "datadog:index/getMonitorSchedulingOption:getMonitorSchedulingOption": {
            "properties": {
                "evaluationWindows": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/getMonitorSchedulingOptionEvaluationWindow:getMonitorSchedulingOptionEvaluationWindow"
                    }
                }
            },
            "type": "object",
            "required": [
                "evaluationWindows"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "datadog:index/getMonitorSchedulingOptionEvaluationWindow:getMonitorSchedulingOptionEvaluationWindow": {
            "properties": {
                "dayStarts": {
                    "type": "string"
                },
                "hourStarts": {
                    "type": "integer"
                },
                "monthStarts": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "dayStarts",
                "hourStarts",
                "monthStarts"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "datadog:index/getMonitorsMonitor:getMonitorsMonitor": {
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The ID of this resource.\n"
                },
                "name": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "id",
                "name",
                "type"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "datadog:index/getRolesRole:getRolesRole": {
            "properties": {
                "id": {
                    "type": "string",
                    "description": "The ID of this resource.\n"
                },
                "name": {
                    "type": "string"
                },
                "userCount": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "id",
                "name",
                "userCount"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "datadog:index/getSecurityMonitoringFiltersFilter:getSecurityMonitoringFiltersFilter": {
            "properties": {
                "exclusionFilters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/getSecurityMonitoringFiltersFilterExclusionFilter:getSecurityMonitoringFiltersFilterExclusionFilter"
                    }
                },
                "filteredDataType": {
                    "type": "string"
                },
                "isEnabled": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "query": {
                    "type": "string"
                },
                "version": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "isEnabled",
                "name",
                "query",
                "version"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "datadog:index/getSecurityMonitoringFiltersFilterExclusionFilter:getSecurityMonitoringFiltersFilterExclusionFilter": {
            "properties": {
                "name": {
                    "type": "string"
                },
                "query": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "name",
                "query"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "datadog:index/getSecurityMonitoringRulesRule:getSecurityMonitoringRulesRule": {
            "properties": {
                "cases": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/getSecurityMonitoringRulesRuleCase:getSecurityMonitoringRulesRuleCase"
                    }
                },
                "enabled": {
                    "type": "boolean"
                },
                "filters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/getSecurityMonitoringRulesRuleFilter:getSecurityMonitoringRulesRuleFilter"
                    }
                },
                "hasExtendedTitle": {
                    "type": "boolean"
                },
                "message": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "options": {
                    "$ref": "#/types/datadog:index/getSecurityMonitoringRulesRuleOptions:getSecurityMonitoringRulesRuleOptions"
                },
                "queries": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/getSecurityMonitoringRulesRuleQuery:getSecurityMonitoringRulesRuleQuery"
                    }
                },
                "signalQueries": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/getSecurityMonitoringRulesRuleSignalQuery:getSecurityMonitoringRulesRuleSignalQuery"
                    }
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "type": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "cases",
                "message",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "datadog:index/getSecurityMonitoringRulesRuleCase:getSecurityMonitoringRulesRuleCase": {
            "properties": {
                "condition": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "notifications": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "status": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "status"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "datadog:index/getSecurityMonitoringRulesRuleFilter:getSecurityMonitoringRulesRuleFilter": {
            "properties": {
                "action": {
                    "type": "string"
                },
                "query": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "action",
                "query"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "datadog:index/getSecurityMonitoringRulesRuleOptions:getSecurityMonitoringRulesRuleOptions": {
            "properties": {
                "decreaseCriticalityBasedOnEnv": {
                    "type": "boolean"
                },
                "detectionMethod": {
                    "type": "string"
                },
                "evaluationWindow": {
                    "type": "integer"
                },
                "impossibleTravelOptions": {
                    "$ref": "#/types/datadog:index/getSecurityMonitoringRulesRuleOptionsImpossibleTravelOptions:getSecurityMonitoringRulesRuleOptionsImpossibleTravelOptions"
                },
                "keepAlive": {
                    "type": "integer"
                },
                "maxSignalDuration": {
                    "type": "integer"
                },
                "newValueOptions": {
                    "$ref": "#/types/datadog:index/getSecurityMonitoringRulesRuleOptionsNewValueOptions:getSecurityMonitoringRulesRuleOptionsNewValueOptions"
                }
            },
            "type": "object",
            "required": [
                "keepAlive",
                "maxSignalDuration"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "datadog:index/getSecurityMonitoringRulesRuleOptionsImpossibleTravelOptions:getSecurityMonitoringRulesRuleOptionsImpossibleTravelOptions": {
            "properties": {
                "baselineUserLocations": {
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "datadog:index/getSecurityMonitoringRulesRuleOptionsNewValueOptions:getSecurityMonitoringRulesRuleOptionsNewValueOptions": {
            "properties": {
                "forgetAfter": {
                    "type": "integer"
                },
                "learningDuration": {
                    "type": "integer"
                },
                "learningMethod": {
                    "type": "string"
                },
                "learningThreshold": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "forgetAfter"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "datadog:index/getSecurityMonitoringRulesRuleQuery:getSecurityMonitoringRulesRuleQuery": {
            "properties": {
                "agentRules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/getSecurityMonitoringRulesRuleQueryAgentRule:getSecurityMonitoringRulesRuleQueryAgentRule"
                    },
                    "deprecationMessage": "`agent_rule` has been deprecated in favor of new Agent Rule resource."
                },
                "aggregation": {
                    "type": "string"
                },
                "distinctFields": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "groupByFields": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "metric": {
                    "type": "string",
                    "deprecationMessage": "Configure `metrics` instead. This attribute will be removed in the next major version of the provider."
                },
                "metrics": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "name": {
                    "type": "string"
                },
                "query": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "metrics",
                "query"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "datadog:index/getSecurityMonitoringRulesRuleQueryAgentRule:getSecurityMonitoringRulesRuleQueryAgentRule": {
            "properties": {
                "agentRuleId": {
                    "type": "string"
                },
                "expression": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "agentRuleId",
                "expression"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "datadog:index/getSecurityMonitoringRulesRuleSignalQuery:getSecurityMonitoringRulesRuleSignalQuery": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "correlatedByFields": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "correlatedQueryIndex": {
                    "type": "string"
                },
                "defaultRuleId": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "ruleId": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "ruleId"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "datadog:index/getServiceLevelObjectiveQuery:getServiceLevelObjectiveQuery": {
            "properties": {
                "denominator": {
                    "type": "string"
                },
                "numerator": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "denominator",
                "numerator"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "datadog:index/getServiceLevelObjectivesSlo:getServiceLevelObjectivesSlo": {
            "properties": {
                "id": {
                    "type": "string",
                    "description": "The ID of this resource.\n"
                },
                "name": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "id",
                "name",
                "type"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "datadog:index/getTeamMembershipsTeamMembership:getTeamMembershipsTeamMembership": {
            "properties": {
                "id": {
                    "type": "string",
                    "description": "The ID of this resource.\n"
                },
                "role": {
                    "type": "string"
                },
                "teamId": {
                    "type": "string",
                    "description": "The team's identifier.\n"
                },
                "userId": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "id",
                "role",
                "teamId",
                "userId"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "datadog:slack/ChannelDisplay:ChannelDisplay": {
            "properties": {
                "message": {
                    "type": "boolean",
                    "description": "Show the main body of the alert event.\n"
                },
                "notified": {
                    "type": "boolean",
                    "description": "Show the list of @-handles in the alert event.\n"
                },
                "snapshot": {
                    "type": "boolean",
                    "description": "Show the alert event's snapshot image.\n"
                },
                "tags": {
                    "type": "boolean",
                    "description": "Show the scopes on which the monitor alerted.\n"
                }
            },
            "type": "object"
        }
    },
    "provider": {
        "description": "The provider type for the datadog package. By default, resources use package-wide configuration\nsettings, however an explicit `Provider` instance may be created and passed during resource\nconstruction to achieve fine-grained programmatic control over provider settings. See the\n[documentation](https://www.pulumi.com/docs/reference/programming-model/#providers) for more information.\n",
        "properties": {
            "apiKey": {
                "type": "string",
                "description": "(Required unless validate is false) Datadog API key. This can also be set via the DD_API_KEY environment variable.\n",
                "secret": true
            },
            "apiUrl": {
                "type": "string",
                "description": "The API URL. This can also be set via the DD_HOST environment variable. Note that this URL must not end with the `/api/`\npath. For example, `https://api.datadoghq.com/` is a correct value, while `https://api.datadoghq.com/api/` is not. And\nif you're working with \"EU\" version of Datadog, use `https://api.datadoghq.eu/`. Other Datadog region examples:\n`https://api.us5.datadoghq.com/`, `https://api.us3.datadoghq.com/` and `https://api.ddog-gov.com/`. See\nhttps://docs.datadoghq.com/getting_started/site/ for all available regions.\n"
            },
            "appKey": {
                "type": "string",
                "description": "(Required unless validate is false) Datadog APP key. This can also be set via the DD_APP_KEY environment variable.\n",
                "secret": true
            },
            "httpClientRetryBackoffBase": {
                "type": "integer",
                "description": "The HTTP request retry back off base. Defaults to 2.\n"
            },
            "httpClientRetryBackoffMultiplier": {
                "type": "integer",
                "description": "The HTTP request retry back off multiplier. Defaults to 2.\n"
            },
            "httpClientRetryEnabled": {
                "type": "string",
                "description": "Enables request retries on HTTP status codes 429 and 5xx. Valid values are [`true`, `false`]. Defaults to `true`.\n"
            },
            "httpClientRetryMaxRetries": {
                "type": "integer",
                "description": "The HTTP request maximum retry number. Defaults to 3.\n"
            },
            "httpClientRetryTimeout": {
                "type": "integer",
                "description": "The HTTP request retry timeout period. Defaults to 60 seconds.\n"
            },
            "validate": {
                "type": "string",
                "description": "Enables validation of the provided API key during provider initialization. Valid values are [`true`, `false`]. Default\nis true. When false, api_key won't be checked.\n"
            }
        },
        "inputProperties": {
            "apiKey": {
                "type": "string",
                "description": "(Required unless validate is false) Datadog API key. This can also be set via the DD_API_KEY environment variable.\n",
                "secret": true
            },
            "apiUrl": {
                "type": "string",
                "description": "The API URL. This can also be set via the DD_HOST environment variable. Note that this URL must not end with the `/api/`\npath. For example, `https://api.datadoghq.com/` is a correct value, while `https://api.datadoghq.com/api/` is not. And\nif you're working with \"EU\" version of Datadog, use `https://api.datadoghq.eu/`. Other Datadog region examples:\n`https://api.us5.datadoghq.com/`, `https://api.us3.datadoghq.com/` and `https://api.ddog-gov.com/`. See\nhttps://docs.datadoghq.com/getting_started/site/ for all available regions.\n"
            },
            "appKey": {
                "type": "string",
                "description": "(Required unless validate is false) Datadog APP key. This can also be set via the DD_APP_KEY environment variable.\n",
                "secret": true
            },
            "httpClientRetryBackoffBase": {
                "type": "integer",
                "description": "The HTTP request retry back off base. Defaults to 2.\n"
            },
            "httpClientRetryBackoffMultiplier": {
                "type": "integer",
                "description": "The HTTP request retry back off multiplier. Defaults to 2.\n"
            },
            "httpClientRetryEnabled": {
                "type": "string",
                "description": "Enables request retries on HTTP status codes 429 and 5xx. Valid values are [`true`, `false`]. Defaults to `true`.\n"
            },
            "httpClientRetryMaxRetries": {
                "type": "integer",
                "description": "The HTTP request maximum retry number. Defaults to 3.\n"
            },
            "httpClientRetryTimeout": {
                "type": "integer",
                "description": "The HTTP request retry timeout period. Defaults to 60 seconds.\n"
            },
            "validate": {
                "type": "string",
                "description": "Enables validation of the provided API key during provider initialization. Valid values are [`true`, `false`]. Default\nis true. When false, api_key won't be checked.\n"
            }
        }
    },
    "resources": {
        "datadog:aws/integration:Integration": {
            "description": "Provides a Datadog - Amazon Web Services integration resource. This can be used to create and manage Datadog - Amazon Web Services integration.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as datadog from \"@pulumi/datadog\";\n\n// Create a new Datadog - Amazon Web Services integration\nconst sandbox = new datadog.aws.Integration(\"sandbox\", {\n    accountId: \"1234567890\",\n    accountSpecificNamespaceRules: {\n        auto_scaling: false,\n        opsworks: false,\n    },\n    excludedRegions: [\n        \"us-east-1\",\n        \"us-west-2\",\n    ],\n    filterTags: [\"key:value\"],\n    hostTags: [\n        \"key:value\",\n        \"key2:value2\",\n    ],\n    roleName: \"DatadogAWSIntegrationRole\",\n});\n```\n```python\nimport pulumi\nimport pulumi_datadog as datadog\n\n# Create a new Datadog - Amazon Web Services integration\nsandbox = datadog.aws.Integration(\"sandbox\",\n    account_id=\"1234567890\",\n    account_specific_namespace_rules={\n        \"auto_scaling\": False,\n        \"opsworks\": False,\n    },\n    excluded_regions=[\n        \"us-east-1\",\n        \"us-west-2\",\n    ],\n    filter_tags=[\"key:value\"],\n    host_tags=[\n        \"key:value\",\n        \"key2:value2\",\n    ],\n    role_name=\"DatadogAWSIntegrationRole\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Datadog = Pulumi.Datadog;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    // Create a new Datadog - Amazon Web Services integration\n    var sandbox = new Datadog.Aws.Integration(\"sandbox\", new()\n    {\n        AccountId = \"1234567890\",\n        AccountSpecificNamespaceRules = \n        {\n            { \"auto_scaling\", false },\n            { \"opsworks\", false },\n        },\n        ExcludedRegions = new[]\n        {\n            \"us-east-1\",\n            \"us-west-2\",\n        },\n        FilterTags = new[]\n        {\n            \"key:value\",\n        },\n        HostTags = new[]\n        {\n            \"key:value\",\n            \"key2:value2\",\n        },\n        RoleName = \"DatadogAWSIntegrationRole\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-datadog/sdk/v4/go/datadog/aws\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aws.NewIntegration(ctx, \"sandbox\", \u0026aws.IntegrationArgs{\n\t\t\tAccountId: pulumi.String(\"1234567890\"),\n\t\t\tAccountSpecificNamespaceRules: pulumi.AnyMap{\n\t\t\t\t\"auto_scaling\": pulumi.Any(false),\n\t\t\t\t\"opsworks\":     pulumi.Any(false),\n\t\t\t},\n\t\t\tExcludedRegions: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"us-east-1\"),\n\t\t\t\tpulumi.String(\"us-west-2\"),\n\t\t\t},\n\t\t\tFilterTags: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"key:value\"),\n\t\t\t},\n\t\t\tHostTags: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"key:value\"),\n\t\t\t\tpulumi.String(\"key2:value2\"),\n\t\t\t},\n\t\t\tRoleName: pulumi.String(\"DatadogAWSIntegrationRole\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.datadog.aws.Integration;\nimport com.pulumi.datadog.aws.IntegrationArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var sandbox = new Integration(\"sandbox\", IntegrationArgs.builder()        \n            .accountId(\"1234567890\")\n            .accountSpecificNamespaceRules(Map.ofEntries(\n                Map.entry(\"auto_scaling\", false),\n                Map.entry(\"opsworks\", false)\n            ))\n            .excludedRegions(            \n                \"us-east-1\",\n                \"us-west-2\")\n            .filterTags(\"key:value\")\n            .hostTags(            \n                \"key:value\",\n                \"key2:value2\")\n            .roleName(\"DatadogAWSIntegrationRole\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  # Create a new Datadog - Amazon Web Services integration\n  sandbox:\n    type: datadog:aws:Integration\n    properties:\n      accountId: '1234567890'\n      accountSpecificNamespaceRules:\n        auto_scaling: false\n        opsworks: false\n      excludedRegions:\n        - us-east-1\n        - us-west-2\n      filterTags:\n        - key:value\n      hostTags:\n        - key:value\n        - key2:value2\n      roleName: DatadogAWSIntegrationRole\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nAmazon Web Services integrations can be imported using their account ID and role name separated with a colon (:), while the external_id should be passed by setting an environment variable called EXTERNAL_ID\n\n```sh\n $ pulumi import datadog:aws/integration:Integration EXTERNAL_ID=${external_id} datadog_integration_aws.test ${account_id}:${role_name}\n```\n\n ",
            "properties": {
                "accessKeyId": {
                    "type": "string",
                    "description": "Your AWS access key ID. Only required if your AWS account is a GovCloud or China account.\n"
                },
                "accountId": {
                    "type": "string",
                    "description": "Your AWS Account ID without dashes.\n"
                },
                "accountSpecificNamespaceRules": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "description": "Enables or disables metric collection for specific AWS namespaces for this AWS account only. A list of namespaces can be found at the [available namespace rules API endpoint](https://docs.datadoghq.com/api/v1/aws-integration/#list-namespace-rules).\n"
                },
                "cspmResourceCollectionEnabled": {
                    "type": "string",
                    "description": "Whether Datadog collects cloud security posture management resources from your AWS account. This includes additional resources not covered under the general resource_collection.\n"
                },
                "excludedRegions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "An array of AWS regions to exclude from metrics collection.\n"
                },
                "externalId": {
                    "type": "string",
                    "description": "AWS External ID. **NOTE** This provider will not be able to detect changes made to the `external_id` field from outside\nTerraform.\n"
                },
                "filterTags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Array of EC2 tags (in the form `key:value`) defines a filter that Datadog uses when collecting metrics from EC2. Wildcards, such as `?` (for single characters) and `*` (for multiple characters) can also be used. Only hosts that match one of the defined tags will be imported into Datadog. The rest will be ignored. Host matching a given tag can also be excluded by adding `!` before the tag. e.x. `env:production,instance-type:c1.*,!region:us-east-1`.\n"
                },
                "hostTags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Array of tags (in the form `key:value`) to add to all hosts and metrics reporting through this integration.\n"
                },
                "metricsCollectionEnabled": {
                    "type": "string",
                    "description": "Whether Datadog collects metrics for this AWS account.\n"
                },
                "resourceCollectionEnabled": {
                    "type": "string",
                    "description": "Whether Datadog collects a standard set of resources from your AWS account.\n"
                },
                "roleName": {
                    "type": "string",
                    "description": "Your Datadog role delegation name.\n"
                },
                "secretAccessKey": {
                    "type": "string",
                    "description": "Your AWS secret access key. Only required if your AWS account is a GovCloud or China account.\n",
                    "secret": true
                }
            },
            "required": [
                "cspmResourceCollectionEnabled",
                "externalId",
                "metricsCollectionEnabled",
                "resourceCollectionEnabled"
            ],
            "inputProperties": {
                "accessKeyId": {
                    "type": "string",
                    "description": "Your AWS access key ID. Only required if your AWS account is a GovCloud or China account.\n"
                },
                "accountId": {
                    "type": "string",
                    "description": "Your AWS Account ID without dashes.\n"
                },
                "accountSpecificNamespaceRules": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "description": "Enables or disables metric collection for specific AWS namespaces for this AWS account only. A list of namespaces can be found at the [available namespace rules API endpoint](https://docs.datadoghq.com/api/v1/aws-integration/#list-namespace-rules).\n"
                },
                "cspmResourceCollectionEnabled": {
                    "type": "string",
                    "description": "Whether Datadog collects cloud security posture management resources from your AWS account. This includes additional resources not covered under the general resource_collection.\n"
                },
                "excludedRegions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "An array of AWS regions to exclude from metrics collection.\n"
                },
                "filterTags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Array of EC2 tags (in the form `key:value`) defines a filter that Datadog uses when collecting metrics from EC2. Wildcards, such as `?` (for single characters) and `*` (for multiple characters) can also be used. Only hosts that match one of the defined tags will be imported into Datadog. The rest will be ignored. Host matching a given tag can also be excluded by adding `!` before the tag. e.x. `env:production,instance-type:c1.*,!region:us-east-1`.\n"
                },
                "hostTags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Array of tags (in the form `key:value`) to add to all hosts and metrics reporting through this integration.\n"
                },
                "metricsCollectionEnabled": {
                    "type": "string",
                    "description": "Whether Datadog collects metrics for this AWS account.\n"
                },
                "resourceCollectionEnabled": {
                    "type": "string",
                    "description": "Whether Datadog collects a standard set of resources from your AWS account.\n"
                },
                "roleName": {
                    "type": "string",
                    "description": "Your Datadog role delegation name.\n"
                },
                "secretAccessKey": {
                    "type": "string",
                    "description": "Your AWS secret access key. Only required if your AWS account is a GovCloud or China account.\n",
                    "secret": true
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Integration resources.\n",
                "properties": {
                    "accessKeyId": {
                        "type": "string",
                        "description": "Your AWS access key ID. Only required if your AWS account is a GovCloud or China account.\n"
                    },
                    "accountId": {
                        "type": "string",
                        "description": "Your AWS Account ID without dashes.\n"
                    },
                    "accountSpecificNamespaceRules": {
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "pulumi.json#/Any"
                        },
                        "description": "Enables or disables metric collection for specific AWS namespaces for this AWS account only. A list of namespaces can be found at the [available namespace rules API endpoint](https://docs.datadoghq.com/api/v1/aws-integration/#list-namespace-rules).\n"
                    },
                    "cspmResourceCollectionEnabled": {
                        "type": "string",
                        "description": "Whether Datadog collects cloud security posture management resources from your AWS account. This includes additional resources not covered under the general resource_collection.\n"
                    },
                    "excludedRegions": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "An array of AWS regions to exclude from metrics collection.\n"
                    },
                    "externalId": {
                        "type": "string",
                        "description": "AWS External ID. **NOTE** This provider will not be able to detect changes made to the `external_id` field from outside\nTerraform.\n"
                    },
                    "filterTags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Array of EC2 tags (in the form `key:value`) defines a filter that Datadog uses when collecting metrics from EC2. Wildcards, such as `?` (for single characters) and `*` (for multiple characters) can also be used. Only hosts that match one of the defined tags will be imported into Datadog. The rest will be ignored. Host matching a given tag can also be excluded by adding `!` before the tag. e.x. `env:production,instance-type:c1.*,!region:us-east-1`.\n"
                    },
                    "hostTags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Array of tags (in the form `key:value`) to add to all hosts and metrics reporting through this integration.\n"
                    },
                    "metricsCollectionEnabled": {
                        "type": "string",
                        "description": "Whether Datadog collects metrics for this AWS account.\n"
                    },
                    "resourceCollectionEnabled": {
                        "type": "string",
                        "description": "Whether Datadog collects a standard set of resources from your AWS account.\n"
                    },
                    "roleName": {
                        "type": "string",
                        "description": "Your Datadog role delegation name.\n"
                    },
                    "secretAccessKey": {
                        "type": "string",
                        "description": "Your AWS secret access key. Only required if your AWS account is a GovCloud or China account.\n",
                        "secret": true
                    }
                },
                "type": "object"
            }
        },
        "datadog:aws/integrationLambdaArn:IntegrationLambdaArn": {
            "description": "Provides a Datadog - Amazon Web Services integration Lambda ARN resource. This can be used to create and manage the log collection Lambdas for an account.\n\nUpdate operations are currently not supported with datadog API so any change forces a new resource.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as datadog from \"@pulumi/datadog\";\n\n// Create a new Datadog - Amazon Web Services integration Lambda ARN\nconst mainCollector = new datadog.aws.IntegrationLambdaArn(\"mainCollector\", {\n    accountId: \"1234567890\",\n    lambdaArn: \"arn:aws:lambda:us-east-1:1234567890:function:datadog-forwarder-Forwarder\",\n});\n```\n```python\nimport pulumi\nimport pulumi_datadog as datadog\n\n# Create a new Datadog - Amazon Web Services integration Lambda ARN\nmain_collector = datadog.aws.IntegrationLambdaArn(\"mainCollector\",\n    account_id=\"1234567890\",\n    lambda_arn=\"arn:aws:lambda:us-east-1:1234567890:function:datadog-forwarder-Forwarder\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Datadog = Pulumi.Datadog;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    // Create a new Datadog - Amazon Web Services integration Lambda ARN\n    var mainCollector = new Datadog.Aws.IntegrationLambdaArn(\"mainCollector\", new()\n    {\n        AccountId = \"1234567890\",\n        LambdaArn = \"arn:aws:lambda:us-east-1:1234567890:function:datadog-forwarder-Forwarder\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-datadog/sdk/v4/go/datadog/aws\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aws.NewIntegrationLambdaArn(ctx, \"mainCollector\", \u0026aws.IntegrationLambdaArnArgs{\n\t\t\tAccountId: pulumi.String(\"1234567890\"),\n\t\t\tLambdaArn: pulumi.String(\"arn:aws:lambda:us-east-1:1234567890:function:datadog-forwarder-Forwarder\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.datadog.aws.IntegrationLambdaArn;\nimport com.pulumi.datadog.aws.IntegrationLambdaArnArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var mainCollector = new IntegrationLambdaArn(\"mainCollector\", IntegrationLambdaArnArgs.builder()        \n            .accountId(\"1234567890\")\n            .lambdaArn(\"arn:aws:lambda:us-east-1:1234567890:function:datadog-forwarder-Forwarder\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  # Create a new Datadog - Amazon Web Services integration Lambda ARN\n  mainCollector:\n    type: datadog:aws:IntegrationLambdaArn\n    properties:\n      accountId: '1234567890'\n      lambdaArn: arn:aws:lambda:us-east-1:1234567890:function:datadog-forwarder-Forwarder\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nAmazon Web Services Lambda ARN integrations can be imported using their account_id and lambda_arn separated with a space (` `).\n\n```sh\n $ pulumi import datadog:aws/integrationLambdaArn:IntegrationLambdaArn test \"1234567890 arn:aws:lambda:us-east-1:1234567890:function:datadog-forwarder-Forwarder\"\n```\n\n ",
            "properties": {
                "accountId": {
                    "type": "string",
                    "description": "Your AWS Account ID without dashes. If your account is a GovCloud or China account, specify the `access_key_id` here.\n"
                },
                "lambdaArn": {
                    "type": "string",
                    "description": "The ARN of the Datadog forwarder Lambda.\n"
                }
            },
            "required": [
                "accountId",
                "lambdaArn"
            ],
            "inputProperties": {
                "accountId": {
                    "type": "string",
                    "description": "Your AWS Account ID without dashes. If your account is a GovCloud or China account, specify the `access_key_id` here.\n",
                    "willReplaceOnChanges": true
                },
                "lambdaArn": {
                    "type": "string",
                    "description": "The ARN of the Datadog forwarder Lambda.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "accountId",
                "lambdaArn"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering IntegrationLambdaArn resources.\n",
                "properties": {
                    "accountId": {
                        "type": "string",
                        "description": "Your AWS Account ID without dashes. If your account is a GovCloud or China account, specify the `access_key_id` here.\n",
                        "willReplaceOnChanges": true
                    },
                    "lambdaArn": {
                        "type": "string",
                        "description": "The ARN of the Datadog forwarder Lambda.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "datadog:aws/integrationLogCollection:IntegrationLogCollection": {
            "description": "Provides a Datadog - Amazon Web Services integration log collection resource. This can be used to manage which AWS services logs are collected from for an account.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as datadog from \"@pulumi/datadog\";\n\n// Create a new Datadog - Amazon Web Services integration log collection\nconst main = new datadog.aws.IntegrationLogCollection(\"main\", {\n    accountId: \"1234567890\",\n    services: [\"lambda\"],\n});\n```\n```python\nimport pulumi\nimport pulumi_datadog as datadog\n\n# Create a new Datadog - Amazon Web Services integration log collection\nmain = datadog.aws.IntegrationLogCollection(\"main\",\n    account_id=\"1234567890\",\n    services=[\"lambda\"])\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Datadog = Pulumi.Datadog;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    // Create a new Datadog - Amazon Web Services integration log collection\n    var main = new Datadog.Aws.IntegrationLogCollection(\"main\", new()\n    {\n        AccountId = \"1234567890\",\n        Services = new[]\n        {\n            \"lambda\",\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-datadog/sdk/v4/go/datadog/aws\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aws.NewIntegrationLogCollection(ctx, \"main\", \u0026aws.IntegrationLogCollectionArgs{\n\t\t\tAccountId: pulumi.String(\"1234567890\"),\n\t\t\tServices: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"lambda\"),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.datadog.aws.IntegrationLogCollection;\nimport com.pulumi.datadog.aws.IntegrationLogCollectionArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var main = new IntegrationLogCollection(\"main\", IntegrationLogCollectionArgs.builder()        \n            .accountId(\"1234567890\")\n            .services(\"lambda\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  # Create a new Datadog - Amazon Web Services integration log collection\n  main:\n    type: datadog:aws:IntegrationLogCollection\n    properties:\n      accountId: '1234567890'\n      services:\n        - lambda\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nAmazon Web Services log collection integrations can be imported using the `account ID`.\n\n```sh\n $ pulumi import datadog:aws/integrationLogCollection:IntegrationLogCollection test 1234567890\n```\n\n ",
            "properties": {
                "accountId": {
                    "type": "string",
                    "description": "Your AWS Account ID without dashes. If your account is a GovCloud or China account, specify the `access_key_id` here.\n"
                },
                "services": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of services to collect logs from. See the [api docs](https://docs.datadoghq.com/api/v1/aws-logs-integration/#get-list-of-aws-log-ready-services) for more details on which services are supported.\n"
                }
            },
            "required": [
                "accountId",
                "services"
            ],
            "inputProperties": {
                "accountId": {
                    "type": "string",
                    "description": "Your AWS Account ID without dashes. If your account is a GovCloud or China account, specify the `access_key_id` here.\n",
                    "willReplaceOnChanges": true
                },
                "services": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of services to collect logs from. See the [api docs](https://docs.datadoghq.com/api/v1/aws-logs-integration/#get-list-of-aws-log-ready-services) for more details on which services are supported.\n"
                }
            },
            "requiredInputs": [
                "accountId",
                "services"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering IntegrationLogCollection resources.\n",
                "properties": {
                    "accountId": {
                        "type": "string",
                        "description": "Your AWS Account ID without dashes. If your account is a GovCloud or China account, specify the `access_key_id` here.\n",
                        "willReplaceOnChanges": true
                    },
                    "services": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of services to collect logs from. See the [api docs](https://docs.datadoghq.com/api/v1/aws-logs-integration/#get-list-of-aws-log-ready-services) for more details on which services are supported.\n"
                    }
                },
                "type": "object"
            }
        },
        "datadog:aws/integrationTagFilter:IntegrationTagFilter": {
            "description": "Provides a Datadog AWS tag filter resource. This can be used to create and manage Datadog AWS tag filters.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as datadog from \"@pulumi/datadog\";\n\n// Create a new Datadog - Amazon Web Services integration tag filter\nconst foo = new datadog.aws.IntegrationTagFilter(\"foo\", {\n    accountId: \"123456789010\",\n    namespace: \"sqs\",\n    tagFilterStr: \"key:value\",\n});\n```\n```python\nimport pulumi\nimport pulumi_datadog as datadog\n\n# Create a new Datadog - Amazon Web Services integration tag filter\nfoo = datadog.aws.IntegrationTagFilter(\"foo\",\n    account_id=\"123456789010\",\n    namespace=\"sqs\",\n    tag_filter_str=\"key:value\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Datadog = Pulumi.Datadog;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    // Create a new Datadog - Amazon Web Services integration tag filter\n    var foo = new Datadog.Aws.IntegrationTagFilter(\"foo\", new()\n    {\n        AccountId = \"123456789010\",\n        Namespace = \"sqs\",\n        TagFilterStr = \"key:value\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-datadog/sdk/v4/go/datadog/aws\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aws.NewIntegrationTagFilter(ctx, \"foo\", \u0026aws.IntegrationTagFilterArgs{\n\t\t\tAccountId:    pulumi.String(\"123456789010\"),\n\t\t\tNamespace:    pulumi.String(\"sqs\"),\n\t\t\tTagFilterStr: pulumi.String(\"key:value\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.datadog.aws.IntegrationTagFilter;\nimport com.pulumi.datadog.aws.IntegrationTagFilterArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var foo = new IntegrationTagFilter(\"foo\", IntegrationTagFilterArgs.builder()        \n            .accountId(\"123456789010\")\n            .namespace(\"sqs\")\n            .tagFilterStr(\"key:value\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  # Create a new Datadog - Amazon Web Services integration tag filter\n  foo:\n    type: datadog:aws:IntegrationTagFilter\n    properties:\n      accountId: '123456789010'\n      namespace: sqs\n      tagFilterStr: key:value\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nAmazon Web Services log filter resource can be imported using their account ID and namespace separated with a colon (:).\n\n```sh\n $ pulumi import datadog:aws/integrationTagFilter:IntegrationTagFilter foo ${account_id}:${namespace}\n```\n\n ",
            "properties": {
                "accountId": {
                    "type": "string",
                    "description": "Your AWS Account ID without dashes. If your account is a GovCloud or China account, specify the `access_key_id` here.\n"
                },
                "namespace": {
                    "type": "string",
                    "description": "The namespace associated with the tag filter entry. Valid values are `elb`, `application_elb`, `sqs`, `rds`, `custom`, `network_elb`, `lambda`.\n"
                },
                "tagFilterStr": {
                    "type": "string",
                    "description": "The tag filter string.\n"
                }
            },
            "required": [
                "accountId",
                "namespace",
                "tagFilterStr"
            ],
            "inputProperties": {
                "accountId": {
                    "type": "string",
                    "description": "Your AWS Account ID without dashes. If your account is a GovCloud or China account, specify the `access_key_id` here.\n"
                },
                "namespace": {
                    "type": "string",
                    "description": "The namespace associated with the tag filter entry. Valid values are `elb`, `application_elb`, `sqs`, `rds`, `custom`, `network_elb`, `lambda`.\n",
                    "willReplaceOnChanges": true
                },
                "tagFilterStr": {
                    "type": "string",
                    "description": "The tag filter string.\n"
                }
            },
            "requiredInputs": [
                "accountId",
                "namespace",
                "tagFilterStr"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering IntegrationTagFilter resources.\n",
                "properties": {
                    "accountId": {
                        "type": "string",
                        "description": "Your AWS Account ID without dashes. If your account is a GovCloud or China account, specify the `access_key_id` here.\n"
                    },
                    "namespace": {
                        "type": "string",
                        "description": "The namespace associated with the tag filter entry. Valid values are `elb`, `application_elb`, `sqs`, `rds`, `custom`, `network_elb`, `lambda`.\n",
                        "willReplaceOnChanges": true
                    },
                    "tagFilterStr": {
                        "type": "string",
                        "description": "The tag filter string.\n"
                    }
                },
                "type": "object"
            }
        },
        "datadog:azure/integration:Integration": {
            "description": "Provides a Datadog - Microsoft Azure integration resource. This can be used to create and manage the integrations.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as datadog from \"@pulumi/datadog\";\n\n// Create a new Datadog - Microsoft Azure integration\nconst sandbox = new datadog.azure.Integration(\"sandbox\", {\n    clientId: \"\u003cazure_client_id\u003e\",\n    clientSecret: \"\u003cazure_client_secret_key\u003e\",\n    hostFilters: \"examplefilter:true,example:true\",\n    tenantName: \"\u003cazure_tenant_name\u003e\",\n});\n```\n```python\nimport pulumi\nimport pulumi_datadog as datadog\n\n# Create a new Datadog - Microsoft Azure integration\nsandbox = datadog.azure.Integration(\"sandbox\",\n    client_id=\"\u003cazure_client_id\u003e\",\n    client_secret=\"\u003cazure_client_secret_key\u003e\",\n    host_filters=\"examplefilter:true,example:true\",\n    tenant_name=\"\u003cazure_tenant_name\u003e\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Datadog = Pulumi.Datadog;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    // Create a new Datadog - Microsoft Azure integration\n    var sandbox = new Datadog.Azure.Integration(\"sandbox\", new()\n    {\n        ClientId = \"\u003cazure_client_id\u003e\",\n        ClientSecret = \"\u003cazure_client_secret_key\u003e\",\n        HostFilters = \"examplefilter:true,example:true\",\n        TenantName = \"\u003cazure_tenant_name\u003e\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-datadog/sdk/v4/go/datadog/azure\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := azure.NewIntegration(ctx, \"sandbox\", \u0026azure.IntegrationArgs{\n\t\t\tClientId:     pulumi.String(\"\u003cazure_client_id\u003e\"),\n\t\t\tClientSecret: pulumi.String(\"\u003cazure_client_secret_key\u003e\"),\n\t\t\tHostFilters:  pulumi.String(\"examplefilter:true,example:true\"),\n\t\t\tTenantName:   pulumi.String(\"\u003cazure_tenant_name\u003e\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.datadog.azure.Integration;\nimport com.pulumi.datadog.azure.IntegrationArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var sandbox = new Integration(\"sandbox\", IntegrationArgs.builder()        \n            .clientId(\"\u003cazure_client_id\u003e\")\n            .clientSecret(\"\u003cazure_client_secret_key\u003e\")\n            .hostFilters(\"examplefilter:true,example:true\")\n            .tenantName(\"\u003cazure_tenant_name\u003e\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  # Create a new Datadog - Microsoft Azure integration\n  sandbox:\n    type: datadog:azure:Integration\n    properties:\n      clientId: \u003cazure_client_id\u003e\n      clientSecret: \u003cazure_client_secret_key\u003e\n      hostFilters: examplefilter:true,example:true\n      tenantName: \u003cazure_tenant_name\u003e\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nMicrosoft Azure integrations can be imported using their `tenant name` and `client` id separated with a colon (`:`).\n\n```sh\n $ pulumi import datadog:azure/integration:Integration sandbox ${tenant_name}:${client_id}\n```\n\n ",
            "properties": {
                "automute": {
                    "type": "boolean",
                    "description": "Silence monitors for expected Azure VM shutdowns.\n"
                },
                "clientId": {
                    "type": "string",
                    "description": "Your Azure web application ID.\n"
                },
                "clientSecret": {
                    "type": "string",
                    "description": "(Required for Initial Creation) Your Azure web application secret key.\n",
                    "secret": true
                },
                "hostFilters": {
                    "type": "string",
                    "description": "String of host tag(s) (in the form `key:value,key:value`) defines a filter that Datadog will use when collecting metrics from Azure. Limit the Azure instances that are pulled into Datadog by using tags. Only hosts that match one of the defined tags are imported into Datadog. e.x. `env:production,deploymentgroup:red`\n"
                },
                "tenantName": {
                    "type": "string",
                    "description": "Your Azure Active Directory ID.\n"
                }
            },
            "required": [
                "clientId",
                "clientSecret",
                "tenantName"
            ],
            "inputProperties": {
                "automute": {
                    "type": "boolean",
                    "description": "Silence monitors for expected Azure VM shutdowns.\n"
                },
                "clientId": {
                    "type": "string",
                    "description": "Your Azure web application ID.\n"
                },
                "clientSecret": {
                    "type": "string",
                    "description": "(Required for Initial Creation) Your Azure web application secret key.\n",
                    "secret": true
                },
                "hostFilters": {
                    "type": "string",
                    "description": "String of host tag(s) (in the form `key:value,key:value`) defines a filter that Datadog will use when collecting metrics from Azure. Limit the Azure instances that are pulled into Datadog by using tags. Only hosts that match one of the defined tags are imported into Datadog. e.x. `env:production,deploymentgroup:red`\n"
                },
                "tenantName": {
                    "type": "string",
                    "description": "Your Azure Active Directory ID.\n"
                }
            },
            "requiredInputs": [
                "clientId",
                "clientSecret",
                "tenantName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Integration resources.\n",
                "properties": {
                    "automute": {
                        "type": "boolean",
                        "description": "Silence monitors for expected Azure VM shutdowns.\n"
                    },
                    "clientId": {
                        "type": "string",
                        "description": "Your Azure web application ID.\n"
                    },
                    "clientSecret": {
                        "type": "string",
                        "description": "(Required for Initial Creation) Your Azure web application secret key.\n",
                        "secret": true
                    },
                    "hostFilters": {
                        "type": "string",
                        "description": "String of host tag(s) (in the form `key:value,key:value`) defines a filter that Datadog will use when collecting metrics from Azure. Limit the Azure instances that are pulled into Datadog by using tags. Only hosts that match one of the defined tags are imported into Datadog. e.x. `env:production,deploymentgroup:red`\n"
                    },
                    "tenantName": {
                        "type": "string",
                        "description": "Your Azure Active Directory ID.\n"
                    }
                },
                "type": "object"
            }
        },
        "datadog:cloudflare/integrationAccount:IntegrationAccount": {
            "description": "Provides a Datadog IntegrationCloudflareAccount resource. This can be used to create and manage Datadog integration_cloudflare_account.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as datadog from \"@pulumi/datadog\";\n\nconst foo = new datadog.cloudflare.IntegrationAccount(\"foo\", {\n    apiKey: \"12345678910abc\",\n    email: \"test-email@example.com\",\n    name: \"test-name\",\n});\n```\n```python\nimport pulumi\nimport pulumi_datadog as datadog\n\nfoo = datadog.cloudflare.IntegrationAccount(\"foo\",\n    api_key=\"12345678910abc\",\n    email=\"test-email@example.com\",\n    name=\"test-name\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Datadog = Pulumi.Datadog;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var foo = new Datadog.Cloudflare.IntegrationAccount(\"foo\", new()\n    {\n        ApiKey = \"12345678910abc\",\n        Email = \"test-email@example.com\",\n        Name = \"test-name\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-datadog/sdk/v4/go/datadog/cloudflare\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := cloudflare.NewIntegrationAccount(ctx, \"foo\", \u0026cloudflare.IntegrationAccountArgs{\n\t\t\tApiKey: pulumi.String(\"12345678910abc\"),\n\t\t\tEmail:  pulumi.String(\"test-email@example.com\"),\n\t\t\tName:   pulumi.String(\"test-name\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.datadog.cloudflare.IntegrationAccount;\nimport com.pulumi.datadog.cloudflare.IntegrationAccountArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var foo = new IntegrationAccount(\"foo\", IntegrationAccountArgs.builder()        \n            .apiKey(\"12345678910abc\")\n            .email(\"test-email@example.com\")\n            .name(\"test-name\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  foo:\n    type: datadog:cloudflare:IntegrationAccount\n    properties:\n      apiKey: 12345678910abc\n      email: test-email@example.com\n      name: test-name\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import datadog:cloudflare/integrationAccount:IntegrationAccount new_list \"\"\n```\n\n ",
            "properties": {
                "apiKey": {
                    "type": "string",
                    "description": "The API key (or token) for the Cloudflare account.\n",
                    "secret": true
                },
                "email": {
                    "type": "string",
                    "description": "The email associated with the Cloudflare account. If an API key is provided (and not a token), this field is also required.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the Cloudflare account.\n"
                }
            },
            "required": [
                "apiKey",
                "name"
            ],
            "inputProperties": {
                "apiKey": {
                    "type": "string",
                    "description": "The API key (or token) for the Cloudflare account.\n",
                    "secret": true
                },
                "email": {
                    "type": "string",
                    "description": "The email associated with the Cloudflare account. If an API key is provided (and not a token), this field is also required.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the Cloudflare account.\n"
                }
            },
            "requiredInputs": [
                "apiKey",
                "name"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering IntegrationAccount resources.\n",
                "properties": {
                    "apiKey": {
                        "type": "string",
                        "description": "The API key (or token) for the Cloudflare account.\n",
                        "secret": true
                    },
                    "email": {
                        "type": "string",
                        "description": "The email associated with the Cloudflare account. If an API key is provided (and not a token), this field is also required.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the Cloudflare account.\n"
                    }
                },
                "type": "object"
            }
        },
        "datadog:confluent/integrationAccount:IntegrationAccount": {
            "description": "Provides a Datadog IntegrationConfluentAccount resource. This can be used to create and manage Datadog integration_confluent_account.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as datadog from \"@pulumi/datadog\";\n\nconst foo = new datadog.confluent.IntegrationAccount(\"foo\", {\n    apiKey: \"TESTAPIKEY123\",\n    apiSecret: \"test-api-secret-123\",\n    tags: [\n        \"mytag\",\n        \"mytag2:myvalue\",\n    ],\n});\n```\n```python\nimport pulumi\nimport pulumi_datadog as datadog\n\nfoo = datadog.confluent.IntegrationAccount(\"foo\",\n    api_key=\"TESTAPIKEY123\",\n    api_secret=\"test-api-secret-123\",\n    tags=[\n        \"mytag\",\n        \"mytag2:myvalue\",\n    ])\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Datadog = Pulumi.Datadog;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var foo = new Datadog.Confluent.IntegrationAccount(\"foo\", new()\n    {\n        ApiKey = \"TESTAPIKEY123\",\n        ApiSecret = \"test-api-secret-123\",\n        Tags = new[]\n        {\n            \"mytag\",\n            \"mytag2:myvalue\",\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-datadog/sdk/v4/go/datadog/confluent\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := confluent.NewIntegrationAccount(ctx, \"foo\", \u0026confluent.IntegrationAccountArgs{\n\t\t\tApiKey:    pulumi.String(\"TESTAPIKEY123\"),\n\t\t\tApiSecret: pulumi.String(\"test-api-secret-123\"),\n\t\t\tTags: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"mytag\"),\n\t\t\t\tpulumi.String(\"mytag2:myvalue\"),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.datadog.confluent.IntegrationAccount;\nimport com.pulumi.datadog.confluent.IntegrationAccountArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var foo = new IntegrationAccount(\"foo\", IntegrationAccountArgs.builder()        \n            .apiKey(\"TESTAPIKEY123\")\n            .apiSecret(\"test-api-secret-123\")\n            .tags(            \n                \"mytag\",\n                \"mytag2:myvalue\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  foo:\n    type: datadog:confluent:IntegrationAccount\n    properties:\n      apiKey: TESTAPIKEY123\n      apiSecret: test-api-secret-123\n      tags:\n        - mytag\n        - mytag2:myvalue\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import datadog:confluent/integrationAccount:IntegrationAccount new_list \"foobar\"\n```\n\n ",
            "properties": {
                "apiKey": {
                    "type": "string",
                    "description": "The API key associated with your Confluent account.\n"
                },
                "apiSecret": {
                    "type": "string",
                    "description": "The API secret associated with your Confluent account.\n",
                    "secret": true
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of strings representing tags. Can be a single key, or key-value pairs separated by a colon.\n"
                }
            },
            "required": [
                "apiKey",
                "apiSecret"
            ],
            "inputProperties": {
                "apiKey": {
                    "type": "string",
                    "description": "The API key associated with your Confluent account.\n"
                },
                "apiSecret": {
                    "type": "string",
                    "description": "The API secret associated with your Confluent account.\n",
                    "secret": true
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of strings representing tags. Can be a single key, or key-value pairs separated by a colon.\n"
                }
            },
            "requiredInputs": [
                "apiKey",
                "apiSecret"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering IntegrationAccount resources.\n",
                "properties": {
                    "apiKey": {
                        "type": "string",
                        "description": "The API key associated with your Confluent account.\n"
                    },
                    "apiSecret": {
                        "type": "string",
                        "description": "The API secret associated with your Confluent account.\n",
                        "secret": true
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of strings representing tags. Can be a single key, or key-value pairs separated by a colon.\n"
                    }
                },
                "type": "object"
            }
        },
        "datadog:confluent/integrationResource:IntegrationResource": {
            "description": "Provides a Datadog IntegrationConfluentResource resource. This can be used to create and manage Datadog integration_confluent_resource.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as datadog from \"@pulumi/datadog\";\n\nconst fooIntegrationAccount = new datadog.confluent.IntegrationAccount(\"fooIntegrationAccount\", {\n    apiKey: \"TESTAPIKEY123\",\n    apiSecret: \"test-api-secret-123\",\n    tags: [\n        \"mytag\",\n        \"mytag2:myvalue\",\n    ],\n});\n// Create new integration_confluent_resource resource\nconst fooIntegrationResource = new datadog.confluent.IntegrationResource(\"fooIntegrationResource\", {\n    accountId: fooIntegrationAccount.id,\n    resourceId: \"123456\",\n    resourceType: \"kafka\",\n    tags: [\n        \"mytag\",\n        \"mytag2:myvalue\",\n    ],\n});\n```\n```python\nimport pulumi\nimport pulumi_datadog as datadog\n\nfoo_integration_account = datadog.confluent.IntegrationAccount(\"fooIntegrationAccount\",\n    api_key=\"TESTAPIKEY123\",\n    api_secret=\"test-api-secret-123\",\n    tags=[\n        \"mytag\",\n        \"mytag2:myvalue\",\n    ])\n# Create new integration_confluent_resource resource\nfoo_integration_resource = datadog.confluent.IntegrationResource(\"fooIntegrationResource\",\n    account_id=foo_integration_account.id,\n    resource_id=\"123456\",\n    resource_type=\"kafka\",\n    tags=[\n        \"mytag\",\n        \"mytag2:myvalue\",\n    ])\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Datadog = Pulumi.Datadog;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var fooIntegrationAccount = new Datadog.Confluent.IntegrationAccount(\"fooIntegrationAccount\", new()\n    {\n        ApiKey = \"TESTAPIKEY123\",\n        ApiSecret = \"test-api-secret-123\",\n        Tags = new[]\n        {\n            \"mytag\",\n            \"mytag2:myvalue\",\n        },\n    });\n\n    // Create new integration_confluent_resource resource\n    var fooIntegrationResource = new Datadog.Confluent.IntegrationResource(\"fooIntegrationResource\", new()\n    {\n        AccountId = fooIntegrationAccount.Id,\n        ResourceId = \"123456\",\n        ResourceType = \"kafka\",\n        Tags = new[]\n        {\n            \"mytag\",\n            \"mytag2:myvalue\",\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-datadog/sdk/v4/go/datadog/confluent\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tfooIntegrationAccount, err := confluent.NewIntegrationAccount(ctx, \"fooIntegrationAccount\", \u0026confluent.IntegrationAccountArgs{\n\t\t\tApiKey:    pulumi.String(\"TESTAPIKEY123\"),\n\t\t\tApiSecret: pulumi.String(\"test-api-secret-123\"),\n\t\t\tTags: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"mytag\"),\n\t\t\t\tpulumi.String(\"mytag2:myvalue\"),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = confluent.NewIntegrationResource(ctx, \"fooIntegrationResource\", \u0026confluent.IntegrationResourceArgs{\n\t\t\tAccountId:    fooIntegrationAccount.ID(),\n\t\t\tResourceId:   pulumi.String(\"123456\"),\n\t\t\tResourceType: pulumi.String(\"kafka\"),\n\t\t\tTags: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"mytag\"),\n\t\t\t\tpulumi.String(\"mytag2:myvalue\"),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.datadog.confluent.IntegrationAccount;\nimport com.pulumi.datadog.confluent.IntegrationAccountArgs;\nimport com.pulumi.datadog.confluent.IntegrationResource;\nimport com.pulumi.datadog.confluent.IntegrationResourceArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var fooIntegrationAccount = new IntegrationAccount(\"fooIntegrationAccount\", IntegrationAccountArgs.builder()        \n            .apiKey(\"TESTAPIKEY123\")\n            .apiSecret(\"test-api-secret-123\")\n            .tags(            \n                \"mytag\",\n                \"mytag2:myvalue\")\n            .build());\n\n        var fooIntegrationResource = new IntegrationResource(\"fooIntegrationResource\", IntegrationResourceArgs.builder()        \n            .accountId(fooIntegrationAccount.id())\n            .resourceId(\"123456\")\n            .resourceType(\"kafka\")\n            .tags(            \n                \"mytag\",\n                \"mytag2:myvalue\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  fooIntegrationAccount:\n    type: datadog:confluent:IntegrationAccount\n    properties:\n      apiKey: TESTAPIKEY123\n      apiSecret: test-api-secret-123\n      tags:\n        - mytag\n        - mytag2:myvalue\n  # Create new integration_confluent_resource resource\n  fooIntegrationResource:\n    type: datadog:confluent:IntegrationResource\n    properties:\n      accountId: ${fooIntegrationAccount.id}\n      resourceId: '123456'\n      resourceType: kafka\n      tags:\n        - mytag\n        - mytag2:myvalue\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import datadog:confluent/integrationResource:IntegrationResource new_list \"confluent_account_id:confluent_resource_id\"\n```\n\n ",
            "properties": {
                "accountId": {
                    "type": "string",
                    "description": "Confluent Account ID.\n"
                },
                "resourceId": {
                    "type": "string",
                    "description": "The ID associated with a Confluent resource.\n"
                },
                "resourceType": {
                    "type": "string",
                    "description": "The resource type of the Resource. Can be `kafka`, `connector`, `ksql`, or `schema_registry`.\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of strings representing tags. Can be a single key, or key-value pairs separated by a colon.\n"
                }
            },
            "required": [
                "accountId",
                "resourceId"
            ],
            "inputProperties": {
                "accountId": {
                    "type": "string",
                    "description": "Confluent Account ID.\n"
                },
                "resourceId": {
                    "type": "string",
                    "description": "The ID associated with a Confluent resource.\n"
                },
                "resourceType": {
                    "type": "string",
                    "description": "The resource type of the Resource. Can be `kafka`, `connector`, `ksql`, or `schema_registry`.\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of strings representing tags. Can be a single key, or key-value pairs separated by a colon.\n"
                }
            },
            "requiredInputs": [
                "accountId",
                "resourceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering IntegrationResource resources.\n",
                "properties": {
                    "accountId": {
                        "type": "string",
                        "description": "Confluent Account ID.\n"
                    },
                    "resourceId": {
                        "type": "string",
                        "description": "The ID associated with a Confluent resource.\n"
                    },
                    "resourceType": {
                        "type": "string",
                        "description": "The resource type of the Resource. Can be `kafka`, `connector`, `ksql`, or `schema_registry`.\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of strings representing tags. Can be a single key, or key-value pairs separated by a colon.\n"
                    }
                },
                "type": "object"
            }
        },
        "datadog:fastly/integrationAccount:IntegrationAccount": {
            "description": "Provides a Datadog IntegrationFastlyAccount resource. This can be used to create and manage Datadog integration_fastly_account.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as datadog from \"@pulumi/datadog\";\n\nconst foo = new datadog.fastly.IntegrationAccount(\"foo\", {\n    apiKey: \"ABCDEFG123\",\n    name: \"test-name\",\n});\n```\n```python\nimport pulumi\nimport pulumi_datadog as datadog\n\nfoo = datadog.fastly.IntegrationAccount(\"foo\",\n    api_key=\"ABCDEFG123\",\n    name=\"test-name\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Datadog = Pulumi.Datadog;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var foo = new Datadog.Fastly.IntegrationAccount(\"foo\", new()\n    {\n        ApiKey = \"ABCDEFG123\",\n        Name = \"test-name\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-datadog/sdk/v4/go/datadog/fastly\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := fastly.NewIntegrationAccount(ctx, \"foo\", \u0026fastly.IntegrationAccountArgs{\n\t\t\tApiKey: pulumi.String(\"ABCDEFG123\"),\n\t\t\tName:   pulumi.String(\"test-name\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.datadog.fastly.IntegrationAccount;\nimport com.pulumi.datadog.fastly.IntegrationAccountArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var foo = new IntegrationAccount(\"foo\", IntegrationAccountArgs.builder()        \n            .apiKey(\"ABCDEFG123\")\n            .name(\"test-name\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  foo:\n    type: datadog:fastly:IntegrationAccount\n    properties:\n      apiKey: ABCDEFG123\n      name: test-name\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import datadog:fastly/integrationAccount:IntegrationAccount new_list \"a8f5f167f44f4964e6c998dee827110c\"\n```\n\n ",
            "properties": {
                "apiKey": {
                    "type": "string",
                    "description": "The API key for the Fastly account.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the Fastly account.\n"
                }
            },
            "required": [
                "apiKey",
                "name"
            ],
            "inputProperties": {
                "apiKey": {
                    "type": "string",
                    "description": "The API key for the Fastly account.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the Fastly account.\n"
                }
            },
            "requiredInputs": [
                "apiKey",
                "name"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering IntegrationAccount resources.\n",
                "properties": {
                    "apiKey": {
                        "type": "string",
                        "description": "The API key for the Fastly account.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the Fastly account.\n"
                    }
                },
                "type": "object"
            }
        },
        "datadog:fastly/integrationService:IntegrationService": {
            "description": "Provides a Datadog IntegrationFastlyService resource. This can be used to create and manage Datadog integration_fastly_service.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as datadog from \"@pulumi/datadog\";\n\nconst fooIntegrationAccount = new datadog.fastly.IntegrationAccount(\"fooIntegrationAccount\", {\n    apiKey: \"ABCDEFG123\",\n    name: \"test-name\",\n});\n// Create new integration_fastly_service resource\nconst fooIntegrationService = new datadog.fastly.IntegrationService(\"fooIntegrationService\", {\n    accountId: fooIntegrationAccount.id,\n    tags: [\n        \"mytag\",\n        \"mytag2:myvalue\",\n    ],\n    serviceId: \"my-service-id\",\n});\n```\n```python\nimport pulumi\nimport pulumi_datadog as datadog\n\nfoo_integration_account = datadog.fastly.IntegrationAccount(\"fooIntegrationAccount\",\n    api_key=\"ABCDEFG123\",\n    name=\"test-name\")\n# Create new integration_fastly_service resource\nfoo_integration_service = datadog.fastly.IntegrationService(\"fooIntegrationService\",\n    account_id=foo_integration_account.id,\n    tags=[\n        \"mytag\",\n        \"mytag2:myvalue\",\n    ],\n    service_id=\"my-service-id\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Datadog = Pulumi.Datadog;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var fooIntegrationAccount = new Datadog.Fastly.IntegrationAccount(\"fooIntegrationAccount\", new()\n    {\n        ApiKey = \"ABCDEFG123\",\n        Name = \"test-name\",\n    });\n\n    // Create new integration_fastly_service resource\n    var fooIntegrationService = new Datadog.Fastly.IntegrationService(\"fooIntegrationService\", new()\n    {\n        AccountId = fooIntegrationAccount.Id,\n        Tags = new[]\n        {\n            \"mytag\",\n            \"mytag2:myvalue\",\n        },\n        ServiceId = \"my-service-id\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-datadog/sdk/v4/go/datadog/fastly\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tfooIntegrationAccount, err := fastly.NewIntegrationAccount(ctx, \"fooIntegrationAccount\", \u0026fastly.IntegrationAccountArgs{\n\t\t\tApiKey: pulumi.String(\"ABCDEFG123\"),\n\t\t\tName:   pulumi.String(\"test-name\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = fastly.NewIntegrationService(ctx, \"fooIntegrationService\", \u0026fastly.IntegrationServiceArgs{\n\t\t\tAccountId: fooIntegrationAccount.ID(),\n\t\t\tTags: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"mytag\"),\n\t\t\t\tpulumi.String(\"mytag2:myvalue\"),\n\t\t\t},\n\t\t\tServiceId: pulumi.String(\"my-service-id\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.datadog.fastly.IntegrationAccount;\nimport com.pulumi.datadog.fastly.IntegrationAccountArgs;\nimport com.pulumi.datadog.fastly.IntegrationService;\nimport com.pulumi.datadog.fastly.IntegrationServiceArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var fooIntegrationAccount = new IntegrationAccount(\"fooIntegrationAccount\", IntegrationAccountArgs.builder()        \n            .apiKey(\"ABCDEFG123\")\n            .name(\"test-name\")\n            .build());\n\n        var fooIntegrationService = new IntegrationService(\"fooIntegrationService\", IntegrationServiceArgs.builder()        \n            .accountId(fooIntegrationAccount.id())\n            .tags(            \n                \"mytag\",\n                \"mytag2:myvalue\")\n            .serviceId(\"my-service-id\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  fooIntegrationAccount:\n    type: datadog:fastly:IntegrationAccount\n    properties:\n      apiKey: ABCDEFG123\n      name: test-name\n  # Create new integration_fastly_service resource\n  fooIntegrationService:\n    type: datadog:fastly:IntegrationService\n    properties:\n      accountId: ${fooIntegrationAccount.id}\n      tags:\n        - mytag\n        - mytag2:myvalue\n      serviceId: my-service-id\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import datadog:fastly/integrationService:IntegrationService new_list \"service-id\"\n```\n\n ",
            "properties": {
                "accountId": {
                    "type": "string",
                    "description": "Fastly Account id.\n"
                },
                "serviceId": {
                    "type": "string",
                    "description": "The ID of the Fastly service.\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tags for the Fastly service.\n"
                }
            },
            "required": [
                "serviceId"
            ],
            "inputProperties": {
                "accountId": {
                    "type": "string",
                    "description": "Fastly Account id.\n"
                },
                "serviceId": {
                    "type": "string",
                    "description": "The ID of the Fastly service.\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tags for the Fastly service.\n"
                }
            },
            "requiredInputs": [
                "serviceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering IntegrationService resources.\n",
                "properties": {
                    "accountId": {
                        "type": "string",
                        "description": "Fastly Account id.\n"
                    },
                    "serviceId": {
                        "type": "string",
                        "description": "The ID of the Fastly service.\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of tags for the Fastly service.\n"
                    }
                },
                "type": "object"
            }
        },
        "datadog:gcp/integration:Integration": {
            "description": "Provides a Datadog - Google Cloud Platform integration resource. This can be used to create and manage Datadog - Google Cloud Platform integration.\n\n\n## Import\n\nGoogle Cloud Platform integrations can be imported using their project ID, e.g.\n\n```sh\n $ pulumi import datadog:gcp/integration:Integration awesome_gcp_project_integration project_id\n```\n\n ",
            "properties": {
                "automute": {
                    "type": "boolean",
                    "description": "Silence monitors for expected GCE instance shutdowns.\n"
                },
                "clientEmail": {
                    "type": "string",
                    "description": "Your email found in your JSON service account key.\n"
                },
                "clientId": {
                    "type": "string",
                    "description": "Your ID found in your JSON service account key.\n"
                },
                "cspmResourceCollectionEnabled": {
                    "type": "boolean",
                    "description": "Whether Datadog collects cloud security posture management resources from your GCP project.\n"
                },
                "hostFilters": {
                    "type": "string",
                    "description": "Limit the GCE instances that are pulled into Datadog by using tags. Only hosts that match one of the defined tags are imported into Datadog.\n"
                },
                "privateKey": {
                    "type": "string",
                    "description": "Your private key name found in your JSON service account key.\n",
                    "secret": true
                },
                "privateKeyId": {
                    "type": "string",
                    "description": "Your private key ID found in your JSON service account key.\n"
                },
                "projectId": {
                    "type": "string",
                    "description": "Your Google Cloud project ID found in your JSON service account key.\n"
                }
            },
            "required": [
                "clientEmail",
                "clientId",
                "privateKey",
                "privateKeyId",
                "projectId"
            ],
            "inputProperties": {
                "automute": {
                    "type": "boolean",
                    "description": "Silence monitors for expected GCE instance shutdowns.\n"
                },
                "clientEmail": {
                    "type": "string",
                    "description": "Your email found in your JSON service account key.\n",
                    "willReplaceOnChanges": true
                },
                "clientId": {
                    "type": "string",
                    "description": "Your ID found in your JSON service account key.\n",
                    "willReplaceOnChanges": true
                },
                "cspmResourceCollectionEnabled": {
                    "type": "boolean",
                    "description": "Whether Datadog collects cloud security posture management resources from your GCP project.\n"
                },
                "hostFilters": {
                    "type": "string",
                    "description": "Limit the GCE instances that are pulled into Datadog by using tags. Only hosts that match one of the defined tags are imported into Datadog.\n"
                },
                "privateKey": {
                    "type": "string",
                    "description": "Your private key name found in your JSON service account key.\n",
                    "secret": true,
                    "willReplaceOnChanges": true
                },
                "privateKeyId": {
                    "type": "string",
                    "description": "Your private key ID found in your JSON service account key.\n",
                    "willReplaceOnChanges": true
                },
                "projectId": {
                    "type": "string",
                    "description": "Your Google Cloud project ID found in your JSON service account key.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "clientEmail",
                "clientId",
                "privateKey",
                "privateKeyId",
                "projectId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Integration resources.\n",
                "properties": {
                    "automute": {
                        "type": "boolean",
                        "description": "Silence monitors for expected GCE instance shutdowns.\n"
                    },
                    "clientEmail": {
                        "type": "string",
                        "description": "Your email found in your JSON service account key.\n",
                        "willReplaceOnChanges": true
                    },
                    "clientId": {
                        "type": "string",
                        "description": "Your ID found in your JSON service account key.\n",
                        "willReplaceOnChanges": true
                    },
                    "cspmResourceCollectionEnabled": {
                        "type": "boolean",
                        "description": "Whether Datadog collects cloud security posture management resources from your GCP project.\n"
                    },
                    "hostFilters": {
                        "type": "string",
                        "description": "Limit the GCE instances that are pulled into Datadog by using tags. Only hosts that match one of the defined tags are imported into Datadog.\n"
                    },
                    "privateKey": {
                        "type": "string",
                        "description": "Your private key name found in your JSON service account key.\n",
                        "secret": true,
                        "willReplaceOnChanges": true
                    },
                    "privateKeyId": {
                        "type": "string",
                        "description": "Your private key ID found in your JSON service account key.\n",
                        "willReplaceOnChanges": true
                    },
                    "projectId": {
                        "type": "string",
                        "description": "Your Google Cloud project ID found in your JSON service account key.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "datadog:gcp/integrationSts:IntegrationSts": {
            "description": "Provides a Datadog Integration GCP Sts resource. This can be used to create and manage Datadog - Google Cloud Platform integration.\n\n\n## Import\n\n\n\n```sh\n $ pulumi import datadog:gcp/integrationSts:IntegrationSts foo \"9c303af3-b963-45e0-8c8f-469b9e1a213f\"\n```\n\n ",
            "properties": {
                "automute": {
                    "type": "boolean",
                    "description": "Silence monitors for expected GCE instance shutdowns.\n"
                },
                "clientEmail": {
                    "type": "string",
                    "description": "Your service account email address.\n"
                },
                "delegateAccountEmail": {
                    "type": "string",
                    "description": "Datadog's STS Delegate Email.\n"
                },
                "hostFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Your Host Filters.\n"
                },
                "isCspmEnabled": {
                    "type": "boolean",
                    "description": "When enabled, Datadog performs configuration checks across your Google Cloud environment by continuously scanning every resource.\n"
                }
            },
            "required": [
                "automute",
                "clientEmail",
                "delegateAccountEmail",
                "isCspmEnabled"
            ],
            "inputProperties": {
                "automute": {
                    "type": "boolean",
                    "description": "Silence monitors for expected GCE instance shutdowns.\n"
                },
                "clientEmail": {
                    "type": "string",
                    "description": "Your service account email address.\n"
                },
                "hostFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Your Host Filters.\n"
                },
                "isCspmEnabled": {
                    "type": "boolean",
                    "description": "When enabled, Datadog performs configuration checks across your Google Cloud environment by continuously scanning every resource.\n"
                }
            },
            "requiredInputs": [
                "clientEmail"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering IntegrationSts resources.\n",
                "properties": {
                    "automute": {
                        "type": "boolean",
                        "description": "Silence monitors for expected GCE instance shutdowns.\n"
                    },
                    "clientEmail": {
                        "type": "string",
                        "description": "Your service account email address.\n"
                    },
                    "delegateAccountEmail": {
                        "type": "string",
                        "description": "Datadog's STS Delegate Email.\n"
                    },
                    "hostFilters": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Your Host Filters.\n"
                    },
                    "isCspmEnabled": {
                        "type": "boolean",
                        "description": "When enabled, Datadog performs configuration checks across your Google Cloud environment by continuously scanning every resource.\n"
                    }
                },
                "type": "object"
            }
        },
        "datadog:index/apiKey:ApiKey": {
            "description": "Provides a Datadog API Key resource. This can be used to create and manage Datadog API Keys.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as datadog from \"@pulumi/datadog\";\n\n// Create a new Datadog API Key\nconst foo = new datadog.ApiKey(\"foo\", {name: \"foo-application\"});\n```\n```python\nimport pulumi\nimport pulumi_datadog as datadog\n\n# Create a new Datadog API Key\nfoo = datadog.ApiKey(\"foo\", name=\"foo-application\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Datadog = Pulumi.Datadog;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    // Create a new Datadog API Key\n    var foo = new Datadog.ApiKey(\"foo\", new()\n    {\n        Name = \"foo-application\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-datadog/sdk/v4/go/datadog\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := datadog.NewApiKey(ctx, \"foo\", \u0026datadog.ApiKeyArgs{\n\t\t\tName: pulumi.String(\"foo-application\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.datadog.ApiKey;\nimport com.pulumi.datadog.ApiKeyArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var foo = new ApiKey(\"foo\", ApiKeyArgs.builder()        \n            .name(\"foo-application\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  # Create a new Datadog API Key\n  foo:\n    type: datadog:ApiKey\n    properties:\n      name: foo-application\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import datadog:index/apiKey:ApiKey foo 11111111-2222-3333-4444-555555555555\n```\n\n ",
            "properties": {
                "key": {
                    "type": "string",
                    "description": "The value of the API Key.\n",
                    "secret": true
                },
                "name": {
                    "type": "string",
                    "description": "Name for API Key.\n"
                }
            },
            "required": [
                "key",
                "name"
            ],
            "inputProperties": {
                "name": {
                    "type": "string",
                    "description": "Name for API Key.\n"
                }
            },
            "requiredInputs": [
                "name"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ApiKey resources.\n",
                "properties": {
                    "key": {
                        "type": "string",
                        "description": "The value of the API Key.\n",
                        "secret": true
                    },
                    "name": {
                        "type": "string",
                        "description": "Name for API Key.\n"
                    }
                },
                "type": "object"
            }
        },
        "datadog:index/applicationKey:ApplicationKey": {
            "description": "Provides a Datadog Application Key resource. This can be used to create and manage Datadog Application Keys.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as datadog from \"@pulumi/datadog\";\n\n// Create a new Datadog Application Key\nconst foo = new datadog.ApplicationKey(\"foo\", {name: \"foo-application\"});\n```\n```python\nimport pulumi\nimport pulumi_datadog as datadog\n\n# Create a new Datadog Application Key\nfoo = datadog.ApplicationKey(\"foo\", name=\"foo-application\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Datadog = Pulumi.Datadog;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    // Create a new Datadog Application Key\n    var foo = new Datadog.ApplicationKey(\"foo\", new()\n    {\n        Name = \"foo-application\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-datadog/sdk/v4/go/datadog\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := datadog.NewApplicationKey(ctx, \"foo\", \u0026datadog.ApplicationKeyArgs{\n\t\t\tName: pulumi.String(\"foo-application\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.datadog.ApplicationKey;\nimport com.pulumi.datadog.ApplicationKeyArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var foo = new ApplicationKey(\"foo\", ApplicationKeyArgs.builder()        \n            .name(\"foo-application\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  # Create a new Datadog Application Key\n  foo:\n    type: datadog:ApplicationKey\n    properties:\n      name: foo-application\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import datadog:index/applicationKey:ApplicationKey foo 11111111-2222-3333-4444-555555555555\n```\n\n ",
            "properties": {
                "key": {
                    "type": "string",
                    "description": "The value of the Application Key.\n",
                    "secret": true
                },
                "name": {
                    "type": "string",
                    "description": "Name for Application Key.\n"
                }
            },
            "required": [
                "key",
                "name"
            ],
            "inputProperties": {
                "name": {
                    "type": "string",
                    "description": "Name for Application Key.\n"
                }
            },
            "requiredInputs": [
                "name"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ApplicationKey resources.\n",
                "properties": {
                    "key": {
                        "type": "string",
                        "description": "The value of the Application Key.\n",
                        "secret": true
                    },
                    "name": {
                        "type": "string",
                        "description": "Name for Application Key.\n"
                    }
                },
                "type": "object"
            }
        },
        "datadog:index/authnMapping:AuthnMapping": {
            "description": "Provides a Datadog AuthN Mappings resource. This feature lets you automatically assign roles to users based on their SAML attributes.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as datadog from \"@pulumi/datadog\";\n\nconst roRole = datadog.getRole({\n    filter: \"Datadog Read Only Role\",\n});\n// Create a new AuthN mapping\nconst devRoRoleMapping = new datadog.AuthnMapping(\"devRoRoleMapping\", {\n    key: \"Member-of\",\n    value: \"Development\",\n    role: roRole.then(roRole =\u003e roRole.id),\n});\n```\n```python\nimport pulumi\nimport pulumi_datadog as datadog\n\nro_role = datadog.get_role(filter=\"Datadog Read Only Role\")\n# Create a new AuthN mapping\ndev_ro_role_mapping = datadog.AuthnMapping(\"devRoRoleMapping\",\n    key=\"Member-of\",\n    value=\"Development\",\n    role=ro_role.id)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Datadog = Pulumi.Datadog;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var roRole = Datadog.GetRole.Invoke(new()\n    {\n        Filter = \"Datadog Read Only Role\",\n    });\n\n    // Create a new AuthN mapping\n    var devRoRoleMapping = new Datadog.AuthnMapping(\"devRoRoleMapping\", new()\n    {\n        Key = \"Member-of\",\n        Value = \"Development\",\n        Role = roRole.Apply(getRoleResult =\u003e getRoleResult.Id),\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-datadog/sdk/v4/go/datadog\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\troRole, err := datadog.LookupRole(ctx, \u0026datadog.LookupRoleArgs{\n\t\t\tFilter: \"Datadog Read Only Role\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = datadog.NewAuthnMapping(ctx, \"devRoRoleMapping\", \u0026datadog.AuthnMappingArgs{\n\t\t\tKey:   pulumi.String(\"Member-of\"),\n\t\t\tValue: pulumi.String(\"Development\"),\n\t\t\tRole:  *pulumi.String(roRole.Id),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.datadog.DatadogFunctions;\nimport com.pulumi.datadog.inputs.GetRoleArgs;\nimport com.pulumi.datadog.AuthnMapping;\nimport com.pulumi.datadog.AuthnMappingArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var roRole = DatadogFunctions.getRole(GetRoleArgs.builder()\n            .filter(\"Datadog Read Only Role\")\n            .build());\n\n        var devRoRoleMapping = new AuthnMapping(\"devRoRoleMapping\", AuthnMappingArgs.builder()        \n            .key(\"Member-of\")\n            .value(\"Development\")\n            .role(roRole.applyValue(getRoleResult -\u003e getRoleResult.id()))\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  # Create a new AuthN mapping\n  devRoRoleMapping:\n    type: datadog:AuthnMapping\n    properties:\n      key: Member-of\n      value: Development\n      role: ${roRole.id}\nvariables:\n  roRole:\n    fn::invoke:\n      Function: datadog:getRole\n      Arguments:\n        filter: Datadog Read Only Role\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nAuthN mappings can be imported using their ID, e.g.\n\n```sh\n $ pulumi import datadog:index/authnMapping:AuthnMapping dev_ro_mapping 000000-0000-0000-0000-000000000000\n```\n\n ",
            "properties": {
                "key": {
                    "type": "string",
                    "description": "Identity provider key.\n"
                },
                "role": {
                    "type": "string",
                    "description": "The ID of a role to attach to all users with the corresponding key and value.\n"
                },
                "value": {
                    "type": "string",
                    "description": "Identity provider value.\n"
                }
            },
            "required": [
                "key",
                "role",
                "value"
            ],
            "inputProperties": {
                "key": {
                    "type": "string",
                    "description": "Identity provider key.\n"
                },
                "role": {
                    "type": "string",
                    "description": "The ID of a role to attach to all users with the corresponding key and value.\n"
                },
                "value": {
                    "type": "string",
                    "description": "Identity provider value.\n"
                }
            },
            "requiredInputs": [
                "key",
                "role",
                "value"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AuthnMapping resources.\n",
                "properties": {
                    "key": {
                        "type": "string",
                        "description": "Identity provider key.\n"
                    },
                    "role": {
                        "type": "string",
                        "description": "The ID of a role to attach to all users with the corresponding key and value.\n"
                    },
                    "value": {
                        "type": "string",
                        "description": "Identity provider value.\n"
                    }
                },
                "type": "object"
            }
        },
        "datadog:index/childOrganization:ChildOrganization": {
            "description": "Provides a Datadog Child Organization resource. This can be used to create Datadog Child Organizations. To manage created organization use `datadog.OrganizationSettings`.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as datadog from \"@pulumi/datadog\";\n\n// Create a new Datadog Child Organization\nconst organization = new datadog.ChildOrganization(\"organization\", {name: \"foo-organization\"});\n```\n```python\nimport pulumi\nimport pulumi_datadog as datadog\n\n# Create a new Datadog Child Organization\norganization = datadog.ChildOrganization(\"organization\", name=\"foo-organization\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Datadog = Pulumi.Datadog;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    // Create a new Datadog Child Organization\n    var organization = new Datadog.ChildOrganization(\"organization\", new()\n    {\n        Name = \"foo-organization\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-datadog/sdk/v4/go/datadog\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := datadog.NewChildOrganization(ctx, \"organization\", \u0026datadog.ChildOrganizationArgs{\n\t\t\tName: pulumi.String(\"foo-organization\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.datadog.ChildOrganization;\nimport com.pulumi.datadog.ChildOrganizationArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var organization = new ChildOrganization(\"organization\", ChildOrganizationArgs.builder()        \n            .name(\"foo-organization\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  # Create a new Datadog Child Organization\n  organization:\n    type: datadog:ChildOrganization\n    properties:\n      name: foo-organization\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "apiKeys": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/ChildOrganizationApiKey:ChildOrganizationApiKey"
                    },
                    "description": "Datadog API key.\n"
                },
                "applicationKeys": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/ChildOrganizationApplicationKey:ChildOrganizationApplicationKey"
                    },
                    "description": "An application key with its associated metadata.\n"
                },
                "description": {
                    "type": "string",
                    "description": "Description of the organization.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name for Child Organization after creation.\n"
                },
                "publicId": {
                    "type": "string",
                    "description": "The `public_id` of the organization you are operating within.\n"
                },
                "settings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/ChildOrganizationSetting:ChildOrganizationSetting"
                    },
                    "description": "Organization settings\n"
                },
                "users": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/ChildOrganizationUser:ChildOrganizationUser"
                    },
                    "description": "Information about a user\n"
                }
            },
            "required": [
                "apiKeys",
                "applicationKeys",
                "description",
                "name",
                "publicId",
                "settings",
                "users"
            ],
            "inputProperties": {
                "name": {
                    "type": "string",
                    "description": "Name for Child Organization after creation.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "name"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ChildOrganization resources.\n",
                "properties": {
                    "apiKeys": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/datadog:index/ChildOrganizationApiKey:ChildOrganizationApiKey"
                        },
                        "description": "Datadog API key.\n"
                    },
                    "applicationKeys": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/datadog:index/ChildOrganizationApplicationKey:ChildOrganizationApplicationKey"
                        },
                        "description": "An application key with its associated metadata.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "Description of the organization.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name for Child Organization after creation.\n",
                        "willReplaceOnChanges": true
                    },
                    "publicId": {
                        "type": "string",
                        "description": "The `public_id` of the organization you are operating within.\n"
                    },
                    "settings": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/datadog:index/ChildOrganizationSetting:ChildOrganizationSetting"
                        },
                        "description": "Organization settings\n"
                    },
                    "users": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/datadog:index/ChildOrganizationUser:ChildOrganizationUser"
                        },
                        "description": "Information about a user\n"
                    }
                },
                "type": "object"
            }
        },
        "datadog:index/cloudConfigurationRule:CloudConfigurationRule": {
            "description": "Provides a Datadog Cloud Configuration Rule resource.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as datadog from \"@pulumi/datadog\";\n\nconst myrule = new datadog.CloudConfigurationRule(\"myrule\", {\n    enabled: true,\n    groupBies: [\"@resource\"],\n    message: \"Rule has triggered\",\n    name: \"My cloud configuration rule\",\n    notifications: [\"@channel\"],\n    policy: `        package datadog\n\n        import data.datadog.output as dd_output\n\n        import future.keywords.contains\n        import future.keywords.if\n        import future.keywords.in\n\n        eval(resource) = \"skip\" if {\n            # Logic that evaluates to true if the resource should be skipped\n            true\n        } else = \"pass\" {\n            # Logic that evaluates to true if the resource is compliant\n            true\n        } else = \"fail\" {\n            # Logic that evaluates to true if the resource is not compliant\n            true\n        }\n\n        # This part remains unchanged for all rules\n        results contains result if {\n            some resource in input.resources[input.main_resource_type]\n            result := dd_output.format(resource, eval(resource))\n        }\n\n`,\n    relatedResourceTypes: [],\n    resourceType: \"aws_s3_bucket\",\n    severity: \"high\",\n    tags: [\"some:tag\"],\n});\n```\n```python\nimport pulumi\nimport pulumi_datadog as datadog\n\nmyrule = datadog.CloudConfigurationRule(\"myrule\",\n    enabled=True,\n    group_bies=[\"@resource\"],\n    message=\"Rule has triggered\",\n    name=\"My cloud configuration rule\",\n    notifications=[\"@channel\"],\n    policy=\"\"\"        package datadog\n\n        import data.datadog.output as dd_output\n\n        import future.keywords.contains\n        import future.keywords.if\n        import future.keywords.in\n\n        eval(resource) = \"skip\" if {\n            # Logic that evaluates to true if the resource should be skipped\n            true\n        } else = \"pass\" {\n            # Logic that evaluates to true if the resource is compliant\n            true\n        } else = \"fail\" {\n            # Logic that evaluates to true if the resource is not compliant\n            true\n        }\n\n        # This part remains unchanged for all rules\n        results contains result if {\n            some resource in input.resources[input.main_resource_type]\n            result := dd_output.format(resource, eval(resource))\n        }\n\n\"\"\",\n    related_resource_types=[],\n    resource_type=\"aws_s3_bucket\",\n    severity=\"high\",\n    tags=[\"some:tag\"])\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Datadog = Pulumi.Datadog;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var myrule = new Datadog.CloudConfigurationRule(\"myrule\", new()\n    {\n        Enabled = true,\n        GroupBies = new[]\n        {\n            \"@resource\",\n        },\n        Message = \"Rule has triggered\",\n        Name = \"My cloud configuration rule\",\n        Notifications = new[]\n        {\n            \"@channel\",\n        },\n        Policy = @\"        package datadog\n\n        import data.datadog.output as dd_output\n\n        import future.keywords.contains\n        import future.keywords.if\n        import future.keywords.in\n\n        eval(resource) = \"\"skip\"\" if {\n            # Logic that evaluates to true if the resource should be skipped\n            true\n        } else = \"\"pass\"\" {\n            # Logic that evaluates to true if the resource is compliant\n            true\n        } else = \"\"fail\"\" {\n            # Logic that evaluates to true if the resource is not compliant\n            true\n        }\n\n        # This part remains unchanged for all rules\n        results contains result if {\n            some resource in input.resources[input.main_resource_type]\n            result := dd_output.format(resource, eval(resource))\n        }\n\n\",\n        RelatedResourceTypes = new[] {},\n        ResourceType = \"aws_s3_bucket\",\n        Severity = \"high\",\n        Tags = new[]\n        {\n            \"some:tag\",\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-datadog/sdk/v4/go/datadog\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := datadog.NewCloudConfigurationRule(ctx, \"myrule\", \u0026datadog.CloudConfigurationRuleArgs{\n\t\t\tEnabled: pulumi.Bool(true),\n\t\t\tGroupBies: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"@resource\"),\n\t\t\t},\n\t\t\tMessage: pulumi.String(\"Rule has triggered\"),\n\t\t\tName:    pulumi.String(\"My cloud configuration rule\"),\n\t\t\tNotifications: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"@channel\"),\n\t\t\t},\n\t\t\tPolicy: pulumi.String(`        package datadog\n\n        import data.datadog.output as dd_output\n\n        import future.keywords.contains\n        import future.keywords.if\n        import future.keywords.in\n\n        eval(resource) = \"skip\" if {\n            # Logic that evaluates to true if the resource should be skipped\n            true\n        } else = \"pass\" {\n            # Logic that evaluates to true if the resource is compliant\n            true\n        } else = \"fail\" {\n            # Logic that evaluates to true if the resource is not compliant\n            true\n        }\n\n        # This part remains unchanged for all rules\n        results contains result if {\n            some resource in input.resources[input.main_resource_type]\n            result := dd_output.format(resource, eval(resource))\n        }\n\n`),\n\t\t\tRelatedResourceTypes: pulumi.StringArray{},\n\t\t\tResourceType:         pulumi.String(\"aws_s3_bucket\"),\n\t\t\tSeverity:             pulumi.String(\"high\"),\n\t\t\tTags: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"some:tag\"),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.datadog.CloudConfigurationRule;\nimport com.pulumi.datadog.CloudConfigurationRuleArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var myrule = new CloudConfigurationRule(\"myrule\", CloudConfigurationRuleArgs.builder()        \n            .enabled(true)\n            .groupBies(\"@resource\")\n            .message(\"Rule has triggered\")\n            .name(\"My cloud configuration rule\")\n            .notifications(\"@channel\")\n            .policy(\"\"\"\n        package datadog\n\n        import data.datadog.output as dd_output\n\n        import future.keywords.contains\n        import future.keywords.if\n        import future.keywords.in\n\n        eval(resource) = \"skip\" if {\n            # Logic that evaluates to true if the resource should be skipped\n            true\n        } else = \"pass\" {\n            # Logic that evaluates to true if the resource is compliant\n            true\n        } else = \"fail\" {\n            # Logic that evaluates to true if the resource is not compliant\n            true\n        }\n\n        # This part remains unchanged for all rules\n        results contains result if {\n            some resource in input.resources[input.main_resource_type]\n            result := dd_output.format(resource, eval(resource))\n        }\n\n            \"\"\")\n            .relatedResourceTypes()\n            .resourceType(\"aws_s3_bucket\")\n            .severity(\"high\")\n            .tags(\"some:tag\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  myrule:\n    type: datadog:CloudConfigurationRule\n    properties:\n      enabled: true\n      groupBies:\n        - '@resource'\n      message: Rule has triggered\n      name: My cloud configuration rule\n      notifications:\n        - '@channel'\n      policy: |2+\n                package datadog\n\n                import data.datadog.output as dd_output\n\n                import future.keywords.contains\n                import future.keywords.if\n                import future.keywords.in\n\n                eval(resource) = \"skip\" if {\n                    # Logic that evaluates to true if the resource should be skipped\n                    true\n                } else = \"pass\" {\n                    # Logic that evaluates to true if the resource is compliant\n                    true\n                } else = \"fail\" {\n                    # Logic that evaluates to true if the resource is not compliant\n                    true\n                }\n\n                # This part remains unchanged for all rules\n                results contains result if {\n                    some resource in input.resources[input.main_resource_type]\n                    result := dd_output.format(resource, eval(resource))\n                }\n\n      relatedResourceTypes: []\n      resourceType: aws_s3_bucket\n      severity: high\n      tags:\n        - some:tag\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nSecurity monitoring rules can be imported using ID, e.g.\n\n```sh\n $ pulumi import datadog:index/cloudConfigurationRule:CloudConfigurationRule my_rule m0o-hto-lkb\n```\n\n ",
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Whether the cloud configuration rule is enabled.\n"
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Fields to group by when generating signals, e.g. @resource. Defaults to empty list.\n"
                },
                "message": {
                    "type": "string",
                    "description": "The message associated to the rule that will be shown in findings and signals.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the cloud configuration rule.\n"
                },
                "notifications": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Notification targets for signals. Defaults to empty list.\n"
                },
                "policy": {
                    "type": "string",
                    "description": "Policy written in Rego format.\n"
                },
                "relatedResourceTypes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Related resource types to be checked by the rule. Defaults to empty list.\n"
                },
                "resourceType": {
                    "type": "string",
                    "description": "Main resource type to be checked by the rule.\n"
                },
                "severity": {
                    "type": "string",
                    "description": "Severity of the rule and associated signals. Valid values are `info`, `low`, `medium`, `high`, `critical`.\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Tags of the rule, propagated to findings and signals. Defaults to empty list.\n"
                }
            },
            "required": [
                "enabled",
                "message",
                "name",
                "policy",
                "resourceType",
                "severity"
            ],
            "inputProperties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Whether the cloud configuration rule is enabled.\n"
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Fields to group by when generating signals, e.g. @resource. Defaults to empty list.\n"
                },
                "message": {
                    "type": "string",
                    "description": "The message associated to the rule that will be shown in findings and signals.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the cloud configuration rule.\n"
                },
                "notifications": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Notification targets for signals. Defaults to empty list.\n"
                },
                "policy": {
                    "type": "string",
                    "description": "Policy written in Rego format.\n"
                },
                "relatedResourceTypes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Related resource types to be checked by the rule. Defaults to empty list.\n"
                },
                "resourceType": {
                    "type": "string",
                    "description": "Main resource type to be checked by the rule.\n"
                },
                "severity": {
                    "type": "string",
                    "description": "Severity of the rule and associated signals. Valid values are `info`, `low`, `medium`, `high`, `critical`.\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Tags of the rule, propagated to findings and signals. Defaults to empty list.\n"
                }
            },
            "requiredInputs": [
                "enabled",
                "message",
                "name",
                "policy",
                "resourceType",
                "severity"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering CloudConfigurationRule resources.\n",
                "properties": {
                    "enabled": {
                        "type": "boolean",
                        "description": "Whether the cloud configuration rule is enabled.\n"
                    },
                    "groupBies": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Fields to group by when generating signals, e.g. @resource. Defaults to empty list.\n"
                    },
                    "message": {
                        "type": "string",
                        "description": "The message associated to the rule that will be shown in findings and signals.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the cloud configuration rule.\n"
                    },
                    "notifications": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Notification targets for signals. Defaults to empty list.\n"
                    },
                    "policy": {
                        "type": "string",
                        "description": "Policy written in Rego format.\n"
                    },
                    "relatedResourceTypes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Related resource types to be checked by the rule. Defaults to empty list.\n"
                    },
                    "resourceType": {
                        "type": "string",
                        "description": "Main resource type to be checked by the rule.\n"
                    },
                    "severity": {
                        "type": "string",
                        "description": "Severity of the rule and associated signals. Valid values are `info`, `low`, `medium`, `high`, `critical`.\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Tags of the rule, propagated to findings and signals. Defaults to empty list.\n"
                    }
                },
                "type": "object"
            }
        },
        "datadog:index/cloudWorkloadSecurityAgentRule:CloudWorkloadSecurityAgentRule": {
            "description": "Provides a Datadog Cloud Workload Security Agent Rule API resource for agent rules.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as datadog from \"@pulumi/datadog\";\n\nconst myAgentRule = new datadog.CloudWorkloadSecurityAgentRule(\"myAgentRule\", {\n    description: \"My agent rule\",\n    enabled: true,\n    expression: \"exec.file.name == \\\"java\\\"\",\n    name: \"my_agent_rule\",\n});\n```\n```python\nimport pulumi\nimport pulumi_datadog as datadog\n\nmy_agent_rule = datadog.CloudWorkloadSecurityAgentRule(\"myAgentRule\",\n    description=\"My agent rule\",\n    enabled=True,\n    expression=\"exec.file.name == \\\"java\\\"\",\n    name=\"my_agent_rule\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Datadog = Pulumi.Datadog;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var myAgentRule = new Datadog.CloudWorkloadSecurityAgentRule(\"myAgentRule\", new()\n    {\n        Description = \"My agent rule\",\n        Enabled = true,\n        Expression = \"exec.file.name == \\\"java\\\"\",\n        Name = \"my_agent_rule\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-datadog/sdk/v4/go/datadog\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := datadog.NewCloudWorkloadSecurityAgentRule(ctx, \"myAgentRule\", \u0026datadog.CloudWorkloadSecurityAgentRuleArgs{\n\t\t\tDescription: pulumi.String(\"My agent rule\"),\n\t\t\tEnabled:     pulumi.Bool(true),\n\t\t\tExpression:  pulumi.String(\"exec.file.name == \\\"java\\\"\"),\n\t\t\tName:        pulumi.String(\"my_agent_rule\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.datadog.CloudWorkloadSecurityAgentRule;\nimport com.pulumi.datadog.CloudWorkloadSecurityAgentRuleArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var myAgentRule = new CloudWorkloadSecurityAgentRule(\"myAgentRule\", CloudWorkloadSecurityAgentRuleArgs.builder()        \n            .description(\"My agent rule\")\n            .enabled(true)\n            .expression(\"exec.file.name == \\\"java\\\"\")\n            .name(\"my_agent_rule\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  myAgentRule:\n    type: datadog:CloudWorkloadSecurityAgentRule\n    properties:\n      description: My agent rule\n      enabled: true\n      expression: exec.file.name == \"java\"\n      name: my_agent_rule\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nCloud Workload Security Agent rules can be imported using ID, e.g.\n\n```sh\n $ pulumi import datadog:index/cloudWorkloadSecurityAgentRule:CloudWorkloadSecurityAgentRule my_agent_rule m0o-hto-lkb\n```\n\n ",
            "properties": {
                "description": {
                    "type": "string",
                    "description": "The description of the Agent rule.\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Whether the Agent rule is enabled.\n"
                },
                "expression": {
                    "type": "string",
                    "description": "The SECL expression of the Agent rule.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the Agent rule.\n"
                }
            },
            "required": [
                "expression",
                "name"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "The description of the Agent rule.\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Whether the Agent rule is enabled.\n"
                },
                "expression": {
                    "type": "string",
                    "description": "The SECL expression of the Agent rule.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the Agent rule.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "expression",
                "name"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering CloudWorkloadSecurityAgentRule resources.\n",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "The description of the Agent rule.\n"
                    },
                    "enabled": {
                        "type": "boolean",
                        "description": "Whether the Agent rule is enabled.\n"
                    },
                    "expression": {
                        "type": "string",
                        "description": "The SECL expression of the Agent rule.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the Agent rule.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "datadog:index/dashboard:Dashboard": {
            "description": "Provides a Datadog dashboard resource. This can be used to create and manage Datadog dashboards.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.datadog.Dashboard;\nimport com.pulumi.datadog.DashboardArgs;\nimport com.pulumi.datadog.inputs.DashboardTemplateVariableArgs;\nimport com.pulumi.datadog.inputs.DashboardTemplateVariablePresetArgs;\nimport com.pulumi.datadog.inputs.DashboardWidgetArgs;\nimport com.pulumi.datadog.inputs.DashboardWidgetAlertGraphDefinitionArgs;\nimport com.pulumi.datadog.inputs.DashboardWidgetAlertValueDefinitionArgs;\nimport com.pulumi.datadog.inputs.DashboardWidgetChangeDefinitionArgs;\nimport com.pulumi.datadog.inputs.DashboardWidgetDistributionDefinitionArgs;\nimport com.pulumi.datadog.inputs.DashboardWidgetCheckStatusDefinitionArgs;\nimport com.pulumi.datadog.inputs.DashboardWidgetHeatmapDefinitionArgs;\nimport com.pulumi.datadog.inputs.DashboardWidgetHeatmapDefinitionYaxisArgs;\nimport com.pulumi.datadog.inputs.DashboardWidgetHostmapDefinitionArgs;\nimport com.pulumi.datadog.inputs.DashboardWidgetHostmapDefinitionRequestArgs;\nimport com.pulumi.datadog.inputs.DashboardWidgetHostmapDefinitionStyleArgs;\nimport com.pulumi.datadog.inputs.DashboardWidgetNoteDefinitionArgs;\nimport com.pulumi.datadog.inputs.DashboardWidgetQueryValueDefinitionArgs;\nimport com.pulumi.datadog.inputs.DashboardWidgetQueryTableDefinitionArgs;\nimport com.pulumi.datadog.inputs.DashboardWidgetScatterplotDefinitionArgs;\nimport com.pulumi.datadog.inputs.DashboardWidgetScatterplotDefinitionRequestArgs;\nimport com.pulumi.datadog.inputs.DashboardWidgetScatterplotDefinitionXaxisArgs;\nimport com.pulumi.datadog.inputs.DashboardWidgetScatterplotDefinitionYaxisArgs;\nimport com.pulumi.datadog.inputs.DashboardWidgetServicemapDefinitionArgs;\nimport com.pulumi.datadog.inputs.DashboardWidgetTimeseriesDefinitionArgs;\nimport com.pulumi.datadog.inputs.DashboardWidgetTimeseriesDefinitionYaxisArgs;\nimport com.pulumi.datadog.inputs.DashboardWidgetToplistDefinitionArgs;\nimport com.pulumi.datadog.inputs.DashboardWidgetGroupDefinitionArgs;\nimport com.pulumi.datadog.inputs.DashboardWidgetServiceLevelObjectiveDefinitionArgs;\nimport com.pulumi.datadog.inputs.DashboardWidgetEventStreamDefinitionArgs;\nimport com.pulumi.datadog.inputs.DashboardWidgetWidgetLayoutArgs;\nimport com.pulumi.datadog.inputs.DashboardWidgetEventTimelineDefinitionArgs;\nimport com.pulumi.datadog.inputs.DashboardWidgetFreeTextDefinitionArgs;\nimport com.pulumi.datadog.inputs.DashboardWidgetIframeDefinitionArgs;\nimport com.pulumi.datadog.inputs.DashboardWidgetImageDefinitionArgs;\nimport com.pulumi.datadog.inputs.DashboardWidgetLogStreamDefinitionArgs;\nimport com.pulumi.datadog.inputs.DashboardWidgetLogStreamDefinitionSortArgs;\nimport com.pulumi.datadog.inputs.DashboardWidgetManageStatusDefinitionArgs;\nimport com.pulumi.datadog.inputs.DashboardWidgetTraceServiceDefinitionArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var orderedDashboard = new Dashboard(\"orderedDashboard\", DashboardArgs.builder()        \n            .description(\"Created using the Datadog provider in Terraform\")\n            .isReadOnly(true)\n            .layoutType(\"ordered\")\n            .templateVariables(            \n                DashboardTemplateVariableArgs.builder()\n                    .default_(\"aws\")\n                    .name(\"var_1\")\n                    .prefix(\"host\")\n                    .build(),\n                DashboardTemplateVariableArgs.builder()\n                    .default_(\"autoscaling\")\n                    .name(\"var_2\")\n                    .prefix(\"service_name\")\n                    .build())\n            .templateVariablePresets(DashboardTemplateVariablePresetArgs.builder()\n                .name(\"preset_1\")\n                .templateVariables(                \n                    DashboardTemplateVariablePresetTemplateVariableArgs.builder()\n                        .name(\"var_1\")\n                        .value(\"host.dc\")\n                        .build(),\n                    DashboardTemplateVariablePresetTemplateVariableArgs.builder()\n                        .name(\"var_2\")\n                        .value(\"my_service\")\n                        .build())\n                .build())\n            .title(\"Ordered Layout Dashboard\")\n            .widgets(            \n                DashboardWidgetArgs.builder()\n                    .alertGraphDefinition(DashboardWidgetAlertGraphDefinitionArgs.builder()\n                        .alertId(\"895605\")\n                        .liveSpan(\"1h\")\n                        .title(\"Widget Title\")\n                        .vizType(\"timeseries\")\n                        .build())\n                    .build(),\n                DashboardWidgetArgs.builder()\n                    .alertValueDefinition(DashboardWidgetAlertValueDefinitionArgs.builder()\n                        .alertId(\"895605\")\n                        .precision(3)\n                        .textAlign(\"center\")\n                        .title(\"Widget Title\")\n                        .unit(\"b\")\n                        .build())\n                    .build(),\n                DashboardWidgetArgs.builder()\n                    .alertValueDefinition(DashboardWidgetAlertValueDefinitionArgs.builder()\n                        .alertId(\"895605\")\n                        .precision(3)\n                        .textAlign(\"center\")\n                        .title(\"Widget Title\")\n                        .unit(\"b\")\n                        .build())\n                    .build(),\n                DashboardWidgetArgs.builder()\n                    .changeDefinition(DashboardWidgetChangeDefinitionArgs.builder()\n                        .liveSpan(\"1h\")\n                        .request(%!v(PANIC=Format method: runtime error: invalid memory address or nil pointer dereference))\n                        .title(\"Widget Title\")\n                        .build())\n                    .build(),\n                DashboardWidgetArgs.builder()\n                    .distributionDefinition(DashboardWidgetDistributionDefinitionArgs.builder()\n                        .liveSpan(\"1h\")\n                        .request(%!v(PANIC=Format method: runtime error: invalid memory address or nil pointer dereference))\n                        .title(\"Widget Title\")\n                        .build())\n                    .build(),\n                DashboardWidgetArgs.builder()\n                    .checkStatusDefinition(DashboardWidgetCheckStatusDefinitionArgs.builder()\n                        .check(\"aws.ecs.agent_connected\")\n                        .groupBy(                        \n                            \"account\",\n                            \"cluster\")\n                        .grouping(\"cluster\")\n                        .liveSpan(\"1h\")\n                        .tags(                        \n                            \"account:demo\",\n                            \"cluster:awseb-ruthebdog-env-8-dn3m6u3gvk\")\n                        .title(\"Widget Title\")\n                        .build())\n                    .build(),\n                DashboardWidgetArgs.builder()\n                    .heatmapDefinition(DashboardWidgetHeatmapDefinitionArgs.builder()\n                        .liveSpan(\"1h\")\n                        .request(%!v(PANIC=Format method: runtime error: invalid memory address or nil pointer dereference))\n                        .title(\"Widget Title\")\n                        .yaxis(DashboardWidgetHeatmapDefinitionYaxisArgs.builder()\n                            .includeZero(true)\n                            .max(2)\n                            .min(1)\n                            .scale(\"sqrt\")\n                            .build())\n                        .build())\n                    .build(),\n                DashboardWidgetArgs.builder()\n                    .hostmapDefinition(DashboardWidgetHostmapDefinitionArgs.builder()\n                        .group(                        \n                            \"host\",\n                            \"region\")\n                        .noGroupHosts(true)\n                        .noMetricHosts(true)\n                        .nodeType(\"container\")\n                        .request(DashboardWidgetHostmapDefinitionRequestArgs.builder()\n                            .fill(%!v(PANIC=Format method: runtime error: invalid memory address or nil pointer dereference))\n                            .size(%!v(PANIC=Format method: runtime error: invalid memory address or nil pointer dereference))\n                            .build())\n                        .scope(                        \n                            \"region:us-east-1\",\n                            \"aws_account:727006795293\")\n                        .style(DashboardWidgetHostmapDefinitionStyleArgs.builder()\n                            .fillMax(\"20\")\n                            .fillMin(\"10\")\n                            .palette(\"yellow_to_green\")\n                            .paletteFlip(true)\n                            .build())\n                        .title(\"Widget Title\")\n                        .build())\n                    .build(),\n                DashboardWidgetArgs.builder()\n                    .noteDefinition(DashboardWidgetNoteDefinitionArgs.builder()\n                        .backgroundColor(\"pink\")\n                        .content(\"note text\")\n                        .fontSize(\"14\")\n                        .showTick(true)\n                        .textAlign(\"center\")\n                        .tickEdge(\"left\")\n                        .tickPos(\"50%\")\n                        .build())\n                    .build(),\n                DashboardWidgetArgs.builder()\n                    .queryValueDefinition(DashboardWidgetQueryValueDefinitionArgs.builder()\n                        .autoscale(true)\n                        .customUnit(\"xx\")\n                        .liveSpan(\"1h\")\n                        .precision(\"4\")\n                        .request(%!v(PANIC=Format method: runtime error: invalid memory address or nil pointer dereference))\n                        .textAlign(\"right\")\n                        .title(\"Widget Title\")\n                        .build())\n                    .build(),\n                DashboardWidgetArgs.builder()\n                    .queryTableDefinition(DashboardWidgetQueryTableDefinitionArgs.builder()\n                        .liveSpan(\"1h\")\n                        .request(%!v(PANIC=Format method: runtime error: invalid memory address or nil pointer dereference))\n                        .title(\"Widget Title\")\n                        .build())\n                    .build(),\n                DashboardWidgetArgs.builder()\n                    .scatterplotDefinition(DashboardWidgetScatterplotDefinitionArgs.builder()\n                        .colorByGroups(                        \n                            \"account\",\n                            \"apm-role-group\")\n                        .liveSpan(\"1h\")\n                        .request(DashboardWidgetScatterplotDefinitionRequestArgs.builder()\n                            .x(%!v(PANIC=Format method: runtime error: invalid memory address or nil pointer dereference))\n                            .y(%!v(PANIC=Format method: runtime error: invalid memory address or nil pointer dereference))\n                            .build())\n                        .title(\"Widget Title\")\n                        .xaxis(DashboardWidgetScatterplotDefinitionXaxisArgs.builder()\n                            .includeZero(true)\n                            .label(\"x\")\n                            .max(\"2000\")\n                            .min(\"1\")\n                            .scale(\"pow\")\n                            .build())\n                        .yaxis(DashboardWidgetScatterplotDefinitionYaxisArgs.builder()\n                            .includeZero(false)\n                            .label(\"y\")\n                            .max(\"2222\")\n                            .min(\"5\")\n                            .scale(\"log\")\n                            .build())\n                        .build())\n                    .build(),\n                DashboardWidgetArgs.builder()\n                    .servicemapDefinition(DashboardWidgetServicemapDefinitionArgs.builder()\n                        .filters(                        \n                            \"env:prod\",\n                            \"datacenter:dc1\")\n                        .service(\"master-db\")\n                        .title(\"env: prod, datacenter:dc1, service: master-db\")\n                        .titleAlign(\"left\")\n                        .titleSize(\"16\")\n                        .build())\n                    .build(),\n                DashboardWidgetArgs.builder()\n                    .timeseriesDefinition(DashboardWidgetTimeseriesDefinitionArgs.builder()\n                        .event(                        \n                            %!v(PANIC=Format method: runtime error: invalid memory address or nil pointer dereference),\n                            %!v(PANIC=Format method: runtime error: invalid memory address or nil pointer dereference))\n                        .legendSize(\"2\")\n                        .liveSpan(\"1h\")\n                        .marker(                        \n                            %!v(PANIC=Format method: runtime error: invalid memory address or nil pointer dereference),\n                            %!v(PANIC=Format method: runtime error: invalid memory address or nil pointer dereference))\n                        .request(                        \n                            %!v(PANIC=Format method: runtime error: invalid memory address or nil pointer dereference),\n                            %!v(PANIC=Format method: runtime error: invalid memory address or nil pointer dereference),\n                            %!v(PANIC=Format method: runtime error: invalid memory address or nil pointer dereference),\n                            %!v(PANIC=Format method: runtime error: invalid memory address or nil pointer dereference))\n                        .showLegend(true)\n                        .title(\"Widget Title\")\n                        .yaxis(DashboardWidgetTimeseriesDefinitionYaxisArgs.builder()\n                            .includeZero(false)\n                            .max(100)\n                            .scale(\"log\")\n                            .build())\n                        .build())\n                    .build(),\n                DashboardWidgetArgs.builder()\n                    .toplistDefinition(DashboardWidgetToplistDefinitionArgs.builder()\n                        .request(%!v(PANIC=Format method: runtime error: invalid memory address or nil pointer dereference))\n                        .title(\"Widget Title\")\n                        .build())\n                    .build(),\n                DashboardWidgetArgs.builder()\n                    .groupDefinition(DashboardWidgetGroupDefinitionArgs.builder()\n                        .layoutType(\"ordered\")\n                        .title(\"Group Widget\")\n                        .widget(                        \n                            %!v(PANIC=Format method: runtime error: invalid memory address or nil pointer dereference),\n                            %!v(PANIC=Format method: runtime error: invalid memory address or nil pointer dereference))\n                        .build())\n                    .build(),\n                DashboardWidgetArgs.builder()\n                    .serviceLevelObjectiveDefinition(DashboardWidgetServiceLevelObjectiveDefinitionArgs.builder()\n                        .showErrorBudget(true)\n                        .sloId(\"56789\")\n                        .timeWindows(                        \n                            \"7d\",\n                            \"previous_week\")\n                        .title(\"Widget Title\")\n                        .viewMode(\"overall\")\n                        .viewType(\"detail\")\n                        .build())\n                    .build())\n            .build());\n\n        var freeDashboard = new Dashboard(\"freeDashboard\", DashboardArgs.builder()        \n            .description(\"Created using the Datadog provider in Terraform\")\n            .isReadOnly(false)\n            .layoutType(\"free\")\n            .templateVariables(            \n                DashboardTemplateVariableArgs.builder()\n                    .default_(\"aws\")\n                    .name(\"var_1\")\n                    .prefix(\"host\")\n                    .build(),\n                DashboardTemplateVariableArgs.builder()\n                    .default_(\"autoscaling\")\n                    .name(\"var_2\")\n                    .prefix(\"service_name\")\n                    .build())\n            .templateVariablePresets(DashboardTemplateVariablePresetArgs.builder()\n                .name(\"preset_1\")\n                .templateVariables(                \n                    DashboardTemplateVariablePresetTemplateVariableArgs.builder()\n                        .name(\"var_1\")\n                        .value(\"host.dc\")\n                        .build(),\n                    DashboardTemplateVariablePresetTemplateVariableArgs.builder()\n                        .name(\"var_2\")\n                        .value(\"my_service\")\n                        .build())\n                .build())\n            .title(\"Free Layout Dashboard\")\n            .widgets(            \n                DashboardWidgetArgs.builder()\n                    .eventStreamDefinition(DashboardWidgetEventStreamDefinitionArgs.builder()\n                        .eventSize(\"l\")\n                        .liveSpan(\"1h\")\n                        .query(\"*\")\n                        .title(\"Widget Title\")\n                        .titleAlign(\"left\")\n                        .titleSize(16)\n                        .build())\n                    .widgetLayout(DashboardWidgetWidgetLayoutArgs.builder()\n                        .height(43)\n                        .width(32)\n                        .x(0)\n                        .y(0)\n                        .build())\n                    .build(),\n                DashboardWidgetArgs.builder()\n                    .eventTimelineDefinition(DashboardWidgetEventTimelineDefinitionArgs.builder()\n                        .liveSpan(\"1h\")\n                        .query(\"*\")\n                        .title(\"Widget Title\")\n                        .titleAlign(\"left\")\n                        .titleSize(16)\n                        .build())\n                    .widgetLayout(DashboardWidgetWidgetLayoutArgs.builder()\n                        .height(9)\n                        .width(66)\n                        .x(33)\n                        .y(60)\n                        .build())\n                    .build(),\n                DashboardWidgetArgs.builder()\n                    .freeTextDefinition(DashboardWidgetFreeTextDefinitionArgs.builder()\n                        .color(\"#d00\")\n                        .fontSize(\"36\")\n                        .text(\"free text content\")\n                        .textAlign(\"left\")\n                        .build())\n                    .widgetLayout(DashboardWidgetWidgetLayoutArgs.builder()\n                        .height(20)\n                        .width(34)\n                        .x(33)\n                        .y(0)\n                        .build())\n                    .build(),\n                DashboardWidgetArgs.builder()\n                    .iframeDefinition(DashboardWidgetIframeDefinitionArgs.builder()\n                        .url(\"http://google.com\")\n                        .build())\n                    .widgetLayout(DashboardWidgetWidgetLayoutArgs.builder()\n                        .height(46)\n                        .width(39)\n                        .x(101)\n                        .y(0)\n                        .build())\n                    .build(),\n                DashboardWidgetArgs.builder()\n                    .imageDefinition(DashboardWidgetImageDefinitionArgs.builder()\n                        .margin(\"small\")\n                        .sizing(\"fit\")\n                        .url(\"https://images.pexels.com/photos/67636/rose-blue-flower-rose-blooms-67636.jpeg?auto=compress\u0026cs=tinysrgb\u0026h=350\")\n                        .build())\n                    .widgetLayout(DashboardWidgetWidgetLayoutArgs.builder()\n                        .height(20)\n                        .width(30)\n                        .x(69)\n                        .y(0)\n                        .build())\n                    .build(),\n                DashboardWidgetArgs.builder()\n                    .logStreamDefinition(DashboardWidgetLogStreamDefinitionArgs.builder()\n                        .columns(                        \n                            \"core_host\",\n                            \"core_service\",\n                            \"tag_source\")\n                        .indexes(\"main\")\n                        .messageDisplay(\"expanded-md\")\n                        .query(\"error\")\n                        .showDateColumn(true)\n                        .showMessageColumn(true)\n                        .sort(DashboardWidgetLogStreamDefinitionSortArgs.builder()\n                            .column(\"time\")\n                            .order(\"desc\")\n                            .build())\n                        .build())\n                    .widgetLayout(DashboardWidgetWidgetLayoutArgs.builder()\n                        .height(36)\n                        .width(32)\n                        .x(0)\n                        .y(45)\n                        .build())\n                    .build(),\n                DashboardWidgetArgs.builder()\n                    .manageStatusDefinition(DashboardWidgetManageStatusDefinitionArgs.builder()\n                        .colorPreference(\"text\")\n                        .displayFormat(\"countsAndList\")\n                        .hideZeroCounts(true)\n                        .query(\"type:metric\")\n                        .showLastTriggered(false)\n                        .sort(\"status,asc\")\n                        .summaryType(\"monitors\")\n                        .title(\"Widget Title\")\n                        .titleAlign(\"left\")\n                        .titleSize(16)\n                        .build())\n                    .widgetLayout(DashboardWidgetWidgetLayoutArgs.builder()\n                        .height(40)\n                        .width(30)\n                        .x(101)\n                        .y(48)\n                        .build())\n                    .build(),\n                DashboardWidgetArgs.builder()\n                    .traceServiceDefinition(DashboardWidgetTraceServiceDefinitionArgs.builder()\n                        .displayFormat(\"three_column\")\n                        .env(\"datadog.com\")\n                        .liveSpan(\"1h\")\n                        .service(\"alerting-cassandra\")\n                        .showBreakdown(true)\n                        .showDistribution(true)\n                        .showErrors(true)\n                        .showHits(true)\n                        .showLatency(false)\n                        .showResourceList(false)\n                        .sizeFormat(\"large\")\n                        .spanName(\"cassandra.query\")\n                        .title(\"alerting-cassandra #env:datadog.com\")\n                        .titleAlign(\"center\")\n                        .titleSize(\"13\")\n                        .build())\n                    .widgetLayout(DashboardWidgetWidgetLayoutArgs.builder()\n                        .height(38)\n                        .width(66)\n                        .x(33)\n                        .y(21)\n                        .build())\n                    .build(),\n                DashboardWidgetArgs.builder()\n                    .timeseriesDefinition(DashboardWidgetTimeseriesDefinitionArgs.builder()\n                        .request(%!v(PANIC=Format method: runtime error: invalid memory address or nil pointer dereference))\n                        .build())\n                    .widgetLayout(DashboardWidgetWidgetLayoutArgs.builder()\n                        .height(16)\n                        .width(25)\n                        .x(58)\n                        .y(83)\n                        .build())\n                    .build(),\n                DashboardWidgetArgs.builder()\n                    .timeseriesDefinition(DashboardWidgetTimeseriesDefinitionArgs.builder()\n                        .request(%!v(PANIC=Format method: runtime error: invalid memory address or nil pointer dereference))\n                        .build())\n                    .widgetLayout(DashboardWidgetWidgetLayoutArgs.builder()\n                        .height(16)\n                        .width(28)\n                        .x(29)\n                        .y(83)\n                        .build())\n                    .build(),\n                DashboardWidgetArgs.builder()\n                    .timeseriesDefinition(DashboardWidgetTimeseriesDefinitionArgs.builder()\n                        .request(%!v(PANIC=Format method: runtime error: invalid memory address or nil pointer dereference))\n                        .build())\n                    .widgetLayout(DashboardWidgetWidgetLayoutArgs.builder()\n                        .height(16)\n                        .width(28)\n                        .x(0)\n                        .y(83)\n                        .build())\n                    .build())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  # Example Ordered Layout\n  orderedDashboard:\n    type: datadog:Dashboard\n    properties:\n      description: Created using the Datadog provider in Terraform\n      isReadOnly: true\n      layoutType: ordered\n      templateVariables:\n        - default: aws\n          name: var_1\n          prefix: host\n        - default: autoscaling\n          name: var_2\n          prefix: service_name\n      templateVariablePresets:\n        - name: preset_1\n          templateVariables:\n            - name: var_1\n              value: host.dc\n            - name: var_2\n              value: my_service\n      title: Ordered Layout Dashboard\n      widgets:\n        - alertGraphDefinition:\n            alertId: '895605'\n            liveSpan: 1h\n            title: Widget Title\n            vizType: timeseries\n        - alertValueDefinition:\n            alertId: '895605'\n            precision: 3\n            textAlign: center\n            title: Widget Title\n            unit: b\n        - alertValueDefinition:\n            alertId: '895605'\n            precision: 3\n            textAlign: center\n            title: Widget Title\n            unit: b\n        - changeDefinition:\n            liveSpan: 1h\n            request:\n              - changeType: absolute\n                compareTo: week_before\n                increaseGood: true\n                orderBy: name\n                orderDir: desc\n                q: avg:system.load.1{env:staging} by {account}\n                showPresent: true\n            title: Widget Title\n        - distributionDefinition:\n            liveSpan: 1h\n            request:\n              - q: avg:system.load.1{env:staging} by {account}\n                style:\n                  palette: warm\n            title: Widget Title\n        - checkStatusDefinition:\n            check: aws.ecs.agent_connected\n            groupBy:\n              - account\n              - cluster\n            grouping: cluster\n            liveSpan: 1h\n            tags:\n              - account:demo\n              - cluster:awseb-ruthebdog-env-8-dn3m6u3gvk\n            title: Widget Title\n        - heatmapDefinition:\n            liveSpan: 1h\n            request:\n              - q: avg:system.load.1{env:staging} by {account}\n                style:\n                  palette: warm\n            title: Widget Title\n            yaxis:\n              includeZero: true\n              max: 2\n              min: 1\n              scale: sqrt\n        - hostmapDefinition:\n            group:\n              - host\n              - region\n            noGroupHosts: true\n            noMetricHosts: true\n            nodeType: container\n            request:\n              fill:\n                - q: avg:system.load.1{*} by {host}\n              size:\n                - q: avg:memcache.uptime{*} by {host}\n            scope:\n              - region:us-east-1\n              - aws_account:727006795293\n            style:\n              fillMax: '20'\n              fillMin: '10'\n              palette: yellow_to_green\n              paletteFlip: true\n            title: Widget Title\n        - noteDefinition:\n            backgroundColor: pink\n            content: note text\n            fontSize: '14'\n            showTick: true\n            textAlign: center\n            tickEdge: left\n            tickPos: 50%\n        - queryValueDefinition:\n            autoscale: true\n            customUnit: xx\n            liveSpan: 1h\n            precision: '4'\n            request:\n              - aggregator: sum\n                conditionalFormats:\n                  - comparator: \u003c\n                    palette: white_on_green\n                    value: '2'\n                  - comparator: '\u003e'\n                    palette: white_on_red\n                    value: '2.2'\n                q: avg:system.load.1{env:staging} by {account}\n            textAlign: right\n            title: Widget Title\n        - queryTableDefinition:\n            liveSpan: 1h\n            request:\n              - aggregator: sum\n                conditionalFormats:\n                  - comparator: \u003c\n                    palette: white_on_green\n                    value: '2'\n                  - comparator: '\u003e'\n                    palette: white_on_red\n                    value: '2.2'\n                limit: '10'\n                q: avg:system.load.1{env:staging} by {account}\n            title: Widget Title\n        - scatterplotDefinition:\n            colorByGroups:\n              - account\n              - apm-role-group\n            liveSpan: 1h\n            request:\n              x:\n                - aggregator: max\n                  q: avg:system.cpu.user{*} by {service, account}\n              y:\n                - aggregator: min\n                  q: avg:system.mem.used{*} by {service, account}\n            title: Widget Title\n            xaxis:\n              includeZero: true\n              label: x\n              max: '2000'\n              min: '1'\n              scale: pow\n            yaxis:\n              includeZero: false\n              label: y\n              max: '2222'\n              min: '5'\n              scale: log\n        - servicemapDefinition:\n            filters:\n              - env:prod\n              - datacenter:dc1\n            service: master-db\n            title: 'env: prod, datacenter:dc1, service: master-db'\n            titleAlign: left\n            titleSize: '16'\n        - timeseriesDefinition:\n            event:\n              - q: sources:test tags:1\n              - q: sources:test tags:2\n            legendSize: '2'\n            liveSpan: 1h\n            marker:\n              - displayType: error dashed\n                label: ' z=6 '\n                value: y = 4\n              - displayType: ok solid\n                label: ' x=8 '\n                value: 10 \u003c y \u003c 999\n            request:\n              - displayType: line\n                metadata:\n                  - aliasName: Alpha\n                    expression: avg:system.cpu.user{app:general} by {env}\n                q: avg:system.cpu.user{app:general} by {env}\n                style:\n                  lineType: dashed\n                  lineWidth: thin\n                  palette: warm\n              - displayType: area\n                logQuery:\n                  computeQuery:\n                    aggregation: avg\n                    facet: '@duration'\n                    interval: 5000\n                  groupBy:\n                    - facet: host\n                      limit: 10\n                      sortQuery:\n                        aggregation: avg\n                        facet: '@duration'\n                        order: desc\n                  index: mcnulty\n                  searchQuery: status:info\n              - apmQuery:\n                  computeQuery:\n                    aggregation: avg\n                    facet: '@duration'\n                    interval: 5000\n                  groupBy:\n                    - facet: resource_name\n                      limit: 50\n                      sortQuery:\n                        aggregation: avg\n                        facet: '@string_query.interval'\n                        order: desc\n                  index: apm-search\n                  searchQuery: type:web\n                displayType: bars\n              - displayType: area\n                processQuery:\n                  filterBy:\n                    - active\n                  limit: 50\n                  metric: process.stat.cpu.total_pct\n                  searchBy: error\n            showLegend: true\n            title: Widget Title\n            yaxis:\n              includeZero: false\n              max: 100\n              scale: log\n        - toplistDefinition:\n            request:\n              - conditionalFormats:\n                  - comparator: \u003c\n                    palette: white_on_green\n                    value: '2'\n                  - comparator: '\u003e'\n                    palette: white_on_red\n                    value: '2.2'\n                q: avg:system.cpu.user{app:general} by {env}\n            title: Widget Title\n        - groupDefinition:\n            layoutType: ordered\n            title: Group Widget\n            widget:\n              - noteDefinition:\n                  backgroundColor: pink\n                  content: cluster note widget\n                  fontSize: '14'\n                  showTick: true\n                  textAlign: center\n                  tickEdge: left\n                  tickPos: 50%\n              - alertGraphDefinition:\n                  alertId: '123'\n                  liveSpan: 1h\n                  title: Alert Graph\n                  vizType: toplist\n        - serviceLevelObjectiveDefinition:\n            showErrorBudget: true\n            sloId: '56789'\n            timeWindows:\n              - 7d\n              - previous_week\n            title: Widget Title\n            viewMode: overall\n            viewType: detail\n  # Example Free Layout\n  freeDashboard:\n    type: datadog:Dashboard\n    properties:\n      description: Created using the Datadog provider in Terraform\n      isReadOnly: false\n      layoutType: free\n      templateVariables:\n        - default: aws\n          name: var_1\n          prefix: host\n        - default: autoscaling\n          name: var_2\n          prefix: service_name\n      templateVariablePresets:\n        - name: preset_1\n          templateVariables:\n            - name: var_1\n              value: host.dc\n            - name: var_2\n              value: my_service\n      title: Free Layout Dashboard\n      widgets:\n        - eventStreamDefinition:\n            eventSize: l\n            liveSpan: 1h\n            query: '*'\n            title: Widget Title\n            titleAlign: left\n            titleSize: 16\n          widgetLayout:\n            height: 43\n            width: 32\n            x: 0\n            y: 0\n        - eventTimelineDefinition:\n            liveSpan: 1h\n            query: '*'\n            title: Widget Title\n            titleAlign: left\n            titleSize: 16\n          widgetLayout:\n            height: 9\n            width: 66\n            x: 33\n            y: 60\n        - freeTextDefinition:\n            color: '#d00'\n            fontSize: '36'\n            text: free text content\n            textAlign: left\n          widgetLayout:\n            height: 20\n            width: 34\n            x: 33\n            y: 0\n        - iframeDefinition:\n            url: http://google.com\n          widgetLayout:\n            height: 46\n            width: 39\n            x: 101\n            y: 0\n        - imageDefinition:\n            margin: small\n            sizing: fit\n            url: https://images.pexels.com/photos/67636/rose-blue-flower-rose-blooms-67636.jpeg?auto=compress\u0026cs=tinysrgb\u0026h=350\n          widgetLayout:\n            height: 20\n            width: 30\n            x: 69\n            y: 0\n        - logStreamDefinition:\n            columns:\n              - core_host\n              - core_service\n              - tag_source\n            indexes:\n              - main\n            messageDisplay: expanded-md\n            query: error\n            showDateColumn: true\n            showMessageColumn: true\n            sort:\n              column: time\n              order: desc\n          widgetLayout:\n            height: 36\n            width: 32\n            x: 0\n            y: 45\n        - manageStatusDefinition:\n            colorPreference: text\n            displayFormat: countsAndList\n            hideZeroCounts: true\n            query: type:metric\n            showLastTriggered: false\n            sort: status,asc\n            summaryType: monitors\n            title: Widget Title\n            titleAlign: left\n            titleSize: 16\n          widgetLayout:\n            height: 40\n            width: 30\n            x: 101\n            y: 48\n        - traceServiceDefinition:\n            displayFormat: three_column\n            env: datadog.com\n            liveSpan: 1h\n            service: alerting-cassandra\n            showBreakdown: true\n            showDistribution: true\n            showErrors: true\n            showHits: true\n            showLatency: false\n            showResourceList: false\n            sizeFormat: large\n            spanName: cassandra.query\n            title: 'alerting-cassandra #env:datadog.com'\n            titleAlign: center\n            titleSize: '13'\n          widgetLayout:\n            height: 38\n            width: 66\n            x: 33\n            y: 21\n        - timeseriesDefinition:\n            request:\n              - formula:\n                  - alias: my ff query\n                    formulaExpression: my_query_1 + my_query_2\n                  - alias: my second ff query\n                    formulaExpression: my_query_1 * my_query_2\n                    limit:\n                      count: 5\n                      order: desc\n                query:\n                  - metricQuery:\n                      aggregator: sum\n                      dataSource: metrics\n                      name: my_query_1\n                      query: avg:system.cpu.user{app:general} by {env}\n                  - metricQuery:\n                      aggregator: sum\n                      name: my_query_2\n                      query: avg:system.cpu.user{app:general} by {env}\n          widgetLayout:\n            height: 16\n            width: 25\n            x: 58\n            y: 83\n        - timeseriesDefinition:\n            request:\n              - query:\n                  - eventQuery:\n                      compute:\n                        - aggregation: count\n                      dataSource: logs\n                      groupBy:\n                        - facet: host\n                          limit: 10\n                          sort:\n                            aggregation: avg\n                            metric: '@lambda.max_memory_used'\n                      indexes:\n                        - days-3\n                      name: my-query\n          widgetLayout:\n            height: 16\n            width: 28\n            x: 29\n            y: 83\n        - timeseriesDefinition:\n            request:\n              - query:\n                  - processQuery:\n                      aggregator: sum\n                      dataSource: process\n                      isNormalizedCpu: true\n                      limit: 10\n                      metric: process.stat.cpu.total_pct\n                      name: my_process_query\n                      sort: asc\n                      tagFilters:\n                        - some_filter\n                      textFilter: abc\n          widgetLayout:\n            height: 16\n            width: 28\n            x: 0\n            y: 83\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import datadog:index/dashboard:Dashboard my_service_dashboard sv7-gyh-kas\n```\n\n ",
            "properties": {
                "dashboardLists": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "A list of dashboard lists this dashboard belongs to.\n"
                },
                "dashboardListsRemoveds": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "A list of dashboard lists this dashboard should be removed from. Internal only.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The description of the dashboard.\n"
                },
                "isReadOnly": {
                    "type": "boolean",
                    "description": "Whether this dashboard is read-only. **Deprecated.** Prefer using `restricted_roles` to define which roles are required to edit the dashboard.\n",
                    "deprecationMessage": "Prefer using `restricted_roles` to define which roles are required to edit the dashboard."
                },
                "layoutType": {
                    "type": "string",
                    "description": "The layout type of the dashboard. Valid values are `ordered`, `free`.\n"
                },
                "notifyLists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The list of handles for the users to notify when changes are made to this dashboard.\n"
                },
                "reflowType": {
                    "type": "string",
                    "description": "The reflow type of a new dashboard layout. Set this only when layout type is `ordered`. If set to `fixed`, the dashboard expects all widgets to have a layout, and if it's set to `auto`, widgets should not have layouts. Valid values are `auto`, `fixed`.\n"
                },
                "restrictedRoles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "UUIDs of roles whose associated users are authorized to edit the dashboard.\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tags assigned to the Dashboard. Only team names of the form `team:\u003cname\u003e` are supported.\n"
                },
                "templateVariablePresets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardTemplateVariablePreset:DashboardTemplateVariablePreset"
                    },
                    "description": "The list of selectable template variable presets for this dashboard.\n"
                },
                "templateVariables": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardTemplateVariable:DashboardTemplateVariable"
                    },
                    "description": "The list of template variables for this dashboard.\n"
                },
                "title": {
                    "type": "string",
                    "description": "The title of the dashboard.\n"
                },
                "url": {
                    "type": "string",
                    "description": "The URL of the dashboard.\n"
                },
                "widgets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidget:DashboardWidget"
                    },
                    "description": "The list of widgets to display on the dashboard.\n"
                }
            },
            "required": [
                "dashboardListsRemoveds",
                "layoutType",
                "title",
                "url"
            ],
            "inputProperties": {
                "dashboardLists": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "A list of dashboard lists this dashboard belongs to.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The description of the dashboard.\n"
                },
                "isReadOnly": {
                    "type": "boolean",
                    "description": "Whether this dashboard is read-only. **Deprecated.** Prefer using `restricted_roles` to define which roles are required to edit the dashboard.\n",
                    "deprecationMessage": "Prefer using `restricted_roles` to define which roles are required to edit the dashboard."
                },
                "layoutType": {
                    "type": "string",
                    "description": "The layout type of the dashboard. Valid values are `ordered`, `free`.\n",
                    "willReplaceOnChanges": true
                },
                "notifyLists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The list of handles for the users to notify when changes are made to this dashboard.\n"
                },
                "reflowType": {
                    "type": "string",
                    "description": "The reflow type of a new dashboard layout. Set this only when layout type is `ordered`. If set to `fixed`, the dashboard expects all widgets to have a layout, and if it's set to `auto`, widgets should not have layouts. Valid values are `auto`, `fixed`.\n"
                },
                "restrictedRoles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "UUIDs of roles whose associated users are authorized to edit the dashboard.\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tags assigned to the Dashboard. Only team names of the form `team:\u003cname\u003e` are supported.\n"
                },
                "templateVariablePresets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardTemplateVariablePreset:DashboardTemplateVariablePreset"
                    },
                    "description": "The list of selectable template variable presets for this dashboard.\n"
                },
                "templateVariables": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardTemplateVariable:DashboardTemplateVariable"
                    },
                    "description": "The list of template variables for this dashboard.\n"
                },
                "title": {
                    "type": "string",
                    "description": "The title of the dashboard.\n"
                },
                "url": {
                    "type": "string",
                    "description": "The URL of the dashboard.\n"
                },
                "widgets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidget:DashboardWidget"
                    },
                    "description": "The list of widgets to display on the dashboard.\n"
                }
            },
            "requiredInputs": [
                "layoutType",
                "title"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Dashboard resources.\n",
                "properties": {
                    "dashboardLists": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "description": "A list of dashboard lists this dashboard belongs to.\n"
                    },
                    "dashboardListsRemoveds": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "description": "A list of dashboard lists this dashboard should be removed from. Internal only.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "The description of the dashboard.\n"
                    },
                    "isReadOnly": {
                        "type": "boolean",
                        "description": "Whether this dashboard is read-only. **Deprecated.** Prefer using `restricted_roles` to define which roles are required to edit the dashboard.\n",
                        "deprecationMessage": "Prefer using `restricted_roles` to define which roles are required to edit the dashboard."
                    },
                    "layoutType": {
                        "type": "string",
                        "description": "The layout type of the dashboard. Valid values are `ordered`, `free`.\n",
                        "willReplaceOnChanges": true
                    },
                    "notifyLists": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The list of handles for the users to notify when changes are made to this dashboard.\n"
                    },
                    "reflowType": {
                        "type": "string",
                        "description": "The reflow type of a new dashboard layout. Set this only when layout type is `ordered`. If set to `fixed`, the dashboard expects all widgets to have a layout, and if it's set to `auto`, widgets should not have layouts. Valid values are `auto`, `fixed`.\n"
                    },
                    "restrictedRoles": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "UUIDs of roles whose associated users are authorized to edit the dashboard.\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of tags assigned to the Dashboard. Only team names of the form `team:\u003cname\u003e` are supported.\n"
                    },
                    "templateVariablePresets": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/datadog:index/DashboardTemplateVariablePreset:DashboardTemplateVariablePreset"
                        },
                        "description": "The list of selectable template variable presets for this dashboard.\n"
                    },
                    "templateVariables": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/datadog:index/DashboardTemplateVariable:DashboardTemplateVariable"
                        },
                        "description": "The list of template variables for this dashboard.\n"
                    },
                    "title": {
                        "type": "string",
                        "description": "The title of the dashboard.\n"
                    },
                    "url": {
                        "type": "string",
                        "description": "The URL of the dashboard.\n"
                    },
                    "widgets": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/datadog:index/DashboardWidget:DashboardWidget"
                        },
                        "description": "The list of widgets to display on the dashboard.\n"
                    }
                },
                "type": "object"
            }
        },
        "datadog:index/dashboardJson:DashboardJson": {
            "description": "Provides a Datadog dashboard JSON resource. This can be used to create and manage Datadog dashboards using the JSON definition.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as datadog from \"@pulumi/datadog\";\n\n// Example Dashboard JSON\nconst dashboardJson = new datadog.DashboardJson(\"dashboardJson\", {dashboard: `{\n   \"title\":\"Ordered Layout Dashboard\",\n   \"description\":\"Created using the Datadog provider in Terraform\",\n   \"widgets\":[\n      {\n         \"id\":719369537777170,\n         \"definition\":{\n            \"title\":\"Widget Title\",\n            \"type\":\"alert_graph\",\n            \"alert_id\":\"895605\",\n            \"viz_type\":\"timeseries\"\n         }\n      },\n      {\n         \"id\":2306240030393868,\n         \"definition\":{\n            \"title\":\"Widget Title\",\n            \"type\":\"alert_value\",\n            \"alert_id\":\"895605\",\n            \"unit\":\"b\",\n            \"text_align\":\"center\",\n            \"precision\":3\n         }\n      },\n      {\n         \"id\":6990998850881326,\n         \"definition\":{\n            \"title\":\"Widget Title\",\n            \"type\":\"alert_value\",\n            \"alert_id\":\"895605\",\n            \"unit\":\"b\",\n            \"text_align\":\"center\",\n            \"precision\":3\n         }\n      },\n      {\n         \"id\":3351284044659007,\n         \"definition\":{\n            \"title\":\"Widget Title\",\n            \"type\":\"change\",\n            \"requests\":[\n               {\n                  \"q\":\"avg:system.load.1{env:staging} by {account}\",\n                  \"compare_to\":\"week_before\",\n                  \"change_type\":\"absolute\",\n                  \"order_dir\":\"desc\",\n                  \"increase_good\":true,\n                  \"order_by\":\"name\",\n                  \"show_present\":true\n               }\n            ]\n         }\n      },\n      {\n         \"id\":6450290622996182,\n         \"definition\":{\n            \"title\":\"Widget Title\",\n            \"show_legend\":false,\n            \"type\":\"distribution\",\n            \"requests\":[\n               {\n                  \"q\":\"avg:system.load.1{env:staging} by {account}\",\n                  \"style\":{\n                     \"palette\":\"warm\"\n                  }\n               }\n            ]\n         }\n      },\n      {\n         \"id\":4902842646291536,\n         \"definition\":{\n            \"title\":\"Widget Title\",\n            \"type\":\"check_status\",\n            \"check\":\"aws.ecs.agent_connected\",\n            \"grouping\":\"cluster\",\n            \"group_by\":[\n               \"account\",\n               \"cluster\"\n            ],\n            \"tags\":[\n               \"account:demo\",\n               \"cluster:awseb-ruthebdog-env-8-dn3m6u3gvk\"\n            ]\n         }\n      },\n      {\n         \"id\":6392349954822644,\n         \"definition\":{\n            \"title\":\"Widget Title\",\n            \"show_legend\":false,\n            \"type\":\"heatmap\",\n            \"yaxis\":{\n               \"scale\":\"sqrt\",\n               \"include_zero\":true,\n               \"min\":\"1\",\n               \"max\":\"2\"\n            },\n            \"requests\":[\n               {\n                  \"q\":\"avg:system.load.1{env:staging} by {account}\",\n                  \"style\":{\n                     \"palette\":\"warm\"\n                  }\n               }\n            ]\n         }\n      },\n      {\n         \"id\":5222961478940988,\n         \"definition\":{\n            \"title\":\"Widget Title\",\n            \"type\":\"hostmap\",\n            \"requests\":{\n               \"fill\":{\n                  \"q\":\"avg:system.load.1{*} by {host}\"\n               },\n               \"size\":{\n                  \"q\":\"avg:memcache.uptime{*} by {host}\"\n               }\n            },\n            \"node_type\":\"container\",\n            \"no_metric_hosts\":true,\n            \"no_group_hosts\":true,\n            \"group\":[\n               \"host\",\n               \"region\"\n            ],\n            \"scope\":[\n               \"region:us-east-1\",\n               \"aws_account:727006795293\"\n            ],\n            \"style\":{\n               \"palette\":\"yellow_to_green\",\n               \"palette_flip\":true,\n               \"fill_min\":\"10\",\n               \"fill_max\":\"20\"\n            }\n         }\n      },\n      {\n         \"id\":8121199734227072,\n         \"definition\":{\n            \"type\":\"note\",\n            \"content\":\"note text\",\n            \"background_color\":\"pink\",\n            \"font_size\":\"14\",\n            \"text_align\":\"center\",\n            \"show_tick\":true,\n            \"tick_pos\":\"50%\",\n            \"tick_edge\":\"left\"\n         }\n      },\n      {\n         \"id\":1775856835833038,\n         \"definition\":{\n            \"title\":\"Widget Title\",\n            \"type\":\"query_value\",\n            \"requests\":[\n               {\n                  \"q\":\"avg:system.load.1{env:staging} by {account}\",\n                  \"aggregator\":\"sum\",\n                  \"conditional_formats\":[\n                     {\n                        \"hide_value\":false,\n                        \"comparator\":\"\u003c\",\n                        \"palette\":\"white_on_green\",\n                        \"value\":2\n                     },\n                     {\n                        \"hide_value\":false,\n                        \"comparator\":\"\u003e\",\n                        \"palette\":\"white_on_red\",\n                        \"value\":2.2\n                     }\n                  ]\n               }\n            ],\n            \"autoscale\":true,\n            \"custom_unit\":\"xx\",\n            \"text_align\":\"right\",\n            \"precision\":4\n         }\n      },\n      {\n         \"id\":8461455966625581,\n         \"definition\":{\n            \"title\":\"Widget Title\",\n            \"type\":\"query_table\",\n            \"requests\":[\n               {\n                  \"q\":\"avg:system.load.1{env:staging} by {account}\",\n                  \"aggregator\":\"sum\",\n                  \"conditional_formats\":[\n                     {\n                        \"hide_value\":false,\n                        \"comparator\":\"\u003c\",\n                        \"palette\":\"white_on_green\",\n                        \"value\":2\n                     },\n                     {\n                        \"hide_value\":false,\n                        \"comparator\":\"\u003e\",\n                        \"palette\":\"white_on_red\",\n                        \"value\":2.2\n                     }\n                  ],\n                  \"limit\":10\n               }\n            ]\n         }\n      },\n      {\n         \"id\":8660006349418736,\n         \"definition\":{\n            \"title\":\"Widget Title\",\n            \"type\":\"scatterplot\",\n            \"requests\":{\n               \"x\":{\n                  \"q\":\"avg:system.cpu.user{*} by {service, account}\",\n                  \"aggregator\":\"max\"\n               },\n               \"y\":{\n                  \"q\":\"avg:system.mem.used{*} by {service, account}\",\n                  \"aggregator\":\"min\"\n               }\n            },\n            \"xaxis\":{\n               \"scale\":\"pow\",\n               \"label\":\"x\",\n               \"include_zero\":true,\n               \"min\":\"1\",\n               \"max\":\"2000\"\n            },\n            \"yaxis\":{\n               \"scale\":\"log\",\n               \"label\":\"y\",\n               \"include_zero\":false,\n               \"min\":\"5\",\n               \"max\":\"2222\"\n            },\n            \"color_by_groups\":[\n               \"account\",\n               \"apm-role-group\"\n            ]\n         }\n      },\n      {\n         \"id\":1669590772917638,\n         \"definition\":{\n            \"title\":\"env: prod, datacenter:dc1, service: master-db\",\n            \"title_size\":\"16\",\n            \"title_align\":\"left\",\n            \"type\":\"servicemap\",\n            \"service\":\"master-db\",\n            \"filters\":[\n               \"env:prod\",\n               \"datacenter:dc1\"\n            ]\n         }\n      },\n      {\n         \"id\":2138829058361817,\n         \"definition\":{\n            \"title\":\"Widget Title\",\n            \"show_legend\":true,\n            \"legend_size\":\"2\",\n            \"type\":\"timeseries\",\n            \"requests\":[\n               {\n                  \"q\":\"avg:system.cpu.user{app:general} by {env}\",\n                  \"on_right_yaxis\":false,\n                  \"metadata\":[\n                     {\n                        \"expression\":\"avg:system.cpu.user{app:general} by {env}\",\n                        \"alias_name\":\"Alpha\"\n                     }\n                  ],\n                  \"style\":{\n                     \"palette\":\"warm\",\n                     \"line_type\":\"dashed\",\n                     \"line_width\":\"thin\"\n                  },\n                  \"display_type\":\"line\"\n               },\n               {\n                  \"on_right_yaxis\":false,\n                  \"log_query\":{\n                     \"index\":\"mcnulty\",\n                     \"search\":{\n                        \"query\":\"status:info\"\n                     },\n                     \"group_by\":[\n                        {\n                           \"facet\":\"host\",\n                           \"sort\":{\n                              \"facet\":\"@duration\",\n                              \"aggregation\":\"avg\",\n                              \"order\":\"desc\"\n                           },\n                           \"limit\":10\n                        }\n                     ],\n                     \"compute\":{\n                        \"facet\":\"@duration\",\n                        \"interval\":5000,\n                        \"aggregation\":\"avg\"\n                     }\n                  },\n                  \"display_type\":\"area\"\n               },\n               {\n                  \"on_right_yaxis\":false,\n                  \"apm_query\":{\n                     \"index\":\"apm-search\",\n                     \"search\":{\n                        \"query\":\"type:web\"\n                     },\n                     \"group_by\":[\n                        {\n                           \"facet\":\"resource_name\",\n                           \"sort\":{\n                              \"facet\":\"@string_query.interval\",\n                              \"aggregation\":\"avg\",\n                              \"order\":\"desc\"\n                           },\n                           \"limit\":50\n                        }\n                     ],\n                     \"compute\":{\n                        \"facet\":\"@duration\",\n                        \"interval\":5000,\n                        \"aggregation\":\"avg\"\n                     }\n                  },\n                  \"display_type\":\"bars\"\n               },\n               {\n                  \"on_right_yaxis\":false,\n                  \"process_query\":{\n                     \"search_by\":\"error\",\n                     \"metric\":\"process.stat.cpu.total_pct\",\n                     \"limit\":50,\n                     \"filter_by\":[\n                        \"active\"\n                     ]\n                  },\n                  \"display_type\":\"area\"\n               }\n            ],\n            \"yaxis\":{\n               \"scale\":\"log\",\n               \"include_zero\":false,\n               \"max\":\"100\"\n            },\n            \"events\":[\n               {\n                  \"q\":\"sources:test tags:1\"\n               },\n               {\n                  \"q\":\"sources:test tags:2\"\n               }\n            ],\n            \"markers\":[\n               {\n                  \"label\":\" z=6 \",\n                  \"value\":\"y = 4\",\n                  \"display_type\":\"error dashed\"\n               },\n               {\n                  \"label\":\" x=8 \",\n                  \"value\":\"10 \u003c y \u003c 999\",\n                  \"display_type\":\"ok solid\"\n               }\n            ]\n         }\n      },\n      {\n         \"id\":7307171374656551,\n         \"definition\":{\n            \"title\":\"Widget Title\",\n            \"type\":\"toplist\",\n            \"requests\":[\n               {\n                  \"q\":\"avg:system.cpu.user{app:general} by {env}\",\n                  \"conditional_formats\":[\n                     {\n                        \"hide_value\":false,\n                        \"comparator\":\"\u003c\",\n                        \"palette\":\"white_on_green\",\n                        \"value\":2\n                     },\n                     {\n                        \"hide_value\":false,\n                        \"comparator\":\"\u003e\",\n                        \"palette\":\"white_on_red\",\n                        \"value\":2.2\n                     }\n                  ]\n               }\n            ]\n         }\n      },\n      {\n         \"id\":7086674838553258,\n         \"definition\":{\n            \"title\":\"Group Widget\",\n            \"type\":\"group\",\n            \"layout_type\":\"ordered\",\n            \"widgets\":[\n               {\n                  \"id\":3726092277657502,\n                  \"definition\":{\n                     \"type\":\"note\",\n                     \"content\":\"cluster note widget\",\n                     \"background_color\":\"pink\",\n                     \"font_size\":\"14\",\n                     \"text_align\":\"center\",\n                     \"show_tick\":true,\n                     \"tick_pos\":\"50%\",\n                     \"tick_edge\":\"left\"\n                  }\n               },\n               {\n                  \"id\":6376384650558057,\n                  \"definition\":{\n                     \"title\":\"Alert Graph\",\n                     \"type\":\"alert_graph\",\n                     \"alert_id\":\"123\",\n                     \"viz_type\":\"toplist\"\n                  }\n               }\n            ]\n         }\n      },\n      {\n         \"id\":4668903563678912,\n         \"definition\":{\n            \"title\":\"Widget Title\",\n            \"type\":\"slo\",\n            \"view_type\":\"detail\",\n            \"time_windows\":[\n               \"7d\",\n               \"previous_week\"\n            ],\n            \"slo_id\":\"56789\",\n            \"show_error_budget\":true,\n            \"view_mode\":\"overall\",\n            \"global_time_target\":\"0\"\n         }\n      }\n   ],\n   \"template_variables\":[\n      {\n         \"name\":\"var_1\",\n         \"default\":\"aws\",\n         \"prefix\":\"host\"\n      },\n      {\n         \"name\":\"var_2\",\n         \"default\":\"autoscaling\",\n         \"prefix\":\"service_name\"\n      }\n   ],\n   \"layout_type\":\"ordered\",\n   \"is_read_only\":true,\n   \"notify_list\":[\n\n   ],\n   \"template_variable_presets\":[\n      {\n         \"name\":\"preset_1\",\n         \"template_variables\":[\n            {\n               \"name\":\"var_1\",\n               \"value\":\"host.dc\"\n            },\n            {\n               \"name\":\"var_2\",\n               \"value\":\"my_service\"\n            }\n         ]\n      }\n   ]\n}\n\n`});\n```\n```python\nimport pulumi\nimport pulumi_datadog as datadog\n\n# Example Dashboard JSON\ndashboard_json = datadog.DashboardJson(\"dashboardJson\", dashboard=\"\"\"{\n   \"title\":\"Ordered Layout Dashboard\",\n   \"description\":\"Created using the Datadog provider in Terraform\",\n   \"widgets\":[\n      {\n         \"id\":719369537777170,\n         \"definition\":{\n            \"title\":\"Widget Title\",\n            \"type\":\"alert_graph\",\n            \"alert_id\":\"895605\",\n            \"viz_type\":\"timeseries\"\n         }\n      },\n      {\n         \"id\":2306240030393868,\n         \"definition\":{\n            \"title\":\"Widget Title\",\n            \"type\":\"alert_value\",\n            \"alert_id\":\"895605\",\n            \"unit\":\"b\",\n            \"text_align\":\"center\",\n            \"precision\":3\n         }\n      },\n      {\n         \"id\":6990998850881326,\n         \"definition\":{\n            \"title\":\"Widget Title\",\n            \"type\":\"alert_value\",\n            \"alert_id\":\"895605\",\n            \"unit\":\"b\",\n            \"text_align\":\"center\",\n            \"precision\":3\n         }\n      },\n      {\n         \"id\":3351284044659007,\n         \"definition\":{\n            \"title\":\"Widget Title\",\n            \"type\":\"change\",\n            \"requests\":[\n               {\n                  \"q\":\"avg:system.load.1{env:staging} by {account}\",\n                  \"compare_to\":\"week_before\",\n                  \"change_type\":\"absolute\",\n                  \"order_dir\":\"desc\",\n                  \"increase_good\":true,\n                  \"order_by\":\"name\",\n                  \"show_present\":true\n               }\n            ]\n         }\n      },\n      {\n         \"id\":6450290622996182,\n         \"definition\":{\n            \"title\":\"Widget Title\",\n            \"show_legend\":false,\n            \"type\":\"distribution\",\n            \"requests\":[\n               {\n                  \"q\":\"avg:system.load.1{env:staging} by {account}\",\n                  \"style\":{\n                     \"palette\":\"warm\"\n                  }\n               }\n            ]\n         }\n      },\n      {\n         \"id\":4902842646291536,\n         \"definition\":{\n            \"title\":\"Widget Title\",\n            \"type\":\"check_status\",\n            \"check\":\"aws.ecs.agent_connected\",\n            \"grouping\":\"cluster\",\n            \"group_by\":[\n               \"account\",\n               \"cluster\"\n            ],\n            \"tags\":[\n               \"account:demo\",\n               \"cluster:awseb-ruthebdog-env-8-dn3m6u3gvk\"\n            ]\n         }\n      },\n      {\n         \"id\":6392349954822644,\n         \"definition\":{\n            \"title\":\"Widget Title\",\n            \"show_legend\":false,\n            \"type\":\"heatmap\",\n            \"yaxis\":{\n               \"scale\":\"sqrt\",\n               \"include_zero\":true,\n               \"min\":\"1\",\n               \"max\":\"2\"\n            },\n            \"requests\":[\n               {\n                  \"q\":\"avg:system.load.1{env:staging} by {account}\",\n                  \"style\":{\n                     \"palette\":\"warm\"\n                  }\n               }\n            ]\n         }\n      },\n      {\n         \"id\":5222961478940988,\n         \"definition\":{\n            \"title\":\"Widget Title\",\n            \"type\":\"hostmap\",\n            \"requests\":{\n               \"fill\":{\n                  \"q\":\"avg:system.load.1{*} by {host}\"\n               },\n               \"size\":{\n                  \"q\":\"avg:memcache.uptime{*} by {host}\"\n               }\n            },\n            \"node_type\":\"container\",\n            \"no_metric_hosts\":true,\n            \"no_group_hosts\":true,\n            \"group\":[\n               \"host\",\n               \"region\"\n            ],\n            \"scope\":[\n               \"region:us-east-1\",\n               \"aws_account:727006795293\"\n            ],\n            \"style\":{\n               \"palette\":\"yellow_to_green\",\n               \"palette_flip\":true,\n               \"fill_min\":\"10\",\n               \"fill_max\":\"20\"\n            }\n         }\n      },\n      {\n         \"id\":8121199734227072,\n         \"definition\":{\n            \"type\":\"note\",\n            \"content\":\"note text\",\n            \"background_color\":\"pink\",\n            \"font_size\":\"14\",\n            \"text_align\":\"center\",\n            \"show_tick\":true,\n            \"tick_pos\":\"50%\",\n            \"tick_edge\":\"left\"\n         }\n      },\n      {\n         \"id\":1775856835833038,\n         \"definition\":{\n            \"title\":\"Widget Title\",\n            \"type\":\"query_value\",\n            \"requests\":[\n               {\n                  \"q\":\"avg:system.load.1{env:staging} by {account}\",\n                  \"aggregator\":\"sum\",\n                  \"conditional_formats\":[\n                     {\n                        \"hide_value\":false,\n                        \"comparator\":\"\u003c\",\n                        \"palette\":\"white_on_green\",\n                        \"value\":2\n                     },\n                     {\n                        \"hide_value\":false,\n                        \"comparator\":\"\u003e\",\n                        \"palette\":\"white_on_red\",\n                        \"value\":2.2\n                     }\n                  ]\n               }\n            ],\n            \"autoscale\":true,\n            \"custom_unit\":\"xx\",\n            \"text_align\":\"right\",\n            \"precision\":4\n         }\n      },\n      {\n         \"id\":8461455966625581,\n         \"definition\":{\n            \"title\":\"Widget Title\",\n            \"type\":\"query_table\",\n            \"requests\":[\n               {\n                  \"q\":\"avg:system.load.1{env:staging} by {account}\",\n                  \"aggregator\":\"sum\",\n                  \"conditional_formats\":[\n                     {\n                        \"hide_value\":false,\n                        \"comparator\":\"\u003c\",\n                        \"palette\":\"white_on_green\",\n                        \"value\":2\n                     },\n                     {\n                        \"hide_value\":false,\n                        \"comparator\":\"\u003e\",\n                        \"palette\":\"white_on_red\",\n                        \"value\":2.2\n                     }\n                  ],\n                  \"limit\":10\n               }\n            ]\n         }\n      },\n      {\n         \"id\":8660006349418736,\n         \"definition\":{\n            \"title\":\"Widget Title\",\n            \"type\":\"scatterplot\",\n            \"requests\":{\n               \"x\":{\n                  \"q\":\"avg:system.cpu.user{*} by {service, account}\",\n                  \"aggregator\":\"max\"\n               },\n               \"y\":{\n                  \"q\":\"avg:system.mem.used{*} by {service, account}\",\n                  \"aggregator\":\"min\"\n               }\n            },\n            \"xaxis\":{\n               \"scale\":\"pow\",\n               \"label\":\"x\",\n               \"include_zero\":true,\n               \"min\":\"1\",\n               \"max\":\"2000\"\n            },\n            \"yaxis\":{\n               \"scale\":\"log\",\n               \"label\":\"y\",\n               \"include_zero\":false,\n               \"min\":\"5\",\n               \"max\":\"2222\"\n            },\n            \"color_by_groups\":[\n               \"account\",\n               \"apm-role-group\"\n            ]\n         }\n      },\n      {\n         \"id\":1669590772917638,\n         \"definition\":{\n            \"title\":\"env: prod, datacenter:dc1, service: master-db\",\n            \"title_size\":\"16\",\n            \"title_align\":\"left\",\n            \"type\":\"servicemap\",\n            \"service\":\"master-db\",\n            \"filters\":[\n               \"env:prod\",\n               \"datacenter:dc1\"\n            ]\n         }\n      },\n      {\n         \"id\":2138829058361817,\n         \"definition\":{\n            \"title\":\"Widget Title\",\n            \"show_legend\":true,\n            \"legend_size\":\"2\",\n            \"type\":\"timeseries\",\n            \"requests\":[\n               {\n                  \"q\":\"avg:system.cpu.user{app:general} by {env}\",\n                  \"on_right_yaxis\":false,\n                  \"metadata\":[\n                     {\n                        \"expression\":\"avg:system.cpu.user{app:general} by {env}\",\n                        \"alias_name\":\"Alpha\"\n                     }\n                  ],\n                  \"style\":{\n                     \"palette\":\"warm\",\n                     \"line_type\":\"dashed\",\n                     \"line_width\":\"thin\"\n                  },\n                  \"display_type\":\"line\"\n               },\n               {\n                  \"on_right_yaxis\":false,\n                  \"log_query\":{\n                     \"index\":\"mcnulty\",\n                     \"search\":{\n                        \"query\":\"status:info\"\n                     },\n                     \"group_by\":[\n                        {\n                           \"facet\":\"host\",\n                           \"sort\":{\n                              \"facet\":\"@duration\",\n                              \"aggregation\":\"avg\",\n                              \"order\":\"desc\"\n                           },\n                           \"limit\":10\n                        }\n                     ],\n                     \"compute\":{\n                        \"facet\":\"@duration\",\n                        \"interval\":5000,\n                        \"aggregation\":\"avg\"\n                     }\n                  },\n                  \"display_type\":\"area\"\n               },\n               {\n                  \"on_right_yaxis\":false,\n                  \"apm_query\":{\n                     \"index\":\"apm-search\",\n                     \"search\":{\n                        \"query\":\"type:web\"\n                     },\n                     \"group_by\":[\n                        {\n                           \"facet\":\"resource_name\",\n                           \"sort\":{\n                              \"facet\":\"@string_query.interval\",\n                              \"aggregation\":\"avg\",\n                              \"order\":\"desc\"\n                           },\n                           \"limit\":50\n                        }\n                     ],\n                     \"compute\":{\n                        \"facet\":\"@duration\",\n                        \"interval\":5000,\n                        \"aggregation\":\"avg\"\n                     }\n                  },\n                  \"display_type\":\"bars\"\n               },\n               {\n                  \"on_right_yaxis\":false,\n                  \"process_query\":{\n                     \"search_by\":\"error\",\n                     \"metric\":\"process.stat.cpu.total_pct\",\n                     \"limit\":50,\n                     \"filter_by\":[\n                        \"active\"\n                     ]\n                  },\n                  \"display_type\":\"area\"\n               }\n            ],\n            \"yaxis\":{\n               \"scale\":\"log\",\n               \"include_zero\":false,\n               \"max\":\"100\"\n            },\n            \"events\":[\n               {\n                  \"q\":\"sources:test tags:1\"\n               },\n               {\n                  \"q\":\"sources:test tags:2\"\n               }\n            ],\n            \"markers\":[\n               {\n                  \"label\":\" z=6 \",\n                  \"value\":\"y = 4\",\n                  \"display_type\":\"error dashed\"\n               },\n               {\n                  \"label\":\" x=8 \",\n                  \"value\":\"10 \u003c y \u003c 999\",\n                  \"display_type\":\"ok solid\"\n               }\n            ]\n         }\n      },\n      {\n         \"id\":7307171374656551,\n         \"definition\":{\n            \"title\":\"Widget Title\",\n            \"type\":\"toplist\",\n            \"requests\":[\n               {\n                  \"q\":\"avg:system.cpu.user{app:general} by {env}\",\n                  \"conditional_formats\":[\n                     {\n                        \"hide_value\":false,\n                        \"comparator\":\"\u003c\",\n                        \"palette\":\"white_on_green\",\n                        \"value\":2\n                     },\n                     {\n                        \"hide_value\":false,\n                        \"comparator\":\"\u003e\",\n                        \"palette\":\"white_on_red\",\n                        \"value\":2.2\n                     }\n                  ]\n               }\n            ]\n         }\n      },\n      {\n         \"id\":7086674838553258,\n         \"definition\":{\n            \"title\":\"Group Widget\",\n            \"type\":\"group\",\n            \"layout_type\":\"ordered\",\n            \"widgets\":[\n               {\n                  \"id\":3726092277657502,\n                  \"definition\":{\n                     \"type\":\"note\",\n                     \"content\":\"cluster note widget\",\n                     \"background_color\":\"pink\",\n                     \"font_size\":\"14\",\n                     \"text_align\":\"center\",\n                     \"show_tick\":true,\n                     \"tick_pos\":\"50%\",\n                     \"tick_edge\":\"left\"\n                  }\n               },\n               {\n                  \"id\":6376384650558057,\n                  \"definition\":{\n                     \"title\":\"Alert Graph\",\n                     \"type\":\"alert_graph\",\n                     \"alert_id\":\"123\",\n                     \"viz_type\":\"toplist\"\n                  }\n               }\n            ]\n         }\n      },\n      {\n         \"id\":4668903563678912,\n         \"definition\":{\n            \"title\":\"Widget Title\",\n            \"type\":\"slo\",\n            \"view_type\":\"detail\",\n            \"time_windows\":[\n               \"7d\",\n               \"previous_week\"\n            ],\n            \"slo_id\":\"56789\",\n            \"show_error_budget\":true,\n            \"view_mode\":\"overall\",\n            \"global_time_target\":\"0\"\n         }\n      }\n   ],\n   \"template_variables\":[\n      {\n         \"name\":\"var_1\",\n         \"default\":\"aws\",\n         \"prefix\":\"host\"\n      },\n      {\n         \"name\":\"var_2\",\n         \"default\":\"autoscaling\",\n         \"prefix\":\"service_name\"\n      }\n   ],\n   \"layout_type\":\"ordered\",\n   \"is_read_only\":true,\n   \"notify_list\":[\n\n   ],\n   \"template_variable_presets\":[\n      {\n         \"name\":\"preset_1\",\n         \"template_variables\":[\n            {\n               \"name\":\"var_1\",\n               \"value\":\"host.dc\"\n            },\n            {\n               \"name\":\"var_2\",\n               \"value\":\"my_service\"\n            }\n         ]\n      }\n   ]\n}\n\n\"\"\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Datadog = Pulumi.Datadog;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    // Example Dashboard JSON\n    var dashboardJson = new Datadog.DashboardJson(\"dashboardJson\", new()\n    {\n        Dashboard = @\"{\n   \"\"title\"\":\"\"Ordered Layout Dashboard\"\",\n   \"\"description\"\":\"\"Created using the Datadog provider in Terraform\"\",\n   \"\"widgets\"\":[\n      {\n         \"\"id\"\":719369537777170,\n         \"\"definition\"\":{\n            \"\"title\"\":\"\"Widget Title\"\",\n            \"\"type\"\":\"\"alert_graph\"\",\n            \"\"alert_id\"\":\"\"895605\"\",\n            \"\"viz_type\"\":\"\"timeseries\"\"\n         }\n      },\n      {\n         \"\"id\"\":2306240030393868,\n         \"\"definition\"\":{\n            \"\"title\"\":\"\"Widget Title\"\",\n            \"\"type\"\":\"\"alert_value\"\",\n            \"\"alert_id\"\":\"\"895605\"\",\n            \"\"unit\"\":\"\"b\"\",\n            \"\"text_align\"\":\"\"center\"\",\n            \"\"precision\"\":3\n         }\n      },\n      {\n         \"\"id\"\":6990998850881326,\n         \"\"definition\"\":{\n            \"\"title\"\":\"\"Widget Title\"\",\n            \"\"type\"\":\"\"alert_value\"\",\n            \"\"alert_id\"\":\"\"895605\"\",\n            \"\"unit\"\":\"\"b\"\",\n            \"\"text_align\"\":\"\"center\"\",\n            \"\"precision\"\":3\n         }\n      },\n      {\n         \"\"id\"\":3351284044659007,\n         \"\"definition\"\":{\n            \"\"title\"\":\"\"Widget Title\"\",\n            \"\"type\"\":\"\"change\"\",\n            \"\"requests\"\":[\n               {\n                  \"\"q\"\":\"\"avg:system.load.1{env:staging} by {account}\"\",\n                  \"\"compare_to\"\":\"\"week_before\"\",\n                  \"\"change_type\"\":\"\"absolute\"\",\n                  \"\"order_dir\"\":\"\"desc\"\",\n                  \"\"increase_good\"\":true,\n                  \"\"order_by\"\":\"\"name\"\",\n                  \"\"show_present\"\":true\n               }\n            ]\n         }\n      },\n      {\n         \"\"id\"\":6450290622996182,\n         \"\"definition\"\":{\n            \"\"title\"\":\"\"Widget Title\"\",\n            \"\"show_legend\"\":false,\n            \"\"type\"\":\"\"distribution\"\",\n            \"\"requests\"\":[\n               {\n                  \"\"q\"\":\"\"avg:system.load.1{env:staging} by {account}\"\",\n                  \"\"style\"\":{\n                     \"\"palette\"\":\"\"warm\"\"\n                  }\n               }\n            ]\n         }\n      },\n      {\n         \"\"id\"\":4902842646291536,\n         \"\"definition\"\":{\n            \"\"title\"\":\"\"Widget Title\"\",\n            \"\"type\"\":\"\"check_status\"\",\n            \"\"check\"\":\"\"aws.ecs.agent_connected\"\",\n            \"\"grouping\"\":\"\"cluster\"\",\n            \"\"group_by\"\":[\n               \"\"account\"\",\n               \"\"cluster\"\"\n            ],\n            \"\"tags\"\":[\n               \"\"account:demo\"\",\n               \"\"cluster:awseb-ruthebdog-env-8-dn3m6u3gvk\"\"\n            ]\n         }\n      },\n      {\n         \"\"id\"\":6392349954822644,\n         \"\"definition\"\":{\n            \"\"title\"\":\"\"Widget Title\"\",\n            \"\"show_legend\"\":false,\n            \"\"type\"\":\"\"heatmap\"\",\n            \"\"yaxis\"\":{\n               \"\"scale\"\":\"\"sqrt\"\",\n               \"\"include_zero\"\":true,\n               \"\"min\"\":\"\"1\"\",\n               \"\"max\"\":\"\"2\"\"\n            },\n            \"\"requests\"\":[\n               {\n                  \"\"q\"\":\"\"avg:system.load.1{env:staging} by {account}\"\",\n                  \"\"style\"\":{\n                     \"\"palette\"\":\"\"warm\"\"\n                  }\n               }\n            ]\n         }\n      },\n      {\n         \"\"id\"\":5222961478940988,\n         \"\"definition\"\":{\n            \"\"title\"\":\"\"Widget Title\"\",\n            \"\"type\"\":\"\"hostmap\"\",\n            \"\"requests\"\":{\n               \"\"fill\"\":{\n                  \"\"q\"\":\"\"avg:system.load.1{*} by {host}\"\"\n               },\n               \"\"size\"\":{\n                  \"\"q\"\":\"\"avg:memcache.uptime{*} by {host}\"\"\n               }\n            },\n            \"\"node_type\"\":\"\"container\"\",\n            \"\"no_metric_hosts\"\":true,\n            \"\"no_group_hosts\"\":true,\n            \"\"group\"\":[\n               \"\"host\"\",\n               \"\"region\"\"\n            ],\n            \"\"scope\"\":[\n               \"\"region:us-east-1\"\",\n               \"\"aws_account:727006795293\"\"\n            ],\n            \"\"style\"\":{\n               \"\"palette\"\":\"\"yellow_to_green\"\",\n               \"\"palette_flip\"\":true,\n               \"\"fill_min\"\":\"\"10\"\",\n               \"\"fill_max\"\":\"\"20\"\"\n            }\n         }\n      },\n      {\n         \"\"id\"\":8121199734227072,\n         \"\"definition\"\":{\n            \"\"type\"\":\"\"note\"\",\n            \"\"content\"\":\"\"note text\"\",\n            \"\"background_color\"\":\"\"pink\"\",\n            \"\"font_size\"\":\"\"14\"\",\n            \"\"text_align\"\":\"\"center\"\",\n            \"\"show_tick\"\":true,\n            \"\"tick_pos\"\":\"\"50%\"\",\n            \"\"tick_edge\"\":\"\"left\"\"\n         }\n      },\n      {\n         \"\"id\"\":1775856835833038,\n         \"\"definition\"\":{\n            \"\"title\"\":\"\"Widget Title\"\",\n            \"\"type\"\":\"\"query_value\"\",\n            \"\"requests\"\":[\n               {\n                  \"\"q\"\":\"\"avg:system.load.1{env:staging} by {account}\"\",\n                  \"\"aggregator\"\":\"\"sum\"\",\n                  \"\"conditional_formats\"\":[\n                     {\n                        \"\"hide_value\"\":false,\n                        \"\"comparator\"\":\"\"\u003c\"\",\n                        \"\"palette\"\":\"\"white_on_green\"\",\n                        \"\"value\"\":2\n                     },\n                     {\n                        \"\"hide_value\"\":false,\n                        \"\"comparator\"\":\"\"\u003e\"\",\n                        \"\"palette\"\":\"\"white_on_red\"\",\n                        \"\"value\"\":2.2\n                     }\n                  ]\n               }\n            ],\n            \"\"autoscale\"\":true,\n            \"\"custom_unit\"\":\"\"xx\"\",\n            \"\"text_align\"\":\"\"right\"\",\n            \"\"precision\"\":4\n         }\n      },\n      {\n         \"\"id\"\":8461455966625581,\n         \"\"definition\"\":{\n            \"\"title\"\":\"\"Widget Title\"\",\n            \"\"type\"\":\"\"query_table\"\",\n            \"\"requests\"\":[\n               {\n                  \"\"q\"\":\"\"avg:system.load.1{env:staging} by {account}\"\",\n                  \"\"aggregator\"\":\"\"sum\"\",\n                  \"\"conditional_formats\"\":[\n                     {\n                        \"\"hide_value\"\":false,\n                        \"\"comparator\"\":\"\"\u003c\"\",\n                        \"\"palette\"\":\"\"white_on_green\"\",\n                        \"\"value\"\":2\n                     },\n                     {\n                        \"\"hide_value\"\":false,\n                        \"\"comparator\"\":\"\"\u003e\"\",\n                        \"\"palette\"\":\"\"white_on_red\"\",\n                        \"\"value\"\":2.2\n                     }\n                  ],\n                  \"\"limit\"\":10\n               }\n            ]\n         }\n      },\n      {\n         \"\"id\"\":8660006349418736,\n         \"\"definition\"\":{\n            \"\"title\"\":\"\"Widget Title\"\",\n            \"\"type\"\":\"\"scatterplot\"\",\n            \"\"requests\"\":{\n               \"\"x\"\":{\n                  \"\"q\"\":\"\"avg:system.cpu.user{*} by {service, account}\"\",\n                  \"\"aggregator\"\":\"\"max\"\"\n               },\n               \"\"y\"\":{\n                  \"\"q\"\":\"\"avg:system.mem.used{*} by {service, account}\"\",\n                  \"\"aggregator\"\":\"\"min\"\"\n               }\n            },\n            \"\"xaxis\"\":{\n               \"\"scale\"\":\"\"pow\"\",\n               \"\"label\"\":\"\"x\"\",\n               \"\"include_zero\"\":true,\n               \"\"min\"\":\"\"1\"\",\n               \"\"max\"\":\"\"2000\"\"\n            },\n            \"\"yaxis\"\":{\n               \"\"scale\"\":\"\"log\"\",\n               \"\"label\"\":\"\"y\"\",\n               \"\"include_zero\"\":false,\n               \"\"min\"\":\"\"5\"\",\n               \"\"max\"\":\"\"2222\"\"\n            },\n            \"\"color_by_groups\"\":[\n               \"\"account\"\",\n               \"\"apm-role-group\"\"\n            ]\n         }\n      },\n      {\n         \"\"id\"\":1669590772917638,\n         \"\"definition\"\":{\n            \"\"title\"\":\"\"env: prod, datacenter:dc1, service: master-db\"\",\n            \"\"title_size\"\":\"\"16\"\",\n            \"\"title_align\"\":\"\"left\"\",\n            \"\"type\"\":\"\"servicemap\"\",\n            \"\"service\"\":\"\"master-db\"\",\n            \"\"filters\"\":[\n               \"\"env:prod\"\",\n               \"\"datacenter:dc1\"\"\n            ]\n         }\n      },\n      {\n         \"\"id\"\":2138829058361817,\n         \"\"definition\"\":{\n            \"\"title\"\":\"\"Widget Title\"\",\n            \"\"show_legend\"\":true,\n            \"\"legend_size\"\":\"\"2\"\",\n            \"\"type\"\":\"\"timeseries\"\",\n            \"\"requests\"\":[\n               {\n                  \"\"q\"\":\"\"avg:system.cpu.user{app:general} by {env}\"\",\n                  \"\"on_right_yaxis\"\":false,\n                  \"\"metadata\"\":[\n                     {\n                        \"\"expression\"\":\"\"avg:system.cpu.user{app:general} by {env}\"\",\n                        \"\"alias_name\"\":\"\"Alpha\"\"\n                     }\n                  ],\n                  \"\"style\"\":{\n                     \"\"palette\"\":\"\"warm\"\",\n                     \"\"line_type\"\":\"\"dashed\"\",\n                     \"\"line_width\"\":\"\"thin\"\"\n                  },\n                  \"\"display_type\"\":\"\"line\"\"\n               },\n               {\n                  \"\"on_right_yaxis\"\":false,\n                  \"\"log_query\"\":{\n                     \"\"index\"\":\"\"mcnulty\"\",\n                     \"\"search\"\":{\n                        \"\"query\"\":\"\"status:info\"\"\n                     },\n                     \"\"group_by\"\":[\n                        {\n                           \"\"facet\"\":\"\"host\"\",\n                           \"\"sort\"\":{\n                              \"\"facet\"\":\"\"@duration\"\",\n                              \"\"aggregation\"\":\"\"avg\"\",\n                              \"\"order\"\":\"\"desc\"\"\n                           },\n                           \"\"limit\"\":10\n                        }\n                     ],\n                     \"\"compute\"\":{\n                        \"\"facet\"\":\"\"@duration\"\",\n                        \"\"interval\"\":5000,\n                        \"\"aggregation\"\":\"\"avg\"\"\n                     }\n                  },\n                  \"\"display_type\"\":\"\"area\"\"\n               },\n               {\n                  \"\"on_right_yaxis\"\":false,\n                  \"\"apm_query\"\":{\n                     \"\"index\"\":\"\"apm-search\"\",\n                     \"\"search\"\":{\n                        \"\"query\"\":\"\"type:web\"\"\n                     },\n                     \"\"group_by\"\":[\n                        {\n                           \"\"facet\"\":\"\"resource_name\"\",\n                           \"\"sort\"\":{\n                              \"\"facet\"\":\"\"@string_query.interval\"\",\n                              \"\"aggregation\"\":\"\"avg\"\",\n                              \"\"order\"\":\"\"desc\"\"\n                           },\n                           \"\"limit\"\":50\n                        }\n                     ],\n                     \"\"compute\"\":{\n                        \"\"facet\"\":\"\"@duration\"\",\n                        \"\"interval\"\":5000,\n                        \"\"aggregation\"\":\"\"avg\"\"\n                     }\n                  },\n                  \"\"display_type\"\":\"\"bars\"\"\n               },\n               {\n                  \"\"on_right_yaxis\"\":false,\n                  \"\"process_query\"\":{\n                     \"\"search_by\"\":\"\"error\"\",\n                     \"\"metric\"\":\"\"process.stat.cpu.total_pct\"\",\n                     \"\"limit\"\":50,\n                     \"\"filter_by\"\":[\n                        \"\"active\"\"\n                     ]\n                  },\n                  \"\"display_type\"\":\"\"area\"\"\n               }\n            ],\n            \"\"yaxis\"\":{\n               \"\"scale\"\":\"\"log\"\",\n               \"\"include_zero\"\":false,\n               \"\"max\"\":\"\"100\"\"\n            },\n            \"\"events\"\":[\n               {\n                  \"\"q\"\":\"\"sources:test tags:1\"\"\n               },\n               {\n                  \"\"q\"\":\"\"sources:test tags:2\"\"\n               }\n            ],\n            \"\"markers\"\":[\n               {\n                  \"\"label\"\":\"\" z=6 \"\",\n                  \"\"value\"\":\"\"y = 4\"\",\n                  \"\"display_type\"\":\"\"error dashed\"\"\n               },\n               {\n                  \"\"label\"\":\"\" x=8 \"\",\n                  \"\"value\"\":\"\"10 \u003c y \u003c 999\"\",\n                  \"\"display_type\"\":\"\"ok solid\"\"\n               }\n            ]\n         }\n      },\n      {\n         \"\"id\"\":7307171374656551,\n         \"\"definition\"\":{\n            \"\"title\"\":\"\"Widget Title\"\",\n            \"\"type\"\":\"\"toplist\"\",\n            \"\"requests\"\":[\n               {\n                  \"\"q\"\":\"\"avg:system.cpu.user{app:general} by {env}\"\",\n                  \"\"conditional_formats\"\":[\n                     {\n                        \"\"hide_value\"\":false,\n                        \"\"comparator\"\":\"\"\u003c\"\",\n                        \"\"palette\"\":\"\"white_on_green\"\",\n                        \"\"value\"\":2\n                     },\n                     {\n                        \"\"hide_value\"\":false,\n                        \"\"comparator\"\":\"\"\u003e\"\",\n                        \"\"palette\"\":\"\"white_on_red\"\",\n                        \"\"value\"\":2.2\n                     }\n                  ]\n               }\n            ]\n         }\n      },\n      {\n         \"\"id\"\":7086674838553258,\n         \"\"definition\"\":{\n            \"\"title\"\":\"\"Group Widget\"\",\n            \"\"type\"\":\"\"group\"\",\n            \"\"layout_type\"\":\"\"ordered\"\",\n            \"\"widgets\"\":[\n               {\n                  \"\"id\"\":3726092277657502,\n                  \"\"definition\"\":{\n                     \"\"type\"\":\"\"note\"\",\n                     \"\"content\"\":\"\"cluster note widget\"\",\n                     \"\"background_color\"\":\"\"pink\"\",\n                     \"\"font_size\"\":\"\"14\"\",\n                     \"\"text_align\"\":\"\"center\"\",\n                     \"\"show_tick\"\":true,\n                     \"\"tick_pos\"\":\"\"50%\"\",\n                     \"\"tick_edge\"\":\"\"left\"\"\n                  }\n               },\n               {\n                  \"\"id\"\":6376384650558057,\n                  \"\"definition\"\":{\n                     \"\"title\"\":\"\"Alert Graph\"\",\n                     \"\"type\"\":\"\"alert_graph\"\",\n                     \"\"alert_id\"\":\"\"123\"\",\n                     \"\"viz_type\"\":\"\"toplist\"\"\n                  }\n               }\n            ]\n         }\n      },\n      {\n         \"\"id\"\":4668903563678912,\n         \"\"definition\"\":{\n            \"\"title\"\":\"\"Widget Title\"\",\n            \"\"type\"\":\"\"slo\"\",\n            \"\"view_type\"\":\"\"detail\"\",\n            \"\"time_windows\"\":[\n               \"\"7d\"\",\n               \"\"previous_week\"\"\n            ],\n            \"\"slo_id\"\":\"\"56789\"\",\n            \"\"show_error_budget\"\":true,\n            \"\"view_mode\"\":\"\"overall\"\",\n            \"\"global_time_target\"\":\"\"0\"\"\n         }\n      }\n   ],\n   \"\"template_variables\"\":[\n      {\n         \"\"name\"\":\"\"var_1\"\",\n         \"\"default\"\":\"\"aws\"\",\n         \"\"prefix\"\":\"\"host\"\"\n      },\n      {\n         \"\"name\"\":\"\"var_2\"\",\n         \"\"default\"\":\"\"autoscaling\"\",\n         \"\"prefix\"\":\"\"service_name\"\"\n      }\n   ],\n   \"\"layout_type\"\":\"\"ordered\"\",\n   \"\"is_read_only\"\":true,\n   \"\"notify_list\"\":[\n\n   ],\n   \"\"template_variable_presets\"\":[\n      {\n         \"\"name\"\":\"\"preset_1\"\",\n         \"\"template_variables\"\":[\n            {\n               \"\"name\"\":\"\"var_1\"\",\n               \"\"value\"\":\"\"host.dc\"\"\n            },\n            {\n               \"\"name\"\":\"\"var_2\"\",\n               \"\"value\"\":\"\"my_service\"\"\n            }\n         ]\n      }\n   ]\n}\n\n\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-datadog/sdk/v4/go/datadog\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := datadog.NewDashboardJson(ctx, \"dashboardJson\", \u0026datadog.DashboardJsonArgs{\n\t\t\tDashboard: pulumi.String(`{\n   \"title\":\"Ordered Layout Dashboard\",\n   \"description\":\"Created using the Datadog provider in Terraform\",\n   \"widgets\":[\n      {\n         \"id\":719369537777170,\n         \"definition\":{\n            \"title\":\"Widget Title\",\n            \"type\":\"alert_graph\",\n            \"alert_id\":\"895605\",\n            \"viz_type\":\"timeseries\"\n         }\n      },\n      {\n         \"id\":2306240030393868,\n         \"definition\":{\n            \"title\":\"Widget Title\",\n            \"type\":\"alert_value\",\n            \"alert_id\":\"895605\",\n            \"unit\":\"b\",\n            \"text_align\":\"center\",\n            \"precision\":3\n         }\n      },\n      {\n         \"id\":6990998850881326,\n         \"definition\":{\n            \"title\":\"Widget Title\",\n            \"type\":\"alert_value\",\n            \"alert_id\":\"895605\",\n            \"unit\":\"b\",\n            \"text_align\":\"center\",\n            \"precision\":3\n         }\n      },\n      {\n         \"id\":3351284044659007,\n         \"definition\":{\n            \"title\":\"Widget Title\",\n            \"type\":\"change\",\n            \"requests\":[\n               {\n                  \"q\":\"avg:system.load.1{env:staging} by {account}\",\n                  \"compare_to\":\"week_before\",\n                  \"change_type\":\"absolute\",\n                  \"order_dir\":\"desc\",\n                  \"increase_good\":true,\n                  \"order_by\":\"name\",\n                  \"show_present\":true\n               }\n            ]\n         }\n      },\n      {\n         \"id\":6450290622996182,\n         \"definition\":{\n            \"title\":\"Widget Title\",\n            \"show_legend\":false,\n            \"type\":\"distribution\",\n            \"requests\":[\n               {\n                  \"q\":\"avg:system.load.1{env:staging} by {account}\",\n                  \"style\":{\n                     \"palette\":\"warm\"\n                  }\n               }\n            ]\n         }\n      },\n      {\n         \"id\":4902842646291536,\n         \"definition\":{\n            \"title\":\"Widget Title\",\n            \"type\":\"check_status\",\n            \"check\":\"aws.ecs.agent_connected\",\n            \"grouping\":\"cluster\",\n            \"group_by\":[\n               \"account\",\n               \"cluster\"\n            ],\n            \"tags\":[\n               \"account:demo\",\n               \"cluster:awseb-ruthebdog-env-8-dn3m6u3gvk\"\n            ]\n         }\n      },\n      {\n         \"id\":6392349954822644,\n         \"definition\":{\n            \"title\":\"Widget Title\",\n            \"show_legend\":false,\n            \"type\":\"heatmap\",\n            \"yaxis\":{\n               \"scale\":\"sqrt\",\n               \"include_zero\":true,\n               \"min\":\"1\",\n               \"max\":\"2\"\n            },\n            \"requests\":[\n               {\n                  \"q\":\"avg:system.load.1{env:staging} by {account}\",\n                  \"style\":{\n                     \"palette\":\"warm\"\n                  }\n               }\n            ]\n         }\n      },\n      {\n         \"id\":5222961478940988,\n         \"definition\":{\n            \"title\":\"Widget Title\",\n            \"type\":\"hostmap\",\n            \"requests\":{\n               \"fill\":{\n                  \"q\":\"avg:system.load.1{*} by {host}\"\n               },\n               \"size\":{\n                  \"q\":\"avg:memcache.uptime{*} by {host}\"\n               }\n            },\n            \"node_type\":\"container\",\n            \"no_metric_hosts\":true,\n            \"no_group_hosts\":true,\n            \"group\":[\n               \"host\",\n               \"region\"\n            ],\n            \"scope\":[\n               \"region:us-east-1\",\n               \"aws_account:727006795293\"\n            ],\n            \"style\":{\n               \"palette\":\"yellow_to_green\",\n               \"palette_flip\":true,\n               \"fill_min\":\"10\",\n               \"fill_max\":\"20\"\n            }\n         }\n      },\n      {\n         \"id\":8121199734227072,\n         \"definition\":{\n            \"type\":\"note\",\n            \"content\":\"note text\",\n            \"background_color\":\"pink\",\n            \"font_size\":\"14\",\n            \"text_align\":\"center\",\n            \"show_tick\":true,\n            \"tick_pos\":\"50%\",\n            \"tick_edge\":\"left\"\n         }\n      },\n      {\n         \"id\":1775856835833038,\n         \"definition\":{\n            \"title\":\"Widget Title\",\n            \"type\":\"query_value\",\n            \"requests\":[\n               {\n                  \"q\":\"avg:system.load.1{env:staging} by {account}\",\n                  \"aggregator\":\"sum\",\n                  \"conditional_formats\":[\n                     {\n                        \"hide_value\":false,\n                        \"comparator\":\"\u003c\",\n                        \"palette\":\"white_on_green\",\n                        \"value\":2\n                     },\n                     {\n                        \"hide_value\":false,\n                        \"comparator\":\"\u003e\",\n                        \"palette\":\"white_on_red\",\n                        \"value\":2.2\n                     }\n                  ]\n               }\n            ],\n            \"autoscale\":true,\n            \"custom_unit\":\"xx\",\n            \"text_align\":\"right\",\n            \"precision\":4\n         }\n      },\n      {\n         \"id\":8461455966625581,\n         \"definition\":{\n            \"title\":\"Widget Title\",\n            \"type\":\"query_table\",\n            \"requests\":[\n               {\n                  \"q\":\"avg:system.load.1{env:staging} by {account}\",\n                  \"aggregator\":\"sum\",\n                  \"conditional_formats\":[\n                     {\n                        \"hide_value\":false,\n                        \"comparator\":\"\u003c\",\n                        \"palette\":\"white_on_green\",\n                        \"value\":2\n                     },\n                     {\n                        \"hide_value\":false,\n                        \"comparator\":\"\u003e\",\n                        \"palette\":\"white_on_red\",\n                        \"value\":2.2\n                     }\n                  ],\n                  \"limit\":10\n               }\n            ]\n         }\n      },\n      {\n         \"id\":8660006349418736,\n         \"definition\":{\n            \"title\":\"Widget Title\",\n            \"type\":\"scatterplot\",\n            \"requests\":{\n               \"x\":{\n                  \"q\":\"avg:system.cpu.user{*} by {service, account}\",\n                  \"aggregator\":\"max\"\n               },\n               \"y\":{\n                  \"q\":\"avg:system.mem.used{*} by {service, account}\",\n                  \"aggregator\":\"min\"\n               }\n            },\n            \"xaxis\":{\n               \"scale\":\"pow\",\n               \"label\":\"x\",\n               \"include_zero\":true,\n               \"min\":\"1\",\n               \"max\":\"2000\"\n            },\n            \"yaxis\":{\n               \"scale\":\"log\",\n               \"label\":\"y\",\n               \"include_zero\":false,\n               \"min\":\"5\",\n               \"max\":\"2222\"\n            },\n            \"color_by_groups\":[\n               \"account\",\n               \"apm-role-group\"\n            ]\n         }\n      },\n      {\n         \"id\":1669590772917638,\n         \"definition\":{\n            \"title\":\"env: prod, datacenter:dc1, service: master-db\",\n            \"title_size\":\"16\",\n            \"title_align\":\"left\",\n            \"type\":\"servicemap\",\n            \"service\":\"master-db\",\n            \"filters\":[\n               \"env:prod\",\n               \"datacenter:dc1\"\n            ]\n         }\n      },\n      {\n         \"id\":2138829058361817,\n         \"definition\":{\n            \"title\":\"Widget Title\",\n            \"show_legend\":true,\n            \"legend_size\":\"2\",\n            \"type\":\"timeseries\",\n            \"requests\":[\n               {\n                  \"q\":\"avg:system.cpu.user{app:general} by {env}\",\n                  \"on_right_yaxis\":false,\n                  \"metadata\":[\n                     {\n                        \"expression\":\"avg:system.cpu.user{app:general} by {env}\",\n                        \"alias_name\":\"Alpha\"\n                     }\n                  ],\n                  \"style\":{\n                     \"palette\":\"warm\",\n                     \"line_type\":\"dashed\",\n                     \"line_width\":\"thin\"\n                  },\n                  \"display_type\":\"line\"\n               },\n               {\n                  \"on_right_yaxis\":false,\n                  \"log_query\":{\n                     \"index\":\"mcnulty\",\n                     \"search\":{\n                        \"query\":\"status:info\"\n                     },\n                     \"group_by\":[\n                        {\n                           \"facet\":\"host\",\n                           \"sort\":{\n                              \"facet\":\"@duration\",\n                              \"aggregation\":\"avg\",\n                              \"order\":\"desc\"\n                           },\n                           \"limit\":10\n                        }\n                     ],\n                     \"compute\":{\n                        \"facet\":\"@duration\",\n                        \"interval\":5000,\n                        \"aggregation\":\"avg\"\n                     }\n                  },\n                  \"display_type\":\"area\"\n               },\n               {\n                  \"on_right_yaxis\":false,\n                  \"apm_query\":{\n                     \"index\":\"apm-search\",\n                     \"search\":{\n                        \"query\":\"type:web\"\n                     },\n                     \"group_by\":[\n                        {\n                           \"facet\":\"resource_name\",\n                           \"sort\":{\n                              \"facet\":\"@string_query.interval\",\n                              \"aggregation\":\"avg\",\n                              \"order\":\"desc\"\n                           },\n                           \"limit\":50\n                        }\n                     ],\n                     \"compute\":{\n                        \"facet\":\"@duration\",\n                        \"interval\":5000,\n                        \"aggregation\":\"avg\"\n                     }\n                  },\n                  \"display_type\":\"bars\"\n               },\n               {\n                  \"on_right_yaxis\":false,\n                  \"process_query\":{\n                     \"search_by\":\"error\",\n                     \"metric\":\"process.stat.cpu.total_pct\",\n                     \"limit\":50,\n                     \"filter_by\":[\n                        \"active\"\n                     ]\n                  },\n                  \"display_type\":\"area\"\n               }\n            ],\n            \"yaxis\":{\n               \"scale\":\"log\",\n               \"include_zero\":false,\n               \"max\":\"100\"\n            },\n            \"events\":[\n               {\n                  \"q\":\"sources:test tags:1\"\n               },\n               {\n                  \"q\":\"sources:test tags:2\"\n               }\n            ],\n            \"markers\":[\n               {\n                  \"label\":\" z=6 \",\n                  \"value\":\"y = 4\",\n                  \"display_type\":\"error dashed\"\n               },\n               {\n                  \"label\":\" x=8 \",\n                  \"value\":\"10 \u003c y \u003c 999\",\n                  \"display_type\":\"ok solid\"\n               }\n            ]\n         }\n      },\n      {\n         \"id\":7307171374656551,\n         \"definition\":{\n            \"title\":\"Widget Title\",\n            \"type\":\"toplist\",\n            \"requests\":[\n               {\n                  \"q\":\"avg:system.cpu.user{app:general} by {env}\",\n                  \"conditional_formats\":[\n                     {\n                        \"hide_value\":false,\n                        \"comparator\":\"\u003c\",\n                        \"palette\":\"white_on_green\",\n                        \"value\":2\n                     },\n                     {\n                        \"hide_value\":false,\n                        \"comparator\":\"\u003e\",\n                        \"palette\":\"white_on_red\",\n                        \"value\":2.2\n                     }\n                  ]\n               }\n            ]\n         }\n      },\n      {\n         \"id\":7086674838553258,\n         \"definition\":{\n            \"title\":\"Group Widget\",\n            \"type\":\"group\",\n            \"layout_type\":\"ordered\",\n            \"widgets\":[\n               {\n                  \"id\":3726092277657502,\n                  \"definition\":{\n                     \"type\":\"note\",\n                     \"content\":\"cluster note widget\",\n                     \"background_color\":\"pink\",\n                     \"font_size\":\"14\",\n                     \"text_align\":\"center\",\n                     \"show_tick\":true,\n                     \"tick_pos\":\"50%\",\n                     \"tick_edge\":\"left\"\n                  }\n               },\n               {\n                  \"id\":6376384650558057,\n                  \"definition\":{\n                     \"title\":\"Alert Graph\",\n                     \"type\":\"alert_graph\",\n                     \"alert_id\":\"123\",\n                     \"viz_type\":\"toplist\"\n                  }\n               }\n            ]\n         }\n      },\n      {\n         \"id\":4668903563678912,\n         \"definition\":{\n            \"title\":\"Widget Title\",\n            \"type\":\"slo\",\n            \"view_type\":\"detail\",\n            \"time_windows\":[\n               \"7d\",\n               \"previous_week\"\n            ],\n            \"slo_id\":\"56789\",\n            \"show_error_budget\":true,\n            \"view_mode\":\"overall\",\n            \"global_time_target\":\"0\"\n         }\n      }\n   ],\n   \"template_variables\":[\n      {\n         \"name\":\"var_1\",\n         \"default\":\"aws\",\n         \"prefix\":\"host\"\n      },\n      {\n         \"name\":\"var_2\",\n         \"default\":\"autoscaling\",\n         \"prefix\":\"service_name\"\n      }\n   ],\n   \"layout_type\":\"ordered\",\n   \"is_read_only\":true,\n   \"notify_list\":[\n\n   ],\n   \"template_variable_presets\":[\n      {\n         \"name\":\"preset_1\",\n         \"template_variables\":[\n            {\n               \"name\":\"var_1\",\n               \"value\":\"host.dc\"\n            },\n            {\n               \"name\":\"var_2\",\n               \"value\":\"my_service\"\n            }\n         ]\n      }\n   ]\n}\n\n`),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.datadog.DashboardJson;\nimport com.pulumi.datadog.DashboardJsonArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var dashboardJson = new DashboardJson(\"dashboardJson\", DashboardJsonArgs.builder()        \n            .dashboard(\"\"\"\n{\n   \"title\":\"Ordered Layout Dashboard\",\n   \"description\":\"Created using the Datadog provider in Terraform\",\n   \"widgets\":[\n      {\n         \"id\":719369537777170,\n         \"definition\":{\n            \"title\":\"Widget Title\",\n            \"type\":\"alert_graph\",\n            \"alert_id\":\"895605\",\n            \"viz_type\":\"timeseries\"\n         }\n      },\n      {\n         \"id\":2306240030393868,\n         \"definition\":{\n            \"title\":\"Widget Title\",\n            \"type\":\"alert_value\",\n            \"alert_id\":\"895605\",\n            \"unit\":\"b\",\n            \"text_align\":\"center\",\n            \"precision\":3\n         }\n      },\n      {\n         \"id\":6990998850881326,\n         \"definition\":{\n            \"title\":\"Widget Title\",\n            \"type\":\"alert_value\",\n            \"alert_id\":\"895605\",\n            \"unit\":\"b\",\n            \"text_align\":\"center\",\n            \"precision\":3\n         }\n      },\n      {\n         \"id\":3351284044659007,\n         \"definition\":{\n            \"title\":\"Widget Title\",\n            \"type\":\"change\",\n            \"requests\":[\n               {\n                  \"q\":\"avg:system.load.1{env:staging} by {account}\",\n                  \"compare_to\":\"week_before\",\n                  \"change_type\":\"absolute\",\n                  \"order_dir\":\"desc\",\n                  \"increase_good\":true,\n                  \"order_by\":\"name\",\n                  \"show_present\":true\n               }\n            ]\n         }\n      },\n      {\n         \"id\":6450290622996182,\n         \"definition\":{\n            \"title\":\"Widget Title\",\n            \"show_legend\":false,\n            \"type\":\"distribution\",\n            \"requests\":[\n               {\n                  \"q\":\"avg:system.load.1{env:staging} by {account}\",\n                  \"style\":{\n                     \"palette\":\"warm\"\n                  }\n               }\n            ]\n         }\n      },\n      {\n         \"id\":4902842646291536,\n         \"definition\":{\n            \"title\":\"Widget Title\",\n            \"type\":\"check_status\",\n            \"check\":\"aws.ecs.agent_connected\",\n            \"grouping\":\"cluster\",\n            \"group_by\":[\n               \"account\",\n               \"cluster\"\n            ],\n            \"tags\":[\n               \"account:demo\",\n               \"cluster:awseb-ruthebdog-env-8-dn3m6u3gvk\"\n            ]\n         }\n      },\n      {\n         \"id\":6392349954822644,\n         \"definition\":{\n            \"title\":\"Widget Title\",\n            \"show_legend\":false,\n            \"type\":\"heatmap\",\n            \"yaxis\":{\n               \"scale\":\"sqrt\",\n               \"include_zero\":true,\n               \"min\":\"1\",\n               \"max\":\"2\"\n            },\n            \"requests\":[\n               {\n                  \"q\":\"avg:system.load.1{env:staging} by {account}\",\n                  \"style\":{\n                     \"palette\":\"warm\"\n                  }\n               }\n            ]\n         }\n      },\n      {\n         \"id\":5222961478940988,\n         \"definition\":{\n            \"title\":\"Widget Title\",\n            \"type\":\"hostmap\",\n            \"requests\":{\n               \"fill\":{\n                  \"q\":\"avg:system.load.1{*} by {host}\"\n               },\n               \"size\":{\n                  \"q\":\"avg:memcache.uptime{*} by {host}\"\n               }\n            },\n            \"node_type\":\"container\",\n            \"no_metric_hosts\":true,\n            \"no_group_hosts\":true,\n            \"group\":[\n               \"host\",\n               \"region\"\n            ],\n            \"scope\":[\n               \"region:us-east-1\",\n               \"aws_account:727006795293\"\n            ],\n            \"style\":{\n               \"palette\":\"yellow_to_green\",\n               \"palette_flip\":true,\n               \"fill_min\":\"10\",\n               \"fill_max\":\"20\"\n            }\n         }\n      },\n      {\n         \"id\":8121199734227072,\n         \"definition\":{\n            \"type\":\"note\",\n            \"content\":\"note text\",\n            \"background_color\":\"pink\",\n            \"font_size\":\"14\",\n            \"text_align\":\"center\",\n            \"show_tick\":true,\n            \"tick_pos\":\"50%\",\n            \"tick_edge\":\"left\"\n         }\n      },\n      {\n         \"id\":1775856835833038,\n         \"definition\":{\n            \"title\":\"Widget Title\",\n            \"type\":\"query_value\",\n            \"requests\":[\n               {\n                  \"q\":\"avg:system.load.1{env:staging} by {account}\",\n                  \"aggregator\":\"sum\",\n                  \"conditional_formats\":[\n                     {\n                        \"hide_value\":false,\n                        \"comparator\":\"\u003c\",\n                        \"palette\":\"white_on_green\",\n                        \"value\":2\n                     },\n                     {\n                        \"hide_value\":false,\n                        \"comparator\":\"\u003e\",\n                        \"palette\":\"white_on_red\",\n                        \"value\":2.2\n                     }\n                  ]\n               }\n            ],\n            \"autoscale\":true,\n            \"custom_unit\":\"xx\",\n            \"text_align\":\"right\",\n            \"precision\":4\n         }\n      },\n      {\n         \"id\":8461455966625581,\n         \"definition\":{\n            \"title\":\"Widget Title\",\n            \"type\":\"query_table\",\n            \"requests\":[\n               {\n                  \"q\":\"avg:system.load.1{env:staging} by {account}\",\n                  \"aggregator\":\"sum\",\n                  \"conditional_formats\":[\n                     {\n                        \"hide_value\":false,\n                        \"comparator\":\"\u003c\",\n                        \"palette\":\"white_on_green\",\n                        \"value\":2\n                     },\n                     {\n                        \"hide_value\":false,\n                        \"comparator\":\"\u003e\",\n                        \"palette\":\"white_on_red\",\n                        \"value\":2.2\n                     }\n                  ],\n                  \"limit\":10\n               }\n            ]\n         }\n      },\n      {\n         \"id\":8660006349418736,\n         \"definition\":{\n            \"title\":\"Widget Title\",\n            \"type\":\"scatterplot\",\n            \"requests\":{\n               \"x\":{\n                  \"q\":\"avg:system.cpu.user{*} by {service, account}\",\n                  \"aggregator\":\"max\"\n               },\n               \"y\":{\n                  \"q\":\"avg:system.mem.used{*} by {service, account}\",\n                  \"aggregator\":\"min\"\n               }\n            },\n            \"xaxis\":{\n               \"scale\":\"pow\",\n               \"label\":\"x\",\n               \"include_zero\":true,\n               \"min\":\"1\",\n               \"max\":\"2000\"\n            },\n            \"yaxis\":{\n               \"scale\":\"log\",\n               \"label\":\"y\",\n               \"include_zero\":false,\n               \"min\":\"5\",\n               \"max\":\"2222\"\n            },\n            \"color_by_groups\":[\n               \"account\",\n               \"apm-role-group\"\n            ]\n         }\n      },\n      {\n         \"id\":1669590772917638,\n         \"definition\":{\n            \"title\":\"env: prod, datacenter:dc1, service: master-db\",\n            \"title_size\":\"16\",\n            \"title_align\":\"left\",\n            \"type\":\"servicemap\",\n            \"service\":\"master-db\",\n            \"filters\":[\n               \"env:prod\",\n               \"datacenter:dc1\"\n            ]\n         }\n      },\n      {\n         \"id\":2138829058361817,\n         \"definition\":{\n            \"title\":\"Widget Title\",\n            \"show_legend\":true,\n            \"legend_size\":\"2\",\n            \"type\":\"timeseries\",\n            \"requests\":[\n               {\n                  \"q\":\"avg:system.cpu.user{app:general} by {env}\",\n                  \"on_right_yaxis\":false,\n                  \"metadata\":[\n                     {\n                        \"expression\":\"avg:system.cpu.user{app:general} by {env}\",\n                        \"alias_name\":\"Alpha\"\n                     }\n                  ],\n                  \"style\":{\n                     \"palette\":\"warm\",\n                     \"line_type\":\"dashed\",\n                     \"line_width\":\"thin\"\n                  },\n                  \"display_type\":\"line\"\n               },\n               {\n                  \"on_right_yaxis\":false,\n                  \"log_query\":{\n                     \"index\":\"mcnulty\",\n                     \"search\":{\n                        \"query\":\"status:info\"\n                     },\n                     \"group_by\":[\n                        {\n                           \"facet\":\"host\",\n                           \"sort\":{\n                              \"facet\":\"@duration\",\n                              \"aggregation\":\"avg\",\n                              \"order\":\"desc\"\n                           },\n                           \"limit\":10\n                        }\n                     ],\n                     \"compute\":{\n                        \"facet\":\"@duration\",\n                        \"interval\":5000,\n                        \"aggregation\":\"avg\"\n                     }\n                  },\n                  \"display_type\":\"area\"\n               },\n               {\n                  \"on_right_yaxis\":false,\n                  \"apm_query\":{\n                     \"index\":\"apm-search\",\n                     \"search\":{\n                        \"query\":\"type:web\"\n                     },\n                     \"group_by\":[\n                        {\n                           \"facet\":\"resource_name\",\n                           \"sort\":{\n                              \"facet\":\"@string_query.interval\",\n                              \"aggregation\":\"avg\",\n                              \"order\":\"desc\"\n                           },\n                           \"limit\":50\n                        }\n                     ],\n                     \"compute\":{\n                        \"facet\":\"@duration\",\n                        \"interval\":5000,\n                        \"aggregation\":\"avg\"\n                     }\n                  },\n                  \"display_type\":\"bars\"\n               },\n               {\n                  \"on_right_yaxis\":false,\n                  \"process_query\":{\n                     \"search_by\":\"error\",\n                     \"metric\":\"process.stat.cpu.total_pct\",\n                     \"limit\":50,\n                     \"filter_by\":[\n                        \"active\"\n                     ]\n                  },\n                  \"display_type\":\"area\"\n               }\n            ],\n            \"yaxis\":{\n               \"scale\":\"log\",\n               \"include_zero\":false,\n               \"max\":\"100\"\n            },\n            \"events\":[\n               {\n                  \"q\":\"sources:test tags:1\"\n               },\n               {\n                  \"q\":\"sources:test tags:2\"\n               }\n            ],\n            \"markers\":[\n               {\n                  \"label\":\" z=6 \",\n                  \"value\":\"y = 4\",\n                  \"display_type\":\"error dashed\"\n               },\n               {\n                  \"label\":\" x=8 \",\n                  \"value\":\"10 \u003c y \u003c 999\",\n                  \"display_type\":\"ok solid\"\n               }\n            ]\n         }\n      },\n      {\n         \"id\":7307171374656551,\n         \"definition\":{\n            \"title\":\"Widget Title\",\n            \"type\":\"toplist\",\n            \"requests\":[\n               {\n                  \"q\":\"avg:system.cpu.user{app:general} by {env}\",\n                  \"conditional_formats\":[\n                     {\n                        \"hide_value\":false,\n                        \"comparator\":\"\u003c\",\n                        \"palette\":\"white_on_green\",\n                        \"value\":2\n                     },\n                     {\n                        \"hide_value\":false,\n                        \"comparator\":\"\u003e\",\n                        \"palette\":\"white_on_red\",\n                        \"value\":2.2\n                     }\n                  ]\n               }\n            ]\n         }\n      },\n      {\n         \"id\":7086674838553258,\n         \"definition\":{\n            \"title\":\"Group Widget\",\n            \"type\":\"group\",\n            \"layout_type\":\"ordered\",\n            \"widgets\":[\n               {\n                  \"id\":3726092277657502,\n                  \"definition\":{\n                     \"type\":\"note\",\n                     \"content\":\"cluster note widget\",\n                     \"background_color\":\"pink\",\n                     \"font_size\":\"14\",\n                     \"text_align\":\"center\",\n                     \"show_tick\":true,\n                     \"tick_pos\":\"50%\",\n                     \"tick_edge\":\"left\"\n                  }\n               },\n               {\n                  \"id\":6376384650558057,\n                  \"definition\":{\n                     \"title\":\"Alert Graph\",\n                     \"type\":\"alert_graph\",\n                     \"alert_id\":\"123\",\n                     \"viz_type\":\"toplist\"\n                  }\n               }\n            ]\n         }\n      },\n      {\n         \"id\":4668903563678912,\n         \"definition\":{\n            \"title\":\"Widget Title\",\n            \"type\":\"slo\",\n            \"view_type\":\"detail\",\n            \"time_windows\":[\n               \"7d\",\n               \"previous_week\"\n            ],\n            \"slo_id\":\"56789\",\n            \"show_error_budget\":true,\n            \"view_mode\":\"overall\",\n            \"global_time_target\":\"0\"\n         }\n      }\n   ],\n   \"template_variables\":[\n      {\n         \"name\":\"var_1\",\n         \"default\":\"aws\",\n         \"prefix\":\"host\"\n      },\n      {\n         \"name\":\"var_2\",\n         \"default\":\"autoscaling\",\n         \"prefix\":\"service_name\"\n      }\n   ],\n   \"layout_type\":\"ordered\",\n   \"is_read_only\":true,\n   \"notify_list\":[\n\n   ],\n   \"template_variable_presets\":[\n      {\n         \"name\":\"preset_1\",\n         \"template_variables\":[\n            {\n               \"name\":\"var_1\",\n               \"value\":\"host.dc\"\n            },\n            {\n               \"name\":\"var_2\",\n               \"value\":\"my_service\"\n            }\n         ]\n      }\n   ]\n}\n\n            \"\"\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  # Example Dashboard JSON\n  dashboardJson:\n    type: datadog:DashboardJson\n    properties:\n      dashboard: |+\n        {\n           \"title\":\"Ordered Layout Dashboard\",\n           \"description\":\"Created using the Datadog provider in Terraform\",\n           \"widgets\":[\n              {\n                 \"id\":719369537777170,\n                 \"definition\":{\n                    \"title\":\"Widget Title\",\n                    \"type\":\"alert_graph\",\n                    \"alert_id\":\"895605\",\n                    \"viz_type\":\"timeseries\"\n                 }\n              },\n              {\n                 \"id\":2306240030393868,\n                 \"definition\":{\n                    \"title\":\"Widget Title\",\n                    \"type\":\"alert_value\",\n                    \"alert_id\":\"895605\",\n                    \"unit\":\"b\",\n                    \"text_align\":\"center\",\n                    \"precision\":3\n                 }\n              },\n              {\n                 \"id\":6990998850881326,\n                 \"definition\":{\n                    \"title\":\"Widget Title\",\n                    \"type\":\"alert_value\",\n                    \"alert_id\":\"895605\",\n                    \"unit\":\"b\",\n                    \"text_align\":\"center\",\n                    \"precision\":3\n                 }\n              },\n              {\n                 \"id\":3351284044659007,\n                 \"definition\":{\n                    \"title\":\"Widget Title\",\n                    \"type\":\"change\",\n                    \"requests\":[\n                       {\n                          \"q\":\"avg:system.load.1{env:staging} by {account}\",\n                          \"compare_to\":\"week_before\",\n                          \"change_type\":\"absolute\",\n                          \"order_dir\":\"desc\",\n                          \"increase_good\":true,\n                          \"order_by\":\"name\",\n                          \"show_present\":true\n                       }\n                    ]\n                 }\n              },\n              {\n                 \"id\":6450290622996182,\n                 \"definition\":{\n                    \"title\":\"Widget Title\",\n                    \"show_legend\":false,\n                    \"type\":\"distribution\",\n                    \"requests\":[\n                       {\n                          \"q\":\"avg:system.load.1{env:staging} by {account}\",\n                          \"style\":{\n                             \"palette\":\"warm\"\n                          }\n                       }\n                    ]\n                 }\n              },\n              {\n                 \"id\":4902842646291536,\n                 \"definition\":{\n                    \"title\":\"Widget Title\",\n                    \"type\":\"check_status\",\n                    \"check\":\"aws.ecs.agent_connected\",\n                    \"grouping\":\"cluster\",\n                    \"group_by\":[\n                       \"account\",\n                       \"cluster\"\n                    ],\n                    \"tags\":[\n                       \"account:demo\",\n                       \"cluster:awseb-ruthebdog-env-8-dn3m6u3gvk\"\n                    ]\n                 }\n              },\n              {\n                 \"id\":6392349954822644,\n                 \"definition\":{\n                    \"title\":\"Widget Title\",\n                    \"show_legend\":false,\n                    \"type\":\"heatmap\",\n                    \"yaxis\":{\n                       \"scale\":\"sqrt\",\n                       \"include_zero\":true,\n                       \"min\":\"1\",\n                       \"max\":\"2\"\n                    },\n                    \"requests\":[\n                       {\n                          \"q\":\"avg:system.load.1{env:staging} by {account}\",\n                          \"style\":{\n                             \"palette\":\"warm\"\n                          }\n                       }\n                    ]\n                 }\n              },\n              {\n                 \"id\":5222961478940988,\n                 \"definition\":{\n                    \"title\":\"Widget Title\",\n                    \"type\":\"hostmap\",\n                    \"requests\":{\n                       \"fill\":{\n                          \"q\":\"avg:system.load.1{*} by {host}\"\n                       },\n                       \"size\":{\n                          \"q\":\"avg:memcache.uptime{*} by {host}\"\n                       }\n                    },\n                    \"node_type\":\"container\",\n                    \"no_metric_hosts\":true,\n                    \"no_group_hosts\":true,\n                    \"group\":[\n                       \"host\",\n                       \"region\"\n                    ],\n                    \"scope\":[\n                       \"region:us-east-1\",\n                       \"aws_account:727006795293\"\n                    ],\n                    \"style\":{\n                       \"palette\":\"yellow_to_green\",\n                       \"palette_flip\":true,\n                       \"fill_min\":\"10\",\n                       \"fill_max\":\"20\"\n                    }\n                 }\n              },\n              {\n                 \"id\":8121199734227072,\n                 \"definition\":{\n                    \"type\":\"note\",\n                    \"content\":\"note text\",\n                    \"background_color\":\"pink\",\n                    \"font_size\":\"14\",\n                    \"text_align\":\"center\",\n                    \"show_tick\":true,\n                    \"tick_pos\":\"50%\",\n                    \"tick_edge\":\"left\"\n                 }\n              },\n              {\n                 \"id\":1775856835833038,\n                 \"definition\":{\n                    \"title\":\"Widget Title\",\n                    \"type\":\"query_value\",\n                    \"requests\":[\n                       {\n                          \"q\":\"avg:system.load.1{env:staging} by {account}\",\n                          \"aggregator\":\"sum\",\n                          \"conditional_formats\":[\n                             {\n                                \"hide_value\":false,\n                                \"comparator\":\"\u003c\",\n                                \"palette\":\"white_on_green\",\n                                \"value\":2\n                             },\n                             {\n                                \"hide_value\":false,\n                                \"comparator\":\"\u003e\",\n                                \"palette\":\"white_on_red\",\n                                \"value\":2.2\n                             }\n                          ]\n                       }\n                    ],\n                    \"autoscale\":true,\n                    \"custom_unit\":\"xx\",\n                    \"text_align\":\"right\",\n                    \"precision\":4\n                 }\n              },\n              {\n                 \"id\":8461455966625581,\n                 \"definition\":{\n                    \"title\":\"Widget Title\",\n                    \"type\":\"query_table\",\n                    \"requests\":[\n                       {\n                          \"q\":\"avg:system.load.1{env:staging} by {account}\",\n                          \"aggregator\":\"sum\",\n                          \"conditional_formats\":[\n                             {\n                                \"hide_value\":false,\n                                \"comparator\":\"\u003c\",\n                                \"palette\":\"white_on_green\",\n                                \"value\":2\n                             },\n                             {\n                                \"hide_value\":false,\n                                \"comparator\":\"\u003e\",\n                                \"palette\":\"white_on_red\",\n                                \"value\":2.2\n                             }\n                          ],\n                          \"limit\":10\n                       }\n                    ]\n                 }\n              },\n              {\n                 \"id\":8660006349418736,\n                 \"definition\":{\n                    \"title\":\"Widget Title\",\n                    \"type\":\"scatterplot\",\n                    \"requests\":{\n                       \"x\":{\n                          \"q\":\"avg:system.cpu.user{*} by {service, account}\",\n                          \"aggregator\":\"max\"\n                       },\n                       \"y\":{\n                          \"q\":\"avg:system.mem.used{*} by {service, account}\",\n                          \"aggregator\":\"min\"\n                       }\n                    },\n                    \"xaxis\":{\n                       \"scale\":\"pow\",\n                       \"label\":\"x\",\n                       \"include_zero\":true,\n                       \"min\":\"1\",\n                       \"max\":\"2000\"\n                    },\n                    \"yaxis\":{\n                       \"scale\":\"log\",\n                       \"label\":\"y\",\n                       \"include_zero\":false,\n                       \"min\":\"5\",\n                       \"max\":\"2222\"\n                    },\n                    \"color_by_groups\":[\n                       \"account\",\n                       \"apm-role-group\"\n                    ]\n                 }\n              },\n              {\n                 \"id\":1669590772917638,\n                 \"definition\":{\n                    \"title\":\"env: prod, datacenter:dc1, service: master-db\",\n                    \"title_size\":\"16\",\n                    \"title_align\":\"left\",\n                    \"type\":\"servicemap\",\n                    \"service\":\"master-db\",\n                    \"filters\":[\n                       \"env:prod\",\n                       \"datacenter:dc1\"\n                    ]\n                 }\n              },\n              {\n                 \"id\":2138829058361817,\n                 \"definition\":{\n                    \"title\":\"Widget Title\",\n                    \"show_legend\":true,\n                    \"legend_size\":\"2\",\n                    \"type\":\"timeseries\",\n                    \"requests\":[\n                       {\n                          \"q\":\"avg:system.cpu.user{app:general} by {env}\",\n                          \"on_right_yaxis\":false,\n                          \"metadata\":[\n                             {\n                                \"expression\":\"avg:system.cpu.user{app:general} by {env}\",\n                                \"alias_name\":\"Alpha\"\n                             }\n                          ],\n                          \"style\":{\n                             \"palette\":\"warm\",\n                             \"line_type\":\"dashed\",\n                             \"line_width\":\"thin\"\n                          },\n                          \"display_type\":\"line\"\n                       },\n                       {\n                          \"on_right_yaxis\":false,\n                          \"log_query\":{\n                             \"index\":\"mcnulty\",\n                             \"search\":{\n                                \"query\":\"status:info\"\n                             },\n                             \"group_by\":[\n                                {\n                                   \"facet\":\"host\",\n                                   \"sort\":{\n                                      \"facet\":\"@duration\",\n                                      \"aggregation\":\"avg\",\n                                      \"order\":\"desc\"\n                                   },\n                                   \"limit\":10\n                                }\n                             ],\n                             \"compute\":{\n                                \"facet\":\"@duration\",\n                                \"interval\":5000,\n                                \"aggregation\":\"avg\"\n                             }\n                          },\n                          \"display_type\":\"area\"\n                       },\n                       {\n                          \"on_right_yaxis\":false,\n                          \"apm_query\":{\n                             \"index\":\"apm-search\",\n                             \"search\":{\n                                \"query\":\"type:web\"\n                             },\n                             \"group_by\":[\n                                {\n                                   \"facet\":\"resource_name\",\n                                   \"sort\":{\n                                      \"facet\":\"@string_query.interval\",\n                                      \"aggregation\":\"avg\",\n                                      \"order\":\"desc\"\n                                   },\n                                   \"limit\":50\n                                }\n                             ],\n                             \"compute\":{\n                                \"facet\":\"@duration\",\n                                \"interval\":5000,\n                                \"aggregation\":\"avg\"\n                             }\n                          },\n                          \"display_type\":\"bars\"\n                       },\n                       {\n                          \"on_right_yaxis\":false,\n                          \"process_query\":{\n                             \"search_by\":\"error\",\n                             \"metric\":\"process.stat.cpu.total_pct\",\n                             \"limit\":50,\n                             \"filter_by\":[\n                                \"active\"\n                             ]\n                          },\n                          \"display_type\":\"area\"\n                       }\n                    ],\n                    \"yaxis\":{\n                       \"scale\":\"log\",\n                       \"include_zero\":false,\n                       \"max\":\"100\"\n                    },\n                    \"events\":[\n                       {\n                          \"q\":\"sources:test tags:1\"\n                       },\n                       {\n                          \"q\":\"sources:test tags:2\"\n                       }\n                    ],\n                    \"markers\":[\n                       {\n                          \"label\":\" z=6 \",\n                          \"value\":\"y = 4\",\n                          \"display_type\":\"error dashed\"\n                       },\n                       {\n                          \"label\":\" x=8 \",\n                          \"value\":\"10 \u003c y \u003c 999\",\n                          \"display_type\":\"ok solid\"\n                       }\n                    ]\n                 }\n              },\n              {\n                 \"id\":7307171374656551,\n                 \"definition\":{\n                    \"title\":\"Widget Title\",\n                    \"type\":\"toplist\",\n                    \"requests\":[\n                       {\n                          \"q\":\"avg:system.cpu.user{app:general} by {env}\",\n                          \"conditional_formats\":[\n                             {\n                                \"hide_value\":false,\n                                \"comparator\":\"\u003c\",\n                                \"palette\":\"white_on_green\",\n                                \"value\":2\n                             },\n                             {\n                                \"hide_value\":false,\n                                \"comparator\":\"\u003e\",\n                                \"palette\":\"white_on_red\",\n                                \"value\":2.2\n                             }\n                          ]\n                       }\n                    ]\n                 }\n              },\n              {\n                 \"id\":7086674838553258,\n                 \"definition\":{\n                    \"title\":\"Group Widget\",\n                    \"type\":\"group\",\n                    \"layout_type\":\"ordered\",\n                    \"widgets\":[\n                       {\n                          \"id\":3726092277657502,\n                          \"definition\":{\n                             \"type\":\"note\",\n                             \"content\":\"cluster note widget\",\n                             \"background_color\":\"pink\",\n                             \"font_size\":\"14\",\n                             \"text_align\":\"center\",\n                             \"show_tick\":true,\n                             \"tick_pos\":\"50%\",\n                             \"tick_edge\":\"left\"\n                          }\n                       },\n                       {\n                          \"id\":6376384650558057,\n                          \"definition\":{\n                             \"title\":\"Alert Graph\",\n                             \"type\":\"alert_graph\",\n                             \"alert_id\":\"123\",\n                             \"viz_type\":\"toplist\"\n                          }\n                       }\n                    ]\n                 }\n              },\n              {\n                 \"id\":4668903563678912,\n                 \"definition\":{\n                    \"title\":\"Widget Title\",\n                    \"type\":\"slo\",\n                    \"view_type\":\"detail\",\n                    \"time_windows\":[\n                       \"7d\",\n                       \"previous_week\"\n                    ],\n                    \"slo_id\":\"56789\",\n                    \"show_error_budget\":true,\n                    \"view_mode\":\"overall\",\n                    \"global_time_target\":\"0\"\n                 }\n              }\n           ],\n           \"template_variables\":[\n              {\n                 \"name\":\"var_1\",\n                 \"default\":\"aws\",\n                 \"prefix\":\"host\"\n              },\n              {\n                 \"name\":\"var_2\",\n                 \"default\":\"autoscaling\",\n                 \"prefix\":\"service_name\"\n              }\n           ],\n           \"layout_type\":\"ordered\",\n           \"is_read_only\":true,\n           \"notify_list\":[\n\n           ],\n           \"template_variable_presets\":[\n              {\n                 \"name\":\"preset_1\",\n                 \"template_variables\":[\n                    {\n                       \"name\":\"var_1\",\n                       \"value\":\"host.dc\"\n                    },\n                    {\n                       \"name\":\"var_2\",\n                       \"value\":\"my_service\"\n                    }\n                 ]\n              }\n           ]\n        }\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import datadog:index/dashboardJson:DashboardJson my_service_dashboard sv7-gyh-kas\n```\n\n ",
            "properties": {
                "dashboard": {
                    "type": "string",
                    "description": "The JSON formatted definition of the Dashboard.\n"
                },
                "dashboardLists": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "The list of dashboard lists this dashboard belongs to.\n"
                },
                "dashboardListsRemoveds": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "The list of dashboard lists this dashboard should be removed from. Internal only.\n"
                },
                "url": {
                    "type": "string",
                    "description": "The URL of the dashboard.\n"
                }
            },
            "required": [
                "dashboard",
                "dashboardListsRemoveds",
                "url"
            ],
            "inputProperties": {
                "dashboard": {
                    "type": "string",
                    "description": "The JSON formatted definition of the Dashboard.\n"
                },
                "dashboardLists": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "The list of dashboard lists this dashboard belongs to.\n"
                },
                "url": {
                    "type": "string",
                    "description": "The URL of the dashboard.\n"
                }
            },
            "requiredInputs": [
                "dashboard"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DashboardJson resources.\n",
                "properties": {
                    "dashboard": {
                        "type": "string",
                        "description": "The JSON formatted definition of the Dashboard.\n"
                    },
                    "dashboardLists": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "description": "The list of dashboard lists this dashboard belongs to.\n"
                    },
                    "dashboardListsRemoveds": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "description": "The list of dashboard lists this dashboard should be removed from. Internal only.\n"
                    },
                    "url": {
                        "type": "string",
                        "description": "The URL of the dashboard.\n"
                    }
                },
                "type": "object"
            }
        },
        "datadog:index/dashboardList:DashboardList": {
            "description": "Provides a Datadog dashboard_list resource. This can be used to create and manage Datadog Dashboard Lists and the individual dashboards within them.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as datadog from \"@pulumi/datadog\";\n\nconst time = new datadog.Dashboard(\"time\", {\n    title: \"TF Test Layout Dashboard\",\n    description: \"Created using the Datadog provider\",\n    layoutType: \"ordered\",\n    isReadOnly: true,\n    widgets: [{\n        alertGraphDefinition: {\n            alertId: \"1234\",\n            vizType: \"timeseries\",\n            title: \"Widget Title\",\n            liveSpan: \"1h\",\n        },\n    }],\n});\nconst screen = new datadog.Dashboard(\"screen\", {\n    title: \"TF Test Free Layout Dashboard\",\n    description: \"Created using the Datadog provider\",\n    layoutType: \"free\",\n    isReadOnly: false,\n    widgets: [{\n        eventStreamDefinition: {\n            query: \"*\",\n            eventSize: \"l\",\n            title: \"Widget Title\",\n            titleSize: \"16\",\n            titleAlign: \"left\",\n            liveSpan: \"1h\",\n        },\n        widgetLayout: {\n            height: 43,\n            width: 32,\n            x: 5,\n            y: 5,\n        },\n    }],\n});\n// Create a new Dashboard List with two Dashboards\nconst newList = new datadog.DashboardList(\"newList\", {\n    name: \"Automated Created List\",\n    dashItems: [\n        {\n            type: \"custom_timeboard\",\n            dashId: time.id,\n        },\n        {\n            type: \"custom_screenboard\",\n            dashId: screen.id,\n        },\n    ],\n}, {\n    dependsOn: [\n        screen,\n        time,\n    ],\n});\n```\n```python\nimport pulumi\nimport pulumi_datadog as datadog\n\ntime = datadog.Dashboard(\"time\",\n    title=\"TF Test Layout Dashboard\",\n    description=\"Created using the Datadog provider\",\n    layout_type=\"ordered\",\n    is_read_only=True,\n    widgets=[datadog.DashboardWidgetArgs(\n        alert_graph_definition=datadog.DashboardWidgetAlertGraphDefinitionArgs(\n            alert_id=\"1234\",\n            viz_type=\"timeseries\",\n            title=\"Widget Title\",\n            live_span=\"1h\",\n        ),\n    )])\nscreen = datadog.Dashboard(\"screen\",\n    title=\"TF Test Free Layout Dashboard\",\n    description=\"Created using the Datadog provider\",\n    layout_type=\"free\",\n    is_read_only=False,\n    widgets=[datadog.DashboardWidgetArgs(\n        event_stream_definition=datadog.DashboardWidgetEventStreamDefinitionArgs(\n            query=\"*\",\n            event_size=\"l\",\n            title=\"Widget Title\",\n            title_size=\"16\",\n            title_align=\"left\",\n            live_span=\"1h\",\n        ),\n        widget_layout=datadog.DashboardWidgetWidgetLayoutArgs(\n            height=43,\n            width=32,\n            x=5,\n            y=5,\n        ),\n    )])\n# Create a new Dashboard List with two Dashboards\nnew_list = datadog.DashboardList(\"newList\",\n    name=\"Automated Created List\",\n    dash_items=[\n        datadog.DashboardListDashItemArgs(\n            type=\"custom_timeboard\",\n            dash_id=time.id,\n        ),\n        datadog.DashboardListDashItemArgs(\n            type=\"custom_screenboard\",\n            dash_id=screen.id,\n        ),\n    ],\n    opts=pulumi.ResourceOptions(depends_on=[\n            screen,\n            time,\n        ]))\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Datadog = Pulumi.Datadog;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var time = new Datadog.Dashboard(\"time\", new()\n    {\n        Title = \"TF Test Layout Dashboard\",\n        Description = \"Created using the Datadog provider\",\n        LayoutType = \"ordered\",\n        IsReadOnly = true,\n        Widgets = new[]\n        {\n            new Datadog.Inputs.DashboardWidgetArgs\n            {\n                AlertGraphDefinition = new Datadog.Inputs.DashboardWidgetAlertGraphDefinitionArgs\n                {\n                    AlertId = \"1234\",\n                    VizType = \"timeseries\",\n                    Title = \"Widget Title\",\n                    LiveSpan = \"1h\",\n                },\n            },\n        },\n    });\n\n    var screen = new Datadog.Dashboard(\"screen\", new()\n    {\n        Title = \"TF Test Free Layout Dashboard\",\n        Description = \"Created using the Datadog provider\",\n        LayoutType = \"free\",\n        IsReadOnly = false,\n        Widgets = new[]\n        {\n            new Datadog.Inputs.DashboardWidgetArgs\n            {\n                EventStreamDefinition = new Datadog.Inputs.DashboardWidgetEventStreamDefinitionArgs\n                {\n                    Query = \"*\",\n                    EventSize = \"l\",\n                    Title = \"Widget Title\",\n                    TitleSize = \"16\",\n                    TitleAlign = \"left\",\n                    LiveSpan = \"1h\",\n                },\n                WidgetLayout = new Datadog.Inputs.DashboardWidgetWidgetLayoutArgs\n                {\n                    Height = 43,\n                    Width = 32,\n                    X = 5,\n                    Y = 5,\n                },\n            },\n        },\n    });\n\n    // Create a new Dashboard List with two Dashboards\n    var newList = new Datadog.DashboardList(\"newList\", new()\n    {\n        Name = \"Automated Created List\",\n        DashItems = new[]\n        {\n            new Datadog.Inputs.DashboardListDashItemArgs\n            {\n                Type = \"custom_timeboard\",\n                DashId = time.Id,\n            },\n            new Datadog.Inputs.DashboardListDashItemArgs\n            {\n                Type = \"custom_screenboard\",\n                DashId = screen.Id,\n            },\n        },\n    }, new CustomResourceOptions\n    {\n        DependsOn = new[]\n        {\n            screen,\n            time,\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-datadog/sdk/v4/go/datadog\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\ttime, err := datadog.NewDashboard(ctx, \"time\", \u0026datadog.DashboardArgs{\n\t\t\tTitle:       pulumi.String(\"TF Test Layout Dashboard\"),\n\t\t\tDescription: pulumi.String(\"Created using the Datadog provider\"),\n\t\t\tLayoutType:  pulumi.String(\"ordered\"),\n\t\t\tIsReadOnly:  pulumi.Bool(true),\n\t\t\tWidgets: datadog.DashboardWidgetArray{\n\t\t\t\t\u0026datadog.DashboardWidgetArgs{\n\t\t\t\t\tAlertGraphDefinition: \u0026datadog.DashboardWidgetAlertGraphDefinitionArgs{\n\t\t\t\t\t\tAlertId:  pulumi.String(\"1234\"),\n\t\t\t\t\t\tVizType:  pulumi.String(\"timeseries\"),\n\t\t\t\t\t\tTitle:    pulumi.String(\"Widget Title\"),\n\t\t\t\t\t\tLiveSpan: pulumi.String(\"1h\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tscreen, err := datadog.NewDashboard(ctx, \"screen\", \u0026datadog.DashboardArgs{\n\t\t\tTitle:       pulumi.String(\"TF Test Free Layout Dashboard\"),\n\t\t\tDescription: pulumi.String(\"Created using the Datadog provider\"),\n\t\t\tLayoutType:  pulumi.String(\"free\"),\n\t\t\tIsReadOnly:  pulumi.Bool(false),\n\t\t\tWidgets: datadog.DashboardWidgetArray{\n\t\t\t\t\u0026datadog.DashboardWidgetArgs{\n\t\t\t\t\tEventStreamDefinition: \u0026datadog.DashboardWidgetEventStreamDefinitionArgs{\n\t\t\t\t\t\tQuery:      pulumi.String(\"*\"),\n\t\t\t\t\t\tEventSize:  pulumi.String(\"l\"),\n\t\t\t\t\t\tTitle:      pulumi.String(\"Widget Title\"),\n\t\t\t\t\t\tTitleSize:  pulumi.String(\"16\"),\n\t\t\t\t\t\tTitleAlign: pulumi.String(\"left\"),\n\t\t\t\t\t\tLiveSpan:   pulumi.String(\"1h\"),\n\t\t\t\t\t},\n\t\t\t\t\tWidgetLayout: \u0026datadog.DashboardWidgetWidgetLayoutArgs{\n\t\t\t\t\t\tHeight: pulumi.Int(43),\n\t\t\t\t\t\tWidth:  pulumi.Int(32),\n\t\t\t\t\t\tX:      pulumi.Int(5),\n\t\t\t\t\t\tY:      pulumi.Int(5),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = datadog.NewDashboardList(ctx, \"newList\", \u0026datadog.DashboardListArgs{\n\t\t\tName: pulumi.String(\"Automated Created List\"),\n\t\t\tDashItems: datadog.DashboardListDashItemArray{\n\t\t\t\t\u0026datadog.DashboardListDashItemArgs{\n\t\t\t\t\tType:   pulumi.String(\"custom_timeboard\"),\n\t\t\t\t\tDashId: time.ID(),\n\t\t\t\t},\n\t\t\t\t\u0026datadog.DashboardListDashItemArgs{\n\t\t\t\t\tType:   pulumi.String(\"custom_screenboard\"),\n\t\t\t\t\tDashId: screen.ID(),\n\t\t\t\t},\n\t\t\t},\n\t\t}, pulumi.DependsOn([]pulumi.Resource{\n\t\t\tscreen,\n\t\t\ttime,\n\t\t}))\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.datadog.Dashboard;\nimport com.pulumi.datadog.DashboardArgs;\nimport com.pulumi.datadog.inputs.DashboardWidgetArgs;\nimport com.pulumi.datadog.inputs.DashboardWidgetAlertGraphDefinitionArgs;\nimport com.pulumi.datadog.inputs.DashboardWidgetEventStreamDefinitionArgs;\nimport com.pulumi.datadog.inputs.DashboardWidgetWidgetLayoutArgs;\nimport com.pulumi.datadog.DashboardList;\nimport com.pulumi.datadog.DashboardListArgs;\nimport com.pulumi.datadog.inputs.DashboardListDashItemArgs;\nimport com.pulumi.resources.CustomResourceOptions;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var time = new Dashboard(\"time\", DashboardArgs.builder()        \n            .title(\"TF Test Layout Dashboard\")\n            .description(\"Created using the Datadog provider\")\n            .layoutType(\"ordered\")\n            .isReadOnly(true)\n            .widgets(DashboardWidgetArgs.builder()\n                .alertGraphDefinition(DashboardWidgetAlertGraphDefinitionArgs.builder()\n                    .alertId(\"1234\")\n                    .vizType(\"timeseries\")\n                    .title(\"Widget Title\")\n                    .liveSpan(\"1h\")\n                    .build())\n                .build())\n            .build());\n\n        var screen = new Dashboard(\"screen\", DashboardArgs.builder()        \n            .title(\"TF Test Free Layout Dashboard\")\n            .description(\"Created using the Datadog provider\")\n            .layoutType(\"free\")\n            .isReadOnly(false)\n            .widgets(DashboardWidgetArgs.builder()\n                .eventStreamDefinition(DashboardWidgetEventStreamDefinitionArgs.builder()\n                    .query(\"*\")\n                    .eventSize(\"l\")\n                    .title(\"Widget Title\")\n                    .titleSize(16)\n                    .titleAlign(\"left\")\n                    .liveSpan(\"1h\")\n                    .build())\n                .widgetLayout(DashboardWidgetWidgetLayoutArgs.builder()\n                    .height(43)\n                    .width(32)\n                    .x(5)\n                    .y(5)\n                    .build())\n                .build())\n            .build());\n\n        var newList = new DashboardList(\"newList\", DashboardListArgs.builder()        \n            .name(\"Automated Created List\")\n            .dashItems(            \n                DashboardListDashItemArgs.builder()\n                    .type(\"custom_timeboard\")\n                    .dashId(time.id())\n                    .build(),\n                DashboardListDashItemArgs.builder()\n                    .type(\"custom_screenboard\")\n                    .dashId(screen.id())\n                    .build())\n            .build(), CustomResourceOptions.builder()\n                .dependsOn(                \n                    screen,\n                    time)\n                .build());\n\n    }\n}\n```\n```yaml\nresources:\n  # Create a new Dashboard List with two Dashboards\n  newList:\n    type: datadog:DashboardList\n    properties:\n      name: Automated Created List\n      dashItems:\n        - type: custom_timeboard\n          dashId: ${time.id}\n        - type: custom_screenboard\n          dashId: ${screen.id}\n    options:\n      dependson:\n        - ${screen}\n        - ${time}\n  time:\n    type: datadog:Dashboard\n    properties:\n      title: TF Test Layout Dashboard\n      description: Created using the Datadog provider\n      layoutType: ordered\n      isReadOnly: true\n      widgets:\n        - alertGraphDefinition:\n            alertId: '1234'\n            vizType: timeseries\n            title: Widget Title\n            liveSpan: 1h\n  screen:\n    type: datadog:Dashboard\n    properties:\n      title: TF Test Free Layout Dashboard\n      description: Created using the Datadog provider\n      layoutType: free\n      isReadOnly: false\n      widgets:\n        - eventStreamDefinition:\n            query: '*'\n            eventSize: l\n            title: Widget Title\n            titleSize: 16\n            titleAlign: left\n            liveSpan: 1h\n          widgetLayout:\n            height: 43\n            width: 32\n            x: 5\n            y: 5\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import datadog:index/dashboardList:DashboardList new_list 123456\n```\n\n ",
            "properties": {
                "dashItems": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardListDashItem:DashboardListDashItem"
                    },
                    "description": "A set of dashboard items that belong to this list\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the Dashboard List\n"
                }
            },
            "required": [
                "name"
            ],
            "inputProperties": {
                "dashItems": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardListDashItem:DashboardListDashItem"
                    },
                    "description": "A set of dashboard items that belong to this list\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the Dashboard List\n"
                }
            },
            "requiredInputs": [
                "name"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DashboardList resources.\n",
                "properties": {
                    "dashItems": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/datadog:index/DashboardListDashItem:DashboardListDashItem"
                        },
                        "description": "A set of dashboard items that belong to this list\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the Dashboard List\n"
                    }
                },
                "type": "object"
            }
        },
        "datadog:index/downtime:Downtime": {
            "description": "Provides a Datadog downtime resource. This can be used to create and manage Datadog downtimes.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as datadog from \"@pulumi/datadog\";\n\n// Example: downtime for all monitors\n// Create a new daily 1700-0900 Datadog downtime for all monitors\nconst foo = new datadog.Downtime(\"foo\", {\n    end: 1483365600,\n    recurrence: {\n        period: 1,\n        type: \"days\",\n    },\n    scopes: [\"*\"],\n    start: 1483308000,\n});\n```\n```python\nimport pulumi\nimport pulumi_datadog as datadog\n\n# Example: downtime for all monitors\n# Create a new daily 1700-0900 Datadog downtime for all monitors\nfoo = datadog.Downtime(\"foo\",\n    end=1483365600,\n    recurrence=datadog.DowntimeRecurrenceArgs(\n        period=1,\n        type=\"days\",\n    ),\n    scopes=[\"*\"],\n    start=1483308000)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Datadog = Pulumi.Datadog;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    // Example: downtime for all monitors\n    // Create a new daily 1700-0900 Datadog downtime for all monitors\n    var foo = new Datadog.Downtime(\"foo\", new()\n    {\n        End = 1483365600,\n        Recurrence = new Datadog.Inputs.DowntimeRecurrenceArgs\n        {\n            Period = 1,\n            Type = \"days\",\n        },\n        Scopes = new[]\n        {\n            \"*\",\n        },\n        Start = 1483308000,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-datadog/sdk/v4/go/datadog\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := datadog.NewDowntime(ctx, \"foo\", \u0026datadog.DowntimeArgs{\n\t\t\tEnd: pulumi.Int(1483365600),\n\t\t\tRecurrence: \u0026datadog.DowntimeRecurrenceArgs{\n\t\t\t\tPeriod: pulumi.Int(1),\n\t\t\t\tType:   pulumi.String(\"days\"),\n\t\t\t},\n\t\t\tScopes: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"*\"),\n\t\t\t},\n\t\t\tStart: pulumi.Int(1483308000),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.datadog.Downtime;\nimport com.pulumi.datadog.DowntimeArgs;\nimport com.pulumi.datadog.inputs.DowntimeRecurrenceArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var foo = new Downtime(\"foo\", DowntimeArgs.builder()        \n            .end(1483365600)\n            .recurrence(DowntimeRecurrenceArgs.builder()\n                .period(1)\n                .type(\"days\")\n                .build())\n            .scopes(\"*\")\n            .start(1483308000)\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  # Example: downtime for all monitors\n  # // Create a new daily 1700-0900 Datadog downtime for all monitors\n  foo:\n    type: datadog:Downtime\n    properties:\n      end: 1.4833656e+09\n      recurrence:\n        period: 1\n        type: days\n      scopes:\n        - '*'\n      start: 1.483308e+09\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import datadog:index/downtime:Downtime bytes_received_localhost 2081\n```\n\n ",
            "properties": {
                "active": {
                    "type": "boolean",
                    "description": "When true indicates this downtime is being actively applied\n"
                },
                "activeChildId": {
                    "type": "integer",
                    "description": "The id corresponding to the downtime object definition of the active child for the original parent recurring downtime. This field will only exist on recurring downtimes.\n"
                },
                "disabled": {
                    "type": "boolean",
                    "description": "When true indicates this downtime is not being applied\n"
                },
                "end": {
                    "type": "integer",
                    "description": "Optionally specify an end date when this downtime should expire. Accepts a Unix timestamp in UTC.\n"
                },
                "endDate": {
                    "type": "string",
                    "description": "String representing date and time to end the downtime in RFC3339 format.\n"
                },
                "message": {
                    "type": "string",
                    "description": "An optional message to provide when creating the downtime, can include notification handles\n"
                },
                "monitorId": {
                    "type": "integer",
                    "description": "When specified, this downtime will only apply to this monitor\n"
                },
                "monitorTags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of monitor tags (up to 32) to base the scheduled downtime on. Only monitors that have all selected tags are silenced\n"
                },
                "muteFirstRecoveryNotification": {
                    "type": "boolean",
                    "description": "When true the first recovery notification during the downtime will be muted\n"
                },
                "recurrence": {
                    "$ref": "#/types/datadog:index/DowntimeRecurrence:DowntimeRecurrence",
                    "description": "Optional recurring schedule for this downtime\n"
                },
                "scopes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "specify the group scope to which this downtime applies. For everything use '*'\n"
                },
                "start": {
                    "type": "integer",
                    "description": "Specify when this downtime should start. Accepts a Unix timestamp in UTC.\n"
                },
                "startDate": {
                    "type": "string",
                    "description": "String representing date and time to start the downtime in RFC3339 format.\n"
                },
                "timezone": {
                    "type": "string",
                    "description": "The timezone for the downtime, default UTC. Follows IANA timezone database identifiers.\n"
                }
            },
            "required": [
                "active",
                "activeChildId",
                "disabled",
                "scopes"
            ],
            "inputProperties": {
                "end": {
                    "type": "integer",
                    "description": "Optionally specify an end date when this downtime should expire. Accepts a Unix timestamp in UTC.\n"
                },
                "endDate": {
                    "type": "string",
                    "description": "String representing date and time to end the downtime in RFC3339 format.\n"
                },
                "message": {
                    "type": "string",
                    "description": "An optional message to provide when creating the downtime, can include notification handles\n"
                },
                "monitorId": {
                    "type": "integer",
                    "description": "When specified, this downtime will only apply to this monitor\n"
                },
                "monitorTags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of monitor tags (up to 32) to base the scheduled downtime on. Only monitors that have all selected tags are silenced\n"
                },
                "muteFirstRecoveryNotification": {
                    "type": "boolean",
                    "description": "When true the first recovery notification during the downtime will be muted\n"
                },
                "recurrence": {
                    "$ref": "#/types/datadog:index/DowntimeRecurrence:DowntimeRecurrence",
                    "description": "Optional recurring schedule for this downtime\n"
                },
                "scopes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "specify the group scope to which this downtime applies. For everything use '*'\n"
                },
                "start": {
                    "type": "integer",
                    "description": "Specify when this downtime should start. Accepts a Unix timestamp in UTC.\n"
                },
                "startDate": {
                    "type": "string",
                    "description": "String representing date and time to start the downtime in RFC3339 format.\n"
                },
                "timezone": {
                    "type": "string",
                    "description": "The timezone for the downtime, default UTC. Follows IANA timezone database identifiers.\n"
                }
            },
            "requiredInputs": [
                "scopes"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Downtime resources.\n",
                "properties": {
                    "active": {
                        "type": "boolean",
                        "description": "When true indicates this downtime is being actively applied\n"
                    },
                    "activeChildId": {
                        "type": "integer",
                        "description": "The id corresponding to the downtime object definition of the active child for the original parent recurring downtime. This field will only exist on recurring downtimes.\n"
                    },
                    "disabled": {
                        "type": "boolean",
                        "description": "When true indicates this downtime is not being applied\n"
                    },
                    "end": {
                        "type": "integer",
                        "description": "Optionally specify an end date when this downtime should expire. Accepts a Unix timestamp in UTC.\n"
                    },
                    "endDate": {
                        "type": "string",
                        "description": "String representing date and time to end the downtime in RFC3339 format.\n"
                    },
                    "message": {
                        "type": "string",
                        "description": "An optional message to provide when creating the downtime, can include notification handles\n"
                    },
                    "monitorId": {
                        "type": "integer",
                        "description": "When specified, this downtime will only apply to this monitor\n"
                    },
                    "monitorTags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of monitor tags (up to 32) to base the scheduled downtime on. Only monitors that have all selected tags are silenced\n"
                    },
                    "muteFirstRecoveryNotification": {
                        "type": "boolean",
                        "description": "When true the first recovery notification during the downtime will be muted\n"
                    },
                    "recurrence": {
                        "$ref": "#/types/datadog:index/DowntimeRecurrence:DowntimeRecurrence",
                        "description": "Optional recurring schedule for this downtime\n"
                    },
                    "scopes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "specify the group scope to which this downtime applies. For everything use '*'\n"
                    },
                    "start": {
                        "type": "integer",
                        "description": "Specify when this downtime should start. Accepts a Unix timestamp in UTC.\n"
                    },
                    "startDate": {
                        "type": "string",
                        "description": "String representing date and time to start the downtime in RFC3339 format.\n"
                    },
                    "timezone": {
                        "type": "string",
                        "description": "The timezone for the downtime, default UTC. Follows IANA timezone database identifiers.\n"
                    }
                },
                "type": "object"
            }
        },
        "datadog:index/ipAllowlist:IpAllowlist": {
            "description": "Provides the Datadog IP allowlist resource. This can be used to manage the Datadog IP allowlist\n",
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Whether the IP Allowlist is enabled.\n"
                },
                "entries": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/IpAllowlistEntry:IpAllowlistEntry"
                    },
                    "description": "Set of objects containing an IP address or range of IP addresses in the allowlist and an accompanying note.\n"
                }
            },
            "required": [
                "enabled"
            ],
            "inputProperties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Whether the IP Allowlist is enabled.\n"
                },
                "entries": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/IpAllowlistEntry:IpAllowlistEntry"
                    },
                    "description": "Set of objects containing an IP address or range of IP addresses in the allowlist and an accompanying note.\n"
                }
            },
            "requiredInputs": [
                "enabled"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering IpAllowlist resources.\n",
                "properties": {
                    "enabled": {
                        "type": "boolean",
                        "description": "Whether the IP Allowlist is enabled.\n"
                    },
                    "entries": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/datadog:index/IpAllowlistEntry:IpAllowlistEntry"
                        },
                        "description": "Set of objects containing an IP address or range of IP addresses in the allowlist and an accompanying note.\n"
                    }
                },
                "type": "object"
            }
        },
        "datadog:index/logsArchive:LogsArchive": {
            "description": "Provides a Datadog Logs Archive API resource, which is used to create and manage Datadog logs archives.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as datadog from \"@pulumi/datadog\";\n\nconst myS3Archive = new datadog.LogsArchive(\"myS3Archive\", {\n    name: \"my s3 archive\",\n    query: \"service:myservice\",\n    s3Archive: {\n        accountId: \"001234567888\",\n        bucket: \"my-bucket\",\n        path: \"/path/foo\",\n        roleName: \"my-role-name\",\n    },\n});\n```\n```python\nimport pulumi\nimport pulumi_datadog as datadog\n\nmy_s3_archive = datadog.LogsArchive(\"myS3Archive\",\n    name=\"my s3 archive\",\n    query=\"service:myservice\",\n    s3_archive=datadog.LogsArchiveS3ArchiveArgs(\n        account_id=\"001234567888\",\n        bucket=\"my-bucket\",\n        path=\"/path/foo\",\n        role_name=\"my-role-name\",\n    ))\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Datadog = Pulumi.Datadog;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var myS3Archive = new Datadog.LogsArchive(\"myS3Archive\", new()\n    {\n        Name = \"my s3 archive\",\n        Query = \"service:myservice\",\n        S3Archive = new Datadog.Inputs.LogsArchiveS3ArchiveArgs\n        {\n            AccountId = \"001234567888\",\n            Bucket = \"my-bucket\",\n            Path = \"/path/foo\",\n            RoleName = \"my-role-name\",\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-datadog/sdk/v4/go/datadog\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := datadog.NewLogsArchive(ctx, \"myS3Archive\", \u0026datadog.LogsArchiveArgs{\n\t\t\tName:  pulumi.String(\"my s3 archive\"),\n\t\t\tQuery: pulumi.String(\"service:myservice\"),\n\t\t\tS3Archive: \u0026datadog.LogsArchiveS3ArchiveArgs{\n\t\t\t\tAccountId: pulumi.String(\"001234567888\"),\n\t\t\t\tBucket:    pulumi.String(\"my-bucket\"),\n\t\t\t\tPath:      pulumi.String(\"/path/foo\"),\n\t\t\t\tRoleName:  pulumi.String(\"my-role-name\"),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.datadog.LogsArchive;\nimport com.pulumi.datadog.LogsArchiveArgs;\nimport com.pulumi.datadog.inputs.LogsArchiveS3ArchiveArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var myS3Archive = new LogsArchive(\"myS3Archive\", LogsArchiveArgs.builder()        \n            .name(\"my s3 archive\")\n            .query(\"service:myservice\")\n            .s3Archive(LogsArchiveS3ArchiveArgs.builder()\n                .accountId(\"001234567888\")\n                .bucket(\"my-bucket\")\n                .path(\"/path/foo\")\n                .roleName(\"my-role-name\")\n                .build())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  myS3Archive:\n    type: datadog:LogsArchive\n    properties:\n      name: my s3 archive\n      query: service:myservice\n      s3Archive:\n        accountId: '001234567888'\n        bucket: my-bucket\n        path: /path/foo\n        roleName: my-role-name\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import datadog:index/logsArchive:LogsArchive my_s3_archive 1Aabc2_dfQPLnXy3HlfK4hi\n```\n\n ",
            "properties": {
                "azureArchive": {
                    "$ref": "#/types/datadog:index/LogsArchiveAzureArchive:LogsArchiveAzureArchive",
                    "description": "Definition of an azure archive.\n"
                },
                "gcsArchive": {
                    "$ref": "#/types/datadog:index/LogsArchiveGcsArchive:LogsArchiveGcsArchive",
                    "description": "Definition of a GCS archive.\n"
                },
                "includeTags": {
                    "type": "boolean",
                    "description": "To store the tags in the archive, set the value `true`. If it is set to `false`, the tags will be dropped when the logs are sent to the archive.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Your archive name.\n"
                },
                "query": {
                    "type": "string",
                    "description": "The archive query/filter. Logs matching this query are included in the archive.\n"
                },
                "rehydrationMaxScanSizeInGb": {
                    "type": "integer",
                    "description": "To limit the rehydration scan size for the archive, set a value in GB.\n"
                },
                "rehydrationTags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "An array of tags to add to rehydrated logs from an archive.\n"
                },
                "s3Archive": {
                    "$ref": "#/types/datadog:index/LogsArchiveS3Archive:LogsArchiveS3Archive",
                    "description": "Definition of an s3 archive.\n"
                }
            },
            "required": [
                "name",
                "query"
            ],
            "inputProperties": {
                "azureArchive": {
                    "$ref": "#/types/datadog:index/LogsArchiveAzureArchive:LogsArchiveAzureArchive",
                    "description": "Definition of an azure archive.\n"
                },
                "gcsArchive": {
                    "$ref": "#/types/datadog:index/LogsArchiveGcsArchive:LogsArchiveGcsArchive",
                    "description": "Definition of a GCS archive.\n"
                },
                "includeTags": {
                    "type": "boolean",
                    "description": "To store the tags in the archive, set the value `true`. If it is set to `false`, the tags will be dropped when the logs are sent to the archive.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Your archive name.\n"
                },
                "query": {
                    "type": "string",
                    "description": "The archive query/filter. Logs matching this query are included in the archive.\n"
                },
                "rehydrationMaxScanSizeInGb": {
                    "type": "integer",
                    "description": "To limit the rehydration scan size for the archive, set a value in GB.\n"
                },
                "rehydrationTags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "An array of tags to add to rehydrated logs from an archive.\n"
                },
                "s3Archive": {
                    "$ref": "#/types/datadog:index/LogsArchiveS3Archive:LogsArchiveS3Archive",
                    "description": "Definition of an s3 archive.\n"
                }
            },
            "requiredInputs": [
                "name",
                "query"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering LogsArchive resources.\n",
                "properties": {
                    "azureArchive": {
                        "$ref": "#/types/datadog:index/LogsArchiveAzureArchive:LogsArchiveAzureArchive",
                        "description": "Definition of an azure archive.\n"
                    },
                    "gcsArchive": {
                        "$ref": "#/types/datadog:index/LogsArchiveGcsArchive:LogsArchiveGcsArchive",
                        "description": "Definition of a GCS archive.\n"
                    },
                    "includeTags": {
                        "type": "boolean",
                        "description": "To store the tags in the archive, set the value `true`. If it is set to `false`, the tags will be dropped when the logs are sent to the archive.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Your archive name.\n"
                    },
                    "query": {
                        "type": "string",
                        "description": "The archive query/filter. Logs matching this query are included in the archive.\n"
                    },
                    "rehydrationMaxScanSizeInGb": {
                        "type": "integer",
                        "description": "To limit the rehydration scan size for the archive, set a value in GB.\n"
                    },
                    "rehydrationTags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "An array of tags to add to rehydrated logs from an archive.\n"
                    },
                    "s3Archive": {
                        "$ref": "#/types/datadog:index/LogsArchiveS3Archive:LogsArchiveS3Archive",
                        "description": "Definition of an s3 archive.\n"
                    }
                },
                "type": "object"
            }
        },
        "datadog:index/logsArchiveOrder:LogsArchiveOrder": {
            "description": "Provides a Datadog [Logs Archive API](https://docs.datadoghq.com/api/v2/logs-archives/) resource, which is used to manage Datadog log archives order.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as datadog from \"@pulumi/datadog\";\n\nconst sampleArchiveOrder = new datadog.LogsArchiveOrder(\"sampleArchiveOrder\", {archiveIds: [\n    datadog_logs_archive.sample_archive_1.id,\n    datadog_logs_archive.sample_archive_2.id,\n]});\n```\n```python\nimport pulumi\nimport pulumi_datadog as datadog\n\nsample_archive_order = datadog.LogsArchiveOrder(\"sampleArchiveOrder\", archive_ids=[\n    datadog_logs_archive[\"sample_archive_1\"][\"id\"],\n    datadog_logs_archive[\"sample_archive_2\"][\"id\"],\n])\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Datadog = Pulumi.Datadog;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var sampleArchiveOrder = new Datadog.LogsArchiveOrder(\"sampleArchiveOrder\", new()\n    {\n        ArchiveIds = new[]\n        {\n            datadog_logs_archive.Sample_archive_1.Id,\n            datadog_logs_archive.Sample_archive_2.Id,\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-datadog/sdk/v4/go/datadog\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := datadog.NewLogsArchiveOrder(ctx, \"sampleArchiveOrder\", \u0026datadog.LogsArchiveOrderArgs{\n\t\t\tArchiveIds: pulumi.StringArray{\n\t\t\t\tdatadog_logs_archive.Sample_archive_1.Id,\n\t\t\t\tdatadog_logs_archive.Sample_archive_2.Id,\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.datadog.LogsArchiveOrder;\nimport com.pulumi.datadog.LogsArchiveOrderArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var sampleArchiveOrder = new LogsArchiveOrder(\"sampleArchiveOrder\", LogsArchiveOrderArgs.builder()        \n            .archiveIds(            \n                datadog_logs_archive.sample_archive_1().id(),\n                datadog_logs_archive.sample_archive_2().id())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  sampleArchiveOrder:\n    type: datadog:LogsArchiveOrder\n    properties:\n      archiveIds:\n        - ${datadog_logs_archive.sample_archive_1.id}\n        - ${datadog_logs_archive.sample_archive_2.id}\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nThere must be at most one datadog_logs_archive_order resource. You can import the datadog_logs_archive_order or create an archive order.\n\n```sh\n $ pulumi import datadog:index/logsArchiveOrder:LogsArchiveOrder name\u003e archiveOrderID\n```\n\n ",
            "properties": {
                "archiveIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The archive IDs list. The order of archive IDs in this attribute defines the overall archive order for logs. If `archive_ids` is empty or not specified, it will import the actual archive order, and create the resource. Otherwise, it will try to update the order.\n"
                }
            },
            "required": [
                "archiveIds"
            ],
            "inputProperties": {
                "archiveIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The archive IDs list. The order of archive IDs in this attribute defines the overall archive order for logs. If `archive_ids` is empty or not specified, it will import the actual archive order, and create the resource. Otherwise, it will try to update the order.\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering LogsArchiveOrder resources.\n",
                "properties": {
                    "archiveIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The archive IDs list. The order of archive IDs in this attribute defines the overall archive order for logs. If `archive_ids` is empty or not specified, it will import the actual archive order, and create the resource. Otherwise, it will try to update the order.\n"
                    }
                },
                "type": "object"
            }
        },
        "datadog:index/logsCustomPipeline:LogsCustomPipeline": {
            "description": "Provides a Datadog [Logs Pipeline API](https://docs.datadoghq.com/api/v1/logs-pipelines/) resource, which is used to create and manage Datadog logs custom pipelines. Each `datadog.LogsCustomPipeline` resource defines a complete pipeline. The order of the pipelines is maintained in a different resource: `datadog.LogsPipelineOrder`. When creating a new pipeline, you need to **explicitly** add this pipeline to the `datadog.LogsPipelineOrder` resource to track the pipeline. Similarly, when a pipeline needs to be destroyed, remove its references from the `datadog.LogsPipelineOrder` resource.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.datadog.LogsCustomPipeline;\nimport com.pulumi.datadog.LogsCustomPipelineArgs;\nimport com.pulumi.datadog.inputs.LogsCustomPipelineFilterArgs;\nimport com.pulumi.datadog.inputs.LogsCustomPipelineProcessorArgs;\nimport com.pulumi.datadog.inputs.LogsCustomPipelineProcessorArithmeticProcessorArgs;\nimport com.pulumi.datadog.inputs.LogsCustomPipelineProcessorAttributeRemapperArgs;\nimport com.pulumi.datadog.inputs.LogsCustomPipelineProcessorCategoryProcessorArgs;\nimport com.pulumi.datadog.inputs.LogsCustomPipelineProcessorDateRemapperArgs;\nimport com.pulumi.datadog.inputs.LogsCustomPipelineProcessorGeoIpParserArgs;\nimport com.pulumi.datadog.inputs.LogsCustomPipelineProcessorGrokParserArgs;\nimport com.pulumi.datadog.inputs.LogsCustomPipelineProcessorGrokParserGrokArgs;\nimport com.pulumi.datadog.inputs.LogsCustomPipelineProcessorLookupProcessorArgs;\nimport com.pulumi.datadog.inputs.LogsCustomPipelineProcessorMessageRemapperArgs;\nimport com.pulumi.datadog.inputs.LogsCustomPipelineProcessorPipelineArgs;\nimport com.pulumi.datadog.inputs.LogsCustomPipelineProcessorServiceRemapperArgs;\nimport com.pulumi.datadog.inputs.LogsCustomPipelineProcessorStatusRemapperArgs;\nimport com.pulumi.datadog.inputs.LogsCustomPipelineProcessorStringBuilderProcessorArgs;\nimport com.pulumi.datadog.inputs.LogsCustomPipelineProcessorTraceIdRemapperArgs;\nimport com.pulumi.datadog.inputs.LogsCustomPipelineProcessorUserAgentParserArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var samplePipeline = new LogsCustomPipeline(\"samplePipeline\", LogsCustomPipelineArgs.builder()        \n            .filters(LogsCustomPipelineFilterArgs.builder()\n                .query(\"source:foo\")\n                .build())\n            .isEnabled(true)\n            .name(\"sample pipeline\")\n            .processors(            \n                LogsCustomPipelineProcessorArgs.builder()\n                    .arithmeticProcessor(LogsCustomPipelineProcessorArithmeticProcessorArgs.builder()\n                        .expression(\"(time1 - time2)*1000\")\n                        .isEnabled(true)\n                        .isReplaceMissing(true)\n                        .name(\"sample arithmetic processor\")\n                        .target(\"my_arithmetic\")\n                        .build())\n                    .build(),\n                LogsCustomPipelineProcessorArgs.builder()\n                    .attributeRemapper(LogsCustomPipelineProcessorAttributeRemapperArgs.builder()\n                        .isEnabled(true)\n                        .name(\"sample attribute processor\")\n                        .overrideOnConflict(false)\n                        .preserveSource(true)\n                        .sourceType(\"tag\")\n                        .sources(\"db.instance\")\n                        .target(\"db\")\n                        .targetFormat(\"string\")\n                        .targetType(\"attribute\")\n                        .build())\n                    .build(),\n                LogsCustomPipelineProcessorArgs.builder()\n                    .categoryProcessor(LogsCustomPipelineProcessorCategoryProcessorArgs.builder()\n                        .category(                        \n                            %!v(PANIC=Format method: runtime error: invalid memory address or nil pointer dereference),\n                            %!v(PANIC=Format method: runtime error: invalid memory address or nil pointer dereference))\n                        .isEnabled(true)\n                        .name(\"sample category processor\")\n                        .target(\"foo.severity\")\n                        .build())\n                    .build(),\n                LogsCustomPipelineProcessorArgs.builder()\n                    .dateRemapper(LogsCustomPipelineProcessorDateRemapperArgs.builder()\n                        .isEnabled(true)\n                        .name(\"sample date remapper\")\n                        .sources(                        \n                            \"_timestamp\",\n                            \"published_date\")\n                        .build())\n                    .build(),\n                LogsCustomPipelineProcessorArgs.builder()\n                    .geoIpParser(LogsCustomPipelineProcessorGeoIpParserArgs.builder()\n                        .isEnabled(true)\n                        .name(\"sample geo ip parser\")\n                        .sources(\"network.client.ip\")\n                        .target(\"network.client.geoip\")\n                        .build())\n                    .build(),\n                LogsCustomPipelineProcessorArgs.builder()\n                    .grokParser(LogsCustomPipelineProcessorGrokParserArgs.builder()\n                        .grok(LogsCustomPipelineProcessorGrokParserGrokArgs.builder()\n                            .matchRules(\"Rule %%{word:my_word2} %%{number:my_float2}\")\n                            .supportRules(\"\")\n                            .build())\n                        .isEnabled(true)\n                        .name(\"sample grok parser\")\n                        .samples(\"sample log 1\")\n                        .source(\"message\")\n                        .build())\n                    .build(),\n                LogsCustomPipelineProcessorArgs.builder()\n                    .lookupProcessor(LogsCustomPipelineProcessorLookupProcessorArgs.builder()\n                        .defaultLookup(\"unknown service\")\n                        .isEnabled(true)\n                        .lookupTable(\"1,my service\")\n                        .name(\"sample lookup processor\")\n                        .source(\"service_id\")\n                        .target(\"service_name\")\n                        .build())\n                    .build(),\n                LogsCustomPipelineProcessorArgs.builder()\n                    .messageRemapper(LogsCustomPipelineProcessorMessageRemapperArgs.builder()\n                        .isEnabled(true)\n                        .name(\"sample message remapper\")\n                        .sources(\"msg\")\n                        .build())\n                    .build(),\n                LogsCustomPipelineProcessorArgs.builder()\n                    .pipeline(LogsCustomPipelineProcessorPipelineArgs.builder()\n                        .filter(%!v(PANIC=Format method: runtime error: invalid memory address or nil pointer dereference))\n                        .isEnabled(true)\n                        .name(\"nested pipeline\")\n                        .processor(%!v(PANIC=Format method: runtime error: invalid memory address or nil pointer dereference))\n                        .build())\n                    .build(),\n                LogsCustomPipelineProcessorArgs.builder()\n                    .serviceRemapper(LogsCustomPipelineProcessorServiceRemapperArgs.builder()\n                        .isEnabled(true)\n                        .name(\"sample service remapper\")\n                        .sources(\"service\")\n                        .build())\n                    .build(),\n                LogsCustomPipelineProcessorArgs.builder()\n                    .statusRemapper(LogsCustomPipelineProcessorStatusRemapperArgs.builder()\n                        .isEnabled(true)\n                        .name(\"sample status remapper\")\n                        .sources(                        \n                            \"info\",\n                            \"trace\")\n                        .build())\n                    .build(),\n                LogsCustomPipelineProcessorArgs.builder()\n                    .stringBuilderProcessor(LogsCustomPipelineProcessorStringBuilderProcessorArgs.builder()\n                        .isEnabled(true)\n                        .isReplaceMissing(false)\n                        .name(\"sample string builder processor\")\n                        .target(\"user_activity\")\n                        .template(\"%%{user.name} logged in at %%{timestamp}\")\n                        .build())\n                    .build(),\n                LogsCustomPipelineProcessorArgs.builder()\n                    .traceIdRemapper(LogsCustomPipelineProcessorTraceIdRemapperArgs.builder()\n                        .isEnabled(true)\n                        .name(\"sample trace id remapper\")\n                        .sources(\"dd.trace_id\")\n                        .build())\n                    .build(),\n                LogsCustomPipelineProcessorArgs.builder()\n                    .userAgentParser(LogsCustomPipelineProcessorUserAgentParserArgs.builder()\n                        .isEnabled(true)\n                        .isEncoded(false)\n                        .name(\"sample user agent parser\")\n                        .sources(                        \n                            \"user\",\n                            \"agent\")\n                        .target(\"http_agent\")\n                        .build())\n                    .build())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  samplePipeline:\n    type: datadog:LogsCustomPipeline\n    properties:\n      filters:\n        - query: source:foo\n      isEnabled: true\n      name: sample pipeline\n      processors:\n        - arithmeticProcessor:\n            expression: (time1 - time2)*1000\n            isEnabled: true\n            isReplaceMissing: true\n            name: sample arithmetic processor\n            target: my_arithmetic\n        - attributeRemapper:\n            isEnabled: true\n            name: sample attribute processor\n            overrideOnConflict: false\n            preserveSource: true\n            sourceType: tag\n            sources:\n              - db.instance\n            target: db\n            targetFormat: string\n            targetType: attribute\n        - categoryProcessor:\n            category:\n              - filter:\n                  query: '@severity: \".\"'\n                name: debug\n              - filter:\n                  query: '@severity: \"-\"'\n                name: verbose\n            isEnabled: true\n            name: sample category processor\n            target: foo.severity\n        - dateRemapper:\n            isEnabled: true\n            name: sample date remapper\n            sources:\n              - _timestamp\n              - published_date\n        - geoIpParser:\n            isEnabled: true\n            name: sample geo ip parser\n            sources:\n              - network.client.ip\n            target: network.client.geoip\n        - grokParser:\n            grok:\n              matchRules: Rule %%{word:my_word2} %%{number:my_float2}\n              supportRules:\n            isEnabled: true\n            name: sample grok parser\n            samples:\n              - sample log 1\n            source: message\n        - lookupProcessor:\n            defaultLookup: unknown service\n            isEnabled: true\n            lookupTable:\n              - 1,my service\n            name: sample lookup processor\n            source: service_id\n            target: service_name\n        - messageRemapper:\n            isEnabled: true\n            name: sample message remapper\n            sources:\n              - msg\n        - pipeline:\n            filter:\n              - query: source:foo\n            isEnabled: true\n            name: nested pipeline\n            processor:\n              - urlParser:\n                  name: sample url parser\n                  normalizeEndingSlashes: true\n                  sources:\n                    - url\n                    - extra\n                  target: http_url\n        - serviceRemapper:\n            isEnabled: true\n            name: sample service remapper\n            sources:\n              - service\n        - statusRemapper:\n            isEnabled: true\n            name: sample status remapper\n            sources:\n              - info\n              - trace\n        - stringBuilderProcessor:\n            isEnabled: true\n            isReplaceMissing: false\n            name: sample string builder processor\n            target: user_activity\n            template: '%%{user.name} logged in at %%{timestamp}'\n        - traceIdRemapper:\n            isEnabled: true\n            name: sample trace id remapper\n            sources:\n              - dd.trace_id\n        - userAgentParser:\n            isEnabled: true\n            isEncoded: false\n            name: sample user agent parser\n            sources:\n              - user\n              - agent\n            target: http_agent\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nTo find the pipeline ID, click the \"edit\" button in the UI to open the pipeline details. The pipeline ID is the last part of the URL.\n\n```sh\n $ pulumi import datadog:index/logsCustomPipeline:LogsCustomPipeline name\u003e \u003cpipelineID\u003e\n```\n\n ",
            "properties": {
                "filters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/LogsCustomPipelineFilter:LogsCustomPipelineFilter"
                    }
                },
                "isEnabled": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "processors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/LogsCustomPipelineProcessor:LogsCustomPipelineProcessor"
                    }
                }
            },
            "required": [
                "filters",
                "name"
            ],
            "inputProperties": {
                "filters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/LogsCustomPipelineFilter:LogsCustomPipelineFilter"
                    }
                },
                "isEnabled": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "processors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/LogsCustomPipelineProcessor:LogsCustomPipelineProcessor"
                    }
                }
            },
            "requiredInputs": [
                "filters",
                "name"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering LogsCustomPipeline resources.\n",
                "properties": {
                    "filters": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/datadog:index/LogsCustomPipelineFilter:LogsCustomPipelineFilter"
                        }
                    },
                    "isEnabled": {
                        "type": "boolean"
                    },
                    "name": {
                        "type": "string"
                    },
                    "processors": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/datadog:index/LogsCustomPipelineProcessor:LogsCustomPipelineProcessor"
                        }
                    }
                },
                "type": "object"
            }
        },
        "datadog:index/logsIndex:LogsIndex": {
            "description": "{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as datadog from \"@pulumi/datadog\";\n\nconst sampleIndex = new datadog.LogsIndex(\"sampleIndex\", {\n    dailyLimit: 200000,\n    exclusionFilters: [\n        {\n            filters: [{\n                query: \"app:coredns\",\n                sampleRate: 0.97,\n            }],\n            isEnabled: true,\n            name: \"Filter coredns logs\",\n        },\n        {\n            filters: [{\n                query: \"service:kube_apiserver\",\n                sampleRate: 1,\n            }],\n            isEnabled: true,\n            name: \"Kubernetes apiserver\",\n        },\n    ],\n    filters: [{\n        query: \"*\",\n    }],\n    name: \"your index\",\n    retentionDays: 7,\n});\n```\n```python\nimport pulumi\nimport pulumi_datadog as datadog\n\nsample_index = datadog.LogsIndex(\"sampleIndex\",\n    daily_limit=200000,\n    exclusion_filters=[\n        datadog.LogsIndexExclusionFilterArgs(\n            filters=[datadog.LogsIndexExclusionFilterFilterArgs(\n                query=\"app:coredns\",\n                sample_rate=0.97,\n            )],\n            is_enabled=True,\n            name=\"Filter coredns logs\",\n        ),\n        datadog.LogsIndexExclusionFilterArgs(\n            filters=[datadog.LogsIndexExclusionFilterFilterArgs(\n                query=\"service:kube_apiserver\",\n                sample_rate=1,\n            )],\n            is_enabled=True,\n            name=\"Kubernetes apiserver\",\n        ),\n    ],\n    filters=[datadog.LogsIndexFilterArgs(\n        query=\"*\",\n    )],\n    name=\"your index\",\n    retention_days=7)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Datadog = Pulumi.Datadog;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var sampleIndex = new Datadog.LogsIndex(\"sampleIndex\", new()\n    {\n        DailyLimit = 200000,\n        ExclusionFilters = new[]\n        {\n            new Datadog.Inputs.LogsIndexExclusionFilterArgs\n            {\n                Filters = new[]\n                {\n                    new Datadog.Inputs.LogsIndexExclusionFilterFilterArgs\n                    {\n                        Query = \"app:coredns\",\n                        SampleRate = 0.97,\n                    },\n                },\n                IsEnabled = true,\n                Name = \"Filter coredns logs\",\n            },\n            new Datadog.Inputs.LogsIndexExclusionFilterArgs\n            {\n                Filters = new[]\n                {\n                    new Datadog.Inputs.LogsIndexExclusionFilterFilterArgs\n                    {\n                        Query = \"service:kube_apiserver\",\n                        SampleRate = 1,\n                    },\n                },\n                IsEnabled = true,\n                Name = \"Kubernetes apiserver\",\n            },\n        },\n        Filters = new[]\n        {\n            new Datadog.Inputs.LogsIndexFilterArgs\n            {\n                Query = \"*\",\n            },\n        },\n        Name = \"your index\",\n        RetentionDays = 7,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-datadog/sdk/v4/go/datadog\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := datadog.NewLogsIndex(ctx, \"sampleIndex\", \u0026datadog.LogsIndexArgs{\n\t\t\tDailyLimit: pulumi.Int(200000),\n\t\t\tExclusionFilters: datadog.LogsIndexExclusionFilterArray{\n\t\t\t\t\u0026datadog.LogsIndexExclusionFilterArgs{\n\t\t\t\t\tFilters: datadog.LogsIndexExclusionFilterFilterArray{\n\t\t\t\t\t\t\u0026datadog.LogsIndexExclusionFilterFilterArgs{\n\t\t\t\t\t\t\tQuery:      pulumi.String(\"app:coredns\"),\n\t\t\t\t\t\t\tSampleRate: pulumi.Float64(0.97),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tIsEnabled: pulumi.Bool(true),\n\t\t\t\t\tName:      pulumi.String(\"Filter coredns logs\"),\n\t\t\t\t},\n\t\t\t\t\u0026datadog.LogsIndexExclusionFilterArgs{\n\t\t\t\t\tFilters: datadog.LogsIndexExclusionFilterFilterArray{\n\t\t\t\t\t\t\u0026datadog.LogsIndexExclusionFilterFilterArgs{\n\t\t\t\t\t\t\tQuery:      pulumi.String(\"service:kube_apiserver\"),\n\t\t\t\t\t\t\tSampleRate: pulumi.Float64(1),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tIsEnabled: pulumi.Bool(true),\n\t\t\t\t\tName:      pulumi.String(\"Kubernetes apiserver\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tFilters: datadog.LogsIndexFilterArray{\n\t\t\t\t\u0026datadog.LogsIndexFilterArgs{\n\t\t\t\t\tQuery: pulumi.String(\"*\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tName:          pulumi.String(\"your index\"),\n\t\t\tRetentionDays: pulumi.Int(7),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.datadog.LogsIndex;\nimport com.pulumi.datadog.LogsIndexArgs;\nimport com.pulumi.datadog.inputs.LogsIndexExclusionFilterArgs;\nimport com.pulumi.datadog.inputs.LogsIndexFilterArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var sampleIndex = new LogsIndex(\"sampleIndex\", LogsIndexArgs.builder()        \n            .dailyLimit(200000)\n            .exclusionFilters(            \n                LogsIndexExclusionFilterArgs.builder()\n                    .filters(LogsIndexExclusionFilterFilterArgs.builder()\n                        .query(\"app:coredns\")\n                        .sampleRate(0.97)\n                        .build())\n                    .isEnabled(true)\n                    .name(\"Filter coredns logs\")\n                    .build(),\n                LogsIndexExclusionFilterArgs.builder()\n                    .filters(LogsIndexExclusionFilterFilterArgs.builder()\n                        .query(\"service:kube_apiserver\")\n                        .sampleRate(1)\n                        .build())\n                    .isEnabled(true)\n                    .name(\"Kubernetes apiserver\")\n                    .build())\n            .filters(LogsIndexFilterArgs.builder()\n                .query(\"*\")\n                .build())\n            .name(\"your index\")\n            .retentionDays(7)\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  sampleIndex:\n    type: datadog:LogsIndex\n    properties:\n      dailyLimit: 200000\n      exclusionFilters:\n        - filters:\n            - query: app:coredns\n              sampleRate: 0.97\n          isEnabled: true\n          name: Filter coredns logs\n        - filters:\n            - query: service:kube_apiserver\n              sampleRate: 1\n          isEnabled: true\n          name: Kubernetes apiserver\n      filters:\n        - query: '*'\n      name: your index\n      retentionDays: 7\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import datadog:index/logsIndex:LogsIndex name\u003e \u003cindexName\u003e\n```\n\n ",
            "properties": {
                "dailyLimit": {
                    "type": "integer",
                    "description": "The number of log events you can send in this index per day before you are rate-limited.\n"
                },
                "disableDailyLimit": {
                    "type": "boolean",
                    "description": "If true, sets the daily*limit value to null and the index is not limited on a daily basis (any specified daily*limit value in the request is ignored). If false or omitted, the index's current daily_limit is maintained.\n"
                },
                "exclusionFilters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/LogsIndexExclusionFilter:LogsIndexExclusionFilter"
                    },
                    "description": "List of exclusion filters.\n"
                },
                "filters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/LogsIndexFilter:LogsIndexFilter"
                    },
                    "description": "Logs filter\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the index.\n"
                },
                "retentionDays": {
                    "type": "integer",
                    "description": "The number of days before logs are deleted from this index.\n"
                }
            },
            "required": [
                "disableDailyLimit",
                "filters",
                "name",
                "retentionDays"
            ],
            "inputProperties": {
                "dailyLimit": {
                    "type": "integer",
                    "description": "The number of log events you can send in this index per day before you are rate-limited.\n"
                },
                "disableDailyLimit": {
                    "type": "boolean",
                    "description": "If true, sets the daily*limit value to null and the index is not limited on a daily basis (any specified daily*limit value in the request is ignored). If false or omitted, the index's current daily_limit is maintained.\n"
                },
                "exclusionFilters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/LogsIndexExclusionFilter:LogsIndexExclusionFilter"
                    },
                    "description": "List of exclusion filters.\n"
                },
                "filters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/LogsIndexFilter:LogsIndexFilter"
                    },
                    "description": "Logs filter\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the index.\n"
                },
                "retentionDays": {
                    "type": "integer",
                    "description": "The number of days before logs are deleted from this index.\n"
                }
            },
            "requiredInputs": [
                "filters",
                "name"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering LogsIndex resources.\n",
                "properties": {
                    "dailyLimit": {
                        "type": "integer",
                        "description": "The number of log events you can send in this index per day before you are rate-limited.\n"
                    },
                    "disableDailyLimit": {
                        "type": "boolean",
                        "description": "If true, sets the daily*limit value to null and the index is not limited on a daily basis (any specified daily*limit value in the request is ignored). If false or omitted, the index's current daily_limit is maintained.\n"
                    },
                    "exclusionFilters": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/datadog:index/LogsIndexExclusionFilter:LogsIndexExclusionFilter"
                        },
                        "description": "List of exclusion filters.\n"
                    },
                    "filters": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/datadog:index/LogsIndexFilter:LogsIndexFilter"
                        },
                        "description": "Logs filter\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the index.\n"
                    },
                    "retentionDays": {
                        "type": "integer",
                        "description": "The number of days before logs are deleted from this index.\n"
                    }
                },
                "type": "object"
            }
        },
        "datadog:index/logsIndexOrder:LogsIndexOrder": {
            "description": "Provides a Datadog Logs Index API resource. This can be used to manage the order of Datadog logs indexes.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as datadog from \"@pulumi/datadog\";\n\nconst sampleIndexOrder = new datadog.LogsIndexOrder(\"sampleIndexOrder\", {\n    name: \"sample_index_order\",\n    indexes: [datadog_logs_index.sample_index.id],\n});\n```\n```python\nimport pulumi\nimport pulumi_datadog as datadog\n\nsample_index_order = datadog.LogsIndexOrder(\"sampleIndexOrder\",\n    name=\"sample_index_order\",\n    indexes=[datadog_logs_index[\"sample_index\"][\"id\"]])\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Datadog = Pulumi.Datadog;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var sampleIndexOrder = new Datadog.LogsIndexOrder(\"sampleIndexOrder\", new()\n    {\n        Name = \"sample_index_order\",\n        Indexes = new[]\n        {\n            datadog_logs_index.Sample_index.Id,\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-datadog/sdk/v4/go/datadog\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := datadog.NewLogsIndexOrder(ctx, \"sampleIndexOrder\", \u0026datadog.LogsIndexOrderArgs{\n\t\t\tName: pulumi.String(\"sample_index_order\"),\n\t\t\tIndexes: pulumi.StringArray{\n\t\t\t\tdatadog_logs_index.Sample_index.Id,\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.datadog.LogsIndexOrder;\nimport com.pulumi.datadog.LogsIndexOrderArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var sampleIndexOrder = new LogsIndexOrder(\"sampleIndexOrder\", LogsIndexOrderArgs.builder()        \n            .name(\"sample_index_order\")\n            .indexes(datadog_logs_index.sample_index().id())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  sampleIndexOrder:\n    type: datadog:LogsIndexOrder\n    properties:\n      name: sample_index_order\n      indexes:\n        - ${datadog_logs_index.sample_index.id}\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nThe Datadog Terraform Provider does not support the creation and deletion of index orders. There must be at most one `datadog_logs_index_order` resource `\u003cname\u003e` can be whatever you specify in your code. Datadog does not store the name on the server.\n\n```sh\n $ pulumi import datadog:index/logsIndexOrder:LogsIndexOrder name\u003e \u003cname\u003e\n```\n\n ",
            "properties": {
                "indexes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The index resource list. Logs are tested against the query filter of each index one by one following the order of the list.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The unique name of the index order resource.\n"
                }
            },
            "required": [
                "indexes",
                "name"
            ],
            "inputProperties": {
                "indexes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The index resource list. Logs are tested against the query filter of each index one by one following the order of the list.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The unique name of the index order resource.\n"
                }
            },
            "requiredInputs": [
                "indexes"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering LogsIndexOrder resources.\n",
                "properties": {
                    "indexes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The index resource list. Logs are tested against the query filter of each index one by one following the order of the list.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The unique name of the index order resource.\n"
                    }
                },
                "type": "object"
            }
        },
        "datadog:index/logsIntegrationPipeline:LogsIntegrationPipeline": {
            "description": "Provides a Datadog Logs Pipeline API resource to manage the integrations. Integration pipelines are the pipelines that are automatically installed for your organization when sending the logs with specific sources. You don't need to maintain or update these types of pipelines. Keeping them as resources, however, allows you to manage the order of your pipelines by referencing them in your `datadog.LogsPipelineOrder` resource. If you don't need the `pipeline_order` feature, this resource declaration can be omitted.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as datadog from \"@pulumi/datadog\";\n\nconst python = new datadog.LogsIntegrationPipeline(\"python\", {isEnabled: true});\n```\n```python\nimport pulumi\nimport pulumi_datadog as datadog\n\npython = datadog.LogsIntegrationPipeline(\"python\", is_enabled=True)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Datadog = Pulumi.Datadog;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var python = new Datadog.LogsIntegrationPipeline(\"python\", new()\n    {\n        IsEnabled = true,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-datadog/sdk/v4/go/datadog\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := datadog.NewLogsIntegrationPipeline(ctx, \"python\", \u0026datadog.LogsIntegrationPipelineArgs{\n\t\t\tIsEnabled: pulumi.Bool(true),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.datadog.LogsIntegrationPipeline;\nimport com.pulumi.datadog.LogsIntegrationPipelineArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var python = new LogsIntegrationPipeline(\"python\", LogsIntegrationPipelineArgs.builder()        \n            .isEnabled(true)\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  python:\n    type: datadog:LogsIntegrationPipeline\n    properties:\n      isEnabled: true\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nTo find the pipeline ID, click the \"view\" button in the UI to open the pipeline details. The pipeline ID is the last part of the URL.\n\n```sh\n $ pulumi import datadog:index/logsIntegrationPipeline:LogsIntegrationPipeline name\u003e \u003cpipelineID\u003e\n```\n\n ",
            "properties": {
                "isEnabled": {
                    "type": "boolean",
                    "description": "Boolean value to enable your pipeline.\n"
                }
            },
            "inputProperties": {
                "isEnabled": {
                    "type": "boolean",
                    "description": "Boolean value to enable your pipeline.\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering LogsIntegrationPipeline resources.\n",
                "properties": {
                    "isEnabled": {
                        "type": "boolean",
                        "description": "Boolean value to enable your pipeline.\n"
                    }
                },
                "type": "object"
            }
        },
        "datadog:index/logsMetric:LogsMetric": {
            "description": "Resource for interacting with the logs_metric API\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as datadog from \"@pulumi/datadog\";\n\nconst testingLogsMetric = new datadog.LogsMetric(\"testingLogsMetric\", {\n    compute: {\n        aggregationType: \"distribution\",\n        path: \"@duration\",\n    },\n    filter: {\n        query: \"service:test\",\n    },\n    groupBies: [\n        {\n            path: \"@status\",\n            tagName: \"status\",\n        },\n        {\n            path: \"@version\",\n            tagName: \"version\",\n        },\n    ],\n    name: \"testing.logs.metric\",\n});\n```\n```python\nimport pulumi\nimport pulumi_datadog as datadog\n\ntesting_logs_metric = datadog.LogsMetric(\"testingLogsMetric\",\n    compute=datadog.LogsMetricComputeArgs(\n        aggregation_type=\"distribution\",\n        path=\"@duration\",\n    ),\n    filter=datadog.LogsMetricFilterArgs(\n        query=\"service:test\",\n    ),\n    group_bies=[\n        datadog.LogsMetricGroupByArgs(\n            path=\"@status\",\n            tag_name=\"status\",\n        ),\n        datadog.LogsMetricGroupByArgs(\n            path=\"@version\",\n            tag_name=\"version\",\n        ),\n    ],\n    name=\"testing.logs.metric\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Datadog = Pulumi.Datadog;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var testingLogsMetric = new Datadog.LogsMetric(\"testingLogsMetric\", new()\n    {\n        Compute = new Datadog.Inputs.LogsMetricComputeArgs\n        {\n            AggregationType = \"distribution\",\n            Path = \"@duration\",\n        },\n        Filter = new Datadog.Inputs.LogsMetricFilterArgs\n        {\n            Query = \"service:test\",\n        },\n        GroupBies = new[]\n        {\n            new Datadog.Inputs.LogsMetricGroupByArgs\n            {\n                Path = \"@status\",\n                TagName = \"status\",\n            },\n            new Datadog.Inputs.LogsMetricGroupByArgs\n            {\n                Path = \"@version\",\n                TagName = \"version\",\n            },\n        },\n        Name = \"testing.logs.metric\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-datadog/sdk/v4/go/datadog\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := datadog.NewLogsMetric(ctx, \"testingLogsMetric\", \u0026datadog.LogsMetricArgs{\n\t\t\tCompute: \u0026datadog.LogsMetricComputeArgs{\n\t\t\t\tAggregationType: pulumi.String(\"distribution\"),\n\t\t\t\tPath:            pulumi.String(\"@duration\"),\n\t\t\t},\n\t\t\tFilter: \u0026datadog.LogsMetricFilterArgs{\n\t\t\t\tQuery: pulumi.String(\"service:test\"),\n\t\t\t},\n\t\t\tGroupBies: datadog.LogsMetricGroupByArray{\n\t\t\t\t\u0026datadog.LogsMetricGroupByArgs{\n\t\t\t\t\tPath:    pulumi.String(\"@status\"),\n\t\t\t\t\tTagName: pulumi.String(\"status\"),\n\t\t\t\t},\n\t\t\t\t\u0026datadog.LogsMetricGroupByArgs{\n\t\t\t\t\tPath:    pulumi.String(\"@version\"),\n\t\t\t\t\tTagName: pulumi.String(\"version\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tName: pulumi.String(\"testing.logs.metric\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.datadog.LogsMetric;\nimport com.pulumi.datadog.LogsMetricArgs;\nimport com.pulumi.datadog.inputs.LogsMetricComputeArgs;\nimport com.pulumi.datadog.inputs.LogsMetricFilterArgs;\nimport com.pulumi.datadog.inputs.LogsMetricGroupByArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var testingLogsMetric = new LogsMetric(\"testingLogsMetric\", LogsMetricArgs.builder()        \n            .compute(LogsMetricComputeArgs.builder()\n                .aggregationType(\"distribution\")\n                .path(\"@duration\")\n                .build())\n            .filter(LogsMetricFilterArgs.builder()\n                .query(\"service:test\")\n                .build())\n            .groupBies(            \n                LogsMetricGroupByArgs.builder()\n                    .path(\"@status\")\n                    .tagName(\"status\")\n                    .build(),\n                LogsMetricGroupByArgs.builder()\n                    .path(\"@version\")\n                    .tagName(\"version\")\n                    .build())\n            .name(\"testing.logs.metric\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  testingLogsMetric:\n    type: datadog:LogsMetric\n    properties:\n      compute:\n        aggregationType: distribution\n        path: '@duration'\n      filter:\n        query: service:test\n      groupBies:\n        - path: '@status'\n          tagName: status\n        - path: '@version'\n          tagName: version\n      name: testing.logs.metric\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import datadog:index/logsMetric:LogsMetric testing_logs_metric testing.logs.metric\n```\n\n ",
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:index/LogsMetricCompute:LogsMetricCompute",
                    "description": "The compute rule to compute the log-based metric. This field can't be updated after creation.\n"
                },
                "filter": {
                    "$ref": "#/types/datadog:index/LogsMetricFilter:LogsMetricFilter",
                    "description": "The log-based metric filter. Logs matching this filter will be aggregated in this metric.\n"
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/LogsMetricGroupBy:LogsMetricGroupBy"
                    },
                    "description": "The rules for the group by.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the log-based metric. This field can't be updated after creation.\n"
                }
            },
            "required": [
                "compute",
                "filter",
                "name"
            ],
            "inputProperties": {
                "compute": {
                    "$ref": "#/types/datadog:index/LogsMetricCompute:LogsMetricCompute",
                    "description": "The compute rule to compute the log-based metric. This field can't be updated after creation.\n",
                    "willReplaceOnChanges": true
                },
                "filter": {
                    "$ref": "#/types/datadog:index/LogsMetricFilter:LogsMetricFilter",
                    "description": "The log-based metric filter. Logs matching this filter will be aggregated in this metric.\n"
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/LogsMetricGroupBy:LogsMetricGroupBy"
                    },
                    "description": "The rules for the group by.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the log-based metric. This field can't be updated after creation.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "compute",
                "filter",
                "name"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering LogsMetric resources.\n",
                "properties": {
                    "compute": {
                        "$ref": "#/types/datadog:index/LogsMetricCompute:LogsMetricCompute",
                        "description": "The compute rule to compute the log-based metric. This field can't be updated after creation.\n",
                        "willReplaceOnChanges": true
                    },
                    "filter": {
                        "$ref": "#/types/datadog:index/LogsMetricFilter:LogsMetricFilter",
                        "description": "The log-based metric filter. Logs matching this filter will be aggregated in this metric.\n"
                    },
                    "groupBies": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/datadog:index/LogsMetricGroupBy:LogsMetricGroupBy"
                        },
                        "description": "The rules for the group by.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the log-based metric. This field can't be updated after creation.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "datadog:index/logsPipelineOrder:LogsPipelineOrder": {
            "description": "Provides a Datadog Logs Pipeline API resource, which is used to manage Datadog log pipelines order.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as datadog from \"@pulumi/datadog\";\n\nconst samplePipelineOrder = new datadog.LogsPipelineOrder(\"samplePipelineOrder\", {\n    name: \"sample_pipeline_order\",\n    pipelines: [\n        datadog_logs_custom_pipeline.sample_pipeline.id,\n        datadog_logs_integration_pipeline.python.id,\n    ],\n});\n```\n```python\nimport pulumi\nimport pulumi_datadog as datadog\n\nsample_pipeline_order = datadog.LogsPipelineOrder(\"samplePipelineOrder\",\n    name=\"sample_pipeline_order\",\n    pipelines=[\n        datadog_logs_custom_pipeline[\"sample_pipeline\"][\"id\"],\n        datadog_logs_integration_pipeline[\"python\"][\"id\"],\n    ])\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Datadog = Pulumi.Datadog;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var samplePipelineOrder = new Datadog.LogsPipelineOrder(\"samplePipelineOrder\", new()\n    {\n        Name = \"sample_pipeline_order\",\n        Pipelines = new[]\n        {\n            datadog_logs_custom_pipeline.Sample_pipeline.Id,\n            datadog_logs_integration_pipeline.Python.Id,\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-datadog/sdk/v4/go/datadog\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := datadog.NewLogsPipelineOrder(ctx, \"samplePipelineOrder\", \u0026datadog.LogsPipelineOrderArgs{\n\t\t\tName: pulumi.String(\"sample_pipeline_order\"),\n\t\t\tPipelines: pulumi.StringArray{\n\t\t\t\tdatadog_logs_custom_pipeline.Sample_pipeline.Id,\n\t\t\t\tdatadog_logs_integration_pipeline.Python.Id,\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.datadog.LogsPipelineOrder;\nimport com.pulumi.datadog.LogsPipelineOrderArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var samplePipelineOrder = new LogsPipelineOrder(\"samplePipelineOrder\", LogsPipelineOrderArgs.builder()        \n            .name(\"sample_pipeline_order\")\n            .pipelines(            \n                datadog_logs_custom_pipeline.sample_pipeline().id(),\n                datadog_logs_integration_pipeline.python().id())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  samplePipelineOrder:\n    type: datadog:LogsPipelineOrder\n    properties:\n      name: sample_pipeline_order\n      pipelines:\n        - ${datadog_logs_custom_pipeline.sample_pipeline.id}\n        - ${datadog_logs_integration_pipeline.python.id}\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nThere must be at most one datadog_logs_pipeline_order resource. Pipeline order creation is not supported from logs config API. You can import the datadog_logs_pipeline_order or create a pipeline order (which is actually doing the update operation).\n\n```sh\n $ pulumi import datadog:index/logsPipelineOrder:LogsPipelineOrder name\u003e \u003cname\u003e\n```\n\n ",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "The name attribute in the resource `datadog.LogsPipelineOrder` needs to be unique. It's recommended to use the same value as the resource name. No related field is available in [Logs Pipeline API](https://docs.datadoghq.com/api/v1/logs-pipelines/#get-pipeline-order).\n"
                },
                "pipelines": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The pipeline IDs list. The order of pipeline IDs in this attribute defines the overall pipeline order for logs.\n"
                }
            },
            "required": [
                "name",
                "pipelines"
            ],
            "inputProperties": {
                "name": {
                    "type": "string",
                    "description": "The name attribute in the resource `datadog.LogsPipelineOrder` needs to be unique. It's recommended to use the same value as the resource name. No related field is available in [Logs Pipeline API](https://docs.datadoghq.com/api/v1/logs-pipelines/#get-pipeline-order).\n"
                },
                "pipelines": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The pipeline IDs list. The order of pipeline IDs in this attribute defines the overall pipeline order for logs.\n"
                }
            },
            "requiredInputs": [
                "name",
                "pipelines"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering LogsPipelineOrder resources.\n",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The name attribute in the resource `datadog.LogsPipelineOrder` needs to be unique. It's recommended to use the same value as the resource name. No related field is available in [Logs Pipeline API](https://docs.datadoghq.com/api/v1/logs-pipelines/#get-pipeline-order).\n"
                    },
                    "pipelines": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The pipeline IDs list. The order of pipeline IDs in this attribute defines the overall pipeline order for logs.\n"
                    }
                },
                "type": "object"
            }
        },
        "datadog:index/metricMetadata:MetricMetadata": {
            "description": "Provides a Datadog metric_metadata resource. This can be used to manage a metric's metadata.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as datadog from \"@pulumi/datadog\";\n\n// Manage a Datadog metric's metadata\nconst requestTime = new datadog.MetricMetadata(\"requestTime\", {\n    description: \"99th percentile request time in millseconds\",\n    metric: \"request.time\",\n    shortName: \"Request time\",\n    type: \"gauge\",\n    unit: \"millisecond\",\n});\n```\n```python\nimport pulumi\nimport pulumi_datadog as datadog\n\n# Manage a Datadog metric's metadata\nrequest_time = datadog.MetricMetadata(\"requestTime\",\n    description=\"99th percentile request time in millseconds\",\n    metric=\"request.time\",\n    short_name=\"Request time\",\n    type=\"gauge\",\n    unit=\"millisecond\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Datadog = Pulumi.Datadog;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    // Manage a Datadog metric's metadata\n    var requestTime = new Datadog.MetricMetadata(\"requestTime\", new()\n    {\n        Description = \"99th percentile request time in millseconds\",\n        Metric = \"request.time\",\n        ShortName = \"Request time\",\n        Type = \"gauge\",\n        Unit = \"millisecond\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-datadog/sdk/v4/go/datadog\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := datadog.NewMetricMetadata(ctx, \"requestTime\", \u0026datadog.MetricMetadataArgs{\n\t\t\tDescription: pulumi.String(\"99th percentile request time in millseconds\"),\n\t\t\tMetric:      pulumi.String(\"request.time\"),\n\t\t\tShortName:   pulumi.String(\"Request time\"),\n\t\t\tType:        pulumi.String(\"gauge\"),\n\t\t\tUnit:        pulumi.String(\"millisecond\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.datadog.MetricMetadata;\nimport com.pulumi.datadog.MetricMetadataArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var requestTime = new MetricMetadata(\"requestTime\", MetricMetadataArgs.builder()        \n            .description(\"99th percentile request time in millseconds\")\n            .metric(\"request.time\")\n            .shortName(\"Request time\")\n            .type(\"gauge\")\n            .unit(\"millisecond\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  # Manage a Datadog metric's metadata\n  requestTime:\n    type: datadog:MetricMetadata\n    properties:\n      description: 99th percentile request time in millseconds\n      metric: request.time\n      shortName: Request time\n      type: gauge\n      unit: millisecond\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import datadog:index/metricMetadata:MetricMetadata request_time request.time\n```\n\n ",
            "properties": {
                "description": {
                    "type": "string",
                    "description": "A description of the metric.\n"
                },
                "metric": {
                    "type": "string",
                    "description": "The name of the metric.\n"
                },
                "perUnit": {
                    "type": "string",
                    "description": "Per unit of the metric such as `second` in `bytes per second`.\n"
                },
                "shortName": {
                    "type": "string",
                    "description": "A short name of the metric.\n"
                },
                "statsdInterval": {
                    "type": "integer",
                    "description": "If applicable, statsd flush interval in seconds for the metric.\n"
                },
                "type": {
                    "type": "string",
                    "description": "Metric type such as `gauge` or `rate`.\n"
                },
                "unit": {
                    "type": "string",
                    "description": "Primary unit of the metric such as `byte` or `operation`.\n"
                }
            },
            "required": [
                "metric"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "A description of the metric.\n"
                },
                "metric": {
                    "type": "string",
                    "description": "The name of the metric.\n"
                },
                "perUnit": {
                    "type": "string",
                    "description": "Per unit of the metric such as `second` in `bytes per second`.\n"
                },
                "shortName": {
                    "type": "string",
                    "description": "A short name of the metric.\n"
                },
                "statsdInterval": {
                    "type": "integer",
                    "description": "If applicable, statsd flush interval in seconds for the metric.\n"
                },
                "type": {
                    "type": "string",
                    "description": "Metric type such as `gauge` or `rate`.\n"
                },
                "unit": {
                    "type": "string",
                    "description": "Primary unit of the metric such as `byte` or `operation`.\n"
                }
            },
            "requiredInputs": [
                "metric"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering MetricMetadata resources.\n",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "A description of the metric.\n"
                    },
                    "metric": {
                        "type": "string",
                        "description": "The name of the metric.\n"
                    },
                    "perUnit": {
                        "type": "string",
                        "description": "Per unit of the metric such as `second` in `bytes per second`.\n"
                    },
                    "shortName": {
                        "type": "string",
                        "description": "A short name of the metric.\n"
                    },
                    "statsdInterval": {
                        "type": "integer",
                        "description": "If applicable, statsd flush interval in seconds for the metric.\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "Metric type such as `gauge` or `rate`.\n"
                    },
                    "unit": {
                        "type": "string",
                        "description": "Primary unit of the metric such as `byte` or `operation`.\n"
                    }
                },
                "type": "object"
            }
        },
        "datadog:index/metricTagConfiguration:MetricTagConfiguration": {
            "description": "Provides a Datadog metric tag configuration resource. This can be used to modify tag configurations for metrics.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as datadog from \"@pulumi/datadog\";\n\n// Manage a tag configuration for a Datadog distribution metric with/without percentiles\nconst exampleDistMetric = new datadog.MetricTagConfiguration(\"exampleDistMetric\", {\n    includePercentiles: false,\n    metricName: \"example.terraform.dist.metric\",\n    metricType: \"distribution\",\n    tags: [\n        \"sport\",\n        \"datacenter\",\n    ],\n});\n// Manage tag configurations for a Datadog count or gauge metric\nconst exampleCountMetric = new datadog.MetricTagConfiguration(\"exampleCountMetric\", {\n    aggregations: [\n        {\n            space: \"min\",\n            time: \"avg\",\n        },\n        {\n            space: \"max\",\n            time: \"avg\",\n        },\n    ],\n    metricName: \"example.terraform.count.metric\",\n    metricType: \"count\",\n    tags: [\n        \"sport\",\n        \"datacenter\",\n    ],\n});\n```\n```python\nimport pulumi\nimport pulumi_datadog as datadog\n\n# Manage a tag configuration for a Datadog distribution metric with/without percentiles\nexample_dist_metric = datadog.MetricTagConfiguration(\"exampleDistMetric\",\n    include_percentiles=False,\n    metric_name=\"example.terraform.dist.metric\",\n    metric_type=\"distribution\",\n    tags=[\n        \"sport\",\n        \"datacenter\",\n    ])\n# Manage tag configurations for a Datadog count or gauge metric\nexample_count_metric = datadog.MetricTagConfiguration(\"exampleCountMetric\",\n    aggregations=[\n        datadog.MetricTagConfigurationAggregationArgs(\n            space=\"min\",\n            time=\"avg\",\n        ),\n        datadog.MetricTagConfigurationAggregationArgs(\n            space=\"max\",\n            time=\"avg\",\n        ),\n    ],\n    metric_name=\"example.terraform.count.metric\",\n    metric_type=\"count\",\n    tags=[\n        \"sport\",\n        \"datacenter\",\n    ])\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Datadog = Pulumi.Datadog;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    // Manage a tag configuration for a Datadog distribution metric with/without percentiles\n    var exampleDistMetric = new Datadog.MetricTagConfiguration(\"exampleDistMetric\", new()\n    {\n        IncludePercentiles = false,\n        MetricName = \"example.terraform.dist.metric\",\n        MetricType = \"distribution\",\n        Tags = new[]\n        {\n            \"sport\",\n            \"datacenter\",\n        },\n    });\n\n    // Manage tag configurations for a Datadog count or gauge metric\n    var exampleCountMetric = new Datadog.MetricTagConfiguration(\"exampleCountMetric\", new()\n    {\n        Aggregations = new[]\n        {\n            new Datadog.Inputs.MetricTagConfigurationAggregationArgs\n            {\n                Space = \"min\",\n                Time = \"avg\",\n            },\n            new Datadog.Inputs.MetricTagConfigurationAggregationArgs\n            {\n                Space = \"max\",\n                Time = \"avg\",\n            },\n        },\n        MetricName = \"example.terraform.count.metric\",\n        MetricType = \"count\",\n        Tags = new[]\n        {\n            \"sport\",\n            \"datacenter\",\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-datadog/sdk/v4/go/datadog\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := datadog.NewMetricTagConfiguration(ctx, \"exampleDistMetric\", \u0026datadog.MetricTagConfigurationArgs{\n\t\t\tIncludePercentiles: pulumi.Bool(false),\n\t\t\tMetricName:         pulumi.String(\"example.terraform.dist.metric\"),\n\t\t\tMetricType:         pulumi.String(\"distribution\"),\n\t\t\tTags: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"sport\"),\n\t\t\t\tpulumi.String(\"datacenter\"),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = datadog.NewMetricTagConfiguration(ctx, \"exampleCountMetric\", \u0026datadog.MetricTagConfigurationArgs{\n\t\t\tAggregations: datadog.MetricTagConfigurationAggregationArray{\n\t\t\t\t\u0026datadog.MetricTagConfigurationAggregationArgs{\n\t\t\t\t\tSpace: pulumi.String(\"min\"),\n\t\t\t\t\tTime:  pulumi.String(\"avg\"),\n\t\t\t\t},\n\t\t\t\t\u0026datadog.MetricTagConfigurationAggregationArgs{\n\t\t\t\t\tSpace: pulumi.String(\"max\"),\n\t\t\t\t\tTime:  pulumi.String(\"avg\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tMetricName: pulumi.String(\"example.terraform.count.metric\"),\n\t\t\tMetricType: pulumi.String(\"count\"),\n\t\t\tTags: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"sport\"),\n\t\t\t\tpulumi.String(\"datacenter\"),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.datadog.MetricTagConfiguration;\nimport com.pulumi.datadog.MetricTagConfigurationArgs;\nimport com.pulumi.datadog.inputs.MetricTagConfigurationAggregationArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var exampleDistMetric = new MetricTagConfiguration(\"exampleDistMetric\", MetricTagConfigurationArgs.builder()        \n            .includePercentiles(false)\n            .metricName(\"example.terraform.dist.metric\")\n            .metricType(\"distribution\")\n            .tags(            \n                \"sport\",\n                \"datacenter\")\n            .build());\n\n        var exampleCountMetric = new MetricTagConfiguration(\"exampleCountMetric\", MetricTagConfigurationArgs.builder()        \n            .aggregations(            \n                MetricTagConfigurationAggregationArgs.builder()\n                    .space(\"min\")\n                    .time(\"avg\")\n                    .build(),\n                MetricTagConfigurationAggregationArgs.builder()\n                    .space(\"max\")\n                    .time(\"avg\")\n                    .build())\n            .metricName(\"example.terraform.count.metric\")\n            .metricType(\"count\")\n            .tags(            \n                \"sport\",\n                \"datacenter\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  # Manage a tag configuration for a Datadog distribution metric with/without percentiles\n  exampleDistMetric:\n    type: datadog:MetricTagConfiguration\n    properties:\n      includePercentiles: false\n      metricName: example.terraform.dist.metric\n      metricType: distribution\n      tags:\n        - sport\n        - datacenter\n  # Manage tag configurations for a Datadog count or gauge metric\n  exampleCountMetric:\n    type: datadog:MetricTagConfiguration\n    properties:\n      aggregations:\n        - space: min\n          time: avg\n        - space: max\n          time: avg\n      metricName: example.terraform.count.metric\n      metricType: count\n      tags:\n        - sport\n        - datacenter\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import datadog:index/metricTagConfiguration:MetricTagConfiguration example_dist_metric example.terraform.dist.metric\n```\n\n ",
            "properties": {
                "aggregations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/MetricTagConfigurationAggregation:MetricTagConfigurationAggregation"
                    },
                    "description": "A list of queryable aggregation combinations for a count, rate, or gauge metric. By default, count and rate metrics require the (time: sum, space: sum) aggregation and gauge metrics require the (time: avg, space: avg) aggregation. Can only be applied to metrics that have a `metric_type` of count, rate, or gauge.\n"
                },
                "includePercentiles": {
                    "type": "boolean",
                    "description": "Toggle to include/exclude percentiles for a distribution metric. Defaults to false. Can only be applied to metrics that have a `metric_type` of distribution.\n"
                },
                "metricName": {
                    "type": "string",
                    "description": "The metric name for this resource.\n"
                },
                "metricType": {
                    "type": "string",
                    "description": "The metric's type. This field can't be updated after creation. Valid values are `gauge`, `count`, `rate`, `distribution`.\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tag keys that will be queryable for your metric.\n"
                }
            },
            "required": [
                "aggregations",
                "metricName",
                "metricType",
                "tags"
            ],
            "inputProperties": {
                "aggregations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/MetricTagConfigurationAggregation:MetricTagConfigurationAggregation"
                    },
                    "description": "A list of queryable aggregation combinations for a count, rate, or gauge metric. By default, count and rate metrics require the (time: sum, space: sum) aggregation and gauge metrics require the (time: avg, space: avg) aggregation. Can only be applied to metrics that have a `metric_type` of count, rate, or gauge.\n"
                },
                "includePercentiles": {
                    "type": "boolean",
                    "description": "Toggle to include/exclude percentiles for a distribution metric. Defaults to false. Can only be applied to metrics that have a `metric_type` of distribution.\n"
                },
                "metricName": {
                    "type": "string",
                    "description": "The metric name for this resource.\n",
                    "willReplaceOnChanges": true
                },
                "metricType": {
                    "type": "string",
                    "description": "The metric's type. This field can't be updated after creation. Valid values are `gauge`, `count`, `rate`, `distribution`.\n",
                    "willReplaceOnChanges": true
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tag keys that will be queryable for your metric.\n"
                }
            },
            "requiredInputs": [
                "metricName",
                "metricType",
                "tags"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering MetricTagConfiguration resources.\n",
                "properties": {
                    "aggregations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/datadog:index/MetricTagConfigurationAggregation:MetricTagConfigurationAggregation"
                        },
                        "description": "A list of queryable aggregation combinations for a count, rate, or gauge metric. By default, count and rate metrics require the (time: sum, space: sum) aggregation and gauge metrics require the (time: avg, space: avg) aggregation. Can only be applied to metrics that have a `metric_type` of count, rate, or gauge.\n"
                    },
                    "includePercentiles": {
                        "type": "boolean",
                        "description": "Toggle to include/exclude percentiles for a distribution metric. Defaults to false. Can only be applied to metrics that have a `metric_type` of distribution.\n"
                    },
                    "metricName": {
                        "type": "string",
                        "description": "The metric name for this resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "metricType": {
                        "type": "string",
                        "description": "The metric's type. This field can't be updated after creation. Valid values are `gauge`, `count`, `rate`, `distribution`.\n",
                        "willReplaceOnChanges": true
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of tag keys that will be queryable for your metric.\n"
                    }
                },
                "type": "object"
            }
        },
        "datadog:index/monitor:Monitor": {
            "description": "Provides a Datadog monitor resource. This can be used to create and manage Datadog monitors.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as datadog from \"@pulumi/datadog\";\n\nconst foo = new datadog.Monitor(\"foo\", {\n    escalationMessage: \"Escalation message @pagerduty\",\n    includeTags: true,\n    message: \"Monitor triggered. Notify: @hipchat-channel\",\n    monitorThresholds: {\n        critical: \"4\",\n        warning: \"2\",\n    },\n    name: \"Name for monitor foo\",\n    query: \"avg(last_1h):avg:aws.ec2.cpu{environment:foo,host:foo} by {host} \u003e 4\",\n    tags: [\n        \"foo:bar\",\n        \"team:fooBar\",\n    ],\n    type: \"metric alert\",\n});\n```\n```python\nimport pulumi\nimport pulumi_datadog as datadog\n\nfoo = datadog.Monitor(\"foo\",\n    escalation_message=\"Escalation message @pagerduty\",\n    include_tags=True,\n    message=\"Monitor triggered. Notify: @hipchat-channel\",\n    monitor_thresholds=datadog.MonitorMonitorThresholdsArgs(\n        critical=\"4\",\n        warning=\"2\",\n    ),\n    name=\"Name for monitor foo\",\n    query=\"avg(last_1h):avg:aws.ec2.cpu{environment:foo,host:foo} by {host} \u003e 4\",\n    tags=[\n        \"foo:bar\",\n        \"team:fooBar\",\n    ],\n    type=\"metric alert\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Datadog = Pulumi.Datadog;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var foo = new Datadog.Monitor(\"foo\", new()\n    {\n        EscalationMessage = \"Escalation message @pagerduty\",\n        IncludeTags = true,\n        Message = \"Monitor triggered. Notify: @hipchat-channel\",\n        MonitorThresholds = new Datadog.Inputs.MonitorMonitorThresholdsArgs\n        {\n            Critical = \"4\",\n            Warning = \"2\",\n        },\n        Name = \"Name for monitor foo\",\n        Query = \"avg(last_1h):avg:aws.ec2.cpu{environment:foo,host:foo} by {host} \u003e 4\",\n        Tags = new[]\n        {\n            \"foo:bar\",\n            \"team:fooBar\",\n        },\n        Type = \"metric alert\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-datadog/sdk/v4/go/datadog\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := datadog.NewMonitor(ctx, \"foo\", \u0026datadog.MonitorArgs{\n\t\t\tEscalationMessage: pulumi.String(\"Escalation message @pagerduty\"),\n\t\t\tIncludeTags:       pulumi.Bool(true),\n\t\t\tMessage:           pulumi.String(\"Monitor triggered. Notify: @hipchat-channel\"),\n\t\t\tMonitorThresholds: \u0026datadog.MonitorMonitorThresholdsArgs{\n\t\t\t\tCritical: pulumi.String(\"4\"),\n\t\t\t\tWarning:  pulumi.String(\"2\"),\n\t\t\t},\n\t\t\tName:  pulumi.String(\"Name for monitor foo\"),\n\t\t\tQuery: pulumi.String(\"avg(last_1h):avg:aws.ec2.cpu{environment:foo,host:foo} by {host} \u003e 4\"),\n\t\t\tTags: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"foo:bar\"),\n\t\t\t\tpulumi.String(\"team:fooBar\"),\n\t\t\t},\n\t\t\tType: pulumi.String(\"metric alert\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.datadog.Monitor;\nimport com.pulumi.datadog.MonitorArgs;\nimport com.pulumi.datadog.inputs.MonitorMonitorThresholdsArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var foo = new Monitor(\"foo\", MonitorArgs.builder()        \n            .escalationMessage(\"Escalation message @pagerduty\")\n            .includeTags(true)\n            .message(\"Monitor triggered. Notify: @hipchat-channel\")\n            .monitorThresholds(MonitorMonitorThresholdsArgs.builder()\n                .critical(4)\n                .warning(2)\n                .build())\n            .name(\"Name for monitor foo\")\n            .query(\"avg(last_1h):avg:aws.ec2.cpu{environment:foo,host:foo} by {host} \u003e 4\")\n            .tags(            \n                \"foo:bar\",\n                \"team:fooBar\")\n            .type(\"metric alert\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  foo:\n    type: datadog:Monitor\n    properties:\n      escalationMessage: Escalation message @pagerduty\n      includeTags: true\n      message: 'Monitor triggered. Notify: @hipchat-channel'\n      monitorThresholds:\n        critical: 4\n        warning: 2\n      name: Name for monitor foo\n      query: avg(last_1h):avg:aws.ec2.cpu{environment:foo,host:foo} by {host} \u003e 4\n      tags:\n        - foo:bar\n        - team:fooBar\n      type: metric alert\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import datadog:index/monitor:Monitor bytes_received_localhost 2081\n```\n\n ",
            "properties": {
                "enableLogsSample": {
                    "type": "boolean",
                    "description": "A boolean indicating whether or not to include a list of log values which triggered the alert. This is only used by log\nmonitors. Defaults to `false`.\n"
                },
                "enableSamples": {
                    "type": "boolean",
                    "description": "Whether or not a list of samples which triggered the alert is included. This is only used by CI Test and Pipeline\nmonitors.\n"
                },
                "escalationMessage": {
                    "type": "string",
                    "description": "A message to include with a re-notification. Supports the `@username` notification allowed elsewhere.\n"
                },
                "evaluationDelay": {
                    "type": "integer",
                    "description": "(Only applies to metric alert) Time (in seconds) to delay evaluation, as a non-negative integer. For example, if the\nvalue is set to `300` (5min), the `timeframe` is set to `last_5m` and the time is 7:00, the monitor will evaluate data\nfrom 6:50 to 6:55. This is useful for AWS CloudWatch and other backfilled metrics to ensure the monitor will always have\ndata during evaluation.\n"
                },
                "forceDelete": {
                    "type": "boolean",
                    "description": "A boolean indicating whether this monitor can be deleted even if it’s referenced by other resources (e.g. SLO,\ncomposite monitor).\n"
                },
                "groupRetentionDuration": {
                    "type": "string",
                    "description": "The time span after which groups with missing data are dropped from the monitor state. The minimum value is one hour,\nand the maximum value is 72 hours. Example values are: 60m, 1h, and 2d. This option is only available for APM Trace\nAnalytics, Audit Trail, CI, Error Tracking, Event, Logs, and RUM monitors.\n"
                },
                "groupbySimpleMonitor": {
                    "type": "boolean",
                    "description": "Whether or not to trigger one alert if any source breaches a threshold. This is only used by log monitors. Defaults to\n`false`.\n"
                },
                "includeTags": {
                    "type": "boolean",
                    "description": "A boolean indicating whether notifications from this monitor automatically insert its triggering tags into the title.\nDefaults to `true`.\n"
                },
                "locked": {
                    "type": "boolean",
                    "description": "A boolean indicating whether changes to this monitor should be restricted to the creator or admins. Defaults to `false`.\n",
                    "deprecationMessage": "Use `restricted_roles`."
                },
                "message": {
                    "type": "string",
                    "description": "A message to include with notifications for this monitor.\n"
                },
                "monitorThresholdWindows": {
                    "$ref": "#/types/datadog:index/MonitorMonitorThresholdWindows:MonitorMonitorThresholdWindows",
                    "description": "A mapping containing `recovery_window` and `trigger_window` values, e.g. `last_15m` . Can only be used for, and are\nrequired for, anomaly monitors.\n"
                },
                "monitorThresholds": {
                    "$ref": "#/types/datadog:index/MonitorMonitorThresholds:MonitorMonitorThresholds",
                    "description": "Alert thresholds of the monitor.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of Datadog monitor.\n"
                },
                "newGroupDelay": {
                    "type": "integer",
                    "description": "The time (in seconds) to skip evaluations for new groups. `new_group_delay` overrides `new_host_delay` if it is set to a\nnonzero value.\n"
                },
                "newHostDelay": {
                    "type": "integer",
                    "description": "**Deprecated**. See `new_group_delay`. Time (in seconds) to allow a host to boot and applications to fully start before\nstarting the evaluation of monitor results. Should be a non-negative integer. This value is ignored for simple monitors\nand monitors not grouped by host. Defaults to `300`. The only case when this should be used is to override the default\nand set `new_host_delay` to zero for monitors grouped by host.\n",
                    "deprecationMessage": "Use `new_group_delay` except when setting `new_host_delay` to zero."
                },
                "noDataTimeframe": {
                    "type": "integer",
                    "description": "The number of minutes before a monitor will notify when data stops reporting. Provider defaults to 10 minutes. We\nrecommend at least 2x the monitor timeframe for metric alerts or 2 minutes for service checks.\n"
                },
                "notificationPresetName": {
                    "type": "string",
                    "description": "Toggles the display of additional content sent in the monitor notification.\n"
                },
                "notifyAudit": {
                    "type": "boolean",
                    "description": "A boolean indicating whether tagged users will be notified on changes to this monitor. Defaults to `false`.\n"
                },
                "notifyBies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Controls what granularity a monitor alerts on. Only available for monitors with groupings. For instance, a monitor\ngrouped by `cluster`, `namespace`, and `pod` can be configured to only notify on each new `cluster` violating the alert\nconditions by setting `notify_by` to `['cluster']`. Tags mentioned in `notify_by` must be a subset of the grouping tags\nin the query. For example, a query grouped by `cluster` and `namespace` cannot notify on `region`. Setting `notify_by`\nto `[*]` configures the monitor to notify as a simple-alert.\n"
                },
                "notifyNoData": {
                    "type": "boolean",
                    "description": "A boolean indicating whether this monitor will notify when data stops reporting. Defaults to `false`.\n"
                },
                "onMissingData": {
                    "type": "string",
                    "description": "Controls how groups or monitors are treated if an evaluation does not return any data points. The default option results\nin different behavior depending on the monitor query type. For monitors using `Count` queries, an empty monitor\nevaluation is treated as 0 and is compared to the threshold conditions. For monitors using any query type other than\n`Count`, for example `Gauge`, `Measure`, or `Rate`, the monitor shows the last known status. This option is only\navailable for APM Trace Analytics, Audit Trail, CI, Error Tracking, Event, Logs, and RUM monitors. Valid values are:\n`show_no_data`, `show_and_notify_no_data`, `resolve`, and `default`.\n"
                },
                "priority": {
                    "type": "integer",
                    "description": "Integer from 1 (high) to 5 (low) indicating alert severity.\n"
                },
                "query": {
                    "type": "string",
                    "description": "The monitor query to notify on. Note this is not the same query you see in the UI and the syntax is different depending\non the monitor type, please see the [API Reference](https://docs.datadoghq.com/api/v1/monitors/#create-a-monitor) for\ndetails. `terraform plan` will validate query contents unless `validate` is set to `false`. **Note:** APM latency data\nis now available as Distribution Metrics. Existing monitors have been migrated automatically but all terraformed\nmonitors can still use the existing metrics. We strongly recommend updating monitor definitions to query the new\nmetrics. To learn more, or to see examples of how to update your terraform definitions to utilize the new distribution\nmetrics, see the [detailed doc](https://docs.datadoghq.com/tracing/guide/ddsketch_trace_metrics/).\n"
                },
                "renotifyInterval": {
                    "type": "integer",
                    "description": "The number of minutes after the last notification before a monitor will re-notify on the current status. It will only\nre-notify if it's not resolved.\n"
                },
                "renotifyOccurrences": {
                    "type": "integer",
                    "description": "The number of re-notification messages that should be sent on the current status.\n"
                },
                "renotifyStatuses": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The types of statuses for which re-notification messages should be sent.\n"
                },
                "requireFullWindow": {
                    "type": "boolean",
                    "description": "A boolean indicating whether this monitor needs a full window of data before it's evaluated. We highly recommend you set\nthis to `false` for sparse metrics, otherwise some evaluations will be skipped. Default: `true` for `on average`, `at\nall times` and `in total` aggregation. `false` otherwise.\n"
                },
                "restrictedRoles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of unique role identifiers to define which roles are allowed to edit the monitor. Editing a monitor includes any\nupdates to the monitor configuration, monitor deletion, and muting of the monitor for any amount of time. Roles unique\nidentifiers can be pulled from the [Roles API](https://docs.datadoghq.com/api/latest/roles/#list-roles) in the `data.id`\nfield.\n"
                },
                "schedulingOptions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/MonitorSchedulingOption:MonitorSchedulingOption"
                    },
                    "description": "Configuration options for scheduling.\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tags to associate with your monitor. This can help you categorize and filter monitors in the manage monitors\npage of the UI. Note: it's not currently possible to filter by these tags when querying via the API\n"
                },
                "timeoutH": {
                    "type": "integer",
                    "description": "The number of hours of the monitor not reporting data before it automatically resolves from a triggered state. The\nminimum allowed value is 0 hours. The maximum allowed value is 24 hours.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The type of the monitor. The mapping from these types to the types found in the Datadog Web UI can be found in the\nDatadog API [documentation page](https://docs.datadoghq.com/api/v1/monitors/#create-a-monitor). Note: The monitor type\ncannot be changed after a monitor is created.\n"
                },
                "validate": {
                    "type": "boolean",
                    "description": "If set to `false`, skip the validation call done during plan.\n"
                },
                "variables": {
                    "$ref": "#/types/datadog:index/MonitorVariables:MonitorVariables"
                }
            },
            "required": [
                "enableSamples",
                "evaluationDelay",
                "message",
                "name",
                "query",
                "type"
            ],
            "inputProperties": {
                "enableLogsSample": {
                    "type": "boolean",
                    "description": "A boolean indicating whether or not to include a list of log values which triggered the alert. This is only used by log\nmonitors. Defaults to `false`.\n"
                },
                "escalationMessage": {
                    "type": "string",
                    "description": "A message to include with a re-notification. Supports the `@username` notification allowed elsewhere.\n"
                },
                "evaluationDelay": {
                    "type": "integer",
                    "description": "(Only applies to metric alert) Time (in seconds) to delay evaluation, as a non-negative integer. For example, if the\nvalue is set to `300` (5min), the `timeframe` is set to `last_5m` and the time is 7:00, the monitor will evaluate data\nfrom 6:50 to 6:55. This is useful for AWS CloudWatch and other backfilled metrics to ensure the monitor will always have\ndata during evaluation.\n"
                },
                "forceDelete": {
                    "type": "boolean",
                    "description": "A boolean indicating whether this monitor can be deleted even if it’s referenced by other resources (e.g. SLO,\ncomposite monitor).\n"
                },
                "groupRetentionDuration": {
                    "type": "string",
                    "description": "The time span after which groups with missing data are dropped from the monitor state. The minimum value is one hour,\nand the maximum value is 72 hours. Example values are: 60m, 1h, and 2d. This option is only available for APM Trace\nAnalytics, Audit Trail, CI, Error Tracking, Event, Logs, and RUM monitors.\n"
                },
                "groupbySimpleMonitor": {
                    "type": "boolean",
                    "description": "Whether or not to trigger one alert if any source breaches a threshold. This is only used by log monitors. Defaults to\n`false`.\n"
                },
                "includeTags": {
                    "type": "boolean",
                    "description": "A boolean indicating whether notifications from this monitor automatically insert its triggering tags into the title.\nDefaults to `true`.\n"
                },
                "locked": {
                    "type": "boolean",
                    "description": "A boolean indicating whether changes to this monitor should be restricted to the creator or admins. Defaults to `false`.\n",
                    "deprecationMessage": "Use `restricted_roles`."
                },
                "message": {
                    "type": "string",
                    "description": "A message to include with notifications for this monitor.\n"
                },
                "monitorThresholdWindows": {
                    "$ref": "#/types/datadog:index/MonitorMonitorThresholdWindows:MonitorMonitorThresholdWindows",
                    "description": "A mapping containing `recovery_window` and `trigger_window` values, e.g. `last_15m` . Can only be used for, and are\nrequired for, anomaly monitors.\n"
                },
                "monitorThresholds": {
                    "$ref": "#/types/datadog:index/MonitorMonitorThresholds:MonitorMonitorThresholds",
                    "description": "Alert thresholds of the monitor.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of Datadog monitor.\n"
                },
                "newGroupDelay": {
                    "type": "integer",
                    "description": "The time (in seconds) to skip evaluations for new groups. `new_group_delay` overrides `new_host_delay` if it is set to a\nnonzero value.\n"
                },
                "newHostDelay": {
                    "type": "integer",
                    "description": "**Deprecated**. See `new_group_delay`. Time (in seconds) to allow a host to boot and applications to fully start before\nstarting the evaluation of monitor results. Should be a non-negative integer. This value is ignored for simple monitors\nand monitors not grouped by host. Defaults to `300`. The only case when this should be used is to override the default\nand set `new_host_delay` to zero for monitors grouped by host.\n",
                    "deprecationMessage": "Use `new_group_delay` except when setting `new_host_delay` to zero."
                },
                "noDataTimeframe": {
                    "type": "integer",
                    "description": "The number of minutes before a monitor will notify when data stops reporting. Provider defaults to 10 minutes. We\nrecommend at least 2x the monitor timeframe for metric alerts or 2 minutes for service checks.\n"
                },
                "notificationPresetName": {
                    "type": "string",
                    "description": "Toggles the display of additional content sent in the monitor notification.\n"
                },
                "notifyAudit": {
                    "type": "boolean",
                    "description": "A boolean indicating whether tagged users will be notified on changes to this monitor. Defaults to `false`.\n"
                },
                "notifyBies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Controls what granularity a monitor alerts on. Only available for monitors with groupings. For instance, a monitor\ngrouped by `cluster`, `namespace`, and `pod` can be configured to only notify on each new `cluster` violating the alert\nconditions by setting `notify_by` to `['cluster']`. Tags mentioned in `notify_by` must be a subset of the grouping tags\nin the query. For example, a query grouped by `cluster` and `namespace` cannot notify on `region`. Setting `notify_by`\nto `[*]` configures the monitor to notify as a simple-alert.\n"
                },
                "notifyNoData": {
                    "type": "boolean",
                    "description": "A boolean indicating whether this monitor will notify when data stops reporting. Defaults to `false`.\n"
                },
                "onMissingData": {
                    "type": "string",
                    "description": "Controls how groups or monitors are treated if an evaluation does not return any data points. The default option results\nin different behavior depending on the monitor query type. For monitors using `Count` queries, an empty monitor\nevaluation is treated as 0 and is compared to the threshold conditions. For monitors using any query type other than\n`Count`, for example `Gauge`, `Measure`, or `Rate`, the monitor shows the last known status. This option is only\navailable for APM Trace Analytics, Audit Trail, CI, Error Tracking, Event, Logs, and RUM monitors. Valid values are:\n`show_no_data`, `show_and_notify_no_data`, `resolve`, and `default`.\n"
                },
                "priority": {
                    "type": "integer",
                    "description": "Integer from 1 (high) to 5 (low) indicating alert severity.\n"
                },
                "query": {
                    "type": "string",
                    "description": "The monitor query to notify on. Note this is not the same query you see in the UI and the syntax is different depending\non the monitor type, please see the [API Reference](https://docs.datadoghq.com/api/v1/monitors/#create-a-monitor) for\ndetails. `terraform plan` will validate query contents unless `validate` is set to `false`. **Note:** APM latency data\nis now available as Distribution Metrics. Existing monitors have been migrated automatically but all terraformed\nmonitors can still use the existing metrics. We strongly recommend updating monitor definitions to query the new\nmetrics. To learn more, or to see examples of how to update your terraform definitions to utilize the new distribution\nmetrics, see the [detailed doc](https://docs.datadoghq.com/tracing/guide/ddsketch_trace_metrics/).\n"
                },
                "renotifyInterval": {
                    "type": "integer",
                    "description": "The number of minutes after the last notification before a monitor will re-notify on the current status. It will only\nre-notify if it's not resolved.\n"
                },
                "renotifyOccurrences": {
                    "type": "integer",
                    "description": "The number of re-notification messages that should be sent on the current status.\n"
                },
                "renotifyStatuses": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The types of statuses for which re-notification messages should be sent.\n"
                },
                "requireFullWindow": {
                    "type": "boolean",
                    "description": "A boolean indicating whether this monitor needs a full window of data before it's evaluated. We highly recommend you set\nthis to `false` for sparse metrics, otherwise some evaluations will be skipped. Default: `true` for `on average`, `at\nall times` and `in total` aggregation. `false` otherwise.\n"
                },
                "restrictedRoles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of unique role identifiers to define which roles are allowed to edit the monitor. Editing a monitor includes any\nupdates to the monitor configuration, monitor deletion, and muting of the monitor for any amount of time. Roles unique\nidentifiers can be pulled from the [Roles API](https://docs.datadoghq.com/api/latest/roles/#list-roles) in the `data.id`\nfield.\n"
                },
                "schedulingOptions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/MonitorSchedulingOption:MonitorSchedulingOption"
                    },
                    "description": "Configuration options for scheduling.\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tags to associate with your monitor. This can help you categorize and filter monitors in the manage monitors\npage of the UI. Note: it's not currently possible to filter by these tags when querying via the API\n"
                },
                "timeoutH": {
                    "type": "integer",
                    "description": "The number of hours of the monitor not reporting data before it automatically resolves from a triggered state. The\nminimum allowed value is 0 hours. The maximum allowed value is 24 hours.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The type of the monitor. The mapping from these types to the types found in the Datadog Web UI can be found in the\nDatadog API [documentation page](https://docs.datadoghq.com/api/v1/monitors/#create-a-monitor). Note: The monitor type\ncannot be changed after a monitor is created.\n",
                    "willReplaceOnChanges": true
                },
                "validate": {
                    "type": "boolean",
                    "description": "If set to `false`, skip the validation call done during plan.\n"
                },
                "variables": {
                    "$ref": "#/types/datadog:index/MonitorVariables:MonitorVariables"
                }
            },
            "requiredInputs": [
                "message",
                "name",
                "query",
                "type"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Monitor resources.\n",
                "properties": {
                    "enableLogsSample": {
                        "type": "boolean",
                        "description": "A boolean indicating whether or not to include a list of log values which triggered the alert. This is only used by log\nmonitors. Defaults to `false`.\n"
                    },
                    "enableSamples": {
                        "type": "boolean",
                        "description": "Whether or not a list of samples which triggered the alert is included. This is only used by CI Test and Pipeline\nmonitors.\n"
                    },
                    "escalationMessage": {
                        "type": "string",
                        "description": "A message to include with a re-notification. Supports the `@username` notification allowed elsewhere.\n"
                    },
                    "evaluationDelay": {
                        "type": "integer",
                        "description": "(Only applies to metric alert) Time (in seconds) to delay evaluation, as a non-negative integer. For example, if the\nvalue is set to `300` (5min), the `timeframe` is set to `last_5m` and the time is 7:00, the monitor will evaluate data\nfrom 6:50 to 6:55. This is useful for AWS CloudWatch and other backfilled metrics to ensure the monitor will always have\ndata during evaluation.\n"
                    },
                    "forceDelete": {
                        "type": "boolean",
                        "description": "A boolean indicating whether this monitor can be deleted even if it’s referenced by other resources (e.g. SLO,\ncomposite monitor).\n"
                    },
                    "groupRetentionDuration": {
                        "type": "string",
                        "description": "The time span after which groups with missing data are dropped from the monitor state. The minimum value is one hour,\nand the maximum value is 72 hours. Example values are: 60m, 1h, and 2d. This option is only available for APM Trace\nAnalytics, Audit Trail, CI, Error Tracking, Event, Logs, and RUM monitors.\n"
                    },
                    "groupbySimpleMonitor": {
                        "type": "boolean",
                        "description": "Whether or not to trigger one alert if any source breaches a threshold. This is only used by log monitors. Defaults to\n`false`.\n"
                    },
                    "includeTags": {
                        "type": "boolean",
                        "description": "A boolean indicating whether notifications from this monitor automatically insert its triggering tags into the title.\nDefaults to `true`.\n"
                    },
                    "locked": {
                        "type": "boolean",
                        "description": "A boolean indicating whether changes to this monitor should be restricted to the creator or admins. Defaults to `false`.\n",
                        "deprecationMessage": "Use `restricted_roles`."
                    },
                    "message": {
                        "type": "string",
                        "description": "A message to include with notifications for this monitor.\n"
                    },
                    "monitorThresholdWindows": {
                        "$ref": "#/types/datadog:index/MonitorMonitorThresholdWindows:MonitorMonitorThresholdWindows",
                        "description": "A mapping containing `recovery_window` and `trigger_window` values, e.g. `last_15m` . Can only be used for, and are\nrequired for, anomaly monitors.\n"
                    },
                    "monitorThresholds": {
                        "$ref": "#/types/datadog:index/MonitorMonitorThresholds:MonitorMonitorThresholds",
                        "description": "Alert thresholds of the monitor.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of Datadog monitor.\n"
                    },
                    "newGroupDelay": {
                        "type": "integer",
                        "description": "The time (in seconds) to skip evaluations for new groups. `new_group_delay` overrides `new_host_delay` if it is set to a\nnonzero value.\n"
                    },
                    "newHostDelay": {
                        "type": "integer",
                        "description": "**Deprecated**. See `new_group_delay`. Time (in seconds) to allow a host to boot and applications to fully start before\nstarting the evaluation of monitor results. Should be a non-negative integer. This value is ignored for simple monitors\nand monitors not grouped by host. Defaults to `300`. The only case when this should be used is to override the default\nand set `new_host_delay` to zero for monitors grouped by host.\n",
                        "deprecationMessage": "Use `new_group_delay` except when setting `new_host_delay` to zero."
                    },
                    "noDataTimeframe": {
                        "type": "integer",
                        "description": "The number of minutes before a monitor will notify when data stops reporting. Provider defaults to 10 minutes. We\nrecommend at least 2x the monitor timeframe for metric alerts or 2 minutes for service checks.\n"
                    },
                    "notificationPresetName": {
                        "type": "string",
                        "description": "Toggles the display of additional content sent in the monitor notification.\n"
                    },
                    "notifyAudit": {
                        "type": "boolean",
                        "description": "A boolean indicating whether tagged users will be notified on changes to this monitor. Defaults to `false`.\n"
                    },
                    "notifyBies": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Controls what granularity a monitor alerts on. Only available for monitors with groupings. For instance, a monitor\ngrouped by `cluster`, `namespace`, and `pod` can be configured to only notify on each new `cluster` violating the alert\nconditions by setting `notify_by` to `['cluster']`. Tags mentioned in `notify_by` must be a subset of the grouping tags\nin the query. For example, a query grouped by `cluster` and `namespace` cannot notify on `region`. Setting `notify_by`\nto `[*]` configures the monitor to notify as a simple-alert.\n"
                    },
                    "notifyNoData": {
                        "type": "boolean",
                        "description": "A boolean indicating whether this monitor will notify when data stops reporting. Defaults to `false`.\n"
                    },
                    "onMissingData": {
                        "type": "string",
                        "description": "Controls how groups or monitors are treated if an evaluation does not return any data points. The default option results\nin different behavior depending on the monitor query type. For monitors using `Count` queries, an empty monitor\nevaluation is treated as 0 and is compared to the threshold conditions. For monitors using any query type other than\n`Count`, for example `Gauge`, `Measure`, or `Rate`, the monitor shows the last known status. This option is only\navailable for APM Trace Analytics, Audit Trail, CI, Error Tracking, Event, Logs, and RUM monitors. Valid values are:\n`show_no_data`, `show_and_notify_no_data`, `resolve`, and `default`.\n"
                    },
                    "priority": {
                        "type": "integer",
                        "description": "Integer from 1 (high) to 5 (low) indicating alert severity.\n"
                    },
                    "query": {
                        "type": "string",
                        "description": "The monitor query to notify on. Note this is not the same query you see in the UI and the syntax is different depending\non the monitor type, please see the [API Reference](https://docs.datadoghq.com/api/v1/monitors/#create-a-monitor) for\ndetails. `terraform plan` will validate query contents unless `validate` is set to `false`. **Note:** APM latency data\nis now available as Distribution Metrics. Existing monitors have been migrated automatically but all terraformed\nmonitors can still use the existing metrics. We strongly recommend updating monitor definitions to query the new\nmetrics. To learn more, or to see examples of how to update your terraform definitions to utilize the new distribution\nmetrics, see the [detailed doc](https://docs.datadoghq.com/tracing/guide/ddsketch_trace_metrics/).\n"
                    },
                    "renotifyInterval": {
                        "type": "integer",
                        "description": "The number of minutes after the last notification before a monitor will re-notify on the current status. It will only\nre-notify if it's not resolved.\n"
                    },
                    "renotifyOccurrences": {
                        "type": "integer",
                        "description": "The number of re-notification messages that should be sent on the current status.\n"
                    },
                    "renotifyStatuses": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The types of statuses for which re-notification messages should be sent.\n"
                    },
                    "requireFullWindow": {
                        "type": "boolean",
                        "description": "A boolean indicating whether this monitor needs a full window of data before it's evaluated. We highly recommend you set\nthis to `false` for sparse metrics, otherwise some evaluations will be skipped. Default: `true` for `on average`, `at\nall times` and `in total` aggregation. `false` otherwise.\n"
                    },
                    "restrictedRoles": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of unique role identifiers to define which roles are allowed to edit the monitor. Editing a monitor includes any\nupdates to the monitor configuration, monitor deletion, and muting of the monitor for any amount of time. Roles unique\nidentifiers can be pulled from the [Roles API](https://docs.datadoghq.com/api/latest/roles/#list-roles) in the `data.id`\nfield.\n"
                    },
                    "schedulingOptions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/datadog:index/MonitorSchedulingOption:MonitorSchedulingOption"
                        },
                        "description": "Configuration options for scheduling.\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of tags to associate with your monitor. This can help you categorize and filter monitors in the manage monitors\npage of the UI. Note: it's not currently possible to filter by these tags when querying via the API\n"
                    },
                    "timeoutH": {
                        "type": "integer",
                        "description": "The number of hours of the monitor not reporting data before it automatically resolves from a triggered state. The\nminimum allowed value is 0 hours. The maximum allowed value is 24 hours.\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "The type of the monitor. The mapping from these types to the types found in the Datadog Web UI can be found in the\nDatadog API [documentation page](https://docs.datadoghq.com/api/v1/monitors/#create-a-monitor). Note: The monitor type\ncannot be changed after a monitor is created.\n",
                        "willReplaceOnChanges": true
                    },
                    "validate": {
                        "type": "boolean",
                        "description": "If set to `false`, skip the validation call done during plan.\n"
                    },
                    "variables": {
                        "$ref": "#/types/datadog:index/MonitorVariables:MonitorVariables"
                    }
                },
                "type": "object"
            }
        },
        "datadog:index/monitorConfigPolicy:MonitorConfigPolicy": {
            "description": "Provides a Datadog monitor config policy resource. This can be used to create and manage Datadog monitor config policies.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as datadog from \"@pulumi/datadog\";\n\nconst test = new datadog.MonitorConfigPolicy(\"test\", {\n    policyType: \"tag\",\n    tagPolicy: {\n        tagKey: \"env\",\n        tagKeyRequired: false,\n        validTagValues: [\n            \"staging\",\n            \"prod\",\n        ],\n    },\n});\n```\n```python\nimport pulumi\nimport pulumi_datadog as datadog\n\ntest = datadog.MonitorConfigPolicy(\"test\",\n    policy_type=\"tag\",\n    tag_policy=datadog.MonitorConfigPolicyTagPolicyArgs(\n        tag_key=\"env\",\n        tag_key_required=False,\n        valid_tag_values=[\n            \"staging\",\n            \"prod\",\n        ],\n    ))\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Datadog = Pulumi.Datadog;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var test = new Datadog.MonitorConfigPolicy(\"test\", new()\n    {\n        PolicyType = \"tag\",\n        TagPolicy = new Datadog.Inputs.MonitorConfigPolicyTagPolicyArgs\n        {\n            TagKey = \"env\",\n            TagKeyRequired = false,\n            ValidTagValues = new[]\n            {\n                \"staging\",\n                \"prod\",\n            },\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-datadog/sdk/v4/go/datadog\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := datadog.NewMonitorConfigPolicy(ctx, \"test\", \u0026datadog.MonitorConfigPolicyArgs{\n\t\t\tPolicyType: pulumi.String(\"tag\"),\n\t\t\tTagPolicy: \u0026datadog.MonitorConfigPolicyTagPolicyArgs{\n\t\t\t\tTagKey:         pulumi.String(\"env\"),\n\t\t\t\tTagKeyRequired: pulumi.Bool(false),\n\t\t\t\tValidTagValues: pulumi.StringArray{\n\t\t\t\t\tpulumi.String(\"staging\"),\n\t\t\t\t\tpulumi.String(\"prod\"),\n\t\t\t\t},\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.datadog.MonitorConfigPolicy;\nimport com.pulumi.datadog.MonitorConfigPolicyArgs;\nimport com.pulumi.datadog.inputs.MonitorConfigPolicyTagPolicyArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var test = new MonitorConfigPolicy(\"test\", MonitorConfigPolicyArgs.builder()        \n            .policyType(\"tag\")\n            .tagPolicy(MonitorConfigPolicyTagPolicyArgs.builder()\n                .tagKey(\"env\")\n                .tagKeyRequired(false)\n                .validTagValues(                \n                    \"staging\",\n                    \"prod\")\n                .build())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  test:\n    type: datadog:MonitorConfigPolicy\n    properties:\n      policyType: tag\n      tagPolicy:\n        tagKey: env\n        tagKeyRequired: false\n        validTagValues:\n          - staging\n          - prod\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "policyType": {
                    "type": "string",
                    "description": "The monitor config policy type Valid values are `tag`.\n"
                },
                "tagPolicy": {
                    "$ref": "#/types/datadog:index/MonitorConfigPolicyTagPolicy:MonitorConfigPolicyTagPolicy",
                    "description": "Config for a tag policy. Only set if `policy_type` is `tag`.\n"
                }
            },
            "required": [
                "policyType"
            ],
            "inputProperties": {
                "policyType": {
                    "type": "string",
                    "description": "The monitor config policy type Valid values are `tag`.\n"
                },
                "tagPolicy": {
                    "$ref": "#/types/datadog:index/MonitorConfigPolicyTagPolicy:MonitorConfigPolicyTagPolicy",
                    "description": "Config for a tag policy. Only set if `policy_type` is `tag`.\n"
                }
            },
            "requiredInputs": [
                "policyType"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering MonitorConfigPolicy resources.\n",
                "properties": {
                    "policyType": {
                        "type": "string",
                        "description": "The monitor config policy type Valid values are `tag`.\n"
                    },
                    "tagPolicy": {
                        "$ref": "#/types/datadog:index/MonitorConfigPolicyTagPolicy:MonitorConfigPolicyTagPolicy",
                        "description": "Config for a tag policy. Only set if `policy_type` is `tag`.\n"
                    }
                },
                "type": "object"
            }
        },
        "datadog:index/monitorJson:MonitorJson": {
            "description": "Provides a Datadog monitor JSON resource. This can be used to create and manage Datadog monitors using the JSON definition.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as datadog from \"@pulumi/datadog\";\n\nconst monitorJson = new datadog.MonitorJson(\"monitorJson\", {monitor: `{\n    \"name\": \"Example monitor - service check\",\n    \"type\": \"service check\",\n    \"query\": \"\\\\\"ntp.in_sync\\\\\".by(\\\\\"*\\\\\").last(2).count_by_status()\",\n    \"message\": \"Change the message triggers if any host's clock goes out of sync with the time given by NTP. The offset threshold is configured in the Agent's 'ntp.yaml' file.\\\\n\\\\nSee [Troubleshooting NTP Offset issues](https://docs.datadoghq.com/agent/troubleshooting/ntp for more details on cause and resolution.\",\n    \"tags\": [],\n    \"multi\": true,\n\t\"restricted_roles\": null,\n    \"options\": {\n        \"include_tags\": true,\n        \"locked\": false,\n        \"new_host_delay\": 150,\n        \"notify_audit\": false,\n        \"notify_no_data\": false,\n        \"thresholds\": {\n            \"warning\": 1,\n            \"ok\": 1,\n            \"critical\": 1\n        }\n    },\n    \"priority\": null,\n    \"classification\": \"custom\"\n}\n`});\n```\n```python\nimport pulumi\nimport pulumi_datadog as datadog\n\nmonitor_json = datadog.MonitorJson(\"monitorJson\", monitor=\"\"\"{\n    \"name\": \"Example monitor - service check\",\n    \"type\": \"service check\",\n    \"query\": \"\\\"ntp.in_sync\\\".by(\\\"*\\\").last(2).count_by_status()\",\n    \"message\": \"Change the message triggers if any host's clock goes out of sync with the time given by NTP. The offset threshold is configured in the Agent's 'ntp.yaml' file.\\n\\nSee [Troubleshooting NTP Offset issues](https://docs.datadoghq.com/agent/troubleshooting/ntp for more details on cause and resolution.\",\n    \"tags\": [],\n    \"multi\": true,\n\t\"restricted_roles\": null,\n    \"options\": {\n        \"include_tags\": true,\n        \"locked\": false,\n        \"new_host_delay\": 150,\n        \"notify_audit\": false,\n        \"notify_no_data\": false,\n        \"thresholds\": {\n            \"warning\": 1,\n            \"ok\": 1,\n            \"critical\": 1\n        }\n    },\n    \"priority\": null,\n    \"classification\": \"custom\"\n}\n\"\"\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Datadog = Pulumi.Datadog;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var monitorJson = new Datadog.MonitorJson(\"monitorJson\", new()\n    {\n        Monitor = @\"{\n    \"\"name\"\": \"\"Example monitor - service check\"\",\n    \"\"type\"\": \"\"service check\"\",\n    \"\"query\"\": \"\"\\\"\"ntp.in_sync\\\"\".by(\\\"\"*\\\"\").last(2).count_by_status()\"\",\n    \"\"message\"\": \"\"Change the message triggers if any host's clock goes out of sync with the time given by NTP. The offset threshold is configured in the Agent's 'ntp.yaml' file.\\n\\nSee [Troubleshooting NTP Offset issues](https://docs.datadoghq.com/agent/troubleshooting/ntp for more details on cause and resolution.\"\",\n    \"\"tags\"\": [],\n    \"\"multi\"\": true,\n\t\"\"restricted_roles\"\": null,\n    \"\"options\"\": {\n        \"\"include_tags\"\": true,\n        \"\"locked\"\": false,\n        \"\"new_host_delay\"\": 150,\n        \"\"notify_audit\"\": false,\n        \"\"notify_no_data\"\": false,\n        \"\"thresholds\"\": {\n            \"\"warning\"\": 1,\n            \"\"ok\"\": 1,\n            \"\"critical\"\": 1\n        }\n    },\n    \"\"priority\"\": null,\n    \"\"classification\"\": \"\"custom\"\"\n}\n\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-datadog/sdk/v4/go/datadog\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := datadog.NewMonitorJson(ctx, \"monitorJson\", \u0026datadog.MonitorJsonArgs{\n\t\t\tMonitor: pulumi.String(`{\n    \"name\": \"Example monitor - service check\",\n    \"type\": \"service check\",\n    \"query\": \"\\\"ntp.in_sync\\\".by(\\\"*\\\").last(2).count_by_status()\",\n    \"message\": \"Change the message triggers if any host's clock goes out of sync with the time given by NTP. The offset threshold is configured in the Agent's 'ntp.yaml' file.\\n\\nSee [Troubleshooting NTP Offset issues](https://docs.datadoghq.com/agent/troubleshooting/ntp for more details on cause and resolution.\",\n    \"tags\": [],\n    \"multi\": true,\n\t\"restricted_roles\": null,\n    \"options\": {\n        \"include_tags\": true,\n        \"locked\": false,\n        \"new_host_delay\": 150,\n        \"notify_audit\": false,\n        \"notify_no_data\": false,\n        \"thresholds\": {\n            \"warning\": 1,\n            \"ok\": 1,\n            \"critical\": 1\n        }\n    },\n    \"priority\": null,\n    \"classification\": \"custom\"\n}\n`),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.datadog.MonitorJson;\nimport com.pulumi.datadog.MonitorJsonArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var monitorJson = new MonitorJson(\"monitorJson\", MonitorJsonArgs.builder()        \n            .monitor(\"\"\"\n{\n    \"name\": \"Example monitor - service check\",\n    \"type\": \"service check\",\n    \"query\": \"\\\"ntp.in_sync\\\".by(\\\"*\\\").last(2).count_by_status()\",\n    \"message\": \"Change the message triggers if any host's clock goes out of sync with the time given by NTP. The offset threshold is configured in the Agent's 'ntp.yaml' file.\\n\\nSee [Troubleshooting NTP Offset issues](https://docs.datadoghq.com/agent/troubleshooting/ntp for more details on cause and resolution.\",\n    \"tags\": [],\n    \"multi\": true,\n\t\"restricted_roles\": null,\n    \"options\": {\n        \"include_tags\": true,\n        \"locked\": false,\n        \"new_host_delay\": 150,\n        \"notify_audit\": false,\n        \"notify_no_data\": false,\n        \"thresholds\": {\n            \"warning\": 1,\n            \"ok\": 1,\n            \"critical\": 1\n        }\n    },\n    \"priority\": null,\n    \"classification\": \"custom\"\n}\n            \"\"\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  monitorJson:\n    type: datadog:MonitorJson\n    properties:\n      monitor: |\n        {\n            \"name\": \"Example monitor - service check\",\n            \"type\": \"service check\",\n            \"query\": \"\\\"ntp.in_sync\\\".by(\\\"*\\\").last(2).count_by_status()\",\n            \"message\": \"Change the message triggers if any host's clock goes out of sync with the time given by NTP. The offset threshold is configured in the Agent's 'ntp.yaml' file.\\n\\nSee [Troubleshooting NTP Offset issues](https://docs.datadoghq.com/agent/troubleshooting/ntp for more details on cause and resolution.\",\n            \"tags\": [],\n            \"multi\": true,\n        \t\"restricted_roles\": null,\n            \"options\": {\n                \"include_tags\": true,\n                \"locked\": false,\n                \"new_host_delay\": 150,\n                \"notify_audit\": false,\n                \"notify_no_data\": false,\n                \"thresholds\": {\n                    \"warning\": 1,\n                    \"ok\": 1,\n                    \"critical\": 1\n                }\n            },\n            \"priority\": null,\n            \"classification\": \"custom\"\n        }\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import datadog:index/monitorJson:MonitorJson monitor_json 123456\n```\n\n ",
            "properties": {
                "monitor": {
                    "type": "string",
                    "description": "The JSON formatted definition of the monitor.\n"
                },
                "url": {
                    "type": "string",
                    "description": "The URL of the monitor.\n"
                }
            },
            "required": [
                "monitor",
                "url"
            ],
            "inputProperties": {
                "monitor": {
                    "type": "string",
                    "description": "The JSON formatted definition of the monitor.\n"
                },
                "url": {
                    "type": "string",
                    "description": "The URL of the monitor.\n"
                }
            },
            "requiredInputs": [
                "monitor"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering MonitorJson resources.\n",
                "properties": {
                    "monitor": {
                        "type": "string",
                        "description": "The JSON formatted definition of the monitor.\n"
                    },
                    "url": {
                        "type": "string",
                        "description": "The URL of the monitor.\n"
                    }
                },
                "type": "object"
            }
        },
        "datadog:index/organizationSettings:OrganizationSettings": {
            "description": "Provides a Datadog Organization resource. This can be used to manage your Datadog organization's settings.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as datadog from \"@pulumi/datadog\";\n\n// Manage Datadog Organization\nconst organization = new datadog.OrganizationSettings(\"organization\", {name: \"foo-organization\"});\n```\n```python\nimport pulumi\nimport pulumi_datadog as datadog\n\n# Manage Datadog Organization\norganization = datadog.OrganizationSettings(\"organization\", name=\"foo-organization\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Datadog = Pulumi.Datadog;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    // Manage Datadog Organization\n    var organization = new Datadog.OrganizationSettings(\"organization\", new()\n    {\n        Name = \"foo-organization\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-datadog/sdk/v4/go/datadog\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := datadog.NewOrganizationSettings(ctx, \"organization\", \u0026datadog.OrganizationSettingsArgs{\n\t\t\tName: pulumi.String(\"foo-organization\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.datadog.OrganizationSettings;\nimport com.pulumi.datadog.OrganizationSettingsArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var organization = new OrganizationSettings(\"organization\", OrganizationSettingsArgs.builder()        \n            .name(\"foo-organization\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  # Manage Datadog Organization\n  organization:\n    type: datadog:OrganizationSettings\n    properties:\n      name: foo-organization\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import datadog:index/organizationSettings:OrganizationSettings organization 11111111-2222-3333-4444-555555555555\n```\n\n ",
            "properties": {
                "description": {
                    "type": "string",
                    "description": "Description of the organization.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name for Organization.\n"
                },
                "publicId": {
                    "type": "string",
                    "description": "The `public_id` of the organization you are operating within.\n"
                },
                "settings": {
                    "$ref": "#/types/datadog:index/OrganizationSettingsSettings:OrganizationSettingsSettings",
                    "description": "Organization settings\n"
                }
            },
            "required": [
                "description",
                "publicId",
                "settings"
            ],
            "inputProperties": {
                "name": {
                    "type": "string",
                    "description": "Name for Organization.\n"
                },
                "settings": {
                    "$ref": "#/types/datadog:index/OrganizationSettingsSettings:OrganizationSettingsSettings",
                    "description": "Organization settings\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering OrganizationSettings resources.\n",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "Description of the organization.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name for Organization.\n"
                    },
                    "publicId": {
                        "type": "string",
                        "description": "The `public_id` of the organization you are operating within.\n"
                    },
                    "settings": {
                        "$ref": "#/types/datadog:index/OrganizationSettingsSettings:OrganizationSettingsSettings",
                        "description": "Organization settings\n"
                    }
                },
                "type": "object"
            }
        },
        "datadog:index/role:Role": {
            "description": "Provides a Datadog role resource. This can be used to create and manage Datadog roles.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as datadog from \"@pulumi/datadog\";\n\nconst bar = datadog.getPermissions({});\n// Create a new Datadog role\nconst foo = new datadog.Role(\"foo\", {\n    name: \"foo\",\n    permissions: [\n        {\n            id: bar.then(bar =\u003e bar.permissions?.monitorsDowntime),\n        },\n        {\n            id: bar.then(bar =\u003e bar.permissions?.monitorsWrite),\n        },\n    ],\n});\n```\n```python\nimport pulumi\nimport pulumi_datadog as datadog\n\nbar = datadog.get_permissions()\n# Create a new Datadog role\nfoo = datadog.Role(\"foo\",\n    name=\"foo\",\n    permissions=[\n        datadog.RolePermissionArgs(\n            id=bar.permissions[\"monitorsDowntime\"],\n        ),\n        datadog.RolePermissionArgs(\n            id=bar.permissions[\"monitorsWrite\"],\n        ),\n    ])\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Datadog = Pulumi.Datadog;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var bar = Datadog.GetPermissions.Invoke();\n\n    // Create a new Datadog role\n    var foo = new Datadog.Role(\"foo\", new()\n    {\n        Name = \"foo\",\n        Permissions = new[]\n        {\n            new Datadog.Inputs.RolePermissionArgs\n            {\n                Id = bar.Apply(getPermissionsResult =\u003e getPermissionsResult.Permissions?.MonitorsDowntime),\n            },\n            new Datadog.Inputs.RolePermissionArgs\n            {\n                Id = bar.Apply(getPermissionsResult =\u003e getPermissionsResult.Permissions?.MonitorsWrite),\n            },\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-datadog/sdk/v4/go/datadog\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tbar, err := datadog.GetPermissions(ctx, nil, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = datadog.NewRole(ctx, \"foo\", \u0026datadog.RoleArgs{\n\t\t\tName: pulumi.String(\"foo\"),\n\t\t\tPermissions: datadog.RolePermissionArray{\n\t\t\t\t\u0026datadog.RolePermissionArgs{\n\t\t\t\t\tId: *pulumi.String(bar.Permissions.MonitorsDowntime),\n\t\t\t\t},\n\t\t\t\t\u0026datadog.RolePermissionArgs{\n\t\t\t\t\tId: *pulumi.String(bar.Permissions.MonitorsWrite),\n\t\t\t\t},\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.datadog.DatadogFunctions;\nimport com.pulumi.datadog.inputs.GetPermissionsArgs;\nimport com.pulumi.datadog.Role;\nimport com.pulumi.datadog.RoleArgs;\nimport com.pulumi.datadog.inputs.RolePermissionArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var bar = DatadogFunctions.getPermissions();\n\n        var foo = new Role(\"foo\", RoleArgs.builder()        \n            .name(\"foo\")\n            .permissions(            \n                RolePermissionArgs.builder()\n                    .id(bar.applyValue(getPermissionsResult -\u003e getPermissionsResult.permissions().monitorsDowntime()))\n                    .build(),\n                RolePermissionArgs.builder()\n                    .id(bar.applyValue(getPermissionsResult -\u003e getPermissionsResult.permissions().monitorsWrite()))\n                    .build())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  # Create a new Datadog role\n  foo:\n    type: datadog:Role\n    properties:\n      name: foo\n      permissions:\n        - id: ${bar.permissions.monitorsDowntime}\n        - id: ${bar.permissions.monitorsWrite}\nvariables:\n  bar:\n    fn::invoke:\n      Function: datadog:getPermissions\n      Arguments: {}\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nRoles can be imported using their ID, e.g.\n\n```sh\n $ pulumi import datadog:index/role:Role example_role 000000-0000-0000-0000-000000000000\n```\n\n ",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Name of the role.\n"
                },
                "permissions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/RolePermission:RolePermission"
                    },
                    "description": "Set of objects containing the permission ID and the name of the permissions granted to this role.\n"
                },
                "userCount": {
                    "type": "integer",
                    "description": "Number of users that have this role.\n"
                },
                "validate": {
                    "type": "boolean",
                    "description": "If set to `false`, skip the validation call done during plan.\n"
                }
            },
            "required": [
                "name",
                "userCount"
            ],
            "inputProperties": {
                "name": {
                    "type": "string",
                    "description": "Name of the role.\n"
                },
                "permissions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/RolePermission:RolePermission"
                    },
                    "description": "Set of objects containing the permission ID and the name of the permissions granted to this role.\n"
                },
                "validate": {
                    "type": "boolean",
                    "description": "If set to `false`, skip the validation call done during plan.\n"
                }
            },
            "requiredInputs": [
                "name"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Role resources.\n",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name of the role.\n"
                    },
                    "permissions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/datadog:index/RolePermission:RolePermission"
                        },
                        "description": "Set of objects containing the permission ID and the name of the permissions granted to this role.\n"
                    },
                    "userCount": {
                        "type": "integer",
                        "description": "Number of users that have this role.\n"
                    },
                    "validate": {
                        "type": "boolean",
                        "description": "If set to `false`, skip the validation call done during plan.\n"
                    }
                },
                "type": "object"
            }
        },
        "datadog:index/rumApplication:RumApplication": {
            "description": "Provides a Datadog RUM application resource. This can be used to create and manage Datadog RUM applications.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as datadog from \"@pulumi/datadog\";\n\nconst rumApplication = new datadog.RumApplication(\"rumApplication\", {\n    name: \"my-application\",\n    type: \"browser\",\n});\n```\n```python\nimport pulumi\nimport pulumi_datadog as datadog\n\nrum_application = datadog.RumApplication(\"rumApplication\",\n    name=\"my-application\",\n    type=\"browser\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Datadog = Pulumi.Datadog;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var rumApplication = new Datadog.RumApplication(\"rumApplication\", new()\n    {\n        Name = \"my-application\",\n        Type = \"browser\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-datadog/sdk/v4/go/datadog\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := datadog.NewRumApplication(ctx, \"rumApplication\", \u0026datadog.RumApplicationArgs{\n\t\t\tName: pulumi.String(\"my-application\"),\n\t\t\tType: pulumi.String(\"browser\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.datadog.RumApplication;\nimport com.pulumi.datadog.RumApplicationArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var rumApplication = new RumApplication(\"rumApplication\", RumApplicationArgs.builder()        \n            .name(\"my-application\")\n            .type(\"browser\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  rumApplication:\n    type: datadog:RumApplication\n    properties:\n      name: my-application\n      type: browser\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import datadog:index/rumApplication:RumApplication rum_application a1b2c3d4-a1b2-a1b2-a1b2-a1b2c3d4e5f6\n```\n\n ",
            "properties": {
                "clientToken": {
                    "type": "string",
                    "description": "The client token\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the RUM application\n"
                },
                "type": {
                    "type": "string",
                    "description": "The RUM application type. Supported values are `browser`, `ios`, `android`, `react-native`, `flutter`\n"
                }
            },
            "required": [
                "clientToken",
                "name"
            ],
            "inputProperties": {
                "name": {
                    "type": "string",
                    "description": "The name of the RUM application\n"
                },
                "type": {
                    "type": "string",
                    "description": "The RUM application type. Supported values are `browser`, `ios`, `android`, `react-native`, `flutter`\n"
                }
            },
            "requiredInputs": [
                "name"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering RumApplication resources.\n",
                "properties": {
                    "clientToken": {
                        "type": "string",
                        "description": "The client token\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the RUM application\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "The RUM application type. Supported values are `browser`, `ios`, `android`, `react-native`, `flutter`\n"
                    }
                },
                "type": "object"
            }
        },
        "datadog:index/securityMonitoringDefaultRule:SecurityMonitoringDefaultRule": {
            "description": "Provides a Datadog Security Monitoring Rule API resource for default rules. It can only be imported, you can't create a default rule.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as datadog from \"@pulumi/datadog\";\n\nconst adefaultrule = new datadog.SecurityMonitoringDefaultRule(\"adefaultrule\", {\n    cases: [{\n        notifications: [\"@me\"],\n        status: \"high\",\n    }],\n    enabled: true,\n});\n```\n```python\nimport pulumi\nimport pulumi_datadog as datadog\n\nadefaultrule = datadog.SecurityMonitoringDefaultRule(\"adefaultrule\",\n    cases=[datadog.SecurityMonitoringDefaultRuleCaseArgs(\n        notifications=[\"@me\"],\n        status=\"high\",\n    )],\n    enabled=True)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Datadog = Pulumi.Datadog;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var adefaultrule = new Datadog.SecurityMonitoringDefaultRule(\"adefaultrule\", new()\n    {\n        Cases = new[]\n        {\n            new Datadog.Inputs.SecurityMonitoringDefaultRuleCaseArgs\n            {\n                Notifications = new[]\n                {\n                    \"@me\",\n                },\n                Status = \"high\",\n            },\n        },\n        Enabled = true,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-datadog/sdk/v4/go/datadog\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := datadog.NewSecurityMonitoringDefaultRule(ctx, \"adefaultrule\", \u0026datadog.SecurityMonitoringDefaultRuleArgs{\n\t\t\tCases: datadog.SecurityMonitoringDefaultRuleCaseArray{\n\t\t\t\t\u0026datadog.SecurityMonitoringDefaultRuleCaseArgs{\n\t\t\t\t\tNotifications: pulumi.StringArray{\n\t\t\t\t\t\tpulumi.String(\"@me\"),\n\t\t\t\t\t},\n\t\t\t\t\tStatus: pulumi.String(\"high\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tEnabled: pulumi.Bool(true),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.datadog.SecurityMonitoringDefaultRule;\nimport com.pulumi.datadog.SecurityMonitoringDefaultRuleArgs;\nimport com.pulumi.datadog.inputs.SecurityMonitoringDefaultRuleCaseArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var adefaultrule = new SecurityMonitoringDefaultRule(\"adefaultrule\", SecurityMonitoringDefaultRuleArgs.builder()        \n            .cases(SecurityMonitoringDefaultRuleCaseArgs.builder()\n                .notifications(\"@me\")\n                .status(\"high\")\n                .build())\n            .enabled(true)\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  adefaultrule:\n    type: datadog:SecurityMonitoringDefaultRule\n    properties:\n      # Change the notifications for the high case\n      cases:\n        - notifications:\n            - '@me'\n          status: high\n      enabled: true\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nDefault rules need to be imported using their ID before applying. resource \"datadog_security_monitoring_default_rule\" \"adefaultrule\" { }\n\n```sh\n $ pulumi import datadog:index/securityMonitoringDefaultRule:SecurityMonitoringDefaultRule adefaultrule m0o-hto-lkb\n```\n\n ",
            "properties": {
                "cases": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/SecurityMonitoringDefaultRuleCase:SecurityMonitoringDefaultRuleCase"
                    },
                    "description": "Cases of the rule, this is used to update notifications.\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Enable the rule.\n"
                },
                "filters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/SecurityMonitoringDefaultRuleFilter:SecurityMonitoringDefaultRuleFilter"
                    },
                    "description": "Additional queries to filter matched events before they are processed.\n"
                },
                "options": {
                    "$ref": "#/types/datadog:index/SecurityMonitoringDefaultRuleOptions:SecurityMonitoringDefaultRuleOptions",
                    "description": "Options on default rules. Note that only a subset of fields can be updated on default rule options.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The rule type.\n"
                }
            },
            "required": [
                "type"
            ],
            "inputProperties": {
                "cases": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/SecurityMonitoringDefaultRuleCase:SecurityMonitoringDefaultRuleCase"
                    },
                    "description": "Cases of the rule, this is used to update notifications.\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Enable the rule.\n"
                },
                "filters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/SecurityMonitoringDefaultRuleFilter:SecurityMonitoringDefaultRuleFilter"
                    },
                    "description": "Additional queries to filter matched events before they are processed.\n"
                },
                "options": {
                    "$ref": "#/types/datadog:index/SecurityMonitoringDefaultRuleOptions:SecurityMonitoringDefaultRuleOptions",
                    "description": "Options on default rules. Note that only a subset of fields can be updated on default rule options.\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SecurityMonitoringDefaultRule resources.\n",
                "properties": {
                    "cases": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/datadog:index/SecurityMonitoringDefaultRuleCase:SecurityMonitoringDefaultRuleCase"
                        },
                        "description": "Cases of the rule, this is used to update notifications.\n"
                    },
                    "enabled": {
                        "type": "boolean",
                        "description": "Enable the rule.\n"
                    },
                    "filters": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/datadog:index/SecurityMonitoringDefaultRuleFilter:SecurityMonitoringDefaultRuleFilter"
                        },
                        "description": "Additional queries to filter matched events before they are processed.\n"
                    },
                    "options": {
                        "$ref": "#/types/datadog:index/SecurityMonitoringDefaultRuleOptions:SecurityMonitoringDefaultRuleOptions",
                        "description": "Options on default rules. Note that only a subset of fields can be updated on default rule options.\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "The rule type.\n"
                    }
                },
                "type": "object"
            }
        },
        "datadog:index/securityMonitoringFilter:SecurityMonitoringFilter": {
            "description": "Provides a Datadog Security Monitoring Rule API resource for security filters.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as datadog from \"@pulumi/datadog\";\n\nconst myFilter = new datadog.SecurityMonitoringFilter(\"myFilter\", {\n    exclusionFilters: [\n        {\n            name: \"first\",\n            query: \"exclude some logs\",\n        },\n        {\n            name: \"second\",\n            query: \"exclude some other logs\",\n        },\n    ],\n    isEnabled: true,\n    name: \"My filter\",\n    query: \"The filter is filtering.\",\n});\n```\n```python\nimport pulumi\nimport pulumi_datadog as datadog\n\nmy_filter = datadog.SecurityMonitoringFilter(\"myFilter\",\n    exclusion_filters=[\n        datadog.SecurityMonitoringFilterExclusionFilterArgs(\n            name=\"first\",\n            query=\"exclude some logs\",\n        ),\n        datadog.SecurityMonitoringFilterExclusionFilterArgs(\n            name=\"second\",\n            query=\"exclude some other logs\",\n        ),\n    ],\n    is_enabled=True,\n    name=\"My filter\",\n    query=\"The filter is filtering.\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Datadog = Pulumi.Datadog;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var myFilter = new Datadog.SecurityMonitoringFilter(\"myFilter\", new()\n    {\n        ExclusionFilters = new[]\n        {\n            new Datadog.Inputs.SecurityMonitoringFilterExclusionFilterArgs\n            {\n                Name = \"first\",\n                Query = \"exclude some logs\",\n            },\n            new Datadog.Inputs.SecurityMonitoringFilterExclusionFilterArgs\n            {\n                Name = \"second\",\n                Query = \"exclude some other logs\",\n            },\n        },\n        IsEnabled = true,\n        Name = \"My filter\",\n        Query = \"The filter is filtering.\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-datadog/sdk/v4/go/datadog\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := datadog.NewSecurityMonitoringFilter(ctx, \"myFilter\", \u0026datadog.SecurityMonitoringFilterArgs{\n\t\t\tExclusionFilters: datadog.SecurityMonitoringFilterExclusionFilterArray{\n\t\t\t\t\u0026datadog.SecurityMonitoringFilterExclusionFilterArgs{\n\t\t\t\t\tName:  pulumi.String(\"first\"),\n\t\t\t\t\tQuery: pulumi.String(\"exclude some logs\"),\n\t\t\t\t},\n\t\t\t\t\u0026datadog.SecurityMonitoringFilterExclusionFilterArgs{\n\t\t\t\t\tName:  pulumi.String(\"second\"),\n\t\t\t\t\tQuery: pulumi.String(\"exclude some other logs\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tIsEnabled: pulumi.Bool(true),\n\t\t\tName:      pulumi.String(\"My filter\"),\n\t\t\tQuery:     pulumi.String(\"The filter is filtering.\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.datadog.SecurityMonitoringFilter;\nimport com.pulumi.datadog.SecurityMonitoringFilterArgs;\nimport com.pulumi.datadog.inputs.SecurityMonitoringFilterExclusionFilterArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var myFilter = new SecurityMonitoringFilter(\"myFilter\", SecurityMonitoringFilterArgs.builder()        \n            .exclusionFilters(            \n                SecurityMonitoringFilterExclusionFilterArgs.builder()\n                    .name(\"first\")\n                    .query(\"exclude some logs\")\n                    .build(),\n                SecurityMonitoringFilterExclusionFilterArgs.builder()\n                    .name(\"second\")\n                    .query(\"exclude some other logs\")\n                    .build())\n            .isEnabled(true)\n            .name(\"My filter\")\n            .query(\"The filter is filtering.\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  myFilter:\n    type: datadog:SecurityMonitoringFilter\n    properties:\n      exclusionFilters:\n        - name: first\n          query: exclude some logs\n        - name: second\n          query: exclude some other logs\n      isEnabled: true\n      name: My filter\n      query: The filter is filtering.\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nSecurity monitoring filters can be imported using ID, e.g.\n\n```sh\n $ pulumi import datadog:index/securityMonitoringFilter:SecurityMonitoringFilter my_filter m0o-hto-lkb\n```\n\n ",
            "properties": {
                "exclusionFilters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/SecurityMonitoringFilterExclusionFilter:SecurityMonitoringFilterExclusionFilter"
                    },
                    "description": "Exclusion filters to exclude some logs from the security filter.\n"
                },
                "filteredDataType": {
                    "type": "string",
                    "description": "The filtered data type. Valid values are `logs`.\n"
                },
                "isEnabled": {
                    "type": "boolean",
                    "description": "Whether the security filter is enabled.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the security filter.\n"
                },
                "query": {
                    "type": "string",
                    "description": "The query of the security filter.\n"
                },
                "version": {
                    "type": "integer",
                    "description": "The version of the security filter.\n"
                }
            },
            "required": [
                "isEnabled",
                "name",
                "query",
                "version"
            ],
            "inputProperties": {
                "exclusionFilters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/SecurityMonitoringFilterExclusionFilter:SecurityMonitoringFilterExclusionFilter"
                    },
                    "description": "Exclusion filters to exclude some logs from the security filter.\n"
                },
                "filteredDataType": {
                    "type": "string",
                    "description": "The filtered data type. Valid values are `logs`.\n"
                },
                "isEnabled": {
                    "type": "boolean",
                    "description": "Whether the security filter is enabled.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the security filter.\n"
                },
                "query": {
                    "type": "string",
                    "description": "The query of the security filter.\n"
                }
            },
            "requiredInputs": [
                "isEnabled",
                "name",
                "query"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SecurityMonitoringFilter resources.\n",
                "properties": {
                    "exclusionFilters": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/datadog:index/SecurityMonitoringFilterExclusionFilter:SecurityMonitoringFilterExclusionFilter"
                        },
                        "description": "Exclusion filters to exclude some logs from the security filter.\n"
                    },
                    "filteredDataType": {
                        "type": "string",
                        "description": "The filtered data type. Valid values are `logs`.\n"
                    },
                    "isEnabled": {
                        "type": "boolean",
                        "description": "Whether the security filter is enabled.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the security filter.\n"
                    },
                    "query": {
                        "type": "string",
                        "description": "The query of the security filter.\n"
                    },
                    "version": {
                        "type": "integer",
                        "description": "The version of the security filter.\n"
                    }
                },
                "type": "object"
            }
        },
        "datadog:index/securityMonitoringRule:SecurityMonitoringRule": {
            "description": "Provides a Datadog Security Monitoring Rule API resource. This can be used to create and manage Datadog security monitoring rules. To change settings for a default rule use `datadog_security_default_rule` instead.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as datadog from \"@pulumi/datadog\";\n\nconst myrule = new datadog.SecurityMonitoringRule(\"myrule\", {\n    cases: [{\n        condition: \"errors \u003e 3 \u0026\u0026 warnings \u003e 10\",\n        notifications: [\"@user\"],\n        status: \"high\",\n    }],\n    enabled: true,\n    message: \"The rule has triggered.\",\n    name: \"My rule\",\n    options: {\n        evaluationWindow: 300,\n        keepAlive: 600,\n        maxSignalDuration: 900,\n    },\n    queries: [\n        {\n            aggregation: \"count\",\n            groupByFields: [\"host\"],\n            name: \"errors\",\n            query: \"status:error\",\n        },\n        {\n            aggregation: \"count\",\n            groupByFields: [\"host\"],\n            name: \"warnings\",\n            query: \"status:warning\",\n        },\n    ],\n    tags: [\"type:dos\"],\n});\n```\n```python\nimport pulumi\nimport pulumi_datadog as datadog\n\nmyrule = datadog.SecurityMonitoringRule(\"myrule\",\n    cases=[datadog.SecurityMonitoringRuleCaseArgs(\n        condition=\"errors \u003e 3 \u0026\u0026 warnings \u003e 10\",\n        notifications=[\"@user\"],\n        status=\"high\",\n    )],\n    enabled=True,\n    message=\"The rule has triggered.\",\n    name=\"My rule\",\n    options=datadog.SecurityMonitoringRuleOptionsArgs(\n        evaluation_window=300,\n        keep_alive=600,\n        max_signal_duration=900,\n    ),\n    queries=[\n        datadog.SecurityMonitoringRuleQueryArgs(\n            aggregation=\"count\",\n            group_by_fields=[\"host\"],\n            name=\"errors\",\n            query=\"status:error\",\n        ),\n        datadog.SecurityMonitoringRuleQueryArgs(\n            aggregation=\"count\",\n            group_by_fields=[\"host\"],\n            name=\"warnings\",\n            query=\"status:warning\",\n        ),\n    ],\n    tags=[\"type:dos\"])\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Datadog = Pulumi.Datadog;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var myrule = new Datadog.SecurityMonitoringRule(\"myrule\", new()\n    {\n        Cases = new[]\n        {\n            new Datadog.Inputs.SecurityMonitoringRuleCaseArgs\n            {\n                Condition = \"errors \u003e 3 \u0026\u0026 warnings \u003e 10\",\n                Notifications = new[]\n                {\n                    \"@user\",\n                },\n                Status = \"high\",\n            },\n        },\n        Enabled = true,\n        Message = \"The rule has triggered.\",\n        Name = \"My rule\",\n        Options = new Datadog.Inputs.SecurityMonitoringRuleOptionsArgs\n        {\n            EvaluationWindow = 300,\n            KeepAlive = 600,\n            MaxSignalDuration = 900,\n        },\n        Queries = new[]\n        {\n            new Datadog.Inputs.SecurityMonitoringRuleQueryArgs\n            {\n                Aggregation = \"count\",\n                GroupByFields = new[]\n                {\n                    \"host\",\n                },\n                Name = \"errors\",\n                Query = \"status:error\",\n            },\n            new Datadog.Inputs.SecurityMonitoringRuleQueryArgs\n            {\n                Aggregation = \"count\",\n                GroupByFields = new[]\n                {\n                    \"host\",\n                },\n                Name = \"warnings\",\n                Query = \"status:warning\",\n            },\n        },\n        Tags = new[]\n        {\n            \"type:dos\",\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-datadog/sdk/v4/go/datadog\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := datadog.NewSecurityMonitoringRule(ctx, \"myrule\", \u0026datadog.SecurityMonitoringRuleArgs{\n\t\t\tCases: datadog.SecurityMonitoringRuleCaseArray{\n\t\t\t\t\u0026datadog.SecurityMonitoringRuleCaseArgs{\n\t\t\t\t\tCondition: pulumi.String(\"errors \u003e 3 \u0026\u0026 warnings \u003e 10\"),\n\t\t\t\t\tNotifications: pulumi.StringArray{\n\t\t\t\t\t\tpulumi.String(\"@user\"),\n\t\t\t\t\t},\n\t\t\t\t\tStatus: pulumi.String(\"high\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tEnabled: pulumi.Bool(true),\n\t\t\tMessage: pulumi.String(\"The rule has triggered.\"),\n\t\t\tName:    pulumi.String(\"My rule\"),\n\t\t\tOptions: \u0026datadog.SecurityMonitoringRuleOptionsArgs{\n\t\t\t\tEvaluationWindow:  pulumi.Int(300),\n\t\t\t\tKeepAlive:         pulumi.Int(600),\n\t\t\t\tMaxSignalDuration: pulumi.Int(900),\n\t\t\t},\n\t\t\tQueries: datadog.SecurityMonitoringRuleQueryArray{\n\t\t\t\t\u0026datadog.SecurityMonitoringRuleQueryArgs{\n\t\t\t\t\tAggregation: pulumi.String(\"count\"),\n\t\t\t\t\tGroupByFields: pulumi.StringArray{\n\t\t\t\t\t\tpulumi.String(\"host\"),\n\t\t\t\t\t},\n\t\t\t\t\tName:  pulumi.String(\"errors\"),\n\t\t\t\t\tQuery: pulumi.String(\"status:error\"),\n\t\t\t\t},\n\t\t\t\t\u0026datadog.SecurityMonitoringRuleQueryArgs{\n\t\t\t\t\tAggregation: pulumi.String(\"count\"),\n\t\t\t\t\tGroupByFields: pulumi.StringArray{\n\t\t\t\t\t\tpulumi.String(\"host\"),\n\t\t\t\t\t},\n\t\t\t\t\tName:  pulumi.String(\"warnings\"),\n\t\t\t\t\tQuery: pulumi.String(\"status:warning\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tTags: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"type:dos\"),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.datadog.SecurityMonitoringRule;\nimport com.pulumi.datadog.SecurityMonitoringRuleArgs;\nimport com.pulumi.datadog.inputs.SecurityMonitoringRuleCaseArgs;\nimport com.pulumi.datadog.inputs.SecurityMonitoringRuleOptionsArgs;\nimport com.pulumi.datadog.inputs.SecurityMonitoringRuleQueryArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var myrule = new SecurityMonitoringRule(\"myrule\", SecurityMonitoringRuleArgs.builder()        \n            .cases(SecurityMonitoringRuleCaseArgs.builder()\n                .condition(\"errors \u003e 3 \u0026\u0026 warnings \u003e 10\")\n                .notifications(\"@user\")\n                .status(\"high\")\n                .build())\n            .enabled(true)\n            .message(\"The rule has triggered.\")\n            .name(\"My rule\")\n            .options(SecurityMonitoringRuleOptionsArgs.builder()\n                .evaluationWindow(300)\n                .keepAlive(600)\n                .maxSignalDuration(900)\n                .build())\n            .queries(            \n                SecurityMonitoringRuleQueryArgs.builder()\n                    .aggregation(\"count\")\n                    .groupByFields(\"host\")\n                    .name(\"errors\")\n                    .query(\"status:error\")\n                    .build(),\n                SecurityMonitoringRuleQueryArgs.builder()\n                    .aggregation(\"count\")\n                    .groupByFields(\"host\")\n                    .name(\"warnings\")\n                    .query(\"status:warning\")\n                    .build())\n            .tags(\"type:dos\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  myrule:\n    type: datadog:SecurityMonitoringRule\n    properties:\n      cases:\n        - condition: errors \u003e 3 \u0026\u0026 warnings \u003e 10\n          notifications:\n            - '@user'\n          status: high\n      enabled: true\n      message: The rule has triggered.\n      name: My rule\n      options:\n        evaluationWindow: 300\n        keepAlive: 600\n        maxSignalDuration: 900\n      queries:\n        - aggregation: count\n          groupByFields:\n            - host\n          name: errors\n          query: status:error\n        - aggregation: count\n          groupByFields:\n            - host\n          name: warnings\n          query: status:warning\n      tags:\n        - type:dos\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nSecurity monitoring rules can be imported using ID, e.g.\n\n```sh\n $ pulumi import datadog:index/securityMonitoringRule:SecurityMonitoringRule my_rule m0o-hto-lkb\n```\n\n ",
            "properties": {
                "cases": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/SecurityMonitoringRuleCase:SecurityMonitoringRuleCase"
                    },
                    "description": "Cases for generating signals.\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Whether the rule is enabled.\n"
                },
                "filters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/SecurityMonitoringRuleFilter:SecurityMonitoringRuleFilter"
                    },
                    "description": "Additional queries to filter matched events before they are processed.\n"
                },
                "hasExtendedTitle": {
                    "type": "boolean",
                    "description": "Whether the notifications include the triggering group-by values in their title.\n"
                },
                "message": {
                    "type": "string",
                    "description": "Message for generated signals.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the rule.\n"
                },
                "options": {
                    "$ref": "#/types/datadog:index/SecurityMonitoringRuleOptions:SecurityMonitoringRuleOptions",
                    "description": "Options on rules.\n"
                },
                "queries": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/SecurityMonitoringRuleQuery:SecurityMonitoringRuleQuery"
                    },
                    "description": "Queries for selecting logs which are part of the rule.\n"
                },
                "signalQueries": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/SecurityMonitoringRuleSignalQuery:SecurityMonitoringRuleSignalQuery"
                    },
                    "description": "Queries for selecting logs which are part of the rule.\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Tags for generated signals.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The rule type. Valid values are `log_detection`, `workload_security`, `signal_correlation`.\n"
                }
            },
            "required": [
                "cases",
                "message",
                "name"
            ],
            "inputProperties": {
                "cases": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/SecurityMonitoringRuleCase:SecurityMonitoringRuleCase"
                    },
                    "description": "Cases for generating signals.\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Whether the rule is enabled.\n"
                },
                "filters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/SecurityMonitoringRuleFilter:SecurityMonitoringRuleFilter"
                    },
                    "description": "Additional queries to filter matched events before they are processed.\n"
                },
                "hasExtendedTitle": {
                    "type": "boolean",
                    "description": "Whether the notifications include the triggering group-by values in their title.\n"
                },
                "message": {
                    "type": "string",
                    "description": "Message for generated signals.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the rule.\n"
                },
                "options": {
                    "$ref": "#/types/datadog:index/SecurityMonitoringRuleOptions:SecurityMonitoringRuleOptions",
                    "description": "Options on rules.\n"
                },
                "queries": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/SecurityMonitoringRuleQuery:SecurityMonitoringRuleQuery"
                    },
                    "description": "Queries for selecting logs which are part of the rule.\n"
                },
                "signalQueries": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/SecurityMonitoringRuleSignalQuery:SecurityMonitoringRuleSignalQuery"
                    },
                    "description": "Queries for selecting logs which are part of the rule.\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Tags for generated signals.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The rule type. Valid values are `log_detection`, `workload_security`, `signal_correlation`.\n"
                }
            },
            "requiredInputs": [
                "cases",
                "message",
                "name"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SecurityMonitoringRule resources.\n",
                "properties": {
                    "cases": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/datadog:index/SecurityMonitoringRuleCase:SecurityMonitoringRuleCase"
                        },
                        "description": "Cases for generating signals.\n"
                    },
                    "enabled": {
                        "type": "boolean",
                        "description": "Whether the rule is enabled.\n"
                    },
                    "filters": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/datadog:index/SecurityMonitoringRuleFilter:SecurityMonitoringRuleFilter"
                        },
                        "description": "Additional queries to filter matched events before they are processed.\n"
                    },
                    "hasExtendedTitle": {
                        "type": "boolean",
                        "description": "Whether the notifications include the triggering group-by values in their title.\n"
                    },
                    "message": {
                        "type": "string",
                        "description": "Message for generated signals.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the rule.\n"
                    },
                    "options": {
                        "$ref": "#/types/datadog:index/SecurityMonitoringRuleOptions:SecurityMonitoringRuleOptions",
                        "description": "Options on rules.\n"
                    },
                    "queries": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/datadog:index/SecurityMonitoringRuleQuery:SecurityMonitoringRuleQuery"
                        },
                        "description": "Queries for selecting logs which are part of the rule.\n"
                    },
                    "signalQueries": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/datadog:index/SecurityMonitoringRuleSignalQuery:SecurityMonitoringRuleSignalQuery"
                        },
                        "description": "Queries for selecting logs which are part of the rule.\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Tags for generated signals.\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "The rule type. Valid values are `log_detection`, `workload_security`, `signal_correlation`.\n"
                    }
                },
                "type": "object"
            }
        },
        "datadog:index/sensitiveDataScannerGroup:SensitiveDataScannerGroup": {
            "description": "Provides a Sensitive Data Scanner group resource.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as datadog from \"@pulumi/datadog\";\n\nconst mygroup = new datadog.SensitiveDataScannerGroup(\"mygroup\", {\n    description: \"A relevant description\",\n    filter: {\n        query: \"service:my-service\",\n    },\n    isEnabled: true,\n    name: \"My new scanning group\",\n    productLists: [\"apm\"],\n});\n```\n```python\nimport pulumi\nimport pulumi_datadog as datadog\n\nmygroup = datadog.SensitiveDataScannerGroup(\"mygroup\",\n    description=\"A relevant description\",\n    filter=datadog.SensitiveDataScannerGroupFilterArgs(\n        query=\"service:my-service\",\n    ),\n    is_enabled=True,\n    name=\"My new scanning group\",\n    product_lists=[\"apm\"])\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Datadog = Pulumi.Datadog;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var mygroup = new Datadog.SensitiveDataScannerGroup(\"mygroup\", new()\n    {\n        Description = \"A relevant description\",\n        Filter = new Datadog.Inputs.SensitiveDataScannerGroupFilterArgs\n        {\n            Query = \"service:my-service\",\n        },\n        IsEnabled = true,\n        Name = \"My new scanning group\",\n        ProductLists = new[]\n        {\n            \"apm\",\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-datadog/sdk/v4/go/datadog\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := datadog.NewSensitiveDataScannerGroup(ctx, \"mygroup\", \u0026datadog.SensitiveDataScannerGroupArgs{\n\t\t\tDescription: pulumi.String(\"A relevant description\"),\n\t\t\tFilter: \u0026datadog.SensitiveDataScannerGroupFilterArgs{\n\t\t\t\tQuery: pulumi.String(\"service:my-service\"),\n\t\t\t},\n\t\t\tIsEnabled: pulumi.Bool(true),\n\t\t\tName:      pulumi.String(\"My new scanning group\"),\n\t\t\tProductLists: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"apm\"),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.datadog.SensitiveDataScannerGroup;\nimport com.pulumi.datadog.SensitiveDataScannerGroupArgs;\nimport com.pulumi.datadog.inputs.SensitiveDataScannerGroupFilterArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var mygroup = new SensitiveDataScannerGroup(\"mygroup\", SensitiveDataScannerGroupArgs.builder()        \n            .description(\"A relevant description\")\n            .filter(SensitiveDataScannerGroupFilterArgs.builder()\n                .query(\"service:my-service\")\n                .build())\n            .isEnabled(true)\n            .name(\"My new scanning group\")\n            .productLists(\"apm\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  mygroup:\n    type: datadog:SensitiveDataScannerGroup\n    properties:\n      description: A relevant description\n      filter:\n        query: service:my-service\n      isEnabled: true\n      name: My new scanning group\n      productLists:\n        - apm\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import datadog:index/sensitiveDataScannerGroup:SensitiveDataScannerGroup new_list \"\"\n```\n\n ",
            "properties": {
                "description": {
                    "type": "string",
                    "description": "Description of the Datadog scanning group.\n"
                },
                "filter": {
                    "$ref": "#/types/datadog:index/SensitiveDataScannerGroupFilter:SensitiveDataScannerGroupFilter",
                    "description": "Filter object the scanning group applies.\n"
                },
                "isEnabled": {
                    "type": "boolean",
                    "description": "Whether or not the scanning group is enabled. If the group doesn't contain any rule or if all the rules in it are disabled, the group is force-disabled by our backend\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the Datadog scanning group.\n"
                },
                "productLists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of products the scanning group applies.\n"
                }
            },
            "required": [
                "filter",
                "isEnabled",
                "name",
                "productLists"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "Description of the Datadog scanning group.\n"
                },
                "filter": {
                    "$ref": "#/types/datadog:index/SensitiveDataScannerGroupFilter:SensitiveDataScannerGroupFilter",
                    "description": "Filter object the scanning group applies.\n"
                },
                "isEnabled": {
                    "type": "boolean",
                    "description": "Whether or not the scanning group is enabled. If the group doesn't contain any rule or if all the rules in it are disabled, the group is force-disabled by our backend\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the Datadog scanning group.\n"
                },
                "productLists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of products the scanning group applies.\n"
                }
            },
            "requiredInputs": [
                "filter",
                "isEnabled",
                "name",
                "productLists"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SensitiveDataScannerGroup resources.\n",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "Description of the Datadog scanning group.\n"
                    },
                    "filter": {
                        "$ref": "#/types/datadog:index/SensitiveDataScannerGroupFilter:SensitiveDataScannerGroupFilter",
                        "description": "Filter object the scanning group applies.\n"
                    },
                    "isEnabled": {
                        "type": "boolean",
                        "description": "Whether or not the scanning group is enabled. If the group doesn't contain any rule or if all the rules in it are disabled, the group is force-disabled by our backend\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the Datadog scanning group.\n"
                    },
                    "productLists": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of products the scanning group applies.\n"
                    }
                },
                "type": "object"
            }
        },
        "datadog:index/sensitiveDataScannerGroupOrder:SensitiveDataScannerGroupOrder": {
            "description": "Provides a Datadog Sensitive Data Scanner Group Order API resource. This can be used to manage the order of Datadog Sensitive Data Scanner Groups.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as datadog from \"@pulumi/datadog\";\n\nconst mygrouporder = new datadog.SensitiveDataScannerGroupOrder(\"mygrouporder\", {groupIds: [\n    \"group-id-1\",\n    \"group-id-2\",\n    \"group-id-3\",\n]});\n```\n```python\nimport pulumi\nimport pulumi_datadog as datadog\n\nmygrouporder = datadog.SensitiveDataScannerGroupOrder(\"mygrouporder\", group_ids=[\n    \"group-id-1\",\n    \"group-id-2\",\n    \"group-id-3\",\n])\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Datadog = Pulumi.Datadog;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var mygrouporder = new Datadog.SensitiveDataScannerGroupOrder(\"mygrouporder\", new()\n    {\n        GroupIds = new[]\n        {\n            \"group-id-1\",\n            \"group-id-2\",\n            \"group-id-3\",\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-datadog/sdk/v4/go/datadog\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := datadog.NewSensitiveDataScannerGroupOrder(ctx, \"mygrouporder\", \u0026datadog.SensitiveDataScannerGroupOrderArgs{\n\t\t\tGroupIds: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"group-id-1\"),\n\t\t\t\tpulumi.String(\"group-id-2\"),\n\t\t\t\tpulumi.String(\"group-id-3\"),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.datadog.SensitiveDataScannerGroupOrder;\nimport com.pulumi.datadog.SensitiveDataScannerGroupOrderArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var mygrouporder = new SensitiveDataScannerGroupOrder(\"mygrouporder\", SensitiveDataScannerGroupOrderArgs.builder()        \n            .groupIds(            \n                \"group-id-1\",\n                \"group-id-2\",\n                \"group-id-3\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  mygrouporder:\n    type: datadog:SensitiveDataScannerGroupOrder\n    properties:\n      groupIds:\n        - group-id-1\n        - group-id-2\n        - group-id-3\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import datadog:index/sensitiveDataScannerGroupOrder:SensitiveDataScannerGroupOrder mygrouporder order\n```\n\n ",
            "properties": {
                "groupIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The list of Sensitive Data Scanner group IDs, in order. Logs are tested against the query filter of each index one by one following the order of the list.\n"
                }
            },
            "required": [
                "groupIds"
            ],
            "inputProperties": {
                "groupIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The list of Sensitive Data Scanner group IDs, in order. Logs are tested against the query filter of each index one by one following the order of the list.\n"
                }
            },
            "requiredInputs": [
                "groupIds"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SensitiveDataScannerGroupOrder resources.\n",
                "properties": {
                    "groupIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The list of Sensitive Data Scanner group IDs, in order. Logs are tested against the query filter of each index one by one following the order of the list.\n"
                    }
                },
                "type": "object"
            }
        },
        "datadog:index/sensitiveDataScannerRule:SensitiveDataScannerRule": {
            "description": "Provides a Datadog SensitiveDataScannerRule resource. This can be used to create and manage Datadog sensitive_data_scanner_rule.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as datadog from \"@pulumi/datadog\";\n\n// Create new sensitive_data_scanner_rule resource in a sensitive_data_scanner_group\nconst mygroup = new datadog.SensitiveDataScannerGroup(\"mygroup\", {\n    name: \"My new scanning group\",\n    description: \"A relevant description\",\n    filter: {\n        query: \"service:my-service\",\n    },\n    isEnabled: true,\n    productLists: [\"apm\"],\n});\nconst myrule = new datadog.SensitiveDataScannerRule(\"myrule\", {\n    name: \"My new rule\",\n    description: \"Another description\",\n    groupId: mygroup.id,\n    excludedNamespaces: [\"username\"],\n    isEnabled: true,\n    pattern: \"myregex\",\n    tags: [\"sensitive_data:true\"],\n    textReplacement: {\n        numberOfChars: 0,\n        replacementString: \"\",\n        type: \"hash\",\n    },\n});\nconst awsSp = datadog.getSensitiveDataScannerStandardPattern({\n    filter: \"AWS Access Key ID Scanner\",\n});\nconst mylibraryrule = new datadog.SensitiveDataScannerRule(\"mylibraryrule\", {\n    name: \"My library rule\",\n    description: \"A description\",\n    groupId: mygroup.id,\n    standardPatternId: awsSp.then(awsSp =\u003e awsSp.id),\n    excludedNamespaces: [\"username\"],\n    isEnabled: true,\n    tags: [\"sensitive_data:true\"],\n});\n```\n```python\nimport pulumi\nimport pulumi_datadog as datadog\n\n# Create new sensitive_data_scanner_rule resource in a sensitive_data_scanner_group\nmygroup = datadog.SensitiveDataScannerGroup(\"mygroup\",\n    name=\"My new scanning group\",\n    description=\"A relevant description\",\n    filter=datadog.SensitiveDataScannerGroupFilterArgs(\n        query=\"service:my-service\",\n    ),\n    is_enabled=True,\n    product_lists=[\"apm\"])\nmyrule = datadog.SensitiveDataScannerRule(\"myrule\",\n    name=\"My new rule\",\n    description=\"Another description\",\n    group_id=mygroup.id,\n    excluded_namespaces=[\"username\"],\n    is_enabled=True,\n    pattern=\"myregex\",\n    tags=[\"sensitive_data:true\"],\n    text_replacement=datadog.SensitiveDataScannerRuleTextReplacementArgs(\n        number_of_chars=0,\n        replacement_string=\"\",\n        type=\"hash\",\n    ))\naws_sp = datadog.get_sensitive_data_scanner_standard_pattern(filter=\"AWS Access Key ID Scanner\")\nmylibraryrule = datadog.SensitiveDataScannerRule(\"mylibraryrule\",\n    name=\"My library rule\",\n    description=\"A description\",\n    group_id=mygroup.id,\n    standard_pattern_id=aws_sp.id,\n    excluded_namespaces=[\"username\"],\n    is_enabled=True,\n    tags=[\"sensitive_data:true\"])\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Datadog = Pulumi.Datadog;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    // Create new sensitive_data_scanner_rule resource in a sensitive_data_scanner_group\n    var mygroup = new Datadog.SensitiveDataScannerGroup(\"mygroup\", new()\n    {\n        Name = \"My new scanning group\",\n        Description = \"A relevant description\",\n        Filter = new Datadog.Inputs.SensitiveDataScannerGroupFilterArgs\n        {\n            Query = \"service:my-service\",\n        },\n        IsEnabled = true,\n        ProductLists = new[]\n        {\n            \"apm\",\n        },\n    });\n\n    var myrule = new Datadog.SensitiveDataScannerRule(\"myrule\", new()\n    {\n        Name = \"My new rule\",\n        Description = \"Another description\",\n        GroupId = mygroup.Id,\n        ExcludedNamespaces = new[]\n        {\n            \"username\",\n        },\n        IsEnabled = true,\n        Pattern = \"myregex\",\n        Tags = new[]\n        {\n            \"sensitive_data:true\",\n        },\n        TextReplacement = new Datadog.Inputs.SensitiveDataScannerRuleTextReplacementArgs\n        {\n            NumberOfChars = 0,\n            ReplacementString = \"\",\n            Type = \"hash\",\n        },\n    });\n\n    var awsSp = Datadog.GetSensitiveDataScannerStandardPattern.Invoke(new()\n    {\n        Filter = \"AWS Access Key ID Scanner\",\n    });\n\n    var mylibraryrule = new Datadog.SensitiveDataScannerRule(\"mylibraryrule\", new()\n    {\n        Name = \"My library rule\",\n        Description = \"A description\",\n        GroupId = mygroup.Id,\n        StandardPatternId = awsSp.Apply(getSensitiveDataScannerStandardPatternResult =\u003e getSensitiveDataScannerStandardPatternResult.Id),\n        ExcludedNamespaces = new[]\n        {\n            \"username\",\n        },\n        IsEnabled = true,\n        Tags = new[]\n        {\n            \"sensitive_data:true\",\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-datadog/sdk/v4/go/datadog\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tmygroup, err := datadog.NewSensitiveDataScannerGroup(ctx, \"mygroup\", \u0026datadog.SensitiveDataScannerGroupArgs{\n\t\t\tName:        pulumi.String(\"My new scanning group\"),\n\t\t\tDescription: pulumi.String(\"A relevant description\"),\n\t\t\tFilter: \u0026datadog.SensitiveDataScannerGroupFilterArgs{\n\t\t\t\tQuery: pulumi.String(\"service:my-service\"),\n\t\t\t},\n\t\t\tIsEnabled: pulumi.Bool(true),\n\t\t\tProductLists: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"apm\"),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = datadog.NewSensitiveDataScannerRule(ctx, \"myrule\", \u0026datadog.SensitiveDataScannerRuleArgs{\n\t\t\tName:        pulumi.String(\"My new rule\"),\n\t\t\tDescription: pulumi.String(\"Another description\"),\n\t\t\tGroupId:     mygroup.ID(),\n\t\t\tExcludedNamespaces: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"username\"),\n\t\t\t},\n\t\t\tIsEnabled: pulumi.Bool(true),\n\t\t\tPattern:   pulumi.String(\"myregex\"),\n\t\t\tTags: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"sensitive_data:true\"),\n\t\t\t},\n\t\t\tTextReplacement: \u0026datadog.SensitiveDataScannerRuleTextReplacementArgs{\n\t\t\t\tNumberOfChars:     pulumi.Int(0),\n\t\t\t\tReplacementString: pulumi.String(\"\"),\n\t\t\t\tType:              pulumi.String(\"hash\"),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tawsSp, err := datadog.GetSensitiveDataScannerStandardPattern(ctx, \u0026datadog.GetSensitiveDataScannerStandardPatternArgs{\n\t\t\tFilter: \"AWS Access Key ID Scanner\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = datadog.NewSensitiveDataScannerRule(ctx, \"mylibraryrule\", \u0026datadog.SensitiveDataScannerRuleArgs{\n\t\t\tName:              pulumi.String(\"My library rule\"),\n\t\t\tDescription:       pulumi.String(\"A description\"),\n\t\t\tGroupId:           mygroup.ID(),\n\t\t\tStandardPatternId: *pulumi.String(awsSp.Id),\n\t\t\tExcludedNamespaces: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"username\"),\n\t\t\t},\n\t\t\tIsEnabled: pulumi.Bool(true),\n\t\t\tTags: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"sensitive_data:true\"),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.datadog.SensitiveDataScannerGroup;\nimport com.pulumi.datadog.SensitiveDataScannerGroupArgs;\nimport com.pulumi.datadog.inputs.SensitiveDataScannerGroupFilterArgs;\nimport com.pulumi.datadog.SensitiveDataScannerRule;\nimport com.pulumi.datadog.SensitiveDataScannerRuleArgs;\nimport com.pulumi.datadog.inputs.SensitiveDataScannerRuleTextReplacementArgs;\nimport com.pulumi.datadog.DatadogFunctions;\nimport com.pulumi.datadog.inputs.GetSensitiveDataScannerStandardPatternArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var mygroup = new SensitiveDataScannerGroup(\"mygroup\", SensitiveDataScannerGroupArgs.builder()        \n            .name(\"My new scanning group\")\n            .description(\"A relevant description\")\n            .filter(SensitiveDataScannerGroupFilterArgs.builder()\n                .query(\"service:my-service\")\n                .build())\n            .isEnabled(true)\n            .productLists(\"apm\")\n            .build());\n\n        var myrule = new SensitiveDataScannerRule(\"myrule\", SensitiveDataScannerRuleArgs.builder()        \n            .name(\"My new rule\")\n            .description(\"Another description\")\n            .groupId(mygroup.id())\n            .excludedNamespaces(\"username\")\n            .isEnabled(true)\n            .pattern(\"myregex\")\n            .tags(\"sensitive_data:true\")\n            .textReplacement(SensitiveDataScannerRuleTextReplacementArgs.builder()\n                .numberOfChars(0)\n                .replacementString(\"\")\n                .type(\"hash\")\n                .build())\n            .build());\n\n        final var awsSp = DatadogFunctions.getSensitiveDataScannerStandardPattern(GetSensitiveDataScannerStandardPatternArgs.builder()\n            .filter(\"AWS Access Key ID Scanner\")\n            .build());\n\n        var mylibraryrule = new SensitiveDataScannerRule(\"mylibraryrule\", SensitiveDataScannerRuleArgs.builder()        \n            .name(\"My library rule\")\n            .description(\"A description\")\n            .groupId(mygroup.id())\n            .standardPatternId(awsSp.applyValue(getSensitiveDataScannerStandardPatternResult -\u003e getSensitiveDataScannerStandardPatternResult.id()))\n            .excludedNamespaces(\"username\")\n            .isEnabled(true)\n            .tags(\"sensitive_data:true\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  # Create new sensitive_data_scanner_rule resource in a sensitive_data_scanner_group\n  mygroup:\n    type: datadog:SensitiveDataScannerGroup\n    properties:\n      name: My new scanning group\n      description: A relevant description\n      filter:\n        query: service:my-service\n      isEnabled: true\n      productLists:\n        - apm\n  myrule:\n    type: datadog:SensitiveDataScannerRule\n    properties:\n      name: My new rule\n      description: Another description\n      groupId: ${mygroup.id}\n      excludedNamespaces:\n        - username\n      isEnabled: true\n      pattern: myregex\n      tags:\n        - sensitive_data:true\n      textReplacement:\n        numberOfChars: 0\n        replacementString:\n        type: hash\n  mylibraryrule:\n    type: datadog:SensitiveDataScannerRule\n    properties:\n      name: My library rule\n      description: A description\n      groupId: ${mygroup.id}\n      # As standard_pattern_id is provided, the resource MUST NOT contain the \"pattern\" attribute\n      standardPatternId: ${awsSp.id}\n      excludedNamespaces:\n        - username\n      isEnabled: true\n      tags:\n        - sensitive_data:true\nvariables:\n  awsSp:\n    fn::invoke:\n      Function: datadog:getSensitiveDataScannerStandardPattern\n      Arguments:\n        filter: AWS Access Key ID Scanner\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import datadog:index/sensitiveDataScannerRule:SensitiveDataScannerRule new_list \"\"\n```\n\n ",
            "properties": {
                "description": {
                    "type": "string",
                    "description": "Description of the rule.\n"
                },
                "excludedNamespaces": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Attributes excluded from the scan. If namespaces is provided, it has to be a sub-path of the namespaces array.\n"
                },
                "groupId": {
                    "type": "string",
                    "description": "Id of the scanning group the rule belongs to.\n"
                },
                "isEnabled": {
                    "type": "boolean",
                    "description": "Whether or not the rule is enabled.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the rule.\n"
                },
                "namespaces": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Attributes included in the scan. If namespaces is empty or missing, all attributes except excluded_namespaces are scanned. If both are missing the whole event is scanned.\n"
                },
                "pattern": {
                    "type": "string",
                    "description": "Not included if there is a relationship to a standard pattern.\n"
                },
                "standardPatternId": {
                    "type": "string",
                    "description": "Id of the standard pattern the rule refers to. If provided, then pattern must not be provided.\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of tags.\n"
                },
                "textReplacement": {
                    "$ref": "#/types/datadog:index/SensitiveDataScannerRuleTextReplacement:SensitiveDataScannerRuleTextReplacement",
                    "description": "Object describing how the scanned event will be replaced. Defaults to `type: none`\n"
                }
            },
            "required": [
                "groupId"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "Description of the rule.\n"
                },
                "excludedNamespaces": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Attributes excluded from the scan. If namespaces is provided, it has to be a sub-path of the namespaces array.\n"
                },
                "groupId": {
                    "type": "string",
                    "description": "Id of the scanning group the rule belongs to.\n",
                    "willReplaceOnChanges": true
                },
                "isEnabled": {
                    "type": "boolean",
                    "description": "Whether or not the rule is enabled.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the rule.\n"
                },
                "namespaces": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Attributes included in the scan. If namespaces is empty or missing, all attributes except excluded_namespaces are scanned. If both are missing the whole event is scanned.\n"
                },
                "pattern": {
                    "type": "string",
                    "description": "Not included if there is a relationship to a standard pattern.\n"
                },
                "standardPatternId": {
                    "type": "string",
                    "description": "Id of the standard pattern the rule refers to. If provided, then pattern must not be provided.\n",
                    "willReplaceOnChanges": true
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of tags.\n"
                },
                "textReplacement": {
                    "$ref": "#/types/datadog:index/SensitiveDataScannerRuleTextReplacement:SensitiveDataScannerRuleTextReplacement",
                    "description": "Object describing how the scanned event will be replaced. Defaults to `type: none`\n"
                }
            },
            "requiredInputs": [
                "groupId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SensitiveDataScannerRule resources.\n",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "Description of the rule.\n"
                    },
                    "excludedNamespaces": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Attributes excluded from the scan. If namespaces is provided, it has to be a sub-path of the namespaces array.\n"
                    },
                    "groupId": {
                        "type": "string",
                        "description": "Id of the scanning group the rule belongs to.\n",
                        "willReplaceOnChanges": true
                    },
                    "isEnabled": {
                        "type": "boolean",
                        "description": "Whether or not the rule is enabled.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the rule.\n"
                    },
                    "namespaces": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Attributes included in the scan. If namespaces is empty or missing, all attributes except excluded_namespaces are scanned. If both are missing the whole event is scanned.\n"
                    },
                    "pattern": {
                        "type": "string",
                        "description": "Not included if there is a relationship to a standard pattern.\n"
                    },
                    "standardPatternId": {
                        "type": "string",
                        "description": "Id of the standard pattern the rule refers to. If provided, then pattern must not be provided.\n",
                        "willReplaceOnChanges": true
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of tags.\n"
                    },
                    "textReplacement": {
                        "$ref": "#/types/datadog:index/SensitiveDataScannerRuleTextReplacement:SensitiveDataScannerRuleTextReplacement",
                        "description": "Object describing how the scanned event will be replaced. Defaults to `type: none`\n"
                    }
                },
                "type": "object"
            }
        },
        "datadog:index/serviceAccount:ServiceAccount": {
            "description": "Provides a Datadog service account resource. This can be used to create and manage Datadog service accounts.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as datadog from \"@pulumi/datadog\";\n\nconst roRole = datadog.getRole({\n    filter: \"Datadog Read Only Role\",\n});\n// Create a new Datadog service account\nconst bar = new datadog.ServiceAccount(\"bar\", {\n    email: \"new@example.com\",\n    name: \"Service Account Bar\",\n    roles: [roRole.then(roRole =\u003e roRole.id)],\n});\n```\n```python\nimport pulumi\nimport pulumi_datadog as datadog\n\nro_role = datadog.get_role(filter=\"Datadog Read Only Role\")\n# Create a new Datadog service account\nbar = datadog.ServiceAccount(\"bar\",\n    email=\"new@example.com\",\n    name=\"Service Account Bar\",\n    roles=[ro_role.id])\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Datadog = Pulumi.Datadog;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var roRole = Datadog.GetRole.Invoke(new()\n    {\n        Filter = \"Datadog Read Only Role\",\n    });\n\n    // Create a new Datadog service account\n    var bar = new Datadog.ServiceAccount(\"bar\", new()\n    {\n        Email = \"new@example.com\",\n        Name = \"Service Account Bar\",\n        Roles = new[]\n        {\n            roRole.Apply(getRoleResult =\u003e getRoleResult.Id),\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-datadog/sdk/v4/go/datadog\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\troRole, err := datadog.LookupRole(ctx, \u0026datadog.LookupRoleArgs{\n\t\t\tFilter: \"Datadog Read Only Role\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = datadog.NewServiceAccount(ctx, \"bar\", \u0026datadog.ServiceAccountArgs{\n\t\t\tEmail: pulumi.String(\"new@example.com\"),\n\t\t\tName:  pulumi.String(\"Service Account Bar\"),\n\t\t\tRoles: pulumi.StringArray{\n\t\t\t\t*pulumi.String(roRole.Id),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.datadog.DatadogFunctions;\nimport com.pulumi.datadog.inputs.GetRoleArgs;\nimport com.pulumi.datadog.ServiceAccount;\nimport com.pulumi.datadog.ServiceAccountArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var roRole = DatadogFunctions.getRole(GetRoleArgs.builder()\n            .filter(\"Datadog Read Only Role\")\n            .build());\n\n        var bar = new ServiceAccount(\"bar\", ServiceAccountArgs.builder()        \n            .email(\"new@example.com\")\n            .name(\"Service Account Bar\")\n            .roles(roRole.applyValue(getRoleResult -\u003e getRoleResult.id()))\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  # Create a new Datadog service account\n  bar:\n    type: datadog:ServiceAccount\n    properties:\n      email: new@example.com\n      name: Service Account Bar\n      roles:\n        - ${roRole.id}\nvariables:\n  roRole:\n    fn::invoke:\n      Function: datadog:getRole\n      Arguments:\n        filter: Datadog Read Only Role\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import datadog:index/serviceAccount:ServiceAccount example_sa 6f1b44c0-30b2-11eb-86bc-279f7c1ebaa4\n```\n\n ",
            "properties": {
                "disabled": {
                    "type": "boolean",
                    "description": "Whether the service account is disabled.\n"
                },
                "email": {
                    "type": "string",
                    "description": "Email of the associated user.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name for the service account.\n"
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list a role IDs to assign to the service account.\n"
                }
            },
            "required": [
                "email"
            ],
            "inputProperties": {
                "disabled": {
                    "type": "boolean",
                    "description": "Whether the service account is disabled.\n"
                },
                "email": {
                    "type": "string",
                    "description": "Email of the associated user.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name for the service account.\n"
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list a role IDs to assign to the service account.\n"
                }
            },
            "requiredInputs": [
                "email"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ServiceAccount resources.\n",
                "properties": {
                    "disabled": {
                        "type": "boolean",
                        "description": "Whether the service account is disabled.\n"
                    },
                    "email": {
                        "type": "string",
                        "description": "Email of the associated user.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name for the service account.\n"
                    },
                    "roles": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list a role IDs to assign to the service account.\n"
                    }
                },
                "type": "object"
            }
        },
        "datadog:index/serviceDefinitionYaml:ServiceDefinitionYaml": {
            "description": "Provides a Datadog service definition resource. This can be used to create and manage Datadog service definitions in the service catalog using the YAML/JSON definition.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as datadog from \"@pulumi/datadog\";\n\n// Service Definition with v2.1 Schema Definition\nconst serviceDefinitionV21 = new datadog.ServiceDefinitionYaml(\"serviceDefinitionV21\", {serviceDefinition: `schema-version: v2.1\ndd-service: shopping-cart\nteam: e-commerce-team\ncontacts:\n  - name: Support Email\n    type: email\n    contact: team@shopping.com\n  - name: Support Slack\n    type: slack\n    contact: https://www.slack.com/archives/shopping-cart\ndescription: shopping cart service responsible for managing shopping carts\ntier: high\nlifecycle: production\napplication: e-commerce\nlinks:\n  - name: shopping-cart runbook\n    type: runbook\n    url: https://runbook/shopping-cart\n  - name: shopping-cart architecture\n    type: doc\n    provider: gdoc\n    url: https://google.drive/shopping-cart-architecture\n  - name: shopping-cart service Wiki\n    type: doc\n    provider: wiki\n    url: https://wiki/shopping-cart\n  - name: shopping-cart source code\n    type: repo\n    provider: github\n    url: http://github/shopping-cart\ntags:\n  - business-unit:retail\n  - cost-center:engineering\nintegrations:\n  pagerduty: \n    service-url: https://www.pagerduty.com/service-directory/Pshopping-cart\nextensions:\n  mycompany.com/shopping-cart:\n    customField: customValue\n\n`});\n// Service Definition with v2 Schema Definition\nconst serviceDefinitionV2 = new datadog.ServiceDefinitionYaml(\"serviceDefinitionV2\", {serviceDefinition: `schema-version: v2\ndd-service: shopping-cart\nteam: E Commerce\ncontacts:\n  - name: Support Email\n    type: email\n    contact: team@shopping.com\n  - name: Support Slack\n    type: slack\n    contact: https://www.slack.com/archives/shopping-cart\nrepos:\n  - name: shopping-cart source code\n    provider: github\n    url: http://github/shopping-cart\ndocs:\n  - name: shopping-cart architecture\n    provider: gdoc\n    url: https://google.drive/shopping-cart-architecture\n  - name: shopping-cart service Wiki\n    provider: wiki\n    url: https://wiki/shopping-cart\nlinks:\n  - name: shopping-cart runbook\n    type: runbook\n    url: https://runbook/shopping-cart\ntags:\n  - business-unit:retail\n  - cost-center:engineering\nintegrations:\n  pagerduty: https://www.pagerduty.com/service-directory/Pshopping-cart\nextensions:\n  datadoghq.com/shopping-cart:\n    customField: customValue\n\n`});\n```\n```python\nimport pulumi\nimport pulumi_datadog as datadog\n\n# Service Definition with v2.1 Schema Definition\nservice_definition_v21 = datadog.ServiceDefinitionYaml(\"serviceDefinitionV21\", service_definition=\"\"\"schema-version: v2.1\ndd-service: shopping-cart\nteam: e-commerce-team\ncontacts:\n  - name: Support Email\n    type: email\n    contact: team@shopping.com\n  - name: Support Slack\n    type: slack\n    contact: https://www.slack.com/archives/shopping-cart\ndescription: shopping cart service responsible for managing shopping carts\ntier: high\nlifecycle: production\napplication: e-commerce\nlinks:\n  - name: shopping-cart runbook\n    type: runbook\n    url: https://runbook/shopping-cart\n  - name: shopping-cart architecture\n    type: doc\n    provider: gdoc\n    url: https://google.drive/shopping-cart-architecture\n  - name: shopping-cart service Wiki\n    type: doc\n    provider: wiki\n    url: https://wiki/shopping-cart\n  - name: shopping-cart source code\n    type: repo\n    provider: github\n    url: http://github/shopping-cart\ntags:\n  - business-unit:retail\n  - cost-center:engineering\nintegrations:\n  pagerduty: \n    service-url: https://www.pagerduty.com/service-directory/Pshopping-cart\nextensions:\n  mycompany.com/shopping-cart:\n    customField: customValue\n\n\"\"\")\n# Service Definition with v2 Schema Definition\nservice_definition_v2 = datadog.ServiceDefinitionYaml(\"serviceDefinitionV2\", service_definition=\"\"\"schema-version: v2\ndd-service: shopping-cart\nteam: E Commerce\ncontacts:\n  - name: Support Email\n    type: email\n    contact: team@shopping.com\n  - name: Support Slack\n    type: slack\n    contact: https://www.slack.com/archives/shopping-cart\nrepos:\n  - name: shopping-cart source code\n    provider: github\n    url: http://github/shopping-cart\ndocs:\n  - name: shopping-cart architecture\n    provider: gdoc\n    url: https://google.drive/shopping-cart-architecture\n  - name: shopping-cart service Wiki\n    provider: wiki\n    url: https://wiki/shopping-cart\nlinks:\n  - name: shopping-cart runbook\n    type: runbook\n    url: https://runbook/shopping-cart\ntags:\n  - business-unit:retail\n  - cost-center:engineering\nintegrations:\n  pagerduty: https://www.pagerduty.com/service-directory/Pshopping-cart\nextensions:\n  datadoghq.com/shopping-cart:\n    customField: customValue\n\n\"\"\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Datadog = Pulumi.Datadog;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    // Service Definition with v2.1 Schema Definition\n    var serviceDefinitionV21 = new Datadog.ServiceDefinitionYaml(\"serviceDefinitionV21\", new()\n    {\n        ServiceDefinition = @\"schema-version: v2.1\ndd-service: shopping-cart\nteam: e-commerce-team\ncontacts:\n  - name: Support Email\n    type: email\n    contact: team@shopping.com\n  - name: Support Slack\n    type: slack\n    contact: https://www.slack.com/archives/shopping-cart\ndescription: shopping cart service responsible for managing shopping carts\ntier: high\nlifecycle: production\napplication: e-commerce\nlinks:\n  - name: shopping-cart runbook\n    type: runbook\n    url: https://runbook/shopping-cart\n  - name: shopping-cart architecture\n    type: doc\n    provider: gdoc\n    url: https://google.drive/shopping-cart-architecture\n  - name: shopping-cart service Wiki\n    type: doc\n    provider: wiki\n    url: https://wiki/shopping-cart\n  - name: shopping-cart source code\n    type: repo\n    provider: github\n    url: http://github/shopping-cart\ntags:\n  - business-unit:retail\n  - cost-center:engineering\nintegrations:\n  pagerduty: \n    service-url: https://www.pagerduty.com/service-directory/Pshopping-cart\nextensions:\n  mycompany.com/shopping-cart:\n    customField: customValue\n\n\",\n    });\n\n    // Service Definition with v2 Schema Definition\n    var serviceDefinitionV2 = new Datadog.ServiceDefinitionYaml(\"serviceDefinitionV2\", new()\n    {\n        ServiceDefinition = @\"schema-version: v2\ndd-service: shopping-cart\nteam: E Commerce\ncontacts:\n  - name: Support Email\n    type: email\n    contact: team@shopping.com\n  - name: Support Slack\n    type: slack\n    contact: https://www.slack.com/archives/shopping-cart\nrepos:\n  - name: shopping-cart source code\n    provider: github\n    url: http://github/shopping-cart\ndocs:\n  - name: shopping-cart architecture\n    provider: gdoc\n    url: https://google.drive/shopping-cart-architecture\n  - name: shopping-cart service Wiki\n    provider: wiki\n    url: https://wiki/shopping-cart\nlinks:\n  - name: shopping-cart runbook\n    type: runbook\n    url: https://runbook/shopping-cart\ntags:\n  - business-unit:retail\n  - cost-center:engineering\nintegrations:\n  pagerduty: https://www.pagerduty.com/service-directory/Pshopping-cart\nextensions:\n  datadoghq.com/shopping-cart:\n    customField: customValue\n\n\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-datadog/sdk/v4/go/datadog\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := datadog.NewServiceDefinitionYaml(ctx, \"serviceDefinitionV21\", \u0026datadog.ServiceDefinitionYamlArgs{\n\t\t\tServiceDefinition: pulumi.String(`schema-version: v2.1\ndd-service: shopping-cart\nteam: e-commerce-team\ncontacts:\n  - name: Support Email\n    type: email\n    contact: team@shopping.com\n  - name: Support Slack\n    type: slack\n    contact: https://www.slack.com/archives/shopping-cart\ndescription: shopping cart service responsible for managing shopping carts\ntier: high\nlifecycle: production\napplication: e-commerce\nlinks:\n  - name: shopping-cart runbook\n    type: runbook\n    url: https://runbook/shopping-cart\n  - name: shopping-cart architecture\n    type: doc\n    provider: gdoc\n    url: https://google.drive/shopping-cart-architecture\n  - name: shopping-cart service Wiki\n    type: doc\n    provider: wiki\n    url: https://wiki/shopping-cart\n  - name: shopping-cart source code\n    type: repo\n    provider: github\n    url: http://github/shopping-cart\ntags:\n  - business-unit:retail\n  - cost-center:engineering\nintegrations:\n  pagerduty: \n    service-url: https://www.pagerduty.com/service-directory/Pshopping-cart\nextensions:\n  mycompany.com/shopping-cart:\n    customField: customValue\n\n`),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = datadog.NewServiceDefinitionYaml(ctx, \"serviceDefinitionV2\", \u0026datadog.ServiceDefinitionYamlArgs{\n\t\t\tServiceDefinition: pulumi.String(`schema-version: v2\ndd-service: shopping-cart\nteam: E Commerce\ncontacts:\n  - name: Support Email\n    type: email\n    contact: team@shopping.com\n  - name: Support Slack\n    type: slack\n    contact: https://www.slack.com/archives/shopping-cart\nrepos:\n  - name: shopping-cart source code\n    provider: github\n    url: http://github/shopping-cart\ndocs:\n  - name: shopping-cart architecture\n    provider: gdoc\n    url: https://google.drive/shopping-cart-architecture\n  - name: shopping-cart service Wiki\n    provider: wiki\n    url: https://wiki/shopping-cart\nlinks:\n  - name: shopping-cart runbook\n    type: runbook\n    url: https://runbook/shopping-cart\ntags:\n  - business-unit:retail\n  - cost-center:engineering\nintegrations:\n  pagerduty: https://www.pagerduty.com/service-directory/Pshopping-cart\nextensions:\n  datadoghq.com/shopping-cart:\n    customField: customValue\n\n`),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.datadog.ServiceDefinitionYaml;\nimport com.pulumi.datadog.ServiceDefinitionYamlArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var serviceDefinitionV21 = new ServiceDefinitionYaml(\"serviceDefinitionV21\", ServiceDefinitionYamlArgs.builder()        \n            .serviceDefinition(\"\"\"\nschema-version: v2.1\ndd-service: shopping-cart\nteam: e-commerce-team\ncontacts:\n  - name: Support Email\n    type: email\n    contact: team@shopping.com\n  - name: Support Slack\n    type: slack\n    contact: https://www.slack.com/archives/shopping-cart\ndescription: shopping cart service responsible for managing shopping carts\ntier: high\nlifecycle: production\napplication: e-commerce\nlinks:\n  - name: shopping-cart runbook\n    type: runbook\n    url: https://runbook/shopping-cart\n  - name: shopping-cart architecture\n    type: doc\n    provider: gdoc\n    url: https://google.drive/shopping-cart-architecture\n  - name: shopping-cart service Wiki\n    type: doc\n    provider: wiki\n    url: https://wiki/shopping-cart\n  - name: shopping-cart source code\n    type: repo\n    provider: github\n    url: http://github/shopping-cart\ntags:\n  - business-unit:retail\n  - cost-center:engineering\nintegrations:\n  pagerduty: \n    service-url: https://www.pagerduty.com/service-directory/Pshopping-cart\nextensions:\n  mycompany.com/shopping-cart:\n    customField: customValue\n\n            \"\"\")\n            .build());\n\n        var serviceDefinitionV2 = new ServiceDefinitionYaml(\"serviceDefinitionV2\", ServiceDefinitionYamlArgs.builder()        \n            .serviceDefinition(\"\"\"\nschema-version: v2\ndd-service: shopping-cart\nteam: E Commerce\ncontacts:\n  - name: Support Email\n    type: email\n    contact: team@shopping.com\n  - name: Support Slack\n    type: slack\n    contact: https://www.slack.com/archives/shopping-cart\nrepos:\n  - name: shopping-cart source code\n    provider: github\n    url: http://github/shopping-cart\ndocs:\n  - name: shopping-cart architecture\n    provider: gdoc\n    url: https://google.drive/shopping-cart-architecture\n  - name: shopping-cart service Wiki\n    provider: wiki\n    url: https://wiki/shopping-cart\nlinks:\n  - name: shopping-cart runbook\n    type: runbook\n    url: https://runbook/shopping-cart\ntags:\n  - business-unit:retail\n  - cost-center:engineering\nintegrations:\n  pagerduty: https://www.pagerduty.com/service-directory/Pshopping-cart\nextensions:\n  datadoghq.com/shopping-cart:\n    customField: customValue\n\n            \"\"\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  # Service Definition with v2.1 Schema Definition\n  serviceDefinitionV21:\n    type: datadog:ServiceDefinitionYaml\n    properties:\n      serviceDefinition: \"schema-version: v2.1\\ndd-service: shopping-cart\\nteam: e-commerce-team\\ncontacts:\\n  - name: Support Email\\n    type: email\\n    contact: team@shopping.com\\n  - name: Support Slack\\n    type: slack\\n    contact: https://www.slack.com/archives/shopping-cart\\ndescription: shopping cart service responsible for managing shopping carts\\ntier: high\\nlifecycle: production\\napplication: e-commerce\\nlinks:\\n  - name: shopping-cart runbook\\n    type: runbook\\n    url: https://runbook/shopping-cart\\n  - name: shopping-cart architecture\\n    type: doc\\n    provider: gdoc\\n    url: https://google.drive/shopping-cart-architecture\\n  - name: shopping-cart service Wiki\\n    type: doc\\n    provider: wiki\\n    url: https://wiki/shopping-cart\\n  - name: shopping-cart source code\\n    type: repo\\n    provider: github\\n    url: http://github/shopping-cart\\ntags:\\n  - business-unit:retail\\n  - cost-center:engineering\\nintegrations:\\n  pagerduty: \\n    service-url: https://www.pagerduty.com/service-directory/Pshopping-cart\\nextensions:\\n  mycompany.com/shopping-cart:\\n    customField: customValue\\n\\n\"\n  # Service Definition with v2 Schema Definition\n  serviceDefinitionV2:\n    type: datadog:ServiceDefinitionYaml\n    properties:\n      serviceDefinition: |+\n        schema-version: v2\n        dd-service: shopping-cart\n        team: E Commerce\n        contacts:\n          - name: Support Email\n            type: email\n            contact: team@shopping.com\n          - name: Support Slack\n            type: slack\n            contact: https://www.slack.com/archives/shopping-cart\n        repos:\n          - name: shopping-cart source code\n            provider: github\n            url: http://github/shopping-cart\n        docs:\n          - name: shopping-cart architecture\n            provider: gdoc\n            url: https://google.drive/shopping-cart-architecture\n          - name: shopping-cart service Wiki\n            provider: wiki\n            url: https://wiki/shopping-cart\n        links:\n          - name: shopping-cart runbook\n            type: runbook\n            url: https://runbook/shopping-cart\n        tags:\n          - business-unit:retail\n          - cost-center:engineering\n        integrations:\n          pagerduty: https://www.pagerduty.com/service-directory/Pshopping-cart\n        extensions:\n          datadoghq.com/shopping-cart:\n            customField: customValue\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import datadog:index/serviceDefinitionYaml:ServiceDefinitionYaml service_definition \"\u003cdd-service\u003e\"\n```\n\n ",
            "properties": {
                "serviceDefinition": {
                    "type": "string",
                    "description": "The YAML/JSON formatted definition of the service\n"
                }
            },
            "required": [
                "serviceDefinition"
            ],
            "inputProperties": {
                "serviceDefinition": {
                    "type": "string",
                    "description": "The YAML/JSON formatted definition of the service\n"
                }
            },
            "requiredInputs": [
                "serviceDefinition"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ServiceDefinitionYaml resources.\n",
                "properties": {
                    "serviceDefinition": {
                        "type": "string",
                        "description": "The YAML/JSON formatted definition of the service\n"
                    }
                },
                "type": "object"
            }
        },
        "datadog:index/serviceLevelObjective:ServiceLevelObjective": {
            "description": "Provides a Datadog service level objective resource. This can be used to create and manage Datadog service level objectives.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as datadog from \"@pulumi/datadog\";\n\n// Metric-Based SLO\n// Create a new Datadog service level objective\nconst foo = new datadog.ServiceLevelObjective(\"foo\", {\n    description: \"My custom metric SLO\",\n    name: \"Example Metric SLO\",\n    query: {\n        denominator: \"sum:my.custom.count.metric{*}.as_count()\",\n        numerator: \"sum:my.custom.count.metric{type:good_events}.as_count()\",\n    },\n    tags: [\n        \"foo:bar\",\n        \"baz\",\n    ],\n    targetThreshold: 99.9,\n    thresholds: [\n        {\n            target: 99.9,\n            timeframe: \"7d\",\n            warning: 99.99,\n        },\n        {\n            target: 99.9,\n            timeframe: \"30d\",\n            warning: 99.99,\n        },\n    ],\n    timeframe: \"30d\",\n    type: \"metric\",\n    warningThreshold: 99.99,\n});\n// Monitor-Based SLO\n// Create a new Datadog service level objective\nconst bar = new datadog.ServiceLevelObjective(\"bar\", {\n    description: \"My custom monitor SLO\",\n    monitorIds: [\n        1,\n        2,\n        3,\n    ],\n    name: \"Example Monitor SLO\",\n    tags: [\n        \"foo:bar\",\n        \"baz\",\n    ],\n    targetThreshold: 99.9,\n    thresholds: [\n        {\n            target: 99.9,\n            timeframe: \"7d\",\n            warning: 99.99,\n        },\n        {\n            target: 99.9,\n            timeframe: \"30d\",\n            warning: 99.99,\n        },\n    ],\n    timeframe: \"30d\",\n    type: \"monitor\",\n    warningThreshold: 99.99,\n});\n```\n```python\nimport pulumi\nimport pulumi_datadog as datadog\n\n# Metric-Based SLO\n# Create a new Datadog service level objective\nfoo = datadog.ServiceLevelObjective(\"foo\",\n    description=\"My custom metric SLO\",\n    name=\"Example Metric SLO\",\n    query=datadog.ServiceLevelObjectiveQueryArgs(\n        denominator=\"sum:my.custom.count.metric{*}.as_count()\",\n        numerator=\"sum:my.custom.count.metric{type:good_events}.as_count()\",\n    ),\n    tags=[\n        \"foo:bar\",\n        \"baz\",\n    ],\n    target_threshold=99.9,\n    thresholds=[\n        datadog.ServiceLevelObjectiveThresholdArgs(\n            target=99.9,\n            timeframe=\"7d\",\n            warning=99.99,\n        ),\n        datadog.ServiceLevelObjectiveThresholdArgs(\n            target=99.9,\n            timeframe=\"30d\",\n            warning=99.99,\n        ),\n    ],\n    timeframe=\"30d\",\n    type=\"metric\",\n    warning_threshold=99.99)\n# Monitor-Based SLO\n# Create a new Datadog service level objective\nbar = datadog.ServiceLevelObjective(\"bar\",\n    description=\"My custom monitor SLO\",\n    monitor_ids=[\n        1,\n        2,\n        3,\n    ],\n    name=\"Example Monitor SLO\",\n    tags=[\n        \"foo:bar\",\n        \"baz\",\n    ],\n    target_threshold=99.9,\n    thresholds=[\n        datadog.ServiceLevelObjectiveThresholdArgs(\n            target=99.9,\n            timeframe=\"7d\",\n            warning=99.99,\n        ),\n        datadog.ServiceLevelObjectiveThresholdArgs(\n            target=99.9,\n            timeframe=\"30d\",\n            warning=99.99,\n        ),\n    ],\n    timeframe=\"30d\",\n    type=\"monitor\",\n    warning_threshold=99.99)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Datadog = Pulumi.Datadog;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    // Metric-Based SLO\n    // Create a new Datadog service level objective\n    var foo = new Datadog.ServiceLevelObjective(\"foo\", new()\n    {\n        Description = \"My custom metric SLO\",\n        Name = \"Example Metric SLO\",\n        Query = new Datadog.Inputs.ServiceLevelObjectiveQueryArgs\n        {\n            Denominator = \"sum:my.custom.count.metric{*}.as_count()\",\n            Numerator = \"sum:my.custom.count.metric{type:good_events}.as_count()\",\n        },\n        Tags = new[]\n        {\n            \"foo:bar\",\n            \"baz\",\n        },\n        TargetThreshold = 99.9,\n        Thresholds = new[]\n        {\n            new Datadog.Inputs.ServiceLevelObjectiveThresholdArgs\n            {\n                Target = 99.9,\n                Timeframe = \"7d\",\n                Warning = 99.99,\n            },\n            new Datadog.Inputs.ServiceLevelObjectiveThresholdArgs\n            {\n                Target = 99.9,\n                Timeframe = \"30d\",\n                Warning = 99.99,\n            },\n        },\n        Timeframe = \"30d\",\n        Type = \"metric\",\n        WarningThreshold = 99.99,\n    });\n\n    // Monitor-Based SLO\n    // Create a new Datadog service level objective\n    var bar = new Datadog.ServiceLevelObjective(\"bar\", new()\n    {\n        Description = \"My custom monitor SLO\",\n        MonitorIds = new[]\n        {\n            1,\n            2,\n            3,\n        },\n        Name = \"Example Monitor SLO\",\n        Tags = new[]\n        {\n            \"foo:bar\",\n            \"baz\",\n        },\n        TargetThreshold = 99.9,\n        Thresholds = new[]\n        {\n            new Datadog.Inputs.ServiceLevelObjectiveThresholdArgs\n            {\n                Target = 99.9,\n                Timeframe = \"7d\",\n                Warning = 99.99,\n            },\n            new Datadog.Inputs.ServiceLevelObjectiveThresholdArgs\n            {\n                Target = 99.9,\n                Timeframe = \"30d\",\n                Warning = 99.99,\n            },\n        },\n        Timeframe = \"30d\",\n        Type = \"monitor\",\n        WarningThreshold = 99.99,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-datadog/sdk/v4/go/datadog\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := datadog.NewServiceLevelObjective(ctx, \"foo\", \u0026datadog.ServiceLevelObjectiveArgs{\n\t\t\tDescription: pulumi.String(\"My custom metric SLO\"),\n\t\t\tName:        pulumi.String(\"Example Metric SLO\"),\n\t\t\tQuery: \u0026datadog.ServiceLevelObjectiveQueryArgs{\n\t\t\t\tDenominator: pulumi.String(\"sum:my.custom.count.metric{*}.as_count()\"),\n\t\t\t\tNumerator:   pulumi.String(\"sum:my.custom.count.metric{type:good_events}.as_count()\"),\n\t\t\t},\n\t\t\tTags: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"foo:bar\"),\n\t\t\t\tpulumi.String(\"baz\"),\n\t\t\t},\n\t\t\tTargetThreshold: pulumi.Float64(99.9),\n\t\t\tThresholds: datadog.ServiceLevelObjectiveThresholdArray{\n\t\t\t\t\u0026datadog.ServiceLevelObjectiveThresholdArgs{\n\t\t\t\t\tTarget:    pulumi.Float64(99.9),\n\t\t\t\t\tTimeframe: pulumi.String(\"7d\"),\n\t\t\t\t\tWarning:   pulumi.Float64(99.99),\n\t\t\t\t},\n\t\t\t\t\u0026datadog.ServiceLevelObjectiveThresholdArgs{\n\t\t\t\t\tTarget:    pulumi.Float64(99.9),\n\t\t\t\t\tTimeframe: pulumi.String(\"30d\"),\n\t\t\t\t\tWarning:   pulumi.Float64(99.99),\n\t\t\t\t},\n\t\t\t},\n\t\t\tTimeframe:        pulumi.String(\"30d\"),\n\t\t\tType:             pulumi.String(\"metric\"),\n\t\t\tWarningThreshold: pulumi.Float64(99.99),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = datadog.NewServiceLevelObjective(ctx, \"bar\", \u0026datadog.ServiceLevelObjectiveArgs{\n\t\t\tDescription: pulumi.String(\"My custom monitor SLO\"),\n\t\t\tMonitorIds: pulumi.IntArray{\n\t\t\t\tpulumi.Int(1),\n\t\t\t\tpulumi.Int(2),\n\t\t\t\tpulumi.Int(3),\n\t\t\t},\n\t\t\tName: pulumi.String(\"Example Monitor SLO\"),\n\t\t\tTags: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"foo:bar\"),\n\t\t\t\tpulumi.String(\"baz\"),\n\t\t\t},\n\t\t\tTargetThreshold: pulumi.Float64(99.9),\n\t\t\tThresholds: datadog.ServiceLevelObjectiveThresholdArray{\n\t\t\t\t\u0026datadog.ServiceLevelObjectiveThresholdArgs{\n\t\t\t\t\tTarget:    pulumi.Float64(99.9),\n\t\t\t\t\tTimeframe: pulumi.String(\"7d\"),\n\t\t\t\t\tWarning:   pulumi.Float64(99.99),\n\t\t\t\t},\n\t\t\t\t\u0026datadog.ServiceLevelObjectiveThresholdArgs{\n\t\t\t\t\tTarget:    pulumi.Float64(99.9),\n\t\t\t\t\tTimeframe: pulumi.String(\"30d\"),\n\t\t\t\t\tWarning:   pulumi.Float64(99.99),\n\t\t\t\t},\n\t\t\t},\n\t\t\tTimeframe:        pulumi.String(\"30d\"),\n\t\t\tType:             pulumi.String(\"monitor\"),\n\t\t\tWarningThreshold: pulumi.Float64(99.99),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.datadog.ServiceLevelObjective;\nimport com.pulumi.datadog.ServiceLevelObjectiveArgs;\nimport com.pulumi.datadog.inputs.ServiceLevelObjectiveQueryArgs;\nimport com.pulumi.datadog.inputs.ServiceLevelObjectiveThresholdArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var foo = new ServiceLevelObjective(\"foo\", ServiceLevelObjectiveArgs.builder()        \n            .description(\"My custom metric SLO\")\n            .name(\"Example Metric SLO\")\n            .query(ServiceLevelObjectiveQueryArgs.builder()\n                .denominator(\"sum:my.custom.count.metric{*}.as_count()\")\n                .numerator(\"sum:my.custom.count.metric{type:good_events}.as_count()\")\n                .build())\n            .tags(            \n                \"foo:bar\",\n                \"baz\")\n            .targetThreshold(99.9)\n            .thresholds(            \n                ServiceLevelObjectiveThresholdArgs.builder()\n                    .target(99.9)\n                    .timeframe(\"7d\")\n                    .warning(99.99)\n                    .build(),\n                ServiceLevelObjectiveThresholdArgs.builder()\n                    .target(99.9)\n                    .timeframe(\"30d\")\n                    .warning(99.99)\n                    .build())\n            .timeframe(\"30d\")\n            .type(\"metric\")\n            .warningThreshold(99.99)\n            .build());\n\n        var bar = new ServiceLevelObjective(\"bar\", ServiceLevelObjectiveArgs.builder()        \n            .description(\"My custom monitor SLO\")\n            .monitorIds(            \n                1,\n                2,\n                3)\n            .name(\"Example Monitor SLO\")\n            .tags(            \n                \"foo:bar\",\n                \"baz\")\n            .targetThreshold(99.9)\n            .thresholds(            \n                ServiceLevelObjectiveThresholdArgs.builder()\n                    .target(99.9)\n                    .timeframe(\"7d\")\n                    .warning(99.99)\n                    .build(),\n                ServiceLevelObjectiveThresholdArgs.builder()\n                    .target(99.9)\n                    .timeframe(\"30d\")\n                    .warning(99.99)\n                    .build())\n            .timeframe(\"30d\")\n            .type(\"monitor\")\n            .warningThreshold(99.99)\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  # Metric-Based SLO\n  # // Create a new Datadog service level objective\n  foo:\n    type: datadog:ServiceLevelObjective\n    properties:\n      description: My custom metric SLO\n      name: Example Metric SLO\n      query:\n        denominator: sum:my.custom.count.metric{*}.as_count()\n        numerator: sum:my.custom.count.metric{type:good_events}.as_count()\n      tags:\n        - foo:bar\n        - baz\n      targetThreshold: 99.9\n      thresholds:\n        - target: 99.9\n          timeframe: 7d\n          warning: 99.99\n        - target: 99.9\n          timeframe: 30d\n          warning: 99.99\n      timeframe: 30d\n      type: metric\n      warningThreshold: 99.99\n  # Monitor-Based SLO\n  # // Create a new Datadog service level objective\n  bar:\n    type: datadog:ServiceLevelObjective\n    properties:\n      description: My custom monitor SLO\n      monitorIds:\n        - 1\n        - 2\n        - 3\n      name: Example Monitor SLO\n      tags:\n        - foo:bar\n        - baz\n      targetThreshold: 99.9\n      thresholds:\n        - target: 99.9\n          timeframe: 7d\n          warning: 99.99\n        - target: 99.9\n          timeframe: 30d\n          warning: 99.99\n      timeframe: 30d\n      type: monitor\n      warningThreshold: 99.99\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nService Level Objectives can be imported using their string ID, e.g.\n\n```sh\n $ pulumi import datadog:index/serviceLevelObjective:ServiceLevelObjective baz 12345678901234567890123456789012\n```\n\n ",
            "properties": {
                "description": {
                    "type": "string",
                    "description": "A description of this service level objective.\n"
                },
                "forceDelete": {
                    "type": "boolean",
                    "description": "A boolean indicating whether this monitor can be deleted even if it's referenced by other resources (for example, dashboards).\n"
                },
                "groups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A static set of groups to filter monitor-based SLOs\n"
                },
                "monitorIds": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "A static set of monitor IDs to use as part of the SLO\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of Datadog service level objective\n"
                },
                "query": {
                    "$ref": "#/types/datadog:index/ServiceLevelObjectiveQuery:ServiceLevelObjectiveQuery",
                    "description": "The metric query of good / total events\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tags to associate with your service level objective. This can help you categorize and filter service level objectives in the service level objectives page of the UI. Note: it's not currently possible to filter by these tags when querying via the API\n"
                },
                "targetThreshold": {
                    "type": "number",
                    "description": "The objective's target in `(0,100)`. This must match the corresponding thresholds of the primary time frame.\n"
                },
                "thresholds": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/ServiceLevelObjectiveThreshold:ServiceLevelObjectiveThreshold"
                    },
                    "description": "A list of thresholds and targets that define the service level objectives from the provided SLIs.\n"
                },
                "timeframe": {
                    "type": "string",
                    "description": "The primary time frame for the objective. The mapping from these types to the types found in the Datadog Web UI can be found in the Datadog API documentation page. Valid values are `7d`, `30d`, `90d`, `custom`.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The type of the service level objective. The mapping from these types to the types found in the Datadog Web UI can be found in the Datadog API [documentation page](https://docs.datadoghq.com/api/v1/service-level-objectives/#create-a-slo-object). Valid values are `metric`, `monitor`.\n"
                },
                "validate": {
                    "type": "boolean",
                    "description": "Whether or not to validate the SLO.\n"
                },
                "warningThreshold": {
                    "type": "number",
                    "description": "The objective's warning value in `(0,100)`. This must be greater than the target value and match the corresponding thresholds of the primary time frame.\n"
                }
            },
            "required": [
                "name",
                "targetThreshold",
                "thresholds",
                "timeframe",
                "type",
                "warningThreshold"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "A description of this service level objective.\n"
                },
                "forceDelete": {
                    "type": "boolean",
                    "description": "A boolean indicating whether this monitor can be deleted even if it's referenced by other resources (for example, dashboards).\n"
                },
                "groups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A static set of groups to filter monitor-based SLOs\n"
                },
                "monitorIds": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "A static set of monitor IDs to use as part of the SLO\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of Datadog service level objective\n"
                },
                "query": {
                    "$ref": "#/types/datadog:index/ServiceLevelObjectiveQuery:ServiceLevelObjectiveQuery",
                    "description": "The metric query of good / total events\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tags to associate with your service level objective. This can help you categorize and filter service level objectives in the service level objectives page of the UI. Note: it's not currently possible to filter by these tags when querying via the API\n"
                },
                "targetThreshold": {
                    "type": "number",
                    "description": "The objective's target in `(0,100)`. This must match the corresponding thresholds of the primary time frame.\n"
                },
                "thresholds": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/ServiceLevelObjectiveThreshold:ServiceLevelObjectiveThreshold"
                    },
                    "description": "A list of thresholds and targets that define the service level objectives from the provided SLIs.\n"
                },
                "timeframe": {
                    "type": "string",
                    "description": "The primary time frame for the objective. The mapping from these types to the types found in the Datadog Web UI can be found in the Datadog API documentation page. Valid values are `7d`, `30d`, `90d`, `custom`.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The type of the service level objective. The mapping from these types to the types found in the Datadog Web UI can be found in the Datadog API [documentation page](https://docs.datadoghq.com/api/v1/service-level-objectives/#create-a-slo-object). Valid values are `metric`, `monitor`.\n",
                    "willReplaceOnChanges": true
                },
                "validate": {
                    "type": "boolean",
                    "description": "Whether or not to validate the SLO.\n"
                },
                "warningThreshold": {
                    "type": "number",
                    "description": "The objective's warning value in `(0,100)`. This must be greater than the target value and match the corresponding thresholds of the primary time frame.\n"
                }
            },
            "requiredInputs": [
                "name",
                "thresholds",
                "type"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ServiceLevelObjective resources.\n",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "A description of this service level objective.\n"
                    },
                    "forceDelete": {
                        "type": "boolean",
                        "description": "A boolean indicating whether this monitor can be deleted even if it's referenced by other resources (for example, dashboards).\n"
                    },
                    "groups": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A static set of groups to filter monitor-based SLOs\n"
                    },
                    "monitorIds": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "description": "A static set of monitor IDs to use as part of the SLO\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of Datadog service level objective\n"
                    },
                    "query": {
                        "$ref": "#/types/datadog:index/ServiceLevelObjectiveQuery:ServiceLevelObjectiveQuery",
                        "description": "The metric query of good / total events\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of tags to associate with your service level objective. This can help you categorize and filter service level objectives in the service level objectives page of the UI. Note: it's not currently possible to filter by these tags when querying via the API\n"
                    },
                    "targetThreshold": {
                        "type": "number",
                        "description": "The objective's target in `(0,100)`. This must match the corresponding thresholds of the primary time frame.\n"
                    },
                    "thresholds": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/datadog:index/ServiceLevelObjectiveThreshold:ServiceLevelObjectiveThreshold"
                        },
                        "description": "A list of thresholds and targets that define the service level objectives from the provided SLIs.\n"
                    },
                    "timeframe": {
                        "type": "string",
                        "description": "The primary time frame for the objective. The mapping from these types to the types found in the Datadog Web UI can be found in the Datadog API documentation page. Valid values are `7d`, `30d`, `90d`, `custom`.\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "The type of the service level objective. The mapping from these types to the types found in the Datadog Web UI can be found in the Datadog API [documentation page](https://docs.datadoghq.com/api/v1/service-level-objectives/#create-a-slo-object). Valid values are `metric`, `monitor`.\n",
                        "willReplaceOnChanges": true
                    },
                    "validate": {
                        "type": "boolean",
                        "description": "Whether or not to validate the SLO.\n"
                    },
                    "warningThreshold": {
                        "type": "number",
                        "description": "The objective's warning value in `(0,100)`. This must be greater than the target value and match the corresponding thresholds of the primary time frame.\n"
                    }
                },
                "type": "object"
            }
        },
        "datadog:index/sloCorrection:SloCorrection": {
            "description": "Resource for interacting with the slo_correction API.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as datadog from \"@pulumi/datadog\";\n\n// Create a new Datadog SLO correction. slo_id can be derived from slo resource or specify an slo id of an existing SLO.\nconst exampleSlo = new datadog.ServiceLevelObjective(\"exampleSlo\", {\n    name: \"example slo\",\n    type: \"metric\",\n    description: \"some updated description about example_slo SLO\",\n    query: {\n        numerator: \"sum:my.metric{type:good}.as_count()\",\n        denominator: \"sum:my.metric{type:good}.as_count() + sum:my.metric{type:bad}.as_count()\",\n    },\n    thresholds: [{\n        timeframe: \"7d\",\n        target: 99.5,\n        warning: 99.8,\n    }],\n    tags: [\"foo:bar\"],\n});\nconst exampleSloCorrection = new datadog.SloCorrection(\"exampleSloCorrection\", {\n    category: \"Scheduled Maintenance\",\n    description: \"correction example\",\n    start: 1735707000,\n    end: 1735718600,\n    sloId: exampleSlo.id,\n    timezone: \"UTC\",\n});\nconst exampleSloCorrectionWithRecurrence = new datadog.SloCorrection(\"exampleSloCorrectionWithRecurrence\", {\n    category: \"Scheduled Maintenance\",\n    description: \"correction example with recurrence\",\n    start: 1735707000,\n    rrule: \"FREQ=DAILY;INTERVAL=3;COUNT=3\",\n    duration: 3600,\n    sloId: exampleSlo.id,\n    timezone: \"UTC\",\n});\n```\n```python\nimport pulumi\nimport pulumi_datadog as datadog\n\n# Create a new Datadog SLO correction. slo_id can be derived from slo resource or specify an slo id of an existing SLO.\nexample_slo = datadog.ServiceLevelObjective(\"exampleSlo\",\n    name=\"example slo\",\n    type=\"metric\",\n    description=\"some updated description about example_slo SLO\",\n    query=datadog.ServiceLevelObjectiveQueryArgs(\n        numerator=\"sum:my.metric{type:good}.as_count()\",\n        denominator=\"sum:my.metric{type:good}.as_count() + sum:my.metric{type:bad}.as_count()\",\n    ),\n    thresholds=[datadog.ServiceLevelObjectiveThresholdArgs(\n        timeframe=\"7d\",\n        target=99.5,\n        warning=99.8,\n    )],\n    tags=[\"foo:bar\"])\nexample_slo_correction = datadog.SloCorrection(\"exampleSloCorrection\",\n    category=\"Scheduled Maintenance\",\n    description=\"correction example\",\n    start=1735707000,\n    end=1735718600,\n    slo_id=example_slo.id,\n    timezone=\"UTC\")\nexample_slo_correction_with_recurrence = datadog.SloCorrection(\"exampleSloCorrectionWithRecurrence\",\n    category=\"Scheduled Maintenance\",\n    description=\"correction example with recurrence\",\n    start=1735707000,\n    rrule=\"FREQ=DAILY;INTERVAL=3;COUNT=3\",\n    duration=3600,\n    slo_id=example_slo.id,\n    timezone=\"UTC\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Datadog = Pulumi.Datadog;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    // Create a new Datadog SLO correction. slo_id can be derived from slo resource or specify an slo id of an existing SLO.\n    var exampleSlo = new Datadog.ServiceLevelObjective(\"exampleSlo\", new()\n    {\n        Name = \"example slo\",\n        Type = \"metric\",\n        Description = \"some updated description about example_slo SLO\",\n        Query = new Datadog.Inputs.ServiceLevelObjectiveQueryArgs\n        {\n            Numerator = \"sum:my.metric{type:good}.as_count()\",\n            Denominator = \"sum:my.metric{type:good}.as_count() + sum:my.metric{type:bad}.as_count()\",\n        },\n        Thresholds = new[]\n        {\n            new Datadog.Inputs.ServiceLevelObjectiveThresholdArgs\n            {\n                Timeframe = \"7d\",\n                Target = 99.5,\n                Warning = 99.8,\n            },\n        },\n        Tags = new[]\n        {\n            \"foo:bar\",\n        },\n    });\n\n    var exampleSloCorrection = new Datadog.SloCorrection(\"exampleSloCorrection\", new()\n    {\n        Category = \"Scheduled Maintenance\",\n        Description = \"correction example\",\n        Start = 1735707000,\n        End = 1735718600,\n        SloId = exampleSlo.Id,\n        Timezone = \"UTC\",\n    });\n\n    var exampleSloCorrectionWithRecurrence = new Datadog.SloCorrection(\"exampleSloCorrectionWithRecurrence\", new()\n    {\n        Category = \"Scheduled Maintenance\",\n        Description = \"correction example with recurrence\",\n        Start = 1735707000,\n        Rrule = \"FREQ=DAILY;INTERVAL=3;COUNT=3\",\n        Duration = 3600,\n        SloId = exampleSlo.Id,\n        Timezone = \"UTC\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-datadog/sdk/v4/go/datadog\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\texampleSlo, err := datadog.NewServiceLevelObjective(ctx, \"exampleSlo\", \u0026datadog.ServiceLevelObjectiveArgs{\n\t\t\tName:        pulumi.String(\"example slo\"),\n\t\t\tType:        pulumi.String(\"metric\"),\n\t\t\tDescription: pulumi.String(\"some updated description about example_slo SLO\"),\n\t\t\tQuery: \u0026datadog.ServiceLevelObjectiveQueryArgs{\n\t\t\t\tNumerator:   pulumi.String(\"sum:my.metric{type:good}.as_count()\"),\n\t\t\t\tDenominator: pulumi.String(\"sum:my.metric{type:good}.as_count() + sum:my.metric{type:bad}.as_count()\"),\n\t\t\t},\n\t\t\tThresholds: datadog.ServiceLevelObjectiveThresholdArray{\n\t\t\t\t\u0026datadog.ServiceLevelObjectiveThresholdArgs{\n\t\t\t\t\tTimeframe: pulumi.String(\"7d\"),\n\t\t\t\t\tTarget:    pulumi.Float64(99.5),\n\t\t\t\t\tWarning:   pulumi.Float64(99.8),\n\t\t\t\t},\n\t\t\t},\n\t\t\tTags: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"foo:bar\"),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = datadog.NewSloCorrection(ctx, \"exampleSloCorrection\", \u0026datadog.SloCorrectionArgs{\n\t\t\tCategory:    pulumi.String(\"Scheduled Maintenance\"),\n\t\t\tDescription: pulumi.String(\"correction example\"),\n\t\t\tStart:       pulumi.Int(1735707000),\n\t\t\tEnd:         pulumi.Int(1735718600),\n\t\t\tSloId:       exampleSlo.ID(),\n\t\t\tTimezone:    pulumi.String(\"UTC\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = datadog.NewSloCorrection(ctx, \"exampleSloCorrectionWithRecurrence\", \u0026datadog.SloCorrectionArgs{\n\t\t\tCategory:    pulumi.String(\"Scheduled Maintenance\"),\n\t\t\tDescription: pulumi.String(\"correction example with recurrence\"),\n\t\t\tStart:       pulumi.Int(1735707000),\n\t\t\tRrule:       pulumi.String(\"FREQ=DAILY;INTERVAL=3;COUNT=3\"),\n\t\t\tDuration:    pulumi.Int(3600),\n\t\t\tSloId:       exampleSlo.ID(),\n\t\t\tTimezone:    pulumi.String(\"UTC\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.datadog.ServiceLevelObjective;\nimport com.pulumi.datadog.ServiceLevelObjectiveArgs;\nimport com.pulumi.datadog.inputs.ServiceLevelObjectiveQueryArgs;\nimport com.pulumi.datadog.inputs.ServiceLevelObjectiveThresholdArgs;\nimport com.pulumi.datadog.SloCorrection;\nimport com.pulumi.datadog.SloCorrectionArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var exampleSlo = new ServiceLevelObjective(\"exampleSlo\", ServiceLevelObjectiveArgs.builder()        \n            .name(\"example slo\")\n            .type(\"metric\")\n            .description(\"some updated description about example_slo SLO\")\n            .query(ServiceLevelObjectiveQueryArgs.builder()\n                .numerator(\"sum:my.metric{type:good}.as_count()\")\n                .denominator(\"sum:my.metric{type:good}.as_count() + sum:my.metric{type:bad}.as_count()\")\n                .build())\n            .thresholds(ServiceLevelObjectiveThresholdArgs.builder()\n                .timeframe(\"7d\")\n                .target(99.5)\n                .warning(99.8)\n                .build())\n            .tags(\"foo:bar\")\n            .build());\n\n        var exampleSloCorrection = new SloCorrection(\"exampleSloCorrection\", SloCorrectionArgs.builder()        \n            .category(\"Scheduled Maintenance\")\n            .description(\"correction example\")\n            .start(1735707000)\n            .end(1735718600)\n            .sloId(exampleSlo.id())\n            .timezone(\"UTC\")\n            .build());\n\n        var exampleSloCorrectionWithRecurrence = new SloCorrection(\"exampleSloCorrectionWithRecurrence\", SloCorrectionArgs.builder()        \n            .category(\"Scheduled Maintenance\")\n            .description(\"correction example with recurrence\")\n            .start(1735707000)\n            .rrule(\"FREQ=DAILY;INTERVAL=3;COUNT=3\")\n            .duration(3600)\n            .sloId(exampleSlo.id())\n            .timezone(\"UTC\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  # Create a new Datadog SLO correction. slo_id can be derived from slo resource or specify an slo id of an existing SLO.\n  exampleSlo:\n    type: datadog:ServiceLevelObjective\n    properties:\n      name: example slo\n      type: metric\n      description: some updated description about example_slo SLO\n      query:\n        numerator: sum:my.metric{type:good}.as_count()\n        denominator: sum:my.metric{type:good}.as_count() + sum:my.metric{type:bad}.as_count()\n      thresholds:\n        - timeframe: 7d\n          target: 99.5\n          warning: 99.8\n      tags:\n        - foo:bar\n  exampleSloCorrection:\n    type: datadog:SloCorrection\n    properties:\n      category: Scheduled Maintenance\n      description: correction example\n      start: 1.735707e+09\n      end: 1.7357186e+09\n      sloId: ${exampleSlo.id}\n      timezone: UTC\n  exampleSloCorrectionWithRecurrence:\n    type: datadog:SloCorrection\n    properties:\n      category: Scheduled Maintenance\n      description: correction example with recurrence\n      start: 1.735707e+09\n      rrule: FREQ=DAILY;INTERVAL=3;COUNT=3\n      duration: 3600\n      sloId: ${exampleSlo.id}\n      timezone: UTC\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import datadog:index/sloCorrection:SloCorrection testing_slo_correction 11111111-3fee-11eb-8a13-77cd9f15119e\n```\n\n ",
            "properties": {
                "category": {
                    "type": "string",
                    "description": "Category the SLO correction belongs to. Valid values are `Scheduled Maintenance`, `Outside Business Hours`, `Deployment`, `Other`.\n"
                },
                "description": {
                    "type": "string",
                    "description": "Description of the correction being made.\n"
                },
                "duration": {
                    "type": "integer",
                    "description": "Length of time in seconds for a specified `rrule` recurring SLO correction (required if specifying `rrule`)\n"
                },
                "end": {
                    "type": "integer",
                    "description": "Ending time of the correction in epoch seconds. Required for one time corrections, but optional if `rrule` is specified\n"
                },
                "rrule": {
                    "type": "string",
                    "description": "Recurrence rules as defined in the iCalendar RFC 5545. Supported rules for SLO corrections are `FREQ`, `INTERVAL`, `COUNT` and `UNTIL`.\n"
                },
                "sloId": {
                    "type": "string",
                    "description": "ID of the SLO that this correction will be applied to.\n"
                },
                "start": {
                    "type": "integer",
                    "description": "Starting time of the correction in epoch seconds.\n"
                },
                "timezone": {
                    "type": "string",
                    "description": "The timezone to display in the UI for the correction times (defaults to \"UTC\")\n"
                }
            },
            "required": [
                "category",
                "sloId",
                "start"
            ],
            "inputProperties": {
                "category": {
                    "type": "string",
                    "description": "Category the SLO correction belongs to. Valid values are `Scheduled Maintenance`, `Outside Business Hours`, `Deployment`, `Other`.\n"
                },
                "description": {
                    "type": "string",
                    "description": "Description of the correction being made.\n"
                },
                "duration": {
                    "type": "integer",
                    "description": "Length of time in seconds for a specified `rrule` recurring SLO correction (required if specifying `rrule`)\n"
                },
                "end": {
                    "type": "integer",
                    "description": "Ending time of the correction in epoch seconds. Required for one time corrections, but optional if `rrule` is specified\n"
                },
                "rrule": {
                    "type": "string",
                    "description": "Recurrence rules as defined in the iCalendar RFC 5545. Supported rules for SLO corrections are `FREQ`, `INTERVAL`, `COUNT` and `UNTIL`.\n"
                },
                "sloId": {
                    "type": "string",
                    "description": "ID of the SLO that this correction will be applied to.\n"
                },
                "start": {
                    "type": "integer",
                    "description": "Starting time of the correction in epoch seconds.\n"
                },
                "timezone": {
                    "type": "string",
                    "description": "The timezone to display in the UI for the correction times (defaults to \"UTC\")\n"
                }
            },
            "requiredInputs": [
                "category",
                "sloId",
                "start"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SloCorrection resources.\n",
                "properties": {
                    "category": {
                        "type": "string",
                        "description": "Category the SLO correction belongs to. Valid values are `Scheduled Maintenance`, `Outside Business Hours`, `Deployment`, `Other`.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "Description of the correction being made.\n"
                    },
                    "duration": {
                        "type": "integer",
                        "description": "Length of time in seconds for a specified `rrule` recurring SLO correction (required if specifying `rrule`)\n"
                    },
                    "end": {
                        "type": "integer",
                        "description": "Ending time of the correction in epoch seconds. Required for one time corrections, but optional if `rrule` is specified\n"
                    },
                    "rrule": {
                        "type": "string",
                        "description": "Recurrence rules as defined in the iCalendar RFC 5545. Supported rules for SLO corrections are `FREQ`, `INTERVAL`, `COUNT` and `UNTIL`.\n"
                    },
                    "sloId": {
                        "type": "string",
                        "description": "ID of the SLO that this correction will be applied to.\n"
                    },
                    "start": {
                        "type": "integer",
                        "description": "Starting time of the correction in epoch seconds.\n"
                    },
                    "timezone": {
                        "type": "string",
                        "description": "The timezone to display in the UI for the correction times (defaults to \"UTC\")\n"
                    }
                },
                "type": "object"
            }
        },
        "datadog:index/spansMetric:SpansMetric": {
            "description": "Provides a Datadog SpansMetric resource. This can be used to create and manage Datadog spans_metric.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.datadog.SpansMetric;\nimport com.pulumi.datadog.SpansMetricArgs;\nimport com.pulumi.datadog.inputs.SpansMetricComputeArgs;\nimport com.pulumi.datadog.inputs.SpansMetricFilterArgs;\nimport com.pulumi.datadog.inputs.SpansMetricGroupByArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var testingSpansMetric = new SpansMetric(\"testingSpansMetric\", SpansMetricArgs.builder()        \n            .compute(SpansMetricComputeArgs.builder()\n                .aggregation_type(\"distribution\")\n                .include_percentiles(false)\n                .path(\"@duration\")\n                .build())\n            .filter(SpansMetricFilterArgs.builder()\n                .query(\"@http.status_code:200 service:my-service\")\n                .build())\n            .groupBies(SpansMetricGroupByArgs.builder()\n                .path(\"resource_name\")\n                .tagName(\"resource_name\")\n                .build())\n            .name(\"testing.span.metric\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  testingSpansMetric:\n    type: datadog:SpansMetric\n    properties:\n      compute:\n        aggregation_type: distribution\n        include_percentiles: false\n        path: '@duration'\n      filter:\n        query: '@http.status_code:200 service:my-service'\n      groupBies:\n        - path: resource_name\n          tagName: resource_name\n      name: testing.span.metric\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import datadog:index/spansMetric:SpansMetric testing_spans_metric testing.span.metric\n```\n\n ",
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:index/SpansMetricCompute:SpansMetricCompute"
                },
                "filter": {
                    "$ref": "#/types/datadog:index/SpansMetricFilter:SpansMetricFilter"
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/SpansMetricGroupBy:SpansMetricGroupBy"
                    }
                },
                "name": {
                    "type": "string",
                    "description": "The name of the span-based metric. This field can't be updated after creation.\n"
                }
            },
            "required": [
                "name"
            ],
            "inputProperties": {
                "compute": {
                    "$ref": "#/types/datadog:index/SpansMetricCompute:SpansMetricCompute"
                },
                "filter": {
                    "$ref": "#/types/datadog:index/SpansMetricFilter:SpansMetricFilter"
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/SpansMetricGroupBy:SpansMetricGroupBy"
                    }
                },
                "name": {
                    "type": "string",
                    "description": "The name of the span-based metric. This field can't be updated after creation.\n"
                }
            },
            "requiredInputs": [
                "name"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SpansMetric resources.\n",
                "properties": {
                    "compute": {
                        "$ref": "#/types/datadog:index/SpansMetricCompute:SpansMetricCompute"
                    },
                    "filter": {
                        "$ref": "#/types/datadog:index/SpansMetricFilter:SpansMetricFilter"
                    },
                    "groupBies": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/datadog:index/SpansMetricGroupBy:SpansMetricGroupBy"
                        }
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the span-based metric. This field can't be updated after creation.\n"
                    }
                },
                "type": "object"
            }
        },
        "datadog:index/syntheticsConcurrencyCap:SyntheticsConcurrencyCap": {
            "description": "Provides a Datadog Synthetics On Demand Concurrency Cap API resource. This can be used to manage the Concurrency Cap for Synthetic tests.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as datadog from \"@pulumi/datadog\";\n\n// Example Usage (Synthetics Concurrency Cap Configuration)\nconst _this = new datadog.SyntheticsConcurrencyCap(\"this\", {onDemandConcurrencyCap: 1});\n```\n```python\nimport pulumi\nimport pulumi_datadog as datadog\n\n# Example Usage (Synthetics Concurrency Cap Configuration)\nthis = datadog.SyntheticsConcurrencyCap(\"this\", on_demand_concurrency_cap=1)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Datadog = Pulumi.Datadog;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    // Example Usage (Synthetics Concurrency Cap Configuration)\n    var @this = new Datadog.SyntheticsConcurrencyCap(\"this\", new()\n    {\n        OnDemandConcurrencyCap = 1,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-datadog/sdk/v4/go/datadog\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := datadog.NewSyntheticsConcurrencyCap(ctx, \"this\", \u0026datadog.SyntheticsConcurrencyCapArgs{\n\t\t\tOnDemandConcurrencyCap: pulumi.Int(1),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.datadog.SyntheticsConcurrencyCap;\nimport com.pulumi.datadog.SyntheticsConcurrencyCapArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var this_ = new SyntheticsConcurrencyCap(\"this\", SyntheticsConcurrencyCapArgs.builder()        \n            .onDemandConcurrencyCap(1)\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  # Example Usage (Synthetics Concurrency Cap Configuration)\n  this:\n    type: datadog:SyntheticsConcurrencyCap\n    properties:\n      onDemandConcurrencyCap: 1\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nThe Synthetics concurrency cap can be imported. \u003cname\u003e can be whatever you specify in your code. Datadog does not store the name on the server.\n\n```sh\n $ pulumi import datadog:index/syntheticsConcurrencyCap:SyntheticsConcurrencyCap this \u003cname\u003e\n```\n\n ",
            "properties": {
                "onDemandConcurrencyCap": {
                    "type": "integer",
                    "description": "Value of the on-demand concurrency cap, customizing the number of Synthetic tests run in parallel.\n"
                }
            },
            "required": [
                "onDemandConcurrencyCap"
            ],
            "inputProperties": {
                "onDemandConcurrencyCap": {
                    "type": "integer",
                    "description": "Value of the on-demand concurrency cap, customizing the number of Synthetic tests run in parallel.\n"
                }
            },
            "requiredInputs": [
                "onDemandConcurrencyCap"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SyntheticsConcurrencyCap resources.\n",
                "properties": {
                    "onDemandConcurrencyCap": {
                        "type": "integer",
                        "description": "Value of the on-demand concurrency cap, customizing the number of Synthetic tests run in parallel.\n"
                    }
                },
                "type": "object"
            }
        },
        "datadog:index/syntheticsGlobalVariable:SyntheticsGlobalVariable": {
            "description": "Provides a Datadog synthetics global variable resource. This can be used to create and manage Datadog synthetics global variables.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as datadog from \"@pulumi/datadog\";\n\nconst testVariable = new datadog.SyntheticsGlobalVariable(\"testVariable\", {\n    description: \"Description of the variable\",\n    name: \"EXAMPLE_VARIABLE\",\n    tags: [\n        \"foo:bar\",\n        \"env:test\",\n    ],\n    value: \"variable-value\",\n});\n```\n```python\nimport pulumi\nimport pulumi_datadog as datadog\n\ntest_variable = datadog.SyntheticsGlobalVariable(\"testVariable\",\n    description=\"Description of the variable\",\n    name=\"EXAMPLE_VARIABLE\",\n    tags=[\n        \"foo:bar\",\n        \"env:test\",\n    ],\n    value=\"variable-value\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Datadog = Pulumi.Datadog;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var testVariable = new Datadog.SyntheticsGlobalVariable(\"testVariable\", new()\n    {\n        Description = \"Description of the variable\",\n        Name = \"EXAMPLE_VARIABLE\",\n        Tags = new[]\n        {\n            \"foo:bar\",\n            \"env:test\",\n        },\n        Value = \"variable-value\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-datadog/sdk/v4/go/datadog\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := datadog.NewSyntheticsGlobalVariable(ctx, \"testVariable\", \u0026datadog.SyntheticsGlobalVariableArgs{\n\t\t\tDescription: pulumi.String(\"Description of the variable\"),\n\t\t\tName:        pulumi.String(\"EXAMPLE_VARIABLE\"),\n\t\t\tTags: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"foo:bar\"),\n\t\t\t\tpulumi.String(\"env:test\"),\n\t\t\t},\n\t\t\tValue: pulumi.String(\"variable-value\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.datadog.SyntheticsGlobalVariable;\nimport com.pulumi.datadog.SyntheticsGlobalVariableArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var testVariable = new SyntheticsGlobalVariable(\"testVariable\", SyntheticsGlobalVariableArgs.builder()        \n            .description(\"Description of the variable\")\n            .name(\"EXAMPLE_VARIABLE\")\n            .tags(            \n                \"foo:bar\",\n                \"env:test\")\n            .value(\"variable-value\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  testVariable:\n    type: datadog:SyntheticsGlobalVariable\n    properties:\n      description: Description of the variable\n      name: EXAMPLE_VARIABLE\n      tags:\n        - foo:bar\n        - env:test\n      value: variable-value\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nSynthetics global variables can be imported using their string ID, e.g.\n\n```sh\n $ pulumi import datadog:index/syntheticsGlobalVariable:SyntheticsGlobalVariable fizz abcde123-fghi-456-jkl-mnopqrstuv\n```\n\n ",
            "properties": {
                "description": {
                    "type": "string",
                    "description": "Description of the global variable.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Synthetics global variable name.\n"
                },
                "options": {
                    "$ref": "#/types/datadog:index/SyntheticsGlobalVariableOptions:SyntheticsGlobalVariableOptions",
                    "description": "Additional options for the variable, such as a MFA token.\n"
                },
                "parseTestId": {
                    "type": "string",
                    "description": "Id of the Synthetics test to use for a variable from test.\n"
                },
                "parseTestOptions": {
                    "$ref": "#/types/datadog:index/SyntheticsGlobalVariableParseTestOptions:SyntheticsGlobalVariableParseTestOptions",
                    "description": "ID of the Synthetics test to use a source of the global variable value.\n"
                },
                "restrictedRoles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of role identifiers to associate with the Synthetics global variable.\n"
                },
                "secure": {
                    "type": "boolean",
                    "description": "If set to true, the value of the global variable is hidden. Defaults to `false`.\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tags to associate with your synthetics global variable.\n"
                },
                "value": {
                    "type": "string",
                    "description": "The value of the global variable.\n",
                    "secret": true
                }
            },
            "required": [
                "name",
                "value"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "Description of the global variable.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Synthetics global variable name.\n"
                },
                "options": {
                    "$ref": "#/types/datadog:index/SyntheticsGlobalVariableOptions:SyntheticsGlobalVariableOptions",
                    "description": "Additional options for the variable, such as a MFA token.\n"
                },
                "parseTestId": {
                    "type": "string",
                    "description": "Id of the Synthetics test to use for a variable from test.\n"
                },
                "parseTestOptions": {
                    "$ref": "#/types/datadog:index/SyntheticsGlobalVariableParseTestOptions:SyntheticsGlobalVariableParseTestOptions",
                    "description": "ID of the Synthetics test to use a source of the global variable value.\n"
                },
                "restrictedRoles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of role identifiers to associate with the Synthetics global variable.\n"
                },
                "secure": {
                    "type": "boolean",
                    "description": "If set to true, the value of the global variable is hidden. Defaults to `false`.\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tags to associate with your synthetics global variable.\n"
                },
                "value": {
                    "type": "string",
                    "description": "The value of the global variable.\n",
                    "secret": true
                }
            },
            "requiredInputs": [
                "name",
                "value"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SyntheticsGlobalVariable resources.\n",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "Description of the global variable.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Synthetics global variable name.\n"
                    },
                    "options": {
                        "$ref": "#/types/datadog:index/SyntheticsGlobalVariableOptions:SyntheticsGlobalVariableOptions",
                        "description": "Additional options for the variable, such as a MFA token.\n"
                    },
                    "parseTestId": {
                        "type": "string",
                        "description": "Id of the Synthetics test to use for a variable from test.\n"
                    },
                    "parseTestOptions": {
                        "$ref": "#/types/datadog:index/SyntheticsGlobalVariableParseTestOptions:SyntheticsGlobalVariableParseTestOptions",
                        "description": "ID of the Synthetics test to use a source of the global variable value.\n"
                    },
                    "restrictedRoles": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of role identifiers to associate with the Synthetics global variable.\n"
                    },
                    "secure": {
                        "type": "boolean",
                        "description": "If set to true, the value of the global variable is hidden. Defaults to `false`.\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of tags to associate with your synthetics global variable.\n"
                    },
                    "value": {
                        "type": "string",
                        "description": "The value of the global variable.\n",
                        "secret": true
                    }
                },
                "type": "object"
            }
        },
        "datadog:index/syntheticsPrivateLocation:SyntheticsPrivateLocation": {
            "description": "Provides a Datadog synthetics private location resource. This can be used to create and manage Datadog synthetics private locations.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as datadog from \"@pulumi/datadog\";\n\nconst privateLocation = new datadog.SyntheticsPrivateLocation(\"privateLocation\", {\n    description: \"Description of the private location\",\n    name: \"First private location\",\n    tags: [\n        \"foo:bar\",\n        \"env:test\",\n    ],\n});\n```\n```python\nimport pulumi\nimport pulumi_datadog as datadog\n\nprivate_location = datadog.SyntheticsPrivateLocation(\"privateLocation\",\n    description=\"Description of the private location\",\n    name=\"First private location\",\n    tags=[\n        \"foo:bar\",\n        \"env:test\",\n    ])\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Datadog = Pulumi.Datadog;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var privateLocation = new Datadog.SyntheticsPrivateLocation(\"privateLocation\", new()\n    {\n        Description = \"Description of the private location\",\n        Name = \"First private location\",\n        Tags = new[]\n        {\n            \"foo:bar\",\n            \"env:test\",\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-datadog/sdk/v4/go/datadog\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := datadog.NewSyntheticsPrivateLocation(ctx, \"privateLocation\", \u0026datadog.SyntheticsPrivateLocationArgs{\n\t\t\tDescription: pulumi.String(\"Description of the private location\"),\n\t\t\tName:        pulumi.String(\"First private location\"),\n\t\t\tTags: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"foo:bar\"),\n\t\t\t\tpulumi.String(\"env:test\"),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.datadog.SyntheticsPrivateLocation;\nimport com.pulumi.datadog.SyntheticsPrivateLocationArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var privateLocation = new SyntheticsPrivateLocation(\"privateLocation\", SyntheticsPrivateLocationArgs.builder()        \n            .description(\"Description of the private location\")\n            .name(\"First private location\")\n            .tags(            \n                \"foo:bar\",\n                \"env:test\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  privateLocation:\n    type: datadog:SyntheticsPrivateLocation\n    properties:\n      description: Description of the private location\n      name: First private location\n      tags:\n        - foo:bar\n        - env:test\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nSynthetics private locations can be imported using their string ID, e.g.\n\n```sh\n $ pulumi import datadog:index/syntheticsPrivateLocation:SyntheticsPrivateLocation bar pl:private-location-name-abcdef123456\n```\n\n ",
            "properties": {
                "config": {
                    "type": "string",
                    "description": "Configuration skeleton for the private location. See installation instructions of the private location on how to use this configuration.\n",
                    "secret": true
                },
                "description": {
                    "type": "string",
                    "description": "Description of the private location.\n"
                },
                "metadata": {
                    "$ref": "#/types/datadog:index/SyntheticsPrivateLocationMetadata:SyntheticsPrivateLocationMetadata",
                    "description": "The private location metadata\n"
                },
                "name": {
                    "type": "string",
                    "description": "Synthetics private location name.\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tags to associate with your synthetics private location.\n"
                }
            },
            "required": [
                "config",
                "name"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "Description of the private location.\n"
                },
                "metadata": {
                    "$ref": "#/types/datadog:index/SyntheticsPrivateLocationMetadata:SyntheticsPrivateLocationMetadata",
                    "description": "The private location metadata\n"
                },
                "name": {
                    "type": "string",
                    "description": "Synthetics private location name.\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tags to associate with your synthetics private location.\n"
                }
            },
            "requiredInputs": [
                "name"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SyntheticsPrivateLocation resources.\n",
                "properties": {
                    "config": {
                        "type": "string",
                        "description": "Configuration skeleton for the private location. See installation instructions of the private location on how to use this configuration.\n",
                        "secret": true
                    },
                    "description": {
                        "type": "string",
                        "description": "Description of the private location.\n"
                    },
                    "metadata": {
                        "$ref": "#/types/datadog:index/SyntheticsPrivateLocationMetadata:SyntheticsPrivateLocationMetadata",
                        "description": "The private location metadata\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Synthetics private location name.\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of tags to associate with your synthetics private location.\n"
                    }
                },
                "type": "object"
            }
        },
        "datadog:index/syntheticsTest:SyntheticsTest": {
            "description": "Provides a Datadog synthetics test resource. This can be used to create and manage Datadog synthetics test.\n\n#### *Warning*\nStarting from version 3.1.0+, the direct usage of global variables in the configuration is deprecated, in favor of\nlocal variables of type `global`. As an example, if you were previously using `{{ GLOBAL_VAR }}` directly in your\nconfiguration, add a `config_variable` of type `global` with the `id` matching the `id` of the global variable `GLOBAL_VAR`, which can be found in the Synthetics UI or from the output of the `datadog.SyntheticsGlobalVariable` resource. The name can be chosen freely. \n\nIn practice, it means going from (simplified configuration):\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\n```\n```python\nimport pulumi\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n    }\n}\n```\n```yaml\n{}\n```\n\nto\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\n```\n```python\nimport pulumi\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n    }\n}\n```\n```yaml\n{}\n```\n\nwhich you can now use in your request definition:\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\n```\n```python\nimport pulumi\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n    }\n}\n```\n```yaml\n{}\n```\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as datadog from \"@pulumi/datadog\";\n\n// Example Usage (Synthetics API test)\n// Create a new Datadog Synthetics API/HTTP test on https://www.example.org\nconst testUptime = new datadog.SyntheticsTest(\"testUptime\", {\n    assertions: [{\n        operator: \"is\",\n        target: \"200\",\n        type: \"statusCode\",\n    }],\n    locations: [\"aws:eu-central-1\"],\n    message: \"Notify @pagerduty\",\n    name: \"An Uptime test on example.org\",\n    optionsList: {\n        monitorOptions: {\n            renotifyInterval: 120,\n        },\n        retry: {\n            count: 2,\n            interval: 300,\n        },\n        tickEvery: 900,\n    },\n    requestDefinition: {\n        method: \"GET\",\n        url: \"https://www.example.org\",\n    },\n    requestHeaders: {\n        \"Content-Type\": \"application/json\",\n    },\n    status: \"live\",\n    subtype: \"http\",\n    tags: [\n        \"foo:bar\",\n        \"foo\",\n        \"env:test\",\n    ],\n    type: \"api\",\n});\n// Example Usage (Authenticated API test)\n// Create a new Datadog Synthetics API/HTTP test on https://www.example.org\nconst testApi = new datadog.SyntheticsTest(\"testApi\", {\n    assertions: [{\n        operator: \"is\",\n        target: \"200\",\n        type: \"statusCode\",\n    }],\n    locations: [\"aws:eu-central-1\"],\n    message: \"Notify @pagerduty\",\n    name: \"An API test on example.org\",\n    optionsList: {\n        monitorOptions: {\n            renotifyInterval: 120,\n        },\n        retry: {\n            count: 2,\n            interval: 300,\n        },\n        tickEvery: 900,\n    },\n    requestDefinition: {\n        method: \"GET\",\n        url: \"https://www.example.org\",\n    },\n    requestHeaders: {\n        Authentication: \"Token: 1234566789\",\n        \"Content-Type\": \"application/json\",\n    },\n    status: \"live\",\n    subtype: \"http\",\n    tags: [\n        \"foo:bar\",\n        \"foo\",\n        \"env:test\",\n    ],\n    type: \"api\",\n});\n// Example Usage (Synthetics SSL test)\n// Create a new Datadog Synthetics API/SSL test on example.org\nconst testSsl = new datadog.SyntheticsTest(\"testSsl\", {\n    assertions: [{\n        operator: \"isInMoreThan\",\n        target: \"30\",\n        type: \"certificate\",\n    }],\n    locations: [\"aws:eu-central-1\"],\n    message: \"Notify @pagerduty\",\n    name: \"An API test on example.org\",\n    optionsList: {\n        acceptSelfSigned: true,\n        tickEvery: 900,\n    },\n    requestDefinition: {\n        host: \"example.org\",\n        port: 443,\n    },\n    status: \"live\",\n    subtype: \"ssl\",\n    tags: [\n        \"foo:bar\",\n        \"foo\",\n        \"env:test\",\n    ],\n    type: \"api\",\n});\n// Example Usage (Synthetics TCP test)\n// Create a new Datadog Synthetics API/TCP test on example.org\nconst testTcp = new datadog.SyntheticsTest(\"testTcp\", {\n    assertions: [{\n        operator: \"lessThan\",\n        target: \"2000\",\n        type: \"responseTime\",\n    }],\n    configVariables: [{\n        id: \"76636cd1-82e2-4aeb-9cfe-51366a8198a2\",\n        name: \"MY_GLOBAL_VAR\",\n        type: \"global\",\n    }],\n    locations: [\"aws:eu-central-1\"],\n    message: \"Notify @pagerduty\",\n    name: \"An API test on example.org\",\n    optionsList: {\n        tickEvery: 900,\n    },\n    requestDefinition: {\n        host: \"example.org\",\n        port: 443,\n    },\n    status: \"live\",\n    subtype: \"tcp\",\n    tags: [\n        \"foo:bar\",\n        \"foo\",\n        \"env:test\",\n    ],\n    type: \"api\",\n});\n// Example Usage (Synthetics DNS test)\n// Create a new Datadog Synthetics API/DNS test on example.org\nconst testDns = new datadog.SyntheticsTest(\"testDns\", {\n    assertions: [{\n        operator: \"is\",\n        property: \"A\",\n        target: \"0.0.0.0\",\n        type: \"recordSome\",\n    }],\n    locations: [\"aws:eu-central-1\"],\n    message: \"Notify @pagerduty\",\n    name: \"An API test on example.org\",\n    optionsList: {\n        tickEvery: 900,\n    },\n    requestDefinition: {\n        host: \"example.org\",\n    },\n    status: \"live\",\n    subtype: \"dns\",\n    tags: [\n        \"foo:bar\",\n        \"foo\",\n        \"env:test\",\n    ],\n    type: \"api\",\n});\n// Example Usage (Synthetics Multistep API test)\n// Create a new Datadog Synthetics Multistep API test\nconst testMultiStep = new datadog.SyntheticsTest(\"testMultiStep\", {\n    apiSteps: [\n        {\n            assertions: [{\n                operator: \"is\",\n                target: \"200\",\n                type: \"statusCode\",\n            }],\n            name: \"An API test on example.org\",\n            requestDefinition: {\n                method: \"GET\",\n                url: \"https://example.org\",\n            },\n            requestHeaders: {\n                Authentication: \"Token: 1234566789\",\n                \"Content-Type\": \"application/json\",\n            },\n            subtype: \"http\",\n        },\n        {\n            assertions: [{\n                operator: \"is\",\n                target: \"200\",\n                type: \"statusCode\",\n            }],\n            name: \"An API test on example.org\",\n            requestDefinition: {\n                method: \"GET\",\n                url: \"http://example.org\",\n            },\n            subtype: \"http\",\n        },\n    ],\n    locations: [\"aws:eu-central-1\"],\n    name: \"Multistep API test\",\n    optionsList: {\n        acceptSelfSigned: true,\n        tickEvery: 900,\n    },\n    status: \"live\",\n    subtype: \"multi\",\n    tags: [\n        \"foo:bar\",\n        \"foo\",\n        \"env:test\",\n    ],\n    type: \"api\",\n});\n// Example Usage (Synthetics Browser test)\n// Create a new Datadog Synthetics Browser test starting on https://www.example.org\nconst testBrowser = new datadog.SyntheticsTest(\"testBrowser\", {\n    browserSteps: [{\n        name: \"Check current url\",\n        params: {\n            check: \"contains\",\n            value: \"datadoghq\",\n        },\n        type: \"assertCurrentUrl\",\n    }],\n    browserVariables: [\n        {\n            example: \"597\",\n            name: \"MY_PATTERN_VAR\",\n            pattern: \"{{numeric(3)}}\",\n            type: \"text\",\n        },\n        {\n            example: \"jd8-afe-ydv.4546132139@synthetics.dtdg.co\",\n            name: \"MY_EMAIL_VAR\",\n            pattern: \"jd8-afe-ydv.{{ numeric(10) }}@synthetics.dtdg.co\",\n            type: \"email\",\n        },\n        {\n            id: \"76636cd1-82e2-4aeb-9cfe-51366a8198a2\",\n            name: \"MY_GLOBAL_VAR\",\n            type: \"global\",\n        },\n    ],\n    deviceIds: [\"laptop_large\"],\n    locations: [\"aws:eu-central-1\"],\n    message: \"Notify @qa\",\n    name: \"A Browser test on example.org\",\n    optionsList: {\n        tickEvery: 3600,\n    },\n    requestDefinition: {\n        method: \"GET\",\n        url: \"https://app.datadoghq.com\",\n    },\n    status: \"paused\",\n    tags: [],\n    type: \"browser\",\n});\n```\n```python\nimport pulumi\nimport pulumi_datadog as datadog\n\n# Example Usage (Synthetics API test)\n# Create a new Datadog Synthetics API/HTTP test on https://www.example.org\ntest_uptime = datadog.SyntheticsTest(\"testUptime\",\n    assertions=[datadog.SyntheticsTestAssertionArgs(\n        operator=\"is\",\n        target=\"200\",\n        type=\"statusCode\",\n    )],\n    locations=[\"aws:eu-central-1\"],\n    message=\"Notify @pagerduty\",\n    name=\"An Uptime test on example.org\",\n    options_list=datadog.SyntheticsTestOptionsListArgs(\n        monitor_options=datadog.SyntheticsTestOptionsListMonitorOptionsArgs(\n            renotify_interval=120,\n        ),\n        retry=datadog.SyntheticsTestOptionsListRetryArgs(\n            count=2,\n            interval=300,\n        ),\n        tick_every=900,\n    ),\n    request_definition=datadog.SyntheticsTestRequestDefinitionArgs(\n        method=\"GET\",\n        url=\"https://www.example.org\",\n    ),\n    request_headers={\n        \"Content-Type\": \"application/json\",\n    },\n    status=\"live\",\n    subtype=\"http\",\n    tags=[\n        \"foo:bar\",\n        \"foo\",\n        \"env:test\",\n    ],\n    type=\"api\")\n# Example Usage (Authenticated API test)\n# Create a new Datadog Synthetics API/HTTP test on https://www.example.org\ntest_api = datadog.SyntheticsTest(\"testApi\",\n    assertions=[datadog.SyntheticsTestAssertionArgs(\n        operator=\"is\",\n        target=\"200\",\n        type=\"statusCode\",\n    )],\n    locations=[\"aws:eu-central-1\"],\n    message=\"Notify @pagerduty\",\n    name=\"An API test on example.org\",\n    options_list=datadog.SyntheticsTestOptionsListArgs(\n        monitor_options=datadog.SyntheticsTestOptionsListMonitorOptionsArgs(\n            renotify_interval=120,\n        ),\n        retry=datadog.SyntheticsTestOptionsListRetryArgs(\n            count=2,\n            interval=300,\n        ),\n        tick_every=900,\n    ),\n    request_definition=datadog.SyntheticsTestRequestDefinitionArgs(\n        method=\"GET\",\n        url=\"https://www.example.org\",\n    ),\n    request_headers={\n        \"Authentication\": \"Token: 1234566789\",\n        \"Content-Type\": \"application/json\",\n    },\n    status=\"live\",\n    subtype=\"http\",\n    tags=[\n        \"foo:bar\",\n        \"foo\",\n        \"env:test\",\n    ],\n    type=\"api\")\n# Example Usage (Synthetics SSL test)\n# Create a new Datadog Synthetics API/SSL test on example.org\ntest_ssl = datadog.SyntheticsTest(\"testSsl\",\n    assertions=[datadog.SyntheticsTestAssertionArgs(\n        operator=\"isInMoreThan\",\n        target=\"30\",\n        type=\"certificate\",\n    )],\n    locations=[\"aws:eu-central-1\"],\n    message=\"Notify @pagerduty\",\n    name=\"An API test on example.org\",\n    options_list=datadog.SyntheticsTestOptionsListArgs(\n        accept_self_signed=True,\n        tick_every=900,\n    ),\n    request_definition=datadog.SyntheticsTestRequestDefinitionArgs(\n        host=\"example.org\",\n        port=443,\n    ),\n    status=\"live\",\n    subtype=\"ssl\",\n    tags=[\n        \"foo:bar\",\n        \"foo\",\n        \"env:test\",\n    ],\n    type=\"api\")\n# Example Usage (Synthetics TCP test)\n# Create a new Datadog Synthetics API/TCP test on example.org\ntest_tcp = datadog.SyntheticsTest(\"testTcp\",\n    assertions=[datadog.SyntheticsTestAssertionArgs(\n        operator=\"lessThan\",\n        target=\"2000\",\n        type=\"responseTime\",\n    )],\n    config_variables=[datadog.SyntheticsTestConfigVariableArgs(\n        id=\"76636cd1-82e2-4aeb-9cfe-51366a8198a2\",\n        name=\"MY_GLOBAL_VAR\",\n        type=\"global\",\n    )],\n    locations=[\"aws:eu-central-1\"],\n    message=\"Notify @pagerduty\",\n    name=\"An API test on example.org\",\n    options_list=datadog.SyntheticsTestOptionsListArgs(\n        tick_every=900,\n    ),\n    request_definition=datadog.SyntheticsTestRequestDefinitionArgs(\n        host=\"example.org\",\n        port=443,\n    ),\n    status=\"live\",\n    subtype=\"tcp\",\n    tags=[\n        \"foo:bar\",\n        \"foo\",\n        \"env:test\",\n    ],\n    type=\"api\")\n# Example Usage (Synthetics DNS test)\n# Create a new Datadog Synthetics API/DNS test on example.org\ntest_dns = datadog.SyntheticsTest(\"testDns\",\n    assertions=[datadog.SyntheticsTestAssertionArgs(\n        operator=\"is\",\n        property=\"A\",\n        target=\"0.0.0.0\",\n        type=\"recordSome\",\n    )],\n    locations=[\"aws:eu-central-1\"],\n    message=\"Notify @pagerduty\",\n    name=\"An API test on example.org\",\n    options_list=datadog.SyntheticsTestOptionsListArgs(\n        tick_every=900,\n    ),\n    request_definition=datadog.SyntheticsTestRequestDefinitionArgs(\n        host=\"example.org\",\n    ),\n    status=\"live\",\n    subtype=\"dns\",\n    tags=[\n        \"foo:bar\",\n        \"foo\",\n        \"env:test\",\n    ],\n    type=\"api\")\n# Example Usage (Synthetics Multistep API test)\n# Create a new Datadog Synthetics Multistep API test\ntest_multi_step = datadog.SyntheticsTest(\"testMultiStep\",\n    api_steps=[\n        datadog.SyntheticsTestApiStepArgs(\n            assertions=[datadog.SyntheticsTestApiStepAssertionArgs(\n                operator=\"is\",\n                target=\"200\",\n                type=\"statusCode\",\n            )],\n            name=\"An API test on example.org\",\n            request_definition=datadog.SyntheticsTestApiStepRequestDefinitionArgs(\n                method=\"GET\",\n                url=\"https://example.org\",\n            ),\n            request_headers={\n                \"Authentication\": \"Token: 1234566789\",\n                \"Content-Type\": \"application/json\",\n            },\n            subtype=\"http\",\n        ),\n        datadog.SyntheticsTestApiStepArgs(\n            assertions=[datadog.SyntheticsTestApiStepAssertionArgs(\n                operator=\"is\",\n                target=\"200\",\n                type=\"statusCode\",\n            )],\n            name=\"An API test on example.org\",\n            request_definition=datadog.SyntheticsTestApiStepRequestDefinitionArgs(\n                method=\"GET\",\n                url=\"http://example.org\",\n            ),\n            subtype=\"http\",\n        ),\n    ],\n    locations=[\"aws:eu-central-1\"],\n    name=\"Multistep API test\",\n    options_list=datadog.SyntheticsTestOptionsListArgs(\n        accept_self_signed=True,\n        tick_every=900,\n    ),\n    status=\"live\",\n    subtype=\"multi\",\n    tags=[\n        \"foo:bar\",\n        \"foo\",\n        \"env:test\",\n    ],\n    type=\"api\")\n# Example Usage (Synthetics Browser test)\n# Create a new Datadog Synthetics Browser test starting on https://www.example.org\ntest_browser = datadog.SyntheticsTest(\"testBrowser\",\n    browser_steps=[datadog.SyntheticsTestBrowserStepArgs(\n        name=\"Check current url\",\n        params=datadog.SyntheticsTestBrowserStepParamsArgs(\n            check=\"contains\",\n            value=\"datadoghq\",\n        ),\n        type=\"assertCurrentUrl\",\n    )],\n    browser_variables=[\n        datadog.SyntheticsTestBrowserVariableArgs(\n            example=\"597\",\n            name=\"MY_PATTERN_VAR\",\n            pattern=\"{{numeric(3)}}\",\n            type=\"text\",\n        ),\n        datadog.SyntheticsTestBrowserVariableArgs(\n            example=\"jd8-afe-ydv.4546132139@synthetics.dtdg.co\",\n            name=\"MY_EMAIL_VAR\",\n            pattern=\"jd8-afe-ydv.{{ numeric(10) }}@synthetics.dtdg.co\",\n            type=\"email\",\n        ),\n        datadog.SyntheticsTestBrowserVariableArgs(\n            id=\"76636cd1-82e2-4aeb-9cfe-51366a8198a2\",\n            name=\"MY_GLOBAL_VAR\",\n            type=\"global\",\n        ),\n    ],\n    device_ids=[\"laptop_large\"],\n    locations=[\"aws:eu-central-1\"],\n    message=\"Notify @qa\",\n    name=\"A Browser test on example.org\",\n    options_list=datadog.SyntheticsTestOptionsListArgs(\n        tick_every=3600,\n    ),\n    request_definition=datadog.SyntheticsTestRequestDefinitionArgs(\n        method=\"GET\",\n        url=\"https://app.datadoghq.com\",\n    ),\n    status=\"paused\",\n    tags=[],\n    type=\"browser\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Datadog = Pulumi.Datadog;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    // Example Usage (Synthetics API test)\n    // Create a new Datadog Synthetics API/HTTP test on https://www.example.org\n    var testUptime = new Datadog.SyntheticsTest(\"testUptime\", new()\n    {\n        Assertions = new[]\n        {\n            new Datadog.Inputs.SyntheticsTestAssertionArgs\n            {\n                Operator = \"is\",\n                Target = \"200\",\n                Type = \"statusCode\",\n            },\n        },\n        Locations = new[]\n        {\n            \"aws:eu-central-1\",\n        },\n        Message = \"Notify @pagerduty\",\n        Name = \"An Uptime test on example.org\",\n        OptionsList = new Datadog.Inputs.SyntheticsTestOptionsListArgs\n        {\n            MonitorOptions = new Datadog.Inputs.SyntheticsTestOptionsListMonitorOptionsArgs\n            {\n                RenotifyInterval = 120,\n            },\n            Retry = new Datadog.Inputs.SyntheticsTestOptionsListRetryArgs\n            {\n                Count = 2,\n                Interval = 300,\n            },\n            TickEvery = 900,\n        },\n        RequestDefinition = new Datadog.Inputs.SyntheticsTestRequestDefinitionArgs\n        {\n            Method = \"GET\",\n            Url = \"https://www.example.org\",\n        },\n        RequestHeaders = \n        {\n            { \"Content-Type\", \"application/json\" },\n        },\n        Status = \"live\",\n        Subtype = \"http\",\n        Tags = new[]\n        {\n            \"foo:bar\",\n            \"foo\",\n            \"env:test\",\n        },\n        Type = \"api\",\n    });\n\n    // Example Usage (Authenticated API test)\n    // Create a new Datadog Synthetics API/HTTP test on https://www.example.org\n    var testApi = new Datadog.SyntheticsTest(\"testApi\", new()\n    {\n        Assertions = new[]\n        {\n            new Datadog.Inputs.SyntheticsTestAssertionArgs\n            {\n                Operator = \"is\",\n                Target = \"200\",\n                Type = \"statusCode\",\n            },\n        },\n        Locations = new[]\n        {\n            \"aws:eu-central-1\",\n        },\n        Message = \"Notify @pagerduty\",\n        Name = \"An API test on example.org\",\n        OptionsList = new Datadog.Inputs.SyntheticsTestOptionsListArgs\n        {\n            MonitorOptions = new Datadog.Inputs.SyntheticsTestOptionsListMonitorOptionsArgs\n            {\n                RenotifyInterval = 120,\n            },\n            Retry = new Datadog.Inputs.SyntheticsTestOptionsListRetryArgs\n            {\n                Count = 2,\n                Interval = 300,\n            },\n            TickEvery = 900,\n        },\n        RequestDefinition = new Datadog.Inputs.SyntheticsTestRequestDefinitionArgs\n        {\n            Method = \"GET\",\n            Url = \"https://www.example.org\",\n        },\n        RequestHeaders = \n        {\n            { \"Authentication\", \"Token: 1234566789\" },\n            { \"Content-Type\", \"application/json\" },\n        },\n        Status = \"live\",\n        Subtype = \"http\",\n        Tags = new[]\n        {\n            \"foo:bar\",\n            \"foo\",\n            \"env:test\",\n        },\n        Type = \"api\",\n    });\n\n    // Example Usage (Synthetics SSL test)\n    // Create a new Datadog Synthetics API/SSL test on example.org\n    var testSsl = new Datadog.SyntheticsTest(\"testSsl\", new()\n    {\n        Assertions = new[]\n        {\n            new Datadog.Inputs.SyntheticsTestAssertionArgs\n            {\n                Operator = \"isInMoreThan\",\n                Target = \"30\",\n                Type = \"certificate\",\n            },\n        },\n        Locations = new[]\n        {\n            \"aws:eu-central-1\",\n        },\n        Message = \"Notify @pagerduty\",\n        Name = \"An API test on example.org\",\n        OptionsList = new Datadog.Inputs.SyntheticsTestOptionsListArgs\n        {\n            AcceptSelfSigned = true,\n            TickEvery = 900,\n        },\n        RequestDefinition = new Datadog.Inputs.SyntheticsTestRequestDefinitionArgs\n        {\n            Host = \"example.org\",\n            Port = 443,\n        },\n        Status = \"live\",\n        Subtype = \"ssl\",\n        Tags = new[]\n        {\n            \"foo:bar\",\n            \"foo\",\n            \"env:test\",\n        },\n        Type = \"api\",\n    });\n\n    // Example Usage (Synthetics TCP test)\n    // Create a new Datadog Synthetics API/TCP test on example.org\n    var testTcp = new Datadog.SyntheticsTest(\"testTcp\", new()\n    {\n        Assertions = new[]\n        {\n            new Datadog.Inputs.SyntheticsTestAssertionArgs\n            {\n                Operator = \"lessThan\",\n                Target = \"2000\",\n                Type = \"responseTime\",\n            },\n        },\n        ConfigVariables = new[]\n        {\n            new Datadog.Inputs.SyntheticsTestConfigVariableArgs\n            {\n                Id = \"76636cd1-82e2-4aeb-9cfe-51366a8198a2\",\n                Name = \"MY_GLOBAL_VAR\",\n                Type = \"global\",\n            },\n        },\n        Locations = new[]\n        {\n            \"aws:eu-central-1\",\n        },\n        Message = \"Notify @pagerduty\",\n        Name = \"An API test on example.org\",\n        OptionsList = new Datadog.Inputs.SyntheticsTestOptionsListArgs\n        {\n            TickEvery = 900,\n        },\n        RequestDefinition = new Datadog.Inputs.SyntheticsTestRequestDefinitionArgs\n        {\n            Host = \"example.org\",\n            Port = 443,\n        },\n        Status = \"live\",\n        Subtype = \"tcp\",\n        Tags = new[]\n        {\n            \"foo:bar\",\n            \"foo\",\n            \"env:test\",\n        },\n        Type = \"api\",\n    });\n\n    // Example Usage (Synthetics DNS test)\n    // Create a new Datadog Synthetics API/DNS test on example.org\n    var testDns = new Datadog.SyntheticsTest(\"testDns\", new()\n    {\n        Assertions = new[]\n        {\n            new Datadog.Inputs.SyntheticsTestAssertionArgs\n            {\n                Operator = \"is\",\n                Property = \"A\",\n                Target = \"0.0.0.0\",\n                Type = \"recordSome\",\n            },\n        },\n        Locations = new[]\n        {\n            \"aws:eu-central-1\",\n        },\n        Message = \"Notify @pagerduty\",\n        Name = \"An API test on example.org\",\n        OptionsList = new Datadog.Inputs.SyntheticsTestOptionsListArgs\n        {\n            TickEvery = 900,\n        },\n        RequestDefinition = new Datadog.Inputs.SyntheticsTestRequestDefinitionArgs\n        {\n            Host = \"example.org\",\n        },\n        Status = \"live\",\n        Subtype = \"dns\",\n        Tags = new[]\n        {\n            \"foo:bar\",\n            \"foo\",\n            \"env:test\",\n        },\n        Type = \"api\",\n    });\n\n    // Example Usage (Synthetics Multistep API test)\n    // Create a new Datadog Synthetics Multistep API test\n    var testMultiStep = new Datadog.SyntheticsTest(\"testMultiStep\", new()\n    {\n        ApiSteps = new[]\n        {\n            new Datadog.Inputs.SyntheticsTestApiStepArgs\n            {\n                Assertions = new[]\n                {\n                    new Datadog.Inputs.SyntheticsTestApiStepAssertionArgs\n                    {\n                        Operator = \"is\",\n                        Target = \"200\",\n                        Type = \"statusCode\",\n                    },\n                },\n                Name = \"An API test on example.org\",\n                RequestDefinition = new Datadog.Inputs.SyntheticsTestApiStepRequestDefinitionArgs\n                {\n                    Method = \"GET\",\n                    Url = \"https://example.org\",\n                },\n                RequestHeaders = \n                {\n                    { \"Authentication\", \"Token: 1234566789\" },\n                    { \"Content-Type\", \"application/json\" },\n                },\n                Subtype = \"http\",\n            },\n            new Datadog.Inputs.SyntheticsTestApiStepArgs\n            {\n                Assertions = new[]\n                {\n                    new Datadog.Inputs.SyntheticsTestApiStepAssertionArgs\n                    {\n                        Operator = \"is\",\n                        Target = \"200\",\n                        Type = \"statusCode\",\n                    },\n                },\n                Name = \"An API test on example.org\",\n                RequestDefinition = new Datadog.Inputs.SyntheticsTestApiStepRequestDefinitionArgs\n                {\n                    Method = \"GET\",\n                    Url = \"http://example.org\",\n                },\n                Subtype = \"http\",\n            },\n        },\n        Locations = new[]\n        {\n            \"aws:eu-central-1\",\n        },\n        Name = \"Multistep API test\",\n        OptionsList = new Datadog.Inputs.SyntheticsTestOptionsListArgs\n        {\n            AcceptSelfSigned = true,\n            TickEvery = 900,\n        },\n        Status = \"live\",\n        Subtype = \"multi\",\n        Tags = new[]\n        {\n            \"foo:bar\",\n            \"foo\",\n            \"env:test\",\n        },\n        Type = \"api\",\n    });\n\n    // Example Usage (Synthetics Browser test)\n    // Create a new Datadog Synthetics Browser test starting on https://www.example.org\n    var testBrowser = new Datadog.SyntheticsTest(\"testBrowser\", new()\n    {\n        BrowserSteps = new[]\n        {\n            new Datadog.Inputs.SyntheticsTestBrowserStepArgs\n            {\n                Name = \"Check current url\",\n                Params = new Datadog.Inputs.SyntheticsTestBrowserStepParamsArgs\n                {\n                    Check = \"contains\",\n                    Value = \"datadoghq\",\n                },\n                Type = \"assertCurrentUrl\",\n            },\n        },\n        BrowserVariables = new[]\n        {\n            new Datadog.Inputs.SyntheticsTestBrowserVariableArgs\n            {\n                Example = \"597\",\n                Name = \"MY_PATTERN_VAR\",\n                Pattern = \"{{numeric(3)}}\",\n                Type = \"text\",\n            },\n            new Datadog.Inputs.SyntheticsTestBrowserVariableArgs\n            {\n                Example = \"jd8-afe-ydv.4546132139@synthetics.dtdg.co\",\n                Name = \"MY_EMAIL_VAR\",\n                Pattern = \"jd8-afe-ydv.{{ numeric(10) }}@synthetics.dtdg.co\",\n                Type = \"email\",\n            },\n            new Datadog.Inputs.SyntheticsTestBrowserVariableArgs\n            {\n                Id = \"76636cd1-82e2-4aeb-9cfe-51366a8198a2\",\n                Name = \"MY_GLOBAL_VAR\",\n                Type = \"global\",\n            },\n        },\n        DeviceIds = new[]\n        {\n            \"laptop_large\",\n        },\n        Locations = new[]\n        {\n            \"aws:eu-central-1\",\n        },\n        Message = \"Notify @qa\",\n        Name = \"A Browser test on example.org\",\n        OptionsList = new Datadog.Inputs.SyntheticsTestOptionsListArgs\n        {\n            TickEvery = 3600,\n        },\n        RequestDefinition = new Datadog.Inputs.SyntheticsTestRequestDefinitionArgs\n        {\n            Method = \"GET\",\n            Url = \"https://app.datadoghq.com\",\n        },\n        Status = \"paused\",\n        Tags = new[] {},\n        Type = \"browser\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-datadog/sdk/v4/go/datadog\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := datadog.NewSyntheticsTest(ctx, \"testUptime\", \u0026datadog.SyntheticsTestArgs{\n\t\t\tAssertions: datadog.SyntheticsTestAssertionArray{\n\t\t\t\t\u0026datadog.SyntheticsTestAssertionArgs{\n\t\t\t\t\tOperator: pulumi.String(\"is\"),\n\t\t\t\t\tTarget:   pulumi.String(\"200\"),\n\t\t\t\t\tType:     pulumi.String(\"statusCode\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tLocations: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"aws:eu-central-1\"),\n\t\t\t},\n\t\t\tMessage: pulumi.String(\"Notify @pagerduty\"),\n\t\t\tName:    pulumi.String(\"An Uptime test on example.org\"),\n\t\t\tOptionsList: \u0026datadog.SyntheticsTestOptionsListArgs{\n\t\t\t\tMonitorOptions: \u0026datadog.SyntheticsTestOptionsListMonitorOptionsArgs{\n\t\t\t\t\tRenotifyInterval: pulumi.Int(120),\n\t\t\t\t},\n\t\t\t\tRetry: \u0026datadog.SyntheticsTestOptionsListRetryArgs{\n\t\t\t\t\tCount:    pulumi.Int(2),\n\t\t\t\t\tInterval: pulumi.Int(300),\n\t\t\t\t},\n\t\t\t\tTickEvery: pulumi.Int(900),\n\t\t\t},\n\t\t\tRequestDefinition: \u0026datadog.SyntheticsTestRequestDefinitionArgs{\n\t\t\t\tMethod: pulumi.String(\"GET\"),\n\t\t\t\tUrl:    pulumi.String(\"https://www.example.org\"),\n\t\t\t},\n\t\t\tRequestHeaders: pulumi.AnyMap{\n\t\t\t\t\"Content-Type\": pulumi.Any(\"application/json\"),\n\t\t\t},\n\t\t\tStatus:  pulumi.String(\"live\"),\n\t\t\tSubtype: pulumi.String(\"http\"),\n\t\t\tTags: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"foo:bar\"),\n\t\t\t\tpulumi.String(\"foo\"),\n\t\t\t\tpulumi.String(\"env:test\"),\n\t\t\t},\n\t\t\tType: pulumi.String(\"api\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = datadog.NewSyntheticsTest(ctx, \"testApi\", \u0026datadog.SyntheticsTestArgs{\n\t\t\tAssertions: datadog.SyntheticsTestAssertionArray{\n\t\t\t\t\u0026datadog.SyntheticsTestAssertionArgs{\n\t\t\t\t\tOperator: pulumi.String(\"is\"),\n\t\t\t\t\tTarget:   pulumi.String(\"200\"),\n\t\t\t\t\tType:     pulumi.String(\"statusCode\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tLocations: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"aws:eu-central-1\"),\n\t\t\t},\n\t\t\tMessage: pulumi.String(\"Notify @pagerduty\"),\n\t\t\tName:    pulumi.String(\"An API test on example.org\"),\n\t\t\tOptionsList: \u0026datadog.SyntheticsTestOptionsListArgs{\n\t\t\t\tMonitorOptions: \u0026datadog.SyntheticsTestOptionsListMonitorOptionsArgs{\n\t\t\t\t\tRenotifyInterval: pulumi.Int(120),\n\t\t\t\t},\n\t\t\t\tRetry: \u0026datadog.SyntheticsTestOptionsListRetryArgs{\n\t\t\t\t\tCount:    pulumi.Int(2),\n\t\t\t\t\tInterval: pulumi.Int(300),\n\t\t\t\t},\n\t\t\t\tTickEvery: pulumi.Int(900),\n\t\t\t},\n\t\t\tRequestDefinition: \u0026datadog.SyntheticsTestRequestDefinitionArgs{\n\t\t\t\tMethod: pulumi.String(\"GET\"),\n\t\t\t\tUrl:    pulumi.String(\"https://www.example.org\"),\n\t\t\t},\n\t\t\tRequestHeaders: pulumi.AnyMap{\n\t\t\t\t\"Authentication\": pulumi.Any(\"Token: 1234566789\"),\n\t\t\t\t\"Content-Type\":   pulumi.Any(\"application/json\"),\n\t\t\t},\n\t\t\tStatus:  pulumi.String(\"live\"),\n\t\t\tSubtype: pulumi.String(\"http\"),\n\t\t\tTags: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"foo:bar\"),\n\t\t\t\tpulumi.String(\"foo\"),\n\t\t\t\tpulumi.String(\"env:test\"),\n\t\t\t},\n\t\t\tType: pulumi.String(\"api\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = datadog.NewSyntheticsTest(ctx, \"testSsl\", \u0026datadog.SyntheticsTestArgs{\n\t\t\tAssertions: datadog.SyntheticsTestAssertionArray{\n\t\t\t\t\u0026datadog.SyntheticsTestAssertionArgs{\n\t\t\t\t\tOperator: pulumi.String(\"isInMoreThan\"),\n\t\t\t\t\tTarget:   pulumi.String(\"30\"),\n\t\t\t\t\tType:     pulumi.String(\"certificate\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tLocations: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"aws:eu-central-1\"),\n\t\t\t},\n\t\t\tMessage: pulumi.String(\"Notify @pagerduty\"),\n\t\t\tName:    pulumi.String(\"An API test on example.org\"),\n\t\t\tOptionsList: \u0026datadog.SyntheticsTestOptionsListArgs{\n\t\t\t\tAcceptSelfSigned: pulumi.Bool(true),\n\t\t\t\tTickEvery:        pulumi.Int(900),\n\t\t\t},\n\t\t\tRequestDefinition: \u0026datadog.SyntheticsTestRequestDefinitionArgs{\n\t\t\t\tHost: pulumi.String(\"example.org\"),\n\t\t\t\tPort: pulumi.Int(443),\n\t\t\t},\n\t\t\tStatus:  pulumi.String(\"live\"),\n\t\t\tSubtype: pulumi.String(\"ssl\"),\n\t\t\tTags: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"foo:bar\"),\n\t\t\t\tpulumi.String(\"foo\"),\n\t\t\t\tpulumi.String(\"env:test\"),\n\t\t\t},\n\t\t\tType: pulumi.String(\"api\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = datadog.NewSyntheticsTest(ctx, \"testTcp\", \u0026datadog.SyntheticsTestArgs{\n\t\t\tAssertions: datadog.SyntheticsTestAssertionArray{\n\t\t\t\t\u0026datadog.SyntheticsTestAssertionArgs{\n\t\t\t\t\tOperator: pulumi.String(\"lessThan\"),\n\t\t\t\t\tTarget:   pulumi.String(\"2000\"),\n\t\t\t\t\tType:     pulumi.String(\"responseTime\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tConfigVariables: datadog.SyntheticsTestConfigVariableArray{\n\t\t\t\t\u0026datadog.SyntheticsTestConfigVariableArgs{\n\t\t\t\t\tId:   pulumi.String(\"76636cd1-82e2-4aeb-9cfe-51366a8198a2\"),\n\t\t\t\t\tName: pulumi.String(\"MY_GLOBAL_VAR\"),\n\t\t\t\t\tType: pulumi.String(\"global\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tLocations: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"aws:eu-central-1\"),\n\t\t\t},\n\t\t\tMessage: pulumi.String(\"Notify @pagerduty\"),\n\t\t\tName:    pulumi.String(\"An API test on example.org\"),\n\t\t\tOptionsList: \u0026datadog.SyntheticsTestOptionsListArgs{\n\t\t\t\tTickEvery: pulumi.Int(900),\n\t\t\t},\n\t\t\tRequestDefinition: \u0026datadog.SyntheticsTestRequestDefinitionArgs{\n\t\t\t\tHost: pulumi.String(\"example.org\"),\n\t\t\t\tPort: pulumi.Int(443),\n\t\t\t},\n\t\t\tStatus:  pulumi.String(\"live\"),\n\t\t\tSubtype: pulumi.String(\"tcp\"),\n\t\t\tTags: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"foo:bar\"),\n\t\t\t\tpulumi.String(\"foo\"),\n\t\t\t\tpulumi.String(\"env:test\"),\n\t\t\t},\n\t\t\tType: pulumi.String(\"api\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = datadog.NewSyntheticsTest(ctx, \"testDns\", \u0026datadog.SyntheticsTestArgs{\n\t\t\tAssertions: datadog.SyntheticsTestAssertionArray{\n\t\t\t\t\u0026datadog.SyntheticsTestAssertionArgs{\n\t\t\t\t\tOperator: pulumi.String(\"is\"),\n\t\t\t\t\tProperty: pulumi.String(\"A\"),\n\t\t\t\t\tTarget:   pulumi.String(\"0.0.0.0\"),\n\t\t\t\t\tType:     pulumi.String(\"recordSome\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tLocations: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"aws:eu-central-1\"),\n\t\t\t},\n\t\t\tMessage: pulumi.String(\"Notify @pagerduty\"),\n\t\t\tName:    pulumi.String(\"An API test on example.org\"),\n\t\t\tOptionsList: \u0026datadog.SyntheticsTestOptionsListArgs{\n\t\t\t\tTickEvery: pulumi.Int(900),\n\t\t\t},\n\t\t\tRequestDefinition: \u0026datadog.SyntheticsTestRequestDefinitionArgs{\n\t\t\t\tHost: pulumi.String(\"example.org\"),\n\t\t\t},\n\t\t\tStatus:  pulumi.String(\"live\"),\n\t\t\tSubtype: pulumi.String(\"dns\"),\n\t\t\tTags: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"foo:bar\"),\n\t\t\t\tpulumi.String(\"foo\"),\n\t\t\t\tpulumi.String(\"env:test\"),\n\t\t\t},\n\t\t\tType: pulumi.String(\"api\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = datadog.NewSyntheticsTest(ctx, \"testMultiStep\", \u0026datadog.SyntheticsTestArgs{\n\t\t\tApiSteps: datadog.SyntheticsTestApiStepArray{\n\t\t\t\t\u0026datadog.SyntheticsTestApiStepArgs{\n\t\t\t\t\tAssertions: datadog.SyntheticsTestApiStepAssertionArray{\n\t\t\t\t\t\t\u0026datadog.SyntheticsTestApiStepAssertionArgs{\n\t\t\t\t\t\t\tOperator: pulumi.String(\"is\"),\n\t\t\t\t\t\t\tTarget:   pulumi.String(\"200\"),\n\t\t\t\t\t\t\tType:     pulumi.String(\"statusCode\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tName: pulumi.String(\"An API test on example.org\"),\n\t\t\t\t\tRequestDefinition: \u0026datadog.SyntheticsTestApiStepRequestDefinitionArgs{\n\t\t\t\t\t\tMethod: pulumi.String(\"GET\"),\n\t\t\t\t\t\tUrl:    pulumi.String(\"https://example.org\"),\n\t\t\t\t\t},\n\t\t\t\t\tRequestHeaders: pulumi.AnyMap{\n\t\t\t\t\t\t\"Authentication\": pulumi.Any(\"Token: 1234566789\"),\n\t\t\t\t\t\t\"Content-Type\":   pulumi.Any(\"application/json\"),\n\t\t\t\t\t},\n\t\t\t\t\tSubtype: pulumi.String(\"http\"),\n\t\t\t\t},\n\t\t\t\t\u0026datadog.SyntheticsTestApiStepArgs{\n\t\t\t\t\tAssertions: datadog.SyntheticsTestApiStepAssertionArray{\n\t\t\t\t\t\t\u0026datadog.SyntheticsTestApiStepAssertionArgs{\n\t\t\t\t\t\t\tOperator: pulumi.String(\"is\"),\n\t\t\t\t\t\t\tTarget:   pulumi.String(\"200\"),\n\t\t\t\t\t\t\tType:     pulumi.String(\"statusCode\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tName: pulumi.String(\"An API test on example.org\"),\n\t\t\t\t\tRequestDefinition: \u0026datadog.SyntheticsTestApiStepRequestDefinitionArgs{\n\t\t\t\t\t\tMethod: pulumi.String(\"GET\"),\n\t\t\t\t\t\tUrl:    pulumi.String(\"http://example.org\"),\n\t\t\t\t\t},\n\t\t\t\t\tSubtype: pulumi.String(\"http\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tLocations: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"aws:eu-central-1\"),\n\t\t\t},\n\t\t\tName: pulumi.String(\"Multistep API test\"),\n\t\t\tOptionsList: \u0026datadog.SyntheticsTestOptionsListArgs{\n\t\t\t\tAcceptSelfSigned: pulumi.Bool(true),\n\t\t\t\tTickEvery:        pulumi.Int(900),\n\t\t\t},\n\t\t\tStatus:  pulumi.String(\"live\"),\n\t\t\tSubtype: pulumi.String(\"multi\"),\n\t\t\tTags: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"foo:bar\"),\n\t\t\t\tpulumi.String(\"foo\"),\n\t\t\t\tpulumi.String(\"env:test\"),\n\t\t\t},\n\t\t\tType: pulumi.String(\"api\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = datadog.NewSyntheticsTest(ctx, \"testBrowser\", \u0026datadog.SyntheticsTestArgs{\n\t\t\tBrowserSteps: datadog.SyntheticsTestBrowserStepArray{\n\t\t\t\t\u0026datadog.SyntheticsTestBrowserStepArgs{\n\t\t\t\t\tName: pulumi.String(\"Check current url\"),\n\t\t\t\t\tParams: \u0026datadog.SyntheticsTestBrowserStepParamsArgs{\n\t\t\t\t\t\tCheck: pulumi.String(\"contains\"),\n\t\t\t\t\t\tValue: pulumi.String(\"datadoghq\"),\n\t\t\t\t\t},\n\t\t\t\t\tType: pulumi.String(\"assertCurrentUrl\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tBrowserVariables: datadog.SyntheticsTestBrowserVariableArray{\n\t\t\t\t\u0026datadog.SyntheticsTestBrowserVariableArgs{\n\t\t\t\t\tExample: pulumi.String(\"597\"),\n\t\t\t\t\tName:    pulumi.String(\"MY_PATTERN_VAR\"),\n\t\t\t\t\tPattern: pulumi.String(\"{{numeric(3)}}\"),\n\t\t\t\t\tType:    pulumi.String(\"text\"),\n\t\t\t\t},\n\t\t\t\t\u0026datadog.SyntheticsTestBrowserVariableArgs{\n\t\t\t\t\tExample: pulumi.String(\"jd8-afe-ydv.4546132139@synthetics.dtdg.co\"),\n\t\t\t\t\tName:    pulumi.String(\"MY_EMAIL_VAR\"),\n\t\t\t\t\tPattern: pulumi.String(\"jd8-afe-ydv.{{ numeric(10) }}@synthetics.dtdg.co\"),\n\t\t\t\t\tType:    pulumi.String(\"email\"),\n\t\t\t\t},\n\t\t\t\t\u0026datadog.SyntheticsTestBrowserVariableArgs{\n\t\t\t\t\tId:   pulumi.String(\"76636cd1-82e2-4aeb-9cfe-51366a8198a2\"),\n\t\t\t\t\tName: pulumi.String(\"MY_GLOBAL_VAR\"),\n\t\t\t\t\tType: pulumi.String(\"global\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tDeviceIds: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"laptop_large\"),\n\t\t\t},\n\t\t\tLocations: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"aws:eu-central-1\"),\n\t\t\t},\n\t\t\tMessage: pulumi.String(\"Notify @qa\"),\n\t\t\tName:    pulumi.String(\"A Browser test on example.org\"),\n\t\t\tOptionsList: \u0026datadog.SyntheticsTestOptionsListArgs{\n\t\t\t\tTickEvery: pulumi.Int(3600),\n\t\t\t},\n\t\t\tRequestDefinition: \u0026datadog.SyntheticsTestRequestDefinitionArgs{\n\t\t\t\tMethod: pulumi.String(\"GET\"),\n\t\t\t\tUrl:    pulumi.String(\"https://app.datadoghq.com\"),\n\t\t\t},\n\t\t\tStatus: pulumi.String(\"paused\"),\n\t\t\tTags:   pulumi.StringArray{},\n\t\t\tType:   pulumi.String(\"browser\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.datadog.SyntheticsTest;\nimport com.pulumi.datadog.SyntheticsTestArgs;\nimport com.pulumi.datadog.inputs.SyntheticsTestAssertionArgs;\nimport com.pulumi.datadog.inputs.SyntheticsTestOptionsListArgs;\nimport com.pulumi.datadog.inputs.SyntheticsTestOptionsListMonitorOptionsArgs;\nimport com.pulumi.datadog.inputs.SyntheticsTestOptionsListRetryArgs;\nimport com.pulumi.datadog.inputs.SyntheticsTestRequestDefinitionArgs;\nimport com.pulumi.datadog.inputs.SyntheticsTestConfigVariableArgs;\nimport com.pulumi.datadog.inputs.SyntheticsTestApiStepArgs;\nimport com.pulumi.datadog.inputs.SyntheticsTestApiStepRequestDefinitionArgs;\nimport com.pulumi.datadog.inputs.SyntheticsTestBrowserStepArgs;\nimport com.pulumi.datadog.inputs.SyntheticsTestBrowserStepParamsArgs;\nimport com.pulumi.datadog.inputs.SyntheticsTestBrowserVariableArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var testUptime = new SyntheticsTest(\"testUptime\", SyntheticsTestArgs.builder()        \n            .assertions(SyntheticsTestAssertionArgs.builder()\n                .operator(\"is\")\n                .target(\"200\")\n                .type(\"statusCode\")\n                .build())\n            .locations(\"aws:eu-central-1\")\n            .message(\"Notify @pagerduty\")\n            .name(\"An Uptime test on example.org\")\n            .optionsList(SyntheticsTestOptionsListArgs.builder()\n                .monitorOptions(SyntheticsTestOptionsListMonitorOptionsArgs.builder()\n                    .renotifyInterval(120)\n                    .build())\n                .retry(SyntheticsTestOptionsListRetryArgs.builder()\n                    .count(2)\n                    .interval(300)\n                    .build())\n                .tickEvery(900)\n                .build())\n            .requestDefinition(SyntheticsTestRequestDefinitionArgs.builder()\n                .method(\"GET\")\n                .url(\"https://www.example.org\")\n                .build())\n            .requestHeaders(Map.of(\"Content-Type\", \"application/json\"))\n            .status(\"live\")\n            .subtype(\"http\")\n            .tags(            \n                \"foo:bar\",\n                \"foo\",\n                \"env:test\")\n            .type(\"api\")\n            .build());\n\n        var testApi = new SyntheticsTest(\"testApi\", SyntheticsTestArgs.builder()        \n            .assertions(SyntheticsTestAssertionArgs.builder()\n                .operator(\"is\")\n                .target(\"200\")\n                .type(\"statusCode\")\n                .build())\n            .locations(\"aws:eu-central-1\")\n            .message(\"Notify @pagerduty\")\n            .name(\"An API test on example.org\")\n            .optionsList(SyntheticsTestOptionsListArgs.builder()\n                .monitorOptions(SyntheticsTestOptionsListMonitorOptionsArgs.builder()\n                    .renotifyInterval(120)\n                    .build())\n                .retry(SyntheticsTestOptionsListRetryArgs.builder()\n                    .count(2)\n                    .interval(300)\n                    .build())\n                .tickEvery(900)\n                .build())\n            .requestDefinition(SyntheticsTestRequestDefinitionArgs.builder()\n                .method(\"GET\")\n                .url(\"https://www.example.org\")\n                .build())\n            .requestHeaders(Map.ofEntries(\n                Map.entry(\"Authentication\", \"Token: 1234566789\"),\n                Map.entry(\"Content-Type\", \"application/json\")\n            ))\n            .status(\"live\")\n            .subtype(\"http\")\n            .tags(            \n                \"foo:bar\",\n                \"foo\",\n                \"env:test\")\n            .type(\"api\")\n            .build());\n\n        var testSsl = new SyntheticsTest(\"testSsl\", SyntheticsTestArgs.builder()        \n            .assertions(SyntheticsTestAssertionArgs.builder()\n                .operator(\"isInMoreThan\")\n                .target(30)\n                .type(\"certificate\")\n                .build())\n            .locations(\"aws:eu-central-1\")\n            .message(\"Notify @pagerduty\")\n            .name(\"An API test on example.org\")\n            .optionsList(SyntheticsTestOptionsListArgs.builder()\n                .acceptSelfSigned(true)\n                .tickEvery(900)\n                .build())\n            .requestDefinition(SyntheticsTestRequestDefinitionArgs.builder()\n                .host(\"example.org\")\n                .port(443)\n                .build())\n            .status(\"live\")\n            .subtype(\"ssl\")\n            .tags(            \n                \"foo:bar\",\n                \"foo\",\n                \"env:test\")\n            .type(\"api\")\n            .build());\n\n        var testTcp = new SyntheticsTest(\"testTcp\", SyntheticsTestArgs.builder()        \n            .assertions(SyntheticsTestAssertionArgs.builder()\n                .operator(\"lessThan\")\n                .target(2000)\n                .type(\"responseTime\")\n                .build())\n            .configVariables(SyntheticsTestConfigVariableArgs.builder()\n                .id(\"76636cd1-82e2-4aeb-9cfe-51366a8198a2\")\n                .name(\"MY_GLOBAL_VAR\")\n                .type(\"global\")\n                .build())\n            .locations(\"aws:eu-central-1\")\n            .message(\"Notify @pagerduty\")\n            .name(\"An API test on example.org\")\n            .optionsList(SyntheticsTestOptionsListArgs.builder()\n                .tickEvery(900)\n                .build())\n            .requestDefinition(SyntheticsTestRequestDefinitionArgs.builder()\n                .host(\"example.org\")\n                .port(443)\n                .build())\n            .status(\"live\")\n            .subtype(\"tcp\")\n            .tags(            \n                \"foo:bar\",\n                \"foo\",\n                \"env:test\")\n            .type(\"api\")\n            .build());\n\n        var testDns = new SyntheticsTest(\"testDns\", SyntheticsTestArgs.builder()        \n            .assertions(SyntheticsTestAssertionArgs.builder()\n                .operator(\"is\")\n                .property(\"A\")\n                .target(\"0.0.0.0\")\n                .type(\"recordSome\")\n                .build())\n            .locations(\"aws:eu-central-1\")\n            .message(\"Notify @pagerduty\")\n            .name(\"An API test on example.org\")\n            .optionsList(SyntheticsTestOptionsListArgs.builder()\n                .tickEvery(900)\n                .build())\n            .requestDefinition(SyntheticsTestRequestDefinitionArgs.builder()\n                .host(\"example.org\")\n                .build())\n            .status(\"live\")\n            .subtype(\"dns\")\n            .tags(            \n                \"foo:bar\",\n                \"foo\",\n                \"env:test\")\n            .type(\"api\")\n            .build());\n\n        var testMultiStep = new SyntheticsTest(\"testMultiStep\", SyntheticsTestArgs.builder()        \n            .apiSteps(            \n                SyntheticsTestApiStepArgs.builder()\n                    .assertions(SyntheticsTestApiStepAssertionArgs.builder()\n                        .operator(\"is\")\n                        .target(\"200\")\n                        .type(\"statusCode\")\n                        .build())\n                    .name(\"An API test on example.org\")\n                    .requestDefinition(SyntheticsTestApiStepRequestDefinitionArgs.builder()\n                        .method(\"GET\")\n                        .url(\"https://example.org\")\n                        .build())\n                    .requestHeaders(Map.ofEntries(\n                        Map.entry(\"Authentication\", \"Token: 1234566789\"),\n                        Map.entry(\"Content-Type\", \"application/json\")\n                    ))\n                    .subtype(\"http\")\n                    .build(),\n                SyntheticsTestApiStepArgs.builder()\n                    .assertions(SyntheticsTestApiStepAssertionArgs.builder()\n                        .operator(\"is\")\n                        .target(\"200\")\n                        .type(\"statusCode\")\n                        .build())\n                    .name(\"An API test on example.org\")\n                    .requestDefinition(SyntheticsTestApiStepRequestDefinitionArgs.builder()\n                        .method(\"GET\")\n                        .url(\"http://example.org\")\n                        .build())\n                    .subtype(\"http\")\n                    .build())\n            .locations(\"aws:eu-central-1\")\n            .name(\"Multistep API test\")\n            .optionsList(SyntheticsTestOptionsListArgs.builder()\n                .acceptSelfSigned(true)\n                .tickEvery(900)\n                .build())\n            .status(\"live\")\n            .subtype(\"multi\")\n            .tags(            \n                \"foo:bar\",\n                \"foo\",\n                \"env:test\")\n            .type(\"api\")\n            .build());\n\n        var testBrowser = new SyntheticsTest(\"testBrowser\", SyntheticsTestArgs.builder()        \n            .browserSteps(SyntheticsTestBrowserStepArgs.builder()\n                .name(\"Check current url\")\n                .params(SyntheticsTestBrowserStepParamsArgs.builder()\n                    .check(\"contains\")\n                    .value(\"datadoghq\")\n                    .build())\n                .type(\"assertCurrentUrl\")\n                .build())\n            .browserVariables(            \n                SyntheticsTestBrowserVariableArgs.builder()\n                    .example(\"597\")\n                    .name(\"MY_PATTERN_VAR\")\n                    .pattern(\"{{numeric(3)}}\")\n                    .type(\"text\")\n                    .build(),\n                SyntheticsTestBrowserVariableArgs.builder()\n                    .example(\"jd8-afe-ydv.4546132139@synthetics.dtdg.co\")\n                    .name(\"MY_EMAIL_VAR\")\n                    .pattern(\"jd8-afe-ydv.{{ numeric(10) }}@synthetics.dtdg.co\")\n                    .type(\"email\")\n                    .build(),\n                SyntheticsTestBrowserVariableArgs.builder()\n                    .id(\"76636cd1-82e2-4aeb-9cfe-51366a8198a2\")\n                    .name(\"MY_GLOBAL_VAR\")\n                    .type(\"global\")\n                    .build())\n            .deviceIds(\"laptop_large\")\n            .locations(\"aws:eu-central-1\")\n            .message(\"Notify @qa\")\n            .name(\"A Browser test on example.org\")\n            .optionsList(SyntheticsTestOptionsListArgs.builder()\n                .tickEvery(3600)\n                .build())\n            .requestDefinition(SyntheticsTestRequestDefinitionArgs.builder()\n                .method(\"GET\")\n                .url(\"https://app.datadoghq.com\")\n                .build())\n            .status(\"paused\")\n            .tags()\n            .type(\"browser\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  # Example Usage (Synthetics API test)\n  # // Create a new Datadog Synthetics API/HTTP test on https://www.example.org\n  testUptime:\n    type: datadog:SyntheticsTest\n    properties:\n      assertions:\n        - operator: is\n          target: '200'\n          type: statusCode\n      locations:\n        - aws:eu-central-1\n      message: Notify @pagerduty\n      name: An Uptime test on example.org\n      optionsList:\n        monitorOptions:\n          renotifyInterval: 120\n        retry:\n          count: 2\n          interval: 300\n        tickEvery: 900\n      requestDefinition:\n        method: GET\n        url: https://www.example.org\n      requestHeaders:\n        Content-Type: application/json\n      status: live\n      subtype: http\n      tags:\n        - foo:bar\n        - foo\n        - env:test\n      type: api\n  # Example Usage (Authenticated API test)\n  # // Create a new Datadog Synthetics API/HTTP test on https://www.example.org\n  testApi:\n    type: datadog:SyntheticsTest\n    properties:\n      assertions:\n        - operator: is\n          target: '200'\n          type: statusCode\n      locations:\n        - aws:eu-central-1\n      message: Notify @pagerduty\n      name: An API test on example.org\n      optionsList:\n        monitorOptions:\n          renotifyInterval: 120\n        retry:\n          count: 2\n          interval: 300\n        tickEvery: 900\n      requestDefinition:\n        method: GET\n        url: https://www.example.org\n      requestHeaders:\n        Authentication: 'Token: 1234566789'\n        Content-Type: application/json\n      status: live\n      subtype: http\n      tags:\n        - foo:bar\n        - foo\n        - env:test\n      type: api\n  # Example Usage (Synthetics SSL test)\n  # // Create a new Datadog Synthetics API/SSL test on example.org\n  testSsl:\n    type: datadog:SyntheticsTest\n    properties:\n      assertions:\n        - operator: isInMoreThan\n          target: 30\n          type: certificate\n      locations:\n        - aws:eu-central-1\n      message: Notify @pagerduty\n      name: An API test on example.org\n      optionsList:\n        acceptSelfSigned: true\n        tickEvery: 900\n      requestDefinition:\n        host: example.org\n        port: 443\n      status: live\n      subtype: ssl\n      tags:\n        - foo:bar\n        - foo\n        - env:test\n      type: api\n  # Example Usage (Synthetics TCP test)\n  # // Create a new Datadog Synthetics API/TCP test on example.org\n  testTcp:\n    type: datadog:SyntheticsTest\n    properties:\n      assertions:\n        - operator: lessThan\n          target: 2000\n          type: responseTime\n      configVariables:\n        - id: 76636cd1-82e2-4aeb-9cfe-51366a8198a2\n          name: MY_GLOBAL_VAR\n          type: global\n      locations:\n        - aws:eu-central-1\n      message: Notify @pagerduty\n      name: An API test on example.org\n      optionsList:\n        tickEvery: 900\n      requestDefinition:\n        host: example.org\n        port: 443\n      status: live\n      subtype: tcp\n      tags:\n        - foo:bar\n        - foo\n        - env:test\n      type: api\n  # Example Usage (Synthetics DNS test)\n  # // Create a new Datadog Synthetics API/DNS test on example.org\n  testDns:\n    type: datadog:SyntheticsTest\n    properties:\n      assertions:\n        - operator: is\n          property: A\n          target: 0.0.0.0\n          type: recordSome\n      locations:\n        - aws:eu-central-1\n      message: Notify @pagerduty\n      name: An API test on example.org\n      optionsList:\n        tickEvery: 900\n      requestDefinition:\n        host: example.org\n      status: live\n      subtype: dns\n      tags:\n        - foo:bar\n        - foo\n        - env:test\n      type: api\n  # Example Usage (Synthetics Multistep API test)\n  # // Create a new Datadog Synthetics Multistep API test\n  testMultiStep:\n    type: datadog:SyntheticsTest\n    properties:\n      apiSteps:\n        - assertions:\n            - operator: is\n              target: '200'\n              type: statusCode\n          name: An API test on example.org\n          requestDefinition:\n            method: GET\n            url: https://example.org\n          requestHeaders:\n            Authentication: 'Token: 1234566789'\n            Content-Type: application/json\n          subtype: http\n        - assertions:\n            - operator: is\n              target: '200'\n              type: statusCode\n          name: An API test on example.org\n          requestDefinition:\n            method: GET\n            url: http://example.org\n          subtype: http\n      locations:\n        - aws:eu-central-1\n      name: Multistep API test\n      optionsList:\n        acceptSelfSigned: true\n        tickEvery: 900\n      status: live\n      subtype: multi\n      tags:\n        - foo:bar\n        - foo\n        - env:test\n      type: api\n  # Example Usage (Synthetics Browser test)\n  # // Create a new Datadog Synthetics Browser test starting on https://www.example.org\n  testBrowser:\n    type: datadog:SyntheticsTest\n    properties:\n      browserSteps:\n        - name: Check current url\n          params:\n            check: contains\n            value: datadoghq\n          type: assertCurrentUrl\n      browserVariables:\n        - example: '597'\n          name: MY_PATTERN_VAR\n          pattern: '{{numeric(3)}}'\n          type: text\n        - example: jd8-afe-ydv.4546132139@synthetics.dtdg.co\n          name: MY_EMAIL_VAR\n          pattern: jd8-afe-ydv.{{ numeric(10) }}@synthetics.dtdg.co\n          type: email\n        - id: 76636cd1-82e2-4aeb-9cfe-51366a8198a2\n          name: MY_GLOBAL_VAR\n          type: global\n      deviceIds:\n        - laptop_large\n      locations:\n        - aws:eu-central-1\n      message: Notify @qa\n      name: A Browser test on example.org\n      optionsList:\n        tickEvery: 3600\n      requestDefinition:\n        method: GET\n        url: https://app.datadoghq.com\n      status: paused\n      tags: []\n      type: browser\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nSynthetics tests can be imported using their public string ID, e.g.\n\n```sh\n $ pulumi import datadog:index/syntheticsTest:SyntheticsTest fizz abc-123-xyz\n```\n\n ",
            "properties": {
                "apiSteps": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/SyntheticsTestApiStep:SyntheticsTestApiStep"
                    },
                    "description": "Steps for multistep api tests\n"
                },
                "assertions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/SyntheticsTestAssertion:SyntheticsTestAssertion"
                    },
                    "description": "Assertions used for the test. Multiple `assertion` blocks are allowed with the structure below.\n"
                },
                "browserSteps": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/SyntheticsTestBrowserStep:SyntheticsTestBrowserStep"
                    },
                    "description": "Steps for browser tests.\n"
                },
                "browserVariables": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/SyntheticsTestBrowserVariable:SyntheticsTestBrowserVariable"
                    },
                    "description": "Variables used for a browser test steps. Multiple `variable` blocks are allowed with the structure below.\n"
                },
                "configVariables": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/SyntheticsTestConfigVariable:SyntheticsTestConfigVariable"
                    },
                    "description": "Variables used for the test configuration. Multiple `config_variable` blocks are allowed with the structure below.\n"
                },
                "deviceIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Required if `type = \"browser\"`. Array with the different device IDs used to run the test. Valid values are `laptop_large`, `tablet`, `mobile_small`, `chrome.laptop_large`, `chrome.tablet`, `chrome.mobile_small`, `firefox.laptop_large`, `firefox.tablet`, `firefox.mobile_small`, `edge.laptop_large`, `edge.tablet`, `edge.mobile_small`.\n"
                },
                "locations": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Array of locations used to run the test. Refer to the Datadog Synthetics location data source to retrieve the list of locations.\n"
                },
                "message": {
                    "type": "string",
                    "description": "A message to include with notifications for this synthetics test. Email notifications can be sent to specific users by using the same `@username` notation as events.\n"
                },
                "monitorId": {
                    "type": "integer",
                    "description": "ID of the monitor associated with the Datadog synthetics test.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of Datadog synthetics test.\n"
                },
                "optionsList": {
                    "$ref": "#/types/datadog:index/SyntheticsTestOptionsList:SyntheticsTestOptionsList"
                },
                "requestBasicauth": {
                    "$ref": "#/types/datadog:index/SyntheticsTestRequestBasicauth:SyntheticsTestRequestBasicauth",
                    "description": "The HTTP basic authentication credentials. Exactly one nested block is allowed with the structure below.\n"
                },
                "requestClientCertificate": {
                    "$ref": "#/types/datadog:index/SyntheticsTestRequestClientCertificate:SyntheticsTestRequestClientCertificate",
                    "description": "Client certificate to use when performing the test request. Exactly one nested block is allowed with the structure below.\n"
                },
                "requestDefinition": {
                    "$ref": "#/types/datadog:index/SyntheticsTestRequestDefinition:SyntheticsTestRequestDefinition",
                    "description": "Required if `type = \"api\"`. The synthetics test request.\n"
                },
                "requestHeaders": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "description": "Header name and value map.\n"
                },
                "requestProxy": {
                    "$ref": "#/types/datadog:index/SyntheticsTestRequestProxy:SyntheticsTestRequestProxy",
                    "description": "The proxy to perform the test.\n"
                },
                "requestQuery": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "description": "Query arguments name and value map.\n"
                },
                "setCookie": {
                    "type": "string",
                    "description": "Cookies to be used for a browser test request, using the [Set-Cookie](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Set-Cookie) syntax.\n"
                },
                "status": {
                    "type": "string",
                    "description": "Define whether you want to start (`live`) or pause (`paused`) a Synthetic test. Valid values are `live`, `paused`.\n"
                },
                "subtype": {
                    "type": "string",
                    "description": "The subtype of the Synthetic API test. Defaults to `http`. Valid values are `http`, `ssl`, `tcp`, `dns`, `multi`, `icmp`, `udp`, `websocket`, `grpc`.\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tags to associate with your synthetics test. This can help you categorize and filter tests in the manage synthetics page of the UI. Default is an empty list (`[]`).\n"
                },
                "type": {
                    "type": "string",
                    "description": "Synthetics test type. Valid values are `api`, `browser`.\n"
                }
            },
            "required": [
                "locations",
                "monitorId",
                "name",
                "status",
                "type"
            ],
            "inputProperties": {
                "apiSteps": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/SyntheticsTestApiStep:SyntheticsTestApiStep"
                    },
                    "description": "Steps for multistep api tests\n"
                },
                "assertions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/SyntheticsTestAssertion:SyntheticsTestAssertion"
                    },
                    "description": "Assertions used for the test. Multiple `assertion` blocks are allowed with the structure below.\n"
                },
                "browserSteps": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/SyntheticsTestBrowserStep:SyntheticsTestBrowserStep"
                    },
                    "description": "Steps for browser tests.\n"
                },
                "browserVariables": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/SyntheticsTestBrowserVariable:SyntheticsTestBrowserVariable"
                    },
                    "description": "Variables used for a browser test steps. Multiple `variable` blocks are allowed with the structure below.\n"
                },
                "configVariables": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/SyntheticsTestConfigVariable:SyntheticsTestConfigVariable"
                    },
                    "description": "Variables used for the test configuration. Multiple `config_variable` blocks are allowed with the structure below.\n"
                },
                "deviceIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Required if `type = \"browser\"`. Array with the different device IDs used to run the test. Valid values are `laptop_large`, `tablet`, `mobile_small`, `chrome.laptop_large`, `chrome.tablet`, `chrome.mobile_small`, `firefox.laptop_large`, `firefox.tablet`, `firefox.mobile_small`, `edge.laptop_large`, `edge.tablet`, `edge.mobile_small`.\n"
                },
                "locations": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Array of locations used to run the test. Refer to the Datadog Synthetics location data source to retrieve the list of locations.\n"
                },
                "message": {
                    "type": "string",
                    "description": "A message to include with notifications for this synthetics test. Email notifications can be sent to specific users by using the same `@username` notation as events.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of Datadog synthetics test.\n"
                },
                "optionsList": {
                    "$ref": "#/types/datadog:index/SyntheticsTestOptionsList:SyntheticsTestOptionsList"
                },
                "requestBasicauth": {
                    "$ref": "#/types/datadog:index/SyntheticsTestRequestBasicauth:SyntheticsTestRequestBasicauth",
                    "description": "The HTTP basic authentication credentials. Exactly one nested block is allowed with the structure below.\n"
                },
                "requestClientCertificate": {
                    "$ref": "#/types/datadog:index/SyntheticsTestRequestClientCertificate:SyntheticsTestRequestClientCertificate",
                    "description": "Client certificate to use when performing the test request. Exactly one nested block is allowed with the structure below.\n"
                },
                "requestDefinition": {
                    "$ref": "#/types/datadog:index/SyntheticsTestRequestDefinition:SyntheticsTestRequestDefinition",
                    "description": "Required if `type = \"api\"`. The synthetics test request.\n"
                },
                "requestHeaders": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "description": "Header name and value map.\n"
                },
                "requestProxy": {
                    "$ref": "#/types/datadog:index/SyntheticsTestRequestProxy:SyntheticsTestRequestProxy",
                    "description": "The proxy to perform the test.\n"
                },
                "requestQuery": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "description": "Query arguments name and value map.\n"
                },
                "setCookie": {
                    "type": "string",
                    "description": "Cookies to be used for a browser test request, using the [Set-Cookie](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Set-Cookie) syntax.\n"
                },
                "status": {
                    "type": "string",
                    "description": "Define whether you want to start (`live`) or pause (`paused`) a Synthetic test. Valid values are `live`, `paused`.\n"
                },
                "subtype": {
                    "type": "string",
                    "description": "The subtype of the Synthetic API test. Defaults to `http`. Valid values are `http`, `ssl`, `tcp`, `dns`, `multi`, `icmp`, `udp`, `websocket`, `grpc`.\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tags to associate with your synthetics test. This can help you categorize and filter tests in the manage synthetics page of the UI. Default is an empty list (`[]`).\n"
                },
                "type": {
                    "type": "string",
                    "description": "Synthetics test type. Valid values are `api`, `browser`.\n"
                }
            },
            "requiredInputs": [
                "locations",
                "name",
                "status",
                "type"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SyntheticsTest resources.\n",
                "properties": {
                    "apiSteps": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/datadog:index/SyntheticsTestApiStep:SyntheticsTestApiStep"
                        },
                        "description": "Steps for multistep api tests\n"
                    },
                    "assertions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/datadog:index/SyntheticsTestAssertion:SyntheticsTestAssertion"
                        },
                        "description": "Assertions used for the test. Multiple `assertion` blocks are allowed with the structure below.\n"
                    },
                    "browserSteps": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/datadog:index/SyntheticsTestBrowserStep:SyntheticsTestBrowserStep"
                        },
                        "description": "Steps for browser tests.\n"
                    },
                    "browserVariables": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/datadog:index/SyntheticsTestBrowserVariable:SyntheticsTestBrowserVariable"
                        },
                        "description": "Variables used for a browser test steps. Multiple `variable` blocks are allowed with the structure below.\n"
                    },
                    "configVariables": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/datadog:index/SyntheticsTestConfigVariable:SyntheticsTestConfigVariable"
                        },
                        "description": "Variables used for the test configuration. Multiple `config_variable` blocks are allowed with the structure below.\n"
                    },
                    "deviceIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Required if `type = \"browser\"`. Array with the different device IDs used to run the test. Valid values are `laptop_large`, `tablet`, `mobile_small`, `chrome.laptop_large`, `chrome.tablet`, `chrome.mobile_small`, `firefox.laptop_large`, `firefox.tablet`, `firefox.mobile_small`, `edge.laptop_large`, `edge.tablet`, `edge.mobile_small`.\n"
                    },
                    "locations": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Array of locations used to run the test. Refer to the Datadog Synthetics location data source to retrieve the list of locations.\n"
                    },
                    "message": {
                        "type": "string",
                        "description": "A message to include with notifications for this synthetics test. Email notifications can be sent to specific users by using the same `@username` notation as events.\n"
                    },
                    "monitorId": {
                        "type": "integer",
                        "description": "ID of the monitor associated with the Datadog synthetics test.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of Datadog synthetics test.\n"
                    },
                    "optionsList": {
                        "$ref": "#/types/datadog:index/SyntheticsTestOptionsList:SyntheticsTestOptionsList"
                    },
                    "requestBasicauth": {
                        "$ref": "#/types/datadog:index/SyntheticsTestRequestBasicauth:SyntheticsTestRequestBasicauth",
                        "description": "The HTTP basic authentication credentials. Exactly one nested block is allowed with the structure below.\n"
                    },
                    "requestClientCertificate": {
                        "$ref": "#/types/datadog:index/SyntheticsTestRequestClientCertificate:SyntheticsTestRequestClientCertificate",
                        "description": "Client certificate to use when performing the test request. Exactly one nested block is allowed with the structure below.\n"
                    },
                    "requestDefinition": {
                        "$ref": "#/types/datadog:index/SyntheticsTestRequestDefinition:SyntheticsTestRequestDefinition",
                        "description": "Required if `type = \"api\"`. The synthetics test request.\n"
                    },
                    "requestHeaders": {
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "pulumi.json#/Any"
                        },
                        "description": "Header name and value map.\n"
                    },
                    "requestProxy": {
                        "$ref": "#/types/datadog:index/SyntheticsTestRequestProxy:SyntheticsTestRequestProxy",
                        "description": "The proxy to perform the test.\n"
                    },
                    "requestQuery": {
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "pulumi.json#/Any"
                        },
                        "description": "Query arguments name and value map.\n"
                    },
                    "setCookie": {
                        "type": "string",
                        "description": "Cookies to be used for a browser test request, using the [Set-Cookie](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Set-Cookie) syntax.\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "Define whether you want to start (`live`) or pause (`paused`) a Synthetic test. Valid values are `live`, `paused`.\n"
                    },
                    "subtype": {
                        "type": "string",
                        "description": "The subtype of the Synthetic API test. Defaults to `http`. Valid values are `http`, `ssl`, `tcp`, `dns`, `multi`, `icmp`, `udp`, `websocket`, `grpc`.\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of tags to associate with your synthetics test. This can help you categorize and filter tests in the manage synthetics page of the UI. Default is an empty list (`[]`).\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "Synthetics test type. Valid values are `api`, `browser`.\n"
                    }
                },
                "type": "object"
            }
        },
        "datadog:index/team:Team": {
            "description": "Provides a Datadog Team resource. This can be used to create and manage Datadog team.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as datadog from \"@pulumi/datadog\";\n\nconst foo = new datadog.Team(\"foo\", {\n    description: \"Team description\",\n    handle: \"example-team\",\n    name: \"Example Team\",\n});\n```\n```python\nimport pulumi\nimport pulumi_datadog as datadog\n\nfoo = datadog.Team(\"foo\",\n    description=\"Team description\",\n    handle=\"example-team\",\n    name=\"Example Team\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Datadog = Pulumi.Datadog;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var foo = new Datadog.Team(\"foo\", new()\n    {\n        Description = \"Team description\",\n        Handle = \"example-team\",\n        Name = \"Example Team\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-datadog/sdk/v4/go/datadog\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := datadog.NewTeam(ctx, \"foo\", \u0026datadog.TeamArgs{\n\t\t\tDescription: pulumi.String(\"Team description\"),\n\t\t\tHandle:      pulumi.String(\"example-team\"),\n\t\t\tName:        pulumi.String(\"Example Team\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.datadog.Team;\nimport com.pulumi.datadog.TeamArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var foo = new Team(\"foo\", TeamArgs.builder()        \n            .description(\"Team description\")\n            .handle(\"example-team\")\n            .name(\"Example Team\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  foo:\n    type: datadog:Team\n    properties:\n      description: Team description\n      handle: example-team\n      name: Example Team\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import datadog:index/team:Team foo \"bf064c56-edb0-11ed-ae91-da7ad0900002\"\n```\n\n ",
            "properties": {
                "description": {
                    "type": "string",
                    "description": "Free-form markdown description/content for the team's homepage.\n"
                },
                "handle": {
                    "type": "string",
                    "description": "The team's identifier\n"
                },
                "linkCount": {
                    "type": "integer",
                    "description": "The number of links belonging to the team.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the team.\n"
                },
                "summary": {
                    "type": "string",
                    "description": "A brief summary of the team, derived from the `description`.\n"
                },
                "userCount": {
                    "type": "integer",
                    "description": "The number of users belonging to the team.\n"
                }
            },
            "required": [
                "description",
                "handle",
                "linkCount",
                "name",
                "summary",
                "userCount"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "Free-form markdown description/content for the team's homepage.\n"
                },
                "handle": {
                    "type": "string",
                    "description": "The team's identifier\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the team.\n"
                }
            },
            "requiredInputs": [
                "description",
                "handle",
                "name"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Team resources.\n",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "Free-form markdown description/content for the team's homepage.\n"
                    },
                    "handle": {
                        "type": "string",
                        "description": "The team's identifier\n"
                    },
                    "linkCount": {
                        "type": "integer",
                        "description": "The number of links belonging to the team.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the team.\n"
                    },
                    "summary": {
                        "type": "string",
                        "description": "A brief summary of the team, derived from the `description`.\n"
                    },
                    "userCount": {
                        "type": "integer",
                        "description": "The number of users belonging to the team.\n"
                    }
                },
                "type": "object"
            }
        },
        "datadog:index/teamLink:TeamLink": {
            "description": "Provides a Datadog TeamLink resource. This can be used to create and manage Datadog team_link.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as datadog from \"@pulumi/datadog\";\n\nconst fooTeam = new datadog.Team(\"fooTeam\", {\n    description: \"Example team\",\n    handle: \"example-team-updated\",\n    name: \"Example Team-updated\",\n});\n// Create new team_link resource\nconst fooTeamLink = new datadog.TeamLink(\"fooTeamLink\", {\n    teamId: fooTeam.id,\n    label: \"Link label\",\n    position: \"Example link\",\n    url: \"https://example.com\",\n});\n```\n```python\nimport pulumi\nimport pulumi_datadog as datadog\n\nfoo_team = datadog.Team(\"fooTeam\",\n    description=\"Example team\",\n    handle=\"example-team-updated\",\n    name=\"Example Team-updated\")\n# Create new team_link resource\nfoo_team_link = datadog.TeamLink(\"fooTeamLink\",\n    team_id=foo_team.id,\n    label=\"Link label\",\n    position=\"Example link\",\n    url=\"https://example.com\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Datadog = Pulumi.Datadog;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var fooTeam = new Datadog.Team(\"fooTeam\", new()\n    {\n        Description = \"Example team\",\n        Handle = \"example-team-updated\",\n        Name = \"Example Team-updated\",\n    });\n\n    // Create new team_link resource\n    var fooTeamLink = new Datadog.TeamLink(\"fooTeamLink\", new()\n    {\n        TeamId = fooTeam.Id,\n        Label = \"Link label\",\n        Position = \"Example link\",\n        Url = \"https://example.com\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-datadog/sdk/v4/go/datadog\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tfooTeam, err := datadog.NewTeam(ctx, \"fooTeam\", \u0026datadog.TeamArgs{\n\t\t\tDescription: pulumi.String(\"Example team\"),\n\t\t\tHandle:      pulumi.String(\"example-team-updated\"),\n\t\t\tName:        pulumi.String(\"Example Team-updated\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = datadog.NewTeamLink(ctx, \"fooTeamLink\", \u0026datadog.TeamLinkArgs{\n\t\t\tTeamId:   fooTeam.ID(),\n\t\t\tLabel:    pulumi.String(\"Link label\"),\n\t\t\tPosition: pulumi.Int(\"Example link\"),\n\t\t\tUrl:      pulumi.String(\"https://example.com\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.datadog.Team;\nimport com.pulumi.datadog.TeamArgs;\nimport com.pulumi.datadog.TeamLink;\nimport com.pulumi.datadog.TeamLinkArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var fooTeam = new Team(\"fooTeam\", TeamArgs.builder()        \n            .description(\"Example team\")\n            .handle(\"example-team-updated\")\n            .name(\"Example Team-updated\")\n            .build());\n\n        var fooTeamLink = new TeamLink(\"fooTeamLink\", TeamLinkArgs.builder()        \n            .teamId(fooTeam.id())\n            .label(\"Link label\")\n            .position(\"Example link\")\n            .url(\"https://example.com\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  fooTeam: # Create new team_link resource\n    type: datadog:Team\n    properties:\n      description: Example team\n      handle: example-team-updated\n      name: Example Team-updated\n  fooTeamLink:\n    type: datadog:TeamLink\n    properties:\n      teamId: ${fooTeam.id}\n      label: Link label\n      position: Example link\n      url: https://example.com\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import datadog:index/teamLink:TeamLink new_list \"${team_id}:${resource_id}\"\n```\n\n ",
            "properties": {
                "label": {
                    "type": "string",
                    "description": "The link's label.\n"
                },
                "position": {
                    "type": "integer",
                    "description": "The link's position, used to sort links for the team.\n"
                },
                "teamId": {
                    "type": "string",
                    "description": "ID of the team the link is associated with.\n"
                },
                "url": {
                    "type": "string",
                    "description": "The URL for the link.\n"
                }
            },
            "required": [
                "label",
                "position",
                "teamId",
                "url"
            ],
            "inputProperties": {
                "label": {
                    "type": "string",
                    "description": "The link's label.\n"
                },
                "position": {
                    "type": "integer",
                    "description": "The link's position, used to sort links for the team.\n"
                },
                "teamId": {
                    "type": "string",
                    "description": "ID of the team the link is associated with.\n"
                },
                "url": {
                    "type": "string",
                    "description": "The URL for the link.\n"
                }
            },
            "requiredInputs": [
                "label",
                "teamId",
                "url"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering TeamLink resources.\n",
                "properties": {
                    "label": {
                        "type": "string",
                        "description": "The link's label.\n"
                    },
                    "position": {
                        "type": "integer",
                        "description": "The link's position, used to sort links for the team.\n"
                    },
                    "teamId": {
                        "type": "string",
                        "description": "ID of the team the link is associated with.\n"
                    },
                    "url": {
                        "type": "string",
                        "description": "The URL for the link.\n"
                    }
                },
                "type": "object"
            }
        },
        "datadog:index/teamMembership:TeamMembership": {
            "description": "Provides a Datadog TeamMembership resource. This can be used to create and manage Datadog team_membership.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as datadog from \"@pulumi/datadog\";\n\nconst fooTeam = new datadog.Team(\"fooTeam\", {\n    description: \"Example team\",\n    handle: \"example-team-updated\",\n    name: \"Example Team-updated\",\n});\nconst fooUser = new datadog.User(\"fooUser\", {email: \"new@example.com\"});\n// Create new team_membership resource\nconst fooTeamMembership = new datadog.TeamMembership(\"fooTeamMembership\", {\n    teamId: fooTeam.id,\n    userId: fooUser.id,\n    role: \"admin\",\n});\n```\n```python\nimport pulumi\nimport pulumi_datadog as datadog\n\nfoo_team = datadog.Team(\"fooTeam\",\n    description=\"Example team\",\n    handle=\"example-team-updated\",\n    name=\"Example Team-updated\")\nfoo_user = datadog.User(\"fooUser\", email=\"new@example.com\")\n# Create new team_membership resource\nfoo_team_membership = datadog.TeamMembership(\"fooTeamMembership\",\n    team_id=foo_team.id,\n    user_id=foo_user.id,\n    role=\"admin\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Datadog = Pulumi.Datadog;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var fooTeam = new Datadog.Team(\"fooTeam\", new()\n    {\n        Description = \"Example team\",\n        Handle = \"example-team-updated\",\n        Name = \"Example Team-updated\",\n    });\n\n    var fooUser = new Datadog.User(\"fooUser\", new()\n    {\n        Email = \"new@example.com\",\n    });\n\n    // Create new team_membership resource\n    var fooTeamMembership = new Datadog.TeamMembership(\"fooTeamMembership\", new()\n    {\n        TeamId = fooTeam.Id,\n        UserId = fooUser.Id,\n        Role = \"admin\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-datadog/sdk/v4/go/datadog\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tfooTeam, err := datadog.NewTeam(ctx, \"fooTeam\", \u0026datadog.TeamArgs{\n\t\t\tDescription: pulumi.String(\"Example team\"),\n\t\t\tHandle:      pulumi.String(\"example-team-updated\"),\n\t\t\tName:        pulumi.String(\"Example Team-updated\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tfooUser, err := datadog.NewUser(ctx, \"fooUser\", \u0026datadog.UserArgs{\n\t\t\tEmail: pulumi.String(\"new@example.com\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = datadog.NewTeamMembership(ctx, \"fooTeamMembership\", \u0026datadog.TeamMembershipArgs{\n\t\t\tTeamId: fooTeam.ID(),\n\t\t\tUserId: fooUser.ID(),\n\t\t\tRole:   pulumi.String(\"admin\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.datadog.Team;\nimport com.pulumi.datadog.TeamArgs;\nimport com.pulumi.datadog.User;\nimport com.pulumi.datadog.UserArgs;\nimport com.pulumi.datadog.TeamMembership;\nimport com.pulumi.datadog.TeamMembershipArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var fooTeam = new Team(\"fooTeam\", TeamArgs.builder()        \n            .description(\"Example team\")\n            .handle(\"example-team-updated\")\n            .name(\"Example Team-updated\")\n            .build());\n\n        var fooUser = new User(\"fooUser\", UserArgs.builder()        \n            .email(\"new@example.com\")\n            .build());\n\n        var fooTeamMembership = new TeamMembership(\"fooTeamMembership\", TeamMembershipArgs.builder()        \n            .teamId(fooTeam.id())\n            .userId(fooUser.id())\n            .role(\"admin\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  fooTeam:\n    type: datadog:Team\n    properties:\n      description: Example team\n      handle: example-team-updated\n      name: Example Team-updated\n  fooUser:\n    type: datadog:User\n    properties:\n      email: new@example.com\n  # Create new team_membership resource\n  fooTeamMembership:\n    type: datadog:TeamMembership\n    properties:\n      teamId: ${fooTeam.id}\n      userId: ${fooUser.id}\n      role: admin\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nThis resource is imported using team_id and user_id seperated by `:`.\n\n```sh\n $ pulumi import datadog:index/teamMembership:TeamMembership foo \"${team_id}:${user_id}\"\n```\n\n ",
            "properties": {
                "role": {
                    "type": "string",
                    "description": "The user's role within the team. Valid values are `admin`.\n"
                },
                "teamId": {
                    "type": "string",
                    "description": "ID of the team the team membership is associated with.\n"
                },
                "userId": {
                    "type": "string",
                    "description": "The ID of the user.\n"
                }
            },
            "required": [
                "teamId",
                "userId"
            ],
            "inputProperties": {
                "role": {
                    "type": "string",
                    "description": "The user's role within the team. Valid values are `admin`.\n"
                },
                "teamId": {
                    "type": "string",
                    "description": "ID of the team the team membership is associated with.\n"
                },
                "userId": {
                    "type": "string",
                    "description": "The ID of the user.\n"
                }
            },
            "requiredInputs": [
                "teamId",
                "userId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering TeamMembership resources.\n",
                "properties": {
                    "role": {
                        "type": "string",
                        "description": "The user's role within the team. Valid values are `admin`.\n"
                    },
                    "teamId": {
                        "type": "string",
                        "description": "ID of the team the team membership is associated with.\n"
                    },
                    "userId": {
                        "type": "string",
                        "description": "The ID of the user.\n"
                    }
                },
                "type": "object"
            }
        },
        "datadog:index/user:User": {
            "description": "Provides a Datadog user resource. This can be used to create and manage Datadog users.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as datadog from \"@pulumi/datadog\";\n\nconst roRole = datadog.getRole({\n    filter: \"Datadog Read Only Role\",\n});\n// Create a new Datadog user\nconst foo = new datadog.User(\"foo\", {\n    email: \"new@example.com\",\n    roles: [roRole.then(roRole =\u003e roRole.id)],\n});\n```\n```python\nimport pulumi\nimport pulumi_datadog as datadog\n\nro_role = datadog.get_role(filter=\"Datadog Read Only Role\")\n# Create a new Datadog user\nfoo = datadog.User(\"foo\",\n    email=\"new@example.com\",\n    roles=[ro_role.id])\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Datadog = Pulumi.Datadog;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var roRole = Datadog.GetRole.Invoke(new()\n    {\n        Filter = \"Datadog Read Only Role\",\n    });\n\n    // Create a new Datadog user\n    var foo = new Datadog.User(\"foo\", new()\n    {\n        Email = \"new@example.com\",\n        Roles = new[]\n        {\n            roRole.Apply(getRoleResult =\u003e getRoleResult.Id),\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-datadog/sdk/v4/go/datadog\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\troRole, err := datadog.LookupRole(ctx, \u0026datadog.LookupRoleArgs{\n\t\t\tFilter: \"Datadog Read Only Role\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = datadog.NewUser(ctx, \"foo\", \u0026datadog.UserArgs{\n\t\t\tEmail: pulumi.String(\"new@example.com\"),\n\t\t\tRoles: pulumi.StringArray{\n\t\t\t\t*pulumi.String(roRole.Id),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.datadog.DatadogFunctions;\nimport com.pulumi.datadog.inputs.GetRoleArgs;\nimport com.pulumi.datadog.User;\nimport com.pulumi.datadog.UserArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var roRole = DatadogFunctions.getRole(GetRoleArgs.builder()\n            .filter(\"Datadog Read Only Role\")\n            .build());\n\n        var foo = new User(\"foo\", UserArgs.builder()        \n            .email(\"new@example.com\")\n            .roles(roRole.applyValue(getRoleResult -\u003e getRoleResult.id()))\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  # Create a new Datadog user\n  foo:\n    type: datadog:User\n    properties:\n      email: new@example.com\n      roles:\n        - ${roRole.id}\nvariables:\n  roRole:\n    fn::invoke:\n      Function: datadog:getRole\n      Arguments:\n        filter: Datadog Read Only Role\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import datadog:index/user:User example_user 6f1b44c0-30b2-11eb-86bc-279f7c1ebaa4\n```\n\n ",
            "properties": {
                "disabled": {
                    "type": "boolean",
                    "description": "Whether the user is disabled.\n"
                },
                "email": {
                    "type": "string",
                    "description": "Email address for user.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name for user.\n"
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list a role IDs to assign to the user.\n"
                },
                "sendUserInvitation": {
                    "type": "boolean",
                    "description": "Whether an invitation email should be sent when the user is created.\n"
                },
                "userInvitationId": {
                    "type": "string",
                    "description": "The ID of the user invitation that was sent when creating the user.\n"
                },
                "verified": {
                    "type": "boolean",
                    "description": "Returns `true` if the user is verified.\n"
                }
            },
            "required": [
                "email",
                "userInvitationId",
                "verified"
            ],
            "inputProperties": {
                "disabled": {
                    "type": "boolean",
                    "description": "Whether the user is disabled.\n"
                },
                "email": {
                    "type": "string",
                    "description": "Email address for user.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name for user.\n"
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list a role IDs to assign to the user.\n"
                },
                "sendUserInvitation": {
                    "type": "boolean",
                    "description": "Whether an invitation email should be sent when the user is created.\n"
                }
            },
            "requiredInputs": [
                "email"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering User resources.\n",
                "properties": {
                    "disabled": {
                        "type": "boolean",
                        "description": "Whether the user is disabled.\n"
                    },
                    "email": {
                        "type": "string",
                        "description": "Email address for user.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name for user.\n"
                    },
                    "roles": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list a role IDs to assign to the user.\n"
                    },
                    "sendUserInvitation": {
                        "type": "boolean",
                        "description": "Whether an invitation email should be sent when the user is created.\n"
                    },
                    "userInvitationId": {
                        "type": "string",
                        "description": "The ID of the user invitation that was sent when creating the user.\n"
                    },
                    "verified": {
                        "type": "boolean",
                        "description": "Returns `true` if the user is verified.\n"
                    }
                },
                "type": "object"
            }
        },
        "datadog:index/webhook:Webhook": {
            "description": "Provides a Datadog webhook resource. This can be used to create and manage Datadog webhooks.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as datadog from \"@pulumi/datadog\";\n\n// Create a new Datadog webhook\nconst foo = new datadog.Webhook(\"foo\", {\n    name: \"test-webhook\",\n    url: \"example.com\",\n    encodeAs: \"json\",\n    customHeaders: JSON.stringify({\n        custom: \"header\",\n    }),\n    payload: JSON.stringify({\n        custom: \"payload\",\n    }),\n});\n```\n```python\nimport pulumi\nimport json\nimport pulumi_datadog as datadog\n\n# Create a new Datadog webhook\nfoo = datadog.Webhook(\"foo\",\n    name=\"test-webhook\",\n    url=\"example.com\",\n    encode_as=\"json\",\n    custom_headers=json.dumps({\n        \"custom\": \"header\",\n    }),\n    payload=json.dumps({\n        \"custom\": \"payload\",\n    }))\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text.Json;\nusing Pulumi;\nusing Datadog = Pulumi.Datadog;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    // Create a new Datadog webhook\n    var foo = new Datadog.Webhook(\"foo\", new()\n    {\n        Name = \"test-webhook\",\n        Url = \"example.com\",\n        EncodeAs = \"json\",\n        CustomHeaders = JsonSerializer.Serialize(new Dictionary\u003cstring, object?\u003e\n        {\n            [\"custom\"] = \"header\",\n        }),\n        Payload = JsonSerializer.Serialize(new Dictionary\u003cstring, object?\u003e\n        {\n            [\"custom\"] = \"payload\",\n        }),\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"encoding/json\"\n\n\t\"github.com/pulumi/pulumi-datadog/sdk/v4/go/datadog\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\ttmpJSON0, err := json.Marshal(map[string]interface{}{\n\t\t\t\"custom\": \"header\",\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tjson0 := string(tmpJSON0)\n\t\ttmpJSON1, err := json.Marshal(map[string]interface{}{\n\t\t\t\"custom\": \"payload\",\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tjson1 := string(tmpJSON1)\n\t\t_, err = datadog.NewWebhook(ctx, \"foo\", \u0026datadog.WebhookArgs{\n\t\t\tName:          pulumi.String(\"test-webhook\"),\n\t\t\tUrl:           pulumi.String(\"example.com\"),\n\t\t\tEncodeAs:      pulumi.String(\"json\"),\n\t\t\tCustomHeaders: pulumi.String(json0),\n\t\t\tPayload:       pulumi.String(json1),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.datadog.Webhook;\nimport com.pulumi.datadog.WebhookArgs;\nimport static com.pulumi.codegen.internal.Serialization.*;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var foo = new Webhook(\"foo\", WebhookArgs.builder()        \n            .name(\"test-webhook\")\n            .url(\"example.com\")\n            .encodeAs(\"json\")\n            .customHeaders(serializeJson(\n                jsonObject(\n                    jsonProperty(\"custom\", \"header\")\n                )))\n            .payload(serializeJson(\n                jsonObject(\n                    jsonProperty(\"custom\", \"payload\")\n                )))\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  # Create a new Datadog webhook\n  foo:\n    type: datadog:Webhook\n    properties:\n      name: test-webhook\n      url: example.com\n      encodeAs: json\n      customHeaders:\n        fn::toJSON:\n          custom: header\n      payload:\n        fn::toJSON:\n          custom: payload\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import datadog:index/webhook:Webhook foo example-webhook\n```\n\n ",
            "properties": {
                "customHeaders": {
                    "type": "string",
                    "description": "The headers attached to the webhook.\n"
                },
                "encodeAs": {
                    "type": "string",
                    "description": "Encoding type. Valid values are `json`, `form`.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the webhook. It corresponds with `\u003cWEBHOOK_NAME\u003e`.\n"
                },
                "payload": {
                    "type": "string",
                    "description": "The payload of the webhook.\n"
                },
                "url": {
                    "type": "string",
                    "description": "The URL of the webhook.\n"
                }
            },
            "required": [
                "encodeAs",
                "name",
                "payload",
                "url"
            ],
            "inputProperties": {
                "customHeaders": {
                    "type": "string",
                    "description": "The headers attached to the webhook.\n"
                },
                "encodeAs": {
                    "type": "string",
                    "description": "Encoding type. Valid values are `json`, `form`.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the webhook. It corresponds with `\u003cWEBHOOK_NAME\u003e`.\n"
                },
                "payload": {
                    "type": "string",
                    "description": "The payload of the webhook.\n"
                },
                "url": {
                    "type": "string",
                    "description": "The URL of the webhook.\n"
                }
            },
            "requiredInputs": [
                "name",
                "url"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Webhook resources.\n",
                "properties": {
                    "customHeaders": {
                        "type": "string",
                        "description": "The headers attached to the webhook.\n"
                    },
                    "encodeAs": {
                        "type": "string",
                        "description": "Encoding type. Valid values are `json`, `form`.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the webhook. It corresponds with `\u003cWEBHOOK_NAME\u003e`.\n"
                    },
                    "payload": {
                        "type": "string",
                        "description": "The payload of the webhook.\n"
                    },
                    "url": {
                        "type": "string",
                        "description": "The URL of the webhook.\n"
                    }
                },
                "type": "object"
            }
        },
        "datadog:index/webhookCustomVariable:WebhookCustomVariable": {
            "description": "Provides a Datadog webhooks custom variable resource. This can be used to create and manage Datadog webhooks custom variables.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as datadog from \"@pulumi/datadog\";\n\nconst foo = new datadog.WebhookCustomVariable(\"foo\", {\n    isSecret: true,\n    name: \"EXAMPLE_VARIABLE\",\n    value: \"EXAMPLE-VALUE\",\n});\n```\n```python\nimport pulumi\nimport pulumi_datadog as datadog\n\nfoo = datadog.WebhookCustomVariable(\"foo\",\n    is_secret=True,\n    name=\"EXAMPLE_VARIABLE\",\n    value=\"EXAMPLE-VALUE\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Datadog = Pulumi.Datadog;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var foo = new Datadog.WebhookCustomVariable(\"foo\", new()\n    {\n        IsSecret = true,\n        Name = \"EXAMPLE_VARIABLE\",\n        Value = \"EXAMPLE-VALUE\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-datadog/sdk/v4/go/datadog\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := datadog.NewWebhookCustomVariable(ctx, \"foo\", \u0026datadog.WebhookCustomVariableArgs{\n\t\t\tIsSecret: pulumi.Bool(true),\n\t\t\tName:     pulumi.String(\"EXAMPLE_VARIABLE\"),\n\t\t\tValue:    pulumi.String(\"EXAMPLE-VALUE\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.datadog.WebhookCustomVariable;\nimport com.pulumi.datadog.WebhookCustomVariableArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var foo = new WebhookCustomVariable(\"foo\", WebhookCustomVariableArgs.builder()        \n            .isSecret(true)\n            .name(\"EXAMPLE_VARIABLE\")\n            .value(\"EXAMPLE-VALUE\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  foo:\n    type: datadog:WebhookCustomVariable\n    properties:\n      isSecret: true\n      name: EXAMPLE_VARIABLE\n      value: EXAMPLE-VALUE\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import datadog:index/webhookCustomVariable:WebhookCustomVariable foo EXAMPLE_VARIABLE\n```\n\n ",
            "properties": {
                "isSecret": {
                    "type": "boolean",
                    "description": "Whether the custom variable is secret or not.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the variable. It corresponds with `\u003cCUSTOM_VARIABLE_NAME\u003e`.\n"
                },
                "value": {
                    "type": "string",
                    "description": "The value of the custom variable.\n",
                    "secret": true
                }
            },
            "required": [
                "isSecret",
                "name",
                "value"
            ],
            "inputProperties": {
                "isSecret": {
                    "type": "boolean",
                    "description": "Whether the custom variable is secret or not.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the variable. It corresponds with `\u003cCUSTOM_VARIABLE_NAME\u003e`.\n"
                },
                "value": {
                    "type": "string",
                    "description": "The value of the custom variable.\n",
                    "secret": true
                }
            },
            "requiredInputs": [
                "isSecret",
                "name",
                "value"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering WebhookCustomVariable resources.\n",
                "properties": {
                    "isSecret": {
                        "type": "boolean",
                        "description": "Whether the custom variable is secret or not.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the variable. It corresponds with `\u003cCUSTOM_VARIABLE_NAME\u003e`.\n"
                    },
                    "value": {
                        "type": "string",
                        "description": "The value of the custom variable.\n",
                        "secret": true
                    }
                },
                "type": "object"
            }
        },
        "datadog:opsgenie/serviceObject:ServiceObject": {
            "description": "Resource for interacting with Datadog Opsgenie Service API.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as datadog from \"@pulumi/datadog\";\n\nconst fakeServiceName = new datadog.opsgenie.ServiceObject(\"fakeServiceName\", {\n    name: \"fake_service_name\",\n    opsgenieApiKey: \"00000000-0000-0000-0000-000000000000\",\n    region: \"us\",\n});\nconst fakeServiceName2 = new datadog.opsgenie.ServiceObject(\"fakeServiceName2\", {\n    name: \"fake_service_name_2\",\n    opsgenieApiKey: \"11111111-1111-1111-1111-111111111111\",\n    region: \"eu\",\n});\n```\n```python\nimport pulumi\nimport pulumi_datadog as datadog\n\nfake_service_name = datadog.opsgenie.ServiceObject(\"fakeServiceName\",\n    name=\"fake_service_name\",\n    opsgenie_api_key=\"00000000-0000-0000-0000-000000000000\",\n    region=\"us\")\nfake_service_name2 = datadog.opsgenie.ServiceObject(\"fakeServiceName2\",\n    name=\"fake_service_name_2\",\n    opsgenie_api_key=\"11111111-1111-1111-1111-111111111111\",\n    region=\"eu\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Datadog = Pulumi.Datadog;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var fakeServiceName = new Datadog.OpsGenie.ServiceObject(\"fakeServiceName\", new()\n    {\n        Name = \"fake_service_name\",\n        OpsgenieApiKey = \"00000000-0000-0000-0000-000000000000\",\n        Region = \"us\",\n    });\n\n    var fakeServiceName2 = new Datadog.OpsGenie.ServiceObject(\"fakeServiceName2\", new()\n    {\n        Name = \"fake_service_name_2\",\n        OpsgenieApiKey = \"11111111-1111-1111-1111-111111111111\",\n        Region = \"eu\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-datadog/sdk/v4/go/datadog/opsgenie\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := opsgenie.NewServiceObject(ctx, \"fakeServiceName\", \u0026opsgenie.ServiceObjectArgs{\n\t\t\tName:           pulumi.String(\"fake_service_name\"),\n\t\t\tOpsgenieApiKey: pulumi.String(\"00000000-0000-0000-0000-000000000000\"),\n\t\t\tRegion:         pulumi.String(\"us\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = opsgenie.NewServiceObject(ctx, \"fakeServiceName2\", \u0026opsgenie.ServiceObjectArgs{\n\t\t\tName:           pulumi.String(\"fake_service_name_2\"),\n\t\t\tOpsgenieApiKey: pulumi.String(\"11111111-1111-1111-1111-111111111111\"),\n\t\t\tRegion:         pulumi.String(\"eu\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.datadog.opsgenie.ServiceObject;\nimport com.pulumi.datadog.opsgenie.ServiceObjectArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var fakeServiceName = new ServiceObject(\"fakeServiceName\", ServiceObjectArgs.builder()        \n            .name(\"fake_service_name\")\n            .opsgenieApiKey(\"00000000-0000-0000-0000-000000000000\")\n            .region(\"us\")\n            .build());\n\n        var fakeServiceName2 = new ServiceObject(\"fakeServiceName2\", ServiceObjectArgs.builder()        \n            .name(\"fake_service_name_2\")\n            .opsgenieApiKey(\"11111111-1111-1111-1111-111111111111\")\n            .region(\"eu\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  fakeServiceName:\n    type: datadog:opsgenie:ServiceObject\n    properties:\n      name: fake_service_name\n      opsgenieApiKey: 00000000-0000-0000-0000-000000000000\n      region: us\n  fakeServiceName2:\n    type: datadog:opsgenie:ServiceObject\n    properties:\n      name: fake_service_name_2\n      opsgenieApiKey: 11111111-1111-1111-1111-111111111111\n      region: eu\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "customUrl": {
                    "type": "string",
                    "description": "The custom url for a custom region.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name for the Opsgenie service.\n"
                },
                "opsgenieApiKey": {
                    "type": "string",
                    "description": "The Opsgenie API key for the Opsgenie service. Note: Since the Datadog API never returns Opsgenie API keys, it is impossible to detect drifts to have it destroyed and recreated.\n",
                    "secret": true
                },
                "region": {
                    "type": "string",
                    "description": "The region for the Opsgenie service. Valid values are `us`, `eu`, `custom`.\n"
                }
            },
            "required": [
                "name",
                "opsgenieApiKey",
                "region"
            ],
            "inputProperties": {
                "customUrl": {
                    "type": "string",
                    "description": "The custom url for a custom region.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name for the Opsgenie service.\n"
                },
                "opsgenieApiKey": {
                    "type": "string",
                    "description": "The Opsgenie API key for the Opsgenie service. Note: Since the Datadog API never returns Opsgenie API keys, it is impossible to detect drifts to have it destroyed and recreated.\n",
                    "secret": true
                },
                "region": {
                    "type": "string",
                    "description": "The region for the Opsgenie service. Valid values are `us`, `eu`, `custom`.\n"
                }
            },
            "requiredInputs": [
                "name",
                "opsgenieApiKey",
                "region"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ServiceObject resources.\n",
                "properties": {
                    "customUrl": {
                        "type": "string",
                        "description": "The custom url for a custom region.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name for the Opsgenie service.\n"
                    },
                    "opsgenieApiKey": {
                        "type": "string",
                        "description": "The Opsgenie API key for the Opsgenie service. Note: Since the Datadog API never returns Opsgenie API keys, it is impossible to detect drifts to have it destroyed and recreated.\n",
                        "secret": true
                    },
                    "region": {
                        "type": "string",
                        "description": "The region for the Opsgenie service. Valid values are `us`, `eu`, `custom`.\n"
                    }
                },
                "type": "object"
            }
        },
        "datadog:pagerduty/integration:Integration": {
            "description": "Provides a Datadog - PagerDuty resource. This can be used to create and manage Datadog - PagerDuty integration. See also [PagerDuty Integration Guide](https://www.pagerduty.com/docs/guides/datadog-integration-guide/).\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as datadog from \"@pulumi/datadog\";\n\nconst pd = new datadog.pagerduty.Integration(\"pd\", {\n    apiToken: \"38457822378273432587234242874\",\n    schedules: [\n        \"https://ddog.pagerduty.com/schedules/X123VF\",\n        \"https://ddog.pagerduty.com/schedules/X321XX\",\n    ],\n    subdomain: \"ddog\",\n});\nconst testingFoo = new datadog.pagerduty.ServiceObject(\"testingFoo\", {\n    serviceKey: \"9876543210123456789\",\n    serviceName: \"testing_foo\",\n}, {\n    dependsOn: [\"datadog_integration_pagerduty.pd\"],\n});\nconst testingBar = new datadog.pagerduty.ServiceObject(\"testingBar\", {\n    serviceKey: \"54321098765432109876\",\n    serviceName: \"testing_bar\",\n}, {\n    dependsOn: [\"datadog_integration_pagerduty.pd\"],\n});\n```\n```python\nimport pulumi\nimport pulumi_datadog as datadog\n\npd = datadog.pagerduty.Integration(\"pd\",\n    api_token=\"38457822378273432587234242874\",\n    schedules=[\n        \"https://ddog.pagerduty.com/schedules/X123VF\",\n        \"https://ddog.pagerduty.com/schedules/X321XX\",\n    ],\n    subdomain=\"ddog\")\ntesting_foo = datadog.pagerduty.ServiceObject(\"testingFoo\",\n    service_key=\"9876543210123456789\",\n    service_name=\"testing_foo\",\n    opts=pulumi.ResourceOptions(depends_on=[\"datadog_integration_pagerduty.pd\"]))\ntesting_bar = datadog.pagerduty.ServiceObject(\"testingBar\",\n    service_key=\"54321098765432109876\",\n    service_name=\"testing_bar\",\n    opts=pulumi.ResourceOptions(depends_on=[\"datadog_integration_pagerduty.pd\"]))\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Datadog = Pulumi.Datadog;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var pd = new Datadog.PagerDuty.Integration(\"pd\", new()\n    {\n        ApiToken = \"38457822378273432587234242874\",\n        Schedules = new[]\n        {\n            \"https://ddog.pagerduty.com/schedules/X123VF\",\n            \"https://ddog.pagerduty.com/schedules/X321XX\",\n        },\n        Subdomain = \"ddog\",\n    });\n\n    var testingFoo = new Datadog.PagerDuty.ServiceObject(\"testingFoo\", new()\n    {\n        ServiceKey = \"9876543210123456789\",\n        ServiceName = \"testing_foo\",\n    }, new CustomResourceOptions\n    {\n        DependsOn = new[]\n        {\n            \"datadog_integration_pagerduty.pd\",\n        },\n    });\n\n    var testingBar = new Datadog.PagerDuty.ServiceObject(\"testingBar\", new()\n    {\n        ServiceKey = \"54321098765432109876\",\n        ServiceName = \"testing_bar\",\n    }, new CustomResourceOptions\n    {\n        DependsOn = new[]\n        {\n            \"datadog_integration_pagerduty.pd\",\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-datadog/sdk/v4/go/datadog/pagerduty\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := pagerduty.NewIntegration(ctx, \"pd\", \u0026pagerduty.IntegrationArgs{\n\t\t\tApiToken: pulumi.String(\"38457822378273432587234242874\"),\n\t\t\tSchedules: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"https://ddog.pagerduty.com/schedules/X123VF\"),\n\t\t\t\tpulumi.String(\"https://ddog.pagerduty.com/schedules/X321XX\"),\n\t\t\t},\n\t\t\tSubdomain: pulumi.String(\"ddog\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = pagerduty.NewServiceObject(ctx, \"testingFoo\", \u0026pagerduty.ServiceObjectArgs{\n\t\t\tServiceKey:  pulumi.String(\"9876543210123456789\"),\n\t\t\tServiceName: pulumi.String(\"testing_foo\"),\n\t\t}, pulumi.DependsOn([]pulumi.Resource{\n\t\t\tpulumi.Resource(\"datadog_integration_pagerduty.pd\"),\n\t\t}))\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = pagerduty.NewServiceObject(ctx, \"testingBar\", \u0026pagerduty.ServiceObjectArgs{\n\t\t\tServiceKey:  pulumi.String(\"54321098765432109876\"),\n\t\t\tServiceName: pulumi.String(\"testing_bar\"),\n\t\t}, pulumi.DependsOn([]pulumi.Resource{\n\t\t\tpulumi.Resource(\"datadog_integration_pagerduty.pd\"),\n\t\t}))\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.datadog.pagerduty.Integration;\nimport com.pulumi.datadog.pagerduty.IntegrationArgs;\nimport com.pulumi.datadog.pagerduty.ServiceObject;\nimport com.pulumi.datadog.pagerduty.ServiceObjectArgs;\nimport com.pulumi.resources.CustomResourceOptions;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var pd = new Integration(\"pd\", IntegrationArgs.builder()        \n            .apiToken(\"38457822378273432587234242874\")\n            .schedules(            \n                \"https://ddog.pagerduty.com/schedules/X123VF\",\n                \"https://ddog.pagerduty.com/schedules/X321XX\")\n            .subdomain(\"ddog\")\n            .build());\n\n        var testingFoo = new ServiceObject(\"testingFoo\", ServiceObjectArgs.builder()        \n            .serviceKey(\"9876543210123456789\")\n            .serviceName(\"testing_foo\")\n            .build(), CustomResourceOptions.builder()\n                .dependsOn(\"datadog_integration_pagerduty.pd\")\n                .build());\n\n        var testingBar = new ServiceObject(\"testingBar\", ServiceObjectArgs.builder()        \n            .serviceKey(\"54321098765432109876\")\n            .serviceName(\"testing_bar\")\n            .build(), CustomResourceOptions.builder()\n                .dependsOn(\"datadog_integration_pagerduty.pd\")\n                .build());\n\n    }\n}\n```\n```yaml\nresources:\n  pd:\n    type: datadog:pagerduty:Integration\n    properties:\n      apiToken: '38457822378273432587234242874'\n      schedules:\n        - https://ddog.pagerduty.com/schedules/X123VF\n        - https://ddog.pagerduty.com/schedules/X321XX\n      subdomain: ddog\n  testingFoo:\n    type: datadog:pagerduty:ServiceObject\n    properties:\n      serviceKey: '9876543210123456789'\n      serviceName: testing_foo\n    options:\n      dependson:\n        - datadog_integration_pagerduty.pd\n  testingBar:\n    type: datadog:pagerduty:ServiceObject\n    properties:\n      serviceKey: '54321098765432109876'\n      serviceName: testing_bar\n    options:\n      dependson:\n        - datadog_integration_pagerduty.pd\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "apiToken": {
                    "type": "string",
                    "description": "Your PagerDuty API token.\n",
                    "secret": true
                },
                "schedules": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Array of your schedule URLs.\n"
                },
                "subdomain": {
                    "type": "string",
                    "description": "Your PagerDuty account’s personalized subdomain name.\n"
                }
            },
            "required": [
                "subdomain"
            ],
            "inputProperties": {
                "apiToken": {
                    "type": "string",
                    "description": "Your PagerDuty API token.\n",
                    "secret": true
                },
                "schedules": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Array of your schedule URLs.\n"
                },
                "subdomain": {
                    "type": "string",
                    "description": "Your PagerDuty account’s personalized subdomain name.\n"
                }
            },
            "requiredInputs": [
                "subdomain"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Integration resources.\n",
                "properties": {
                    "apiToken": {
                        "type": "string",
                        "description": "Your PagerDuty API token.\n",
                        "secret": true
                    },
                    "schedules": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Array of your schedule URLs.\n"
                    },
                    "subdomain": {
                        "type": "string",
                        "description": "Your PagerDuty account’s personalized subdomain name.\n"
                    }
                },
                "type": "object"
            }
        },
        "datadog:pagerduty/serviceObject:ServiceObject": {
            "description": "Provides access to individual Service Objects of Datadog - PagerDuty integrations. Note that the Datadog - PagerDuty integration must be activated in the Datadog UI in order for this resource to be usable.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as datadog from \"@pulumi/datadog\";\n\nconst testingFoo = new datadog.pagerduty.ServiceObject(\"testingFoo\", {\n    serviceKey: \"9876543210123456789\",\n    serviceName: \"testing_foo\",\n});\nconst testingBar = new datadog.pagerduty.ServiceObject(\"testingBar\", {\n    serviceKey: \"54321098765432109876\",\n    serviceName: \"testing_bar\",\n});\n```\n```python\nimport pulumi\nimport pulumi_datadog as datadog\n\ntesting_foo = datadog.pagerduty.ServiceObject(\"testingFoo\",\n    service_key=\"9876543210123456789\",\n    service_name=\"testing_foo\")\ntesting_bar = datadog.pagerduty.ServiceObject(\"testingBar\",\n    service_key=\"54321098765432109876\",\n    service_name=\"testing_bar\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Datadog = Pulumi.Datadog;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var testingFoo = new Datadog.PagerDuty.ServiceObject(\"testingFoo\", new()\n    {\n        ServiceKey = \"9876543210123456789\",\n        ServiceName = \"testing_foo\",\n    });\n\n    var testingBar = new Datadog.PagerDuty.ServiceObject(\"testingBar\", new()\n    {\n        ServiceKey = \"54321098765432109876\",\n        ServiceName = \"testing_bar\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-datadog/sdk/v4/go/datadog/pagerduty\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := pagerduty.NewServiceObject(ctx, \"testingFoo\", \u0026pagerduty.ServiceObjectArgs{\n\t\t\tServiceKey:  pulumi.String(\"9876543210123456789\"),\n\t\t\tServiceName: pulumi.String(\"testing_foo\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = pagerduty.NewServiceObject(ctx, \"testingBar\", \u0026pagerduty.ServiceObjectArgs{\n\t\t\tServiceKey:  pulumi.String(\"54321098765432109876\"),\n\t\t\tServiceName: pulumi.String(\"testing_bar\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.datadog.pagerduty.ServiceObject;\nimport com.pulumi.datadog.pagerduty.ServiceObjectArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var testingFoo = new ServiceObject(\"testingFoo\", ServiceObjectArgs.builder()        \n            .serviceKey(\"9876543210123456789\")\n            .serviceName(\"testing_foo\")\n            .build());\n\n        var testingBar = new ServiceObject(\"testingBar\", ServiceObjectArgs.builder()        \n            .serviceKey(\"54321098765432109876\")\n            .serviceName(\"testing_bar\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  testingFoo:\n    type: datadog:pagerduty:ServiceObject\n    properties:\n      serviceKey: '9876543210123456789'\n      serviceName: testing_foo\n  testingBar:\n    type: datadog:pagerduty:ServiceObject\n    properties:\n      serviceKey: '54321098765432109876'\n      serviceName: testing_bar\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "serviceKey": {
                    "type": "string",
                    "description": "Your Service name associated service key in PagerDuty. Note: Since the Datadog API never returns service keys, it is impossible to detect drifts.\n",
                    "secret": true
                },
                "serviceName": {
                    "type": "string",
                    "description": "Your Service name in PagerDuty.\n"
                }
            },
            "required": [
                "serviceKey",
                "serviceName"
            ],
            "inputProperties": {
                "serviceKey": {
                    "type": "string",
                    "description": "Your Service name associated service key in PagerDuty. Note: Since the Datadog API never returns service keys, it is impossible to detect drifts.\n",
                    "secret": true
                },
                "serviceName": {
                    "type": "string",
                    "description": "Your Service name in PagerDuty.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "serviceKey",
                "serviceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ServiceObject resources.\n",
                "properties": {
                    "serviceKey": {
                        "type": "string",
                        "description": "Your Service name associated service key in PagerDuty. Note: Since the Datadog API never returns service keys, it is impossible to detect drifts.\n",
                        "secret": true
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Your Service name in PagerDuty.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "datadog:slack/channel:Channel": {
            "description": "Resource for interacting with the Datadog Slack channel API\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as datadog from \"@pulumi/datadog\";\n\nconst testChannel = new datadog.slack.Channel(\"testChannel\", {\n    accountName: \"foo\",\n    channelName: \"#test_channel\",\n    display: {\n        message: true,\n        notified: false,\n        snapshot: false,\n        tags: true,\n    },\n});\n```\n```python\nimport pulumi\nimport pulumi_datadog as datadog\n\ntest_channel = datadog.slack.Channel(\"testChannel\",\n    account_name=\"foo\",\n    channel_name=\"#test_channel\",\n    display=datadog.slack.ChannelDisplayArgs(\n        message=True,\n        notified=False,\n        snapshot=False,\n        tags=True,\n    ))\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Datadog = Pulumi.Datadog;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var testChannel = new Datadog.Slack.Channel(\"testChannel\", new()\n    {\n        AccountName = \"foo\",\n        ChannelName = \"#test_channel\",\n        Display = new Datadog.Slack.Inputs.ChannelDisplayArgs\n        {\n            Message = true,\n            Notified = false,\n            Snapshot = false,\n            Tags = true,\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-datadog/sdk/v4/go/datadog/slack\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := slack.NewChannel(ctx, \"testChannel\", \u0026slack.ChannelArgs{\n\t\t\tAccountName: pulumi.String(\"foo\"),\n\t\t\tChannelName: pulumi.String(\"#test_channel\"),\n\t\t\tDisplay: \u0026slack.ChannelDisplayArgs{\n\t\t\t\tMessage:  pulumi.Bool(true),\n\t\t\t\tNotified: pulumi.Bool(false),\n\t\t\t\tSnapshot: pulumi.Bool(false),\n\t\t\t\tTags:     pulumi.Bool(true),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.datadog.slack.Channel;\nimport com.pulumi.datadog.slack.ChannelArgs;\nimport com.pulumi.datadog.slack.inputs.ChannelDisplayArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var testChannel = new Channel(\"testChannel\", ChannelArgs.builder()        \n            .accountName(\"foo\")\n            .channelName(\"#test_channel\")\n            .display(ChannelDisplayArgs.builder()\n                .message(true)\n                .notified(false)\n                .snapshot(false)\n                .tags(true)\n                .build())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  testChannel:\n    type: datadog:slack:Channel\n    properties:\n      accountName: foo\n      channelName: '#test_channel'\n      display:\n        message: true\n        notified: false\n        snapshot: false\n        tags: true\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nSlack channel integrations can be imported using their account_name and channel_name separated with a colon (`:`).\n\n```sh\n $ pulumi import datadog:slack/channel:Channel test_channel \"foo:#test_channel\"\n```\n\n ",
            "properties": {
                "accountName": {
                    "type": "string",
                    "description": "Slack account name.\n"
                },
                "channelName": {
                    "type": "string",
                    "description": "Slack channel name.\n"
                },
                "display": {
                    "$ref": "#/types/datadog:slack/ChannelDisplay:ChannelDisplay",
                    "description": "Configuration options for what is shown in an alert event message.\n"
                }
            },
            "required": [
                "accountName",
                "channelName",
                "display"
            ],
            "inputProperties": {
                "accountName": {
                    "type": "string",
                    "description": "Slack account name.\n",
                    "willReplaceOnChanges": true
                },
                "channelName": {
                    "type": "string",
                    "description": "Slack channel name.\n"
                },
                "display": {
                    "$ref": "#/types/datadog:slack/ChannelDisplay:ChannelDisplay",
                    "description": "Configuration options for what is shown in an alert event message.\n"
                }
            },
            "requiredInputs": [
                "accountName",
                "channelName",
                "display"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Channel resources.\n",
                "properties": {
                    "accountName": {
                        "type": "string",
                        "description": "Slack account name.\n",
                        "willReplaceOnChanges": true
                    },
                    "channelName": {
                        "type": "string",
                        "description": "Slack channel name.\n"
                    },
                    "display": {
                        "$ref": "#/types/datadog:slack/ChannelDisplay:ChannelDisplay",
                        "description": "Configuration options for what is shown in an alert event message.\n"
                    }
                },
                "type": "object"
            }
        }
    },
    "functions": {
        "datadog:aws/getIntegrationLogsServices:getIntegrationLogsServices": {
            "description": "Use this data source to retrieve all AWS log ready services.\n",
            "outputs": {
                "description": "A collection of values returned by getIntegrationLogsServices.\n",
                "properties": {
                    "awsLogsServices": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/datadog:aws/getIntegrationLogsServicesAwsLogsService:getIntegrationLogsServicesAwsLogsService"
                        },
                        "description": "List of AWS log ready services.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    }
                },
                "type": "object",
                "required": [
                    "awsLogsServices",
                    "id"
                ]
            }
        },
        "datadog:aws/getIntegrationNamespaceRules:getIntegrationNamespaceRules": {
            "description": "Provides a Datadog AWS Integration Namespace Rules data source. This can be used to retrieve all available namespace rules for a Datadog-AWS integration.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as datadog from \"@pulumi/datadog\";\n\nconst rules = datadog.aws.getIntegrationNamespaceRules({});\n```\n```python\nimport pulumi\nimport pulumi_datadog as datadog\n\nrules = datadog.aws.get_integration_namespace_rules()\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Datadog = Pulumi.Datadog;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var rules = Datadog.Aws.GetIntegrationNamespaceRules.Invoke();\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-datadog/sdk/v4/go/datadog/aws\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aws.GetIntegrationNamespaceRules(ctx, nil, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.datadog.aws.AwsFunctions;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var rules = AwsFunctions.getIntegrationNamespaceRules();\n\n    }\n}\n```\n```yaml\nvariables:\n  rules:\n    fn::invoke:\n      Function: datadog:aws:getIntegrationNamespaceRules\n      Arguments: {}\n```\n{{% /example %}}\n{{% /examples %}}",
            "outputs": {
                "description": "A collection of values returned by getIntegrationNamespaceRules.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The ID of this resource.\n"
                    },
                    "namespaceRules": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The list of available namespace rules for a Datadog-AWS integration.\n"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "namespaceRules"
                ]
            }
        },
        "datadog:index/getApiKey:getApiKey": {
            "description": "Use this data source to retrieve information about an existing api key.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as datadog from \"@pulumi/datadog\";\n\nconst foo = datadog.getApiKey({\n    name: \"foo-application\",\n});\n```\n```python\nimport pulumi\nimport pulumi_datadog as datadog\n\nfoo = datadog.get_api_key(name=\"foo-application\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Datadog = Pulumi.Datadog;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var foo = Datadog.GetApiKey.Invoke(new()\n    {\n        Name = \"foo-application\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-datadog/sdk/v4/go/datadog\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := datadog.LookupApiKey(ctx, \u0026datadog.LookupApiKeyArgs{\n\t\t\tName: pulumi.StringRef(\"foo-application\"),\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.datadog.DatadogFunctions;\nimport com.pulumi.datadog.inputs.GetApiKeyArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var foo = DatadogFunctions.getApiKey(GetApiKeyArgs.builder()\n            .name(\"foo-application\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  foo:\n    fn::invoke:\n      Function: datadog:getApiKey\n      Arguments:\n        name: foo-application\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getApiKey.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The ID of this resource.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name for API Key.\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getApiKey.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The ID of this resource.\n"
                    },
                    "key": {
                        "type": "string",
                        "description": "The value of the API Key.\n",
                        "secret": true
                    },
                    "name": {
                        "type": "string",
                        "description": "Name for API Key.\n"
                    }
                },
                "type": "object",
                "required": [
                    "key"
                ]
            }
        },
        "datadog:index/getApplicationKey:getApplicationKey": {
            "description": "Use this data source to retrieve information about an existing application key.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as datadog from \"@pulumi/datadog\";\n\nconst foo = datadog.getApplicationKey({\n    name: \"foo-application\",\n});\n```\n```python\nimport pulumi\nimport pulumi_datadog as datadog\n\nfoo = datadog.get_application_key(name=\"foo-application\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Datadog = Pulumi.Datadog;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var foo = Datadog.GetApplicationKey.Invoke(new()\n    {\n        Name = \"foo-application\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-datadog/sdk/v4/go/datadog\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := datadog.LookupApplicationKey(ctx, \u0026datadog.LookupApplicationKeyArgs{\n\t\t\tName: pulumi.StringRef(\"foo-application\"),\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.datadog.DatadogFunctions;\nimport com.pulumi.datadog.inputs.GetApplicationKeyArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var foo = DatadogFunctions.getApplicationKey(GetApplicationKeyArgs.builder()\n            .name(\"foo-application\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  foo:\n    fn::invoke:\n      Function: datadog:getApplicationKey\n      Arguments:\n        name: foo-application\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getApplicationKey.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Id for Application Key.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name for Application Key.\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getApplicationKey.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Id for Application Key.\n"
                    },
                    "key": {
                        "type": "string",
                        "description": "The value of the Application Key.\n",
                        "secret": true
                    },
                    "name": {
                        "type": "string",
                        "description": "Name for Application Key.\n"
                    }
                },
                "type": "object",
                "required": [
                    "key"
                ]
            }
        },
        "datadog:index/getCloudWorkloadSecurityAgentRules:getCloudWorkloadSecurityAgentRules": {
            "description": "Use this data source to retrieve information about existing Cloud Workload Security Agent Rules for use in other resources.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as datadog from \"@pulumi/datadog\";\n\nconst test = datadog.getCloudWorkloadSecurityAgentRules({});\n```\n```python\nimport pulumi\nimport pulumi_datadog as datadog\n\ntest = datadog.get_cloud_workload_security_agent_rules()\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Datadog = Pulumi.Datadog;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var test = Datadog.GetCloudWorkloadSecurityAgentRules.Invoke();\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-datadog/sdk/v4/go/datadog\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := datadog.GetCloudWorkloadSecurityAgentRules(ctx, nil, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.datadog.DatadogFunctions;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var test = DatadogFunctions.getCloudWorkloadSecurityAgentRules();\n\n    }\n}\n```\n```yaml\nvariables:\n  test:\n    fn::invoke:\n      Function: datadog:getCloudWorkloadSecurityAgentRules\n      Arguments: {}\n```\n{{% /example %}}\n{{% /examples %}}",
            "outputs": {
                "description": "A collection of values returned by getCloudWorkloadSecurityAgentRules.\n",
                "properties": {
                    "agentRules": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/datadog:index/getCloudWorkloadSecurityAgentRulesAgentRule:getCloudWorkloadSecurityAgentRulesAgentRule"
                        },
                        "description": "List of Agent rules.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    }
                },
                "type": "object",
                "required": [
                    "agentRules",
                    "id"
                ]
            }
        },
        "datadog:index/getDashboard:getDashboard": {
            "description": "Use this data source to retrieve information about an existing dashboard, for use in other resources. In particular, it can be used in a monitor message to link to a specific dashboard.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as datadog from \"@pulumi/datadog\";\n\nconst test = datadog.getDashboard({\n    name: \"My super dashboard\",\n});\n```\n```python\nimport pulumi\nimport pulumi_datadog as datadog\n\ntest = datadog.get_dashboard(name=\"My super dashboard\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Datadog = Pulumi.Datadog;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var test = Datadog.GetDashboard.Invoke(new()\n    {\n        Name = \"My super dashboard\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-datadog/sdk/v4/go/datadog\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := datadog.LookupDashboard(ctx, \u0026datadog.LookupDashboardArgs{\n\t\t\tName: \"My super dashboard\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.datadog.DatadogFunctions;\nimport com.pulumi.datadog.inputs.GetDashboardArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var test = DatadogFunctions.getDashboard(GetDashboardArgs.builder()\n            .name(\"My super dashboard\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  test:\n    fn::invoke:\n      Function: datadog:getDashboard\n      Arguments:\n        name: My super dashboard\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getDashboard.\n",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The dashboard name to search for. Must only match one dashboard.\n"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getDashboard.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The dashboard name to search for. Must only match one dashboard.\n"
                    },
                    "title": {
                        "type": "string",
                        "description": "The name of the dashboard.\n"
                    },
                    "url": {
                        "type": "string",
                        "description": "The URL to a specific dashboard.\n"
                    }
                },
                "type": "object",
                "required": [
                    "name",
                    "title",
                    "url",
                    "id"
                ]
            }
        },
        "datadog:index/getDashboardList:getDashboardList": {
            "description": "Use this data source to retrieve information about an existing dashboard list, for use in other resources. In particular, it can be used in a dashboard to register it in the list.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as datadog from \"@pulumi/datadog\";\n\nconst test = datadog.getDashboardList({\n    name: \"My super list\",\n});\n// Create a dashboard and register it in the list above.\nconst time = new datadog.Dashboard(\"time\", {\n    dashboardLists: [test.then(test =\u003e test.id)],\n    description: \"Created using the Datadog provider in Terraform\",\n    isReadOnly: true,\n    layoutType: \"ordered\",\n    title: \"TF Test Layout Dashboard\",\n    widgets: [{\n        alertGraphDefinition: {\n            alertId: \"1234\",\n            liveSpan: \"1h\",\n            title: \"Widget Title\",\n            vizType: \"timeseries\",\n        },\n    }],\n});\n```\n```python\nimport pulumi\nimport pulumi_datadog as datadog\n\ntest = datadog.get_dashboard_list(name=\"My super list\")\n# Create a dashboard and register it in the list above.\ntime = datadog.Dashboard(\"time\",\n    dashboard_lists=[test.id],\n    description=\"Created using the Datadog provider in Terraform\",\n    is_read_only=True,\n    layout_type=\"ordered\",\n    title=\"TF Test Layout Dashboard\",\n    widgets=[datadog.DashboardWidgetArgs(\n        alert_graph_definition=datadog.DashboardWidgetAlertGraphDefinitionArgs(\n            alert_id=\"1234\",\n            live_span=\"1h\",\n            title=\"Widget Title\",\n            viz_type=\"timeseries\",\n        ),\n    )])\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Datadog = Pulumi.Datadog;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var test = Datadog.GetDashboardList.Invoke(new()\n    {\n        Name = \"My super list\",\n    });\n\n    // Create a dashboard and register it in the list above.\n    var time = new Datadog.Dashboard(\"time\", new()\n    {\n        DashboardLists = new[]\n        {\n            test.Apply(getDashboardListResult =\u003e getDashboardListResult.Id),\n        },\n        Description = \"Created using the Datadog provider in Terraform\",\n        IsReadOnly = true,\n        LayoutType = \"ordered\",\n        Title = \"TF Test Layout Dashboard\",\n        Widgets = new[]\n        {\n            new Datadog.Inputs.DashboardWidgetArgs\n            {\n                AlertGraphDefinition = new Datadog.Inputs.DashboardWidgetAlertGraphDefinitionArgs\n                {\n                    AlertId = \"1234\",\n                    LiveSpan = \"1h\",\n                    Title = \"Widget Title\",\n                    VizType = \"timeseries\",\n                },\n            },\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-datadog/sdk/v4/go/datadog\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\ttest, err := datadog.LookupDashboardList(ctx, \u0026datadog.LookupDashboardListArgs{\n\t\t\tName: \"My super list\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = datadog.NewDashboard(ctx, \"time\", \u0026datadog.DashboardArgs{\n\t\t\tDashboardLists: pulumi.IntArray{\n\t\t\t\t*pulumi.String(test.Id),\n\t\t\t},\n\t\t\tDescription: pulumi.String(\"Created using the Datadog provider in Terraform\"),\n\t\t\tIsReadOnly:  pulumi.Bool(true),\n\t\t\tLayoutType:  pulumi.String(\"ordered\"),\n\t\t\tTitle:       pulumi.String(\"TF Test Layout Dashboard\"),\n\t\t\tWidgets: datadog.DashboardWidgetArray{\n\t\t\t\t\u0026datadog.DashboardWidgetArgs{\n\t\t\t\t\tAlertGraphDefinition: \u0026datadog.DashboardWidgetAlertGraphDefinitionArgs{\n\t\t\t\t\t\tAlertId:  pulumi.String(\"1234\"),\n\t\t\t\t\t\tLiveSpan: pulumi.String(\"1h\"),\n\t\t\t\t\t\tTitle:    pulumi.String(\"Widget Title\"),\n\t\t\t\t\t\tVizType:  pulumi.String(\"timeseries\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.datadog.DatadogFunctions;\nimport com.pulumi.datadog.inputs.GetDashboardListArgs;\nimport com.pulumi.datadog.Dashboard;\nimport com.pulumi.datadog.DashboardArgs;\nimport com.pulumi.datadog.inputs.DashboardWidgetArgs;\nimport com.pulumi.datadog.inputs.DashboardWidgetAlertGraphDefinitionArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var test = DatadogFunctions.getDashboardList(GetDashboardListArgs.builder()\n            .name(\"My super list\")\n            .build());\n\n        var time = new Dashboard(\"time\", DashboardArgs.builder()        \n            .dashboardLists(test.applyValue(getDashboardListResult -\u003e getDashboardListResult.id()))\n            .description(\"Created using the Datadog provider in Terraform\")\n            .isReadOnly(true)\n            .layoutType(\"ordered\")\n            .title(\"TF Test Layout Dashboard\")\n            .widgets(DashboardWidgetArgs.builder()\n                .alertGraphDefinition(DashboardWidgetAlertGraphDefinitionArgs.builder()\n                    .alertId(\"1234\")\n                    .liveSpan(\"1h\")\n                    .title(\"Widget Title\")\n                    .vizType(\"timeseries\")\n                    .build())\n                .build())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  # Create a dashboard and register it in the list above.\n  time:\n    type: datadog:Dashboard\n    properties:\n      dashboardLists:\n        - ${test.id}\n      description: Created using the Datadog provider in Terraform\n      isReadOnly: true\n      layoutType: ordered\n      title: TF Test Layout Dashboard\n      widgets:\n        - alertGraphDefinition:\n            alertId: '1234'\n            liveSpan: 1h\n            title: Widget Title\n            vizType: timeseries\nvariables:\n  test:\n    fn::invoke:\n      Function: datadog:getDashboardList\n      Arguments:\n        name: My super list\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getDashboardList.\n",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "A dashboard list name to limit the search.\n"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getDashboardList.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "A dashboard list name to limit the search.\n"
                    }
                },
                "type": "object",
                "required": [
                    "name",
                    "id"
                ]
            }
        },
        "datadog:index/getHosts:getHosts": {
            "description": "Use this data source to retrieve information about your live hosts in Datadog.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.datadog.DatadogFunctions;\nimport com.pulumi.datadog.inputs.GetHostsArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var foo = DatadogFunctions.getHosts(GetHostsArgs.builder()\n            .includeHostsMetadata(true)\n            .includeMutedHostsData(true)\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  foo:\n    fn::invoke:\n      Function: datadog:getHosts\n      Arguments:\n        includeHostsMetadata: true\n        includeMutedHostsData: true\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getHosts.\n",
                "properties": {
                    "filter": {
                        "type": "string",
                        "description": "String to filter search results.\n"
                    },
                    "from": {
                        "type": "integer",
                        "description": "Number of seconds since UNIX epoch from which you want to search your hosts.\n"
                    },
                    "includeMutedHostsData": {
                        "type": "boolean",
                        "description": "Include information on the muted status of hosts and when the mute expires.\n"
                    },
                    "sortDir": {
                        "type": "string",
                        "description": "Direction of sort.\n"
                    },
                    "sortField": {
                        "type": "string",
                        "description": "Sort hosts by this field.\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getHosts.\n",
                "properties": {
                    "filter": {
                        "type": "string",
                        "description": "String to filter search results.\n"
                    },
                    "from": {
                        "type": "integer",
                        "description": "Number of seconds since UNIX epoch from which you want to search your hosts.\n"
                    },
                    "hostLists": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/datadog:index/getHostsHostList:getHostsHostList"
                        },
                        "description": "List of hosts (1000 Max).\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The ID of this resource.\n"
                    },
                    "includeMutedHostsData": {
                        "type": "boolean",
                        "description": "Include information on the muted status of hosts and when the mute expires.\n"
                    },
                    "sortDir": {
                        "type": "string",
                        "description": "Direction of sort.\n"
                    },
                    "sortField": {
                        "type": "string",
                        "description": "Sort hosts by this field.\n"
                    },
                    "totalMatching": {
                        "type": "integer",
                        "description": "Number of host matching the query.\n"
                    },
                    "totalReturned": {
                        "type": "integer",
                        "description": "Number of host returned.\n"
                    }
                },
                "type": "object",
                "required": [
                    "hostLists",
                    "id",
                    "totalMatching",
                    "totalReturned"
                ]
            }
        },
        "datadog:index/getIpRanges:getIpRanges": {
            "description": "Use this data source to retrieve information about Datadog's IP addresses.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as datadog from \"@pulumi/datadog\";\n\nconst test = datadog.getIpRanges({});\n```\n```python\nimport pulumi\nimport pulumi_datadog as datadog\n\ntest = datadog.get_ip_ranges()\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Datadog = Pulumi.Datadog;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var test = Datadog.GetIpRanges.Invoke();\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-datadog/sdk/v4/go/datadog\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := datadog.GetIpRanges(ctx, nil, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.datadog.DatadogFunctions;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var test = DatadogFunctions.getIpRanges();\n\n    }\n}\n```\n```yaml\nvariables:\n  test:\n    fn::invoke:\n      Function: datadog:getIpRanges\n      Arguments: {}\n```\n{{% /example %}}\n{{% /examples %}}",
            "outputs": {
                "description": "A collection of values returned by getIpRanges.\n",
                "properties": {
                    "agentsIpv4s": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "An Array of IPv4 addresses in CIDR format specifying the A records for the Agent endpoint.\n"
                    },
                    "agentsIpv6s": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "An Array of IPv6 addresses in CIDR format specifying the A records for the Agent endpoint.\n"
                    },
                    "apiIpv4s": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "An Array of IPv4 addresses in CIDR format specifying the A records for the API endpoint.\n"
                    },
                    "apiIpv6s": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "An Array of IPv6 addresses in CIDR format specifying the A records for the API endpoint.\n"
                    },
                    "apmIpv4s": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "An Array of IPv4 addresses in CIDR format specifying the A records for the APM endpoint.\n"
                    },
                    "apmIpv6s": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "An Array of IPv6 addresses in CIDR format specifying the A records for the APM endpoint.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The ID of this resource.\n"
                    },
                    "logsIpv4s": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "An Array of IPv4 addresses in CIDR format specifying the A records for the Logs endpoint.\n"
                    },
                    "logsIpv6s": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "An Array of IPv6 addresses in CIDR format specifying the A records for the Logs endpoint.\n"
                    },
                    "orchestratorIpv4s": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "An Array of IPv4 addresses in CIDR format specifying the A records for the Orchestrator endpoint.\n"
                    },
                    "orchestratorIpv6s": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "An Array of IPv6 addresses in CIDR format specifying the A records for the Orchestrator endpoint.\n"
                    },
                    "processIpv4s": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "An Array of IPv4 addresses in CIDR format specifying the A records for the Process endpoint.\n"
                    },
                    "processIpv6s": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "An Array of IPv6 addresses in CIDR format specifying the A records for the Process endpoint.\n"
                    },
                    "syntheticsIpv4ByLocation": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "A map of IPv4 prefixes (string of concatenated IPs, delimited by ',') by location.\n"
                    },
                    "syntheticsIpv4s": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "An Array of IPv4 addresses in CIDR format specifying the A records for the Synthetics endpoint.\n"
                    },
                    "syntheticsIpv6ByLocation": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "A map of IPv6 prefixes (string of concatenated IPs, delimited by ',') by location.\n"
                    },
                    "syntheticsIpv6s": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "An Array of IPv6 addresses in CIDR format specifying the A records for the Synthetics endpoint.\n"
                    },
                    "webhooksIpv4s": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "An Array of IPv4 addresses in CIDR format specifying the A records for the Webhooks endpoint.\n"
                    },
                    "webhooksIpv6s": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "An Array of IPv6 addresses in CIDR format specifying the A records for the Webhooks endpoint.\n"
                    }
                },
                "type": "object",
                "required": [
                    "agentsIpv4s",
                    "agentsIpv6s",
                    "apiIpv4s",
                    "apiIpv6s",
                    "apmIpv4s",
                    "apmIpv6s",
                    "id",
                    "logsIpv4s",
                    "logsIpv6s",
                    "orchestratorIpv4s",
                    "orchestratorIpv6s",
                    "processIpv4s",
                    "processIpv6s",
                    "syntheticsIpv4s",
                    "syntheticsIpv4ByLocation",
                    "syntheticsIpv6s",
                    "syntheticsIpv6ByLocation",
                    "webhooksIpv4s",
                    "webhooksIpv6s"
                ]
            }
        },
        "datadog:index/getLogsArchivesOrder:getLogsArchivesOrder": {
            "description": "Get the current order of your logs archives.\n",
            "outputs": {
                "description": "A collection of values returned by getLogsArchivesOrder.\n",
                "properties": {
                    "archiveIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The archive IDs list. The order of archive IDs in this attribute defines the overall archive order for logs.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    }
                },
                "type": "object",
                "required": [
                    "archiveIds",
                    "id"
                ]
            }
        },
        "datadog:index/getLogsIndexes:getLogsIndexes": {
            "description": "Use this data source to list several existing logs indexes for use in other resources.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as datadog from \"@pulumi/datadog\";\n\nconst test = datadog.getLogsIndexes({});\n```\n```python\nimport pulumi\nimport pulumi_datadog as datadog\n\ntest = datadog.get_logs_indexes()\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Datadog = Pulumi.Datadog;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var test = Datadog.GetLogsIndexes.Invoke();\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-datadog/sdk/v4/go/datadog\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := datadog.GetLogsIndexes(ctx, nil, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.datadog.DatadogFunctions;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var test = DatadogFunctions.getLogsIndexes();\n\n    }\n}\n```\n```yaml\nvariables:\n  test:\n    fn::invoke:\n      Function: datadog:getLogsIndexes\n      Arguments: {}\n```\n{{% /example %}}\n{{% /examples %}}",
            "outputs": {
                "description": "A collection of values returned by getLogsIndexes.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "logsIndexes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/datadog:index/getLogsIndexesLogsIndex:getLogsIndexesLogsIndex"
                        },
                        "description": "List of logs indexes\n"
                    }
                },
                "type": "object",
                "required": [
                    "logsIndexes",
                    "id"
                ]
            }
        },
        "datadog:index/getLogsIndexesOrder:getLogsIndexesOrder": {
            "description": "Get the current order of your log indexes.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as datadog from \"@pulumi/datadog\";\n\nconst test = datadog.getLogsIndexesOrder({});\n```\n```python\nimport pulumi\nimport pulumi_datadog as datadog\n\ntest = datadog.get_logs_indexes_order()\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Datadog = Pulumi.Datadog;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var test = Datadog.GetLogsIndexesOrder.Invoke();\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-datadog/sdk/v4/go/datadog\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := datadog.GetLogsIndexesOrder(ctx, nil, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.datadog.DatadogFunctions;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var test = DatadogFunctions.getLogsIndexesOrder();\n\n    }\n}\n```\n```yaml\nvariables:\n  test:\n    fn::invoke:\n      Function: datadog:getLogsIndexesOrder\n      Arguments: {}\n```\n{{% /example %}}\n{{% /examples %}}",
            "outputs": {
                "description": "A collection of values returned by getLogsIndexesOrder.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "indexNames": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Array of strings identifying by their name(s) the index(es) of your organization. Logs are tested against the query filter of each index one by one, following the order of the array. Logs are eventually stored in the first matching index.\n"
                    }
                },
                "type": "object",
                "required": [
                    "indexNames",
                    "id"
                ]
            }
        },
        "datadog:index/getLogsPipelines:getLogsPipelines": {
            "description": "Use this data source to list all existing logs pipelines for use in other resources.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as datadog from \"@pulumi/datadog\";\n\nconst pipelines = datadog.getLogsPipelines({});\n// Using data source to set pipeline order\nconst lpo = new datadog.LogsPipelineOrder(\"lpo\", {\n    name: \"lpo\",\n    pipelines: pipelines.then(pipelines =\u003e .map(pipeline =\u003e (pipeline.id))),\n});\n```\n```python\nimport pulumi\nimport pulumi_datadog as datadog\n\npipelines = datadog.get_logs_pipelines()\n# Using data source to set pipeline order\nlpo = datadog.LogsPipelineOrder(\"lpo\",\n    name=\"lpo\",\n    pipelines=[pipeline.id for pipeline in pipelines.logs_pipelines])\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Datadog = Pulumi.Datadog;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var pipelines = Datadog.GetLogsPipelines.Invoke();\n\n    // Using data source to set pipeline order\n    var lpo = new Datadog.LogsPipelineOrder(\"lpo\", new()\n    {\n        Name = \"lpo\",\n        Pipelines = .Select(pipeline =\u003e \n        {\n            return  pipeline.Id;\n        }),\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-datadog/sdk/v4/go/datadog\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tpipelines, err := datadog.GetLogsPipelines(ctx, nil, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = datadog.NewLogsPipelineOrder(ctx, \"lpo\", \u0026datadog.LogsPipelineOrderArgs{\n\t\t\tName:      pulumi.String(\"lpo\"),\n\t\t\tPipelines: \"TODO: For expression\",\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getLogsPipelines.\n",
                "properties": {
                    "isReadOnly": {
                        "type": "string",
                        "description": "Filter parameter for retrieved pipelines\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getLogsPipelines.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "isReadOnly": {
                        "type": "string",
                        "description": "Filter parameter for retrieved pipelines\n"
                    },
                    "logsPipelines": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/datadog:index/getLogsPipelinesLogsPipeline:getLogsPipelinesLogsPipeline"
                        },
                        "description": "List of logs pipelines\n"
                    }
                },
                "type": "object",
                "required": [
                    "logsPipelines",
                    "id"
                ]
            }
        },
        "datadog:index/getMonitor:getMonitor": {
            "description": "Use this data source to retrieve information about an existing monitor for use in other resources.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as datadog from \"@pulumi/datadog\";\n\nconst test = datadog.getMonitor({\n    monitorTagsFilters: [\"foo:bar\"],\n    nameFilter: \"My awesome monitor\",\n});\n```\n```python\nimport pulumi\nimport pulumi_datadog as datadog\n\ntest = datadog.get_monitor(monitor_tags_filters=[\"foo:bar\"],\n    name_filter=\"My awesome monitor\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Datadog = Pulumi.Datadog;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var test = Datadog.GetMonitor.Invoke(new()\n    {\n        MonitorTagsFilters = new[]\n        {\n            \"foo:bar\",\n        },\n        NameFilter = \"My awesome monitor\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-datadog/sdk/v4/go/datadog\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := datadog.LookupMonitor(ctx, \u0026datadog.LookupMonitorArgs{\n\t\t\tMonitorTagsFilters: []string{\n\t\t\t\t\"foo:bar\",\n\t\t\t},\n\t\t\tNameFilter: pulumi.StringRef(\"My awesome monitor\"),\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.datadog.DatadogFunctions;\nimport com.pulumi.datadog.inputs.GetMonitorArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var test = DatadogFunctions.getMonitor(GetMonitorArgs.builder()\n            .monitorTagsFilters(\"foo:bar\")\n            .nameFilter(\"My awesome monitor\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  test:\n    fn::invoke:\n      Function: datadog:getMonitor\n      Arguments:\n        monitorTagsFilters:\n          - foo:bar\n        nameFilter: My awesome monitor\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getMonitor.\n",
                "properties": {
                    "monitorTagsFilters": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of monitor tags to limit the search. This filters on the tags set on the monitor itself.\n"
                    },
                    "nameFilter": {
                        "type": "string",
                        "description": "A monitor name to limit the search.\n"
                    },
                    "tagsFilters": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of tags to limit the search. This filters on the monitor scope.\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getMonitor.\n",
                "properties": {
                    "enableLogsSample": {
                        "type": "boolean",
                        "description": "Whether or not a list of log values which triggered the alert is included. This is only used by log monitors.\n"
                    },
                    "enableSamples": {
                        "type": "boolean",
                        "description": "Whether or not a list of samples which triggered the alert is included. This is only used by CI Test and Pipeline monitors.\n"
                    },
                    "escalationMessage": {
                        "type": "string",
                        "description": "Message included with a re-notification for this monitor.\n"
                    },
                    "evaluationDelay": {
                        "type": "integer",
                        "description": "Time (in seconds) for which evaluation is delayed. This is only used by metric monitors.\n"
                    },
                    "groupRetentionDuration": {
                        "type": "string",
                        "description": "The time span after which groups with missing data are dropped from the monitor state. The minimum value is one hour, and the maximum value is 72 hours. Example values are: 60m, 1h, and 2d. This option is only available for APM Trace Analytics, Audit Trail, CI, Error Tracking, Event, Logs, and RUM monitors.\n"
                    },
                    "groupbySimpleMonitor": {
                        "type": "boolean",
                        "description": "Whether or not to trigger one alert if any source breaches a threshold.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "includeTags": {
                        "type": "boolean",
                        "description": "Whether or not notifications from the monitor automatically inserts its triggering tags into the title.\n"
                    },
                    "locked": {
                        "type": "boolean",
                        "description": "Whether or not changes to the monitor are restricted to the creator or admins.\n"
                    },
                    "message": {
                        "type": "string",
                        "description": "Message included with notifications for this monitor\n"
                    },
                    "monitorTagsFilters": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of monitor tags to limit the search. This filters on the tags set on the monitor itself.\n"
                    },
                    "monitorThresholdWindows": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/datadog:index/getMonitorMonitorThresholdWindow:getMonitorMonitorThresholdWindow"
                        },
                        "description": "Mapping containing `recovery_window` and `trigger_window` values, e.g. `last_15m`. This is only used by anomaly monitors.\n"
                    },
                    "monitorThresholds": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/datadog:index/getMonitorMonitorThreshold:getMonitorMonitorThreshold"
                        },
                        "description": "Alert thresholds of the monitor.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the monitor\n"
                    },
                    "nameFilter": {
                        "type": "string",
                        "description": "A monitor name to limit the search.\n"
                    },
                    "newGroupDelay": {
                        "type": "integer",
                        "description": "Time (in seconds) to skip evaluations for new groups.\n"
                    },
                    "newHostDelay": {
                        "type": "integer",
                        "description": "Time (in seconds) allowing a host to boot and applications to fully start before starting the evaluation of monitor results.\n"
                    },
                    "noDataTimeframe": {
                        "type": "integer",
                        "description": "The number of minutes before the monitor notifies when data stops reporting.\n"
                    },
                    "notificationPresetName": {
                        "type": "string",
                        "description": "Toggles the display of additional content sent in the monitor notification. Valid values are: `show_all`, `hide_query`, `hide_handles`, and `hide_all`.\n"
                    },
                    "notifyAudit": {
                        "type": "boolean",
                        "description": "Whether or not tagged users are notified on changes to the monitor.\n"
                    },
                    "notifyBies": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Controls what granularity a monitor alerts on. Only available for monitors with groupings. For instance, a monitor grouped by `cluster`, `namespace`, and `pod` can be configured to only notify on each new `cluster` violating the alert conditions by setting `notify_by` to `['cluster']`. Tags mentioned in `notify_by` must be a subset of the grouping tags in the query. For example, a query grouped by `cluster` and `namespace` cannot notify on `region`. Setting `notify_by` to `[*]` configures the monitor to notify as a simple-alert.\n"
                    },
                    "notifyNoData": {
                        "type": "boolean",
                        "description": "Whether or not this monitor notifies when data stops reporting.\n"
                    },
                    "onMissingData": {
                        "type": "string",
                        "description": "Controls how groups or monitors are treated if an evaluation does not return any data points. The default option results in different behavior depending on the monitor query type. For monitors using `Count` queries, an empty monitor evaluation is treated as 0 and is compared to the threshold conditions. For monitors using any query type other than `Count`, for example `Gauge`, `Measure`, or `Rate`, the monitor shows the last known status. This option is only available for APM Trace Analytics, Audit Trail, CI, Error Tracking, Event, Logs, and RUM monitors. Valid values are: `show_no_data`, `show_and_notify_no_data`, `resolve`, and `default`.\n"
                    },
                    "query": {
                        "type": "string",
                        "description": "Query of the monitor.\n"
                    },
                    "renotifyInterval": {
                        "type": "integer",
                        "description": "The number of minutes after the last notification before the monitor re-notifies on the current status.\n"
                    },
                    "renotifyOccurrences": {
                        "type": "integer",
                        "description": "The number of re-notification messages that should be sent on the current status.\n"
                    },
                    "renotifyStatuses": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The types of statuses for which re-notification messages should be sent. Valid values are `alert`, `warn`, `no data`.\n"
                    },
                    "requireFullWindow": {
                        "type": "boolean",
                        "description": "Whether or not the monitor needs a full window of data before it is evaluated.\n"
                    },
                    "restrictedRoles": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "schedulingOptions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/datadog:index/getMonitorSchedulingOption:getMonitorSchedulingOption"
                        },
                        "description": "Configuration options for scheduling.\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of tags associated with the monitor.\n"
                    },
                    "tagsFilters": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of tags to limit the search. This filters on the monitor scope.\n"
                    },
                    "timeoutH": {
                        "type": "integer",
                        "description": "Number of hours of the monitor not reporting data before it automatically resolves from a triggered state.\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "Type of the monitor.\n"
                    }
                },
                "type": "object",
                "required": [
                    "enableLogsSample",
                    "enableSamples",
                    "escalationMessage",
                    "evaluationDelay",
                    "groupRetentionDuration",
                    "groupbySimpleMonitor",
                    "includeTags",
                    "locked",
                    "message",
                    "monitorThresholdWindows",
                    "monitorThresholds",
                    "name",
                    "newGroupDelay",
                    "newHostDelay",
                    "noDataTimeframe",
                    "notificationPresetName",
                    "notifyAudit",
                    "notifyBies",
                    "notifyNoData",
                    "onMissingData",
                    "query",
                    "renotifyInterval",
                    "renotifyOccurrences",
                    "renotifyStatuses",
                    "requireFullWindow",
                    "restrictedRoles",
                    "schedulingOptions",
                    "tags",
                    "timeoutH",
                    "type",
                    "id"
                ]
            }
        },
        "datadog:index/getMonitorConfigPolicies:getMonitorConfigPolicies": {
            "description": "Use this data source to list existing monitor config policies for use in other resources.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as datadog from \"@pulumi/datadog\";\n\nconst test = datadog.getMonitorConfigPolicies({});\n```\n```python\nimport pulumi\nimport pulumi_datadog as datadog\n\ntest = datadog.get_monitor_config_policies()\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Datadog = Pulumi.Datadog;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var test = Datadog.GetMonitorConfigPolicies.Invoke();\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-datadog/sdk/v4/go/datadog\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := datadog.GetMonitorConfigPolicies(ctx, nil, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.datadog.DatadogFunctions;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var test = DatadogFunctions.getMonitorConfigPolicies();\n\n    }\n}\n```\n```yaml\nvariables:\n  test:\n    fn::invoke:\n      Function: datadog:getMonitorConfigPolicies\n      Arguments: {}\n```\n{{% /example %}}\n{{% /examples %}}",
            "outputs": {
                "description": "A collection of values returned by getMonitorConfigPolicies.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "monitorConfigPolicies": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/datadog:index/getMonitorConfigPoliciesMonitorConfigPolicy:getMonitorConfigPoliciesMonitorConfigPolicy"
                        },
                        "description": "List of monitor config policies\n"
                    }
                },
                "type": "object",
                "required": [
                    "monitorConfigPolicies",
                    "id"
                ]
            }
        },
        "datadog:index/getMonitors:getMonitors": {
            "description": "Use this data source to list several existing monitors for use in other resources.\n",
            "inputs": {
                "description": "A collection of arguments for invoking getMonitors.\n",
                "properties": {
                    "monitorTagsFilters": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of monitor tags to limit the search. This filters on the tags set on the monitor itself.\n"
                    },
                    "nameFilter": {
                        "type": "string",
                        "description": "A monitor name to limit the search.\n"
                    },
                    "tagsFilters": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of tags to limit the search. This filters on the monitor scope.\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getMonitors.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "monitorTagsFilters": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of monitor tags to limit the search. This filters on the tags set on the monitor itself.\n"
                    },
                    "monitors": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/datadog:index/getMonitorsMonitor:getMonitorsMonitor"
                        },
                        "description": "List of monitors\n"
                    },
                    "nameFilter": {
                        "type": "string",
                        "description": "A monitor name to limit the search.\n"
                    },
                    "tagsFilters": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of tags to limit the search. This filters on the monitor scope.\n"
                    }
                },
                "type": "object",
                "required": [
                    "monitors",
                    "id"
                ]
            }
        },
        "datadog:index/getPermissions:getPermissions": {
            "description": "Use this data source to retrieve the list of Datadog permissions by name and their corresponding ID, for use in the role resource.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as datadog from \"@pulumi/datadog\";\n\nconst permissions = datadog.getPermissions({});\n```\n```python\nimport pulumi\nimport pulumi_datadog as datadog\n\npermissions = datadog.get_permissions()\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Datadog = Pulumi.Datadog;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var permissions = Datadog.GetPermissions.Invoke();\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-datadog/sdk/v4/go/datadog\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := datadog.GetPermissions(ctx, nil, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.datadog.DatadogFunctions;\nimport com.pulumi.datadog.inputs.GetPermissionsArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var permissions = DatadogFunctions.getPermissions();\n\n    }\n}\n```\n```yaml\nvariables:\n  permissions:\n    fn::invoke:\n      Function: datadog:getPermissions\n      Arguments: {}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getPermissions.\n",
                "properties": {
                    "includeRestricted": {
                        "type": "boolean",
                        "description": "Whether to include restricted permissions. Restricted permissions are granted by default to all users of a Datadog org, and cannot be manually granted or revoked.\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getPermissions.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "includeRestricted": {
                        "type": "boolean",
                        "description": "Whether to include restricted permissions. Restricted permissions are granted by default to all users of a Datadog org, and cannot be manually granted or revoked.\n"
                    },
                    "permissions": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "Map of permissions names to their corresponding ID.\n"
                    }
                },
                "type": "object",
                "required": [
                    "permissions",
                    "id"
                ]
            }
        },
        "datadog:index/getRole:getRole": {
            "description": "Use this data source to retrieve information about an existing role for use in other resources.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as datadog from \"@pulumi/datadog\";\n\nconst test = datadog.getRole({\n    filter: \"Datadog Standard Role\",\n});\n```\n```python\nimport pulumi\nimport pulumi_datadog as datadog\n\ntest = datadog.get_role(filter=\"Datadog Standard Role\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Datadog = Pulumi.Datadog;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var test = Datadog.GetRole.Invoke(new()\n    {\n        Filter = \"Datadog Standard Role\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-datadog/sdk/v4/go/datadog\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := datadog.LookupRole(ctx, \u0026datadog.LookupRoleArgs{\n\t\t\tFilter: \"Datadog Standard Role\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.datadog.DatadogFunctions;\nimport com.pulumi.datadog.inputs.GetRoleArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var test = DatadogFunctions.getRole(GetRoleArgs.builder()\n            .filter(\"Datadog Standard Role\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  test:\n    fn::invoke:\n      Function: datadog:getRole\n      Arguments:\n        filter: Datadog Standard Role\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getRole.\n",
                "properties": {
                    "filter": {
                        "type": "string",
                        "description": "A string on which to filter the roles.\n"
                    }
                },
                "type": "object",
                "required": [
                    "filter"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getRole.\n",
                "properties": {
                    "filter": {
                        "type": "string",
                        "description": "A string on which to filter the roles.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the role.\n"
                    },
                    "userCount": {
                        "type": "integer",
                        "description": "Number of users assigned to this role.\n"
                    }
                },
                "type": "object",
                "required": [
                    "filter",
                    "name",
                    "userCount",
                    "id"
                ]
            }
        },
        "datadog:index/getRoles:getRoles": {
            "description": "Use this data source to retrieve information about multiple roles for use in other resources.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as datadog from \"@pulumi/datadog\";\n\nconst foo = datadog.getRoles({\n    filter: \"Datadog\",\n});\n```\n```python\nimport pulumi\nimport pulumi_datadog as datadog\n\nfoo = datadog.get_roles(filter=\"Datadog\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Datadog = Pulumi.Datadog;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var foo = Datadog.GetRoles.Invoke(new()\n    {\n        Filter = \"Datadog\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-datadog/sdk/v4/go/datadog\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := datadog.GetRoles(ctx, \u0026datadog.GetRolesArgs{\n\t\t\tFilter: pulumi.StringRef(\"Datadog\"),\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.datadog.DatadogFunctions;\nimport com.pulumi.datadog.inputs.GetRolesArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var foo = DatadogFunctions.getRoles(GetRolesArgs.builder()\n            .filter(\"Datadog\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  foo:\n    fn::invoke:\n      Function: datadog:getRoles\n      Arguments:\n        filter: Datadog\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getRoles.\n",
                "properties": {
                    "filter": {
                        "type": "string",
                        "description": "Filter all roles by the given string.\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getRoles.\n",
                "properties": {
                    "filter": {
                        "type": "string",
                        "description": "Filter all roles by the given string.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "roles": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/datadog:index/getRolesRole:getRolesRole"
                        },
                        "description": "List of Roles\n"
                    }
                },
                "type": "object",
                "required": [
                    "roles",
                    "id"
                ]
            }
        },
        "datadog:index/getRumApplication:getRumApplication": {
            "description": "Use this data source to retrieve a Datadog RUM Application.\n",
            "inputs": {
                "description": "A collection of arguments for invoking getRumApplication.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "ID of the RUM application. Cannot be used with name and type filters.\n"
                    },
                    "nameFilter": {
                        "type": "string",
                        "description": "The name used to search for a RUM application\n"
                    },
                    "typeFilter": {
                        "type": "string",
                        "description": "The type used to search for a RUM application\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getRumApplication.\n",
                "properties": {
                    "clientToken": {
                        "type": "string",
                        "description": "The client token\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "ID of the RUM application. Cannot be used with name and type filters.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the RUM application\n"
                    },
                    "nameFilter": {
                        "type": "string",
                        "description": "The name used to search for a RUM application\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "The RUM application type. Supported values are `browser`, `ios`, `android`, `react-native`, `flutter`\n"
                    },
                    "typeFilter": {
                        "type": "string",
                        "description": "The type used to search for a RUM application\n"
                    }
                },
                "type": "object",
                "required": [
                    "clientToken",
                    "id",
                    "name",
                    "type"
                ]
            }
        },
        "datadog:index/getSecurityMonitoringFilters:getSecurityMonitoringFilters": {
            "description": "Use this data source to retrieve information about existing security monitoring filters for use in other resources.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as datadog from \"@pulumi/datadog\";\n\nconst test = datadog.getSecurityMonitoringFilters({});\n```\n```python\nimport pulumi\nimport pulumi_datadog as datadog\n\ntest = datadog.get_security_monitoring_filters()\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Datadog = Pulumi.Datadog;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var test = Datadog.GetSecurityMonitoringFilters.Invoke();\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-datadog/sdk/v4/go/datadog\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := datadog.GetSecurityMonitoringFilters(ctx, nil, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.datadog.DatadogFunctions;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var test = DatadogFunctions.getSecurityMonitoringFilters();\n\n    }\n}\n```\n```yaml\nvariables:\n  test:\n    fn::invoke:\n      Function: datadog:getSecurityMonitoringFilters\n      Arguments: {}\n```\n{{% /example %}}\n{{% /examples %}}",
            "outputs": {
                "description": "A collection of values returned by getSecurityMonitoringFilters.\n",
                "properties": {
                    "filters": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/datadog:index/getSecurityMonitoringFiltersFilter:getSecurityMonitoringFiltersFilter"
                        },
                        "description": "List of filters.\n"
                    },
                    "filtersIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of IDs of filters.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    }
                },
                "type": "object",
                "required": [
                    "filters",
                    "filtersIds",
                    "id"
                ]
            }
        },
        "datadog:index/getSecurityMonitoringRules:getSecurityMonitoringRules": {
            "description": "Use this data source to retrieve information about existing security monitoring rules for use in other resources.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as datadog from \"@pulumi/datadog\";\n\nconst test = datadog.getSecurityMonitoringRules({\n    defaultOnlyFilter: true,\n    nameFilter: \"attack\",\n    tagsFilters: [\"foo:bar\"],\n});\n```\n```python\nimport pulumi\nimport pulumi_datadog as datadog\n\ntest = datadog.get_security_monitoring_rules(default_only_filter=True,\n    name_filter=\"attack\",\n    tags_filters=[\"foo:bar\"])\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Datadog = Pulumi.Datadog;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var test = Datadog.GetSecurityMonitoringRules.Invoke(new()\n    {\n        DefaultOnlyFilter = true,\n        NameFilter = \"attack\",\n        TagsFilters = new[]\n        {\n            \"foo:bar\",\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-datadog/sdk/v4/go/datadog\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := datadog.GetSecurityMonitoringRules(ctx, \u0026datadog.GetSecurityMonitoringRulesArgs{\n\t\t\tDefaultOnlyFilter: pulumi.BoolRef(true),\n\t\t\tNameFilter:        pulumi.StringRef(\"attack\"),\n\t\t\tTagsFilters: []string{\n\t\t\t\t\"foo:bar\",\n\t\t\t},\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.datadog.DatadogFunctions;\nimport com.pulumi.datadog.inputs.GetSecurityMonitoringRulesArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var test = DatadogFunctions.getSecurityMonitoringRules(GetSecurityMonitoringRulesArgs.builder()\n            .defaultOnlyFilter(true)\n            .nameFilter(\"attack\")\n            .tagsFilters(\"foo:bar\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  test:\n    fn::invoke:\n      Function: datadog:getSecurityMonitoringRules\n      Arguments:\n        defaultOnlyFilter: true\n        nameFilter: attack\n        tagsFilters:\n          - foo:bar\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getSecurityMonitoringRules.\n",
                "properties": {
                    "defaultOnlyFilter": {
                        "type": "boolean",
                        "description": "Limit the search to default rules\n"
                    },
                    "nameFilter": {
                        "type": "string",
                        "description": "A rule name to limit the search\n"
                    },
                    "tagsFilters": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of tags to limit the search\n"
                    },
                    "userOnlyFilter": {
                        "type": "boolean",
                        "description": "Limit the search to user rules\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getSecurityMonitoringRules.\n",
                "properties": {
                    "defaultOnlyFilter": {
                        "type": "boolean",
                        "description": "Limit the search to default rules\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "nameFilter": {
                        "type": "string",
                        "description": "A rule name to limit the search\n"
                    },
                    "ruleIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of IDs of the matched rules.\n"
                    },
                    "rules": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/datadog:index/getSecurityMonitoringRulesRule:getSecurityMonitoringRulesRule"
                        },
                        "description": "List of rules.\n"
                    },
                    "tagsFilters": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of tags to limit the search\n"
                    },
                    "userOnlyFilter": {
                        "type": "boolean",
                        "description": "Limit the search to user rules\n"
                    }
                },
                "type": "object",
                "required": [
                    "ruleIds",
                    "rules",
                    "id"
                ]
            }
        },
        "datadog:index/getSensitiveDataScannerGroupOrder:getSensitiveDataScannerGroupOrder": {
            "description": "Provides a Datadog Sensitive Data Scanner Group Order API data source. This can be used to retrieve the order of Datadog Sensitive Data Scanner Groups.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as datadog from \"@pulumi/datadog\";\n\nconst foo = datadog.getSensitiveDataScannerGroupOrder({});\nconst foobar = new datadog.SensitiveDataScannerGroupOrder(\"foobar\", {groupIds: foo.then(foo =\u003e foo.groupIds)});\n```\n```python\nimport pulumi\nimport pulumi_datadog as datadog\n\nfoo = datadog.get_sensitive_data_scanner_group_order()\nfoobar = datadog.SensitiveDataScannerGroupOrder(\"foobar\", group_ids=foo.group_ids)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Datadog = Pulumi.Datadog;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var foo = Datadog.GetSensitiveDataScannerGroupOrder.Invoke();\n\n    var foobar = new Datadog.SensitiveDataScannerGroupOrder(\"foobar\", new()\n    {\n        GroupIds = foo.Apply(getSensitiveDataScannerGroupOrderResult =\u003e getSensitiveDataScannerGroupOrderResult.GroupIds),\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-datadog/sdk/v4/go/datadog\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tfoo, err := datadog.LookupSensitiveDataScannerGroupOrder(ctx, nil, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = datadog.NewSensitiveDataScannerGroupOrder(ctx, \"foobar\", \u0026datadog.SensitiveDataScannerGroupOrderArgs{\n\t\t\tGroupIds: interface{}(foo.GroupIds),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.datadog.DatadogFunctions;\nimport com.pulumi.datadog.SensitiveDataScannerGroupOrder;\nimport com.pulumi.datadog.SensitiveDataScannerGroupOrderArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var foo = DatadogFunctions.getSensitiveDataScannerGroupOrder();\n\n        var foobar = new SensitiveDataScannerGroupOrder(\"foobar\", SensitiveDataScannerGroupOrderArgs.builder()        \n            .groupIds(foo.applyValue(getSensitiveDataScannerGroupOrderResult -\u003e getSensitiveDataScannerGroupOrderResult.groupIds()))\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  foobar:\n    type: datadog:SensitiveDataScannerGroupOrder\n    properties:\n      groupIds: ${foo.groupIds}\nvariables:\n  foo:\n    fn::invoke:\n      Function: datadog:getSensitiveDataScannerGroupOrder\n      Arguments: {}\n```\n{{% /example %}}\n{{% /examples %}}",
            "outputs": {
                "description": "A collection of values returned by getSensitiveDataScannerGroupOrder.\n",
                "properties": {
                    "groupIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The list of Sensitive Data Scanner group IDs, in order. Logs are tested against the query filter of each index one by one following the order of the list.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The ID of this resource.\n"
                    }
                },
                "type": "object",
                "required": [
                    "groupIds",
                    "id"
                ]
            }
        },
        "datadog:index/getSensitiveDataScannerStandardPattern:getSensitiveDataScannerStandardPattern": {
            "description": "Use this data source to retrieve information about an existing sensitive data scanner standard pattern.\n",
            "inputs": {
                "description": "A collection of arguments for invoking getSensitiveDataScannerStandardPattern.\n",
                "properties": {
                    "filter": {
                        "type": "string",
                        "description": "Filter all the Datadog standard patterns by name.\n"
                    }
                },
                "type": "object",
                "required": [
                    "filter"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSensitiveDataScannerStandardPattern.\n",
                "properties": {
                    "filter": {
                        "type": "string",
                        "description": "Filter all the Datadog standard patterns by name.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the standard pattern.\n"
                    },
                    "pattern": {
                        "type": "string",
                        "description": "Regex that the standard pattern applies.\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of tags.\n"
                    }
                },
                "type": "object",
                "required": [
                    "filter",
                    "name",
                    "pattern",
                    "tags",
                    "id"
                ]
            }
        },
        "datadog:index/getServiceLevelObjective:getServiceLevelObjective": {
            "description": "Use this data source to retrieve information about an existing SLO for use in other resources.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as datadog from \"@pulumi/datadog\";\n\nconst test = datadog.getServiceLevelObjective({\n    nameQuery: \"My test SLO\",\n    tagsQuery: \"foo:bar\",\n});\nconst apiSlo = datadog.getServiceLevelObjective({\n    id: data.terraform_remote_state.api.outputs.slo,\n});\n```\n```python\nimport pulumi\nimport pulumi_datadog as datadog\n\ntest = datadog.get_service_level_objective(name_query=\"My test SLO\",\n    tags_query=\"foo:bar\")\napi_slo = datadog.get_service_level_objective(id=data[\"terraform_remote_state\"][\"api\"][\"outputs\"][\"slo\"])\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Datadog = Pulumi.Datadog;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var test = Datadog.GetServiceLevelObjective.Invoke(new()\n    {\n        NameQuery = \"My test SLO\",\n        TagsQuery = \"foo:bar\",\n    });\n\n    var apiSlo = Datadog.GetServiceLevelObjective.Invoke(new()\n    {\n        Id = data.Terraform_remote_state.Api.Outputs.Slo,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-datadog/sdk/v4/go/datadog\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := datadog.LookupServiceLevelObjective(ctx, \u0026datadog.LookupServiceLevelObjectiveArgs{\n\t\t\tNameQuery: pulumi.StringRef(\"My test SLO\"),\n\t\t\tTagsQuery: pulumi.StringRef(\"foo:bar\"),\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = datadog.LookupServiceLevelObjective(ctx, \u0026datadog.LookupServiceLevelObjectiveArgs{\n\t\t\tId: pulumi.StringRef(data.Terraform_remote_state.Api.Outputs.Slo),\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.datadog.DatadogFunctions;\nimport com.pulumi.datadog.inputs.GetServiceLevelObjectiveArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var test = DatadogFunctions.getServiceLevelObjective(GetServiceLevelObjectiveArgs.builder()\n            .nameQuery(\"My test SLO\")\n            .tagsQuery(\"foo:bar\")\n            .build());\n\n        final var apiSlo = DatadogFunctions.getServiceLevelObjective(GetServiceLevelObjectiveArgs.builder()\n            .id(data.terraform_remote_state().api().outputs().slo())\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  test:\n    fn::invoke:\n      Function: datadog:getServiceLevelObjective\n      Arguments:\n        nameQuery: My test SLO\n        tagsQuery: foo:bar\n  apiSlo:\n    fn::invoke:\n      Function: datadog:getServiceLevelObjective\n      Arguments:\n        id: ${data.terraform_remote_state.api.outputs.slo}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getServiceLevelObjective.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "A SLO ID to limit the search.\n"
                    },
                    "metricsQuery": {
                        "type": "string",
                        "description": "Filter results based on SLO numerator and denominator.\n"
                    },
                    "nameQuery": {
                        "type": "string",
                        "description": "Filter results based on SLO names.\n"
                    },
                    "tagsQuery": {
                        "type": "string",
                        "description": "Filter results based on a single SLO tag.\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getServiceLevelObjective.\n",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "The description of the service level objective.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "A SLO ID to limit the search.\n"
                    },
                    "metricsQuery": {
                        "type": "string",
                        "description": "Filter results based on SLO numerator and denominator.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the Datadog service level objective\n"
                    },
                    "nameQuery": {
                        "type": "string",
                        "description": "Filter results based on SLO names.\n"
                    },
                    "queries": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/datadog:index/getServiceLevelObjectiveQuery:getServiceLevelObjectiveQuery"
                        },
                        "description": "The metric query of good / total events\n"
                    },
                    "tagsQuery": {
                        "type": "string",
                        "description": "Filter results based on a single SLO tag.\n"
                    },
                    "targetThreshold": {
                        "type": "number",
                        "description": "The primary target threshold of the service level objective.\n"
                    },
                    "timeframe": {
                        "type": "string",
                        "description": "The primary timeframe of the service level objective.\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "The type of the service level objective. The mapping from these types to the types found in the Datadog Web UI can be found in the Datadog API [documentation page](https://docs.datadoghq.com/api/v1/service-level-objectives/#create-a-slo-object). Available values are: `metric` and `monitor`.\n"
                    },
                    "warningThreshold": {
                        "type": "number",
                        "description": "The primary warning threshold of the service level objective.\n"
                    }
                },
                "type": "object",
                "required": [
                    "description",
                    "name",
                    "queries",
                    "targetThreshold",
                    "timeframe",
                    "type",
                    "warningThreshold"
                ]
            }
        },
        "datadog:index/getServiceLevelObjectives:getServiceLevelObjectives": {
            "description": "Use this data source to retrieve information about multiple SLOs for use in other resources.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as datadog from \"@pulumi/datadog\";\n\nconst ftFooSlos = datadog.getServiceLevelObjectives({\n    tagsQuery: \"owner:ft-foo\",\n});\n```\n```python\nimport pulumi\nimport pulumi_datadog as datadog\n\nft_foo_slos = datadog.get_service_level_objectives(tags_query=\"owner:ft-foo\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Datadog = Pulumi.Datadog;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var ftFooSlos = Datadog.GetServiceLevelObjectives.Invoke(new()\n    {\n        TagsQuery = \"owner:ft-foo\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-datadog/sdk/v4/go/datadog\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := datadog.GetServiceLevelObjectives(ctx, \u0026datadog.GetServiceLevelObjectivesArgs{\n\t\t\tTagsQuery: pulumi.StringRef(\"owner:ft-foo\"),\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.datadog.DatadogFunctions;\nimport com.pulumi.datadog.inputs.GetServiceLevelObjectivesArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var ftFooSlos = DatadogFunctions.getServiceLevelObjectives(GetServiceLevelObjectivesArgs.builder()\n            .tagsQuery(\"owner:ft-foo\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  ftFooSlos:\n    fn::invoke:\n      Function: datadog:getServiceLevelObjectives\n      Arguments:\n        tagsQuery: owner:ft-foo\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getServiceLevelObjectives.\n",
                "properties": {
                    "ids": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "An array of SLO IDs to limit the search.\n"
                    },
                    "metricsQuery": {
                        "type": "string",
                        "description": "Filter results based on SLO numerator and denominator.\n"
                    },
                    "nameQuery": {
                        "type": "string",
                        "description": "Filter results based on SLO names.\n"
                    },
                    "tagsQuery": {
                        "type": "string",
                        "description": "Filter results based on a single SLO tag.\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getServiceLevelObjectives.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "ids": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "An array of SLO IDs to limit the search.\n"
                    },
                    "metricsQuery": {
                        "type": "string",
                        "description": "Filter results based on SLO numerator and denominator.\n"
                    },
                    "nameQuery": {
                        "type": "string",
                        "description": "Filter results based on SLO names.\n"
                    },
                    "slos": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/datadog:index/getServiceLevelObjectivesSlo:getServiceLevelObjectivesSlo"
                        },
                        "description": "List of SLOs\n"
                    },
                    "tagsQuery": {
                        "type": "string",
                        "description": "Filter results based on a single SLO tag.\n"
                    }
                },
                "type": "object",
                "required": [
                    "slos",
                    "id"
                ]
            }
        },
        "datadog:index/getSyntheticsGlobalVariable:getSyntheticsGlobalVariable": {
            "description": "Use this data source to retrieve a Datadog Synthetics global variable (to be used in Synthetics tests).\n",
            "inputs": {
                "description": "A collection of arguments for invoking getSyntheticsGlobalVariable.\n",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The synthetics global variable name to search for. Must only match one global variable.\n"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSyntheticsGlobalVariable.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The synthetics global variable name to search for. Must only match one global variable.\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of tags assigned to the Synthetics global variable.\n"
                    }
                },
                "type": "object",
                "required": [
                    "name",
                    "tags",
                    "id"
                ]
            }
        },
        "datadog:index/getSyntheticsLocations:getSyntheticsLocations": {
            "description": "Use this data source to retrieve Datadog's Synthetics Locations (to be used in Synthetics tests).\n",
            "outputs": {
                "description": "A collection of values returned by getSyntheticsLocations.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "locations": {
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "pulumi.json#/Any"
                        },
                        "description": "A map of available Synthetics location IDs to names for Synthetics tests.\n"
                    }
                },
                "type": "object",
                "required": [
                    "locations",
                    "id"
                ]
            }
        },
        "datadog:index/getSyntheticsTest:getSyntheticsTest": {
            "description": "Use this data source to retrieve a Datadog Synthetic Test.\n",
            "inputs": {
                "description": "A collection of arguments for invoking getSyntheticsTest.\n",
                "properties": {
                    "testId": {
                        "type": "string",
                        "description": "The synthetic test id to search for\n"
                    }
                },
                "type": "object",
                "required": [
                    "testId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSyntheticsTest.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the synthetic test.\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of tags assigned to the synthetic test.\n"
                    },
                    "testId": {
                        "type": "string",
                        "description": "The synthetic test id to search for\n"
                    },
                    "url": {
                        "type": "string",
                        "description": "The start URL of the synthetic test.\n"
                    }
                },
                "type": "object",
                "required": [
                    "name",
                    "tags",
                    "testId",
                    "url",
                    "id"
                ]
            }
        },
        "datadog:index/getTeam:getTeam": {
            "description": "Use this data source to retrieve information about an existing Datadog team.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as datadog from \"@pulumi/datadog\";\n\nconst foo = datadog.getTeam({\n    teamId: \"e6723c40-edb1-11ed-b816-da7ad0900002\",\n});\n```\n```python\nimport pulumi\nimport pulumi_datadog as datadog\n\nfoo = datadog.get_team(team_id=\"e6723c40-edb1-11ed-b816-da7ad0900002\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Datadog = Pulumi.Datadog;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var foo = Datadog.GetTeam.Invoke(new()\n    {\n        TeamId = \"e6723c40-edb1-11ed-b816-da7ad0900002\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-datadog/sdk/v4/go/datadog\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := datadog.LookupTeam(ctx, \u0026datadog.LookupTeamArgs{\n\t\t\tTeamId: pulumi.StringRef(\"e6723c40-edb1-11ed-b816-da7ad0900002\"),\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.datadog.DatadogFunctions;\nimport com.pulumi.datadog.inputs.GetTeamArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var foo = DatadogFunctions.getTeam(GetTeamArgs.builder()\n            .teamId(\"e6723c40-edb1-11ed-b816-da7ad0900002\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  foo:\n    fn::invoke:\n      Function: datadog:getTeam\n      Arguments:\n        teamId: e6723c40-edb1-11ed-b816-da7ad0900002\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getTeam.\n",
                "properties": {
                    "filterKeyword": {
                        "type": "string",
                        "description": "Search query. Can be team name, team handle, or email of team member.\n"
                    },
                    "teamId": {
                        "type": "string",
                        "description": "The team's identifier.\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getTeam.\n",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "Free-form markdown description/content for the team's homepage.\n"
                    },
                    "filterKeyword": {
                        "type": "string",
                        "description": "Search query. Can be team name, team handle, or email of team member.\n"
                    },
                    "handle": {
                        "type": "string",
                        "description": "The team's handle.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The ID of this resource.\n"
                    },
                    "linkCount": {
                        "type": "integer",
                        "description": "The number of links belonging to the team.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the team.\n"
                    },
                    "summary": {
                        "type": "string",
                        "description": "A brief summary of the team, derived from the `description`.\n"
                    },
                    "teamId": {
                        "type": "string",
                        "description": "The team's identifier.\n"
                    },
                    "userCount": {
                        "type": "integer",
                        "description": "The number of users belonging to the team.\n"
                    }
                },
                "type": "object",
                "required": [
                    "description",
                    "handle",
                    "id",
                    "linkCount",
                    "name",
                    "summary",
                    "teamId",
                    "userCount"
                ]
            }
        },
        "datadog:index/getTeamMemberships:getTeamMemberships": {
            "description": "Use this data source to retrieve information about existing Datadog team memberships.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as datadog from \"@pulumi/datadog\";\n\nconst foo = datadog.getTeamMemberships({\n    filterKeyword: \"foo@example.com\",\n    teamId: \"e6723c40-edb1-11ed-b816-da7ad0900002\",\n});\n```\n```python\nimport pulumi\nimport pulumi_datadog as datadog\n\nfoo = datadog.get_team_memberships(filter_keyword=\"foo@example.com\",\n    team_id=\"e6723c40-edb1-11ed-b816-da7ad0900002\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Datadog = Pulumi.Datadog;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var foo = Datadog.GetTeamMemberships.Invoke(new()\n    {\n        FilterKeyword = \"foo@example.com\",\n        TeamId = \"e6723c40-edb1-11ed-b816-da7ad0900002\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-datadog/sdk/v4/go/datadog\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := datadog.GetTeamMemberships(ctx, \u0026datadog.GetTeamMembershipsArgs{\n\t\t\tFilterKeyword: pulumi.StringRef(\"foo@example.com\"),\n\t\t\tTeamId:        \"e6723c40-edb1-11ed-b816-da7ad0900002\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.datadog.DatadogFunctions;\nimport com.pulumi.datadog.inputs.GetTeamMembershipsArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var foo = DatadogFunctions.getTeamMemberships(GetTeamMembershipsArgs.builder()\n            .filterKeyword(\"foo@example.com\")\n            .teamId(\"e6723c40-edb1-11ed-b816-da7ad0900002\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  foo:\n    fn::invoke:\n      Function: datadog:getTeamMemberships\n      Arguments:\n        filterKeyword: foo@example.com\n        teamId: e6723c40-edb1-11ed-b816-da7ad0900002\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getTeamMemberships.\n",
                "properties": {
                    "filterKeyword": {
                        "type": "string",
                        "description": "Search query, can be user email or name.\n"
                    },
                    "teamId": {
                        "type": "string",
                        "description": "The team's identifier.\n"
                    }
                },
                "type": "object",
                "required": [
                    "teamId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getTeamMemberships.\n",
                "properties": {
                    "filterKeyword": {
                        "type": "string",
                        "description": "Search query, can be user email or name.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The ID of this resource.\n"
                    },
                    "teamId": {
                        "type": "string",
                        "description": "The team's identifier.\n"
                    },
                    "teamMemberships": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/datadog:index/getTeamMembershipsTeamMembership:getTeamMembershipsTeamMembership"
                        },
                        "description": "List of team memberships.\n"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "teamId",
                    "teamMemberships"
                ]
            }
        },
        "datadog:index/getUser:getUser": {
            "description": "Use this data source to retrieve information about an existing user to use it in an other resources.\n",
            "inputs": {
                "description": "A collection of arguments for invoking getUser.\n",
                "properties": {
                    "filter": {
                        "type": "string",
                        "description": "Filter all users by the given string.\n"
                    }
                },
                "type": "object",
                "required": [
                    "filter"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getUser.\n",
                "properties": {
                    "email": {
                        "type": "string",
                        "description": "Email of the user.\n"
                    },
                    "filter": {
                        "type": "string",
                        "description": "Filter all users by the given string.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the user.\n"
                    }
                },
                "type": "object",
                "required": [
                    "email",
                    "filter",
                    "name",
                    "id"
                ]
            }
        }
    }
}