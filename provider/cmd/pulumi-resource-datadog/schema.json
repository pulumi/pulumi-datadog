{
    "name": "datadog",
    "description": "A Pulumi package for creating and managing Datadog resources.",
    "keywords": [
        "pulumi",
        "datadog"
    ],
    "homepage": "https://pulumi.io",
    "license": "Apache-2.0",
    "attribution": "This Pulumi package is based on the [`datadog` Terraform Provider](https://github.com/terraform-providers/terraform-provider-datadog).",
    "repository": "https://github.com/pulumi/pulumi-datadog",
    "meta": {
        "moduleFormat": "(.*)(?:/[^/]*)"
    },
    "config": {
        "variables": {
            "apiKey": {
                "type": "string",
                "description": "(Required unless validate is false) Datadog API key. This can also be set via the DD_API_KEY environment variable.\n"
            },
            "apiUrl": {
                "type": "string",
                "description": "The API URL. This can also be set via the DD_HOST environment variable. Note that this URL must not end with the /api/\npath. For example, https://api.datadoghq.com/ is a correct value, while https://api.datadoghq.com/api/ is not. And if\nyou're working with \"EU\" version of Datadog, use https://api.datadoghq.eu/.\n"
            },
            "appKey": {
                "type": "string",
                "description": "(Required unless validate is false) Datadog APP key. This can also be set via the DD_APP_KEY environment variable.\n"
            },
            "validate": {
                "type": "boolean",
                "description": "Enables validation of the provided API and APP keys during provider initialization. Default is true. When false, api_key\nand app_key won't be checked.\n"
            }
        }
    },
    "types": {
        "datadog:index/DashboardListDashItem:DashboardListDashItem": {
            "properties": {
                "dashId": {
                    "type": "string",
                    "description": "Newstyle:  (String) The ID of the dashboard to add\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "description": "Newstyle:  (String) The type of this dashboard. Available options are: custom_timeboard, custom_screenboard, integration_screenboard, integration_timeboard, and host_timeboard\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "dashId",
                "type"
            ]
        },
        "datadog:index/DashboardTemplateVariable:DashboardTemplateVariable": {
            "properties": {
                "default": {
                    "type": "string",
                    "description": "Newstyle:  (String) The default value for the template variable on dashboard load.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "Newstyle:  (String) The name of the template variable\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "prefix": {
                    "type": "string",
                    "description": "Newstyle:  (String) The tag prefix associated with the variable. Only tags with this prefix will appear in the variable dropdown.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "name"
            ]
        },
        "datadog:index/DashboardTemplateVariablePreset:DashboardTemplateVariablePreset": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Newstyle:  (String) The name of the template variable\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "templateVariables": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardTemplateVariablePresetTemplateVariable:DashboardTemplateVariablePresetTemplateVariable"
                    },
                    "description": "Newstyle:  (Block List) The template variable names and assumed values under the given preset (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardTemplateVariablePresetTemplateVariable:DashboardTemplateVariablePresetTemplateVariable": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Newstyle:  (String) The name of the template variable\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "description": "Newstyle:  (String) The value that should be assumed by the template variable in this preset\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidget:DashboardWidget": {
            "properties": {
                "alertGraphDefinition": {
                    "$ref": "#/types/datadog:index/DashboardWidgetAlertGraphDefinition:DashboardWidgetAlertGraphDefinition",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "alertValueDefinition": {
                    "$ref": "#/types/datadog:index/DashboardWidgetAlertValueDefinition:DashboardWidgetAlertValueDefinition",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "changeDefinition": {
                    "$ref": "#/types/datadog:index/DashboardWidgetChangeDefinition:DashboardWidgetChangeDefinition",
                    "description": "Newstyle:  (Block List, Max: 1) The definition for a Change  widget. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "checkStatusDefinition": {
                    "$ref": "#/types/datadog:index/DashboardWidgetCheckStatusDefinition:DashboardWidgetCheckStatusDefinition",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "distributionDefinition": {
                    "$ref": "#/types/datadog:index/DashboardWidgetDistributionDefinition:DashboardWidgetDistributionDefinition",
                    "description": "Newstyle:  (Block List, Max: 1) The definition for a Distribution widget. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "eventStreamDefinition": {
                    "$ref": "#/types/datadog:index/DashboardWidgetEventStreamDefinition:DashboardWidgetEventStreamDefinition",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "eventTimelineDefinition": {
                    "$ref": "#/types/datadog:index/DashboardWidgetEventTimelineDefinition:DashboardWidgetEventTimelineDefinition",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "freeTextDefinition": {
                    "$ref": "#/types/datadog:index/DashboardWidgetFreeTextDefinition:DashboardWidgetFreeTextDefinition",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "geomapDefinition": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGeomapDefinition:DashboardWidgetGeomapDefinition",
                    "description": "Newstyle:  (Block List, Max: 1) The definition for a Geomap widget. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupDefinition": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinition:DashboardWidgetGroupDefinition",
                    "description": "Newstyle:  (Block List, Max: 1) The definition for a Group widget. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "heatmapDefinition": {
                    "$ref": "#/types/datadog:index/DashboardWidgetHeatmapDefinition:DashboardWidgetHeatmapDefinition",
                    "description": "Newstyle:  (Block List, Max: 1) The definition for a Heatmap widget. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "hostmapDefinition": {
                    "$ref": "#/types/datadog:index/DashboardWidgetHostmapDefinition:DashboardWidgetHostmapDefinition",
                    "description": "Newstyle:  (Block List, Max: 1) The definition for a Hostmap widget. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "id": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) The ID of the widget.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "iframeDefinition": {
                    "$ref": "#/types/datadog:index/DashboardWidgetIframeDefinition:DashboardWidgetIframeDefinition",
                    "description": "Newstyle:  (Block List, Max: 1) The definition for an Iframe widget. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "imageDefinition": {
                    "$ref": "#/types/datadog:index/DashboardWidgetImageDefinition:DashboardWidgetImageDefinition",
                    "description": "Newstyle:  (Block List, Max: 1) The definition for an Image widget (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "layout": {
                    "$ref": "#/types/datadog:index/DashboardWidgetLayout:DashboardWidgetLayout",
                    "description": "Newstyle:  (Map of String, Deprecated) The layout of the widget on a 'free' dashboard.  Define widget_layout list with one element instead.\n",
                    "deprecationMessage": "Define `widget_layout` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logStreamDefinition": {
                    "$ref": "#/types/datadog:index/DashboardWidgetLogStreamDefinition:DashboardWidgetLogStreamDefinition",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "manageStatusDefinition": {
                    "$ref": "#/types/datadog:index/DashboardWidgetManageStatusDefinition:DashboardWidgetManageStatusDefinition",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "noteDefinition": {
                    "$ref": "#/types/datadog:index/DashboardWidgetNoteDefinition:DashboardWidgetNoteDefinition",
                    "description": "Newstyle:  (Block List, Max: 1) The definition for a Note widget. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "queryTableDefinition": {
                    "$ref": "#/types/datadog:index/DashboardWidgetQueryTableDefinition:DashboardWidgetQueryTableDefinition",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "queryValueDefinition": {
                    "$ref": "#/types/datadog:index/DashboardWidgetQueryValueDefinition:DashboardWidgetQueryValueDefinition",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "scatterplotDefinition": {
                    "$ref": "#/types/datadog:index/DashboardWidgetScatterplotDefinition:DashboardWidgetScatterplotDefinition",
                    "description": "Newstyle:  (Block List, Max: 1) The definition for a Scatterplot widget. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "serviceLevelObjectiveDefinition": {
                    "$ref": "#/types/datadog:index/DashboardWidgetServiceLevelObjectiveDefinition:DashboardWidgetServiceLevelObjectiveDefinition",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "servicemapDefinition": {
                    "$ref": "#/types/datadog:index/DashboardWidgetServicemapDefinition:DashboardWidgetServicemapDefinition",
                    "description": "Newstyle:  (Block List, Max: 1) The definition for a Service Map widget. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "timeseriesDefinition": {
                    "$ref": "#/types/datadog:index/DashboardWidgetTimeseriesDefinition:DashboardWidgetTimeseriesDefinition",
                    "description": "Newstyle:  (Block List, Max: 1) The definition for a Timeseries widget. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "toplistDefinition": {
                    "$ref": "#/types/datadog:index/DashboardWidgetToplistDefinition:DashboardWidgetToplistDefinition",
                    "description": "Newstyle:  (Block List, Max: 1) The definition for a Toplist widget. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "traceServiceDefinition": {
                    "$ref": "#/types/datadog:index/DashboardWidgetTraceServiceDefinition:DashboardWidgetTraceServiceDefinition",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "widgetLayout": {
                    "$ref": "#/types/datadog:index/DashboardWidgetWidgetLayout:DashboardWidgetWidgetLayout",
                    "description": "Newstyle:  (Block List, Max: 1) The layout of the widget on a 'free' dashboard. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "id"
                    ]
                }
            }
        },
        "datadog:index/DashboardWidgetAlertGraphDefinition:DashboardWidgetAlertGraphDefinition": {
            "properties": {
                "alertId": {
                    "type": "string",
                    "description": "Newstyle:  (String) The ID of the monitor used by the widget.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "liveSpan": {
                    "type": "string",
                    "description": "Newstyle:  (String) The timeframe to use when displaying the widget. One of 10m, 30m, 1h, 4h, 1d, 2d, 1w, 1mo, 3mo, 6mo, 1y, alert.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "time": {
                    "$ref": "#/types/datadog:index/DashboardWidgetAlertGraphDefinitionTime:DashboardWidgetAlertGraphDefinitionTime",
                    "description": "Newstyle:  (Map of String, Deprecated) Nested block describing the timeframe to use when displaying the widget. The structure of this block is described below.  Define live_span directly in the widget definition instead.\n",
                    "deprecationMessage": "Define `live_span` directly in the widget definition instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "title": {
                    "type": "string",
                    "description": "Newstyle:  (String) The title of the widget.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleAlign": {
                    "type": "string",
                    "description": "Newstyle:  (String) The alignment of the widget's title. One of left, center, or right.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleSize": {
                    "type": "string",
                    "description": "Newstyle:  (String) The size of the widget's title. Default is 16.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "vizType": {
                    "type": "string",
                    "description": "Newstyle:  (String) Type of visualization to use when displaying the widget. Either timeseries or toplist.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "alertId",
                "vizType"
            ]
        },
        "datadog:index/DashboardWidgetAlertGraphDefinitionTime:DashboardWidgetAlertGraphDefinitionTime": {
            "properties": {
                "liveSpan": {
                    "type": "string",
                    "description": "Newstyle:  (String) The timeframe to use when displaying the widget. One of 10m, 30m, 1h, 4h, 1d, 2d, 1w, 1mo, 3mo, 6mo, 1y, alert.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetAlertValueDefinition:DashboardWidgetAlertValueDefinition": {
            "properties": {
                "alertId": {
                    "type": "string",
                    "description": "Newstyle:  (String) The ID of the monitor used by the widget.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "precision": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) The precision to use when displaying the tile.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "textAlign": {
                    "type": "string",
                    "description": "Newstyle:  (String) The alignment of the widget's text. One of left, center, or right.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "title": {
                    "type": "string",
                    "description": "Newstyle:  (String) The title of the widget.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleAlign": {
                    "type": "string",
                    "description": "Newstyle:  (String) The alignment of the widget's title. One of left, center, or right.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleSize": {
                    "type": "string",
                    "description": "Newstyle:  (String) The size of the widget's title. Default is 16.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unit": {
                    "type": "string",
                    "description": "Newstyle:  (String) The unit for the value displayed in the widget.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "alertId"
            ]
        },
        "datadog:index/DashboardWidgetChangeDefinition:DashboardWidgetChangeDefinition": {
            "properties": {
                "customLinks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetChangeDefinitionCustomLink:DashboardWidgetChangeDefinitionCustomLink"
                    },
                    "description": "Newstyle:  (Block List) Nested block describing a custom link. Multiple custom_link blocks are allowed with the structure below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "liveSpan": {
                    "type": "string",
                    "description": "Newstyle:  (String) The timeframe to use when displaying the widget. One of 10m, 30m, 1h, 4h, 1d, 2d, 1w, 1mo, 3mo, 6mo, 1y, alert.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "requests": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetChangeDefinitionRequest:DashboardWidgetChangeDefinitionRequest"
                    },
                    "description": "Newstyle:  (Block List) Nested block describing the request to use when displaying the widget. Multiple request blocks are allowed with the structure below (exactly one of q, apm_query, log_query, rum_query, security_query or process_query is required within the request block). (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "time": {
                    "$ref": "#/types/datadog:index/DashboardWidgetChangeDefinitionTime:DashboardWidgetChangeDefinitionTime",
                    "description": "Newstyle:  (Map of String, Deprecated) Nested block describing the timeframe to use when displaying the widget. The structure of this block is described below.  Define live_span directly in the widget definition instead.\n",
                    "deprecationMessage": "Define `live_span` directly in the widget definition instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "title": {
                    "type": "string",
                    "description": "Newstyle:  (String) The title of the widget.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleAlign": {
                    "type": "string",
                    "description": "Newstyle:  (String) The alignment of the widget's title. One of left, center, or right.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleSize": {
                    "type": "string",
                    "description": "Newstyle:  (String) The size of the widget's title. Default is 16.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetChangeDefinitionCustomLink:DashboardWidgetChangeDefinitionCustomLink": {
            "properties": {
                "label": {
                    "type": "string",
                    "description": "Newstyle:  (String) The label for the custom link URL.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "link": {
                    "type": "string",
                    "description": "Newstyle:  (String) The URL of the custom link.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "label",
                "link"
            ]
        },
        "datadog:index/DashboardWidgetChangeDefinitionRequest:DashboardWidgetChangeDefinitionRequest": {
            "properties": {
                "apmQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetChangeDefinitionRequestApmQuery:DashboardWidgetChangeDefinitionRequestApmQuery",
                    "description": "Newstyle:  (Block List, Max: 1) The query to use for this widget. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "changeType": {
                    "type": "string",
                    "description": "Newstyle:  (String) Whether to show absolute or relative change. One of absolute, relative.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "compareTo": {
                    "type": "string",
                    "description": "Newstyle:  (String) Choose from when to compare current data to. One of hour_before, day_before, week_before or month_before.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "increaseGood": {
                    "type": "boolean",
                    "description": "Newstyle:  (Boolean) Boolean indicating whether an increase in the value is good (thus displayed in green) or not (thus displayed in red).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetChangeDefinitionRequestLogQuery:DashboardWidgetChangeDefinitionRequestLogQuery",
                    "description": "Newstyle:  (Block List, Max: 1) The query to use for this widget. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "orderBy": {
                    "type": "string",
                    "description": "Newstyle:  (String) One of change, name, present (present value) or past (past value).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "orderDir": {
                    "type": "string",
                    "description": "Newstyle:  (String) Either asc (ascending) or desc (descending).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "processQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetChangeDefinitionRequestProcessQuery:DashboardWidgetChangeDefinitionRequestProcessQuery",
                    "description": "Newstyle:  (Block List, Max: 1) Process query using formulas and functions. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "q": {
                    "type": "string",
                    "description": "Newstyle:  (String) The metric query to use for this widget.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "rumQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetChangeDefinitionRequestRumQuery:DashboardWidgetChangeDefinitionRequestRumQuery",
                    "description": "Newstyle:  (Block List, Max: 1) The query to use for this widget. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "securityQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetChangeDefinitionRequestSecurityQuery:DashboardWidgetChangeDefinitionRequestSecurityQuery",
                    "description": "Newstyle:  (Block List, Max: 1) The query to use for this widget. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "showPresent": {
                    "type": "boolean",
                    "description": "Newstyle:  (Boolean) If set to true, displays current value.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetChangeDefinitionRequestApmQuery:DashboardWidgetChangeDefinitionRequestApmQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:index/DashboardWidgetChangeDefinitionRequestApmQueryCompute:DashboardWidgetChangeDefinitionRequestApmQueryCompute",
                    "description": "Newstyle:  (Map of String, Deprecated) One of compute or multi_compute is required. The map has the keys as below.  Define compute_query list with one element instead.\n",
                    "deprecationMessage": "Define `compute_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetChangeDefinitionRequestApmQueryComputeQuery:DashboardWidgetChangeDefinitionRequestApmQueryComputeQuery",
                    "description": "Newstyle:  (Block List, Max: 1) One of compute_query or multi_compute is required. The map has the keys as below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetChangeDefinitionRequestApmQueryGroupBy:DashboardWidgetChangeDefinitionRequestApmQueryGroupBy"
                    },
                    "description": "Newstyle:  (Block List) Multiple group_by blocks are allowed with the structure below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "description": "Newstyle:  (String) Name of the index to query.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetChangeDefinitionRequestApmQueryMultiCompute:DashboardWidgetChangeDefinitionRequestApmQueryMultiCompute"
                    },
                    "description": "Newstyle:  (Block List) One of compute_query or multi_compute is required. Multiple multi_compute blocks are allowed with the structure below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:index/DashboardWidgetChangeDefinitionRequestApmQuerySearch:DashboardWidgetChangeDefinitionRequestApmQuerySearch",
                    "description": "Newstyle:  (Map of String, Deprecated) Map defining the search query to use.  Define search_query directly instead.\n",
                    "deprecationMessage": "Define `search_query` directly instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchQuery": {
                    "type": "string",
                    "description": "Newstyle:  (String) The search query to use.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetChangeDefinitionRequestApmQueryCompute:DashboardWidgetChangeDefinitionRequestApmQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Define a time interval in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetChangeDefinitionRequestApmQueryComputeQuery:DashboardWidgetChangeDefinitionRequestApmQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Define a time interval in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetChangeDefinitionRequestApmQueryGroupBy:DashboardWidgetChangeDefinitionRequestApmQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Maximum number of items in the group.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:index/DashboardWidgetChangeDefinitionRequestApmQueryGroupBySort:DashboardWidgetChangeDefinitionRequestApmQueryGroupBySort",
                    "description": "Newstyle:  (Map of String, Deprecated) One map is allowed with the keys as below.  Define sort_query list with one element instead.\n",
                    "deprecationMessage": "Define `sort_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetChangeDefinitionRequestApmQueryGroupBySortQuery:DashboardWidgetChangeDefinitionRequestApmQueryGroupBySortQuery",
                    "description": "Newstyle:  (Block List, Max: 1) List of exactly one element describing the sort query to use. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetChangeDefinitionRequestApmQueryGroupBySort:DashboardWidgetChangeDefinitionRequestApmQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "description": "Newstyle:  (String) Widget sorting methods.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetChangeDefinitionRequestApmQueryGroupBySortQuery:DashboardWidgetChangeDefinitionRequestApmQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "description": "Newstyle:  (String) Widget sorting methods.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetChangeDefinitionRequestApmQueryMultiCompute:DashboardWidgetChangeDefinitionRequestApmQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Define a time interval in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetChangeDefinitionRequestApmQuerySearch:DashboardWidgetChangeDefinitionRequestApmQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "description": "Newstyle:  (String) Metrics query definition.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/DashboardWidgetChangeDefinitionRequestLogQuery:DashboardWidgetChangeDefinitionRequestLogQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:index/DashboardWidgetChangeDefinitionRequestLogQueryCompute:DashboardWidgetChangeDefinitionRequestLogQueryCompute",
                    "description": "Newstyle:  (Map of String, Deprecated) One of compute or multi_compute is required. The map has the keys as below.  Define compute_query list with one element instead.\n",
                    "deprecationMessage": "Define `compute_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetChangeDefinitionRequestLogQueryComputeQuery:DashboardWidgetChangeDefinitionRequestLogQueryComputeQuery",
                    "description": "Newstyle:  (Block List, Max: 1) One of compute_query or multi_compute is required. The map has the keys as below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetChangeDefinitionRequestLogQueryGroupBy:DashboardWidgetChangeDefinitionRequestLogQueryGroupBy"
                    },
                    "description": "Newstyle:  (Block List) Multiple group_by blocks are allowed with the structure below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "description": "Newstyle:  (String) Name of the index to query.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetChangeDefinitionRequestLogQueryMultiCompute:DashboardWidgetChangeDefinitionRequestLogQueryMultiCompute"
                    },
                    "description": "Newstyle:  (Block List) One of compute_query or multi_compute is required. Multiple multi_compute blocks are allowed with the structure below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:index/DashboardWidgetChangeDefinitionRequestLogQuerySearch:DashboardWidgetChangeDefinitionRequestLogQuerySearch",
                    "description": "Newstyle:  (Map of String, Deprecated) Map defining the search query to use.  Define search_query directly instead.\n",
                    "deprecationMessage": "Define `search_query` directly instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchQuery": {
                    "type": "string",
                    "description": "Newstyle:  (String) The search query to use.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetChangeDefinitionRequestLogQueryCompute:DashboardWidgetChangeDefinitionRequestLogQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Define a time interval in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetChangeDefinitionRequestLogQueryComputeQuery:DashboardWidgetChangeDefinitionRequestLogQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Define a time interval in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetChangeDefinitionRequestLogQueryGroupBy:DashboardWidgetChangeDefinitionRequestLogQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Maximum number of items in the group.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:index/DashboardWidgetChangeDefinitionRequestLogQueryGroupBySort:DashboardWidgetChangeDefinitionRequestLogQueryGroupBySort",
                    "description": "Newstyle:  (Map of String, Deprecated) One map is allowed with the keys as below.  Define sort_query list with one element instead.\n",
                    "deprecationMessage": "Define `sort_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetChangeDefinitionRequestLogQueryGroupBySortQuery:DashboardWidgetChangeDefinitionRequestLogQueryGroupBySortQuery",
                    "description": "Newstyle:  (Block List, Max: 1) List of exactly one element describing the sort query to use. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetChangeDefinitionRequestLogQueryGroupBySort:DashboardWidgetChangeDefinitionRequestLogQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "description": "Newstyle:  (String) Widget sorting methods.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetChangeDefinitionRequestLogQueryGroupBySortQuery:DashboardWidgetChangeDefinitionRequestLogQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "description": "Newstyle:  (String) Widget sorting methods.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetChangeDefinitionRequestLogQueryMultiCompute:DashboardWidgetChangeDefinitionRequestLogQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Define a time interval in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetChangeDefinitionRequestLogQuerySearch:DashboardWidgetChangeDefinitionRequestLogQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "description": "Newstyle:  (String) Metrics query definition.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/DashboardWidgetChangeDefinitionRequestProcessQuery:DashboardWidgetChangeDefinitionRequestProcessQuery": {
            "properties": {
                "filterBies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Newstyle:  (List of String) List of processes.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Maximum number of items in the group.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "metric": {
                    "type": "string",
                    "description": "Newstyle:  (String) Process metric name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchBy": {
                    "type": "string",
                    "description": "Newstyle:  (String) Your chosen search term.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "metric"
            ]
        },
        "datadog:index/DashboardWidgetChangeDefinitionRequestRumQuery:DashboardWidgetChangeDefinitionRequestRumQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:index/DashboardWidgetChangeDefinitionRequestRumQueryCompute:DashboardWidgetChangeDefinitionRequestRumQueryCompute",
                    "description": "Newstyle:  (Map of String, Deprecated) One of compute or multi_compute is required. The map has the keys as below.  Define compute_query list with one element instead.\n",
                    "deprecationMessage": "Define `compute_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetChangeDefinitionRequestRumQueryComputeQuery:DashboardWidgetChangeDefinitionRequestRumQueryComputeQuery",
                    "description": "Newstyle:  (Block List, Max: 1) One of compute_query or multi_compute is required. The map has the keys as below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetChangeDefinitionRequestRumQueryGroupBy:DashboardWidgetChangeDefinitionRequestRumQueryGroupBy"
                    },
                    "description": "Newstyle:  (Block List) Multiple group_by blocks are allowed with the structure below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "description": "Newstyle:  (String) Name of the index to query.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetChangeDefinitionRequestRumQueryMultiCompute:DashboardWidgetChangeDefinitionRequestRumQueryMultiCompute"
                    },
                    "description": "Newstyle:  (Block List) One of compute_query or multi_compute is required. Multiple multi_compute blocks are allowed with the structure below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:index/DashboardWidgetChangeDefinitionRequestRumQuerySearch:DashboardWidgetChangeDefinitionRequestRumQuerySearch",
                    "description": "Newstyle:  (Map of String, Deprecated) Map defining the search query to use.  Define search_query directly instead.\n",
                    "deprecationMessage": "Define `search_query` directly instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchQuery": {
                    "type": "string",
                    "description": "Newstyle:  (String) The search query to use.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetChangeDefinitionRequestRumQueryCompute:DashboardWidgetChangeDefinitionRequestRumQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Define a time interval in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetChangeDefinitionRequestRumQueryComputeQuery:DashboardWidgetChangeDefinitionRequestRumQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Define a time interval in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetChangeDefinitionRequestRumQueryGroupBy:DashboardWidgetChangeDefinitionRequestRumQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Maximum number of items in the group.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:index/DashboardWidgetChangeDefinitionRequestRumQueryGroupBySort:DashboardWidgetChangeDefinitionRequestRumQueryGroupBySort",
                    "description": "Newstyle:  (Map of String, Deprecated) One map is allowed with the keys as below.  Define sort_query list with one element instead.\n",
                    "deprecationMessage": "Define `sort_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetChangeDefinitionRequestRumQueryGroupBySortQuery:DashboardWidgetChangeDefinitionRequestRumQueryGroupBySortQuery",
                    "description": "Newstyle:  (Block List, Max: 1) List of exactly one element describing the sort query to use. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetChangeDefinitionRequestRumQueryGroupBySort:DashboardWidgetChangeDefinitionRequestRumQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "description": "Newstyle:  (String) Widget sorting methods.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetChangeDefinitionRequestRumQueryGroupBySortQuery:DashboardWidgetChangeDefinitionRequestRumQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "description": "Newstyle:  (String) Widget sorting methods.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetChangeDefinitionRequestRumQueryMultiCompute:DashboardWidgetChangeDefinitionRequestRumQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Define a time interval in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetChangeDefinitionRequestRumQuerySearch:DashboardWidgetChangeDefinitionRequestRumQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "description": "Newstyle:  (String) Metrics query definition.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/DashboardWidgetChangeDefinitionRequestSecurityQuery:DashboardWidgetChangeDefinitionRequestSecurityQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:index/DashboardWidgetChangeDefinitionRequestSecurityQueryCompute:DashboardWidgetChangeDefinitionRequestSecurityQueryCompute",
                    "description": "Newstyle:  (Map of String, Deprecated) One of compute or multi_compute is required. The map has the keys as below.  Define compute_query list with one element instead.\n",
                    "deprecationMessage": "Define `compute_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetChangeDefinitionRequestSecurityQueryComputeQuery:DashboardWidgetChangeDefinitionRequestSecurityQueryComputeQuery",
                    "description": "Newstyle:  (Block List, Max: 1) One of compute_query or multi_compute is required. The map has the keys as below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetChangeDefinitionRequestSecurityQueryGroupBy:DashboardWidgetChangeDefinitionRequestSecurityQueryGroupBy"
                    },
                    "description": "Newstyle:  (Block List) Multiple group_by blocks are allowed with the structure below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "description": "Newstyle:  (String) Name of the index to query.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetChangeDefinitionRequestSecurityQueryMultiCompute:DashboardWidgetChangeDefinitionRequestSecurityQueryMultiCompute"
                    },
                    "description": "Newstyle:  (Block List) One of compute_query or multi_compute is required. Multiple multi_compute blocks are allowed with the structure below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:index/DashboardWidgetChangeDefinitionRequestSecurityQuerySearch:DashboardWidgetChangeDefinitionRequestSecurityQuerySearch",
                    "description": "Newstyle:  (Map of String, Deprecated) Map defining the search query to use.  Define search_query directly instead.\n",
                    "deprecationMessage": "Define `search_query` directly instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchQuery": {
                    "type": "string",
                    "description": "Newstyle:  (String) The search query to use.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetChangeDefinitionRequestSecurityQueryCompute:DashboardWidgetChangeDefinitionRequestSecurityQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Define a time interval in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetChangeDefinitionRequestSecurityQueryComputeQuery:DashboardWidgetChangeDefinitionRequestSecurityQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Define a time interval in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetChangeDefinitionRequestSecurityQueryGroupBy:DashboardWidgetChangeDefinitionRequestSecurityQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Maximum number of items in the group.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:index/DashboardWidgetChangeDefinitionRequestSecurityQueryGroupBySort:DashboardWidgetChangeDefinitionRequestSecurityQueryGroupBySort",
                    "description": "Newstyle:  (Map of String, Deprecated) One map is allowed with the keys as below.  Define sort_query list with one element instead.\n",
                    "deprecationMessage": "Define `sort_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetChangeDefinitionRequestSecurityQueryGroupBySortQuery:DashboardWidgetChangeDefinitionRequestSecurityQueryGroupBySortQuery",
                    "description": "Newstyle:  (Block List, Max: 1) List of exactly one element describing the sort query to use. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetChangeDefinitionRequestSecurityQueryGroupBySort:DashboardWidgetChangeDefinitionRequestSecurityQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "description": "Newstyle:  (String) Widget sorting methods.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetChangeDefinitionRequestSecurityQueryGroupBySortQuery:DashboardWidgetChangeDefinitionRequestSecurityQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "description": "Newstyle:  (String) Widget sorting methods.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetChangeDefinitionRequestSecurityQueryMultiCompute:DashboardWidgetChangeDefinitionRequestSecurityQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Define a time interval in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetChangeDefinitionRequestSecurityQuerySearch:DashboardWidgetChangeDefinitionRequestSecurityQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "description": "Newstyle:  (String) Metrics query definition.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/DashboardWidgetChangeDefinitionTime:DashboardWidgetChangeDefinitionTime": {
            "properties": {
                "liveSpan": {
                    "type": "string",
                    "description": "Newstyle:  (String) The timeframe to use when displaying the widget. One of 10m, 30m, 1h, 4h, 1d, 2d, 1w, 1mo, 3mo, 6mo, 1y, alert.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetCheckStatusDefinition:DashboardWidgetCheckStatusDefinition": {
            "properties": {
                "check": {
                    "type": "string",
                    "description": "Newstyle:  (String) The check to use in the widget.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "group": {
                    "type": "string",
                    "description": "Newstyle:  (List of String) The list of tags to group nodes by.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Newstyle:  (Block List) Multiple group_by blocks are allowed with the structure below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "grouping": {
                    "type": "string",
                    "description": "Newstyle:  (String) Either check or cluster, depending on whether the widget should use a single check or a cluster of checks.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "liveSpan": {
                    "type": "string",
                    "description": "Newstyle:  (String) The timeframe to use when displaying the widget. One of 10m, 30m, 1h, 4h, 1d, 2d, 1w, 1mo, 3mo, 6mo, 1y, alert.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Newstyle:  (List of String) List of tags to use in the widget.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "time": {
                    "$ref": "#/types/datadog:index/DashboardWidgetCheckStatusDefinitionTime:DashboardWidgetCheckStatusDefinitionTime",
                    "description": "Newstyle:  (Map of String, Deprecated) Nested block describing the timeframe to use when displaying the widget. The structure of this block is described below.  Define live_span directly in the widget definition instead.\n",
                    "deprecationMessage": "Define `live_span` directly in the widget definition instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "title": {
                    "type": "string",
                    "description": "Newstyle:  (String) The title of the widget.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleAlign": {
                    "type": "string",
                    "description": "Newstyle:  (String) The alignment of the widget's title. One of left, center, or right.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleSize": {
                    "type": "string",
                    "description": "Newstyle:  (String) The size of the widget's title. Default is 16.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "check",
                "grouping"
            ]
        },
        "datadog:index/DashboardWidgetCheckStatusDefinitionTime:DashboardWidgetCheckStatusDefinitionTime": {
            "properties": {
                "liveSpan": {
                    "type": "string",
                    "description": "Newstyle:  (String) The timeframe to use when displaying the widget. One of 10m, 30m, 1h, 4h, 1d, 2d, 1w, 1mo, 3mo, 6mo, 1y, alert.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetDistributionDefinition:DashboardWidgetDistributionDefinition": {
            "properties": {
                "legendSize": {
                    "type": "string",
                    "description": "Newstyle:  (String) The size of the legend displayed in the widget.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "liveSpan": {
                    "type": "string",
                    "description": "Newstyle:  (String) The timeframe to use when displaying the widget. One of 10m, 30m, 1h, 4h, 1d, 2d, 1w, 1mo, 3mo, 6mo, 1y, alert.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "requests": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetDistributionDefinitionRequest:DashboardWidgetDistributionDefinitionRequest"
                    },
                    "description": "Newstyle:  (Block List) Nested block describing the request to use when displaying the widget. Multiple request blocks are allowed with the structure below (exactly one of q, apm_query, log_query, rum_query, security_query or process_query is required within the request block). (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "showLegend": {
                    "type": "boolean",
                    "description": "Newstyle:  (Boolean) Whether or not to show the legend on this widget.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "time": {
                    "$ref": "#/types/datadog:index/DashboardWidgetDistributionDefinitionTime:DashboardWidgetDistributionDefinitionTime",
                    "description": "Newstyle:  (Map of String, Deprecated) Nested block describing the timeframe to use when displaying the widget. The structure of this block is described below.  Define live_span directly in the widget definition instead.\n",
                    "deprecationMessage": "Define `live_span` directly in the widget definition instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "title": {
                    "type": "string",
                    "description": "Newstyle:  (String) The title of the widget.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleAlign": {
                    "type": "string",
                    "description": "Newstyle:  (String) The alignment of the widget's title. One of left, center, or right.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleSize": {
                    "type": "string",
                    "description": "Newstyle:  (String) The size of the widget's title. Default is 16.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetDistributionDefinitionRequest:DashboardWidgetDistributionDefinitionRequest": {
            "properties": {
                "apmQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetDistributionDefinitionRequestApmQuery:DashboardWidgetDistributionDefinitionRequestApmQuery",
                    "description": "Newstyle:  (Block List, Max: 1) The query to use for this widget. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetDistributionDefinitionRequestLogQuery:DashboardWidgetDistributionDefinitionRequestLogQuery",
                    "description": "Newstyle:  (Block List, Max: 1) The query to use for this widget. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "processQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetDistributionDefinitionRequestProcessQuery:DashboardWidgetDistributionDefinitionRequestProcessQuery",
                    "description": "Newstyle:  (Block List, Max: 1) Process query using formulas and functions. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "q": {
                    "type": "string",
                    "description": "Newstyle:  (String) The metric query to use for this widget.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "rumQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetDistributionDefinitionRequestRumQuery:DashboardWidgetDistributionDefinitionRequestRumQuery",
                    "description": "Newstyle:  (Block List, Max: 1) The query to use for this widget. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "securityQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetDistributionDefinitionRequestSecurityQuery:DashboardWidgetDistributionDefinitionRequestSecurityQuery",
                    "description": "Newstyle:  (Block List, Max: 1) The query to use for this widget. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "style": {
                    "$ref": "#/types/datadog:index/DashboardWidgetDistributionDefinitionRequestStyle:DashboardWidgetDistributionDefinitionRequestStyle",
                    "description": "Newstyle:  (Block List, Max: 1) Define request widget style. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetDistributionDefinitionRequestApmQuery:DashboardWidgetDistributionDefinitionRequestApmQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:index/DashboardWidgetDistributionDefinitionRequestApmQueryCompute:DashboardWidgetDistributionDefinitionRequestApmQueryCompute",
                    "description": "Newstyle:  (Map of String, Deprecated) One of compute or multi_compute is required. The map has the keys as below.  Define compute_query list with one element instead.\n",
                    "deprecationMessage": "Define `compute_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetDistributionDefinitionRequestApmQueryComputeQuery:DashboardWidgetDistributionDefinitionRequestApmQueryComputeQuery",
                    "description": "Newstyle:  (Block List, Max: 1) One of compute_query or multi_compute is required. The map has the keys as below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetDistributionDefinitionRequestApmQueryGroupBy:DashboardWidgetDistributionDefinitionRequestApmQueryGroupBy"
                    },
                    "description": "Newstyle:  (Block List) Multiple group_by blocks are allowed with the structure below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "description": "Newstyle:  (String) Name of the index to query.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetDistributionDefinitionRequestApmQueryMultiCompute:DashboardWidgetDistributionDefinitionRequestApmQueryMultiCompute"
                    },
                    "description": "Newstyle:  (Block List) One of compute_query or multi_compute is required. Multiple multi_compute blocks are allowed with the structure below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:index/DashboardWidgetDistributionDefinitionRequestApmQuerySearch:DashboardWidgetDistributionDefinitionRequestApmQuerySearch",
                    "description": "Newstyle:  (Map of String, Deprecated) Map defining the search query to use.  Define search_query directly instead.\n",
                    "deprecationMessage": "Define `search_query` directly instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchQuery": {
                    "type": "string",
                    "description": "Newstyle:  (String) The search query to use.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetDistributionDefinitionRequestApmQueryCompute:DashboardWidgetDistributionDefinitionRequestApmQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Define a time interval in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetDistributionDefinitionRequestApmQueryComputeQuery:DashboardWidgetDistributionDefinitionRequestApmQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Define a time interval in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetDistributionDefinitionRequestApmQueryGroupBy:DashboardWidgetDistributionDefinitionRequestApmQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Maximum number of items in the group.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:index/DashboardWidgetDistributionDefinitionRequestApmQueryGroupBySort:DashboardWidgetDistributionDefinitionRequestApmQueryGroupBySort",
                    "description": "Newstyle:  (Map of String, Deprecated) One map is allowed with the keys as below.  Define sort_query list with one element instead.\n",
                    "deprecationMessage": "Define `sort_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetDistributionDefinitionRequestApmQueryGroupBySortQuery:DashboardWidgetDistributionDefinitionRequestApmQueryGroupBySortQuery",
                    "description": "Newstyle:  (Block List, Max: 1) List of exactly one element describing the sort query to use. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetDistributionDefinitionRequestApmQueryGroupBySort:DashboardWidgetDistributionDefinitionRequestApmQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "description": "Newstyle:  (String) Widget sorting methods.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetDistributionDefinitionRequestApmQueryGroupBySortQuery:DashboardWidgetDistributionDefinitionRequestApmQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "description": "Newstyle:  (String) Widget sorting methods.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetDistributionDefinitionRequestApmQueryMultiCompute:DashboardWidgetDistributionDefinitionRequestApmQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Define a time interval in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetDistributionDefinitionRequestApmQuerySearch:DashboardWidgetDistributionDefinitionRequestApmQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "description": "Newstyle:  (String) Metrics query definition.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/DashboardWidgetDistributionDefinitionRequestLogQuery:DashboardWidgetDistributionDefinitionRequestLogQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:index/DashboardWidgetDistributionDefinitionRequestLogQueryCompute:DashboardWidgetDistributionDefinitionRequestLogQueryCompute",
                    "description": "Newstyle:  (Map of String, Deprecated) One of compute or multi_compute is required. The map has the keys as below.  Define compute_query list with one element instead.\n",
                    "deprecationMessage": "Define `compute_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetDistributionDefinitionRequestLogQueryComputeQuery:DashboardWidgetDistributionDefinitionRequestLogQueryComputeQuery",
                    "description": "Newstyle:  (Block List, Max: 1) One of compute_query or multi_compute is required. The map has the keys as below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetDistributionDefinitionRequestLogQueryGroupBy:DashboardWidgetDistributionDefinitionRequestLogQueryGroupBy"
                    },
                    "description": "Newstyle:  (Block List) Multiple group_by blocks are allowed with the structure below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "description": "Newstyle:  (String) Name of the index to query.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetDistributionDefinitionRequestLogQueryMultiCompute:DashboardWidgetDistributionDefinitionRequestLogQueryMultiCompute"
                    },
                    "description": "Newstyle:  (Block List) One of compute_query or multi_compute is required. Multiple multi_compute blocks are allowed with the structure below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:index/DashboardWidgetDistributionDefinitionRequestLogQuerySearch:DashboardWidgetDistributionDefinitionRequestLogQuerySearch",
                    "description": "Newstyle:  (Map of String, Deprecated) Map defining the search query to use.  Define search_query directly instead.\n",
                    "deprecationMessage": "Define `search_query` directly instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchQuery": {
                    "type": "string",
                    "description": "Newstyle:  (String) The search query to use.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetDistributionDefinitionRequestLogQueryCompute:DashboardWidgetDistributionDefinitionRequestLogQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Define a time interval in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetDistributionDefinitionRequestLogQueryComputeQuery:DashboardWidgetDistributionDefinitionRequestLogQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Define a time interval in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetDistributionDefinitionRequestLogQueryGroupBy:DashboardWidgetDistributionDefinitionRequestLogQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Maximum number of items in the group.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:index/DashboardWidgetDistributionDefinitionRequestLogQueryGroupBySort:DashboardWidgetDistributionDefinitionRequestLogQueryGroupBySort",
                    "description": "Newstyle:  (Map of String, Deprecated) One map is allowed with the keys as below.  Define sort_query list with one element instead.\n",
                    "deprecationMessage": "Define `sort_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetDistributionDefinitionRequestLogQueryGroupBySortQuery:DashboardWidgetDistributionDefinitionRequestLogQueryGroupBySortQuery",
                    "description": "Newstyle:  (Block List, Max: 1) List of exactly one element describing the sort query to use. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetDistributionDefinitionRequestLogQueryGroupBySort:DashboardWidgetDistributionDefinitionRequestLogQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "description": "Newstyle:  (String) Widget sorting methods.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetDistributionDefinitionRequestLogQueryGroupBySortQuery:DashboardWidgetDistributionDefinitionRequestLogQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "description": "Newstyle:  (String) Widget sorting methods.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetDistributionDefinitionRequestLogQueryMultiCompute:DashboardWidgetDistributionDefinitionRequestLogQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Define a time interval in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetDistributionDefinitionRequestLogQuerySearch:DashboardWidgetDistributionDefinitionRequestLogQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "description": "Newstyle:  (String) Metrics query definition.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/DashboardWidgetDistributionDefinitionRequestProcessQuery:DashboardWidgetDistributionDefinitionRequestProcessQuery": {
            "properties": {
                "filterBies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Newstyle:  (List of String) List of processes.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Maximum number of items in the group.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "metric": {
                    "type": "string",
                    "description": "Newstyle:  (String) Process metric name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchBy": {
                    "type": "string",
                    "description": "Newstyle:  (String) Your chosen search term.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "metric"
            ]
        },
        "datadog:index/DashboardWidgetDistributionDefinitionRequestRumQuery:DashboardWidgetDistributionDefinitionRequestRumQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:index/DashboardWidgetDistributionDefinitionRequestRumQueryCompute:DashboardWidgetDistributionDefinitionRequestRumQueryCompute",
                    "description": "Newstyle:  (Map of String, Deprecated) One of compute or multi_compute is required. The map has the keys as below.  Define compute_query list with one element instead.\n",
                    "deprecationMessage": "Define `compute_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetDistributionDefinitionRequestRumQueryComputeQuery:DashboardWidgetDistributionDefinitionRequestRumQueryComputeQuery",
                    "description": "Newstyle:  (Block List, Max: 1) One of compute_query or multi_compute is required. The map has the keys as below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetDistributionDefinitionRequestRumQueryGroupBy:DashboardWidgetDistributionDefinitionRequestRumQueryGroupBy"
                    },
                    "description": "Newstyle:  (Block List) Multiple group_by blocks are allowed with the structure below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "description": "Newstyle:  (String) Name of the index to query.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetDistributionDefinitionRequestRumQueryMultiCompute:DashboardWidgetDistributionDefinitionRequestRumQueryMultiCompute"
                    },
                    "description": "Newstyle:  (Block List) One of compute_query or multi_compute is required. Multiple multi_compute blocks are allowed with the structure below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:index/DashboardWidgetDistributionDefinitionRequestRumQuerySearch:DashboardWidgetDistributionDefinitionRequestRumQuerySearch",
                    "description": "Newstyle:  (Map of String, Deprecated) Map defining the search query to use.  Define search_query directly instead.\n",
                    "deprecationMessage": "Define `search_query` directly instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchQuery": {
                    "type": "string",
                    "description": "Newstyle:  (String) The search query to use.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetDistributionDefinitionRequestRumQueryCompute:DashboardWidgetDistributionDefinitionRequestRumQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Define a time interval in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetDistributionDefinitionRequestRumQueryComputeQuery:DashboardWidgetDistributionDefinitionRequestRumQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Define a time interval in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetDistributionDefinitionRequestRumQueryGroupBy:DashboardWidgetDistributionDefinitionRequestRumQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Maximum number of items in the group.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:index/DashboardWidgetDistributionDefinitionRequestRumQueryGroupBySort:DashboardWidgetDistributionDefinitionRequestRumQueryGroupBySort",
                    "description": "Newstyle:  (Map of String, Deprecated) One map is allowed with the keys as below.  Define sort_query list with one element instead.\n",
                    "deprecationMessage": "Define `sort_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetDistributionDefinitionRequestRumQueryGroupBySortQuery:DashboardWidgetDistributionDefinitionRequestRumQueryGroupBySortQuery",
                    "description": "Newstyle:  (Block List, Max: 1) List of exactly one element describing the sort query to use. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetDistributionDefinitionRequestRumQueryGroupBySort:DashboardWidgetDistributionDefinitionRequestRumQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "description": "Newstyle:  (String) Widget sorting methods.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetDistributionDefinitionRequestRumQueryGroupBySortQuery:DashboardWidgetDistributionDefinitionRequestRumQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "description": "Newstyle:  (String) Widget sorting methods.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetDistributionDefinitionRequestRumQueryMultiCompute:DashboardWidgetDistributionDefinitionRequestRumQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Define a time interval in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetDistributionDefinitionRequestRumQuerySearch:DashboardWidgetDistributionDefinitionRequestRumQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "description": "Newstyle:  (String) Metrics query definition.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/DashboardWidgetDistributionDefinitionRequestSecurityQuery:DashboardWidgetDistributionDefinitionRequestSecurityQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:index/DashboardWidgetDistributionDefinitionRequestSecurityQueryCompute:DashboardWidgetDistributionDefinitionRequestSecurityQueryCompute",
                    "description": "Newstyle:  (Map of String, Deprecated) One of compute or multi_compute is required. The map has the keys as below.  Define compute_query list with one element instead.\n",
                    "deprecationMessage": "Define `compute_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetDistributionDefinitionRequestSecurityQueryComputeQuery:DashboardWidgetDistributionDefinitionRequestSecurityQueryComputeQuery",
                    "description": "Newstyle:  (Block List, Max: 1) One of compute_query or multi_compute is required. The map has the keys as below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetDistributionDefinitionRequestSecurityQueryGroupBy:DashboardWidgetDistributionDefinitionRequestSecurityQueryGroupBy"
                    },
                    "description": "Newstyle:  (Block List) Multiple group_by blocks are allowed with the structure below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "description": "Newstyle:  (String) Name of the index to query.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetDistributionDefinitionRequestSecurityQueryMultiCompute:DashboardWidgetDistributionDefinitionRequestSecurityQueryMultiCompute"
                    },
                    "description": "Newstyle:  (Block List) One of compute_query or multi_compute is required. Multiple multi_compute blocks are allowed with the structure below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:index/DashboardWidgetDistributionDefinitionRequestSecurityQuerySearch:DashboardWidgetDistributionDefinitionRequestSecurityQuerySearch",
                    "description": "Newstyle:  (Map of String, Deprecated) Map defining the search query to use.  Define search_query directly instead.\n",
                    "deprecationMessage": "Define `search_query` directly instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchQuery": {
                    "type": "string",
                    "description": "Newstyle:  (String) The search query to use.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetDistributionDefinitionRequestSecurityQueryCompute:DashboardWidgetDistributionDefinitionRequestSecurityQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Define a time interval in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetDistributionDefinitionRequestSecurityQueryComputeQuery:DashboardWidgetDistributionDefinitionRequestSecurityQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Define a time interval in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetDistributionDefinitionRequestSecurityQueryGroupBy:DashboardWidgetDistributionDefinitionRequestSecurityQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Maximum number of items in the group.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:index/DashboardWidgetDistributionDefinitionRequestSecurityQueryGroupBySort:DashboardWidgetDistributionDefinitionRequestSecurityQueryGroupBySort",
                    "description": "Newstyle:  (Map of String, Deprecated) One map is allowed with the keys as below.  Define sort_query list with one element instead.\n",
                    "deprecationMessage": "Define `sort_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetDistributionDefinitionRequestSecurityQueryGroupBySortQuery:DashboardWidgetDistributionDefinitionRequestSecurityQueryGroupBySortQuery",
                    "description": "Newstyle:  (Block List, Max: 1) List of exactly one element describing the sort query to use. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetDistributionDefinitionRequestSecurityQueryGroupBySort:DashboardWidgetDistributionDefinitionRequestSecurityQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "description": "Newstyle:  (String) Widget sorting methods.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetDistributionDefinitionRequestSecurityQueryGroupBySortQuery:DashboardWidgetDistributionDefinitionRequestSecurityQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "description": "Newstyle:  (String) Widget sorting methods.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetDistributionDefinitionRequestSecurityQueryMultiCompute:DashboardWidgetDistributionDefinitionRequestSecurityQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Define a time interval in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetDistributionDefinitionRequestSecurityQuerySearch:DashboardWidgetDistributionDefinitionRequestSecurityQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "description": "Newstyle:  (String) Metrics query definition.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/DashboardWidgetDistributionDefinitionRequestStyle:DashboardWidgetDistributionDefinitionRequestStyle": {
            "properties": {
                "palette": {
                    "type": "string",
                    "description": "Newstyle:  (String) Color palette to apply to the widget. The available options are available here: https://docs.datadoghq.com/dashboards/widgets/timeseries/#appearance.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetDistributionDefinitionTime:DashboardWidgetDistributionDefinitionTime": {
            "properties": {
                "liveSpan": {
                    "type": "string",
                    "description": "Newstyle:  (String) The timeframe to use when displaying the widget. One of 10m, 30m, 1h, 4h, 1d, 2d, 1w, 1mo, 3mo, 6mo, 1y, alert.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetEventStreamDefinition:DashboardWidgetEventStreamDefinition": {
            "properties": {
                "eventSize": {
                    "type": "string",
                    "description": "Newstyle:  (String) The size to use to display an event. One of s, l\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "liveSpan": {
                    "type": "string",
                    "description": "Newstyle:  (String) The timeframe to use when displaying the widget. One of 10m, 30m, 1h, 4h, 1d, 2d, 1w, 1mo, 3mo, 6mo, 1y, alert.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "query": {
                    "type": "string",
                    "description": "Newstyle:  (String) Metrics query definition.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tagsExecution": {
                    "type": "string",
                    "description": "Newstyle:  (String) The execution method for multi-value filters.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "time": {
                    "$ref": "#/types/datadog:index/DashboardWidgetEventStreamDefinitionTime:DashboardWidgetEventStreamDefinitionTime",
                    "description": "Newstyle:  (Map of String, Deprecated) Nested block describing the timeframe to use when displaying the widget. The structure of this block is described below.  Define live_span directly in the widget definition instead.\n",
                    "deprecationMessage": "Define `live_span` directly in the widget definition instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "title": {
                    "type": "string",
                    "description": "Newstyle:  (String) The title of the widget.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleAlign": {
                    "type": "string",
                    "description": "Newstyle:  (String) The alignment of the widget's title. One of left, center, or right.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleSize": {
                    "type": "string",
                    "description": "Newstyle:  (String) The size of the widget's title. Default is 16.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/DashboardWidgetEventStreamDefinitionTime:DashboardWidgetEventStreamDefinitionTime": {
            "properties": {
                "liveSpan": {
                    "type": "string",
                    "description": "Newstyle:  (String) The timeframe to use when displaying the widget. One of 10m, 30m, 1h, 4h, 1d, 2d, 1w, 1mo, 3mo, 6mo, 1y, alert.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetEventTimelineDefinition:DashboardWidgetEventTimelineDefinition": {
            "properties": {
                "liveSpan": {
                    "type": "string",
                    "description": "Newstyle:  (String) The timeframe to use when displaying the widget. One of 10m, 30m, 1h, 4h, 1d, 2d, 1w, 1mo, 3mo, 6mo, 1y, alert.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "query": {
                    "type": "string",
                    "description": "Newstyle:  (String) Metrics query definition.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tagsExecution": {
                    "type": "string",
                    "description": "Newstyle:  (String) The execution method for multi-value filters.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "time": {
                    "$ref": "#/types/datadog:index/DashboardWidgetEventTimelineDefinitionTime:DashboardWidgetEventTimelineDefinitionTime",
                    "description": "Newstyle:  (Map of String, Deprecated) Nested block describing the timeframe to use when displaying the widget. The structure of this block is described below.  Define live_span directly in the widget definition instead.\n",
                    "deprecationMessage": "Define `live_span` directly in the widget definition instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "title": {
                    "type": "string",
                    "description": "Newstyle:  (String) The title of the widget.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleAlign": {
                    "type": "string",
                    "description": "Newstyle:  (String) The alignment of the widget's title. One of left, center, or right.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleSize": {
                    "type": "string",
                    "description": "Newstyle:  (String) The size of the widget's title. Default is 16.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/DashboardWidgetEventTimelineDefinitionTime:DashboardWidgetEventTimelineDefinitionTime": {
            "properties": {
                "liveSpan": {
                    "type": "string",
                    "description": "Newstyle:  (String) The timeframe to use when displaying the widget. One of 10m, 30m, 1h, 4h, 1d, 2d, 1w, 1mo, 3mo, 6mo, 1y, alert.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetFreeTextDefinition:DashboardWidgetFreeTextDefinition": {
            "properties": {
                "color": {
                    "type": "string",
                    "description": "Newstyle:  (String) The color of the text in the widget.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "fontSize": {
                    "type": "string",
                    "description": "Newstyle:  (String) Size of the text.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "text": {
                    "type": "string",
                    "description": "Newstyle:  (String) The text to display in the widget.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "textAlign": {
                    "type": "string",
                    "description": "Newstyle:  (String) The alignment of the widget's text. One of left, center, or right.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "text"
            ]
        },
        "datadog:index/DashboardWidgetGeomapDefinition:DashboardWidgetGeomapDefinition": {
            "properties": {
                "customLinks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGeomapDefinitionCustomLink:DashboardWidgetGeomapDefinitionCustomLink"
                    },
                    "description": "Newstyle:  (Block List) Nested block describing a custom link. Multiple custom_link blocks are allowed with the structure below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "liveSpan": {
                    "type": "string",
                    "description": "Newstyle:  (String) The timeframe to use when displaying the widget. One of 10m, 30m, 1h, 4h, 1d, 2d, 1w, 1mo, 3mo, 6mo, 1y, alert.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "requests": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGeomapDefinitionRequest:DashboardWidgetGeomapDefinitionRequest"
                    },
                    "description": "Newstyle:  (Block List) Nested block describing the request to use when displaying the widget. Multiple request blocks are allowed with the structure below (exactly one of q, apm_query, log_query, rum_query, security_query or process_query is required within the request block). (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "style": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGeomapDefinitionStyle:DashboardWidgetGeomapDefinitionStyle",
                    "description": "Newstyle:  (Block List, Max: 1) Define request widget style. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "title": {
                    "type": "string",
                    "description": "Newstyle:  (String) The title of the widget.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleAlign": {
                    "type": "string",
                    "description": "Newstyle:  (String) The alignment of the widget's title. One of left, center, or right.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleSize": {
                    "type": "string",
                    "description": "Newstyle:  (String) The size of the widget's title. Default is 16.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "view": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGeomapDefinitionView:DashboardWidgetGeomapDefinitionView",
                    "description": "Newstyle:  (Block List, Min: 1, Max: 1) The view of the world that the map should render. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "view"
            ]
        },
        "datadog:index/DashboardWidgetGeomapDefinitionCustomLink:DashboardWidgetGeomapDefinitionCustomLink": {
            "properties": {
                "label": {
                    "type": "string",
                    "description": "Newstyle:  (String) The label for the custom link URL.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "link": {
                    "type": "string",
                    "description": "Newstyle:  (String) The URL of the custom link.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "label",
                "link"
            ]
        },
        "datadog:index/DashboardWidgetGeomapDefinitionRequest:DashboardWidgetGeomapDefinitionRequest": {
            "properties": {
                "formulas": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGeomapDefinitionRequestFormula:DashboardWidgetGeomapDefinitionRequestFormula"
                    },
                    "description": "Newstyle:  (Block List) (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGeomapDefinitionRequestLogQuery:DashboardWidgetGeomapDefinitionRequestLogQuery",
                    "description": "Newstyle:  (Block List, Max: 1) The query to use for this widget. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "q": {
                    "type": "string",
                    "description": "Newstyle:  (String) The metric query to use for this widget.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "queries": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGeomapDefinitionRequestQuery:DashboardWidgetGeomapDefinitionRequestQuery"
                    },
                    "description": "Newstyle:  (String) Metrics query definition.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "rumQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGeomapDefinitionRequestRumQuery:DashboardWidgetGeomapDefinitionRequestRumQuery",
                    "description": "Newstyle:  (Block List, Max: 1) The query to use for this widget. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGeomapDefinitionRequestFormula:DashboardWidgetGeomapDefinitionRequestFormula": {
            "properties": {
                "alias": {
                    "type": "string",
                    "description": "Newstyle:  (String) Expression alias.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "formulaExpression": {
                    "type": "string",
                    "description": "Newstyle:  (String) String expression built from queries, formulas and functions.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGeomapDefinitionRequestFormulaLimit:DashboardWidgetGeomapDefinitionRequestFormulaLimit",
                    "description": "Newstyle:  (Number) Maximum number of items in the group.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "formulaExpression"
            ]
        },
        "datadog:index/DashboardWidgetGeomapDefinitionRequestFormulaLimit:DashboardWidgetGeomapDefinitionRequestFormulaLimit": {
            "properties": {
                "count": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Number of results to return\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "description": "Newstyle:  (String) Widget sorting methods.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGeomapDefinitionRequestLogQuery:DashboardWidgetGeomapDefinitionRequestLogQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGeomapDefinitionRequestLogQueryCompute:DashboardWidgetGeomapDefinitionRequestLogQueryCompute",
                    "description": "Newstyle:  (Map of String, Deprecated) One of compute or multi_compute is required. The map has the keys as below.  Define compute_query list with one element instead.\n",
                    "deprecationMessage": "Define `compute_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGeomapDefinitionRequestLogQueryComputeQuery:DashboardWidgetGeomapDefinitionRequestLogQueryComputeQuery",
                    "description": "Newstyle:  (Block List, Max: 1) One of compute_query or multi_compute is required. The map has the keys as below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGeomapDefinitionRequestLogQueryGroupBy:DashboardWidgetGeomapDefinitionRequestLogQueryGroupBy"
                    },
                    "description": "Newstyle:  (Block List) Multiple group_by blocks are allowed with the structure below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "description": "Newstyle:  (String) Name of the index to query.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGeomapDefinitionRequestLogQueryMultiCompute:DashboardWidgetGeomapDefinitionRequestLogQueryMultiCompute"
                    },
                    "description": "Newstyle:  (Block List) One of compute_query or multi_compute is required. Multiple multi_compute blocks are allowed with the structure below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGeomapDefinitionRequestLogQuerySearch:DashboardWidgetGeomapDefinitionRequestLogQuerySearch",
                    "description": "Newstyle:  (Map of String, Deprecated) Map defining the search query to use.  Define search_query directly instead.\n",
                    "deprecationMessage": "Define `search_query` directly instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchQuery": {
                    "type": "string",
                    "description": "Newstyle:  (String) The search query to use.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetGeomapDefinitionRequestLogQueryCompute:DashboardWidgetGeomapDefinitionRequestLogQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Define a time interval in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGeomapDefinitionRequestLogQueryComputeQuery:DashboardWidgetGeomapDefinitionRequestLogQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Define a time interval in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGeomapDefinitionRequestLogQueryGroupBy:DashboardWidgetGeomapDefinitionRequestLogQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Maximum number of items in the group.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGeomapDefinitionRequestLogQueryGroupBySort:DashboardWidgetGeomapDefinitionRequestLogQueryGroupBySort",
                    "description": "Newstyle:  (Map of String, Deprecated) One map is allowed with the keys as below.  Define sort_query list with one element instead.\n",
                    "deprecationMessage": "Define `sort_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGeomapDefinitionRequestLogQueryGroupBySortQuery:DashboardWidgetGeomapDefinitionRequestLogQueryGroupBySortQuery",
                    "description": "Newstyle:  (Block List, Max: 1) List of exactly one element describing the sort query to use. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGeomapDefinitionRequestLogQueryGroupBySort:DashboardWidgetGeomapDefinitionRequestLogQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "description": "Newstyle:  (String) Widget sorting methods.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetGeomapDefinitionRequestLogQueryGroupBySortQuery:DashboardWidgetGeomapDefinitionRequestLogQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "description": "Newstyle:  (String) Widget sorting methods.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetGeomapDefinitionRequestLogQueryMultiCompute:DashboardWidgetGeomapDefinitionRequestLogQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Define a time interval in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGeomapDefinitionRequestLogQuerySearch:DashboardWidgetGeomapDefinitionRequestLogQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "description": "Newstyle:  (String) Metrics query definition.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/DashboardWidgetGeomapDefinitionRequestQuery:DashboardWidgetGeomapDefinitionRequestQuery": {
            "properties": {
                "eventQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGeomapDefinitionRequestQueryEventQuery:DashboardWidgetGeomapDefinitionRequestQueryEventQuery",
                    "description": "Newstyle:  (Block List, Max: 1) A timeseries formula and functions events query. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "metricQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGeomapDefinitionRequestQueryMetricQuery:DashboardWidgetGeomapDefinitionRequestQueryMetricQuery",
                    "description": "Newstyle:  (Block List, Max: 1) A timeseries formula and functions metrics query. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "processQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGeomapDefinitionRequestQueryProcessQuery:DashboardWidgetGeomapDefinitionRequestQueryProcessQuery",
                    "description": "Newstyle:  (Block List, Max: 1) Process query using formulas and functions. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGeomapDefinitionRequestQueryEventQuery:DashboardWidgetGeomapDefinitionRequestQueryEventQuery": {
            "properties": {
                "computes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGeomapDefinitionRequestQueryEventQueryCompute:DashboardWidgetGeomapDefinitionRequestQueryEventQueryCompute"
                    },
                    "description": "Newstyle:  (Map of String, Deprecated) One of compute or multi_compute is required. The map has the keys as below.  Define compute_query list with one element instead.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "dataSource": {
                    "type": "string",
                    "description": "Newstyle:  (String) Data source for process queries.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGeomapDefinitionRequestQueryEventQueryGroupBy:DashboardWidgetGeomapDefinitionRequestQueryEventQueryGroupBy"
                    },
                    "description": "Newstyle:  (Block List) Multiple group_by blocks are allowed with the structure below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "indexes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Newstyle:  (List of String) An array of index names to query in the stream.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "Newstyle:  (String) The name of the template variable\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGeomapDefinitionRequestQueryEventQuerySearch:DashboardWidgetGeomapDefinitionRequestQueryEventQuerySearch",
                    "description": "Newstyle:  (Map of String, Deprecated) Map defining the search query to use.  Define search_query directly instead.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "computes",
                "dataSource",
                "name"
            ]
        },
        "datadog:index/DashboardWidgetGeomapDefinitionRequestQueryEventQueryCompute:DashboardWidgetGeomapDefinitionRequestQueryEventQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Define a time interval in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "metric": {
                    "type": "string",
                    "description": "Newstyle:  (String) Process metric name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGeomapDefinitionRequestQueryEventQueryGroupBy:DashboardWidgetGeomapDefinitionRequestQueryEventQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Maximum number of items in the group.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGeomapDefinitionRequestQueryEventQueryGroupBySort:DashboardWidgetGeomapDefinitionRequestQueryEventQueryGroupBySort",
                    "description": "Newstyle:  (Map of String, Deprecated) One map is allowed with the keys as below.  Define sort_query list with one element instead.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "facet"
            ]
        },
        "datadog:index/DashboardWidgetGeomapDefinitionRequestQueryEventQueryGroupBySort:DashboardWidgetGeomapDefinitionRequestQueryEventQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "metric": {
                    "type": "string",
                    "description": "Newstyle:  (String) Process metric name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "description": "Newstyle:  (String) Widget sorting methods.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGeomapDefinitionRequestQueryEventQuerySearch:DashboardWidgetGeomapDefinitionRequestQueryEventQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "description": "Newstyle:  (String) Metrics query definition.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/DashboardWidgetGeomapDefinitionRequestQueryMetricQuery:DashboardWidgetGeomapDefinitionRequestQueryMetricQuery": {
            "properties": {
                "aggregator": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation methods available for metrics queries.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "dataSource": {
                    "type": "string",
                    "description": "Newstyle:  (String) Data source for process queries.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "Newstyle:  (String) The name of the template variable\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "query": {
                    "type": "string",
                    "description": "Newstyle:  (String) Metrics query definition.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "name",
                "query"
            ]
        },
        "datadog:index/DashboardWidgetGeomapDefinitionRequestQueryProcessQuery:DashboardWidgetGeomapDefinitionRequestQueryProcessQuery": {
            "properties": {
                "aggregator": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation methods available for metrics queries.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "dataSource": {
                    "type": "string",
                    "description": "Newstyle:  (String) Data source for process queries.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "isNormalizedCpu": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Maximum number of items in the group.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "metric": {
                    "type": "string",
                    "description": "Newstyle:  (String) Process metric name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "Newstyle:  (String) The name of the template variable\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "type": "string",
                    "description": "Newstyle:  (Map of String, Deprecated) One map is allowed with the keys as below.  Define sort_query list with one element instead.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tagFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Newstyle:  (List of String) An array of tags to filter by.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "textFilter": {
                    "type": "string",
                    "description": "Newstyle:  (String) Text to use as filter.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "dataSource",
                "metric",
                "name"
            ]
        },
        "datadog:index/DashboardWidgetGeomapDefinitionRequestRumQuery:DashboardWidgetGeomapDefinitionRequestRumQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGeomapDefinitionRequestRumQueryCompute:DashboardWidgetGeomapDefinitionRequestRumQueryCompute",
                    "description": "Newstyle:  (Map of String, Deprecated) One of compute or multi_compute is required. The map has the keys as below.  Define compute_query list with one element instead.\n",
                    "deprecationMessage": "Define `compute_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGeomapDefinitionRequestRumQueryComputeQuery:DashboardWidgetGeomapDefinitionRequestRumQueryComputeQuery",
                    "description": "Newstyle:  (Block List, Max: 1) One of compute_query or multi_compute is required. The map has the keys as below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGeomapDefinitionRequestRumQueryGroupBy:DashboardWidgetGeomapDefinitionRequestRumQueryGroupBy"
                    },
                    "description": "Newstyle:  (Block List) Multiple group_by blocks are allowed with the structure below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "description": "Newstyle:  (String) Name of the index to query.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGeomapDefinitionRequestRumQueryMultiCompute:DashboardWidgetGeomapDefinitionRequestRumQueryMultiCompute"
                    },
                    "description": "Newstyle:  (Block List) One of compute_query or multi_compute is required. Multiple multi_compute blocks are allowed with the structure below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGeomapDefinitionRequestRumQuerySearch:DashboardWidgetGeomapDefinitionRequestRumQuerySearch",
                    "description": "Newstyle:  (Map of String, Deprecated) Map defining the search query to use.  Define search_query directly instead.\n",
                    "deprecationMessage": "Define `search_query` directly instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchQuery": {
                    "type": "string",
                    "description": "Newstyle:  (String) The search query to use.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetGeomapDefinitionRequestRumQueryCompute:DashboardWidgetGeomapDefinitionRequestRumQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Define a time interval in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGeomapDefinitionRequestRumQueryComputeQuery:DashboardWidgetGeomapDefinitionRequestRumQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Define a time interval in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGeomapDefinitionRequestRumQueryGroupBy:DashboardWidgetGeomapDefinitionRequestRumQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Maximum number of items in the group.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGeomapDefinitionRequestRumQueryGroupBySort:DashboardWidgetGeomapDefinitionRequestRumQueryGroupBySort",
                    "description": "Newstyle:  (Map of String, Deprecated) One map is allowed with the keys as below.  Define sort_query list with one element instead.\n",
                    "deprecationMessage": "Define `sort_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGeomapDefinitionRequestRumQueryGroupBySortQuery:DashboardWidgetGeomapDefinitionRequestRumQueryGroupBySortQuery",
                    "description": "Newstyle:  (Block List, Max: 1) List of exactly one element describing the sort query to use. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGeomapDefinitionRequestRumQueryGroupBySort:DashboardWidgetGeomapDefinitionRequestRumQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "description": "Newstyle:  (String) Widget sorting methods.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetGeomapDefinitionRequestRumQueryGroupBySortQuery:DashboardWidgetGeomapDefinitionRequestRumQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "description": "Newstyle:  (String) Widget sorting methods.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetGeomapDefinitionRequestRumQueryMultiCompute:DashboardWidgetGeomapDefinitionRequestRumQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Define a time interval in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGeomapDefinitionRequestRumQuerySearch:DashboardWidgetGeomapDefinitionRequestRumQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "description": "Newstyle:  (String) Metrics query definition.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/DashboardWidgetGeomapDefinitionStyle:DashboardWidgetGeomapDefinitionStyle": {
            "properties": {
                "palette": {
                    "type": "string",
                    "description": "Newstyle:  (String) Color palette to apply to the widget. The available options are available here: https://docs.datadoghq.com/dashboards/widgets/timeseries/#appearance.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "paletteFlip": {
                    "type": "boolean",
                    "description": "Newstyle:  (Boolean) Boolean indicating whether to flip the palette tones.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "palette",
                "paletteFlip"
            ]
        },
        "datadog:index/DashboardWidgetGeomapDefinitionView:DashboardWidgetGeomapDefinitionView": {
            "properties": {
                "focus": {
                    "type": "string",
                    "description": "Newstyle:  (String) The 2-letter ISO code of a country to focus the map on. Or WORLD.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "focus"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinition:DashboardWidgetGroupDefinition": {
            "properties": {
                "layoutType": {
                    "type": "string",
                    "description": "Newstyle:  (String) The layout type of the group, only 'ordered' for now.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "title": {
                    "type": "string",
                    "description": "Newstyle:  (String) The title of the widget.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "widgets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidget:DashboardWidgetGroupDefinitionWidget"
                    },
                    "description": "Newstyle:  (Block List, Min: 1) The list of widgets in this group. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "layoutType",
                "widgets"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidget:DashboardWidgetGroupDefinitionWidget": {
            "properties": {
                "alertGraphDefinition": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetAlertGraphDefinition:DashboardWidgetGroupDefinitionWidgetAlertGraphDefinition",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "alertValueDefinition": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetAlertValueDefinition:DashboardWidgetGroupDefinitionWidgetAlertValueDefinition",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "changeDefinition": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetChangeDefinition:DashboardWidgetGroupDefinitionWidgetChangeDefinition",
                    "description": "Newstyle:  (Block List, Max: 1) The definition for a Change  widget. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "checkStatusDefinition": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetCheckStatusDefinition:DashboardWidgetGroupDefinitionWidgetCheckStatusDefinition",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "distributionDefinition": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetDistributionDefinition:DashboardWidgetGroupDefinitionWidgetDistributionDefinition",
                    "description": "Newstyle:  (Block List, Max: 1) The definition for a Distribution widget. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "eventStreamDefinition": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetEventStreamDefinition:DashboardWidgetGroupDefinitionWidgetEventStreamDefinition",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "eventTimelineDefinition": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetEventTimelineDefinition:DashboardWidgetGroupDefinitionWidgetEventTimelineDefinition",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "freeTextDefinition": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetFreeTextDefinition:DashboardWidgetGroupDefinitionWidgetFreeTextDefinition",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "geomapDefinition": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetGeomapDefinition:DashboardWidgetGroupDefinitionWidgetGeomapDefinition",
                    "description": "Newstyle:  (Block List, Max: 1) The definition for a Geomap widget. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "heatmapDefinition": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHeatmapDefinition:DashboardWidgetGroupDefinitionWidgetHeatmapDefinition",
                    "description": "Newstyle:  (Block List, Max: 1) The definition for a Heatmap widget. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "hostmapDefinition": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinition:DashboardWidgetGroupDefinitionWidgetHostmapDefinition",
                    "description": "Newstyle:  (Block List, Max: 1) The definition for a Hostmap widget. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "id": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) The ID of the widget.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "iframeDefinition": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetIframeDefinition:DashboardWidgetGroupDefinitionWidgetIframeDefinition",
                    "description": "Newstyle:  (Block List, Max: 1) The definition for an Iframe widget. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "imageDefinition": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetImageDefinition:DashboardWidgetGroupDefinitionWidgetImageDefinition",
                    "description": "Newstyle:  (Block List, Max: 1) The definition for an Image widget (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "layout": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetLayout:DashboardWidgetGroupDefinitionWidgetLayout",
                    "description": "Newstyle:  (Map of String, Deprecated) The layout of the widget on a 'free' dashboard.  Define widget_layout list with one element instead.\n",
                    "deprecationMessage": "Define `widget_layout` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logStreamDefinition": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetLogStreamDefinition:DashboardWidgetGroupDefinitionWidgetLogStreamDefinition",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "manageStatusDefinition": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetManageStatusDefinition:DashboardWidgetGroupDefinitionWidgetManageStatusDefinition",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "noteDefinition": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetNoteDefinition:DashboardWidgetGroupDefinitionWidgetNoteDefinition",
                    "description": "Newstyle:  (Block List, Max: 1) The definition for a Note widget. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "queryTableDefinition": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetQueryTableDefinition:DashboardWidgetGroupDefinitionWidgetQueryTableDefinition",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "queryValueDefinition": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetQueryValueDefinition:DashboardWidgetGroupDefinitionWidgetQueryValueDefinition",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "scatterplotDefinition": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinition:DashboardWidgetGroupDefinitionWidgetScatterplotDefinition",
                    "description": "Newstyle:  (Block List, Max: 1) The definition for a Scatterplot widget. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "serviceLevelObjectiveDefinition": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetServiceLevelObjectiveDefinition:DashboardWidgetGroupDefinitionWidgetServiceLevelObjectiveDefinition",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "servicemapDefinition": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetServicemapDefinition:DashboardWidgetGroupDefinitionWidgetServicemapDefinition",
                    "description": "Newstyle:  (Block List, Max: 1) The definition for a Service Map widget. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "timeseriesDefinition": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinition:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinition",
                    "description": "Newstyle:  (Block List, Max: 1) The definition for a Timeseries widget. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "toplistDefinition": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetToplistDefinition:DashboardWidgetGroupDefinitionWidgetToplistDefinition",
                    "description": "Newstyle:  (Block List, Max: 1) The definition for a Toplist widget. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "traceServiceDefinition": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetTraceServiceDefinition:DashboardWidgetGroupDefinitionWidgetTraceServiceDefinition",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "widgetLayout": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetWidgetLayout:DashboardWidgetGroupDefinitionWidgetWidgetLayout",
                    "description": "Newstyle:  (Block List, Max: 1) The layout of the widget on a 'free' dashboard. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "id"
                    ]
                }
            }
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetAlertGraphDefinition:DashboardWidgetGroupDefinitionWidgetAlertGraphDefinition": {
            "properties": {
                "alertId": {
                    "type": "string",
                    "description": "Newstyle:  (String) The ID of the monitor used by the widget.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "liveSpan": {
                    "type": "string",
                    "description": "Newstyle:  (String) The timeframe to use when displaying the widget. One of 10m, 30m, 1h, 4h, 1d, 2d, 1w, 1mo, 3mo, 6mo, 1y, alert.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "time": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetAlertGraphDefinitionTime:DashboardWidgetGroupDefinitionWidgetAlertGraphDefinitionTime",
                    "description": "Newstyle:  (Map of String, Deprecated) Nested block describing the timeframe to use when displaying the widget. The structure of this block is described below.  Define live_span directly in the widget definition instead.\n",
                    "deprecationMessage": "Define `live_span` directly in the widget definition instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "title": {
                    "type": "string",
                    "description": "Newstyle:  (String) The title of the widget.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleAlign": {
                    "type": "string",
                    "description": "Newstyle:  (String) The alignment of the widget's title. One of left, center, or right.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleSize": {
                    "type": "string",
                    "description": "Newstyle:  (String) The size of the widget's title. Default is 16.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "vizType": {
                    "type": "string",
                    "description": "Newstyle:  (String) Type of visualization to use when displaying the widget. Either timeseries or toplist.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "alertId",
                "vizType"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetAlertGraphDefinitionTime:DashboardWidgetGroupDefinitionWidgetAlertGraphDefinitionTime": {
            "properties": {
                "liveSpan": {
                    "type": "string",
                    "description": "Newstyle:  (String) The timeframe to use when displaying the widget. One of 10m, 30m, 1h, 4h, 1d, 2d, 1w, 1mo, 3mo, 6mo, 1y, alert.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetAlertValueDefinition:DashboardWidgetGroupDefinitionWidgetAlertValueDefinition": {
            "properties": {
                "alertId": {
                    "type": "string",
                    "description": "Newstyle:  (String) The ID of the monitor used by the widget.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "precision": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) The precision to use when displaying the tile.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "textAlign": {
                    "type": "string",
                    "description": "Newstyle:  (String) The alignment of the widget's text. One of left, center, or right.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "title": {
                    "type": "string",
                    "description": "Newstyle:  (String) The title of the widget.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleAlign": {
                    "type": "string",
                    "description": "Newstyle:  (String) The alignment of the widget's title. One of left, center, or right.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleSize": {
                    "type": "string",
                    "description": "Newstyle:  (String) The size of the widget's title. Default is 16.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unit": {
                    "type": "string",
                    "description": "Newstyle:  (String) The unit for the value displayed in the widget.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "alertId"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetChangeDefinition:DashboardWidgetGroupDefinitionWidgetChangeDefinition": {
            "properties": {
                "customLinks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetChangeDefinitionCustomLink:DashboardWidgetGroupDefinitionWidgetChangeDefinitionCustomLink"
                    },
                    "description": "Newstyle:  (Block List) Nested block describing a custom link. Multiple custom_link blocks are allowed with the structure below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "liveSpan": {
                    "type": "string",
                    "description": "Newstyle:  (String) The timeframe to use when displaying the widget. One of 10m, 30m, 1h, 4h, 1d, 2d, 1w, 1mo, 3mo, 6mo, 1y, alert.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "requests": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequest:DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequest"
                    },
                    "description": "Newstyle:  (Block List) Nested block describing the request to use when displaying the widget. Multiple request blocks are allowed with the structure below (exactly one of q, apm_query, log_query, rum_query, security_query or process_query is required within the request block). (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "time": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetChangeDefinitionTime:DashboardWidgetGroupDefinitionWidgetChangeDefinitionTime",
                    "description": "Newstyle:  (Map of String, Deprecated) Nested block describing the timeframe to use when displaying the widget. The structure of this block is described below.  Define live_span directly in the widget definition instead.\n",
                    "deprecationMessage": "Define `live_span` directly in the widget definition instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "title": {
                    "type": "string",
                    "description": "Newstyle:  (String) The title of the widget.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleAlign": {
                    "type": "string",
                    "description": "Newstyle:  (String) The alignment of the widget's title. One of left, center, or right.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleSize": {
                    "type": "string",
                    "description": "Newstyle:  (String) The size of the widget's title. Default is 16.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetChangeDefinitionCustomLink:DashboardWidgetGroupDefinitionWidgetChangeDefinitionCustomLink": {
            "properties": {
                "label": {
                    "type": "string",
                    "description": "Newstyle:  (String) The label for the custom link URL.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "link": {
                    "type": "string",
                    "description": "Newstyle:  (String) The URL of the custom link.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "label",
                "link"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequest:DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequest": {
            "properties": {
                "apmQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestApmQuery:DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestApmQuery",
                    "description": "Newstyle:  (Block List, Max: 1) The query to use for this widget. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "changeType": {
                    "type": "string",
                    "description": "Newstyle:  (String) Whether to show absolute or relative change. One of absolute, relative.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "compareTo": {
                    "type": "string",
                    "description": "Newstyle:  (String) Choose from when to compare current data to. One of hour_before, day_before, week_before or month_before.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "increaseGood": {
                    "type": "boolean",
                    "description": "Newstyle:  (Boolean) Boolean indicating whether an increase in the value is good (thus displayed in green) or not (thus displayed in red).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestLogQuery:DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestLogQuery",
                    "description": "Newstyle:  (Block List, Max: 1) The query to use for this widget. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "orderBy": {
                    "type": "string",
                    "description": "Newstyle:  (String) One of change, name, present (present value) or past (past value).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "orderDir": {
                    "type": "string",
                    "description": "Newstyle:  (String) Either asc (ascending) or desc (descending).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "processQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestProcessQuery:DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestProcessQuery",
                    "description": "Newstyle:  (Block List, Max: 1) Process query using formulas and functions. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "q": {
                    "type": "string",
                    "description": "Newstyle:  (String) The metric query to use for this widget.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "rumQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestRumQuery:DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestRumQuery",
                    "description": "Newstyle:  (Block List, Max: 1) The query to use for this widget. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "securityQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestSecurityQuery:DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestSecurityQuery",
                    "description": "Newstyle:  (Block List, Max: 1) The query to use for this widget. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "showPresent": {
                    "type": "boolean",
                    "description": "Newstyle:  (Boolean) If set to true, displays current value.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestApmQuery:DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestApmQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestApmQueryCompute:DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestApmQueryCompute",
                    "description": "Newstyle:  (Map of String, Deprecated) One of compute or multi_compute is required. The map has the keys as below.  Define compute_query list with one element instead.\n",
                    "deprecationMessage": "Define `compute_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestApmQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestApmQueryComputeQuery",
                    "description": "Newstyle:  (Block List, Max: 1) One of compute_query or multi_compute is required. The map has the keys as below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestApmQueryGroupBy:DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestApmQueryGroupBy"
                    },
                    "description": "Newstyle:  (Block List) Multiple group_by blocks are allowed with the structure below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "description": "Newstyle:  (String) Name of the index to query.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestApmQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestApmQueryMultiCompute"
                    },
                    "description": "Newstyle:  (Block List) One of compute_query or multi_compute is required. Multiple multi_compute blocks are allowed with the structure below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestApmQuerySearch:DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestApmQuerySearch",
                    "description": "Newstyle:  (Map of String, Deprecated) Map defining the search query to use.  Define search_query directly instead.\n",
                    "deprecationMessage": "Define `search_query` directly instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchQuery": {
                    "type": "string",
                    "description": "Newstyle:  (String) The search query to use.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestApmQueryCompute:DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestApmQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Define a time interval in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestApmQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestApmQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Define a time interval in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestApmQueryGroupBy:DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestApmQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Maximum number of items in the group.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestApmQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestApmQueryGroupBySort",
                    "description": "Newstyle:  (Map of String, Deprecated) One map is allowed with the keys as below.  Define sort_query list with one element instead.\n",
                    "deprecationMessage": "Define `sort_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestApmQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestApmQueryGroupBySortQuery",
                    "description": "Newstyle:  (Block List, Max: 1) List of exactly one element describing the sort query to use. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestApmQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestApmQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "description": "Newstyle:  (String) Widget sorting methods.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestApmQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestApmQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "description": "Newstyle:  (String) Widget sorting methods.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestApmQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestApmQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Define a time interval in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestApmQuerySearch:DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestApmQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "description": "Newstyle:  (String) Metrics query definition.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestLogQuery:DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestLogQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestLogQueryCompute:DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestLogQueryCompute",
                    "description": "Newstyle:  (Map of String, Deprecated) One of compute or multi_compute is required. The map has the keys as below.  Define compute_query list with one element instead.\n",
                    "deprecationMessage": "Define `compute_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestLogQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestLogQueryComputeQuery",
                    "description": "Newstyle:  (Block List, Max: 1) One of compute_query or multi_compute is required. The map has the keys as below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestLogQueryGroupBy:DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestLogQueryGroupBy"
                    },
                    "description": "Newstyle:  (Block List) Multiple group_by blocks are allowed with the structure below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "description": "Newstyle:  (String) Name of the index to query.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestLogQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestLogQueryMultiCompute"
                    },
                    "description": "Newstyle:  (Block List) One of compute_query or multi_compute is required. Multiple multi_compute blocks are allowed with the structure below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestLogQuerySearch:DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestLogQuerySearch",
                    "description": "Newstyle:  (Map of String, Deprecated) Map defining the search query to use.  Define search_query directly instead.\n",
                    "deprecationMessage": "Define `search_query` directly instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchQuery": {
                    "type": "string",
                    "description": "Newstyle:  (String) The search query to use.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestLogQueryCompute:DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestLogQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Define a time interval in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestLogQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestLogQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Define a time interval in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestLogQueryGroupBy:DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestLogQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Maximum number of items in the group.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestLogQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestLogQueryGroupBySort",
                    "description": "Newstyle:  (Map of String, Deprecated) One map is allowed with the keys as below.  Define sort_query list with one element instead.\n",
                    "deprecationMessage": "Define `sort_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestLogQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestLogQueryGroupBySortQuery",
                    "description": "Newstyle:  (Block List, Max: 1) List of exactly one element describing the sort query to use. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestLogQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestLogQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "description": "Newstyle:  (String) Widget sorting methods.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestLogQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestLogQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "description": "Newstyle:  (String) Widget sorting methods.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestLogQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestLogQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Define a time interval in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestLogQuerySearch:DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestLogQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "description": "Newstyle:  (String) Metrics query definition.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestProcessQuery:DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestProcessQuery": {
            "properties": {
                "filterBies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Newstyle:  (List of String) List of processes.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Maximum number of items in the group.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "metric": {
                    "type": "string",
                    "description": "Newstyle:  (String) Process metric name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchBy": {
                    "type": "string",
                    "description": "Newstyle:  (String) Your chosen search term.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "metric"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestRumQuery:DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestRumQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestRumQueryCompute:DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestRumQueryCompute",
                    "description": "Newstyle:  (Map of String, Deprecated) One of compute or multi_compute is required. The map has the keys as below.  Define compute_query list with one element instead.\n",
                    "deprecationMessage": "Define `compute_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestRumQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestRumQueryComputeQuery",
                    "description": "Newstyle:  (Block List, Max: 1) One of compute_query or multi_compute is required. The map has the keys as below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestRumQueryGroupBy:DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestRumQueryGroupBy"
                    },
                    "description": "Newstyle:  (Block List) Multiple group_by blocks are allowed with the structure below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "description": "Newstyle:  (String) Name of the index to query.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestRumQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestRumQueryMultiCompute"
                    },
                    "description": "Newstyle:  (Block List) One of compute_query or multi_compute is required. Multiple multi_compute blocks are allowed with the structure below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestRumQuerySearch:DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestRumQuerySearch",
                    "description": "Newstyle:  (Map of String, Deprecated) Map defining the search query to use.  Define search_query directly instead.\n",
                    "deprecationMessage": "Define `search_query` directly instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchQuery": {
                    "type": "string",
                    "description": "Newstyle:  (String) The search query to use.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestRumQueryCompute:DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestRumQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Define a time interval in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestRumQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestRumQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Define a time interval in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestRumQueryGroupBy:DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestRumQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Maximum number of items in the group.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestRumQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestRumQueryGroupBySort",
                    "description": "Newstyle:  (Map of String, Deprecated) One map is allowed with the keys as below.  Define sort_query list with one element instead.\n",
                    "deprecationMessage": "Define `sort_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestRumQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestRumQueryGroupBySortQuery",
                    "description": "Newstyle:  (Block List, Max: 1) List of exactly one element describing the sort query to use. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestRumQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestRumQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "description": "Newstyle:  (String) Widget sorting methods.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestRumQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestRumQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "description": "Newstyle:  (String) Widget sorting methods.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestRumQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestRumQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Define a time interval in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestRumQuerySearch:DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestRumQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "description": "Newstyle:  (String) Metrics query definition.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestSecurityQuery:DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestSecurityQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestSecurityQueryCompute:DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestSecurityQueryCompute",
                    "description": "Newstyle:  (Map of String, Deprecated) One of compute or multi_compute is required. The map has the keys as below.  Define compute_query list with one element instead.\n",
                    "deprecationMessage": "Define `compute_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestSecurityQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestSecurityQueryComputeQuery",
                    "description": "Newstyle:  (Block List, Max: 1) One of compute_query or multi_compute is required. The map has the keys as below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestSecurityQueryGroupBy:DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestSecurityQueryGroupBy"
                    },
                    "description": "Newstyle:  (Block List) Multiple group_by blocks are allowed with the structure below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "description": "Newstyle:  (String) Name of the index to query.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestSecurityQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestSecurityQueryMultiCompute"
                    },
                    "description": "Newstyle:  (Block List) One of compute_query or multi_compute is required. Multiple multi_compute blocks are allowed with the structure below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestSecurityQuerySearch:DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestSecurityQuerySearch",
                    "description": "Newstyle:  (Map of String, Deprecated) Map defining the search query to use.  Define search_query directly instead.\n",
                    "deprecationMessage": "Define `search_query` directly instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchQuery": {
                    "type": "string",
                    "description": "Newstyle:  (String) The search query to use.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestSecurityQueryCompute:DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestSecurityQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Define a time interval in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestSecurityQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestSecurityQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Define a time interval in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestSecurityQueryGroupBy:DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestSecurityQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Maximum number of items in the group.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestSecurityQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestSecurityQueryGroupBySort",
                    "description": "Newstyle:  (Map of String, Deprecated) One map is allowed with the keys as below.  Define sort_query list with one element instead.\n",
                    "deprecationMessage": "Define `sort_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestSecurityQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestSecurityQueryGroupBySortQuery",
                    "description": "Newstyle:  (Block List, Max: 1) List of exactly one element describing the sort query to use. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestSecurityQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestSecurityQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "description": "Newstyle:  (String) Widget sorting methods.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestSecurityQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestSecurityQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "description": "Newstyle:  (String) Widget sorting methods.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestSecurityQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestSecurityQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Define a time interval in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestSecurityQuerySearch:DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestSecurityQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "description": "Newstyle:  (String) Metrics query definition.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetChangeDefinitionTime:DashboardWidgetGroupDefinitionWidgetChangeDefinitionTime": {
            "properties": {
                "liveSpan": {
                    "type": "string",
                    "description": "Newstyle:  (String) The timeframe to use when displaying the widget. One of 10m, 30m, 1h, 4h, 1d, 2d, 1w, 1mo, 3mo, 6mo, 1y, alert.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetCheckStatusDefinition:DashboardWidgetGroupDefinitionWidgetCheckStatusDefinition": {
            "properties": {
                "check": {
                    "type": "string",
                    "description": "Newstyle:  (String) The check to use in the widget.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "group": {
                    "type": "string",
                    "description": "Newstyle:  (List of String) The list of tags to group nodes by.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Newstyle:  (Block List) Multiple group_by blocks are allowed with the structure below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "grouping": {
                    "type": "string",
                    "description": "Newstyle:  (String) Either check or cluster, depending on whether the widget should use a single check or a cluster of checks.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "liveSpan": {
                    "type": "string",
                    "description": "Newstyle:  (String) The timeframe to use when displaying the widget. One of 10m, 30m, 1h, 4h, 1d, 2d, 1w, 1mo, 3mo, 6mo, 1y, alert.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Newstyle:  (List of String) List of tags to use in the widget.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "time": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetCheckStatusDefinitionTime:DashboardWidgetGroupDefinitionWidgetCheckStatusDefinitionTime",
                    "description": "Newstyle:  (Map of String, Deprecated) Nested block describing the timeframe to use when displaying the widget. The structure of this block is described below.  Define live_span directly in the widget definition instead.\n",
                    "deprecationMessage": "Define `live_span` directly in the widget definition instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "title": {
                    "type": "string",
                    "description": "Newstyle:  (String) The title of the widget.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleAlign": {
                    "type": "string",
                    "description": "Newstyle:  (String) The alignment of the widget's title. One of left, center, or right.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleSize": {
                    "type": "string",
                    "description": "Newstyle:  (String) The size of the widget's title. Default is 16.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "check",
                "grouping"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetCheckStatusDefinitionTime:DashboardWidgetGroupDefinitionWidgetCheckStatusDefinitionTime": {
            "properties": {
                "liveSpan": {
                    "type": "string",
                    "description": "Newstyle:  (String) The timeframe to use when displaying the widget. One of 10m, 30m, 1h, 4h, 1d, 2d, 1w, 1mo, 3mo, 6mo, 1y, alert.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetDistributionDefinition:DashboardWidgetGroupDefinitionWidgetDistributionDefinition": {
            "properties": {
                "legendSize": {
                    "type": "string",
                    "description": "Newstyle:  (String) The size of the legend displayed in the widget.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "liveSpan": {
                    "type": "string",
                    "description": "Newstyle:  (String) The timeframe to use when displaying the widget. One of 10m, 30m, 1h, 4h, 1d, 2d, 1w, 1mo, 3mo, 6mo, 1y, alert.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "requests": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequest:DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequest"
                    },
                    "description": "Newstyle:  (Block List) Nested block describing the request to use when displaying the widget. Multiple request blocks are allowed with the structure below (exactly one of q, apm_query, log_query, rum_query, security_query or process_query is required within the request block). (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "showLegend": {
                    "type": "boolean",
                    "description": "Newstyle:  (Boolean) Whether or not to show the legend on this widget.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "time": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetDistributionDefinitionTime:DashboardWidgetGroupDefinitionWidgetDistributionDefinitionTime",
                    "description": "Newstyle:  (Map of String, Deprecated) Nested block describing the timeframe to use when displaying the widget. The structure of this block is described below.  Define live_span directly in the widget definition instead.\n",
                    "deprecationMessage": "Define `live_span` directly in the widget definition instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "title": {
                    "type": "string",
                    "description": "Newstyle:  (String) The title of the widget.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleAlign": {
                    "type": "string",
                    "description": "Newstyle:  (String) The alignment of the widget's title. One of left, center, or right.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleSize": {
                    "type": "string",
                    "description": "Newstyle:  (String) The size of the widget's title. Default is 16.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequest:DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequest": {
            "properties": {
                "apmQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestApmQuery:DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestApmQuery",
                    "description": "Newstyle:  (Block List, Max: 1) The query to use for this widget. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestLogQuery:DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestLogQuery",
                    "description": "Newstyle:  (Block List, Max: 1) The query to use for this widget. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "processQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestProcessQuery:DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestProcessQuery",
                    "description": "Newstyle:  (Block List, Max: 1) Process query using formulas and functions. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "q": {
                    "type": "string",
                    "description": "Newstyle:  (String) The metric query to use for this widget.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "rumQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestRumQuery:DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestRumQuery",
                    "description": "Newstyle:  (Block List, Max: 1) The query to use for this widget. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "securityQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestSecurityQuery:DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestSecurityQuery",
                    "description": "Newstyle:  (Block List, Max: 1) The query to use for this widget. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "style": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestStyle:DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestStyle",
                    "description": "Newstyle:  (Block List, Max: 1) Define request widget style. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestApmQuery:DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestApmQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestApmQueryCompute:DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestApmQueryCompute",
                    "description": "Newstyle:  (Map of String, Deprecated) One of compute or multi_compute is required. The map has the keys as below.  Define compute_query list with one element instead.\n",
                    "deprecationMessage": "Define `compute_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestApmQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestApmQueryComputeQuery",
                    "description": "Newstyle:  (Block List, Max: 1) One of compute_query or multi_compute is required. The map has the keys as below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestApmQueryGroupBy:DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestApmQueryGroupBy"
                    },
                    "description": "Newstyle:  (Block List) Multiple group_by blocks are allowed with the structure below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "description": "Newstyle:  (String) Name of the index to query.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestApmQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestApmQueryMultiCompute"
                    },
                    "description": "Newstyle:  (Block List) One of compute_query or multi_compute is required. Multiple multi_compute blocks are allowed with the structure below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestApmQuerySearch:DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestApmQuerySearch",
                    "description": "Newstyle:  (Map of String, Deprecated) Map defining the search query to use.  Define search_query directly instead.\n",
                    "deprecationMessage": "Define `search_query` directly instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchQuery": {
                    "type": "string",
                    "description": "Newstyle:  (String) The search query to use.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestApmQueryCompute:DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestApmQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Define a time interval in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestApmQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestApmQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Define a time interval in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestApmQueryGroupBy:DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestApmQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Maximum number of items in the group.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestApmQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestApmQueryGroupBySort",
                    "description": "Newstyle:  (Map of String, Deprecated) One map is allowed with the keys as below.  Define sort_query list with one element instead.\n",
                    "deprecationMessage": "Define `sort_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestApmQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestApmQueryGroupBySortQuery",
                    "description": "Newstyle:  (Block List, Max: 1) List of exactly one element describing the sort query to use. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestApmQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestApmQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "description": "Newstyle:  (String) Widget sorting methods.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestApmQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestApmQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "description": "Newstyle:  (String) Widget sorting methods.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestApmQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestApmQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Define a time interval in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestApmQuerySearch:DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestApmQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "description": "Newstyle:  (String) Metrics query definition.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestLogQuery:DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestLogQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestLogQueryCompute:DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestLogQueryCompute",
                    "description": "Newstyle:  (Map of String, Deprecated) One of compute or multi_compute is required. The map has the keys as below.  Define compute_query list with one element instead.\n",
                    "deprecationMessage": "Define `compute_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestLogQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestLogQueryComputeQuery",
                    "description": "Newstyle:  (Block List, Max: 1) One of compute_query or multi_compute is required. The map has the keys as below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestLogQueryGroupBy:DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestLogQueryGroupBy"
                    },
                    "description": "Newstyle:  (Block List) Multiple group_by blocks are allowed with the structure below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "description": "Newstyle:  (String) Name of the index to query.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestLogQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestLogQueryMultiCompute"
                    },
                    "description": "Newstyle:  (Block List) One of compute_query or multi_compute is required. Multiple multi_compute blocks are allowed with the structure below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestLogQuerySearch:DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestLogQuerySearch",
                    "description": "Newstyle:  (Map of String, Deprecated) Map defining the search query to use.  Define search_query directly instead.\n",
                    "deprecationMessage": "Define `search_query` directly instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchQuery": {
                    "type": "string",
                    "description": "Newstyle:  (String) The search query to use.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestLogQueryCompute:DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestLogQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Define a time interval in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestLogQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestLogQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Define a time interval in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestLogQueryGroupBy:DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestLogQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Maximum number of items in the group.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestLogQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestLogQueryGroupBySort",
                    "description": "Newstyle:  (Map of String, Deprecated) One map is allowed with the keys as below.  Define sort_query list with one element instead.\n",
                    "deprecationMessage": "Define `sort_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestLogQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestLogQueryGroupBySortQuery",
                    "description": "Newstyle:  (Block List, Max: 1) List of exactly one element describing the sort query to use. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestLogQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestLogQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "description": "Newstyle:  (String) Widget sorting methods.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestLogQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestLogQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "description": "Newstyle:  (String) Widget sorting methods.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestLogQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestLogQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Define a time interval in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestLogQuerySearch:DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestLogQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "description": "Newstyle:  (String) Metrics query definition.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestProcessQuery:DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestProcessQuery": {
            "properties": {
                "filterBies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Newstyle:  (List of String) List of processes.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Maximum number of items in the group.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "metric": {
                    "type": "string",
                    "description": "Newstyle:  (String) Process metric name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchBy": {
                    "type": "string",
                    "description": "Newstyle:  (String) Your chosen search term.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "metric"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestRumQuery:DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestRumQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestRumQueryCompute:DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestRumQueryCompute",
                    "description": "Newstyle:  (Map of String, Deprecated) One of compute or multi_compute is required. The map has the keys as below.  Define compute_query list with one element instead.\n",
                    "deprecationMessage": "Define `compute_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestRumQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestRumQueryComputeQuery",
                    "description": "Newstyle:  (Block List, Max: 1) One of compute_query or multi_compute is required. The map has the keys as below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestRumQueryGroupBy:DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestRumQueryGroupBy"
                    },
                    "description": "Newstyle:  (Block List) Multiple group_by blocks are allowed with the structure below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "description": "Newstyle:  (String) Name of the index to query.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestRumQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestRumQueryMultiCompute"
                    },
                    "description": "Newstyle:  (Block List) One of compute_query or multi_compute is required. Multiple multi_compute blocks are allowed with the structure below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestRumQuerySearch:DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestRumQuerySearch",
                    "description": "Newstyle:  (Map of String, Deprecated) Map defining the search query to use.  Define search_query directly instead.\n",
                    "deprecationMessage": "Define `search_query` directly instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchQuery": {
                    "type": "string",
                    "description": "Newstyle:  (String) The search query to use.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestRumQueryCompute:DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestRumQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Define a time interval in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestRumQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestRumQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Define a time interval in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestRumQueryGroupBy:DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestRumQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Maximum number of items in the group.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestRumQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestRumQueryGroupBySort",
                    "description": "Newstyle:  (Map of String, Deprecated) One map is allowed with the keys as below.  Define sort_query list with one element instead.\n",
                    "deprecationMessage": "Define `sort_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestRumQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestRumQueryGroupBySortQuery",
                    "description": "Newstyle:  (Block List, Max: 1) List of exactly one element describing the sort query to use. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestRumQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestRumQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "description": "Newstyle:  (String) Widget sorting methods.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestRumQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestRumQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "description": "Newstyle:  (String) Widget sorting methods.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestRumQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestRumQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Define a time interval in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestRumQuerySearch:DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestRumQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "description": "Newstyle:  (String) Metrics query definition.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestSecurityQuery:DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestSecurityQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestSecurityQueryCompute:DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestSecurityQueryCompute",
                    "description": "Newstyle:  (Map of String, Deprecated) One of compute or multi_compute is required. The map has the keys as below.  Define compute_query list with one element instead.\n",
                    "deprecationMessage": "Define `compute_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestSecurityQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestSecurityQueryComputeQuery",
                    "description": "Newstyle:  (Block List, Max: 1) One of compute_query or multi_compute is required. The map has the keys as below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestSecurityQueryGroupBy:DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestSecurityQueryGroupBy"
                    },
                    "description": "Newstyle:  (Block List) Multiple group_by blocks are allowed with the structure below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "description": "Newstyle:  (String) Name of the index to query.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestSecurityQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestSecurityQueryMultiCompute"
                    },
                    "description": "Newstyle:  (Block List) One of compute_query or multi_compute is required. Multiple multi_compute blocks are allowed with the structure below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestSecurityQuerySearch:DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestSecurityQuerySearch",
                    "description": "Newstyle:  (Map of String, Deprecated) Map defining the search query to use.  Define search_query directly instead.\n",
                    "deprecationMessage": "Define `search_query` directly instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchQuery": {
                    "type": "string",
                    "description": "Newstyle:  (String) The search query to use.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestSecurityQueryCompute:DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestSecurityQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Define a time interval in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestSecurityQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestSecurityQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Define a time interval in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestSecurityQueryGroupBy:DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestSecurityQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Maximum number of items in the group.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestSecurityQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestSecurityQueryGroupBySort",
                    "description": "Newstyle:  (Map of String, Deprecated) One map is allowed with the keys as below.  Define sort_query list with one element instead.\n",
                    "deprecationMessage": "Define `sort_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestSecurityQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestSecurityQueryGroupBySortQuery",
                    "description": "Newstyle:  (Block List, Max: 1) List of exactly one element describing the sort query to use. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestSecurityQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestSecurityQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "description": "Newstyle:  (String) Widget sorting methods.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestSecurityQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestSecurityQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "description": "Newstyle:  (String) Widget sorting methods.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestSecurityQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestSecurityQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Define a time interval in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestSecurityQuerySearch:DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestSecurityQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "description": "Newstyle:  (String) Metrics query definition.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestStyle:DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestStyle": {
            "properties": {
                "palette": {
                    "type": "string",
                    "description": "Newstyle:  (String) Color palette to apply to the widget. The available options are available here: https://docs.datadoghq.com/dashboards/widgets/timeseries/#appearance.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetDistributionDefinitionTime:DashboardWidgetGroupDefinitionWidgetDistributionDefinitionTime": {
            "properties": {
                "liveSpan": {
                    "type": "string",
                    "description": "Newstyle:  (String) The timeframe to use when displaying the widget. One of 10m, 30m, 1h, 4h, 1d, 2d, 1w, 1mo, 3mo, 6mo, 1y, alert.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetEventStreamDefinition:DashboardWidgetGroupDefinitionWidgetEventStreamDefinition": {
            "properties": {
                "eventSize": {
                    "type": "string",
                    "description": "Newstyle:  (String) The size to use to display an event. One of s, l\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "liveSpan": {
                    "type": "string",
                    "description": "Newstyle:  (String) The timeframe to use when displaying the widget. One of 10m, 30m, 1h, 4h, 1d, 2d, 1w, 1mo, 3mo, 6mo, 1y, alert.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "query": {
                    "type": "string",
                    "description": "Newstyle:  (String) Metrics query definition.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tagsExecution": {
                    "type": "string",
                    "description": "Newstyle:  (String) The execution method for multi-value filters.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "time": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetEventStreamDefinitionTime:DashboardWidgetGroupDefinitionWidgetEventStreamDefinitionTime",
                    "description": "Newstyle:  (Map of String, Deprecated) Nested block describing the timeframe to use when displaying the widget. The structure of this block is described below.  Define live_span directly in the widget definition instead.\n",
                    "deprecationMessage": "Define `live_span` directly in the widget definition instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "title": {
                    "type": "string",
                    "description": "Newstyle:  (String) The title of the widget.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleAlign": {
                    "type": "string",
                    "description": "Newstyle:  (String) The alignment of the widget's title. One of left, center, or right.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleSize": {
                    "type": "string",
                    "description": "Newstyle:  (String) The size of the widget's title. Default is 16.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetEventStreamDefinitionTime:DashboardWidgetGroupDefinitionWidgetEventStreamDefinitionTime": {
            "properties": {
                "liveSpan": {
                    "type": "string",
                    "description": "Newstyle:  (String) The timeframe to use when displaying the widget. One of 10m, 30m, 1h, 4h, 1d, 2d, 1w, 1mo, 3mo, 6mo, 1y, alert.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetEventTimelineDefinition:DashboardWidgetGroupDefinitionWidgetEventTimelineDefinition": {
            "properties": {
                "liveSpan": {
                    "type": "string",
                    "description": "Newstyle:  (String) The timeframe to use when displaying the widget. One of 10m, 30m, 1h, 4h, 1d, 2d, 1w, 1mo, 3mo, 6mo, 1y, alert.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "query": {
                    "type": "string",
                    "description": "Newstyle:  (String) Metrics query definition.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tagsExecution": {
                    "type": "string",
                    "description": "Newstyle:  (String) The execution method for multi-value filters.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "time": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetEventTimelineDefinitionTime:DashboardWidgetGroupDefinitionWidgetEventTimelineDefinitionTime",
                    "description": "Newstyle:  (Map of String, Deprecated) Nested block describing the timeframe to use when displaying the widget. The structure of this block is described below.  Define live_span directly in the widget definition instead.\n",
                    "deprecationMessage": "Define `live_span` directly in the widget definition instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "title": {
                    "type": "string",
                    "description": "Newstyle:  (String) The title of the widget.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleAlign": {
                    "type": "string",
                    "description": "Newstyle:  (String) The alignment of the widget's title. One of left, center, or right.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleSize": {
                    "type": "string",
                    "description": "Newstyle:  (String) The size of the widget's title. Default is 16.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetEventTimelineDefinitionTime:DashboardWidgetGroupDefinitionWidgetEventTimelineDefinitionTime": {
            "properties": {
                "liveSpan": {
                    "type": "string",
                    "description": "Newstyle:  (String) The timeframe to use when displaying the widget. One of 10m, 30m, 1h, 4h, 1d, 2d, 1w, 1mo, 3mo, 6mo, 1y, alert.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetFreeTextDefinition:DashboardWidgetGroupDefinitionWidgetFreeTextDefinition": {
            "properties": {
                "color": {
                    "type": "string",
                    "description": "Newstyle:  (String) The color of the text in the widget.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "fontSize": {
                    "type": "string",
                    "description": "Newstyle:  (String) Size of the text.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "text": {
                    "type": "string",
                    "description": "Newstyle:  (String) The text to display in the widget.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "textAlign": {
                    "type": "string",
                    "description": "Newstyle:  (String) The alignment of the widget's text. One of left, center, or right.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "text"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetGeomapDefinition:DashboardWidgetGroupDefinitionWidgetGeomapDefinition": {
            "properties": {
                "customLinks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetGeomapDefinitionCustomLink:DashboardWidgetGroupDefinitionWidgetGeomapDefinitionCustomLink"
                    },
                    "description": "Newstyle:  (Block List) Nested block describing a custom link. Multiple custom_link blocks are allowed with the structure below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "liveSpan": {
                    "type": "string",
                    "description": "Newstyle:  (String) The timeframe to use when displaying the widget. One of 10m, 30m, 1h, 4h, 1d, 2d, 1w, 1mo, 3mo, 6mo, 1y, alert.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "requests": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequest:DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequest"
                    },
                    "description": "Newstyle:  (Block List) Nested block describing the request to use when displaying the widget. Multiple request blocks are allowed with the structure below (exactly one of q, apm_query, log_query, rum_query, security_query or process_query is required within the request block). (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "style": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetGeomapDefinitionStyle:DashboardWidgetGroupDefinitionWidgetGeomapDefinitionStyle",
                    "description": "Newstyle:  (Block List, Max: 1) Define request widget style. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "title": {
                    "type": "string",
                    "description": "Newstyle:  (String) The title of the widget.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleAlign": {
                    "type": "string",
                    "description": "Newstyle:  (String) The alignment of the widget's title. One of left, center, or right.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleSize": {
                    "type": "string",
                    "description": "Newstyle:  (String) The size of the widget's title. Default is 16.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "view": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetGeomapDefinitionView:DashboardWidgetGroupDefinitionWidgetGeomapDefinitionView",
                    "description": "Newstyle:  (Block List, Min: 1, Max: 1) The view of the world that the map should render. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "view"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetGeomapDefinitionCustomLink:DashboardWidgetGroupDefinitionWidgetGeomapDefinitionCustomLink": {
            "properties": {
                "label": {
                    "type": "string",
                    "description": "Newstyle:  (String) The label for the custom link URL.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "link": {
                    "type": "string",
                    "description": "Newstyle:  (String) The URL of the custom link.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "label",
                "link"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequest:DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequest": {
            "properties": {
                "formulas": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestFormula:DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestFormula"
                    },
                    "description": "Newstyle:  (Block List) (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestLogQuery:DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestLogQuery",
                    "description": "Newstyle:  (Block List, Max: 1) The query to use for this widget. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "q": {
                    "type": "string",
                    "description": "Newstyle:  (String) The metric query to use for this widget.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "queries": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestQuery:DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestQuery"
                    },
                    "description": "Newstyle:  (String) Metrics query definition.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "rumQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestRumQuery:DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestRumQuery",
                    "description": "Newstyle:  (Block List, Max: 1) The query to use for this widget. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestFormula:DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestFormula": {
            "properties": {
                "alias": {
                    "type": "string",
                    "description": "Newstyle:  (String) Expression alias.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "formulaExpression": {
                    "type": "string",
                    "description": "Newstyle:  (String) String expression built from queries, formulas and functions.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestFormulaLimit:DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestFormulaLimit",
                    "description": "Newstyle:  (Number) Maximum number of items in the group.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "formulaExpression"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestFormulaLimit:DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestFormulaLimit": {
            "properties": {
                "count": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Number of results to return\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "description": "Newstyle:  (String) Widget sorting methods.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestLogQuery:DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestLogQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestLogQueryCompute:DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestLogQueryCompute",
                    "description": "Newstyle:  (Map of String, Deprecated) One of compute or multi_compute is required. The map has the keys as below.  Define compute_query list with one element instead.\n",
                    "deprecationMessage": "Define `compute_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestLogQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestLogQueryComputeQuery",
                    "description": "Newstyle:  (Block List, Max: 1) One of compute_query or multi_compute is required. The map has the keys as below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestLogQueryGroupBy:DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestLogQueryGroupBy"
                    },
                    "description": "Newstyle:  (Block List) Multiple group_by blocks are allowed with the structure below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "description": "Newstyle:  (String) Name of the index to query.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestLogQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestLogQueryMultiCompute"
                    },
                    "description": "Newstyle:  (Block List) One of compute_query or multi_compute is required. Multiple multi_compute blocks are allowed with the structure below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestLogQuerySearch:DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestLogQuerySearch",
                    "description": "Newstyle:  (Map of String, Deprecated) Map defining the search query to use.  Define search_query directly instead.\n",
                    "deprecationMessage": "Define `search_query` directly instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchQuery": {
                    "type": "string",
                    "description": "Newstyle:  (String) The search query to use.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestLogQueryCompute:DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestLogQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Define a time interval in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestLogQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestLogQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Define a time interval in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestLogQueryGroupBy:DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestLogQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Maximum number of items in the group.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestLogQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestLogQueryGroupBySort",
                    "description": "Newstyle:  (Map of String, Deprecated) One map is allowed with the keys as below.  Define sort_query list with one element instead.\n",
                    "deprecationMessage": "Define `sort_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestLogQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestLogQueryGroupBySortQuery",
                    "description": "Newstyle:  (Block List, Max: 1) List of exactly one element describing the sort query to use. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestLogQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestLogQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "description": "Newstyle:  (String) Widget sorting methods.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestLogQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestLogQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "description": "Newstyle:  (String) Widget sorting methods.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestLogQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestLogQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Define a time interval in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestLogQuerySearch:DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestLogQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "description": "Newstyle:  (String) Metrics query definition.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestQuery:DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestQuery": {
            "properties": {
                "eventQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestQueryEventQuery:DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestQueryEventQuery",
                    "description": "Newstyle:  (Block List, Max: 1) A timeseries formula and functions events query. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "metricQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestQueryMetricQuery:DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestQueryMetricQuery",
                    "description": "Newstyle:  (Block List, Max: 1) A timeseries formula and functions metrics query. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "processQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestQueryProcessQuery:DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestQueryProcessQuery",
                    "description": "Newstyle:  (Block List, Max: 1) Process query using formulas and functions. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestQueryEventQuery:DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestQueryEventQuery": {
            "properties": {
                "computes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestQueryEventQueryCompute:DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestQueryEventQueryCompute"
                    },
                    "description": "Newstyle:  (Map of String, Deprecated) One of compute or multi_compute is required. The map has the keys as below.  Define compute_query list with one element instead.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "dataSource": {
                    "type": "string",
                    "description": "Newstyle:  (String) Data source for process queries.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestQueryEventQueryGroupBy:DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestQueryEventQueryGroupBy"
                    },
                    "description": "Newstyle:  (Block List) Multiple group_by blocks are allowed with the structure below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "indexes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Newstyle:  (List of String) An array of index names to query in the stream.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "Newstyle:  (String) The name of the template variable\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestQueryEventQuerySearch:DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestQueryEventQuerySearch",
                    "description": "Newstyle:  (Map of String, Deprecated) Map defining the search query to use.  Define search_query directly instead.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "computes",
                "dataSource",
                "name"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestQueryEventQueryCompute:DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestQueryEventQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Define a time interval in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "metric": {
                    "type": "string",
                    "description": "Newstyle:  (String) Process metric name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestQueryEventQueryGroupBy:DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestQueryEventQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Maximum number of items in the group.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestQueryEventQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestQueryEventQueryGroupBySort",
                    "description": "Newstyle:  (Map of String, Deprecated) One map is allowed with the keys as below.  Define sort_query list with one element instead.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "facet"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestQueryEventQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestQueryEventQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "metric": {
                    "type": "string",
                    "description": "Newstyle:  (String) Process metric name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "description": "Newstyle:  (String) Widget sorting methods.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestQueryEventQuerySearch:DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestQueryEventQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "description": "Newstyle:  (String) Metrics query definition.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestQueryMetricQuery:DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestQueryMetricQuery": {
            "properties": {
                "aggregator": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation methods available for metrics queries.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "dataSource": {
                    "type": "string",
                    "description": "Newstyle:  (String) Data source for process queries.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "Newstyle:  (String) The name of the template variable\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "query": {
                    "type": "string",
                    "description": "Newstyle:  (String) Metrics query definition.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "name",
                "query"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestQueryProcessQuery:DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestQueryProcessQuery": {
            "properties": {
                "aggregator": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation methods available for metrics queries.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "dataSource": {
                    "type": "string",
                    "description": "Newstyle:  (String) Data source for process queries.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "isNormalizedCpu": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Maximum number of items in the group.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "metric": {
                    "type": "string",
                    "description": "Newstyle:  (String) Process metric name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "Newstyle:  (String) The name of the template variable\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "type": "string",
                    "description": "Newstyle:  (Map of String, Deprecated) One map is allowed with the keys as below.  Define sort_query list with one element instead.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tagFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Newstyle:  (List of String) An array of tags to filter by.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "textFilter": {
                    "type": "string",
                    "description": "Newstyle:  (String) Text to use as filter.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "dataSource",
                "metric",
                "name"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestRumQuery:DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestRumQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestRumQueryCompute:DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestRumQueryCompute",
                    "description": "Newstyle:  (Map of String, Deprecated) One of compute or multi_compute is required. The map has the keys as below.  Define compute_query list with one element instead.\n",
                    "deprecationMessage": "Define `compute_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestRumQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestRumQueryComputeQuery",
                    "description": "Newstyle:  (Block List, Max: 1) One of compute_query or multi_compute is required. The map has the keys as below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestRumQueryGroupBy:DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestRumQueryGroupBy"
                    },
                    "description": "Newstyle:  (Block List) Multiple group_by blocks are allowed with the structure below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "description": "Newstyle:  (String) Name of the index to query.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestRumQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestRumQueryMultiCompute"
                    },
                    "description": "Newstyle:  (Block List) One of compute_query or multi_compute is required. Multiple multi_compute blocks are allowed with the structure below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestRumQuerySearch:DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestRumQuerySearch",
                    "description": "Newstyle:  (Map of String, Deprecated) Map defining the search query to use.  Define search_query directly instead.\n",
                    "deprecationMessage": "Define `search_query` directly instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchQuery": {
                    "type": "string",
                    "description": "Newstyle:  (String) The search query to use.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestRumQueryCompute:DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestRumQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Define a time interval in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestRumQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestRumQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Define a time interval in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestRumQueryGroupBy:DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestRumQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Maximum number of items in the group.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestRumQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestRumQueryGroupBySort",
                    "description": "Newstyle:  (Map of String, Deprecated) One map is allowed with the keys as below.  Define sort_query list with one element instead.\n",
                    "deprecationMessage": "Define `sort_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestRumQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestRumQueryGroupBySortQuery",
                    "description": "Newstyle:  (Block List, Max: 1) List of exactly one element describing the sort query to use. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestRumQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestRumQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "description": "Newstyle:  (String) Widget sorting methods.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestRumQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestRumQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "description": "Newstyle:  (String) Widget sorting methods.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestRumQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestRumQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Define a time interval in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestRumQuerySearch:DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestRumQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "description": "Newstyle:  (String) Metrics query definition.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetGeomapDefinitionStyle:DashboardWidgetGroupDefinitionWidgetGeomapDefinitionStyle": {
            "properties": {
                "palette": {
                    "type": "string",
                    "description": "Newstyle:  (String) Color palette to apply to the widget. The available options are available here: https://docs.datadoghq.com/dashboards/widgets/timeseries/#appearance.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "paletteFlip": {
                    "type": "boolean",
                    "description": "Newstyle:  (Boolean) Boolean indicating whether to flip the palette tones.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "palette",
                "paletteFlip"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetGeomapDefinitionView:DashboardWidgetGroupDefinitionWidgetGeomapDefinitionView": {
            "properties": {
                "focus": {
                    "type": "string",
                    "description": "Newstyle:  (String) The 2-letter ISO code of a country to focus the map on. Or WORLD.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "focus"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHeatmapDefinition:DashboardWidgetGroupDefinitionWidgetHeatmapDefinition": {
            "properties": {
                "customLinks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionCustomLink:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionCustomLink"
                    },
                    "description": "Newstyle:  (Block List) Nested block describing a custom link. Multiple custom_link blocks are allowed with the structure below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "events": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionEvent:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionEvent"
                    },
                    "description": "Newstyle:  (Block List) The definition of the event to overlay on the graph. Multiple event blocks are allowed with the structure below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "legendSize": {
                    "type": "string",
                    "description": "Newstyle:  (String) The size of the legend displayed in the widget.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "liveSpan": {
                    "type": "string",
                    "description": "Newstyle:  (String) The timeframe to use when displaying the widget. One of 10m, 30m, 1h, 4h, 1d, 2d, 1w, 1mo, 3mo, 6mo, 1y, alert.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "requests": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequest:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequest"
                    },
                    "description": "Newstyle:  (Block List) Nested block describing the request to use when displaying the widget. Multiple request blocks are allowed with the structure below (exactly one of q, apm_query, log_query, rum_query, security_query or process_query is required within the request block). (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "showLegend": {
                    "type": "boolean",
                    "description": "Newstyle:  (Boolean) Whether or not to show the legend on this widget.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "time": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionTime:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionTime",
                    "description": "Newstyle:  (Map of String, Deprecated) Nested block describing the timeframe to use when displaying the widget. The structure of this block is described below.  Define live_span directly in the widget definition instead.\n",
                    "deprecationMessage": "Define `live_span` directly in the widget definition instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "title": {
                    "type": "string",
                    "description": "Newstyle:  (String) The title of the widget.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleAlign": {
                    "type": "string",
                    "description": "Newstyle:  (String) The alignment of the widget's title. One of left, center, or right.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleSize": {
                    "type": "string",
                    "description": "Newstyle:  (String) The size of the widget's title. Default is 16.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "yaxis": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionYaxis:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionYaxis",
                    "description": "Newstyle:  (Block List, Max: 1) Nested block describing the Y-Axis Controls. The structure of this block is described below (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionCustomLink:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionCustomLink": {
            "properties": {
                "label": {
                    "type": "string",
                    "description": "Newstyle:  (String) The label for the custom link URL.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "link": {
                    "type": "string",
                    "description": "Newstyle:  (String) The URL of the custom link.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "label",
                "link"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionEvent:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionEvent": {
            "properties": {
                "q": {
                    "type": "string",
                    "description": "Newstyle:  (String) The metric query to use for this widget.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tagsExecution": {
                    "type": "string",
                    "description": "Newstyle:  (String) The execution method for multi-value filters.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "q"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequest:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequest": {
            "properties": {
                "apmQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestApmQuery:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestApmQuery",
                    "description": "Newstyle:  (Block List, Max: 1) The query to use for this widget. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestLogQuery:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestLogQuery",
                    "description": "Newstyle:  (Block List, Max: 1) The query to use for this widget. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "processQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestProcessQuery:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestProcessQuery",
                    "description": "Newstyle:  (Block List, Max: 1) Process query using formulas and functions. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "q": {
                    "type": "string",
                    "description": "Newstyle:  (String) The metric query to use for this widget.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "rumQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestRumQuery:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestRumQuery",
                    "description": "Newstyle:  (Block List, Max: 1) The query to use for this widget. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "securityQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestSecurityQuery:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestSecurityQuery",
                    "description": "Newstyle:  (Block List, Max: 1) The query to use for this widget. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "style": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestStyle:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestStyle",
                    "description": "Newstyle:  (Block List, Max: 1) Define request widget style. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestApmQuery:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestApmQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestApmQueryCompute:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestApmQueryCompute",
                    "description": "Newstyle:  (Map of String, Deprecated) One of compute or multi_compute is required. The map has the keys as below.  Define compute_query list with one element instead.\n",
                    "deprecationMessage": "Define `compute_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestApmQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestApmQueryComputeQuery",
                    "description": "Newstyle:  (Block List, Max: 1) One of compute_query or multi_compute is required. The map has the keys as below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestApmQueryGroupBy:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestApmQueryGroupBy"
                    },
                    "description": "Newstyle:  (Block List) Multiple group_by blocks are allowed with the structure below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "description": "Newstyle:  (String) Name of the index to query.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestApmQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestApmQueryMultiCompute"
                    },
                    "description": "Newstyle:  (Block List) One of compute_query or multi_compute is required. Multiple multi_compute blocks are allowed with the structure below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestApmQuerySearch:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestApmQuerySearch",
                    "description": "Newstyle:  (Map of String, Deprecated) Map defining the search query to use.  Define search_query directly instead.\n",
                    "deprecationMessage": "Define `search_query` directly instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchQuery": {
                    "type": "string",
                    "description": "Newstyle:  (String) The search query to use.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestApmQueryCompute:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestApmQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Define a time interval in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestApmQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestApmQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Define a time interval in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestApmQueryGroupBy:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestApmQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Maximum number of items in the group.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestApmQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestApmQueryGroupBySort",
                    "description": "Newstyle:  (Map of String, Deprecated) One map is allowed with the keys as below.  Define sort_query list with one element instead.\n",
                    "deprecationMessage": "Define `sort_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestApmQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestApmQueryGroupBySortQuery",
                    "description": "Newstyle:  (Block List, Max: 1) List of exactly one element describing the sort query to use. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestApmQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestApmQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "description": "Newstyle:  (String) Widget sorting methods.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestApmQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestApmQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "description": "Newstyle:  (String) Widget sorting methods.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestApmQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestApmQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Define a time interval in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestApmQuerySearch:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestApmQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "description": "Newstyle:  (String) Metrics query definition.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestLogQuery:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestLogQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestLogQueryCompute:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestLogQueryCompute",
                    "description": "Newstyle:  (Map of String, Deprecated) One of compute or multi_compute is required. The map has the keys as below.  Define compute_query list with one element instead.\n",
                    "deprecationMessage": "Define `compute_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestLogQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestLogQueryComputeQuery",
                    "description": "Newstyle:  (Block List, Max: 1) One of compute_query or multi_compute is required. The map has the keys as below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestLogQueryGroupBy:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestLogQueryGroupBy"
                    },
                    "description": "Newstyle:  (Block List) Multiple group_by blocks are allowed with the structure below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "description": "Newstyle:  (String) Name of the index to query.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestLogQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestLogQueryMultiCompute"
                    },
                    "description": "Newstyle:  (Block List) One of compute_query or multi_compute is required. Multiple multi_compute blocks are allowed with the structure below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestLogQuerySearch:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestLogQuerySearch",
                    "description": "Newstyle:  (Map of String, Deprecated) Map defining the search query to use.  Define search_query directly instead.\n",
                    "deprecationMessage": "Define `search_query` directly instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchQuery": {
                    "type": "string",
                    "description": "Newstyle:  (String) The search query to use.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestLogQueryCompute:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestLogQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Define a time interval in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestLogQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestLogQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Define a time interval in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestLogQueryGroupBy:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestLogQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Maximum number of items in the group.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestLogQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestLogQueryGroupBySort",
                    "description": "Newstyle:  (Map of String, Deprecated) One map is allowed with the keys as below.  Define sort_query list with one element instead.\n",
                    "deprecationMessage": "Define `sort_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestLogQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestLogQueryGroupBySortQuery",
                    "description": "Newstyle:  (Block List, Max: 1) List of exactly one element describing the sort query to use. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestLogQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestLogQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "description": "Newstyle:  (String) Widget sorting methods.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestLogQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestLogQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "description": "Newstyle:  (String) Widget sorting methods.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestLogQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestLogQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Define a time interval in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestLogQuerySearch:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestLogQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "description": "Newstyle:  (String) Metrics query definition.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestProcessQuery:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestProcessQuery": {
            "properties": {
                "filterBies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Newstyle:  (List of String) List of processes.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Maximum number of items in the group.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "metric": {
                    "type": "string",
                    "description": "Newstyle:  (String) Process metric name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchBy": {
                    "type": "string",
                    "description": "Newstyle:  (String) Your chosen search term.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "metric"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestRumQuery:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestRumQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestRumQueryCompute:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestRumQueryCompute",
                    "description": "Newstyle:  (Map of String, Deprecated) One of compute or multi_compute is required. The map has the keys as below.  Define compute_query list with one element instead.\n",
                    "deprecationMessage": "Define `compute_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestRumQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestRumQueryComputeQuery",
                    "description": "Newstyle:  (Block List, Max: 1) One of compute_query or multi_compute is required. The map has the keys as below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestRumQueryGroupBy:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestRumQueryGroupBy"
                    },
                    "description": "Newstyle:  (Block List) Multiple group_by blocks are allowed with the structure below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "description": "Newstyle:  (String) Name of the index to query.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestRumQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestRumQueryMultiCompute"
                    },
                    "description": "Newstyle:  (Block List) One of compute_query or multi_compute is required. Multiple multi_compute blocks are allowed with the structure below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestRumQuerySearch:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestRumQuerySearch",
                    "description": "Newstyle:  (Map of String, Deprecated) Map defining the search query to use.  Define search_query directly instead.\n",
                    "deprecationMessage": "Define `search_query` directly instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchQuery": {
                    "type": "string",
                    "description": "Newstyle:  (String) The search query to use.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestRumQueryCompute:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestRumQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Define a time interval in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestRumQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestRumQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Define a time interval in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestRumQueryGroupBy:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestRumQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Maximum number of items in the group.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestRumQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestRumQueryGroupBySort",
                    "description": "Newstyle:  (Map of String, Deprecated) One map is allowed with the keys as below.  Define sort_query list with one element instead.\n",
                    "deprecationMessage": "Define `sort_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestRumQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestRumQueryGroupBySortQuery",
                    "description": "Newstyle:  (Block List, Max: 1) List of exactly one element describing the sort query to use. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestRumQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestRumQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "description": "Newstyle:  (String) Widget sorting methods.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestRumQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestRumQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "description": "Newstyle:  (String) Widget sorting methods.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestRumQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestRumQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Define a time interval in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestRumQuerySearch:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestRumQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "description": "Newstyle:  (String) Metrics query definition.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestSecurityQuery:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestSecurityQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestSecurityQueryCompute:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestSecurityQueryCompute",
                    "description": "Newstyle:  (Map of String, Deprecated) One of compute or multi_compute is required. The map has the keys as below.  Define compute_query list with one element instead.\n",
                    "deprecationMessage": "Define `compute_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestSecurityQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestSecurityQueryComputeQuery",
                    "description": "Newstyle:  (Block List, Max: 1) One of compute_query or multi_compute is required. The map has the keys as below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestSecurityQueryGroupBy:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestSecurityQueryGroupBy"
                    },
                    "description": "Newstyle:  (Block List) Multiple group_by blocks are allowed with the structure below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "description": "Newstyle:  (String) Name of the index to query.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestSecurityQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestSecurityQueryMultiCompute"
                    },
                    "description": "Newstyle:  (Block List) One of compute_query or multi_compute is required. Multiple multi_compute blocks are allowed with the structure below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestSecurityQuerySearch:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestSecurityQuerySearch",
                    "description": "Newstyle:  (Map of String, Deprecated) Map defining the search query to use.  Define search_query directly instead.\n",
                    "deprecationMessage": "Define `search_query` directly instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchQuery": {
                    "type": "string",
                    "description": "Newstyle:  (String) The search query to use.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestSecurityQueryCompute:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestSecurityQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Define a time interval in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestSecurityQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestSecurityQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Define a time interval in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestSecurityQueryGroupBy:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestSecurityQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Maximum number of items in the group.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestSecurityQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestSecurityQueryGroupBySort",
                    "description": "Newstyle:  (Map of String, Deprecated) One map is allowed with the keys as below.  Define sort_query list with one element instead.\n",
                    "deprecationMessage": "Define `sort_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestSecurityQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestSecurityQueryGroupBySortQuery",
                    "description": "Newstyle:  (Block List, Max: 1) List of exactly one element describing the sort query to use. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestSecurityQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestSecurityQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "description": "Newstyle:  (String) Widget sorting methods.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestSecurityQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestSecurityQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "description": "Newstyle:  (String) Widget sorting methods.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestSecurityQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestSecurityQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Define a time interval in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestSecurityQuerySearch:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestSecurityQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "description": "Newstyle:  (String) Metrics query definition.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestStyle:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestStyle": {
            "properties": {
                "palette": {
                    "type": "string",
                    "description": "Newstyle:  (String) Color palette to apply to the widget. The available options are available here: https://docs.datadoghq.com/dashboards/widgets/timeseries/#appearance.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionTime:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionTime": {
            "properties": {
                "liveSpan": {
                    "type": "string",
                    "description": "Newstyle:  (String) The timeframe to use when displaying the widget. One of 10m, 30m, 1h, 4h, 1d, 2d, 1w, 1mo, 3mo, 6mo, 1y, alert.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionYaxis:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionYaxis": {
            "properties": {
                "includeZero": {
                    "type": "boolean",
                    "description": "Newstyle:  (Boolean) Always include zero or fit the axis to the data range.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "label": {
                    "type": "string",
                    "description": "Newstyle:  (String) The label for the custom link URL.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "max": {
                    "type": "string",
                    "description": "Newstyle:  (String) Specify the maximum value to show on the Y-axis.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "min": {
                    "type": "string",
                    "description": "Newstyle:  (String) Specify the minimum value to show on the Y-axis.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "scale": {
                    "type": "string",
                    "description": "Newstyle:  (String) Specifies the scale type. One of linear, log, pow, sqrt.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinition:DashboardWidgetGroupDefinitionWidgetHostmapDefinition": {
            "properties": {
                "customLinks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionCustomLink:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionCustomLink"
                    },
                    "description": "Newstyle:  (Block List) Nested block describing a custom link. Multiple custom_link blocks are allowed with the structure below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Newstyle:  (List of String) The list of tags to group nodes by.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "noGroupHosts": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "noMetricHosts": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "nodeType": {
                    "type": "string",
                    "description": "Newstyle:  (String) The type of node used. Either host or container.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "request": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequest:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequest",
                    "description": "Newstyle:  (Block List) Nested block describing the request to use when displaying the widget. Multiple request blocks are allowed with the structure below (exactly one of q, apm_query, log_query, rum_query, security_query or process_query is required within the request block). (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "scopes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Newstyle:  (List of String) The list of tags to filter nodes by.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "style": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionStyle:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionStyle",
                    "description": "Newstyle:  (Block List, Max: 1) Define request widget style. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "title": {
                    "type": "string",
                    "description": "Newstyle:  (String) The title of the widget.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleAlign": {
                    "type": "string",
                    "description": "Newstyle:  (String) The alignment of the widget's title. One of left, center, or right.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleSize": {
                    "type": "string",
                    "description": "Newstyle:  (String) The size of the widget's title. Default is 16.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionCustomLink:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionCustomLink": {
            "properties": {
                "label": {
                    "type": "string",
                    "description": "Newstyle:  (String) The label for the custom link URL.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "link": {
                    "type": "string",
                    "description": "Newstyle:  (String) The URL of the custom link.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "label",
                "link"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequest:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequest": {
            "properties": {
                "fills": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFill:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFill"
                    },
                    "description": "Newstyle:  (Block List) The query used to fill the map. Exactly one nested block is allowed with the structure below (exactly one of q, apm_query, log_query, rum_query, security_query or process_query is required within the request block). (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sizes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSize:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSize"
                    },
                    "description": "Newstyle:  (Block List) The query used to size the map. Exactly one nested block is allowed with the structure below (exactly one of q, apm_query, log_query, rum_query, security_query or process_query is required within the request block). (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFill:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFill": {
            "properties": {
                "apmQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillApmQuery:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillApmQuery",
                    "description": "Newstyle:  (Block List, Max: 1) The query to use for this widget. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillLogQuery:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillLogQuery",
                    "description": "Newstyle:  (Block List, Max: 1) The query to use for this widget. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "processQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillProcessQuery:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillProcessQuery",
                    "description": "Newstyle:  (Block List, Max: 1) Process query using formulas and functions. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "q": {
                    "type": "string",
                    "description": "Newstyle:  (String) The metric query to use for this widget.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "rumQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillRumQuery:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillRumQuery",
                    "description": "Newstyle:  (Block List, Max: 1) The query to use for this widget. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "securityQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillSecurityQuery:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillSecurityQuery",
                    "description": "Newstyle:  (Block List, Max: 1) The query to use for this widget. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillApmQuery:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillApmQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillApmQueryCompute:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillApmQueryCompute",
                    "description": "Newstyle:  (Map of String, Deprecated) One of compute or multi_compute is required. The map has the keys as below.  Define compute_query list with one element instead.\n",
                    "deprecationMessage": "Define `compute_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillApmQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillApmQueryComputeQuery",
                    "description": "Newstyle:  (Block List, Max: 1) One of compute_query or multi_compute is required. The map has the keys as below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillApmQueryGroupBy:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillApmQueryGroupBy"
                    },
                    "description": "Newstyle:  (Block List) Multiple group_by blocks are allowed with the structure below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "description": "Newstyle:  (String) Name of the index to query.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillApmQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillApmQueryMultiCompute"
                    },
                    "description": "Newstyle:  (Block List) One of compute_query or multi_compute is required. Multiple multi_compute blocks are allowed with the structure below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillApmQuerySearch:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillApmQuerySearch",
                    "description": "Newstyle:  (Map of String, Deprecated) Map defining the search query to use.  Define search_query directly instead.\n",
                    "deprecationMessage": "Define `search_query` directly instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchQuery": {
                    "type": "string",
                    "description": "Newstyle:  (String) The search query to use.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillApmQueryCompute:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillApmQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Define a time interval in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillApmQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillApmQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Define a time interval in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillApmQueryGroupBy:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillApmQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Maximum number of items in the group.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillApmQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillApmQueryGroupBySort",
                    "description": "Newstyle:  (Map of String, Deprecated) One map is allowed with the keys as below.  Define sort_query list with one element instead.\n",
                    "deprecationMessage": "Define `sort_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillApmQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillApmQueryGroupBySortQuery",
                    "description": "Newstyle:  (Block List, Max: 1) List of exactly one element describing the sort query to use. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillApmQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillApmQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "description": "Newstyle:  (String) Widget sorting methods.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillApmQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillApmQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "description": "Newstyle:  (String) Widget sorting methods.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillApmQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillApmQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Define a time interval in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillApmQuerySearch:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillApmQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "description": "Newstyle:  (String) Metrics query definition.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillLogQuery:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillLogQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillLogQueryCompute:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillLogQueryCompute",
                    "description": "Newstyle:  (Map of String, Deprecated) One of compute or multi_compute is required. The map has the keys as below.  Define compute_query list with one element instead.\n",
                    "deprecationMessage": "Define `compute_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillLogQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillLogQueryComputeQuery",
                    "description": "Newstyle:  (Block List, Max: 1) One of compute_query or multi_compute is required. The map has the keys as below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillLogQueryGroupBy:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillLogQueryGroupBy"
                    },
                    "description": "Newstyle:  (Block List) Multiple group_by blocks are allowed with the structure below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "description": "Newstyle:  (String) Name of the index to query.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillLogQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillLogQueryMultiCompute"
                    },
                    "description": "Newstyle:  (Block List) One of compute_query or multi_compute is required. Multiple multi_compute blocks are allowed with the structure below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillLogQuerySearch:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillLogQuerySearch",
                    "description": "Newstyle:  (Map of String, Deprecated) Map defining the search query to use.  Define search_query directly instead.\n",
                    "deprecationMessage": "Define `search_query` directly instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchQuery": {
                    "type": "string",
                    "description": "Newstyle:  (String) The search query to use.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillLogQueryCompute:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillLogQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Define a time interval in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillLogQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillLogQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Define a time interval in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillLogQueryGroupBy:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillLogQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Maximum number of items in the group.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillLogQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillLogQueryGroupBySort",
                    "description": "Newstyle:  (Map of String, Deprecated) One map is allowed with the keys as below.  Define sort_query list with one element instead.\n",
                    "deprecationMessage": "Define `sort_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillLogQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillLogQueryGroupBySortQuery",
                    "description": "Newstyle:  (Block List, Max: 1) List of exactly one element describing the sort query to use. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillLogQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillLogQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "description": "Newstyle:  (String) Widget sorting methods.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillLogQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillLogQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "description": "Newstyle:  (String) Widget sorting methods.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillLogQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillLogQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Define a time interval in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillLogQuerySearch:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillLogQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "description": "Newstyle:  (String) Metrics query definition.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillProcessQuery:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillProcessQuery": {
            "properties": {
                "filterBies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Newstyle:  (List of String) List of processes.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Maximum number of items in the group.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "metric": {
                    "type": "string",
                    "description": "Newstyle:  (String) Process metric name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchBy": {
                    "type": "string",
                    "description": "Newstyle:  (String) Your chosen search term.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "metric"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillRumQuery:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillRumQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillRumQueryCompute:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillRumQueryCompute",
                    "description": "Newstyle:  (Map of String, Deprecated) One of compute or multi_compute is required. The map has the keys as below.  Define compute_query list with one element instead.\n",
                    "deprecationMessage": "Define `compute_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillRumQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillRumQueryComputeQuery",
                    "description": "Newstyle:  (Block List, Max: 1) One of compute_query or multi_compute is required. The map has the keys as below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillRumQueryGroupBy:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillRumQueryGroupBy"
                    },
                    "description": "Newstyle:  (Block List) Multiple group_by blocks are allowed with the structure below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "description": "Newstyle:  (String) Name of the index to query.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillRumQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillRumQueryMultiCompute"
                    },
                    "description": "Newstyle:  (Block List) One of compute_query or multi_compute is required. Multiple multi_compute blocks are allowed with the structure below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillRumQuerySearch:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillRumQuerySearch",
                    "description": "Newstyle:  (Map of String, Deprecated) Map defining the search query to use.  Define search_query directly instead.\n",
                    "deprecationMessage": "Define `search_query` directly instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchQuery": {
                    "type": "string",
                    "description": "Newstyle:  (String) The search query to use.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillRumQueryCompute:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillRumQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Define a time interval in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillRumQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillRumQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Define a time interval in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillRumQueryGroupBy:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillRumQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Maximum number of items in the group.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillRumQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillRumQueryGroupBySort",
                    "description": "Newstyle:  (Map of String, Deprecated) One map is allowed with the keys as below.  Define sort_query list with one element instead.\n",
                    "deprecationMessage": "Define `sort_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillRumQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillRumQueryGroupBySortQuery",
                    "description": "Newstyle:  (Block List, Max: 1) List of exactly one element describing the sort query to use. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillRumQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillRumQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "description": "Newstyle:  (String) Widget sorting methods.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillRumQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillRumQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "description": "Newstyle:  (String) Widget sorting methods.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillRumQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillRumQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Define a time interval in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillRumQuerySearch:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillRumQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "description": "Newstyle:  (String) Metrics query definition.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillSecurityQuery:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillSecurityQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillSecurityQueryCompute:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillSecurityQueryCompute",
                    "description": "Newstyle:  (Map of String, Deprecated) One of compute or multi_compute is required. The map has the keys as below.  Define compute_query list with one element instead.\n",
                    "deprecationMessage": "Define `compute_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillSecurityQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillSecurityQueryComputeQuery",
                    "description": "Newstyle:  (Block List, Max: 1) One of compute_query or multi_compute is required. The map has the keys as below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillSecurityQueryGroupBy:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillSecurityQueryGroupBy"
                    },
                    "description": "Newstyle:  (Block List) Multiple group_by blocks are allowed with the structure below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "description": "Newstyle:  (String) Name of the index to query.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillSecurityQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillSecurityQueryMultiCompute"
                    },
                    "description": "Newstyle:  (Block List) One of compute_query or multi_compute is required. Multiple multi_compute blocks are allowed with the structure below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillSecurityQuerySearch:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillSecurityQuerySearch",
                    "description": "Newstyle:  (Map of String, Deprecated) Map defining the search query to use.  Define search_query directly instead.\n",
                    "deprecationMessage": "Define `search_query` directly instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchQuery": {
                    "type": "string",
                    "description": "Newstyle:  (String) The search query to use.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillSecurityQueryCompute:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillSecurityQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Define a time interval in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillSecurityQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillSecurityQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Define a time interval in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillSecurityQueryGroupBy:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillSecurityQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Maximum number of items in the group.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillSecurityQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillSecurityQueryGroupBySort",
                    "description": "Newstyle:  (Map of String, Deprecated) One map is allowed with the keys as below.  Define sort_query list with one element instead.\n",
                    "deprecationMessage": "Define `sort_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillSecurityQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillSecurityQueryGroupBySortQuery",
                    "description": "Newstyle:  (Block List, Max: 1) List of exactly one element describing the sort query to use. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillSecurityQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillSecurityQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "description": "Newstyle:  (String) Widget sorting methods.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillSecurityQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillSecurityQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "description": "Newstyle:  (String) Widget sorting methods.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillSecurityQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillSecurityQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Define a time interval in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillSecurityQuerySearch:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillSecurityQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "description": "Newstyle:  (String) Metrics query definition.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSize:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSize": {
            "properties": {
                "apmQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeApmQuery:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeApmQuery",
                    "description": "Newstyle:  (Block List, Max: 1) The query to use for this widget. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeLogQuery:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeLogQuery",
                    "description": "Newstyle:  (Block List, Max: 1) The query to use for this widget. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "processQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeProcessQuery:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeProcessQuery",
                    "description": "Newstyle:  (Block List, Max: 1) Process query using formulas and functions. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "q": {
                    "type": "string",
                    "description": "Newstyle:  (String) The metric query to use for this widget.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "rumQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeRumQuery:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeRumQuery",
                    "description": "Newstyle:  (Block List, Max: 1) The query to use for this widget. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "securityQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeSecurityQuery:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeSecurityQuery",
                    "description": "Newstyle:  (Block List, Max: 1) The query to use for this widget. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeApmQuery:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeApmQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeApmQueryCompute:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeApmQueryCompute",
                    "description": "Newstyle:  (Map of String, Deprecated) One of compute or multi_compute is required. The map has the keys as below.  Define compute_query list with one element instead.\n",
                    "deprecationMessage": "Define `compute_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeApmQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeApmQueryComputeQuery",
                    "description": "Newstyle:  (Block List, Max: 1) One of compute_query or multi_compute is required. The map has the keys as below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeApmQueryGroupBy:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeApmQueryGroupBy"
                    },
                    "description": "Newstyle:  (Block List) Multiple group_by blocks are allowed with the structure below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "description": "Newstyle:  (String) Name of the index to query.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeApmQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeApmQueryMultiCompute"
                    },
                    "description": "Newstyle:  (Block List) One of compute_query or multi_compute is required. Multiple multi_compute blocks are allowed with the structure below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeApmQuerySearch:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeApmQuerySearch",
                    "description": "Newstyle:  (Map of String, Deprecated) Map defining the search query to use.  Define search_query directly instead.\n",
                    "deprecationMessage": "Define `search_query` directly instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchQuery": {
                    "type": "string",
                    "description": "Newstyle:  (String) The search query to use.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeApmQueryCompute:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeApmQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Define a time interval in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeApmQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeApmQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Define a time interval in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeApmQueryGroupBy:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeApmQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Maximum number of items in the group.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeApmQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeApmQueryGroupBySort",
                    "description": "Newstyle:  (Map of String, Deprecated) One map is allowed with the keys as below.  Define sort_query list with one element instead.\n",
                    "deprecationMessage": "Define `sort_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeApmQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeApmQueryGroupBySortQuery",
                    "description": "Newstyle:  (Block List, Max: 1) List of exactly one element describing the sort query to use. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeApmQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeApmQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "description": "Newstyle:  (String) Widget sorting methods.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeApmQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeApmQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "description": "Newstyle:  (String) Widget sorting methods.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeApmQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeApmQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Define a time interval in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeApmQuerySearch:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeApmQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "description": "Newstyle:  (String) Metrics query definition.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeLogQuery:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeLogQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeLogQueryCompute:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeLogQueryCompute",
                    "description": "Newstyle:  (Map of String, Deprecated) One of compute or multi_compute is required. The map has the keys as below.  Define compute_query list with one element instead.\n",
                    "deprecationMessage": "Define `compute_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeLogQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeLogQueryComputeQuery",
                    "description": "Newstyle:  (Block List, Max: 1) One of compute_query or multi_compute is required. The map has the keys as below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeLogQueryGroupBy:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeLogQueryGroupBy"
                    },
                    "description": "Newstyle:  (Block List) Multiple group_by blocks are allowed with the structure below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "description": "Newstyle:  (String) Name of the index to query.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeLogQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeLogQueryMultiCompute"
                    },
                    "description": "Newstyle:  (Block List) One of compute_query or multi_compute is required. Multiple multi_compute blocks are allowed with the structure below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeLogQuerySearch:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeLogQuerySearch",
                    "description": "Newstyle:  (Map of String, Deprecated) Map defining the search query to use.  Define search_query directly instead.\n",
                    "deprecationMessage": "Define `search_query` directly instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchQuery": {
                    "type": "string",
                    "description": "Newstyle:  (String) The search query to use.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeLogQueryCompute:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeLogQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Define a time interval in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeLogQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeLogQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Define a time interval in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeLogQueryGroupBy:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeLogQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Maximum number of items in the group.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeLogQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeLogQueryGroupBySort",
                    "description": "Newstyle:  (Map of String, Deprecated) One map is allowed with the keys as below.  Define sort_query list with one element instead.\n",
                    "deprecationMessage": "Define `sort_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeLogQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeLogQueryGroupBySortQuery",
                    "description": "Newstyle:  (Block List, Max: 1) List of exactly one element describing the sort query to use. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeLogQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeLogQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "description": "Newstyle:  (String) Widget sorting methods.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeLogQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeLogQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "description": "Newstyle:  (String) Widget sorting methods.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeLogQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeLogQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Define a time interval in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeLogQuerySearch:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeLogQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "description": "Newstyle:  (String) Metrics query definition.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeProcessQuery:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeProcessQuery": {
            "properties": {
                "filterBies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Newstyle:  (List of String) List of processes.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Maximum number of items in the group.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "metric": {
                    "type": "string",
                    "description": "Newstyle:  (String) Process metric name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchBy": {
                    "type": "string",
                    "description": "Newstyle:  (String) Your chosen search term.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "metric"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeRumQuery:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeRumQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeRumQueryCompute:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeRumQueryCompute",
                    "description": "Newstyle:  (Map of String, Deprecated) One of compute or multi_compute is required. The map has the keys as below.  Define compute_query list with one element instead.\n",
                    "deprecationMessage": "Define `compute_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeRumQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeRumQueryComputeQuery",
                    "description": "Newstyle:  (Block List, Max: 1) One of compute_query or multi_compute is required. The map has the keys as below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeRumQueryGroupBy:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeRumQueryGroupBy"
                    },
                    "description": "Newstyle:  (Block List) Multiple group_by blocks are allowed with the structure below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "description": "Newstyle:  (String) Name of the index to query.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeRumQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeRumQueryMultiCompute"
                    },
                    "description": "Newstyle:  (Block List) One of compute_query or multi_compute is required. Multiple multi_compute blocks are allowed with the structure below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeRumQuerySearch:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeRumQuerySearch",
                    "description": "Newstyle:  (Map of String, Deprecated) Map defining the search query to use.  Define search_query directly instead.\n",
                    "deprecationMessage": "Define `search_query` directly instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchQuery": {
                    "type": "string",
                    "description": "Newstyle:  (String) The search query to use.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeRumQueryCompute:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeRumQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Define a time interval in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeRumQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeRumQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Define a time interval in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeRumQueryGroupBy:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeRumQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Maximum number of items in the group.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeRumQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeRumQueryGroupBySort",
                    "description": "Newstyle:  (Map of String, Deprecated) One map is allowed with the keys as below.  Define sort_query list with one element instead.\n",
                    "deprecationMessage": "Define `sort_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeRumQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeRumQueryGroupBySortQuery",
                    "description": "Newstyle:  (Block List, Max: 1) List of exactly one element describing the sort query to use. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeRumQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeRumQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "description": "Newstyle:  (String) Widget sorting methods.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeRumQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeRumQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "description": "Newstyle:  (String) Widget sorting methods.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeRumQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeRumQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Define a time interval in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeRumQuerySearch:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeRumQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "description": "Newstyle:  (String) Metrics query definition.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeSecurityQuery:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeSecurityQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeSecurityQueryCompute:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeSecurityQueryCompute",
                    "description": "Newstyle:  (Map of String, Deprecated) One of compute or multi_compute is required. The map has the keys as below.  Define compute_query list with one element instead.\n",
                    "deprecationMessage": "Define `compute_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeSecurityQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeSecurityQueryComputeQuery",
                    "description": "Newstyle:  (Block List, Max: 1) One of compute_query or multi_compute is required. The map has the keys as below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeSecurityQueryGroupBy:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeSecurityQueryGroupBy"
                    },
                    "description": "Newstyle:  (Block List) Multiple group_by blocks are allowed with the structure below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "description": "Newstyle:  (String) Name of the index to query.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeSecurityQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeSecurityQueryMultiCompute"
                    },
                    "description": "Newstyle:  (Block List) One of compute_query or multi_compute is required. Multiple multi_compute blocks are allowed with the structure below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeSecurityQuerySearch:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeSecurityQuerySearch",
                    "description": "Newstyle:  (Map of String, Deprecated) Map defining the search query to use.  Define search_query directly instead.\n",
                    "deprecationMessage": "Define `search_query` directly instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchQuery": {
                    "type": "string",
                    "description": "Newstyle:  (String) The search query to use.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeSecurityQueryCompute:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeSecurityQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Define a time interval in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeSecurityQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeSecurityQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Define a time interval in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeSecurityQueryGroupBy:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeSecurityQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Maximum number of items in the group.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeSecurityQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeSecurityQueryGroupBySort",
                    "description": "Newstyle:  (Map of String, Deprecated) One map is allowed with the keys as below.  Define sort_query list with one element instead.\n",
                    "deprecationMessage": "Define `sort_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeSecurityQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeSecurityQueryGroupBySortQuery",
                    "description": "Newstyle:  (Block List, Max: 1) List of exactly one element describing the sort query to use. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeSecurityQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeSecurityQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "description": "Newstyle:  (String) Widget sorting methods.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeSecurityQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeSecurityQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "description": "Newstyle:  (String) Widget sorting methods.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeSecurityQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeSecurityQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Define a time interval in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeSecurityQuerySearch:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeSecurityQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "description": "Newstyle:  (String) Metrics query definition.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionStyle:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionStyle": {
            "properties": {
                "fillMax": {
                    "type": "string",
                    "description": "Newstyle:  (String) Max value to use to color the map.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "fillMin": {
                    "type": "string",
                    "description": "Newstyle:  (String) Min value to use to color the map.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "palette": {
                    "type": "string",
                    "description": "Newstyle:  (String) Color palette to apply to the widget. The available options are available here: https://docs.datadoghq.com/dashboards/widgets/timeseries/#appearance.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "paletteFlip": {
                    "type": "boolean",
                    "description": "Newstyle:  (Boolean) Boolean indicating whether to flip the palette tones.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetIframeDefinition:DashboardWidgetGroupDefinitionWidgetIframeDefinition": {
            "properties": {
                "url": {
                    "type": "string",
                    "description": "Newstyle:  (String) The URL to use as a data source for the widget.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "url"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetImageDefinition:DashboardWidgetGroupDefinitionWidgetImageDefinition": {
            "properties": {
                "margin": {
                    "type": "string",
                    "description": "Newstyle:  (String) The margins to use around the image. Either small or large.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sizing": {
                    "type": "string",
                    "description": "Newstyle:  (String) The preferred method to adapt the dimensions of the image to those of the widget. One of center (center the image in the tile), zoom (zoom the image to cover the whole tile) or fit (fit the image dimensions to those of the tile).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "url": {
                    "type": "string",
                    "description": "Newstyle:  (String) The URL to use as a data source for the widget.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "url"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetLayout:DashboardWidgetGroupDefinitionWidgetLayout": {
            "properties": {
                "height": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) The height of the widget.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "width": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) The width of the widget.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "x": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) The position of the widget on the x (horizontal) axis. Should be greater or equal to 0.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "y": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) The position of the widget on the y (vertical) axis. Should be greater or equal to 0.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "height",
                "width",
                "x",
                "y"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetLogStreamDefinition:DashboardWidgetGroupDefinitionWidgetLogStreamDefinition": {
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Newstyle:  (Block List) Column properties used by the front end for display. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "indexes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Newstyle:  (List of String) An array of index names to query in the stream.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "liveSpan": {
                    "type": "string",
                    "description": "Newstyle:  (String) The timeframe to use when displaying the widget. One of 10m, 30m, 1h, 4h, 1d, 2d, 1w, 1mo, 3mo, 6mo, 1y, alert.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logset": {
                    "type": "string",
                    "description": "Newstyle:  (String, Deprecated) ID of the logset to use. Deprecated Use indexes instead.  This parameter has been deprecated. Use indexes instead.\n",
                    "deprecationMessage": "This parameter has been deprecated. Use `indexes` instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "messageDisplay": {
                    "type": "string",
                    "description": "Newstyle:  (String) One of: ['inline', 'expanded-md', 'expanded-lg']\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "query": {
                    "type": "string",
                    "description": "Newstyle:  (String) Metrics query definition.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "showDateColumn": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "showMessageColumn": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetLogStreamDefinitionSort:DashboardWidgetGroupDefinitionWidgetLogStreamDefinitionSort",
                    "description": "Newstyle:  (Map of String, Deprecated) One map is allowed with the keys as below.  Define sort_query list with one element instead.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "time": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetLogStreamDefinitionTime:DashboardWidgetGroupDefinitionWidgetLogStreamDefinitionTime",
                    "description": "Newstyle:  (Map of String, Deprecated) Nested block describing the timeframe to use when displaying the widget. The structure of this block is described below.  Define live_span directly in the widget definition instead.\n",
                    "deprecationMessage": "Define `live_span` directly in the widget definition instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "title": {
                    "type": "string",
                    "description": "Newstyle:  (String) The title of the widget.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleAlign": {
                    "type": "string",
                    "description": "Newstyle:  (String) The alignment of the widget's title. One of left, center, or right.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleSize": {
                    "type": "string",
                    "description": "Newstyle:  (String) The size of the widget's title. Default is 16.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetLogStreamDefinitionSort:DashboardWidgetGroupDefinitionWidgetLogStreamDefinitionSort": {
            "properties": {
                "column": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet path for the column\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "description": "Newstyle:  (String) Widget sorting methods.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "column",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetLogStreamDefinitionTime:DashboardWidgetGroupDefinitionWidgetLogStreamDefinitionTime": {
            "properties": {
                "liveSpan": {
                    "type": "string",
                    "description": "Newstyle:  (String) The timeframe to use when displaying the widget. One of 10m, 30m, 1h, 4h, 1d, 2d, 1w, 1mo, 3mo, 6mo, 1y, alert.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetManageStatusDefinition:DashboardWidgetGroupDefinitionWidgetManageStatusDefinition": {
            "properties": {
                "colorPreference": {
                    "type": "string",
                    "description": "Newstyle:  (String) Whether to colorize text or background. One of text, background.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "count": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Number of results to return\n",
                    "deprecationMessage": "This parameter has been deprecated.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "displayFormat": {
                    "type": "string",
                    "description": "Newstyle:  (String) Number of columns to display. Available values are: one_column, two_column, or three_column.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "hideZeroCounts": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "query": {
                    "type": "string",
                    "description": "Newstyle:  (String) Metrics query definition.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "showLastTriggered": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "type": "string",
                    "description": "Newstyle:  (Map of String, Deprecated) One map is allowed with the keys as below.  Define sort_query list with one element instead.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "start": {
                    "type": "integer",
                    "description": "Newstyle:  (Number, Deprecated) The start of the list. Typically 0.  This parameter has been deprecated.\n",
                    "deprecationMessage": "This parameter has been deprecated.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "summaryType": {
                    "type": "string",
                    "description": "Newstyle:  (String) One of: ['monitors', 'groups', 'combined']\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "title": {
                    "type": "string",
                    "description": "Newstyle:  (String) The title of the widget.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleAlign": {
                    "type": "string",
                    "description": "Newstyle:  (String) The alignment of the widget's title. One of left, center, or right.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleSize": {
                    "type": "string",
                    "description": "Newstyle:  (String) The size of the widget's title. Default is 16.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetNoteDefinition:DashboardWidgetGroupDefinitionWidgetNoteDefinition": {
            "properties": {
                "backgroundColor": {
                    "type": "string",
                    "description": "Newstyle:  (String) Background color of the note.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "content": {
                    "type": "string",
                    "description": "Newstyle:  (String) Content of the note.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "fontSize": {
                    "type": "string",
                    "description": "Newstyle:  (String) Size of the text.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "showTick": {
                    "type": "boolean",
                    "description": "Newstyle:  (Boolean) Whether to show a tick or not.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "textAlign": {
                    "type": "string",
                    "description": "Newstyle:  (String) The alignment of the widget's text. One of left, center, or right.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tickEdge": {
                    "type": "string",
                    "description": "Newstyle:  (String) When tick = true, string indicating on which side of the widget the tick should be displayed. One of bottom, top, left, right.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tickPos": {
                    "type": "string",
                    "description": "Newstyle:  (String) When tick = true, string with a percent sign indicating the position of the tick. Example: use tick_pos = \"50%\" for centered alignment.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "content"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetQueryTableDefinition:DashboardWidgetGroupDefinitionWidgetQueryTableDefinition": {
            "properties": {
                "customLinks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionCustomLink:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionCustomLink"
                    },
                    "description": "Newstyle:  (Block List) Nested block describing a custom link. Multiple custom_link blocks are allowed with the structure below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "hasSearchBar": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "liveSpan": {
                    "type": "string",
                    "description": "Newstyle:  (String) The timeframe to use when displaying the widget. One of 10m, 30m, 1h, 4h, 1d, 2d, 1w, 1mo, 3mo, 6mo, 1y, alert.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "requests": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequest:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequest"
                    },
                    "description": "Newstyle:  (Block List) Nested block describing the request to use when displaying the widget. Multiple request blocks are allowed with the structure below (exactly one of q, apm_query, log_query, rum_query, security_query or process_query is required within the request block). (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "time": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionTime:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionTime",
                    "description": "Newstyle:  (Map of String, Deprecated) Nested block describing the timeframe to use when displaying the widget. The structure of this block is described below.  Define live_span directly in the widget definition instead.\n",
                    "deprecationMessage": "Define `live_span` directly in the widget definition instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "title": {
                    "type": "string",
                    "description": "Newstyle:  (String) The title of the widget.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleAlign": {
                    "type": "string",
                    "description": "Newstyle:  (String) The alignment of the widget's title. One of left, center, or right.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleSize": {
                    "type": "string",
                    "description": "Newstyle:  (String) The size of the widget's title. Default is 16.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionCustomLink:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionCustomLink": {
            "properties": {
                "label": {
                    "type": "string",
                    "description": "Newstyle:  (String) The label for the custom link URL.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "link": {
                    "type": "string",
                    "description": "Newstyle:  (String) The URL of the custom link.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "label",
                "link"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequest:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequest": {
            "properties": {
                "aggregator": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation methods available for metrics queries.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "alias": {
                    "type": "string",
                    "description": "Newstyle:  (String) Expression alias.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "apmQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestApmQuery:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestApmQuery",
                    "description": "Newstyle:  (Block List, Max: 1) The query to use for this widget. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "apmStatsQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestApmStatsQuery:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestApmStatsQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "cellDisplayModes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "conditionalFormats": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestConditionalFormat:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestConditionalFormat"
                    },
                    "description": "Newstyle:  (Block List) Conditional formats allow you to set the color of your widget content or background, depending on a rule applied to your data. Multiple conditional_formats blocks are allowed with the structure below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Maximum number of items in the group.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestLogQuery:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestLogQuery",
                    "description": "Newstyle:  (Block List, Max: 1) The query to use for this widget. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "description": "Newstyle:  (String) Widget sorting methods.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "processQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestProcessQuery:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestProcessQuery",
                    "description": "Newstyle:  (Block List, Max: 1) Process query using formulas and functions. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "q": {
                    "type": "string",
                    "description": "Newstyle:  (String) The metric query to use for this widget.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "rumQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestRumQuery:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestRumQuery",
                    "description": "Newstyle:  (Block List, Max: 1) The query to use for this widget. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "securityQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestSecurityQuery:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestSecurityQuery",
                    "description": "Newstyle:  (Block List, Max: 1) The query to use for this widget. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestApmQuery:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestApmQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestApmQueryCompute:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestApmQueryCompute",
                    "description": "Newstyle:  (Map of String, Deprecated) One of compute or multi_compute is required. The map has the keys as below.  Define compute_query list with one element instead.\n",
                    "deprecationMessage": "Define `compute_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestApmQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestApmQueryComputeQuery",
                    "description": "Newstyle:  (Block List, Max: 1) One of compute_query or multi_compute is required. The map has the keys as below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestApmQueryGroupBy:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestApmQueryGroupBy"
                    },
                    "description": "Newstyle:  (Block List) Multiple group_by blocks are allowed with the structure below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "description": "Newstyle:  (String) Name of the index to query.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestApmQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestApmQueryMultiCompute"
                    },
                    "description": "Newstyle:  (Block List) One of compute_query or multi_compute is required. Multiple multi_compute blocks are allowed with the structure below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestApmQuerySearch:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestApmQuerySearch",
                    "description": "Newstyle:  (Map of String, Deprecated) Map defining the search query to use.  Define search_query directly instead.\n",
                    "deprecationMessage": "Define `search_query` directly instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchQuery": {
                    "type": "string",
                    "description": "Newstyle:  (String) The search query to use.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestApmQueryCompute:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestApmQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Define a time interval in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestApmQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestApmQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Define a time interval in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestApmQueryGroupBy:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestApmQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Maximum number of items in the group.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestApmQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestApmQueryGroupBySort",
                    "description": "Newstyle:  (Map of String, Deprecated) One map is allowed with the keys as below.  Define sort_query list with one element instead.\n",
                    "deprecationMessage": "Define `sort_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestApmQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestApmQueryGroupBySortQuery",
                    "description": "Newstyle:  (Block List, Max: 1) List of exactly one element describing the sort query to use. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestApmQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestApmQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "description": "Newstyle:  (String) Widget sorting methods.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestApmQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestApmQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "description": "Newstyle:  (String) Widget sorting methods.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestApmQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestApmQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Define a time interval in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestApmQuerySearch:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestApmQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "description": "Newstyle:  (String) Metrics query definition.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestApmStatsQuery:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestApmStatsQuery": {
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestApmStatsQueryColumn:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestApmStatsQueryColumn"
                    },
                    "description": "Newstyle:  (Block List) Column properties used by the front end for display. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "env": {
                    "type": "string",
                    "description": "Newstyle:  (String) APM environment.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "Newstyle:  (String) The name of the template variable\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "primaryTag": {
                    "type": "string",
                    "description": "Newstyle:  (String) The organization's host group name and value.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "resource": {
                    "type": "string",
                    "description": "Newstyle:  (String) Resource name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "rowType": {
                    "type": "string",
                    "description": "Newstyle:  (String) The level of detail for the request.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "service": {
                    "type": "string",
                    "description": "Newstyle:  (String) APM service.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "env",
                "name",
                "primaryTag",
                "rowType",
                "service"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestApmStatsQueryColumn:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestApmStatsQueryColumn": {
            "properties": {
                "alias": {
                    "type": "string",
                    "description": "Newstyle:  (String) Expression alias.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "cellDisplayMode": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "Newstyle:  (String) The name of the template variable\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "description": "Newstyle:  (String) Widget sorting methods.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "name"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestConditionalFormat:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestConditionalFormat": {
            "properties": {
                "comparator": {
                    "type": "string",
                    "description": "Newstyle:  (String) Comparator to use. One of \u003e, \u003e=, \u003c, or \u003c=.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "customBgColor": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "customFgColor": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "hideValue": {
                    "type": "boolean",
                    "description": "Newstyle:  (Boolean) Setting this to True hides values.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "imageUrl": {
                    "type": "string",
                    "description": "Newstyle:  (String) Displays an image as the background.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "metric": {
                    "type": "string",
                    "description": "Newstyle:  (String) Process metric name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "palette": {
                    "type": "string",
                    "description": "Newstyle:  (String) Color palette to apply to the widget. The available options are available here: https://docs.datadoghq.com/dashboards/widgets/timeseries/#appearance.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "timeframe": {
                    "type": "string",
                    "description": "Newstyle:  (String) Defines the displayed timeframe.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "number",
                    "description": "Newstyle:  (String) The value that should be assumed by the template variable in this preset\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "comparator",
                "palette",
                "value"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestLogQuery:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestLogQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestLogQueryCompute:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestLogQueryCompute",
                    "description": "Newstyle:  (Map of String, Deprecated) One of compute or multi_compute is required. The map has the keys as below.  Define compute_query list with one element instead.\n",
                    "deprecationMessage": "Define `compute_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestLogQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestLogQueryComputeQuery",
                    "description": "Newstyle:  (Block List, Max: 1) One of compute_query or multi_compute is required. The map has the keys as below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestLogQueryGroupBy:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestLogQueryGroupBy"
                    },
                    "description": "Newstyle:  (Block List) Multiple group_by blocks are allowed with the structure below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "description": "Newstyle:  (String) Name of the index to query.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestLogQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestLogQueryMultiCompute"
                    },
                    "description": "Newstyle:  (Block List) One of compute_query or multi_compute is required. Multiple multi_compute blocks are allowed with the structure below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestLogQuerySearch:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestLogQuerySearch",
                    "description": "Newstyle:  (Map of String, Deprecated) Map defining the search query to use.  Define search_query directly instead.\n",
                    "deprecationMessage": "Define `search_query` directly instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchQuery": {
                    "type": "string",
                    "description": "Newstyle:  (String) The search query to use.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestLogQueryCompute:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestLogQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Define a time interval in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestLogQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestLogQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Define a time interval in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestLogQueryGroupBy:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestLogQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Maximum number of items in the group.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestLogQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestLogQueryGroupBySort",
                    "description": "Newstyle:  (Map of String, Deprecated) One map is allowed with the keys as below.  Define sort_query list with one element instead.\n",
                    "deprecationMessage": "Define `sort_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestLogQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestLogQueryGroupBySortQuery",
                    "description": "Newstyle:  (Block List, Max: 1) List of exactly one element describing the sort query to use. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestLogQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestLogQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "description": "Newstyle:  (String) Widget sorting methods.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestLogQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestLogQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "description": "Newstyle:  (String) Widget sorting methods.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestLogQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestLogQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Define a time interval in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestLogQuerySearch:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestLogQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "description": "Newstyle:  (String) Metrics query definition.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestProcessQuery:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestProcessQuery": {
            "properties": {
                "filterBies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Newstyle:  (List of String) List of processes.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Maximum number of items in the group.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "metric": {
                    "type": "string",
                    "description": "Newstyle:  (String) Process metric name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchBy": {
                    "type": "string",
                    "description": "Newstyle:  (String) Your chosen search term.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "metric"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestRumQuery:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestRumQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestRumQueryCompute:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestRumQueryCompute",
                    "description": "Newstyle:  (Map of String, Deprecated) One of compute or multi_compute is required. The map has the keys as below.  Define compute_query list with one element instead.\n",
                    "deprecationMessage": "Define `compute_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestRumQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestRumQueryComputeQuery",
                    "description": "Newstyle:  (Block List, Max: 1) One of compute_query or multi_compute is required. The map has the keys as below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestRumQueryGroupBy:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestRumQueryGroupBy"
                    },
                    "description": "Newstyle:  (Block List) Multiple group_by blocks are allowed with the structure below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "description": "Newstyle:  (String) Name of the index to query.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestRumQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestRumQueryMultiCompute"
                    },
                    "description": "Newstyle:  (Block List) One of compute_query or multi_compute is required. Multiple multi_compute blocks are allowed with the structure below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestRumQuerySearch:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestRumQuerySearch",
                    "description": "Newstyle:  (Map of String, Deprecated) Map defining the search query to use.  Define search_query directly instead.\n",
                    "deprecationMessage": "Define `search_query` directly instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchQuery": {
                    "type": "string",
                    "description": "Newstyle:  (String) The search query to use.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestRumQueryCompute:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestRumQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Define a time interval in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestRumQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestRumQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Define a time interval in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestRumQueryGroupBy:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestRumQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Maximum number of items in the group.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestRumQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestRumQueryGroupBySort",
                    "description": "Newstyle:  (Map of String, Deprecated) One map is allowed with the keys as below.  Define sort_query list with one element instead.\n",
                    "deprecationMessage": "Define `sort_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestRumQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestRumQueryGroupBySortQuery",
                    "description": "Newstyle:  (Block List, Max: 1) List of exactly one element describing the sort query to use. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestRumQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestRumQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "description": "Newstyle:  (String) Widget sorting methods.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestRumQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestRumQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "description": "Newstyle:  (String) Widget sorting methods.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestRumQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestRumQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Define a time interval in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestRumQuerySearch:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestRumQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "description": "Newstyle:  (String) Metrics query definition.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestSecurityQuery:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestSecurityQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestSecurityQueryCompute:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestSecurityQueryCompute",
                    "description": "Newstyle:  (Map of String, Deprecated) One of compute or multi_compute is required. The map has the keys as below.  Define compute_query list with one element instead.\n",
                    "deprecationMessage": "Define `compute_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestSecurityQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestSecurityQueryComputeQuery",
                    "description": "Newstyle:  (Block List, Max: 1) One of compute_query or multi_compute is required. The map has the keys as below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestSecurityQueryGroupBy:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestSecurityQueryGroupBy"
                    },
                    "description": "Newstyle:  (Block List) Multiple group_by blocks are allowed with the structure below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "description": "Newstyle:  (String) Name of the index to query.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestSecurityQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestSecurityQueryMultiCompute"
                    },
                    "description": "Newstyle:  (Block List) One of compute_query or multi_compute is required. Multiple multi_compute blocks are allowed with the structure below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestSecurityQuerySearch:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestSecurityQuerySearch",
                    "description": "Newstyle:  (Map of String, Deprecated) Map defining the search query to use.  Define search_query directly instead.\n",
                    "deprecationMessage": "Define `search_query` directly instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchQuery": {
                    "type": "string",
                    "description": "Newstyle:  (String) The search query to use.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestSecurityQueryCompute:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestSecurityQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Define a time interval in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestSecurityQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestSecurityQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Define a time interval in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestSecurityQueryGroupBy:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestSecurityQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Maximum number of items in the group.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestSecurityQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestSecurityQueryGroupBySort",
                    "description": "Newstyle:  (Map of String, Deprecated) One map is allowed with the keys as below.  Define sort_query list with one element instead.\n",
                    "deprecationMessage": "Define `sort_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestSecurityQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestSecurityQueryGroupBySortQuery",
                    "description": "Newstyle:  (Block List, Max: 1) List of exactly one element describing the sort query to use. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestSecurityQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestSecurityQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "description": "Newstyle:  (String) Widget sorting methods.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestSecurityQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestSecurityQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "description": "Newstyle:  (String) Widget sorting methods.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestSecurityQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestSecurityQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Define a time interval in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestSecurityQuerySearch:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestSecurityQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "description": "Newstyle:  (String) Metrics query definition.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionTime:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionTime": {
            "properties": {
                "liveSpan": {
                    "type": "string",
                    "description": "Newstyle:  (String) The timeframe to use when displaying the widget. One of 10m, 30m, 1h, 4h, 1d, 2d, 1w, 1mo, 3mo, 6mo, 1y, alert.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetQueryValueDefinition:DashboardWidgetGroupDefinitionWidgetQueryValueDefinition": {
            "properties": {
                "autoscale": {
                    "type": "boolean",
                    "description": "Newstyle:  (Boolean) Boolean indicating whether to automatically scale the tile.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "customLinks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionCustomLink:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionCustomLink"
                    },
                    "description": "Newstyle:  (Block List) Nested block describing a custom link. Multiple custom_link blocks are allowed with the structure below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "customUnit": {
                    "type": "string",
                    "description": "Newstyle:  (String) The unit for the value displayed in the widget.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "liveSpan": {
                    "type": "string",
                    "description": "Newstyle:  (String) The timeframe to use when displaying the widget. One of 10m, 30m, 1h, 4h, 1d, 2d, 1w, 1mo, 3mo, 6mo, 1y, alert.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "precision": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) The precision to use when displaying the tile.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "requests": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequest:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequest"
                    },
                    "description": "Newstyle:  (Block List) Nested block describing the request to use when displaying the widget. Multiple request blocks are allowed with the structure below (exactly one of q, apm_query, log_query, rum_query, security_query or process_query is required within the request block). (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "textAlign": {
                    "type": "string",
                    "description": "Newstyle:  (String) The alignment of the widget's text. One of left, center, or right.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "time": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionTime:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionTime",
                    "description": "Newstyle:  (Map of String, Deprecated) Nested block describing the timeframe to use when displaying the widget. The structure of this block is described below.  Define live_span directly in the widget definition instead.\n",
                    "deprecationMessage": "Define `live_span` directly in the widget definition instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "title": {
                    "type": "string",
                    "description": "Newstyle:  (String) The title of the widget.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleAlign": {
                    "type": "string",
                    "description": "Newstyle:  (String) The alignment of the widget's title. One of left, center, or right.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleSize": {
                    "type": "string",
                    "description": "Newstyle:  (String) The size of the widget's title. Default is 16.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionCustomLink:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionCustomLink": {
            "properties": {
                "label": {
                    "type": "string",
                    "description": "Newstyle:  (String) The label for the custom link URL.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "link": {
                    "type": "string",
                    "description": "Newstyle:  (String) The URL of the custom link.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "label",
                "link"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequest:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequest": {
            "properties": {
                "aggregator": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation methods available for metrics queries.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "apmQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestApmQuery:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestApmQuery",
                    "description": "Newstyle:  (Block List, Max: 1) The query to use for this widget. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "conditionalFormats": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestConditionalFormat:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestConditionalFormat"
                    },
                    "description": "Newstyle:  (Block List) Conditional formats allow you to set the color of your widget content or background, depending on a rule applied to your data. Multiple conditional_formats blocks are allowed with the structure below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "formulas": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestFormula:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestFormula"
                    },
                    "description": "Newstyle:  (Block List) (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestLogQuery:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestLogQuery",
                    "description": "Newstyle:  (Block List, Max: 1) The query to use for this widget. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "processQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestProcessQuery:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestProcessQuery",
                    "description": "Newstyle:  (Block List, Max: 1) Process query using formulas and functions. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "q": {
                    "type": "string",
                    "description": "Newstyle:  (String) The metric query to use for this widget.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "queries": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestQuery:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestQuery"
                    },
                    "description": "Newstyle:  (String) Metrics query definition.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "rumQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestRumQuery:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestRumQuery",
                    "description": "Newstyle:  (Block List, Max: 1) The query to use for this widget. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "securityQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestSecurityQuery:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestSecurityQuery",
                    "description": "Newstyle:  (Block List, Max: 1) The query to use for this widget. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestApmQuery:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestApmQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestApmQueryCompute:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestApmQueryCompute",
                    "description": "Newstyle:  (Map of String, Deprecated) One of compute or multi_compute is required. The map has the keys as below.  Define compute_query list with one element instead.\n",
                    "deprecationMessage": "Define `compute_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestApmQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestApmQueryComputeQuery",
                    "description": "Newstyle:  (Block List, Max: 1) One of compute_query or multi_compute is required. The map has the keys as below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestApmQueryGroupBy:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestApmQueryGroupBy"
                    },
                    "description": "Newstyle:  (Block List) Multiple group_by blocks are allowed with the structure below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "description": "Newstyle:  (String) Name of the index to query.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestApmQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestApmQueryMultiCompute"
                    },
                    "description": "Newstyle:  (Block List) One of compute_query or multi_compute is required. Multiple multi_compute blocks are allowed with the structure below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestApmQuerySearch:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestApmQuerySearch",
                    "description": "Newstyle:  (Map of String, Deprecated) Map defining the search query to use.  Define search_query directly instead.\n",
                    "deprecationMessage": "Define `search_query` directly instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchQuery": {
                    "type": "string",
                    "description": "Newstyle:  (String) The search query to use.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestApmQueryCompute:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestApmQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Define a time interval in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestApmQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestApmQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Define a time interval in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestApmQueryGroupBy:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestApmQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Maximum number of items in the group.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestApmQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestApmQueryGroupBySort",
                    "description": "Newstyle:  (Map of String, Deprecated) One map is allowed with the keys as below.  Define sort_query list with one element instead.\n",
                    "deprecationMessage": "Define `sort_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestApmQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestApmQueryGroupBySortQuery",
                    "description": "Newstyle:  (Block List, Max: 1) List of exactly one element describing the sort query to use. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestApmQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestApmQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "description": "Newstyle:  (String) Widget sorting methods.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestApmQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestApmQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "description": "Newstyle:  (String) Widget sorting methods.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestApmQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestApmQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Define a time interval in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestApmQuerySearch:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestApmQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "description": "Newstyle:  (String) Metrics query definition.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestConditionalFormat:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestConditionalFormat": {
            "properties": {
                "comparator": {
                    "type": "string",
                    "description": "Newstyle:  (String) Comparator to use. One of \u003e, \u003e=, \u003c, or \u003c=.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "customBgColor": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "customFgColor": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "hideValue": {
                    "type": "boolean",
                    "description": "Newstyle:  (Boolean) Setting this to True hides values.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "imageUrl": {
                    "type": "string",
                    "description": "Newstyle:  (String) Displays an image as the background.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "metric": {
                    "type": "string",
                    "description": "Newstyle:  (String) Process metric name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "palette": {
                    "type": "string",
                    "description": "Newstyle:  (String) Color palette to apply to the widget. The available options are available here: https://docs.datadoghq.com/dashboards/widgets/timeseries/#appearance.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "timeframe": {
                    "type": "string",
                    "description": "Newstyle:  (String) Defines the displayed timeframe.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "number",
                    "description": "Newstyle:  (String) The value that should be assumed by the template variable in this preset\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "comparator",
                "palette",
                "value"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestFormula:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestFormula": {
            "properties": {
                "alias": {
                    "type": "string",
                    "description": "Newstyle:  (String) Expression alias.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "formulaExpression": {
                    "type": "string",
                    "description": "Newstyle:  (String) String expression built from queries, formulas and functions.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestFormulaLimit:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestFormulaLimit",
                    "description": "Newstyle:  (Number) Maximum number of items in the group.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "formulaExpression"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestFormulaLimit:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestFormulaLimit": {
            "properties": {
                "count": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Number of results to return\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "description": "Newstyle:  (String) Widget sorting methods.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestLogQuery:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestLogQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestLogQueryCompute:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestLogQueryCompute",
                    "description": "Newstyle:  (Map of String, Deprecated) One of compute or multi_compute is required. The map has the keys as below.  Define compute_query list with one element instead.\n",
                    "deprecationMessage": "Define `compute_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestLogQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestLogQueryComputeQuery",
                    "description": "Newstyle:  (Block List, Max: 1) One of compute_query or multi_compute is required. The map has the keys as below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestLogQueryGroupBy:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestLogQueryGroupBy"
                    },
                    "description": "Newstyle:  (Block List) Multiple group_by blocks are allowed with the structure below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "description": "Newstyle:  (String) Name of the index to query.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestLogQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestLogQueryMultiCompute"
                    },
                    "description": "Newstyle:  (Block List) One of compute_query or multi_compute is required. Multiple multi_compute blocks are allowed with the structure below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestLogQuerySearch:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestLogQuerySearch",
                    "description": "Newstyle:  (Map of String, Deprecated) Map defining the search query to use.  Define search_query directly instead.\n",
                    "deprecationMessage": "Define `search_query` directly instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchQuery": {
                    "type": "string",
                    "description": "Newstyle:  (String) The search query to use.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestLogQueryCompute:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestLogQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Define a time interval in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestLogQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestLogQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Define a time interval in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestLogQueryGroupBy:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestLogQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Maximum number of items in the group.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestLogQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestLogQueryGroupBySort",
                    "description": "Newstyle:  (Map of String, Deprecated) One map is allowed with the keys as below.  Define sort_query list with one element instead.\n",
                    "deprecationMessage": "Define `sort_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestLogQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestLogQueryGroupBySortQuery",
                    "description": "Newstyle:  (Block List, Max: 1) List of exactly one element describing the sort query to use. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestLogQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestLogQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "description": "Newstyle:  (String) Widget sorting methods.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestLogQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestLogQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "description": "Newstyle:  (String) Widget sorting methods.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestLogQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestLogQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Define a time interval in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestLogQuerySearch:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestLogQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "description": "Newstyle:  (String) Metrics query definition.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestProcessQuery:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestProcessQuery": {
            "properties": {
                "filterBies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Newstyle:  (List of String) List of processes.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Maximum number of items in the group.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "metric": {
                    "type": "string",
                    "description": "Newstyle:  (String) Process metric name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchBy": {
                    "type": "string",
                    "description": "Newstyle:  (String) Your chosen search term.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "metric"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestQuery:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestQuery": {
            "properties": {
                "eventQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestQueryEventQuery:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestQueryEventQuery",
                    "description": "Newstyle:  (Block List, Max: 1) A timeseries formula and functions events query. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "metricQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestQueryMetricQuery:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestQueryMetricQuery",
                    "description": "Newstyle:  (Block List, Max: 1) A timeseries formula and functions metrics query. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "processQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestQueryProcessQuery:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestQueryProcessQuery",
                    "description": "Newstyle:  (Block List, Max: 1) Process query using formulas and functions. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestQueryEventQuery:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestQueryEventQuery": {
            "properties": {
                "computes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestQueryEventQueryCompute:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestQueryEventQueryCompute"
                    },
                    "description": "Newstyle:  (Map of String, Deprecated) One of compute or multi_compute is required. The map has the keys as below.  Define compute_query list with one element instead.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "dataSource": {
                    "type": "string",
                    "description": "Newstyle:  (String) Data source for process queries.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestQueryEventQueryGroupBy:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestQueryEventQueryGroupBy"
                    },
                    "description": "Newstyle:  (Block List) Multiple group_by blocks are allowed with the structure below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "indexes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Newstyle:  (List of String) An array of index names to query in the stream.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "Newstyle:  (String) The name of the template variable\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestQueryEventQuerySearch:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestQueryEventQuerySearch",
                    "description": "Newstyle:  (Map of String, Deprecated) Map defining the search query to use.  Define search_query directly instead.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "computes",
                "dataSource",
                "name"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestQueryEventQueryCompute:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestQueryEventQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Define a time interval in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "metric": {
                    "type": "string",
                    "description": "Newstyle:  (String) Process metric name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestQueryEventQueryGroupBy:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestQueryEventQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Maximum number of items in the group.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestQueryEventQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestQueryEventQueryGroupBySort",
                    "description": "Newstyle:  (Map of String, Deprecated) One map is allowed with the keys as below.  Define sort_query list with one element instead.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "facet"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestQueryEventQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestQueryEventQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "metric": {
                    "type": "string",
                    "description": "Newstyle:  (String) Process metric name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "description": "Newstyle:  (String) Widget sorting methods.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestQueryEventQuerySearch:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestQueryEventQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "description": "Newstyle:  (String) Metrics query definition.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestQueryMetricQuery:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestQueryMetricQuery": {
            "properties": {
                "aggregator": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation methods available for metrics queries.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "dataSource": {
                    "type": "string",
                    "description": "Newstyle:  (String) Data source for process queries.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "Newstyle:  (String) The name of the template variable\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "query": {
                    "type": "string",
                    "description": "Newstyle:  (String) Metrics query definition.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "name",
                "query"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestQueryProcessQuery:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestQueryProcessQuery": {
            "properties": {
                "aggregator": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation methods available for metrics queries.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "dataSource": {
                    "type": "string",
                    "description": "Newstyle:  (String) Data source for process queries.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "isNormalizedCpu": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Maximum number of items in the group.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "metric": {
                    "type": "string",
                    "description": "Newstyle:  (String) Process metric name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "Newstyle:  (String) The name of the template variable\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "type": "string",
                    "description": "Newstyle:  (Map of String, Deprecated) One map is allowed with the keys as below.  Define sort_query list with one element instead.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tagFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Newstyle:  (List of String) An array of tags to filter by.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "textFilter": {
                    "type": "string",
                    "description": "Newstyle:  (String) Text to use as filter.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "dataSource",
                "metric",
                "name"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestRumQuery:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestRumQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestRumQueryCompute:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestRumQueryCompute",
                    "description": "Newstyle:  (Map of String, Deprecated) One of compute or multi_compute is required. The map has the keys as below.  Define compute_query list with one element instead.\n",
                    "deprecationMessage": "Define `compute_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestRumQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestRumQueryComputeQuery",
                    "description": "Newstyle:  (Block List, Max: 1) One of compute_query or multi_compute is required. The map has the keys as below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestRumQueryGroupBy:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestRumQueryGroupBy"
                    },
                    "description": "Newstyle:  (Block List) Multiple group_by blocks are allowed with the structure below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "description": "Newstyle:  (String) Name of the index to query.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestRumQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestRumQueryMultiCompute"
                    },
                    "description": "Newstyle:  (Block List) One of compute_query or multi_compute is required. Multiple multi_compute blocks are allowed with the structure below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestRumQuerySearch:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestRumQuerySearch",
                    "description": "Newstyle:  (Map of String, Deprecated) Map defining the search query to use.  Define search_query directly instead.\n",
                    "deprecationMessage": "Define `search_query` directly instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchQuery": {
                    "type": "string",
                    "description": "Newstyle:  (String) The search query to use.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestRumQueryCompute:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestRumQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Define a time interval in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestRumQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestRumQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Define a time interval in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestRumQueryGroupBy:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestRumQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Maximum number of items in the group.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestRumQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestRumQueryGroupBySort",
                    "description": "Newstyle:  (Map of String, Deprecated) One map is allowed with the keys as below.  Define sort_query list with one element instead.\n",
                    "deprecationMessage": "Define `sort_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestRumQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestRumQueryGroupBySortQuery",
                    "description": "Newstyle:  (Block List, Max: 1) List of exactly one element describing the sort query to use. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestRumQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestRumQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "description": "Newstyle:  (String) Widget sorting methods.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestRumQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestRumQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "description": "Newstyle:  (String) Widget sorting methods.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestRumQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestRumQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Define a time interval in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestRumQuerySearch:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestRumQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "description": "Newstyle:  (String) Metrics query definition.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestSecurityQuery:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestSecurityQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestSecurityQueryCompute:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestSecurityQueryCompute",
                    "description": "Newstyle:  (Map of String, Deprecated) One of compute or multi_compute is required. The map has the keys as below.  Define compute_query list with one element instead.\n",
                    "deprecationMessage": "Define `compute_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestSecurityQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestSecurityQueryComputeQuery",
                    "description": "Newstyle:  (Block List, Max: 1) One of compute_query or multi_compute is required. The map has the keys as below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestSecurityQueryGroupBy:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestSecurityQueryGroupBy"
                    },
                    "description": "Newstyle:  (Block List) Multiple group_by blocks are allowed with the structure below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "description": "Newstyle:  (String) Name of the index to query.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestSecurityQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestSecurityQueryMultiCompute"
                    },
                    "description": "Newstyle:  (Block List) One of compute_query or multi_compute is required. Multiple multi_compute blocks are allowed with the structure below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestSecurityQuerySearch:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestSecurityQuerySearch",
                    "description": "Newstyle:  (Map of String, Deprecated) Map defining the search query to use.  Define search_query directly instead.\n",
                    "deprecationMessage": "Define `search_query` directly instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchQuery": {
                    "type": "string",
                    "description": "Newstyle:  (String) The search query to use.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestSecurityQueryCompute:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestSecurityQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Define a time interval in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestSecurityQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestSecurityQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Define a time interval in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestSecurityQueryGroupBy:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestSecurityQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Maximum number of items in the group.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestSecurityQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestSecurityQueryGroupBySort",
                    "description": "Newstyle:  (Map of String, Deprecated) One map is allowed with the keys as below.  Define sort_query list with one element instead.\n",
                    "deprecationMessage": "Define `sort_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestSecurityQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestSecurityQueryGroupBySortQuery",
                    "description": "Newstyle:  (Block List, Max: 1) List of exactly one element describing the sort query to use. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestSecurityQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestSecurityQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "description": "Newstyle:  (String) Widget sorting methods.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestSecurityQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestSecurityQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "description": "Newstyle:  (String) Widget sorting methods.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestSecurityQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestSecurityQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Define a time interval in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestSecurityQuerySearch:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestSecurityQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "description": "Newstyle:  (String) Metrics query definition.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionTime:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionTime": {
            "properties": {
                "liveSpan": {
                    "type": "string",
                    "description": "Newstyle:  (String) The timeframe to use when displaying the widget. One of 10m, 30m, 1h, 4h, 1d, 2d, 1w, 1mo, 3mo, 6mo, 1y, alert.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinition:DashboardWidgetGroupDefinitionWidgetScatterplotDefinition": {
            "properties": {
                "colorByGroups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "customLinks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionCustomLink:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionCustomLink"
                    },
                    "description": "Newstyle:  (Block List) Nested block describing a custom link. Multiple custom_link blocks are allowed with the structure below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "liveSpan": {
                    "type": "string",
                    "description": "Newstyle:  (String) The timeframe to use when displaying the widget. One of 10m, 30m, 1h, 4h, 1d, 2d, 1w, 1mo, 3mo, 6mo, 1y, alert.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "request": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequest:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequest",
                    "description": "Newstyle:  (Block List) Nested block describing the request to use when displaying the widget. Multiple request blocks are allowed with the structure below (exactly one of q, apm_query, log_query, rum_query, security_query or process_query is required within the request block). (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "time": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionTime:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionTime",
                    "description": "Newstyle:  (Map of String, Deprecated) Nested block describing the timeframe to use when displaying the widget. The structure of this block is described below.  Define live_span directly in the widget definition instead.\n",
                    "deprecationMessage": "Define `live_span` directly in the widget definition instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "title": {
                    "type": "string",
                    "description": "Newstyle:  (String) The title of the widget.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleAlign": {
                    "type": "string",
                    "description": "Newstyle:  (String) The alignment of the widget's title. One of left, center, or right.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleSize": {
                    "type": "string",
                    "description": "Newstyle:  (String) The size of the widget's title. Default is 16.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "xaxis": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionXaxis:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionXaxis",
                    "description": "Newstyle:  (Block List, Max: 1) Nested block describing the X-Axis Controls. Exactly one nested block is allowed with the structure below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "yaxis": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionYaxis:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionYaxis",
                    "description": "Newstyle:  (Block List, Max: 1) Nested block describing the Y-Axis Controls. The structure of this block is described below (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionCustomLink:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionCustomLink": {
            "properties": {
                "label": {
                    "type": "string",
                    "description": "Newstyle:  (String) The label for the custom link URL.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "link": {
                    "type": "string",
                    "description": "Newstyle:  (String) The URL of the custom link.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "label",
                "link"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequest:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequest": {
            "properties": {
                "xes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestX:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestX"
                    },
                    "description": "Newstyle:  (Number) The position of the widget on the x (horizontal) axis. Should be greater or equal to 0.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ys": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestY:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestY"
                    },
                    "description": "Newstyle:  (Number) The position of the widget on the y (vertical) axis. Should be greater or equal to 0.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestX:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestX": {
            "properties": {
                "aggregator": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation methods available for metrics queries.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "apmQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXApmQuery:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXApmQuery",
                    "description": "Newstyle:  (Block List, Max: 1) The query to use for this widget. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXLogQuery:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXLogQuery",
                    "description": "Newstyle:  (Block List, Max: 1) The query to use for this widget. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "processQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXProcessQuery:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXProcessQuery",
                    "description": "Newstyle:  (Block List, Max: 1) Process query using formulas and functions. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "q": {
                    "type": "string",
                    "description": "Newstyle:  (String) The metric query to use for this widget.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "rumQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXRumQuery:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXRumQuery",
                    "description": "Newstyle:  (Block List, Max: 1) The query to use for this widget. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "securityQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXSecurityQuery:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXSecurityQuery",
                    "description": "Newstyle:  (Block List, Max: 1) The query to use for this widget. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXApmQuery:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXApmQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXApmQueryCompute:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXApmQueryCompute",
                    "description": "Newstyle:  (Map of String, Deprecated) One of compute or multi_compute is required. The map has the keys as below.  Define compute_query list with one element instead.\n",
                    "deprecationMessage": "Define `compute_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXApmQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXApmQueryComputeQuery",
                    "description": "Newstyle:  (Block List, Max: 1) One of compute_query or multi_compute is required. The map has the keys as below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXApmQueryGroupBy:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXApmQueryGroupBy"
                    },
                    "description": "Newstyle:  (Block List) Multiple group_by blocks are allowed with the structure below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "description": "Newstyle:  (String) Name of the index to query.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXApmQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXApmQueryMultiCompute"
                    },
                    "description": "Newstyle:  (Block List) One of compute_query or multi_compute is required. Multiple multi_compute blocks are allowed with the structure below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXApmQuerySearch:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXApmQuerySearch",
                    "description": "Newstyle:  (Map of String, Deprecated) Map defining the search query to use.  Define search_query directly instead.\n",
                    "deprecationMessage": "Define `search_query` directly instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchQuery": {
                    "type": "string",
                    "description": "Newstyle:  (String) The search query to use.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXApmQueryCompute:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXApmQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Define a time interval in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXApmQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXApmQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Define a time interval in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXApmQueryGroupBy:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXApmQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Maximum number of items in the group.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXApmQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXApmQueryGroupBySort",
                    "description": "Newstyle:  (Map of String, Deprecated) One map is allowed with the keys as below.  Define sort_query list with one element instead.\n",
                    "deprecationMessage": "Define `sort_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXApmQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXApmQueryGroupBySortQuery",
                    "description": "Newstyle:  (Block List, Max: 1) List of exactly one element describing the sort query to use. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXApmQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXApmQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "description": "Newstyle:  (String) Widget sorting methods.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXApmQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXApmQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "description": "Newstyle:  (String) Widget sorting methods.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXApmQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXApmQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Define a time interval in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXApmQuerySearch:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXApmQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "description": "Newstyle:  (String) Metrics query definition.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXLogQuery:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXLogQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXLogQueryCompute:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXLogQueryCompute",
                    "description": "Newstyle:  (Map of String, Deprecated) One of compute or multi_compute is required. The map has the keys as below.  Define compute_query list with one element instead.\n",
                    "deprecationMessage": "Define `compute_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXLogQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXLogQueryComputeQuery",
                    "description": "Newstyle:  (Block List, Max: 1) One of compute_query or multi_compute is required. The map has the keys as below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXLogQueryGroupBy:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXLogQueryGroupBy"
                    },
                    "description": "Newstyle:  (Block List) Multiple group_by blocks are allowed with the structure below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "description": "Newstyle:  (String) Name of the index to query.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXLogQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXLogQueryMultiCompute"
                    },
                    "description": "Newstyle:  (Block List) One of compute_query or multi_compute is required. Multiple multi_compute blocks are allowed with the structure below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXLogQuerySearch:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXLogQuerySearch",
                    "description": "Newstyle:  (Map of String, Deprecated) Map defining the search query to use.  Define search_query directly instead.\n",
                    "deprecationMessage": "Define `search_query` directly instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchQuery": {
                    "type": "string",
                    "description": "Newstyle:  (String) The search query to use.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXLogQueryCompute:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXLogQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Define a time interval in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXLogQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXLogQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Define a time interval in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXLogQueryGroupBy:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXLogQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Maximum number of items in the group.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXLogQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXLogQueryGroupBySort",
                    "description": "Newstyle:  (Map of String, Deprecated) One map is allowed with the keys as below.  Define sort_query list with one element instead.\n",
                    "deprecationMessage": "Define `sort_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXLogQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXLogQueryGroupBySortQuery",
                    "description": "Newstyle:  (Block List, Max: 1) List of exactly one element describing the sort query to use. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXLogQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXLogQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "description": "Newstyle:  (String) Widget sorting methods.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXLogQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXLogQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "description": "Newstyle:  (String) Widget sorting methods.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXLogQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXLogQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Define a time interval in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXLogQuerySearch:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXLogQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "description": "Newstyle:  (String) Metrics query definition.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXProcessQuery:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXProcessQuery": {
            "properties": {
                "filterBies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Newstyle:  (List of String) List of processes.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Maximum number of items in the group.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "metric": {
                    "type": "string",
                    "description": "Newstyle:  (String) Process metric name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchBy": {
                    "type": "string",
                    "description": "Newstyle:  (String) Your chosen search term.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "metric"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXRumQuery:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXRumQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXRumQueryCompute:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXRumQueryCompute",
                    "description": "Newstyle:  (Map of String, Deprecated) One of compute or multi_compute is required. The map has the keys as below.  Define compute_query list with one element instead.\n",
                    "deprecationMessage": "Define `compute_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXRumQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXRumQueryComputeQuery",
                    "description": "Newstyle:  (Block List, Max: 1) One of compute_query or multi_compute is required. The map has the keys as below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXRumQueryGroupBy:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXRumQueryGroupBy"
                    },
                    "description": "Newstyle:  (Block List) Multiple group_by blocks are allowed with the structure below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "description": "Newstyle:  (String) Name of the index to query.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXRumQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXRumQueryMultiCompute"
                    },
                    "description": "Newstyle:  (Block List) One of compute_query or multi_compute is required. Multiple multi_compute blocks are allowed with the structure below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXRumQuerySearch:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXRumQuerySearch",
                    "description": "Newstyle:  (Map of String, Deprecated) Map defining the search query to use.  Define search_query directly instead.\n",
                    "deprecationMessage": "Define `search_query` directly instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchQuery": {
                    "type": "string",
                    "description": "Newstyle:  (String) The search query to use.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXRumQueryCompute:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXRumQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Define a time interval in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXRumQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXRumQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Define a time interval in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXRumQueryGroupBy:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXRumQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Maximum number of items in the group.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXRumQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXRumQueryGroupBySort",
                    "description": "Newstyle:  (Map of String, Deprecated) One map is allowed with the keys as below.  Define sort_query list with one element instead.\n",
                    "deprecationMessage": "Define `sort_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXRumQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXRumQueryGroupBySortQuery",
                    "description": "Newstyle:  (Block List, Max: 1) List of exactly one element describing the sort query to use. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXRumQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXRumQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "description": "Newstyle:  (String) Widget sorting methods.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXRumQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXRumQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "description": "Newstyle:  (String) Widget sorting methods.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXRumQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXRumQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Define a time interval in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXRumQuerySearch:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXRumQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "description": "Newstyle:  (String) Metrics query definition.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXSecurityQuery:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXSecurityQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXSecurityQueryCompute:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXSecurityQueryCompute",
                    "description": "Newstyle:  (Map of String, Deprecated) One of compute or multi_compute is required. The map has the keys as below.  Define compute_query list with one element instead.\n",
                    "deprecationMessage": "Define `compute_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXSecurityQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXSecurityQueryComputeQuery",
                    "description": "Newstyle:  (Block List, Max: 1) One of compute_query or multi_compute is required. The map has the keys as below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXSecurityQueryGroupBy:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXSecurityQueryGroupBy"
                    },
                    "description": "Newstyle:  (Block List) Multiple group_by blocks are allowed with the structure below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "description": "Newstyle:  (String) Name of the index to query.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXSecurityQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXSecurityQueryMultiCompute"
                    },
                    "description": "Newstyle:  (Block List) One of compute_query or multi_compute is required. Multiple multi_compute blocks are allowed with the structure below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXSecurityQuerySearch:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXSecurityQuerySearch",
                    "description": "Newstyle:  (Map of String, Deprecated) Map defining the search query to use.  Define search_query directly instead.\n",
                    "deprecationMessage": "Define `search_query` directly instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchQuery": {
                    "type": "string",
                    "description": "Newstyle:  (String) The search query to use.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXSecurityQueryCompute:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXSecurityQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Define a time interval in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXSecurityQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXSecurityQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Define a time interval in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXSecurityQueryGroupBy:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXSecurityQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Maximum number of items in the group.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXSecurityQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXSecurityQueryGroupBySort",
                    "description": "Newstyle:  (Map of String, Deprecated) One map is allowed with the keys as below.  Define sort_query list with one element instead.\n",
                    "deprecationMessage": "Define `sort_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXSecurityQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXSecurityQueryGroupBySortQuery",
                    "description": "Newstyle:  (Block List, Max: 1) List of exactly one element describing the sort query to use. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXSecurityQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXSecurityQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "description": "Newstyle:  (String) Widget sorting methods.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXSecurityQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXSecurityQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "description": "Newstyle:  (String) Widget sorting methods.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXSecurityQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXSecurityQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Define a time interval in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXSecurityQuerySearch:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXSecurityQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "description": "Newstyle:  (String) Metrics query definition.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestY:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestY": {
            "properties": {
                "aggregator": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation methods available for metrics queries.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "apmQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYApmQuery:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYApmQuery",
                    "description": "Newstyle:  (Block List, Max: 1) The query to use for this widget. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYLogQuery:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYLogQuery",
                    "description": "Newstyle:  (Block List, Max: 1) The query to use for this widget. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "processQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYProcessQuery:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYProcessQuery",
                    "description": "Newstyle:  (Block List, Max: 1) Process query using formulas and functions. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "q": {
                    "type": "string",
                    "description": "Newstyle:  (String) The metric query to use for this widget.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "rumQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYRumQuery:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYRumQuery",
                    "description": "Newstyle:  (Block List, Max: 1) The query to use for this widget. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "securityQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYSecurityQuery:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYSecurityQuery",
                    "description": "Newstyle:  (Block List, Max: 1) The query to use for this widget. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYApmQuery:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYApmQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYApmQueryCompute:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYApmQueryCompute",
                    "description": "Newstyle:  (Map of String, Deprecated) One of compute or multi_compute is required. The map has the keys as below.  Define compute_query list with one element instead.\n",
                    "deprecationMessage": "Define `compute_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYApmQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYApmQueryComputeQuery",
                    "description": "Newstyle:  (Block List, Max: 1) One of compute_query or multi_compute is required. The map has the keys as below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYApmQueryGroupBy:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYApmQueryGroupBy"
                    },
                    "description": "Newstyle:  (Block List) Multiple group_by blocks are allowed with the structure below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "description": "Newstyle:  (String) Name of the index to query.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYApmQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYApmQueryMultiCompute"
                    },
                    "description": "Newstyle:  (Block List) One of compute_query or multi_compute is required. Multiple multi_compute blocks are allowed with the structure below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYApmQuerySearch:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYApmQuerySearch",
                    "description": "Newstyle:  (Map of String, Deprecated) Map defining the search query to use.  Define search_query directly instead.\n",
                    "deprecationMessage": "Define `search_query` directly instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchQuery": {
                    "type": "string",
                    "description": "Newstyle:  (String) The search query to use.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYApmQueryCompute:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYApmQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Define a time interval in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYApmQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYApmQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Define a time interval in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYApmQueryGroupBy:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYApmQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Maximum number of items in the group.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYApmQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYApmQueryGroupBySort",
                    "description": "Newstyle:  (Map of String, Deprecated) One map is allowed with the keys as below.  Define sort_query list with one element instead.\n",
                    "deprecationMessage": "Define `sort_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYApmQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYApmQueryGroupBySortQuery",
                    "description": "Newstyle:  (Block List, Max: 1) List of exactly one element describing the sort query to use. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYApmQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYApmQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "description": "Newstyle:  (String) Widget sorting methods.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYApmQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYApmQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "description": "Newstyle:  (String) Widget sorting methods.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYApmQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYApmQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Define a time interval in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYApmQuerySearch:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYApmQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "description": "Newstyle:  (String) Metrics query definition.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYLogQuery:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYLogQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYLogQueryCompute:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYLogQueryCompute",
                    "description": "Newstyle:  (Map of String, Deprecated) One of compute or multi_compute is required. The map has the keys as below.  Define compute_query list with one element instead.\n",
                    "deprecationMessage": "Define `compute_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYLogQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYLogQueryComputeQuery",
                    "description": "Newstyle:  (Block List, Max: 1) One of compute_query or multi_compute is required. The map has the keys as below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYLogQueryGroupBy:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYLogQueryGroupBy"
                    },
                    "description": "Newstyle:  (Block List) Multiple group_by blocks are allowed with the structure below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "description": "Newstyle:  (String) Name of the index to query.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYLogQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYLogQueryMultiCompute"
                    },
                    "description": "Newstyle:  (Block List) One of compute_query or multi_compute is required. Multiple multi_compute blocks are allowed with the structure below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYLogQuerySearch:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYLogQuerySearch",
                    "description": "Newstyle:  (Map of String, Deprecated) Map defining the search query to use.  Define search_query directly instead.\n",
                    "deprecationMessage": "Define `search_query` directly instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchQuery": {
                    "type": "string",
                    "description": "Newstyle:  (String) The search query to use.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYLogQueryCompute:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYLogQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Define a time interval in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYLogQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYLogQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Define a time interval in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYLogQueryGroupBy:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYLogQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Maximum number of items in the group.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYLogQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYLogQueryGroupBySort",
                    "description": "Newstyle:  (Map of String, Deprecated) One map is allowed with the keys as below.  Define sort_query list with one element instead.\n",
                    "deprecationMessage": "Define `sort_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYLogQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYLogQueryGroupBySortQuery",
                    "description": "Newstyle:  (Block List, Max: 1) List of exactly one element describing the sort query to use. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYLogQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYLogQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "description": "Newstyle:  (String) Widget sorting methods.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYLogQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYLogQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "description": "Newstyle:  (String) Widget sorting methods.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYLogQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYLogQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Define a time interval in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYLogQuerySearch:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYLogQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "description": "Newstyle:  (String) Metrics query definition.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYProcessQuery:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYProcessQuery": {
            "properties": {
                "filterBies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Newstyle:  (List of String) List of processes.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Maximum number of items in the group.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "metric": {
                    "type": "string",
                    "description": "Newstyle:  (String) Process metric name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchBy": {
                    "type": "string",
                    "description": "Newstyle:  (String) Your chosen search term.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "metric"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYRumQuery:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYRumQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYRumQueryCompute:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYRumQueryCompute",
                    "description": "Newstyle:  (Map of String, Deprecated) One of compute or multi_compute is required. The map has the keys as below.  Define compute_query list with one element instead.\n",
                    "deprecationMessage": "Define `compute_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYRumQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYRumQueryComputeQuery",
                    "description": "Newstyle:  (Block List, Max: 1) One of compute_query or multi_compute is required. The map has the keys as below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYRumQueryGroupBy:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYRumQueryGroupBy"
                    },
                    "description": "Newstyle:  (Block List) Multiple group_by blocks are allowed with the structure below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "description": "Newstyle:  (String) Name of the index to query.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYRumQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYRumQueryMultiCompute"
                    },
                    "description": "Newstyle:  (Block List) One of compute_query or multi_compute is required. Multiple multi_compute blocks are allowed with the structure below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYRumQuerySearch:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYRumQuerySearch",
                    "description": "Newstyle:  (Map of String, Deprecated) Map defining the search query to use.  Define search_query directly instead.\n",
                    "deprecationMessage": "Define `search_query` directly instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchQuery": {
                    "type": "string",
                    "description": "Newstyle:  (String) The search query to use.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYRumQueryCompute:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYRumQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Define a time interval in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYRumQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYRumQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Define a time interval in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYRumQueryGroupBy:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYRumQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Maximum number of items in the group.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYRumQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYRumQueryGroupBySort",
                    "description": "Newstyle:  (Map of String, Deprecated) One map is allowed with the keys as below.  Define sort_query list with one element instead.\n",
                    "deprecationMessage": "Define `sort_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYRumQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYRumQueryGroupBySortQuery",
                    "description": "Newstyle:  (Block List, Max: 1) List of exactly one element describing the sort query to use. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYRumQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYRumQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "description": "Newstyle:  (String) Widget sorting methods.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYRumQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYRumQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "description": "Newstyle:  (String) Widget sorting methods.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYRumQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYRumQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Define a time interval in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYRumQuerySearch:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYRumQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "description": "Newstyle:  (String) Metrics query definition.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYSecurityQuery:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYSecurityQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYSecurityQueryCompute:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYSecurityQueryCompute",
                    "description": "Newstyle:  (Map of String, Deprecated) One of compute or multi_compute is required. The map has the keys as below.  Define compute_query list with one element instead.\n",
                    "deprecationMessage": "Define `compute_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYSecurityQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYSecurityQueryComputeQuery",
                    "description": "Newstyle:  (Block List, Max: 1) One of compute_query or multi_compute is required. The map has the keys as below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYSecurityQueryGroupBy:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYSecurityQueryGroupBy"
                    },
                    "description": "Newstyle:  (Block List) Multiple group_by blocks are allowed with the structure below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "description": "Newstyle:  (String) Name of the index to query.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYSecurityQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYSecurityQueryMultiCompute"
                    },
                    "description": "Newstyle:  (Block List) One of compute_query or multi_compute is required. Multiple multi_compute blocks are allowed with the structure below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYSecurityQuerySearch:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYSecurityQuerySearch",
                    "description": "Newstyle:  (Map of String, Deprecated) Map defining the search query to use.  Define search_query directly instead.\n",
                    "deprecationMessage": "Define `search_query` directly instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchQuery": {
                    "type": "string",
                    "description": "Newstyle:  (String) The search query to use.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYSecurityQueryCompute:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYSecurityQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Define a time interval in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYSecurityQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYSecurityQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Define a time interval in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYSecurityQueryGroupBy:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYSecurityQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Maximum number of items in the group.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYSecurityQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYSecurityQueryGroupBySort",
                    "description": "Newstyle:  (Map of String, Deprecated) One map is allowed with the keys as below.  Define sort_query list with one element instead.\n",
                    "deprecationMessage": "Define `sort_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYSecurityQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYSecurityQueryGroupBySortQuery",
                    "description": "Newstyle:  (Block List, Max: 1) List of exactly one element describing the sort query to use. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYSecurityQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYSecurityQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "description": "Newstyle:  (String) Widget sorting methods.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYSecurityQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYSecurityQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "description": "Newstyle:  (String) Widget sorting methods.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYSecurityQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYSecurityQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Define a time interval in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYSecurityQuerySearch:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYSecurityQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "description": "Newstyle:  (String) Metrics query definition.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionTime:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionTime": {
            "properties": {
                "liveSpan": {
                    "type": "string",
                    "description": "Newstyle:  (String) The timeframe to use when displaying the widget. One of 10m, 30m, 1h, 4h, 1d, 2d, 1w, 1mo, 3mo, 6mo, 1y, alert.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionXaxis:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionXaxis": {
            "properties": {
                "includeZero": {
                    "type": "boolean",
                    "description": "Newstyle:  (Boolean) Always include zero or fit the axis to the data range.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "label": {
                    "type": "string",
                    "description": "Newstyle:  (String) The label for the custom link URL.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "max": {
                    "type": "string",
                    "description": "Newstyle:  (String) Specify the maximum value to show on the Y-axis.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "min": {
                    "type": "string",
                    "description": "Newstyle:  (String) Specify the minimum value to show on the Y-axis.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "scale": {
                    "type": "string",
                    "description": "Newstyle:  (String) Specifies the scale type. One of linear, log, pow, sqrt.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionYaxis:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionYaxis": {
            "properties": {
                "includeZero": {
                    "type": "boolean",
                    "description": "Newstyle:  (Boolean) Always include zero or fit the axis to the data range.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "label": {
                    "type": "string",
                    "description": "Newstyle:  (String) The label for the custom link URL.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "max": {
                    "type": "string",
                    "description": "Newstyle:  (String) Specify the maximum value to show on the Y-axis.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "min": {
                    "type": "string",
                    "description": "Newstyle:  (String) Specify the minimum value to show on the Y-axis.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "scale": {
                    "type": "string",
                    "description": "Newstyle:  (String) Specifies the scale type. One of linear, log, pow, sqrt.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetServiceLevelObjectiveDefinition:DashboardWidgetGroupDefinitionWidgetServiceLevelObjectiveDefinition": {
            "properties": {
                "globalTimeTarget": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "showErrorBudget": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sloId": {
                    "type": "string",
                    "description": "Newstyle:  (String) The ID of the service level objective used by the widget.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "timeWindows": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Newstyle:  (List of String) List of time windows to display in the widget. Each value in the list must be one of 7d, 30d, 90d, week_to_date, previous_week, month_to_date, or previous_month.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "title": {
                    "type": "string",
                    "description": "Newstyle:  (String) The title of the widget.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleAlign": {
                    "type": "string",
                    "description": "Newstyle:  (String) The alignment of the widget's title. One of left, center, or right.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleSize": {
                    "type": "string",
                    "description": "Newstyle:  (String) The size of the widget's title. Default is 16.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "viewMode": {
                    "type": "string",
                    "description": "Newstyle:  (String) View mode for the widget. One of overall, component, or both.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "viewType": {
                    "type": "string",
                    "description": "Newstyle:  (String) Type of view to use when displaying the widget. Only detail is currently supported.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "sloId",
                "timeWindows",
                "viewMode",
                "viewType"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetServicemapDefinition:DashboardWidgetGroupDefinitionWidgetServicemapDefinition": {
            "properties": {
                "customLinks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetServicemapDefinitionCustomLink:DashboardWidgetGroupDefinitionWidgetServicemapDefinitionCustomLink"
                    },
                    "description": "Newstyle:  (Block List) Nested block describing a custom link. Multiple custom_link blocks are allowed with the structure below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "filters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Newstyle:  (List of String) Your environment and primary tag (or * if enabled for your account).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "service": {
                    "type": "string",
                    "description": "Newstyle:  (String) APM service.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "title": {
                    "type": "string",
                    "description": "Newstyle:  (String) The title of the widget.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleAlign": {
                    "type": "string",
                    "description": "Newstyle:  (String) The alignment of the widget's title. One of left, center, or right.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleSize": {
                    "type": "string",
                    "description": "Newstyle:  (String) The size of the widget's title. Default is 16.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "filters",
                "service"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetServicemapDefinitionCustomLink:DashboardWidgetGroupDefinitionWidgetServicemapDefinitionCustomLink": {
            "properties": {
                "label": {
                    "type": "string",
                    "description": "Newstyle:  (String) The label for the custom link URL.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "link": {
                    "type": "string",
                    "description": "Newstyle:  (String) The URL of the custom link.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "label",
                "link"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinition:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinition": {
            "properties": {
                "customLinks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionCustomLink:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionCustomLink"
                    },
                    "description": "Newstyle:  (Block List) Nested block describing a custom link. Multiple custom_link blocks are allowed with the structure below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "events": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionEvent:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionEvent"
                    },
                    "description": "Newstyle:  (Block List) The definition of the event to overlay on the graph. Multiple event blocks are allowed with the structure below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "legendColumns": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Newstyle:  (Set of String) A list of columns to display in the legend. List items one of value, avg, sum, min, max.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "legendLayout": {
                    "type": "string",
                    "description": "Newstyle:  (String) The layout of the legend displayed in the widget. One of auto, horizontal, vertical.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "legendSize": {
                    "type": "string",
                    "description": "Newstyle:  (String) The size of the legend displayed in the widget.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "liveSpan": {
                    "type": "string",
                    "description": "Newstyle:  (String) The timeframe to use when displaying the widget. One of 10m, 30m, 1h, 4h, 1d, 2d, 1w, 1mo, 3mo, 6mo, 1y, alert.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "markers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionMarker:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionMarker"
                    },
                    "description": "Newstyle:  (Block List) Nested block describing the marker to use when displaying the widget. The structure of this block is described below. Multiple marker blocks are allowed within a given tile_def block. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "requests": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequest:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequest"
                    },
                    "description": "Newstyle:  (Block List) Nested block describing the request to use when displaying the widget. Multiple request blocks are allowed with the structure below (exactly one of q, apm_query, log_query, rum_query, security_query or process_query is required within the request block). (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "rightYaxis": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRightYaxis:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRightYaxis",
                    "description": "Newstyle:  (Block List, Max: 1) Nested block describing the right Y-Axis Controls. See the on_right_yaxis property for which request will use this axis. The structure of this block is described below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "showLegend": {
                    "type": "boolean",
                    "description": "Newstyle:  (Boolean) Whether or not to show the legend on this widget.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "time": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionTime:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionTime",
                    "description": "Newstyle:  (Map of String, Deprecated) Nested block describing the timeframe to use when displaying the widget. The structure of this block is described below.  Define live_span directly in the widget definition instead.\n",
                    "deprecationMessage": "Define `live_span` directly in the widget definition instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "title": {
                    "type": "string",
                    "description": "Newstyle:  (String) The title of the widget.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleAlign": {
                    "type": "string",
                    "description": "Newstyle:  (String) The alignment of the widget's title. One of left, center, or right.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleSize": {
                    "type": "string",
                    "description": "Newstyle:  (String) The size of the widget's title. Default is 16.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "yaxis": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionYaxis:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionYaxis",
                    "description": "Newstyle:  (Block List, Max: 1) Nested block describing the Y-Axis Controls. The structure of this block is described below (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionCustomLink:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionCustomLink": {
            "properties": {
                "label": {
                    "type": "string",
                    "description": "Newstyle:  (String) The label for the custom link URL.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "link": {
                    "type": "string",
                    "description": "Newstyle:  (String) The URL of the custom link.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "label",
                "link"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionEvent:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionEvent": {
            "properties": {
                "q": {
                    "type": "string",
                    "description": "Newstyle:  (String) The metric query to use for this widget.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tagsExecution": {
                    "type": "string",
                    "description": "Newstyle:  (String) The execution method for multi-value filters.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "q"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionMarker:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionMarker": {
            "properties": {
                "displayType": {
                    "type": "string",
                    "description": "Newstyle:  (String) How the marker lines will look. Possible values are one of {error, warning, info, ok} combined with one of {dashed, solid, bold}. Example: error dashed.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "label": {
                    "type": "string",
                    "description": "Newstyle:  (String) The label for the custom link URL.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "description": "Newstyle:  (String) The value that should be assumed by the template variable in this preset\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "value"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequest:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequest": {
            "properties": {
                "apmQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestApmQuery:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestApmQuery",
                    "description": "Newstyle:  (Block List, Max: 1) The query to use for this widget. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "displayType": {
                    "type": "string",
                    "description": "Newstyle:  (String) How the marker lines will look. Possible values are one of {error, warning, info, ok} combined with one of {dashed, solid, bold}. Example: error dashed.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "formulas": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestFormula:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestFormula"
                    },
                    "description": "Newstyle:  (Block List) (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestLogQuery:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestLogQuery",
                    "description": "Newstyle:  (Block List, Max: 1) The query to use for this widget. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "metadatas": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestMetadata:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestMetadata"
                    },
                    "description": "Newstyle:  (Block List) Used to define expression aliases. Multiple metadata blocks are allowed with the structure below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "networkQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestNetworkQuery:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestNetworkQuery",
                    "description": "Newstyle:  (Block List, Max: 1) The query to use for this widget. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "onRightYaxis": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "processQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestProcessQuery:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestProcessQuery",
                    "description": "Newstyle:  (Block List, Max: 1) Process query using formulas and functions. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "q": {
                    "type": "string",
                    "description": "Newstyle:  (String) The metric query to use for this widget.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "queries": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestQuery:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestQuery"
                    },
                    "description": "Newstyle:  (String) Metrics query definition.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "rumQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestRumQuery:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestRumQuery",
                    "description": "Newstyle:  (Block List, Max: 1) The query to use for this widget. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "securityQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestSecurityQuery:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestSecurityQuery",
                    "description": "Newstyle:  (Block List, Max: 1) The query to use for this widget. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "style": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestStyle:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestStyle",
                    "description": "Newstyle:  (Block List, Max: 1) Define request widget style. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestApmQuery:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestApmQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestApmQueryCompute:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestApmQueryCompute",
                    "description": "Newstyle:  (Map of String, Deprecated) One of compute or multi_compute is required. The map has the keys as below.  Define compute_query list with one element instead.\n",
                    "deprecationMessage": "Define `compute_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestApmQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestApmQueryComputeQuery",
                    "description": "Newstyle:  (Block List, Max: 1) One of compute_query or multi_compute is required. The map has the keys as below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestApmQueryGroupBy:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestApmQueryGroupBy"
                    },
                    "description": "Newstyle:  (Block List) Multiple group_by blocks are allowed with the structure below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "description": "Newstyle:  (String) Name of the index to query.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestApmQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestApmQueryMultiCompute"
                    },
                    "description": "Newstyle:  (Block List) One of compute_query or multi_compute is required. Multiple multi_compute blocks are allowed with the structure below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestApmQuerySearch:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestApmQuerySearch",
                    "description": "Newstyle:  (Map of String, Deprecated) Map defining the search query to use.  Define search_query directly instead.\n",
                    "deprecationMessage": "Define `search_query` directly instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchQuery": {
                    "type": "string",
                    "description": "Newstyle:  (String) The search query to use.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestApmQueryCompute:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestApmQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Define a time interval in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestApmQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestApmQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Define a time interval in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestApmQueryGroupBy:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestApmQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Maximum number of items in the group.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestApmQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestApmQueryGroupBySort",
                    "description": "Newstyle:  (Map of String, Deprecated) One map is allowed with the keys as below.  Define sort_query list with one element instead.\n",
                    "deprecationMessage": "Define `sort_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestApmQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestApmQueryGroupBySortQuery",
                    "description": "Newstyle:  (Block List, Max: 1) List of exactly one element describing the sort query to use. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestApmQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestApmQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "description": "Newstyle:  (String) Widget sorting methods.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestApmQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestApmQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "description": "Newstyle:  (String) Widget sorting methods.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestApmQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestApmQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Define a time interval in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestApmQuerySearch:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestApmQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "description": "Newstyle:  (String) Metrics query definition.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestFormula:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestFormula": {
            "properties": {
                "alias": {
                    "type": "string",
                    "description": "Newstyle:  (String) Expression alias.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "formulaExpression": {
                    "type": "string",
                    "description": "Newstyle:  (String) String expression built from queries, formulas and functions.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestFormulaLimit:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestFormulaLimit",
                    "description": "Newstyle:  (Number) Maximum number of items in the group.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "formulaExpression"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestFormulaLimit:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestFormulaLimit": {
            "properties": {
                "count": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Number of results to return\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "description": "Newstyle:  (String) Widget sorting methods.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestLogQuery:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestLogQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestLogQueryCompute:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestLogQueryCompute",
                    "description": "Newstyle:  (Map of String, Deprecated) One of compute or multi_compute is required. The map has the keys as below.  Define compute_query list with one element instead.\n",
                    "deprecationMessage": "Define `compute_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestLogQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestLogQueryComputeQuery",
                    "description": "Newstyle:  (Block List, Max: 1) One of compute_query or multi_compute is required. The map has the keys as below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestLogQueryGroupBy:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestLogQueryGroupBy"
                    },
                    "description": "Newstyle:  (Block List) Multiple group_by blocks are allowed with the structure below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "description": "Newstyle:  (String) Name of the index to query.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestLogQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestLogQueryMultiCompute"
                    },
                    "description": "Newstyle:  (Block List) One of compute_query or multi_compute is required. Multiple multi_compute blocks are allowed with the structure below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestLogQuerySearch:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestLogQuerySearch",
                    "description": "Newstyle:  (Map of String, Deprecated) Map defining the search query to use.  Define search_query directly instead.\n",
                    "deprecationMessage": "Define `search_query` directly instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchQuery": {
                    "type": "string",
                    "description": "Newstyle:  (String) The search query to use.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestLogQueryCompute:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestLogQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Define a time interval in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestLogQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestLogQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Define a time interval in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestLogQueryGroupBy:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestLogQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Maximum number of items in the group.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestLogQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestLogQueryGroupBySort",
                    "description": "Newstyle:  (Map of String, Deprecated) One map is allowed with the keys as below.  Define sort_query list with one element instead.\n",
                    "deprecationMessage": "Define `sort_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestLogQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestLogQueryGroupBySortQuery",
                    "description": "Newstyle:  (Block List, Max: 1) List of exactly one element describing the sort query to use. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestLogQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestLogQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "description": "Newstyle:  (String) Widget sorting methods.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestLogQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestLogQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "description": "Newstyle:  (String) Widget sorting methods.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestLogQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestLogQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Define a time interval in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestLogQuerySearch:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestLogQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "description": "Newstyle:  (String) Metrics query definition.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestMetadata:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestMetadata": {
            "properties": {
                "aliasName": {
                    "type": "string",
                    "description": "Newstyle:  (String) Expression alias.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "expression": {
                    "type": "string",
                    "description": "Newstyle:  (String) Expression name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "expression"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestNetworkQuery:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestNetworkQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestNetworkQueryCompute:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestNetworkQueryCompute",
                    "description": "Newstyle:  (Map of String, Deprecated) One of compute or multi_compute is required. The map has the keys as below.  Define compute_query list with one element instead.\n",
                    "deprecationMessage": "Define `compute_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestNetworkQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestNetworkQueryComputeQuery",
                    "description": "Newstyle:  (Block List, Max: 1) One of compute_query or multi_compute is required. The map has the keys as below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestNetworkQueryGroupBy:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestNetworkQueryGroupBy"
                    },
                    "description": "Newstyle:  (Block List) Multiple group_by blocks are allowed with the structure below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "description": "Newstyle:  (String) Name of the index to query.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestNetworkQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestNetworkQueryMultiCompute"
                    },
                    "description": "Newstyle:  (Block List) One of compute_query or multi_compute is required. Multiple multi_compute blocks are allowed with the structure below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestNetworkQuerySearch:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestNetworkQuerySearch",
                    "description": "Newstyle:  (Map of String, Deprecated) Map defining the search query to use.  Define search_query directly instead.\n",
                    "deprecationMessage": "Define `search_query` directly instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchQuery": {
                    "type": "string",
                    "description": "Newstyle:  (String) The search query to use.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestNetworkQueryCompute:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestNetworkQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Define a time interval in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestNetworkQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestNetworkQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Define a time interval in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestNetworkQueryGroupBy:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestNetworkQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Maximum number of items in the group.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestNetworkQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestNetworkQueryGroupBySort",
                    "description": "Newstyle:  (Map of String, Deprecated) One map is allowed with the keys as below.  Define sort_query list with one element instead.\n",
                    "deprecationMessage": "Define `sort_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestNetworkQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestNetworkQueryGroupBySortQuery",
                    "description": "Newstyle:  (Block List, Max: 1) List of exactly one element describing the sort query to use. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestNetworkQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestNetworkQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "description": "Newstyle:  (String) Widget sorting methods.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestNetworkQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestNetworkQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "description": "Newstyle:  (String) Widget sorting methods.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestNetworkQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestNetworkQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Define a time interval in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestNetworkQuerySearch:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestNetworkQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "description": "Newstyle:  (String) Metrics query definition.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestProcessQuery:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestProcessQuery": {
            "properties": {
                "filterBies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Newstyle:  (List of String) List of processes.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Maximum number of items in the group.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "metric": {
                    "type": "string",
                    "description": "Newstyle:  (String) Process metric name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchBy": {
                    "type": "string",
                    "description": "Newstyle:  (String) Your chosen search term.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "metric"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestQuery:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestQuery": {
            "properties": {
                "eventQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestQueryEventQuery:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestQueryEventQuery",
                    "description": "Newstyle:  (Block List, Max: 1) A timeseries formula and functions events query. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "metricQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestQueryMetricQuery:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestQueryMetricQuery",
                    "description": "Newstyle:  (Block List, Max: 1) A timeseries formula and functions metrics query. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "processQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestQueryProcessQuery:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestQueryProcessQuery",
                    "description": "Newstyle:  (Block List, Max: 1) Process query using formulas and functions. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestQueryEventQuery:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestQueryEventQuery": {
            "properties": {
                "computes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestQueryEventQueryCompute:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestQueryEventQueryCompute"
                    },
                    "description": "Newstyle:  (Map of String, Deprecated) One of compute or multi_compute is required. The map has the keys as below.  Define compute_query list with one element instead.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "dataSource": {
                    "type": "string",
                    "description": "Newstyle:  (String) Data source for process queries.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestQueryEventQueryGroupBy:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestQueryEventQueryGroupBy"
                    },
                    "description": "Newstyle:  (Block List) Multiple group_by blocks are allowed with the structure below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "indexes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Newstyle:  (List of String) An array of index names to query in the stream.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "Newstyle:  (String) The name of the template variable\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestQueryEventQuerySearch:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestQueryEventQuerySearch",
                    "description": "Newstyle:  (Map of String, Deprecated) Map defining the search query to use.  Define search_query directly instead.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "computes",
                "dataSource",
                "name"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestQueryEventQueryCompute:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestQueryEventQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Define a time interval in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "metric": {
                    "type": "string",
                    "description": "Newstyle:  (String) Process metric name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestQueryEventQueryGroupBy:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestQueryEventQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Maximum number of items in the group.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestQueryEventQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestQueryEventQueryGroupBySort",
                    "description": "Newstyle:  (Map of String, Deprecated) One map is allowed with the keys as below.  Define sort_query list with one element instead.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "facet"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestQueryEventQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestQueryEventQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "metric": {
                    "type": "string",
                    "description": "Newstyle:  (String) Process metric name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "description": "Newstyle:  (String) Widget sorting methods.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestQueryEventQuerySearch:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestQueryEventQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "description": "Newstyle:  (String) Metrics query definition.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestQueryMetricQuery:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestQueryMetricQuery": {
            "properties": {
                "aggregator": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation methods available for metrics queries.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "dataSource": {
                    "type": "string",
                    "description": "Newstyle:  (String) Data source for process queries.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "Newstyle:  (String) The name of the template variable\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "query": {
                    "type": "string",
                    "description": "Newstyle:  (String) Metrics query definition.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "name",
                "query"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestQueryProcessQuery:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestQueryProcessQuery": {
            "properties": {
                "aggregator": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation methods available for metrics queries.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "dataSource": {
                    "type": "string",
                    "description": "Newstyle:  (String) Data source for process queries.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "isNormalizedCpu": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Maximum number of items in the group.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "metric": {
                    "type": "string",
                    "description": "Newstyle:  (String) Process metric name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "Newstyle:  (String) The name of the template variable\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "type": "string",
                    "description": "Newstyle:  (Map of String, Deprecated) One map is allowed with the keys as below.  Define sort_query list with one element instead.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tagFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Newstyle:  (List of String) An array of tags to filter by.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "textFilter": {
                    "type": "string",
                    "description": "Newstyle:  (String) Text to use as filter.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "dataSource",
                "metric",
                "name"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestRumQuery:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestRumQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestRumQueryCompute:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestRumQueryCompute",
                    "description": "Newstyle:  (Map of String, Deprecated) One of compute or multi_compute is required. The map has the keys as below.  Define compute_query list with one element instead.\n",
                    "deprecationMessage": "Define `compute_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestRumQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestRumQueryComputeQuery",
                    "description": "Newstyle:  (Block List, Max: 1) One of compute_query or multi_compute is required. The map has the keys as below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestRumQueryGroupBy:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestRumQueryGroupBy"
                    },
                    "description": "Newstyle:  (Block List) Multiple group_by blocks are allowed with the structure below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "description": "Newstyle:  (String) Name of the index to query.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestRumQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestRumQueryMultiCompute"
                    },
                    "description": "Newstyle:  (Block List) One of compute_query or multi_compute is required. Multiple multi_compute blocks are allowed with the structure below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestRumQuerySearch:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestRumQuerySearch",
                    "description": "Newstyle:  (Map of String, Deprecated) Map defining the search query to use.  Define search_query directly instead.\n",
                    "deprecationMessage": "Define `search_query` directly instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchQuery": {
                    "type": "string",
                    "description": "Newstyle:  (String) The search query to use.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestRumQueryCompute:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestRumQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Define a time interval in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestRumQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestRumQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Define a time interval in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestRumQueryGroupBy:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestRumQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Maximum number of items in the group.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestRumQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestRumQueryGroupBySort",
                    "description": "Newstyle:  (Map of String, Deprecated) One map is allowed with the keys as below.  Define sort_query list with one element instead.\n",
                    "deprecationMessage": "Define `sort_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestRumQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestRumQueryGroupBySortQuery",
                    "description": "Newstyle:  (Block List, Max: 1) List of exactly one element describing the sort query to use. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestRumQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestRumQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "description": "Newstyle:  (String) Widget sorting methods.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestRumQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestRumQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "description": "Newstyle:  (String) Widget sorting methods.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestRumQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestRumQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Define a time interval in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestRumQuerySearch:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestRumQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "description": "Newstyle:  (String) Metrics query definition.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestSecurityQuery:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestSecurityQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestSecurityQueryCompute:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestSecurityQueryCompute",
                    "description": "Newstyle:  (Map of String, Deprecated) One of compute or multi_compute is required. The map has the keys as below.  Define compute_query list with one element instead.\n",
                    "deprecationMessage": "Define `compute_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestSecurityQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestSecurityQueryComputeQuery",
                    "description": "Newstyle:  (Block List, Max: 1) One of compute_query or multi_compute is required. The map has the keys as below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestSecurityQueryGroupBy:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestSecurityQueryGroupBy"
                    },
                    "description": "Newstyle:  (Block List) Multiple group_by blocks are allowed with the structure below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "description": "Newstyle:  (String) Name of the index to query.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestSecurityQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestSecurityQueryMultiCompute"
                    },
                    "description": "Newstyle:  (Block List) One of compute_query or multi_compute is required. Multiple multi_compute blocks are allowed with the structure below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestSecurityQuerySearch:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestSecurityQuerySearch",
                    "description": "Newstyle:  (Map of String, Deprecated) Map defining the search query to use.  Define search_query directly instead.\n",
                    "deprecationMessage": "Define `search_query` directly instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchQuery": {
                    "type": "string",
                    "description": "Newstyle:  (String) The search query to use.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestSecurityQueryCompute:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestSecurityQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Define a time interval in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestSecurityQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestSecurityQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Define a time interval in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestSecurityQueryGroupBy:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestSecurityQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Maximum number of items in the group.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestSecurityQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestSecurityQueryGroupBySort",
                    "description": "Newstyle:  (Map of String, Deprecated) One map is allowed with the keys as below.  Define sort_query list with one element instead.\n",
                    "deprecationMessage": "Define `sort_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestSecurityQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestSecurityQueryGroupBySortQuery",
                    "description": "Newstyle:  (Block List, Max: 1) List of exactly one element describing the sort query to use. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestSecurityQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestSecurityQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "description": "Newstyle:  (String) Widget sorting methods.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestSecurityQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestSecurityQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "description": "Newstyle:  (String) Widget sorting methods.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestSecurityQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestSecurityQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Define a time interval in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestSecurityQuerySearch:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestSecurityQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "description": "Newstyle:  (String) Metrics query definition.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestStyle:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestStyle": {
            "properties": {
                "lineType": {
                    "type": "string",
                    "description": "Newstyle:  (String) Type of lines displayed. Available values are: dashed, dotted, or solid.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "lineWidth": {
                    "type": "string",
                    "description": "Newstyle:  (String) Width of line displayed. Available values are: normal, thick, or thin.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "palette": {
                    "type": "string",
                    "description": "Newstyle:  (String) Color palette to apply to the widget. The available options are available here: https://docs.datadoghq.com/dashboards/widgets/timeseries/#appearance.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRightYaxis:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRightYaxis": {
            "properties": {
                "includeZero": {
                    "type": "boolean",
                    "description": "Newstyle:  (Boolean) Always include zero or fit the axis to the data range.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "label": {
                    "type": "string",
                    "description": "Newstyle:  (String) The label for the custom link URL.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "max": {
                    "type": "string",
                    "description": "Newstyle:  (String) Specify the maximum value to show on the Y-axis.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "min": {
                    "type": "string",
                    "description": "Newstyle:  (String) Specify the minimum value to show on the Y-axis.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "scale": {
                    "type": "string",
                    "description": "Newstyle:  (String) Specifies the scale type. One of linear, log, pow, sqrt.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionTime:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionTime": {
            "properties": {
                "liveSpan": {
                    "type": "string",
                    "description": "Newstyle:  (String) The timeframe to use when displaying the widget. One of 10m, 30m, 1h, 4h, 1d, 2d, 1w, 1mo, 3mo, 6mo, 1y, alert.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionYaxis:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionYaxis": {
            "properties": {
                "includeZero": {
                    "type": "boolean",
                    "description": "Newstyle:  (Boolean) Always include zero or fit the axis to the data range.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "label": {
                    "type": "string",
                    "description": "Newstyle:  (String) The label for the custom link URL.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "max": {
                    "type": "string",
                    "description": "Newstyle:  (String) Specify the maximum value to show on the Y-axis.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "min": {
                    "type": "string",
                    "description": "Newstyle:  (String) Specify the minimum value to show on the Y-axis.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "scale": {
                    "type": "string",
                    "description": "Newstyle:  (String) Specifies the scale type. One of linear, log, pow, sqrt.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetToplistDefinition:DashboardWidgetGroupDefinitionWidgetToplistDefinition": {
            "properties": {
                "customLinks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetToplistDefinitionCustomLink:DashboardWidgetGroupDefinitionWidgetToplistDefinitionCustomLink"
                    },
                    "description": "Newstyle:  (Block List) Nested block describing a custom link. Multiple custom_link blocks are allowed with the structure below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "liveSpan": {
                    "type": "string",
                    "description": "Newstyle:  (String) The timeframe to use when displaying the widget. One of 10m, 30m, 1h, 4h, 1d, 2d, 1w, 1mo, 3mo, 6mo, 1y, alert.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "requests": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequest:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequest"
                    },
                    "description": "Newstyle:  (Block List) Nested block describing the request to use when displaying the widget. Multiple request blocks are allowed with the structure below (exactly one of q, apm_query, log_query, rum_query, security_query or process_query is required within the request block). (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "time": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetToplistDefinitionTime:DashboardWidgetGroupDefinitionWidgetToplistDefinitionTime",
                    "description": "Newstyle:  (Map of String, Deprecated) Nested block describing the timeframe to use when displaying the widget. The structure of this block is described below.  Define live_span directly in the widget definition instead.\n",
                    "deprecationMessage": "Define `live_span` directly in the widget definition instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "title": {
                    "type": "string",
                    "description": "Newstyle:  (String) The title of the widget.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleAlign": {
                    "type": "string",
                    "description": "Newstyle:  (String) The alignment of the widget's title. One of left, center, or right.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleSize": {
                    "type": "string",
                    "description": "Newstyle:  (String) The size of the widget's title. Default is 16.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetToplistDefinitionCustomLink:DashboardWidgetGroupDefinitionWidgetToplistDefinitionCustomLink": {
            "properties": {
                "label": {
                    "type": "string",
                    "description": "Newstyle:  (String) The label for the custom link URL.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "link": {
                    "type": "string",
                    "description": "Newstyle:  (String) The URL of the custom link.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "label",
                "link"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequest:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequest": {
            "properties": {
                "apmQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestApmQuery:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestApmQuery",
                    "description": "Newstyle:  (Block List, Max: 1) The query to use for this widget. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "conditionalFormats": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestConditionalFormat:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestConditionalFormat"
                    },
                    "description": "Newstyle:  (Block List) Conditional formats allow you to set the color of your widget content or background, depending on a rule applied to your data. Multiple conditional_formats blocks are allowed with the structure below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "formulas": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestFormula:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestFormula"
                    },
                    "description": "Newstyle:  (Block List) (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestLogQuery:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestLogQuery",
                    "description": "Newstyle:  (Block List, Max: 1) The query to use for this widget. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "processQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestProcessQuery:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestProcessQuery",
                    "description": "Newstyle:  (Block List, Max: 1) Process query using formulas and functions. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "q": {
                    "type": "string",
                    "description": "Newstyle:  (String) The metric query to use for this widget.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "queries": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestQuery:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestQuery"
                    },
                    "description": "Newstyle:  (String) Metrics query definition.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "rumQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestRumQuery:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestRumQuery",
                    "description": "Newstyle:  (Block List, Max: 1) The query to use for this widget. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "securityQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestSecurityQuery:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestSecurityQuery",
                    "description": "Newstyle:  (Block List, Max: 1) The query to use for this widget. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "style": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestStyle:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestStyle",
                    "description": "Newstyle:  (Block List, Max: 1) Define request widget style. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestApmQuery:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestApmQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestApmQueryCompute:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestApmQueryCompute",
                    "description": "Newstyle:  (Map of String, Deprecated) One of compute or multi_compute is required. The map has the keys as below.  Define compute_query list with one element instead.\n",
                    "deprecationMessage": "Define `compute_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestApmQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestApmQueryComputeQuery",
                    "description": "Newstyle:  (Block List, Max: 1) One of compute_query or multi_compute is required. The map has the keys as below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestApmQueryGroupBy:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestApmQueryGroupBy"
                    },
                    "description": "Newstyle:  (Block List) Multiple group_by blocks are allowed with the structure below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "description": "Newstyle:  (String) Name of the index to query.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestApmQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestApmQueryMultiCompute"
                    },
                    "description": "Newstyle:  (Block List) One of compute_query or multi_compute is required. Multiple multi_compute blocks are allowed with the structure below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestApmQuerySearch:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestApmQuerySearch",
                    "description": "Newstyle:  (Map of String, Deprecated) Map defining the search query to use.  Define search_query directly instead.\n",
                    "deprecationMessage": "Define `search_query` directly instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchQuery": {
                    "type": "string",
                    "description": "Newstyle:  (String) The search query to use.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestApmQueryCompute:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestApmQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Define a time interval in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestApmQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestApmQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Define a time interval in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestApmQueryGroupBy:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestApmQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Maximum number of items in the group.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestApmQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestApmQueryGroupBySort",
                    "description": "Newstyle:  (Map of String, Deprecated) One map is allowed with the keys as below.  Define sort_query list with one element instead.\n",
                    "deprecationMessage": "Define `sort_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestApmQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestApmQueryGroupBySortQuery",
                    "description": "Newstyle:  (Block List, Max: 1) List of exactly one element describing the sort query to use. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestApmQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestApmQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "description": "Newstyle:  (String) Widget sorting methods.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestApmQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestApmQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "description": "Newstyle:  (String) Widget sorting methods.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestApmQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestApmQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Define a time interval in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestApmQuerySearch:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestApmQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "description": "Newstyle:  (String) Metrics query definition.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestConditionalFormat:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestConditionalFormat": {
            "properties": {
                "comparator": {
                    "type": "string",
                    "description": "Newstyle:  (String) Comparator to use. One of \u003e, \u003e=, \u003c, or \u003c=.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "customBgColor": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "customFgColor": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "hideValue": {
                    "type": "boolean",
                    "description": "Newstyle:  (Boolean) Setting this to True hides values.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "imageUrl": {
                    "type": "string",
                    "description": "Newstyle:  (String) Displays an image as the background.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "metric": {
                    "type": "string",
                    "description": "Newstyle:  (String) Process metric name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "palette": {
                    "type": "string",
                    "description": "Newstyle:  (String) Color palette to apply to the widget. The available options are available here: https://docs.datadoghq.com/dashboards/widgets/timeseries/#appearance.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "timeframe": {
                    "type": "string",
                    "description": "Newstyle:  (String) Defines the displayed timeframe.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "number",
                    "description": "Newstyle:  (String) The value that should be assumed by the template variable in this preset\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "comparator",
                "palette",
                "value"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestFormula:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestFormula": {
            "properties": {
                "alias": {
                    "type": "string",
                    "description": "Newstyle:  (String) Expression alias.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "formulaExpression": {
                    "type": "string",
                    "description": "Newstyle:  (String) String expression built from queries, formulas and functions.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestFormulaLimit:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestFormulaLimit",
                    "description": "Newstyle:  (Number) Maximum number of items in the group.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "formulaExpression"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestFormulaLimit:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestFormulaLimit": {
            "properties": {
                "count": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Number of results to return\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "description": "Newstyle:  (String) Widget sorting methods.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestLogQuery:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestLogQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestLogQueryCompute:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestLogQueryCompute",
                    "description": "Newstyle:  (Map of String, Deprecated) One of compute or multi_compute is required. The map has the keys as below.  Define compute_query list with one element instead.\n",
                    "deprecationMessage": "Define `compute_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestLogQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestLogQueryComputeQuery",
                    "description": "Newstyle:  (Block List, Max: 1) One of compute_query or multi_compute is required. The map has the keys as below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestLogQueryGroupBy:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestLogQueryGroupBy"
                    },
                    "description": "Newstyle:  (Block List) Multiple group_by blocks are allowed with the structure below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "description": "Newstyle:  (String) Name of the index to query.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestLogQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestLogQueryMultiCompute"
                    },
                    "description": "Newstyle:  (Block List) One of compute_query or multi_compute is required. Multiple multi_compute blocks are allowed with the structure below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestLogQuerySearch:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestLogQuerySearch",
                    "description": "Newstyle:  (Map of String, Deprecated) Map defining the search query to use.  Define search_query directly instead.\n",
                    "deprecationMessage": "Define `search_query` directly instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchQuery": {
                    "type": "string",
                    "description": "Newstyle:  (String) The search query to use.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestLogQueryCompute:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestLogQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Define a time interval in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestLogQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestLogQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Define a time interval in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestLogQueryGroupBy:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestLogQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Maximum number of items in the group.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestLogQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestLogQueryGroupBySort",
                    "description": "Newstyle:  (Map of String, Deprecated) One map is allowed with the keys as below.  Define sort_query list with one element instead.\n",
                    "deprecationMessage": "Define `sort_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestLogQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestLogQueryGroupBySortQuery",
                    "description": "Newstyle:  (Block List, Max: 1) List of exactly one element describing the sort query to use. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestLogQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestLogQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "description": "Newstyle:  (String) Widget sorting methods.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestLogQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestLogQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "description": "Newstyle:  (String) Widget sorting methods.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestLogQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestLogQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Define a time interval in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestLogQuerySearch:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestLogQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "description": "Newstyle:  (String) Metrics query definition.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestProcessQuery:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestProcessQuery": {
            "properties": {
                "filterBies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Newstyle:  (List of String) List of processes.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Maximum number of items in the group.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "metric": {
                    "type": "string",
                    "description": "Newstyle:  (String) Process metric name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchBy": {
                    "type": "string",
                    "description": "Newstyle:  (String) Your chosen search term.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "metric"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestQuery:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestQuery": {
            "properties": {
                "eventQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestQueryEventQuery:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestQueryEventQuery",
                    "description": "Newstyle:  (Block List, Max: 1) A timeseries formula and functions events query. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "metricQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestQueryMetricQuery:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestQueryMetricQuery",
                    "description": "Newstyle:  (Block List, Max: 1) A timeseries formula and functions metrics query. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "processQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestQueryProcessQuery:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestQueryProcessQuery",
                    "description": "Newstyle:  (Block List, Max: 1) Process query using formulas and functions. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestQueryEventQuery:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestQueryEventQuery": {
            "properties": {
                "computes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestQueryEventQueryCompute:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestQueryEventQueryCompute"
                    },
                    "description": "Newstyle:  (Map of String, Deprecated) One of compute or multi_compute is required. The map has the keys as below.  Define compute_query list with one element instead.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "dataSource": {
                    "type": "string",
                    "description": "Newstyle:  (String) Data source for process queries.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestQueryEventQueryGroupBy:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestQueryEventQueryGroupBy"
                    },
                    "description": "Newstyle:  (Block List) Multiple group_by blocks are allowed with the structure below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "indexes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Newstyle:  (List of String) An array of index names to query in the stream.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "Newstyle:  (String) The name of the template variable\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestQueryEventQuerySearch:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestQueryEventQuerySearch",
                    "description": "Newstyle:  (Map of String, Deprecated) Map defining the search query to use.  Define search_query directly instead.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "computes",
                "dataSource",
                "name"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestQueryEventQueryCompute:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestQueryEventQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Define a time interval in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "metric": {
                    "type": "string",
                    "description": "Newstyle:  (String) Process metric name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestQueryEventQueryGroupBy:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestQueryEventQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Maximum number of items in the group.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestQueryEventQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestQueryEventQueryGroupBySort",
                    "description": "Newstyle:  (Map of String, Deprecated) One map is allowed with the keys as below.  Define sort_query list with one element instead.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "facet"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestQueryEventQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestQueryEventQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "metric": {
                    "type": "string",
                    "description": "Newstyle:  (String) Process metric name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "description": "Newstyle:  (String) Widget sorting methods.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestQueryEventQuerySearch:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestQueryEventQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "description": "Newstyle:  (String) Metrics query definition.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestQueryMetricQuery:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestQueryMetricQuery": {
            "properties": {
                "aggregator": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation methods available for metrics queries.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "dataSource": {
                    "type": "string",
                    "description": "Newstyle:  (String) Data source for process queries.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "Newstyle:  (String) The name of the template variable\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "query": {
                    "type": "string",
                    "description": "Newstyle:  (String) Metrics query definition.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "name",
                "query"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestQueryProcessQuery:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestQueryProcessQuery": {
            "properties": {
                "aggregator": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation methods available for metrics queries.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "dataSource": {
                    "type": "string",
                    "description": "Newstyle:  (String) Data source for process queries.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "isNormalizedCpu": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Maximum number of items in the group.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "metric": {
                    "type": "string",
                    "description": "Newstyle:  (String) Process metric name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "Newstyle:  (String) The name of the template variable\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "type": "string",
                    "description": "Newstyle:  (Map of String, Deprecated) One map is allowed with the keys as below.  Define sort_query list with one element instead.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tagFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Newstyle:  (List of String) An array of tags to filter by.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "textFilter": {
                    "type": "string",
                    "description": "Newstyle:  (String) Text to use as filter.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "dataSource",
                "metric",
                "name"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestRumQuery:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestRumQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestRumQueryCompute:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestRumQueryCompute",
                    "description": "Newstyle:  (Map of String, Deprecated) One of compute or multi_compute is required. The map has the keys as below.  Define compute_query list with one element instead.\n",
                    "deprecationMessage": "Define `compute_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestRumQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestRumQueryComputeQuery",
                    "description": "Newstyle:  (Block List, Max: 1) One of compute_query or multi_compute is required. The map has the keys as below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestRumQueryGroupBy:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestRumQueryGroupBy"
                    },
                    "description": "Newstyle:  (Block List) Multiple group_by blocks are allowed with the structure below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "description": "Newstyle:  (String) Name of the index to query.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestRumQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestRumQueryMultiCompute"
                    },
                    "description": "Newstyle:  (Block List) One of compute_query or multi_compute is required. Multiple multi_compute blocks are allowed with the structure below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestRumQuerySearch:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestRumQuerySearch",
                    "description": "Newstyle:  (Map of String, Deprecated) Map defining the search query to use.  Define search_query directly instead.\n",
                    "deprecationMessage": "Define `search_query` directly instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchQuery": {
                    "type": "string",
                    "description": "Newstyle:  (String) The search query to use.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestRumQueryCompute:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestRumQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Define a time interval in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestRumQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestRumQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Define a time interval in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestRumQueryGroupBy:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestRumQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Maximum number of items in the group.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestRumQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestRumQueryGroupBySort",
                    "description": "Newstyle:  (Map of String, Deprecated) One map is allowed with the keys as below.  Define sort_query list with one element instead.\n",
                    "deprecationMessage": "Define `sort_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestRumQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestRumQueryGroupBySortQuery",
                    "description": "Newstyle:  (Block List, Max: 1) List of exactly one element describing the sort query to use. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestRumQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestRumQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "description": "Newstyle:  (String) Widget sorting methods.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestRumQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestRumQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "description": "Newstyle:  (String) Widget sorting methods.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestRumQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestRumQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Define a time interval in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestRumQuerySearch:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestRumQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "description": "Newstyle:  (String) Metrics query definition.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestSecurityQuery:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestSecurityQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestSecurityQueryCompute:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestSecurityQueryCompute",
                    "description": "Newstyle:  (Map of String, Deprecated) One of compute or multi_compute is required. The map has the keys as below.  Define compute_query list with one element instead.\n",
                    "deprecationMessage": "Define `compute_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestSecurityQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestSecurityQueryComputeQuery",
                    "description": "Newstyle:  (Block List, Max: 1) One of compute_query or multi_compute is required. The map has the keys as below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestSecurityQueryGroupBy:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestSecurityQueryGroupBy"
                    },
                    "description": "Newstyle:  (Block List) Multiple group_by blocks are allowed with the structure below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "description": "Newstyle:  (String) Name of the index to query.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestSecurityQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestSecurityQueryMultiCompute"
                    },
                    "description": "Newstyle:  (Block List) One of compute_query or multi_compute is required. Multiple multi_compute blocks are allowed with the structure below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestSecurityQuerySearch:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestSecurityQuerySearch",
                    "description": "Newstyle:  (Map of String, Deprecated) Map defining the search query to use.  Define search_query directly instead.\n",
                    "deprecationMessage": "Define `search_query` directly instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchQuery": {
                    "type": "string",
                    "description": "Newstyle:  (String) The search query to use.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestSecurityQueryCompute:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestSecurityQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Define a time interval in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestSecurityQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestSecurityQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Define a time interval in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestSecurityQueryGroupBy:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestSecurityQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Maximum number of items in the group.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestSecurityQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestSecurityQueryGroupBySort",
                    "description": "Newstyle:  (Map of String, Deprecated) One map is allowed with the keys as below.  Define sort_query list with one element instead.\n",
                    "deprecationMessage": "Define `sort_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestSecurityQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestSecurityQueryGroupBySortQuery",
                    "description": "Newstyle:  (Block List, Max: 1) List of exactly one element describing the sort query to use. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestSecurityQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestSecurityQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "description": "Newstyle:  (String) Widget sorting methods.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestSecurityQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestSecurityQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "description": "Newstyle:  (String) Widget sorting methods.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestSecurityQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestSecurityQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Define a time interval in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestSecurityQuerySearch:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestSecurityQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "description": "Newstyle:  (String) Metrics query definition.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestStyle:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestStyle": {
            "properties": {
                "palette": {
                    "type": "string",
                    "description": "Newstyle:  (String) Color palette to apply to the widget. The available options are available here: https://docs.datadoghq.com/dashboards/widgets/timeseries/#appearance.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetToplistDefinitionTime:DashboardWidgetGroupDefinitionWidgetToplistDefinitionTime": {
            "properties": {
                "liveSpan": {
                    "type": "string",
                    "description": "Newstyle:  (String) The timeframe to use when displaying the widget. One of 10m, 30m, 1h, 4h, 1d, 2d, 1w, 1mo, 3mo, 6mo, 1y, alert.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetTraceServiceDefinition:DashboardWidgetGroupDefinitionWidgetTraceServiceDefinition": {
            "properties": {
                "displayFormat": {
                    "type": "string",
                    "description": "Newstyle:  (String) Number of columns to display. Available values are: one_column, two_column, or three_column.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "env": {
                    "type": "string",
                    "description": "Newstyle:  (String) APM environment.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "liveSpan": {
                    "type": "string",
                    "description": "Newstyle:  (String) The timeframe to use when displaying the widget. One of 10m, 30m, 1h, 4h, 1d, 2d, 1w, 1mo, 3mo, 6mo, 1y, alert.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "service": {
                    "type": "string",
                    "description": "Newstyle:  (String) APM service.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "showBreakdown": {
                    "type": "boolean",
                    "description": "Newstyle:  (Boolean) Whether to show the latency breakdown or not.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "showDistribution": {
                    "type": "boolean",
                    "description": "Newstyle:  (Boolean) Whether to show the latency distribution or not.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "showErrors": {
                    "type": "boolean",
                    "description": "Newstyle:  (Boolean) Whether to show the error metrics or not.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "showHits": {
                    "type": "boolean",
                    "description": "Newstyle:  (Boolean) Whether to show the hits metrics or not\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "showLatency": {
                    "type": "boolean",
                    "description": "Newstyle:  (Boolean) Whether to show the latency metrics or not.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "showResourceList": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sizeFormat": {
                    "type": "string",
                    "description": "Newstyle:  (String) Size of the widget. Available values are: small, medium, or large.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "spanName": {
                    "type": "string",
                    "description": "Newstyle:  (String) APM span name\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "time": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetTraceServiceDefinitionTime:DashboardWidgetGroupDefinitionWidgetTraceServiceDefinitionTime",
                    "description": "Newstyle:  (Map of String, Deprecated) Nested block describing the timeframe to use when displaying the widget. The structure of this block is described below.  Define live_span directly in the widget definition instead.\n",
                    "deprecationMessage": "Define `live_span` directly in the widget definition instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "title": {
                    "type": "string",
                    "description": "Newstyle:  (String) The title of the widget.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleAlign": {
                    "type": "string",
                    "description": "Newstyle:  (String) The alignment of the widget's title. One of left, center, or right.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleSize": {
                    "type": "string",
                    "description": "Newstyle:  (String) The size of the widget's title. Default is 16.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "env",
                "service",
                "spanName"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetTraceServiceDefinitionTime:DashboardWidgetGroupDefinitionWidgetTraceServiceDefinitionTime": {
            "properties": {
                "liveSpan": {
                    "type": "string",
                    "description": "Newstyle:  (String) The timeframe to use when displaying the widget. One of 10m, 30m, 1h, 4h, 1d, 2d, 1w, 1mo, 3mo, 6mo, 1y, alert.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetWidgetLayout:DashboardWidgetGroupDefinitionWidgetWidgetLayout": {
            "properties": {
                "height": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) The height of the widget.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "width": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) The width of the widget.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "x": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) The position of the widget on the x (horizontal) axis. Should be greater or equal to 0.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "y": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) The position of the widget on the y (vertical) axis. Should be greater or equal to 0.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "height",
                "width",
                "x",
                "y"
            ]
        },
        "datadog:index/DashboardWidgetHeatmapDefinition:DashboardWidgetHeatmapDefinition": {
            "properties": {
                "customLinks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetHeatmapDefinitionCustomLink:DashboardWidgetHeatmapDefinitionCustomLink"
                    },
                    "description": "Newstyle:  (Block List) Nested block describing a custom link. Multiple custom_link blocks are allowed with the structure below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "events": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetHeatmapDefinitionEvent:DashboardWidgetHeatmapDefinitionEvent"
                    },
                    "description": "Newstyle:  (Block List) The definition of the event to overlay on the graph. Multiple event blocks are allowed with the structure below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "legendSize": {
                    "type": "string",
                    "description": "Newstyle:  (String) The size of the legend displayed in the widget.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "liveSpan": {
                    "type": "string",
                    "description": "Newstyle:  (String) The timeframe to use when displaying the widget. One of 10m, 30m, 1h, 4h, 1d, 2d, 1w, 1mo, 3mo, 6mo, 1y, alert.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "requests": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetHeatmapDefinitionRequest:DashboardWidgetHeatmapDefinitionRequest"
                    },
                    "description": "Newstyle:  (Block List) Nested block describing the request to use when displaying the widget. Multiple request blocks are allowed with the structure below (exactly one of q, apm_query, log_query, rum_query, security_query or process_query is required within the request block). (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "showLegend": {
                    "type": "boolean",
                    "description": "Newstyle:  (Boolean) Whether or not to show the legend on this widget.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "time": {
                    "$ref": "#/types/datadog:index/DashboardWidgetHeatmapDefinitionTime:DashboardWidgetHeatmapDefinitionTime",
                    "description": "Newstyle:  (Map of String, Deprecated) Nested block describing the timeframe to use when displaying the widget. The structure of this block is described below.  Define live_span directly in the widget definition instead.\n",
                    "deprecationMessage": "Define `live_span` directly in the widget definition instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "title": {
                    "type": "string",
                    "description": "Newstyle:  (String) The title of the widget.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleAlign": {
                    "type": "string",
                    "description": "Newstyle:  (String) The alignment of the widget's title. One of left, center, or right.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleSize": {
                    "type": "string",
                    "description": "Newstyle:  (String) The size of the widget's title. Default is 16.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "yaxis": {
                    "$ref": "#/types/datadog:index/DashboardWidgetHeatmapDefinitionYaxis:DashboardWidgetHeatmapDefinitionYaxis",
                    "description": "Newstyle:  (Block List, Max: 1) Nested block describing the Y-Axis Controls. The structure of this block is described below (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetHeatmapDefinitionCustomLink:DashboardWidgetHeatmapDefinitionCustomLink": {
            "properties": {
                "label": {
                    "type": "string",
                    "description": "Newstyle:  (String) The label for the custom link URL.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "link": {
                    "type": "string",
                    "description": "Newstyle:  (String) The URL of the custom link.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "label",
                "link"
            ]
        },
        "datadog:index/DashboardWidgetHeatmapDefinitionEvent:DashboardWidgetHeatmapDefinitionEvent": {
            "properties": {
                "q": {
                    "type": "string",
                    "description": "Newstyle:  (String) The metric query to use for this widget.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tagsExecution": {
                    "type": "string",
                    "description": "Newstyle:  (String) The execution method for multi-value filters.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "q"
            ]
        },
        "datadog:index/DashboardWidgetHeatmapDefinitionRequest:DashboardWidgetHeatmapDefinitionRequest": {
            "properties": {
                "apmQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetHeatmapDefinitionRequestApmQuery:DashboardWidgetHeatmapDefinitionRequestApmQuery",
                    "description": "Newstyle:  (Block List, Max: 1) The query to use for this widget. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetHeatmapDefinitionRequestLogQuery:DashboardWidgetHeatmapDefinitionRequestLogQuery",
                    "description": "Newstyle:  (Block List, Max: 1) The query to use for this widget. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "processQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetHeatmapDefinitionRequestProcessQuery:DashboardWidgetHeatmapDefinitionRequestProcessQuery",
                    "description": "Newstyle:  (Block List, Max: 1) Process query using formulas and functions. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "q": {
                    "type": "string",
                    "description": "Newstyle:  (String) The metric query to use for this widget.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "rumQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetHeatmapDefinitionRequestRumQuery:DashboardWidgetHeatmapDefinitionRequestRumQuery",
                    "description": "Newstyle:  (Block List, Max: 1) The query to use for this widget. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "securityQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetHeatmapDefinitionRequestSecurityQuery:DashboardWidgetHeatmapDefinitionRequestSecurityQuery",
                    "description": "Newstyle:  (Block List, Max: 1) The query to use for this widget. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "style": {
                    "$ref": "#/types/datadog:index/DashboardWidgetHeatmapDefinitionRequestStyle:DashboardWidgetHeatmapDefinitionRequestStyle",
                    "description": "Newstyle:  (Block List, Max: 1) Define request widget style. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetHeatmapDefinitionRequestApmQuery:DashboardWidgetHeatmapDefinitionRequestApmQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:index/DashboardWidgetHeatmapDefinitionRequestApmQueryCompute:DashboardWidgetHeatmapDefinitionRequestApmQueryCompute",
                    "description": "Newstyle:  (Map of String, Deprecated) One of compute or multi_compute is required. The map has the keys as below.  Define compute_query list with one element instead.\n",
                    "deprecationMessage": "Define `compute_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetHeatmapDefinitionRequestApmQueryComputeQuery:DashboardWidgetHeatmapDefinitionRequestApmQueryComputeQuery",
                    "description": "Newstyle:  (Block List, Max: 1) One of compute_query or multi_compute is required. The map has the keys as below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetHeatmapDefinitionRequestApmQueryGroupBy:DashboardWidgetHeatmapDefinitionRequestApmQueryGroupBy"
                    },
                    "description": "Newstyle:  (Block List) Multiple group_by blocks are allowed with the structure below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "description": "Newstyle:  (String) Name of the index to query.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetHeatmapDefinitionRequestApmQueryMultiCompute:DashboardWidgetHeatmapDefinitionRequestApmQueryMultiCompute"
                    },
                    "description": "Newstyle:  (Block List) One of compute_query or multi_compute is required. Multiple multi_compute blocks are allowed with the structure below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:index/DashboardWidgetHeatmapDefinitionRequestApmQuerySearch:DashboardWidgetHeatmapDefinitionRequestApmQuerySearch",
                    "description": "Newstyle:  (Map of String, Deprecated) Map defining the search query to use.  Define search_query directly instead.\n",
                    "deprecationMessage": "Define `search_query` directly instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchQuery": {
                    "type": "string",
                    "description": "Newstyle:  (String) The search query to use.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetHeatmapDefinitionRequestApmQueryCompute:DashboardWidgetHeatmapDefinitionRequestApmQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Define a time interval in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetHeatmapDefinitionRequestApmQueryComputeQuery:DashboardWidgetHeatmapDefinitionRequestApmQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Define a time interval in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetHeatmapDefinitionRequestApmQueryGroupBy:DashboardWidgetHeatmapDefinitionRequestApmQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Maximum number of items in the group.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:index/DashboardWidgetHeatmapDefinitionRequestApmQueryGroupBySort:DashboardWidgetHeatmapDefinitionRequestApmQueryGroupBySort",
                    "description": "Newstyle:  (Map of String, Deprecated) One map is allowed with the keys as below.  Define sort_query list with one element instead.\n",
                    "deprecationMessage": "Define `sort_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetHeatmapDefinitionRequestApmQueryGroupBySortQuery:DashboardWidgetHeatmapDefinitionRequestApmQueryGroupBySortQuery",
                    "description": "Newstyle:  (Block List, Max: 1) List of exactly one element describing the sort query to use. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetHeatmapDefinitionRequestApmQueryGroupBySort:DashboardWidgetHeatmapDefinitionRequestApmQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "description": "Newstyle:  (String) Widget sorting methods.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetHeatmapDefinitionRequestApmQueryGroupBySortQuery:DashboardWidgetHeatmapDefinitionRequestApmQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "description": "Newstyle:  (String) Widget sorting methods.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetHeatmapDefinitionRequestApmQueryMultiCompute:DashboardWidgetHeatmapDefinitionRequestApmQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Define a time interval in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetHeatmapDefinitionRequestApmQuerySearch:DashboardWidgetHeatmapDefinitionRequestApmQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "description": "Newstyle:  (String) Metrics query definition.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/DashboardWidgetHeatmapDefinitionRequestLogQuery:DashboardWidgetHeatmapDefinitionRequestLogQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:index/DashboardWidgetHeatmapDefinitionRequestLogQueryCompute:DashboardWidgetHeatmapDefinitionRequestLogQueryCompute",
                    "description": "Newstyle:  (Map of String, Deprecated) One of compute or multi_compute is required. The map has the keys as below.  Define compute_query list with one element instead.\n",
                    "deprecationMessage": "Define `compute_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetHeatmapDefinitionRequestLogQueryComputeQuery:DashboardWidgetHeatmapDefinitionRequestLogQueryComputeQuery",
                    "description": "Newstyle:  (Block List, Max: 1) One of compute_query or multi_compute is required. The map has the keys as below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetHeatmapDefinitionRequestLogQueryGroupBy:DashboardWidgetHeatmapDefinitionRequestLogQueryGroupBy"
                    },
                    "description": "Newstyle:  (Block List) Multiple group_by blocks are allowed with the structure below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "description": "Newstyle:  (String) Name of the index to query.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetHeatmapDefinitionRequestLogQueryMultiCompute:DashboardWidgetHeatmapDefinitionRequestLogQueryMultiCompute"
                    },
                    "description": "Newstyle:  (Block List) One of compute_query or multi_compute is required. Multiple multi_compute blocks are allowed with the structure below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:index/DashboardWidgetHeatmapDefinitionRequestLogQuerySearch:DashboardWidgetHeatmapDefinitionRequestLogQuerySearch",
                    "description": "Newstyle:  (Map of String, Deprecated) Map defining the search query to use.  Define search_query directly instead.\n",
                    "deprecationMessage": "Define `search_query` directly instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchQuery": {
                    "type": "string",
                    "description": "Newstyle:  (String) The search query to use.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetHeatmapDefinitionRequestLogQueryCompute:DashboardWidgetHeatmapDefinitionRequestLogQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Define a time interval in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetHeatmapDefinitionRequestLogQueryComputeQuery:DashboardWidgetHeatmapDefinitionRequestLogQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Define a time interval in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetHeatmapDefinitionRequestLogQueryGroupBy:DashboardWidgetHeatmapDefinitionRequestLogQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Maximum number of items in the group.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:index/DashboardWidgetHeatmapDefinitionRequestLogQueryGroupBySort:DashboardWidgetHeatmapDefinitionRequestLogQueryGroupBySort",
                    "description": "Newstyle:  (Map of String, Deprecated) One map is allowed with the keys as below.  Define sort_query list with one element instead.\n",
                    "deprecationMessage": "Define `sort_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetHeatmapDefinitionRequestLogQueryGroupBySortQuery:DashboardWidgetHeatmapDefinitionRequestLogQueryGroupBySortQuery",
                    "description": "Newstyle:  (Block List, Max: 1) List of exactly one element describing the sort query to use. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetHeatmapDefinitionRequestLogQueryGroupBySort:DashboardWidgetHeatmapDefinitionRequestLogQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "description": "Newstyle:  (String) Widget sorting methods.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetHeatmapDefinitionRequestLogQueryGroupBySortQuery:DashboardWidgetHeatmapDefinitionRequestLogQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "description": "Newstyle:  (String) Widget sorting methods.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetHeatmapDefinitionRequestLogQueryMultiCompute:DashboardWidgetHeatmapDefinitionRequestLogQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Define a time interval in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetHeatmapDefinitionRequestLogQuerySearch:DashboardWidgetHeatmapDefinitionRequestLogQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "description": "Newstyle:  (String) Metrics query definition.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/DashboardWidgetHeatmapDefinitionRequestProcessQuery:DashboardWidgetHeatmapDefinitionRequestProcessQuery": {
            "properties": {
                "filterBies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Newstyle:  (List of String) List of processes.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Maximum number of items in the group.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "metric": {
                    "type": "string",
                    "description": "Newstyle:  (String) Process metric name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchBy": {
                    "type": "string",
                    "description": "Newstyle:  (String) Your chosen search term.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "metric"
            ]
        },
        "datadog:index/DashboardWidgetHeatmapDefinitionRequestRumQuery:DashboardWidgetHeatmapDefinitionRequestRumQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:index/DashboardWidgetHeatmapDefinitionRequestRumQueryCompute:DashboardWidgetHeatmapDefinitionRequestRumQueryCompute",
                    "description": "Newstyle:  (Map of String, Deprecated) One of compute or multi_compute is required. The map has the keys as below.  Define compute_query list with one element instead.\n",
                    "deprecationMessage": "Define `compute_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetHeatmapDefinitionRequestRumQueryComputeQuery:DashboardWidgetHeatmapDefinitionRequestRumQueryComputeQuery",
                    "description": "Newstyle:  (Block List, Max: 1) One of compute_query or multi_compute is required. The map has the keys as below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetHeatmapDefinitionRequestRumQueryGroupBy:DashboardWidgetHeatmapDefinitionRequestRumQueryGroupBy"
                    },
                    "description": "Newstyle:  (Block List) Multiple group_by blocks are allowed with the structure below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "description": "Newstyle:  (String) Name of the index to query.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetHeatmapDefinitionRequestRumQueryMultiCompute:DashboardWidgetHeatmapDefinitionRequestRumQueryMultiCompute"
                    },
                    "description": "Newstyle:  (Block List) One of compute_query or multi_compute is required. Multiple multi_compute blocks are allowed with the structure below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:index/DashboardWidgetHeatmapDefinitionRequestRumQuerySearch:DashboardWidgetHeatmapDefinitionRequestRumQuerySearch",
                    "description": "Newstyle:  (Map of String, Deprecated) Map defining the search query to use.  Define search_query directly instead.\n",
                    "deprecationMessage": "Define `search_query` directly instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchQuery": {
                    "type": "string",
                    "description": "Newstyle:  (String) The search query to use.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetHeatmapDefinitionRequestRumQueryCompute:DashboardWidgetHeatmapDefinitionRequestRumQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Define a time interval in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetHeatmapDefinitionRequestRumQueryComputeQuery:DashboardWidgetHeatmapDefinitionRequestRumQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Define a time interval in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetHeatmapDefinitionRequestRumQueryGroupBy:DashboardWidgetHeatmapDefinitionRequestRumQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Maximum number of items in the group.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:index/DashboardWidgetHeatmapDefinitionRequestRumQueryGroupBySort:DashboardWidgetHeatmapDefinitionRequestRumQueryGroupBySort",
                    "description": "Newstyle:  (Map of String, Deprecated) One map is allowed with the keys as below.  Define sort_query list with one element instead.\n",
                    "deprecationMessage": "Define `sort_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetHeatmapDefinitionRequestRumQueryGroupBySortQuery:DashboardWidgetHeatmapDefinitionRequestRumQueryGroupBySortQuery",
                    "description": "Newstyle:  (Block List, Max: 1) List of exactly one element describing the sort query to use. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetHeatmapDefinitionRequestRumQueryGroupBySort:DashboardWidgetHeatmapDefinitionRequestRumQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "description": "Newstyle:  (String) Widget sorting methods.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetHeatmapDefinitionRequestRumQueryGroupBySortQuery:DashboardWidgetHeatmapDefinitionRequestRumQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "description": "Newstyle:  (String) Widget sorting methods.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetHeatmapDefinitionRequestRumQueryMultiCompute:DashboardWidgetHeatmapDefinitionRequestRumQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Define a time interval in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetHeatmapDefinitionRequestRumQuerySearch:DashboardWidgetHeatmapDefinitionRequestRumQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "description": "Newstyle:  (String) Metrics query definition.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/DashboardWidgetHeatmapDefinitionRequestSecurityQuery:DashboardWidgetHeatmapDefinitionRequestSecurityQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:index/DashboardWidgetHeatmapDefinitionRequestSecurityQueryCompute:DashboardWidgetHeatmapDefinitionRequestSecurityQueryCompute",
                    "description": "Newstyle:  (Map of String, Deprecated) One of compute or multi_compute is required. The map has the keys as below.  Define compute_query list with one element instead.\n",
                    "deprecationMessage": "Define `compute_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetHeatmapDefinitionRequestSecurityQueryComputeQuery:DashboardWidgetHeatmapDefinitionRequestSecurityQueryComputeQuery",
                    "description": "Newstyle:  (Block List, Max: 1) One of compute_query or multi_compute is required. The map has the keys as below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetHeatmapDefinitionRequestSecurityQueryGroupBy:DashboardWidgetHeatmapDefinitionRequestSecurityQueryGroupBy"
                    },
                    "description": "Newstyle:  (Block List) Multiple group_by blocks are allowed with the structure below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "description": "Newstyle:  (String) Name of the index to query.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetHeatmapDefinitionRequestSecurityQueryMultiCompute:DashboardWidgetHeatmapDefinitionRequestSecurityQueryMultiCompute"
                    },
                    "description": "Newstyle:  (Block List) One of compute_query or multi_compute is required. Multiple multi_compute blocks are allowed with the structure below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:index/DashboardWidgetHeatmapDefinitionRequestSecurityQuerySearch:DashboardWidgetHeatmapDefinitionRequestSecurityQuerySearch",
                    "description": "Newstyle:  (Map of String, Deprecated) Map defining the search query to use.  Define search_query directly instead.\n",
                    "deprecationMessage": "Define `search_query` directly instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchQuery": {
                    "type": "string",
                    "description": "Newstyle:  (String) The search query to use.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetHeatmapDefinitionRequestSecurityQueryCompute:DashboardWidgetHeatmapDefinitionRequestSecurityQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Define a time interval in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetHeatmapDefinitionRequestSecurityQueryComputeQuery:DashboardWidgetHeatmapDefinitionRequestSecurityQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Define a time interval in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetHeatmapDefinitionRequestSecurityQueryGroupBy:DashboardWidgetHeatmapDefinitionRequestSecurityQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Maximum number of items in the group.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:index/DashboardWidgetHeatmapDefinitionRequestSecurityQueryGroupBySort:DashboardWidgetHeatmapDefinitionRequestSecurityQueryGroupBySort",
                    "description": "Newstyle:  (Map of String, Deprecated) One map is allowed with the keys as below.  Define sort_query list with one element instead.\n",
                    "deprecationMessage": "Define `sort_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetHeatmapDefinitionRequestSecurityQueryGroupBySortQuery:DashboardWidgetHeatmapDefinitionRequestSecurityQueryGroupBySortQuery",
                    "description": "Newstyle:  (Block List, Max: 1) List of exactly one element describing the sort query to use. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetHeatmapDefinitionRequestSecurityQueryGroupBySort:DashboardWidgetHeatmapDefinitionRequestSecurityQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "description": "Newstyle:  (String) Widget sorting methods.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetHeatmapDefinitionRequestSecurityQueryGroupBySortQuery:DashboardWidgetHeatmapDefinitionRequestSecurityQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "description": "Newstyle:  (String) Widget sorting methods.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetHeatmapDefinitionRequestSecurityQueryMultiCompute:DashboardWidgetHeatmapDefinitionRequestSecurityQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Define a time interval in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetHeatmapDefinitionRequestSecurityQuerySearch:DashboardWidgetHeatmapDefinitionRequestSecurityQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "description": "Newstyle:  (String) Metrics query definition.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/DashboardWidgetHeatmapDefinitionRequestStyle:DashboardWidgetHeatmapDefinitionRequestStyle": {
            "properties": {
                "palette": {
                    "type": "string",
                    "description": "Newstyle:  (String) Color palette to apply to the widget. The available options are available here: https://docs.datadoghq.com/dashboards/widgets/timeseries/#appearance.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetHeatmapDefinitionTime:DashboardWidgetHeatmapDefinitionTime": {
            "properties": {
                "liveSpan": {
                    "type": "string",
                    "description": "Newstyle:  (String) The timeframe to use when displaying the widget. One of 10m, 30m, 1h, 4h, 1d, 2d, 1w, 1mo, 3mo, 6mo, 1y, alert.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetHeatmapDefinitionYaxis:DashboardWidgetHeatmapDefinitionYaxis": {
            "properties": {
                "includeZero": {
                    "type": "boolean",
                    "description": "Newstyle:  (Boolean) Always include zero or fit the axis to the data range.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "label": {
                    "type": "string",
                    "description": "Newstyle:  (String) The label for the custom link URL.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "max": {
                    "type": "string",
                    "description": "Newstyle:  (String) Specify the maximum value to show on the Y-axis.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "min": {
                    "type": "string",
                    "description": "Newstyle:  (String) Specify the minimum value to show on the Y-axis.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "scale": {
                    "type": "string",
                    "description": "Newstyle:  (String) Specifies the scale type. One of linear, log, pow, sqrt.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetHostmapDefinition:DashboardWidgetHostmapDefinition": {
            "properties": {
                "customLinks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetHostmapDefinitionCustomLink:DashboardWidgetHostmapDefinitionCustomLink"
                    },
                    "description": "Newstyle:  (Block List) Nested block describing a custom link. Multiple custom_link blocks are allowed with the structure below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Newstyle:  (List of String) The list of tags to group nodes by.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "noGroupHosts": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "noMetricHosts": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "nodeType": {
                    "type": "string",
                    "description": "Newstyle:  (String) The type of node used. Either host or container.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "request": {
                    "$ref": "#/types/datadog:index/DashboardWidgetHostmapDefinitionRequest:DashboardWidgetHostmapDefinitionRequest",
                    "description": "Newstyle:  (Block List) Nested block describing the request to use when displaying the widget. Multiple request blocks are allowed with the structure below (exactly one of q, apm_query, log_query, rum_query, security_query or process_query is required within the request block). (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "scopes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Newstyle:  (List of String) The list of tags to filter nodes by.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "style": {
                    "$ref": "#/types/datadog:index/DashboardWidgetHostmapDefinitionStyle:DashboardWidgetHostmapDefinitionStyle",
                    "description": "Newstyle:  (Block List, Max: 1) Define request widget style. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "title": {
                    "type": "string",
                    "description": "Newstyle:  (String) The title of the widget.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleAlign": {
                    "type": "string",
                    "description": "Newstyle:  (String) The alignment of the widget's title. One of left, center, or right.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleSize": {
                    "type": "string",
                    "description": "Newstyle:  (String) The size of the widget's title. Default is 16.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetHostmapDefinitionCustomLink:DashboardWidgetHostmapDefinitionCustomLink": {
            "properties": {
                "label": {
                    "type": "string",
                    "description": "Newstyle:  (String) The label for the custom link URL.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "link": {
                    "type": "string",
                    "description": "Newstyle:  (String) The URL of the custom link.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "label",
                "link"
            ]
        },
        "datadog:index/DashboardWidgetHostmapDefinitionRequest:DashboardWidgetHostmapDefinitionRequest": {
            "properties": {
                "fills": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetHostmapDefinitionRequestFill:DashboardWidgetHostmapDefinitionRequestFill"
                    },
                    "description": "Newstyle:  (Block List) The query used to fill the map. Exactly one nested block is allowed with the structure below (exactly one of q, apm_query, log_query, rum_query, security_query or process_query is required within the request block). (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sizes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetHostmapDefinitionRequestSize:DashboardWidgetHostmapDefinitionRequestSize"
                    },
                    "description": "Newstyle:  (Block List) The query used to size the map. Exactly one nested block is allowed with the structure below (exactly one of q, apm_query, log_query, rum_query, security_query or process_query is required within the request block). (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetHostmapDefinitionRequestFill:DashboardWidgetHostmapDefinitionRequestFill": {
            "properties": {
                "apmQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetHostmapDefinitionRequestFillApmQuery:DashboardWidgetHostmapDefinitionRequestFillApmQuery",
                    "description": "Newstyle:  (Block List, Max: 1) The query to use for this widget. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetHostmapDefinitionRequestFillLogQuery:DashboardWidgetHostmapDefinitionRequestFillLogQuery",
                    "description": "Newstyle:  (Block List, Max: 1) The query to use for this widget. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "processQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetHostmapDefinitionRequestFillProcessQuery:DashboardWidgetHostmapDefinitionRequestFillProcessQuery",
                    "description": "Newstyle:  (Block List, Max: 1) Process query using formulas and functions. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "q": {
                    "type": "string",
                    "description": "Newstyle:  (String) The metric query to use for this widget.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "rumQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetHostmapDefinitionRequestFillRumQuery:DashboardWidgetHostmapDefinitionRequestFillRumQuery",
                    "description": "Newstyle:  (Block List, Max: 1) The query to use for this widget. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "securityQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetHostmapDefinitionRequestFillSecurityQuery:DashboardWidgetHostmapDefinitionRequestFillSecurityQuery",
                    "description": "Newstyle:  (Block List, Max: 1) The query to use for this widget. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetHostmapDefinitionRequestFillApmQuery:DashboardWidgetHostmapDefinitionRequestFillApmQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:index/DashboardWidgetHostmapDefinitionRequestFillApmQueryCompute:DashboardWidgetHostmapDefinitionRequestFillApmQueryCompute",
                    "description": "Newstyle:  (Map of String, Deprecated) One of compute or multi_compute is required. The map has the keys as below.  Define compute_query list with one element instead.\n",
                    "deprecationMessage": "Define `compute_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetHostmapDefinitionRequestFillApmQueryComputeQuery:DashboardWidgetHostmapDefinitionRequestFillApmQueryComputeQuery",
                    "description": "Newstyle:  (Block List, Max: 1) One of compute_query or multi_compute is required. The map has the keys as below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetHostmapDefinitionRequestFillApmQueryGroupBy:DashboardWidgetHostmapDefinitionRequestFillApmQueryGroupBy"
                    },
                    "description": "Newstyle:  (Block List) Multiple group_by blocks are allowed with the structure below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "description": "Newstyle:  (String) Name of the index to query.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetHostmapDefinitionRequestFillApmQueryMultiCompute:DashboardWidgetHostmapDefinitionRequestFillApmQueryMultiCompute"
                    },
                    "description": "Newstyle:  (Block List) One of compute_query or multi_compute is required. Multiple multi_compute blocks are allowed with the structure below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:index/DashboardWidgetHostmapDefinitionRequestFillApmQuerySearch:DashboardWidgetHostmapDefinitionRequestFillApmQuerySearch",
                    "description": "Newstyle:  (Map of String, Deprecated) Map defining the search query to use.  Define search_query directly instead.\n",
                    "deprecationMessage": "Define `search_query` directly instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchQuery": {
                    "type": "string",
                    "description": "Newstyle:  (String) The search query to use.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetHostmapDefinitionRequestFillApmQueryCompute:DashboardWidgetHostmapDefinitionRequestFillApmQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Define a time interval in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetHostmapDefinitionRequestFillApmQueryComputeQuery:DashboardWidgetHostmapDefinitionRequestFillApmQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Define a time interval in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetHostmapDefinitionRequestFillApmQueryGroupBy:DashboardWidgetHostmapDefinitionRequestFillApmQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Maximum number of items in the group.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:index/DashboardWidgetHostmapDefinitionRequestFillApmQueryGroupBySort:DashboardWidgetHostmapDefinitionRequestFillApmQueryGroupBySort",
                    "description": "Newstyle:  (Map of String, Deprecated) One map is allowed with the keys as below.  Define sort_query list with one element instead.\n",
                    "deprecationMessage": "Define `sort_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetHostmapDefinitionRequestFillApmQueryGroupBySortQuery:DashboardWidgetHostmapDefinitionRequestFillApmQueryGroupBySortQuery",
                    "description": "Newstyle:  (Block List, Max: 1) List of exactly one element describing the sort query to use. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetHostmapDefinitionRequestFillApmQueryGroupBySort:DashboardWidgetHostmapDefinitionRequestFillApmQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "description": "Newstyle:  (String) Widget sorting methods.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetHostmapDefinitionRequestFillApmQueryGroupBySortQuery:DashboardWidgetHostmapDefinitionRequestFillApmQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "description": "Newstyle:  (String) Widget sorting methods.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetHostmapDefinitionRequestFillApmQueryMultiCompute:DashboardWidgetHostmapDefinitionRequestFillApmQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Define a time interval in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetHostmapDefinitionRequestFillApmQuerySearch:DashboardWidgetHostmapDefinitionRequestFillApmQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "description": "Newstyle:  (String) Metrics query definition.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/DashboardWidgetHostmapDefinitionRequestFillLogQuery:DashboardWidgetHostmapDefinitionRequestFillLogQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:index/DashboardWidgetHostmapDefinitionRequestFillLogQueryCompute:DashboardWidgetHostmapDefinitionRequestFillLogQueryCompute",
                    "description": "Newstyle:  (Map of String, Deprecated) One of compute or multi_compute is required. The map has the keys as below.  Define compute_query list with one element instead.\n",
                    "deprecationMessage": "Define `compute_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetHostmapDefinitionRequestFillLogQueryComputeQuery:DashboardWidgetHostmapDefinitionRequestFillLogQueryComputeQuery",
                    "description": "Newstyle:  (Block List, Max: 1) One of compute_query or multi_compute is required. The map has the keys as below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetHostmapDefinitionRequestFillLogQueryGroupBy:DashboardWidgetHostmapDefinitionRequestFillLogQueryGroupBy"
                    },
                    "description": "Newstyle:  (Block List) Multiple group_by blocks are allowed with the structure below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "description": "Newstyle:  (String) Name of the index to query.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetHostmapDefinitionRequestFillLogQueryMultiCompute:DashboardWidgetHostmapDefinitionRequestFillLogQueryMultiCompute"
                    },
                    "description": "Newstyle:  (Block List) One of compute_query or multi_compute is required. Multiple multi_compute blocks are allowed with the structure below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:index/DashboardWidgetHostmapDefinitionRequestFillLogQuerySearch:DashboardWidgetHostmapDefinitionRequestFillLogQuerySearch",
                    "description": "Newstyle:  (Map of String, Deprecated) Map defining the search query to use.  Define search_query directly instead.\n",
                    "deprecationMessage": "Define `search_query` directly instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchQuery": {
                    "type": "string",
                    "description": "Newstyle:  (String) The search query to use.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetHostmapDefinitionRequestFillLogQueryCompute:DashboardWidgetHostmapDefinitionRequestFillLogQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Define a time interval in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetHostmapDefinitionRequestFillLogQueryComputeQuery:DashboardWidgetHostmapDefinitionRequestFillLogQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Define a time interval in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetHostmapDefinitionRequestFillLogQueryGroupBy:DashboardWidgetHostmapDefinitionRequestFillLogQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Maximum number of items in the group.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:index/DashboardWidgetHostmapDefinitionRequestFillLogQueryGroupBySort:DashboardWidgetHostmapDefinitionRequestFillLogQueryGroupBySort",
                    "description": "Newstyle:  (Map of String, Deprecated) One map is allowed with the keys as below.  Define sort_query list with one element instead.\n",
                    "deprecationMessage": "Define `sort_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetHostmapDefinitionRequestFillLogQueryGroupBySortQuery:DashboardWidgetHostmapDefinitionRequestFillLogQueryGroupBySortQuery",
                    "description": "Newstyle:  (Block List, Max: 1) List of exactly one element describing the sort query to use. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetHostmapDefinitionRequestFillLogQueryGroupBySort:DashboardWidgetHostmapDefinitionRequestFillLogQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "description": "Newstyle:  (String) Widget sorting methods.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetHostmapDefinitionRequestFillLogQueryGroupBySortQuery:DashboardWidgetHostmapDefinitionRequestFillLogQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "description": "Newstyle:  (String) Widget sorting methods.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetHostmapDefinitionRequestFillLogQueryMultiCompute:DashboardWidgetHostmapDefinitionRequestFillLogQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Define a time interval in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetHostmapDefinitionRequestFillLogQuerySearch:DashboardWidgetHostmapDefinitionRequestFillLogQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "description": "Newstyle:  (String) Metrics query definition.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/DashboardWidgetHostmapDefinitionRequestFillProcessQuery:DashboardWidgetHostmapDefinitionRequestFillProcessQuery": {
            "properties": {
                "filterBies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Newstyle:  (List of String) List of processes.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Maximum number of items in the group.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "metric": {
                    "type": "string",
                    "description": "Newstyle:  (String) Process metric name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchBy": {
                    "type": "string",
                    "description": "Newstyle:  (String) Your chosen search term.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "metric"
            ]
        },
        "datadog:index/DashboardWidgetHostmapDefinitionRequestFillRumQuery:DashboardWidgetHostmapDefinitionRequestFillRumQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:index/DashboardWidgetHostmapDefinitionRequestFillRumQueryCompute:DashboardWidgetHostmapDefinitionRequestFillRumQueryCompute",
                    "description": "Newstyle:  (Map of String, Deprecated) One of compute or multi_compute is required. The map has the keys as below.  Define compute_query list with one element instead.\n",
                    "deprecationMessage": "Define `compute_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetHostmapDefinitionRequestFillRumQueryComputeQuery:DashboardWidgetHostmapDefinitionRequestFillRumQueryComputeQuery",
                    "description": "Newstyle:  (Block List, Max: 1) One of compute_query or multi_compute is required. The map has the keys as below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetHostmapDefinitionRequestFillRumQueryGroupBy:DashboardWidgetHostmapDefinitionRequestFillRumQueryGroupBy"
                    },
                    "description": "Newstyle:  (Block List) Multiple group_by blocks are allowed with the structure below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "description": "Newstyle:  (String) Name of the index to query.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetHostmapDefinitionRequestFillRumQueryMultiCompute:DashboardWidgetHostmapDefinitionRequestFillRumQueryMultiCompute"
                    },
                    "description": "Newstyle:  (Block List) One of compute_query or multi_compute is required. Multiple multi_compute blocks are allowed with the structure below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:index/DashboardWidgetHostmapDefinitionRequestFillRumQuerySearch:DashboardWidgetHostmapDefinitionRequestFillRumQuerySearch",
                    "description": "Newstyle:  (Map of String, Deprecated) Map defining the search query to use.  Define search_query directly instead.\n",
                    "deprecationMessage": "Define `search_query` directly instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchQuery": {
                    "type": "string",
                    "description": "Newstyle:  (String) The search query to use.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetHostmapDefinitionRequestFillRumQueryCompute:DashboardWidgetHostmapDefinitionRequestFillRumQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Define a time interval in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetHostmapDefinitionRequestFillRumQueryComputeQuery:DashboardWidgetHostmapDefinitionRequestFillRumQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Define a time interval in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetHostmapDefinitionRequestFillRumQueryGroupBy:DashboardWidgetHostmapDefinitionRequestFillRumQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Maximum number of items in the group.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:index/DashboardWidgetHostmapDefinitionRequestFillRumQueryGroupBySort:DashboardWidgetHostmapDefinitionRequestFillRumQueryGroupBySort",
                    "description": "Newstyle:  (Map of String, Deprecated) One map is allowed with the keys as below.  Define sort_query list with one element instead.\n",
                    "deprecationMessage": "Define `sort_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetHostmapDefinitionRequestFillRumQueryGroupBySortQuery:DashboardWidgetHostmapDefinitionRequestFillRumQueryGroupBySortQuery",
                    "description": "Newstyle:  (Block List, Max: 1) List of exactly one element describing the sort query to use. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetHostmapDefinitionRequestFillRumQueryGroupBySort:DashboardWidgetHostmapDefinitionRequestFillRumQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "description": "Newstyle:  (String) Widget sorting methods.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetHostmapDefinitionRequestFillRumQueryGroupBySortQuery:DashboardWidgetHostmapDefinitionRequestFillRumQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "description": "Newstyle:  (String) Widget sorting methods.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetHostmapDefinitionRequestFillRumQueryMultiCompute:DashboardWidgetHostmapDefinitionRequestFillRumQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Define a time interval in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetHostmapDefinitionRequestFillRumQuerySearch:DashboardWidgetHostmapDefinitionRequestFillRumQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "description": "Newstyle:  (String) Metrics query definition.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/DashboardWidgetHostmapDefinitionRequestFillSecurityQuery:DashboardWidgetHostmapDefinitionRequestFillSecurityQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:index/DashboardWidgetHostmapDefinitionRequestFillSecurityQueryCompute:DashboardWidgetHostmapDefinitionRequestFillSecurityQueryCompute",
                    "description": "Newstyle:  (Map of String, Deprecated) One of compute or multi_compute is required. The map has the keys as below.  Define compute_query list with one element instead.\n",
                    "deprecationMessage": "Define `compute_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetHostmapDefinitionRequestFillSecurityQueryComputeQuery:DashboardWidgetHostmapDefinitionRequestFillSecurityQueryComputeQuery",
                    "description": "Newstyle:  (Block List, Max: 1) One of compute_query or multi_compute is required. The map has the keys as below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetHostmapDefinitionRequestFillSecurityQueryGroupBy:DashboardWidgetHostmapDefinitionRequestFillSecurityQueryGroupBy"
                    },
                    "description": "Newstyle:  (Block List) Multiple group_by blocks are allowed with the structure below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "description": "Newstyle:  (String) Name of the index to query.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetHostmapDefinitionRequestFillSecurityQueryMultiCompute:DashboardWidgetHostmapDefinitionRequestFillSecurityQueryMultiCompute"
                    },
                    "description": "Newstyle:  (Block List) One of compute_query or multi_compute is required. Multiple multi_compute blocks are allowed with the structure below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:index/DashboardWidgetHostmapDefinitionRequestFillSecurityQuerySearch:DashboardWidgetHostmapDefinitionRequestFillSecurityQuerySearch",
                    "description": "Newstyle:  (Map of String, Deprecated) Map defining the search query to use.  Define search_query directly instead.\n",
                    "deprecationMessage": "Define `search_query` directly instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchQuery": {
                    "type": "string",
                    "description": "Newstyle:  (String) The search query to use.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetHostmapDefinitionRequestFillSecurityQueryCompute:DashboardWidgetHostmapDefinitionRequestFillSecurityQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Define a time interval in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetHostmapDefinitionRequestFillSecurityQueryComputeQuery:DashboardWidgetHostmapDefinitionRequestFillSecurityQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Define a time interval in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetHostmapDefinitionRequestFillSecurityQueryGroupBy:DashboardWidgetHostmapDefinitionRequestFillSecurityQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Maximum number of items in the group.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:index/DashboardWidgetHostmapDefinitionRequestFillSecurityQueryGroupBySort:DashboardWidgetHostmapDefinitionRequestFillSecurityQueryGroupBySort",
                    "description": "Newstyle:  (Map of String, Deprecated) One map is allowed with the keys as below.  Define sort_query list with one element instead.\n",
                    "deprecationMessage": "Define `sort_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetHostmapDefinitionRequestFillSecurityQueryGroupBySortQuery:DashboardWidgetHostmapDefinitionRequestFillSecurityQueryGroupBySortQuery",
                    "description": "Newstyle:  (Block List, Max: 1) List of exactly one element describing the sort query to use. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetHostmapDefinitionRequestFillSecurityQueryGroupBySort:DashboardWidgetHostmapDefinitionRequestFillSecurityQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "description": "Newstyle:  (String) Widget sorting methods.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetHostmapDefinitionRequestFillSecurityQueryGroupBySortQuery:DashboardWidgetHostmapDefinitionRequestFillSecurityQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "description": "Newstyle:  (String) Widget sorting methods.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetHostmapDefinitionRequestFillSecurityQueryMultiCompute:DashboardWidgetHostmapDefinitionRequestFillSecurityQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Define a time interval in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetHostmapDefinitionRequestFillSecurityQuerySearch:DashboardWidgetHostmapDefinitionRequestFillSecurityQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "description": "Newstyle:  (String) Metrics query definition.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/DashboardWidgetHostmapDefinitionRequestSize:DashboardWidgetHostmapDefinitionRequestSize": {
            "properties": {
                "apmQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetHostmapDefinitionRequestSizeApmQuery:DashboardWidgetHostmapDefinitionRequestSizeApmQuery",
                    "description": "Newstyle:  (Block List, Max: 1) The query to use for this widget. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetHostmapDefinitionRequestSizeLogQuery:DashboardWidgetHostmapDefinitionRequestSizeLogQuery",
                    "description": "Newstyle:  (Block List, Max: 1) The query to use for this widget. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "processQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetHostmapDefinitionRequestSizeProcessQuery:DashboardWidgetHostmapDefinitionRequestSizeProcessQuery",
                    "description": "Newstyle:  (Block List, Max: 1) Process query using formulas and functions. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "q": {
                    "type": "string",
                    "description": "Newstyle:  (String) The metric query to use for this widget.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "rumQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetHostmapDefinitionRequestSizeRumQuery:DashboardWidgetHostmapDefinitionRequestSizeRumQuery",
                    "description": "Newstyle:  (Block List, Max: 1) The query to use for this widget. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "securityQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetHostmapDefinitionRequestSizeSecurityQuery:DashboardWidgetHostmapDefinitionRequestSizeSecurityQuery",
                    "description": "Newstyle:  (Block List, Max: 1) The query to use for this widget. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetHostmapDefinitionRequestSizeApmQuery:DashboardWidgetHostmapDefinitionRequestSizeApmQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:index/DashboardWidgetHostmapDefinitionRequestSizeApmQueryCompute:DashboardWidgetHostmapDefinitionRequestSizeApmQueryCompute",
                    "description": "Newstyle:  (Map of String, Deprecated) One of compute or multi_compute is required. The map has the keys as below.  Define compute_query list with one element instead.\n",
                    "deprecationMessage": "Define `compute_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetHostmapDefinitionRequestSizeApmQueryComputeQuery:DashboardWidgetHostmapDefinitionRequestSizeApmQueryComputeQuery",
                    "description": "Newstyle:  (Block List, Max: 1) One of compute_query or multi_compute is required. The map has the keys as below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetHostmapDefinitionRequestSizeApmQueryGroupBy:DashboardWidgetHostmapDefinitionRequestSizeApmQueryGroupBy"
                    },
                    "description": "Newstyle:  (Block List) Multiple group_by blocks are allowed with the structure below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "description": "Newstyle:  (String) Name of the index to query.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetHostmapDefinitionRequestSizeApmQueryMultiCompute:DashboardWidgetHostmapDefinitionRequestSizeApmQueryMultiCompute"
                    },
                    "description": "Newstyle:  (Block List) One of compute_query or multi_compute is required. Multiple multi_compute blocks are allowed with the structure below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:index/DashboardWidgetHostmapDefinitionRequestSizeApmQuerySearch:DashboardWidgetHostmapDefinitionRequestSizeApmQuerySearch",
                    "description": "Newstyle:  (Map of String, Deprecated) Map defining the search query to use.  Define search_query directly instead.\n",
                    "deprecationMessage": "Define `search_query` directly instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchQuery": {
                    "type": "string",
                    "description": "Newstyle:  (String) The search query to use.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetHostmapDefinitionRequestSizeApmQueryCompute:DashboardWidgetHostmapDefinitionRequestSizeApmQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Define a time interval in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetHostmapDefinitionRequestSizeApmQueryComputeQuery:DashboardWidgetHostmapDefinitionRequestSizeApmQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Define a time interval in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetHostmapDefinitionRequestSizeApmQueryGroupBy:DashboardWidgetHostmapDefinitionRequestSizeApmQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Maximum number of items in the group.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:index/DashboardWidgetHostmapDefinitionRequestSizeApmQueryGroupBySort:DashboardWidgetHostmapDefinitionRequestSizeApmQueryGroupBySort",
                    "description": "Newstyle:  (Map of String, Deprecated) One map is allowed with the keys as below.  Define sort_query list with one element instead.\n",
                    "deprecationMessage": "Define `sort_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetHostmapDefinitionRequestSizeApmQueryGroupBySortQuery:DashboardWidgetHostmapDefinitionRequestSizeApmQueryGroupBySortQuery",
                    "description": "Newstyle:  (Block List, Max: 1) List of exactly one element describing the sort query to use. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetHostmapDefinitionRequestSizeApmQueryGroupBySort:DashboardWidgetHostmapDefinitionRequestSizeApmQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "description": "Newstyle:  (String) Widget sorting methods.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetHostmapDefinitionRequestSizeApmQueryGroupBySortQuery:DashboardWidgetHostmapDefinitionRequestSizeApmQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "description": "Newstyle:  (String) Widget sorting methods.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetHostmapDefinitionRequestSizeApmQueryMultiCompute:DashboardWidgetHostmapDefinitionRequestSizeApmQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Define a time interval in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetHostmapDefinitionRequestSizeApmQuerySearch:DashboardWidgetHostmapDefinitionRequestSizeApmQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "description": "Newstyle:  (String) Metrics query definition.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/DashboardWidgetHostmapDefinitionRequestSizeLogQuery:DashboardWidgetHostmapDefinitionRequestSizeLogQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:index/DashboardWidgetHostmapDefinitionRequestSizeLogQueryCompute:DashboardWidgetHostmapDefinitionRequestSizeLogQueryCompute",
                    "description": "Newstyle:  (Map of String, Deprecated) One of compute or multi_compute is required. The map has the keys as below.  Define compute_query list with one element instead.\n",
                    "deprecationMessage": "Define `compute_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetHostmapDefinitionRequestSizeLogQueryComputeQuery:DashboardWidgetHostmapDefinitionRequestSizeLogQueryComputeQuery",
                    "description": "Newstyle:  (Block List, Max: 1) One of compute_query or multi_compute is required. The map has the keys as below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetHostmapDefinitionRequestSizeLogQueryGroupBy:DashboardWidgetHostmapDefinitionRequestSizeLogQueryGroupBy"
                    },
                    "description": "Newstyle:  (Block List) Multiple group_by blocks are allowed with the structure below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "description": "Newstyle:  (String) Name of the index to query.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetHostmapDefinitionRequestSizeLogQueryMultiCompute:DashboardWidgetHostmapDefinitionRequestSizeLogQueryMultiCompute"
                    },
                    "description": "Newstyle:  (Block List) One of compute_query or multi_compute is required. Multiple multi_compute blocks are allowed with the structure below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:index/DashboardWidgetHostmapDefinitionRequestSizeLogQuerySearch:DashboardWidgetHostmapDefinitionRequestSizeLogQuerySearch",
                    "description": "Newstyle:  (Map of String, Deprecated) Map defining the search query to use.  Define search_query directly instead.\n",
                    "deprecationMessage": "Define `search_query` directly instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchQuery": {
                    "type": "string",
                    "description": "Newstyle:  (String) The search query to use.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetHostmapDefinitionRequestSizeLogQueryCompute:DashboardWidgetHostmapDefinitionRequestSizeLogQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Define a time interval in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetHostmapDefinitionRequestSizeLogQueryComputeQuery:DashboardWidgetHostmapDefinitionRequestSizeLogQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Define a time interval in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetHostmapDefinitionRequestSizeLogQueryGroupBy:DashboardWidgetHostmapDefinitionRequestSizeLogQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Maximum number of items in the group.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:index/DashboardWidgetHostmapDefinitionRequestSizeLogQueryGroupBySort:DashboardWidgetHostmapDefinitionRequestSizeLogQueryGroupBySort",
                    "description": "Newstyle:  (Map of String, Deprecated) One map is allowed with the keys as below.  Define sort_query list with one element instead.\n",
                    "deprecationMessage": "Define `sort_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetHostmapDefinitionRequestSizeLogQueryGroupBySortQuery:DashboardWidgetHostmapDefinitionRequestSizeLogQueryGroupBySortQuery",
                    "description": "Newstyle:  (Block List, Max: 1) List of exactly one element describing the sort query to use. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetHostmapDefinitionRequestSizeLogQueryGroupBySort:DashboardWidgetHostmapDefinitionRequestSizeLogQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "description": "Newstyle:  (String) Widget sorting methods.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetHostmapDefinitionRequestSizeLogQueryGroupBySortQuery:DashboardWidgetHostmapDefinitionRequestSizeLogQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "description": "Newstyle:  (String) Widget sorting methods.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetHostmapDefinitionRequestSizeLogQueryMultiCompute:DashboardWidgetHostmapDefinitionRequestSizeLogQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Define a time interval in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetHostmapDefinitionRequestSizeLogQuerySearch:DashboardWidgetHostmapDefinitionRequestSizeLogQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "description": "Newstyle:  (String) Metrics query definition.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/DashboardWidgetHostmapDefinitionRequestSizeProcessQuery:DashboardWidgetHostmapDefinitionRequestSizeProcessQuery": {
            "properties": {
                "filterBies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Newstyle:  (List of String) List of processes.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Maximum number of items in the group.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "metric": {
                    "type": "string",
                    "description": "Newstyle:  (String) Process metric name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchBy": {
                    "type": "string",
                    "description": "Newstyle:  (String) Your chosen search term.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "metric"
            ]
        },
        "datadog:index/DashboardWidgetHostmapDefinitionRequestSizeRumQuery:DashboardWidgetHostmapDefinitionRequestSizeRumQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:index/DashboardWidgetHostmapDefinitionRequestSizeRumQueryCompute:DashboardWidgetHostmapDefinitionRequestSizeRumQueryCompute",
                    "description": "Newstyle:  (Map of String, Deprecated) One of compute or multi_compute is required. The map has the keys as below.  Define compute_query list with one element instead.\n",
                    "deprecationMessage": "Define `compute_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetHostmapDefinitionRequestSizeRumQueryComputeQuery:DashboardWidgetHostmapDefinitionRequestSizeRumQueryComputeQuery",
                    "description": "Newstyle:  (Block List, Max: 1) One of compute_query or multi_compute is required. The map has the keys as below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetHostmapDefinitionRequestSizeRumQueryGroupBy:DashboardWidgetHostmapDefinitionRequestSizeRumQueryGroupBy"
                    },
                    "description": "Newstyle:  (Block List) Multiple group_by blocks are allowed with the structure below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "description": "Newstyle:  (String) Name of the index to query.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetHostmapDefinitionRequestSizeRumQueryMultiCompute:DashboardWidgetHostmapDefinitionRequestSizeRumQueryMultiCompute"
                    },
                    "description": "Newstyle:  (Block List) One of compute_query or multi_compute is required. Multiple multi_compute blocks are allowed with the structure below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:index/DashboardWidgetHostmapDefinitionRequestSizeRumQuerySearch:DashboardWidgetHostmapDefinitionRequestSizeRumQuerySearch",
                    "description": "Newstyle:  (Map of String, Deprecated) Map defining the search query to use.  Define search_query directly instead.\n",
                    "deprecationMessage": "Define `search_query` directly instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchQuery": {
                    "type": "string",
                    "description": "Newstyle:  (String) The search query to use.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetHostmapDefinitionRequestSizeRumQueryCompute:DashboardWidgetHostmapDefinitionRequestSizeRumQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Define a time interval in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetHostmapDefinitionRequestSizeRumQueryComputeQuery:DashboardWidgetHostmapDefinitionRequestSizeRumQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Define a time interval in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetHostmapDefinitionRequestSizeRumQueryGroupBy:DashboardWidgetHostmapDefinitionRequestSizeRumQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Maximum number of items in the group.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:index/DashboardWidgetHostmapDefinitionRequestSizeRumQueryGroupBySort:DashboardWidgetHostmapDefinitionRequestSizeRumQueryGroupBySort",
                    "description": "Newstyle:  (Map of String, Deprecated) One map is allowed with the keys as below.  Define sort_query list with one element instead.\n",
                    "deprecationMessage": "Define `sort_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetHostmapDefinitionRequestSizeRumQueryGroupBySortQuery:DashboardWidgetHostmapDefinitionRequestSizeRumQueryGroupBySortQuery",
                    "description": "Newstyle:  (Block List, Max: 1) List of exactly one element describing the sort query to use. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetHostmapDefinitionRequestSizeRumQueryGroupBySort:DashboardWidgetHostmapDefinitionRequestSizeRumQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "description": "Newstyle:  (String) Widget sorting methods.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetHostmapDefinitionRequestSizeRumQueryGroupBySortQuery:DashboardWidgetHostmapDefinitionRequestSizeRumQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "description": "Newstyle:  (String) Widget sorting methods.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetHostmapDefinitionRequestSizeRumQueryMultiCompute:DashboardWidgetHostmapDefinitionRequestSizeRumQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Define a time interval in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetHostmapDefinitionRequestSizeRumQuerySearch:DashboardWidgetHostmapDefinitionRequestSizeRumQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "description": "Newstyle:  (String) Metrics query definition.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/DashboardWidgetHostmapDefinitionRequestSizeSecurityQuery:DashboardWidgetHostmapDefinitionRequestSizeSecurityQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:index/DashboardWidgetHostmapDefinitionRequestSizeSecurityQueryCompute:DashboardWidgetHostmapDefinitionRequestSizeSecurityQueryCompute",
                    "description": "Newstyle:  (Map of String, Deprecated) One of compute or multi_compute is required. The map has the keys as below.  Define compute_query list with one element instead.\n",
                    "deprecationMessage": "Define `compute_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetHostmapDefinitionRequestSizeSecurityQueryComputeQuery:DashboardWidgetHostmapDefinitionRequestSizeSecurityQueryComputeQuery",
                    "description": "Newstyle:  (Block List, Max: 1) One of compute_query or multi_compute is required. The map has the keys as below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetHostmapDefinitionRequestSizeSecurityQueryGroupBy:DashboardWidgetHostmapDefinitionRequestSizeSecurityQueryGroupBy"
                    },
                    "description": "Newstyle:  (Block List) Multiple group_by blocks are allowed with the structure below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "description": "Newstyle:  (String) Name of the index to query.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetHostmapDefinitionRequestSizeSecurityQueryMultiCompute:DashboardWidgetHostmapDefinitionRequestSizeSecurityQueryMultiCompute"
                    },
                    "description": "Newstyle:  (Block List) One of compute_query or multi_compute is required. Multiple multi_compute blocks are allowed with the structure below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:index/DashboardWidgetHostmapDefinitionRequestSizeSecurityQuerySearch:DashboardWidgetHostmapDefinitionRequestSizeSecurityQuerySearch",
                    "description": "Newstyle:  (Map of String, Deprecated) Map defining the search query to use.  Define search_query directly instead.\n",
                    "deprecationMessage": "Define `search_query` directly instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchQuery": {
                    "type": "string",
                    "description": "Newstyle:  (String) The search query to use.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetHostmapDefinitionRequestSizeSecurityQueryCompute:DashboardWidgetHostmapDefinitionRequestSizeSecurityQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Define a time interval in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetHostmapDefinitionRequestSizeSecurityQueryComputeQuery:DashboardWidgetHostmapDefinitionRequestSizeSecurityQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Define a time interval in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetHostmapDefinitionRequestSizeSecurityQueryGroupBy:DashboardWidgetHostmapDefinitionRequestSizeSecurityQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Maximum number of items in the group.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:index/DashboardWidgetHostmapDefinitionRequestSizeSecurityQueryGroupBySort:DashboardWidgetHostmapDefinitionRequestSizeSecurityQueryGroupBySort",
                    "description": "Newstyle:  (Map of String, Deprecated) One map is allowed with the keys as below.  Define sort_query list with one element instead.\n",
                    "deprecationMessage": "Define `sort_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetHostmapDefinitionRequestSizeSecurityQueryGroupBySortQuery:DashboardWidgetHostmapDefinitionRequestSizeSecurityQueryGroupBySortQuery",
                    "description": "Newstyle:  (Block List, Max: 1) List of exactly one element describing the sort query to use. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetHostmapDefinitionRequestSizeSecurityQueryGroupBySort:DashboardWidgetHostmapDefinitionRequestSizeSecurityQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "description": "Newstyle:  (String) Widget sorting methods.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetHostmapDefinitionRequestSizeSecurityQueryGroupBySortQuery:DashboardWidgetHostmapDefinitionRequestSizeSecurityQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "description": "Newstyle:  (String) Widget sorting methods.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetHostmapDefinitionRequestSizeSecurityQueryMultiCompute:DashboardWidgetHostmapDefinitionRequestSizeSecurityQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Define a time interval in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetHostmapDefinitionRequestSizeSecurityQuerySearch:DashboardWidgetHostmapDefinitionRequestSizeSecurityQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "description": "Newstyle:  (String) Metrics query definition.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/DashboardWidgetHostmapDefinitionStyle:DashboardWidgetHostmapDefinitionStyle": {
            "properties": {
                "fillMax": {
                    "type": "string",
                    "description": "Newstyle:  (String) Max value to use to color the map.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "fillMin": {
                    "type": "string",
                    "description": "Newstyle:  (String) Min value to use to color the map.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "palette": {
                    "type": "string",
                    "description": "Newstyle:  (String) Color palette to apply to the widget. The available options are available here: https://docs.datadoghq.com/dashboards/widgets/timeseries/#appearance.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "paletteFlip": {
                    "type": "boolean",
                    "description": "Newstyle:  (Boolean) Boolean indicating whether to flip the palette tones.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetIframeDefinition:DashboardWidgetIframeDefinition": {
            "properties": {
                "url": {
                    "type": "string",
                    "description": "Newstyle:  (String) The URL to use as a data source for the widget.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "url"
            ]
        },
        "datadog:index/DashboardWidgetImageDefinition:DashboardWidgetImageDefinition": {
            "properties": {
                "margin": {
                    "type": "string",
                    "description": "Newstyle:  (String) The margins to use around the image. Either small or large.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sizing": {
                    "type": "string",
                    "description": "Newstyle:  (String) The preferred method to adapt the dimensions of the image to those of the widget. One of center (center the image in the tile), zoom (zoom the image to cover the whole tile) or fit (fit the image dimensions to those of the tile).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "url": {
                    "type": "string",
                    "description": "Newstyle:  (String) The URL to use as a data source for the widget.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "url"
            ]
        },
        "datadog:index/DashboardWidgetLayout:DashboardWidgetLayout": {
            "properties": {
                "height": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) The height of the widget.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "width": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) The width of the widget.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "x": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) The position of the widget on the x (horizontal) axis. Should be greater or equal to 0.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "y": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) The position of the widget on the y (vertical) axis. Should be greater or equal to 0.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "height",
                "width",
                "x",
                "y"
            ]
        },
        "datadog:index/DashboardWidgetLogStreamDefinition:DashboardWidgetLogStreamDefinition": {
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Newstyle:  (Block List) Column properties used by the front end for display. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "indexes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Newstyle:  (List of String) An array of index names to query in the stream.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "liveSpan": {
                    "type": "string",
                    "description": "Newstyle:  (String) The timeframe to use when displaying the widget. One of 10m, 30m, 1h, 4h, 1d, 2d, 1w, 1mo, 3mo, 6mo, 1y, alert.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logset": {
                    "type": "string",
                    "description": "Newstyle:  (String, Deprecated) ID of the logset to use. Deprecated Use indexes instead.  This parameter has been deprecated. Use indexes instead.\n",
                    "deprecationMessage": "This parameter has been deprecated. Use `indexes` instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "messageDisplay": {
                    "type": "string",
                    "description": "Newstyle:  (String) One of: ['inline', 'expanded-md', 'expanded-lg']\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "query": {
                    "type": "string",
                    "description": "Newstyle:  (String) Metrics query definition.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "showDateColumn": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "showMessageColumn": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:index/DashboardWidgetLogStreamDefinitionSort:DashboardWidgetLogStreamDefinitionSort",
                    "description": "Newstyle:  (Map of String, Deprecated) One map is allowed with the keys as below.  Define sort_query list with one element instead.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "time": {
                    "$ref": "#/types/datadog:index/DashboardWidgetLogStreamDefinitionTime:DashboardWidgetLogStreamDefinitionTime",
                    "description": "Newstyle:  (Map of String, Deprecated) Nested block describing the timeframe to use when displaying the widget. The structure of this block is described below.  Define live_span directly in the widget definition instead.\n",
                    "deprecationMessage": "Define `live_span` directly in the widget definition instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "title": {
                    "type": "string",
                    "description": "Newstyle:  (String) The title of the widget.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleAlign": {
                    "type": "string",
                    "description": "Newstyle:  (String) The alignment of the widget's title. One of left, center, or right.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleSize": {
                    "type": "string",
                    "description": "Newstyle:  (String) The size of the widget's title. Default is 16.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetLogStreamDefinitionSort:DashboardWidgetLogStreamDefinitionSort": {
            "properties": {
                "column": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet path for the column\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "description": "Newstyle:  (String) Widget sorting methods.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "column",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetLogStreamDefinitionTime:DashboardWidgetLogStreamDefinitionTime": {
            "properties": {
                "liveSpan": {
                    "type": "string",
                    "description": "Newstyle:  (String) The timeframe to use when displaying the widget. One of 10m, 30m, 1h, 4h, 1d, 2d, 1w, 1mo, 3mo, 6mo, 1y, alert.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetManageStatusDefinition:DashboardWidgetManageStatusDefinition": {
            "properties": {
                "colorPreference": {
                    "type": "string",
                    "description": "Newstyle:  (String) Whether to colorize text or background. One of text, background.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "count": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Number of results to return\n",
                    "deprecationMessage": "This parameter has been deprecated.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "displayFormat": {
                    "type": "string",
                    "description": "Newstyle:  (String) Number of columns to display. Available values are: one_column, two_column, or three_column.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "hideZeroCounts": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "query": {
                    "type": "string",
                    "description": "Newstyle:  (String) Metrics query definition.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "showLastTriggered": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "type": "string",
                    "description": "Newstyle:  (Map of String, Deprecated) One map is allowed with the keys as below.  Define sort_query list with one element instead.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "start": {
                    "type": "integer",
                    "description": "Newstyle:  (Number, Deprecated) The start of the list. Typically 0.  This parameter has been deprecated.\n",
                    "deprecationMessage": "This parameter has been deprecated.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "summaryType": {
                    "type": "string",
                    "description": "Newstyle:  (String) One of: ['monitors', 'groups', 'combined']\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "title": {
                    "type": "string",
                    "description": "Newstyle:  (String) The title of the widget.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleAlign": {
                    "type": "string",
                    "description": "Newstyle:  (String) The alignment of the widget's title. One of left, center, or right.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleSize": {
                    "type": "string",
                    "description": "Newstyle:  (String) The size of the widget's title. Default is 16.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/DashboardWidgetNoteDefinition:DashboardWidgetNoteDefinition": {
            "properties": {
                "backgroundColor": {
                    "type": "string",
                    "description": "Newstyle:  (String) Background color of the note.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "content": {
                    "type": "string",
                    "description": "Newstyle:  (String) Content of the note.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "fontSize": {
                    "type": "string",
                    "description": "Newstyle:  (String) Size of the text.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "showTick": {
                    "type": "boolean",
                    "description": "Newstyle:  (Boolean) Whether to show a tick or not.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "textAlign": {
                    "type": "string",
                    "description": "Newstyle:  (String) The alignment of the widget's text. One of left, center, or right.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tickEdge": {
                    "type": "string",
                    "description": "Newstyle:  (String) When tick = true, string indicating on which side of the widget the tick should be displayed. One of bottom, top, left, right.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tickPos": {
                    "type": "string",
                    "description": "Newstyle:  (String) When tick = true, string with a percent sign indicating the position of the tick. Example: use tick_pos = \"50%\" for centered alignment.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "content"
            ]
        },
        "datadog:index/DashboardWidgetQueryTableDefinition:DashboardWidgetQueryTableDefinition": {
            "properties": {
                "customLinks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetQueryTableDefinitionCustomLink:DashboardWidgetQueryTableDefinitionCustomLink"
                    },
                    "description": "Newstyle:  (Block List) Nested block describing a custom link. Multiple custom_link blocks are allowed with the structure below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "hasSearchBar": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "liveSpan": {
                    "type": "string",
                    "description": "Newstyle:  (String) The timeframe to use when displaying the widget. One of 10m, 30m, 1h, 4h, 1d, 2d, 1w, 1mo, 3mo, 6mo, 1y, alert.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "requests": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetQueryTableDefinitionRequest:DashboardWidgetQueryTableDefinitionRequest"
                    },
                    "description": "Newstyle:  (Block List) Nested block describing the request to use when displaying the widget. Multiple request blocks are allowed with the structure below (exactly one of q, apm_query, log_query, rum_query, security_query or process_query is required within the request block). (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "time": {
                    "$ref": "#/types/datadog:index/DashboardWidgetQueryTableDefinitionTime:DashboardWidgetQueryTableDefinitionTime",
                    "description": "Newstyle:  (Map of String, Deprecated) Nested block describing the timeframe to use when displaying the widget. The structure of this block is described below.  Define live_span directly in the widget definition instead.\n",
                    "deprecationMessage": "Define `live_span` directly in the widget definition instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "title": {
                    "type": "string",
                    "description": "Newstyle:  (String) The title of the widget.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleAlign": {
                    "type": "string",
                    "description": "Newstyle:  (String) The alignment of the widget's title. One of left, center, or right.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleSize": {
                    "type": "string",
                    "description": "Newstyle:  (String) The size of the widget's title. Default is 16.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetQueryTableDefinitionCustomLink:DashboardWidgetQueryTableDefinitionCustomLink": {
            "properties": {
                "label": {
                    "type": "string",
                    "description": "Newstyle:  (String) The label for the custom link URL.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "link": {
                    "type": "string",
                    "description": "Newstyle:  (String) The URL of the custom link.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "label",
                "link"
            ]
        },
        "datadog:index/DashboardWidgetQueryTableDefinitionRequest:DashboardWidgetQueryTableDefinitionRequest": {
            "properties": {
                "aggregator": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation methods available for metrics queries.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "alias": {
                    "type": "string",
                    "description": "Newstyle:  (String) Expression alias.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "apmQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetQueryTableDefinitionRequestApmQuery:DashboardWidgetQueryTableDefinitionRequestApmQuery",
                    "description": "Newstyle:  (Block List, Max: 1) The query to use for this widget. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "apmStatsQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetQueryTableDefinitionRequestApmStatsQuery:DashboardWidgetQueryTableDefinitionRequestApmStatsQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "cellDisplayModes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "conditionalFormats": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetQueryTableDefinitionRequestConditionalFormat:DashboardWidgetQueryTableDefinitionRequestConditionalFormat"
                    },
                    "description": "Newstyle:  (Block List) Conditional formats allow you to set the color of your widget content or background, depending on a rule applied to your data. Multiple conditional_formats blocks are allowed with the structure below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Maximum number of items in the group.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetQueryTableDefinitionRequestLogQuery:DashboardWidgetQueryTableDefinitionRequestLogQuery",
                    "description": "Newstyle:  (Block List, Max: 1) The query to use for this widget. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "description": "Newstyle:  (String) Widget sorting methods.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "processQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetQueryTableDefinitionRequestProcessQuery:DashboardWidgetQueryTableDefinitionRequestProcessQuery",
                    "description": "Newstyle:  (Block List, Max: 1) Process query using formulas and functions. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "q": {
                    "type": "string",
                    "description": "Newstyle:  (String) The metric query to use for this widget.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "rumQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetQueryTableDefinitionRequestRumQuery:DashboardWidgetQueryTableDefinitionRequestRumQuery",
                    "description": "Newstyle:  (Block List, Max: 1) The query to use for this widget. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "securityQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetQueryTableDefinitionRequestSecurityQuery:DashboardWidgetQueryTableDefinitionRequestSecurityQuery",
                    "description": "Newstyle:  (Block List, Max: 1) The query to use for this widget. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetQueryTableDefinitionRequestApmQuery:DashboardWidgetQueryTableDefinitionRequestApmQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:index/DashboardWidgetQueryTableDefinitionRequestApmQueryCompute:DashboardWidgetQueryTableDefinitionRequestApmQueryCompute",
                    "description": "Newstyle:  (Map of String, Deprecated) One of compute or multi_compute is required. The map has the keys as below.  Define compute_query list with one element instead.\n",
                    "deprecationMessage": "Define `compute_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetQueryTableDefinitionRequestApmQueryComputeQuery:DashboardWidgetQueryTableDefinitionRequestApmQueryComputeQuery",
                    "description": "Newstyle:  (Block List, Max: 1) One of compute_query or multi_compute is required. The map has the keys as below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetQueryTableDefinitionRequestApmQueryGroupBy:DashboardWidgetQueryTableDefinitionRequestApmQueryGroupBy"
                    },
                    "description": "Newstyle:  (Block List) Multiple group_by blocks are allowed with the structure below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "description": "Newstyle:  (String) Name of the index to query.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetQueryTableDefinitionRequestApmQueryMultiCompute:DashboardWidgetQueryTableDefinitionRequestApmQueryMultiCompute"
                    },
                    "description": "Newstyle:  (Block List) One of compute_query or multi_compute is required. Multiple multi_compute blocks are allowed with the structure below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:index/DashboardWidgetQueryTableDefinitionRequestApmQuerySearch:DashboardWidgetQueryTableDefinitionRequestApmQuerySearch",
                    "description": "Newstyle:  (Map of String, Deprecated) Map defining the search query to use.  Define search_query directly instead.\n",
                    "deprecationMessage": "Define `search_query` directly instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchQuery": {
                    "type": "string",
                    "description": "Newstyle:  (String) The search query to use.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetQueryTableDefinitionRequestApmQueryCompute:DashboardWidgetQueryTableDefinitionRequestApmQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Define a time interval in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetQueryTableDefinitionRequestApmQueryComputeQuery:DashboardWidgetQueryTableDefinitionRequestApmQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Define a time interval in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetQueryTableDefinitionRequestApmQueryGroupBy:DashboardWidgetQueryTableDefinitionRequestApmQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Maximum number of items in the group.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:index/DashboardWidgetQueryTableDefinitionRequestApmQueryGroupBySort:DashboardWidgetQueryTableDefinitionRequestApmQueryGroupBySort",
                    "description": "Newstyle:  (Map of String, Deprecated) One map is allowed with the keys as below.  Define sort_query list with one element instead.\n",
                    "deprecationMessage": "Define `sort_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetQueryTableDefinitionRequestApmQueryGroupBySortQuery:DashboardWidgetQueryTableDefinitionRequestApmQueryGroupBySortQuery",
                    "description": "Newstyle:  (Block List, Max: 1) List of exactly one element describing the sort query to use. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetQueryTableDefinitionRequestApmQueryGroupBySort:DashboardWidgetQueryTableDefinitionRequestApmQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "description": "Newstyle:  (String) Widget sorting methods.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetQueryTableDefinitionRequestApmQueryGroupBySortQuery:DashboardWidgetQueryTableDefinitionRequestApmQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "description": "Newstyle:  (String) Widget sorting methods.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetQueryTableDefinitionRequestApmQueryMultiCompute:DashboardWidgetQueryTableDefinitionRequestApmQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Define a time interval in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetQueryTableDefinitionRequestApmQuerySearch:DashboardWidgetQueryTableDefinitionRequestApmQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "description": "Newstyle:  (String) Metrics query definition.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/DashboardWidgetQueryTableDefinitionRequestApmStatsQuery:DashboardWidgetQueryTableDefinitionRequestApmStatsQuery": {
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetQueryTableDefinitionRequestApmStatsQueryColumn:DashboardWidgetQueryTableDefinitionRequestApmStatsQueryColumn"
                    },
                    "description": "Newstyle:  (Block List) Column properties used by the front end for display. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "env": {
                    "type": "string",
                    "description": "Newstyle:  (String) APM environment.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "Newstyle:  (String) The name of the template variable\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "primaryTag": {
                    "type": "string",
                    "description": "Newstyle:  (String) The organization's host group name and value.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "resource": {
                    "type": "string",
                    "description": "Newstyle:  (String) Resource name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "rowType": {
                    "type": "string",
                    "description": "Newstyle:  (String) The level of detail for the request.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "service": {
                    "type": "string",
                    "description": "Newstyle:  (String) APM service.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "env",
                "name",
                "primaryTag",
                "rowType",
                "service"
            ]
        },
        "datadog:index/DashboardWidgetQueryTableDefinitionRequestApmStatsQueryColumn:DashboardWidgetQueryTableDefinitionRequestApmStatsQueryColumn": {
            "properties": {
                "alias": {
                    "type": "string",
                    "description": "Newstyle:  (String) Expression alias.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "cellDisplayMode": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "Newstyle:  (String) The name of the template variable\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "description": "Newstyle:  (String) Widget sorting methods.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "name"
            ]
        },
        "datadog:index/DashboardWidgetQueryTableDefinitionRequestConditionalFormat:DashboardWidgetQueryTableDefinitionRequestConditionalFormat": {
            "properties": {
                "comparator": {
                    "type": "string",
                    "description": "Newstyle:  (String) Comparator to use. One of \u003e, \u003e=, \u003c, or \u003c=.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "customBgColor": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "customFgColor": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "hideValue": {
                    "type": "boolean",
                    "description": "Newstyle:  (Boolean) Setting this to True hides values.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "imageUrl": {
                    "type": "string",
                    "description": "Newstyle:  (String) Displays an image as the background.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "metric": {
                    "type": "string",
                    "description": "Newstyle:  (String) Process metric name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "palette": {
                    "type": "string",
                    "description": "Newstyle:  (String) Color palette to apply to the widget. The available options are available here: https://docs.datadoghq.com/dashboards/widgets/timeseries/#appearance.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "timeframe": {
                    "type": "string",
                    "description": "Newstyle:  (String) Defines the displayed timeframe.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "number",
                    "description": "Newstyle:  (String) The value that should be assumed by the template variable in this preset\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "comparator",
                "palette",
                "value"
            ]
        },
        "datadog:index/DashboardWidgetQueryTableDefinitionRequestLogQuery:DashboardWidgetQueryTableDefinitionRequestLogQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:index/DashboardWidgetQueryTableDefinitionRequestLogQueryCompute:DashboardWidgetQueryTableDefinitionRequestLogQueryCompute",
                    "description": "Newstyle:  (Map of String, Deprecated) One of compute or multi_compute is required. The map has the keys as below.  Define compute_query list with one element instead.\n",
                    "deprecationMessage": "Define `compute_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetQueryTableDefinitionRequestLogQueryComputeQuery:DashboardWidgetQueryTableDefinitionRequestLogQueryComputeQuery",
                    "description": "Newstyle:  (Block List, Max: 1) One of compute_query or multi_compute is required. The map has the keys as below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetQueryTableDefinitionRequestLogQueryGroupBy:DashboardWidgetQueryTableDefinitionRequestLogQueryGroupBy"
                    },
                    "description": "Newstyle:  (Block List) Multiple group_by blocks are allowed with the structure below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "description": "Newstyle:  (String) Name of the index to query.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetQueryTableDefinitionRequestLogQueryMultiCompute:DashboardWidgetQueryTableDefinitionRequestLogQueryMultiCompute"
                    },
                    "description": "Newstyle:  (Block List) One of compute_query or multi_compute is required. Multiple multi_compute blocks are allowed with the structure below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:index/DashboardWidgetQueryTableDefinitionRequestLogQuerySearch:DashboardWidgetQueryTableDefinitionRequestLogQuerySearch",
                    "description": "Newstyle:  (Map of String, Deprecated) Map defining the search query to use.  Define search_query directly instead.\n",
                    "deprecationMessage": "Define `search_query` directly instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchQuery": {
                    "type": "string",
                    "description": "Newstyle:  (String) The search query to use.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetQueryTableDefinitionRequestLogQueryCompute:DashboardWidgetQueryTableDefinitionRequestLogQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Define a time interval in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetQueryTableDefinitionRequestLogQueryComputeQuery:DashboardWidgetQueryTableDefinitionRequestLogQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Define a time interval in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetQueryTableDefinitionRequestLogQueryGroupBy:DashboardWidgetQueryTableDefinitionRequestLogQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Maximum number of items in the group.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:index/DashboardWidgetQueryTableDefinitionRequestLogQueryGroupBySort:DashboardWidgetQueryTableDefinitionRequestLogQueryGroupBySort",
                    "description": "Newstyle:  (Map of String, Deprecated) One map is allowed with the keys as below.  Define sort_query list with one element instead.\n",
                    "deprecationMessage": "Define `sort_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetQueryTableDefinitionRequestLogQueryGroupBySortQuery:DashboardWidgetQueryTableDefinitionRequestLogQueryGroupBySortQuery",
                    "description": "Newstyle:  (Block List, Max: 1) List of exactly one element describing the sort query to use. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetQueryTableDefinitionRequestLogQueryGroupBySort:DashboardWidgetQueryTableDefinitionRequestLogQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "description": "Newstyle:  (String) Widget sorting methods.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetQueryTableDefinitionRequestLogQueryGroupBySortQuery:DashboardWidgetQueryTableDefinitionRequestLogQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "description": "Newstyle:  (String) Widget sorting methods.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetQueryTableDefinitionRequestLogQueryMultiCompute:DashboardWidgetQueryTableDefinitionRequestLogQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Define a time interval in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetQueryTableDefinitionRequestLogQuerySearch:DashboardWidgetQueryTableDefinitionRequestLogQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "description": "Newstyle:  (String) Metrics query definition.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/DashboardWidgetQueryTableDefinitionRequestProcessQuery:DashboardWidgetQueryTableDefinitionRequestProcessQuery": {
            "properties": {
                "filterBies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Newstyle:  (List of String) List of processes.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Maximum number of items in the group.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "metric": {
                    "type": "string",
                    "description": "Newstyle:  (String) Process metric name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchBy": {
                    "type": "string",
                    "description": "Newstyle:  (String) Your chosen search term.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "metric"
            ]
        },
        "datadog:index/DashboardWidgetQueryTableDefinitionRequestRumQuery:DashboardWidgetQueryTableDefinitionRequestRumQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:index/DashboardWidgetQueryTableDefinitionRequestRumQueryCompute:DashboardWidgetQueryTableDefinitionRequestRumQueryCompute",
                    "description": "Newstyle:  (Map of String, Deprecated) One of compute or multi_compute is required. The map has the keys as below.  Define compute_query list with one element instead.\n",
                    "deprecationMessage": "Define `compute_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetQueryTableDefinitionRequestRumQueryComputeQuery:DashboardWidgetQueryTableDefinitionRequestRumQueryComputeQuery",
                    "description": "Newstyle:  (Block List, Max: 1) One of compute_query or multi_compute is required. The map has the keys as below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetQueryTableDefinitionRequestRumQueryGroupBy:DashboardWidgetQueryTableDefinitionRequestRumQueryGroupBy"
                    },
                    "description": "Newstyle:  (Block List) Multiple group_by blocks are allowed with the structure below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "description": "Newstyle:  (String) Name of the index to query.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetQueryTableDefinitionRequestRumQueryMultiCompute:DashboardWidgetQueryTableDefinitionRequestRumQueryMultiCompute"
                    },
                    "description": "Newstyle:  (Block List) One of compute_query or multi_compute is required. Multiple multi_compute blocks are allowed with the structure below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:index/DashboardWidgetQueryTableDefinitionRequestRumQuerySearch:DashboardWidgetQueryTableDefinitionRequestRumQuerySearch",
                    "description": "Newstyle:  (Map of String, Deprecated) Map defining the search query to use.  Define search_query directly instead.\n",
                    "deprecationMessage": "Define `search_query` directly instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchQuery": {
                    "type": "string",
                    "description": "Newstyle:  (String) The search query to use.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetQueryTableDefinitionRequestRumQueryCompute:DashboardWidgetQueryTableDefinitionRequestRumQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Define a time interval in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetQueryTableDefinitionRequestRumQueryComputeQuery:DashboardWidgetQueryTableDefinitionRequestRumQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Define a time interval in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetQueryTableDefinitionRequestRumQueryGroupBy:DashboardWidgetQueryTableDefinitionRequestRumQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Maximum number of items in the group.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:index/DashboardWidgetQueryTableDefinitionRequestRumQueryGroupBySort:DashboardWidgetQueryTableDefinitionRequestRumQueryGroupBySort",
                    "description": "Newstyle:  (Map of String, Deprecated) One map is allowed with the keys as below.  Define sort_query list with one element instead.\n",
                    "deprecationMessage": "Define `sort_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetQueryTableDefinitionRequestRumQueryGroupBySortQuery:DashboardWidgetQueryTableDefinitionRequestRumQueryGroupBySortQuery",
                    "description": "Newstyle:  (Block List, Max: 1) List of exactly one element describing the sort query to use. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetQueryTableDefinitionRequestRumQueryGroupBySort:DashboardWidgetQueryTableDefinitionRequestRumQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "description": "Newstyle:  (String) Widget sorting methods.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetQueryTableDefinitionRequestRumQueryGroupBySortQuery:DashboardWidgetQueryTableDefinitionRequestRumQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "description": "Newstyle:  (String) Widget sorting methods.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetQueryTableDefinitionRequestRumQueryMultiCompute:DashboardWidgetQueryTableDefinitionRequestRumQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Define a time interval in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetQueryTableDefinitionRequestRumQuerySearch:DashboardWidgetQueryTableDefinitionRequestRumQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "description": "Newstyle:  (String) Metrics query definition.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/DashboardWidgetQueryTableDefinitionRequestSecurityQuery:DashboardWidgetQueryTableDefinitionRequestSecurityQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:index/DashboardWidgetQueryTableDefinitionRequestSecurityQueryCompute:DashboardWidgetQueryTableDefinitionRequestSecurityQueryCompute",
                    "description": "Newstyle:  (Map of String, Deprecated) One of compute or multi_compute is required. The map has the keys as below.  Define compute_query list with one element instead.\n",
                    "deprecationMessage": "Define `compute_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetQueryTableDefinitionRequestSecurityQueryComputeQuery:DashboardWidgetQueryTableDefinitionRequestSecurityQueryComputeQuery",
                    "description": "Newstyle:  (Block List, Max: 1) One of compute_query or multi_compute is required. The map has the keys as below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetQueryTableDefinitionRequestSecurityQueryGroupBy:DashboardWidgetQueryTableDefinitionRequestSecurityQueryGroupBy"
                    },
                    "description": "Newstyle:  (Block List) Multiple group_by blocks are allowed with the structure below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "description": "Newstyle:  (String) Name of the index to query.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetQueryTableDefinitionRequestSecurityQueryMultiCompute:DashboardWidgetQueryTableDefinitionRequestSecurityQueryMultiCompute"
                    },
                    "description": "Newstyle:  (Block List) One of compute_query or multi_compute is required. Multiple multi_compute blocks are allowed with the structure below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:index/DashboardWidgetQueryTableDefinitionRequestSecurityQuerySearch:DashboardWidgetQueryTableDefinitionRequestSecurityQuerySearch",
                    "description": "Newstyle:  (Map of String, Deprecated) Map defining the search query to use.  Define search_query directly instead.\n",
                    "deprecationMessage": "Define `search_query` directly instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchQuery": {
                    "type": "string",
                    "description": "Newstyle:  (String) The search query to use.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetQueryTableDefinitionRequestSecurityQueryCompute:DashboardWidgetQueryTableDefinitionRequestSecurityQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Define a time interval in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetQueryTableDefinitionRequestSecurityQueryComputeQuery:DashboardWidgetQueryTableDefinitionRequestSecurityQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Define a time interval in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetQueryTableDefinitionRequestSecurityQueryGroupBy:DashboardWidgetQueryTableDefinitionRequestSecurityQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Maximum number of items in the group.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:index/DashboardWidgetQueryTableDefinitionRequestSecurityQueryGroupBySort:DashboardWidgetQueryTableDefinitionRequestSecurityQueryGroupBySort",
                    "description": "Newstyle:  (Map of String, Deprecated) One map is allowed with the keys as below.  Define sort_query list with one element instead.\n",
                    "deprecationMessage": "Define `sort_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetQueryTableDefinitionRequestSecurityQueryGroupBySortQuery:DashboardWidgetQueryTableDefinitionRequestSecurityQueryGroupBySortQuery",
                    "description": "Newstyle:  (Block List, Max: 1) List of exactly one element describing the sort query to use. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetQueryTableDefinitionRequestSecurityQueryGroupBySort:DashboardWidgetQueryTableDefinitionRequestSecurityQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "description": "Newstyle:  (String) Widget sorting methods.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetQueryTableDefinitionRequestSecurityQueryGroupBySortQuery:DashboardWidgetQueryTableDefinitionRequestSecurityQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "description": "Newstyle:  (String) Widget sorting methods.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetQueryTableDefinitionRequestSecurityQueryMultiCompute:DashboardWidgetQueryTableDefinitionRequestSecurityQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Define a time interval in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetQueryTableDefinitionRequestSecurityQuerySearch:DashboardWidgetQueryTableDefinitionRequestSecurityQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "description": "Newstyle:  (String) Metrics query definition.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/DashboardWidgetQueryTableDefinitionTime:DashboardWidgetQueryTableDefinitionTime": {
            "properties": {
                "liveSpan": {
                    "type": "string",
                    "description": "Newstyle:  (String) The timeframe to use when displaying the widget. One of 10m, 30m, 1h, 4h, 1d, 2d, 1w, 1mo, 3mo, 6mo, 1y, alert.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetQueryValueDefinition:DashboardWidgetQueryValueDefinition": {
            "properties": {
                "autoscale": {
                    "type": "boolean",
                    "description": "Newstyle:  (Boolean) Boolean indicating whether to automatically scale the tile.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "customLinks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetQueryValueDefinitionCustomLink:DashboardWidgetQueryValueDefinitionCustomLink"
                    },
                    "description": "Newstyle:  (Block List) Nested block describing a custom link. Multiple custom_link blocks are allowed with the structure below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "customUnit": {
                    "type": "string",
                    "description": "Newstyle:  (String) The unit for the value displayed in the widget.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "liveSpan": {
                    "type": "string",
                    "description": "Newstyle:  (String) The timeframe to use when displaying the widget. One of 10m, 30m, 1h, 4h, 1d, 2d, 1w, 1mo, 3mo, 6mo, 1y, alert.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "precision": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) The precision to use when displaying the tile.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "requests": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetQueryValueDefinitionRequest:DashboardWidgetQueryValueDefinitionRequest"
                    },
                    "description": "Newstyle:  (Block List) Nested block describing the request to use when displaying the widget. Multiple request blocks are allowed with the structure below (exactly one of q, apm_query, log_query, rum_query, security_query or process_query is required within the request block). (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "textAlign": {
                    "type": "string",
                    "description": "Newstyle:  (String) The alignment of the widget's text. One of left, center, or right.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "time": {
                    "$ref": "#/types/datadog:index/DashboardWidgetQueryValueDefinitionTime:DashboardWidgetQueryValueDefinitionTime",
                    "description": "Newstyle:  (Map of String, Deprecated) Nested block describing the timeframe to use when displaying the widget. The structure of this block is described below.  Define live_span directly in the widget definition instead.\n",
                    "deprecationMessage": "Define `live_span` directly in the widget definition instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "title": {
                    "type": "string",
                    "description": "Newstyle:  (String) The title of the widget.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleAlign": {
                    "type": "string",
                    "description": "Newstyle:  (String) The alignment of the widget's title. One of left, center, or right.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleSize": {
                    "type": "string",
                    "description": "Newstyle:  (String) The size of the widget's title. Default is 16.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetQueryValueDefinitionCustomLink:DashboardWidgetQueryValueDefinitionCustomLink": {
            "properties": {
                "label": {
                    "type": "string",
                    "description": "Newstyle:  (String) The label for the custom link URL.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "link": {
                    "type": "string",
                    "description": "Newstyle:  (String) The URL of the custom link.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "label",
                "link"
            ]
        },
        "datadog:index/DashboardWidgetQueryValueDefinitionRequest:DashboardWidgetQueryValueDefinitionRequest": {
            "properties": {
                "aggregator": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation methods available for metrics queries.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "apmQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetQueryValueDefinitionRequestApmQuery:DashboardWidgetQueryValueDefinitionRequestApmQuery",
                    "description": "Newstyle:  (Block List, Max: 1) The query to use for this widget. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "conditionalFormats": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetQueryValueDefinitionRequestConditionalFormat:DashboardWidgetQueryValueDefinitionRequestConditionalFormat"
                    },
                    "description": "Newstyle:  (Block List) Conditional formats allow you to set the color of your widget content or background, depending on a rule applied to your data. Multiple conditional_formats blocks are allowed with the structure below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "formulas": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetQueryValueDefinitionRequestFormula:DashboardWidgetQueryValueDefinitionRequestFormula"
                    },
                    "description": "Newstyle:  (Block List) (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetQueryValueDefinitionRequestLogQuery:DashboardWidgetQueryValueDefinitionRequestLogQuery",
                    "description": "Newstyle:  (Block List, Max: 1) The query to use for this widget. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "processQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetQueryValueDefinitionRequestProcessQuery:DashboardWidgetQueryValueDefinitionRequestProcessQuery",
                    "description": "Newstyle:  (Block List, Max: 1) Process query using formulas and functions. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "q": {
                    "type": "string",
                    "description": "Newstyle:  (String) The metric query to use for this widget.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "queries": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetQueryValueDefinitionRequestQuery:DashboardWidgetQueryValueDefinitionRequestQuery"
                    },
                    "description": "Newstyle:  (String) Metrics query definition.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "rumQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetQueryValueDefinitionRequestRumQuery:DashboardWidgetQueryValueDefinitionRequestRumQuery",
                    "description": "Newstyle:  (Block List, Max: 1) The query to use for this widget. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "securityQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetQueryValueDefinitionRequestSecurityQuery:DashboardWidgetQueryValueDefinitionRequestSecurityQuery",
                    "description": "Newstyle:  (Block List, Max: 1) The query to use for this widget. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetQueryValueDefinitionRequestApmQuery:DashboardWidgetQueryValueDefinitionRequestApmQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:index/DashboardWidgetQueryValueDefinitionRequestApmQueryCompute:DashboardWidgetQueryValueDefinitionRequestApmQueryCompute",
                    "description": "Newstyle:  (Map of String, Deprecated) One of compute or multi_compute is required. The map has the keys as below.  Define compute_query list with one element instead.\n",
                    "deprecationMessage": "Define `compute_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetQueryValueDefinitionRequestApmQueryComputeQuery:DashboardWidgetQueryValueDefinitionRequestApmQueryComputeQuery",
                    "description": "Newstyle:  (Block List, Max: 1) One of compute_query or multi_compute is required. The map has the keys as below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetQueryValueDefinitionRequestApmQueryGroupBy:DashboardWidgetQueryValueDefinitionRequestApmQueryGroupBy"
                    },
                    "description": "Newstyle:  (Block List) Multiple group_by blocks are allowed with the structure below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "description": "Newstyle:  (String) Name of the index to query.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetQueryValueDefinitionRequestApmQueryMultiCompute:DashboardWidgetQueryValueDefinitionRequestApmQueryMultiCompute"
                    },
                    "description": "Newstyle:  (Block List) One of compute_query or multi_compute is required. Multiple multi_compute blocks are allowed with the structure below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:index/DashboardWidgetQueryValueDefinitionRequestApmQuerySearch:DashboardWidgetQueryValueDefinitionRequestApmQuerySearch",
                    "description": "Newstyle:  (Map of String, Deprecated) Map defining the search query to use.  Define search_query directly instead.\n",
                    "deprecationMessage": "Define `search_query` directly instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchQuery": {
                    "type": "string",
                    "description": "Newstyle:  (String) The search query to use.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetQueryValueDefinitionRequestApmQueryCompute:DashboardWidgetQueryValueDefinitionRequestApmQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Define a time interval in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetQueryValueDefinitionRequestApmQueryComputeQuery:DashboardWidgetQueryValueDefinitionRequestApmQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Define a time interval in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetQueryValueDefinitionRequestApmQueryGroupBy:DashboardWidgetQueryValueDefinitionRequestApmQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Maximum number of items in the group.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:index/DashboardWidgetQueryValueDefinitionRequestApmQueryGroupBySort:DashboardWidgetQueryValueDefinitionRequestApmQueryGroupBySort",
                    "description": "Newstyle:  (Map of String, Deprecated) One map is allowed with the keys as below.  Define sort_query list with one element instead.\n",
                    "deprecationMessage": "Define `sort_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetQueryValueDefinitionRequestApmQueryGroupBySortQuery:DashboardWidgetQueryValueDefinitionRequestApmQueryGroupBySortQuery",
                    "description": "Newstyle:  (Block List, Max: 1) List of exactly one element describing the sort query to use. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetQueryValueDefinitionRequestApmQueryGroupBySort:DashboardWidgetQueryValueDefinitionRequestApmQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "description": "Newstyle:  (String) Widget sorting methods.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetQueryValueDefinitionRequestApmQueryGroupBySortQuery:DashboardWidgetQueryValueDefinitionRequestApmQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "description": "Newstyle:  (String) Widget sorting methods.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetQueryValueDefinitionRequestApmQueryMultiCompute:DashboardWidgetQueryValueDefinitionRequestApmQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Define a time interval in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetQueryValueDefinitionRequestApmQuerySearch:DashboardWidgetQueryValueDefinitionRequestApmQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "description": "Newstyle:  (String) Metrics query definition.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/DashboardWidgetQueryValueDefinitionRequestConditionalFormat:DashboardWidgetQueryValueDefinitionRequestConditionalFormat": {
            "properties": {
                "comparator": {
                    "type": "string",
                    "description": "Newstyle:  (String) Comparator to use. One of \u003e, \u003e=, \u003c, or \u003c=.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "customBgColor": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "customFgColor": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "hideValue": {
                    "type": "boolean",
                    "description": "Newstyle:  (Boolean) Setting this to True hides values.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "imageUrl": {
                    "type": "string",
                    "description": "Newstyle:  (String) Displays an image as the background.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "metric": {
                    "type": "string",
                    "description": "Newstyle:  (String) Process metric name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "palette": {
                    "type": "string",
                    "description": "Newstyle:  (String) Color palette to apply to the widget. The available options are available here: https://docs.datadoghq.com/dashboards/widgets/timeseries/#appearance.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "timeframe": {
                    "type": "string",
                    "description": "Newstyle:  (String) Defines the displayed timeframe.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "number",
                    "description": "Newstyle:  (String) The value that should be assumed by the template variable in this preset\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "comparator",
                "palette",
                "value"
            ]
        },
        "datadog:index/DashboardWidgetQueryValueDefinitionRequestFormula:DashboardWidgetQueryValueDefinitionRequestFormula": {
            "properties": {
                "alias": {
                    "type": "string",
                    "description": "Newstyle:  (String) Expression alias.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "formulaExpression": {
                    "type": "string",
                    "description": "Newstyle:  (String) String expression built from queries, formulas and functions.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "$ref": "#/types/datadog:index/DashboardWidgetQueryValueDefinitionRequestFormulaLimit:DashboardWidgetQueryValueDefinitionRequestFormulaLimit",
                    "description": "Newstyle:  (Number) Maximum number of items in the group.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "formulaExpression"
            ]
        },
        "datadog:index/DashboardWidgetQueryValueDefinitionRequestFormulaLimit:DashboardWidgetQueryValueDefinitionRequestFormulaLimit": {
            "properties": {
                "count": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Number of results to return\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "description": "Newstyle:  (String) Widget sorting methods.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetQueryValueDefinitionRequestLogQuery:DashboardWidgetQueryValueDefinitionRequestLogQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:index/DashboardWidgetQueryValueDefinitionRequestLogQueryCompute:DashboardWidgetQueryValueDefinitionRequestLogQueryCompute",
                    "description": "Newstyle:  (Map of String, Deprecated) One of compute or multi_compute is required. The map has the keys as below.  Define compute_query list with one element instead.\n",
                    "deprecationMessage": "Define `compute_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetQueryValueDefinitionRequestLogQueryComputeQuery:DashboardWidgetQueryValueDefinitionRequestLogQueryComputeQuery",
                    "description": "Newstyle:  (Block List, Max: 1) One of compute_query or multi_compute is required. The map has the keys as below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetQueryValueDefinitionRequestLogQueryGroupBy:DashboardWidgetQueryValueDefinitionRequestLogQueryGroupBy"
                    },
                    "description": "Newstyle:  (Block List) Multiple group_by blocks are allowed with the structure below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "description": "Newstyle:  (String) Name of the index to query.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetQueryValueDefinitionRequestLogQueryMultiCompute:DashboardWidgetQueryValueDefinitionRequestLogQueryMultiCompute"
                    },
                    "description": "Newstyle:  (Block List) One of compute_query or multi_compute is required. Multiple multi_compute blocks are allowed with the structure below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:index/DashboardWidgetQueryValueDefinitionRequestLogQuerySearch:DashboardWidgetQueryValueDefinitionRequestLogQuerySearch",
                    "description": "Newstyle:  (Map of String, Deprecated) Map defining the search query to use.  Define search_query directly instead.\n",
                    "deprecationMessage": "Define `search_query` directly instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchQuery": {
                    "type": "string",
                    "description": "Newstyle:  (String) The search query to use.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetQueryValueDefinitionRequestLogQueryCompute:DashboardWidgetQueryValueDefinitionRequestLogQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Define a time interval in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetQueryValueDefinitionRequestLogQueryComputeQuery:DashboardWidgetQueryValueDefinitionRequestLogQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Define a time interval in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetQueryValueDefinitionRequestLogQueryGroupBy:DashboardWidgetQueryValueDefinitionRequestLogQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Maximum number of items in the group.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:index/DashboardWidgetQueryValueDefinitionRequestLogQueryGroupBySort:DashboardWidgetQueryValueDefinitionRequestLogQueryGroupBySort",
                    "description": "Newstyle:  (Map of String, Deprecated) One map is allowed with the keys as below.  Define sort_query list with one element instead.\n",
                    "deprecationMessage": "Define `sort_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetQueryValueDefinitionRequestLogQueryGroupBySortQuery:DashboardWidgetQueryValueDefinitionRequestLogQueryGroupBySortQuery",
                    "description": "Newstyle:  (Block List, Max: 1) List of exactly one element describing the sort query to use. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetQueryValueDefinitionRequestLogQueryGroupBySort:DashboardWidgetQueryValueDefinitionRequestLogQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "description": "Newstyle:  (String) Widget sorting methods.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetQueryValueDefinitionRequestLogQueryGroupBySortQuery:DashboardWidgetQueryValueDefinitionRequestLogQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "description": "Newstyle:  (String) Widget sorting methods.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetQueryValueDefinitionRequestLogQueryMultiCompute:DashboardWidgetQueryValueDefinitionRequestLogQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Define a time interval in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetQueryValueDefinitionRequestLogQuerySearch:DashboardWidgetQueryValueDefinitionRequestLogQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "description": "Newstyle:  (String) Metrics query definition.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/DashboardWidgetQueryValueDefinitionRequestProcessQuery:DashboardWidgetQueryValueDefinitionRequestProcessQuery": {
            "properties": {
                "filterBies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Newstyle:  (List of String) List of processes.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Maximum number of items in the group.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "metric": {
                    "type": "string",
                    "description": "Newstyle:  (String) Process metric name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchBy": {
                    "type": "string",
                    "description": "Newstyle:  (String) Your chosen search term.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "metric"
            ]
        },
        "datadog:index/DashboardWidgetQueryValueDefinitionRequestQuery:DashboardWidgetQueryValueDefinitionRequestQuery": {
            "properties": {
                "eventQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetQueryValueDefinitionRequestQueryEventQuery:DashboardWidgetQueryValueDefinitionRequestQueryEventQuery",
                    "description": "Newstyle:  (Block List, Max: 1) A timeseries formula and functions events query. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "metricQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetQueryValueDefinitionRequestQueryMetricQuery:DashboardWidgetQueryValueDefinitionRequestQueryMetricQuery",
                    "description": "Newstyle:  (Block List, Max: 1) A timeseries formula and functions metrics query. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "processQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetQueryValueDefinitionRequestQueryProcessQuery:DashboardWidgetQueryValueDefinitionRequestQueryProcessQuery",
                    "description": "Newstyle:  (Block List, Max: 1) Process query using formulas and functions. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetQueryValueDefinitionRequestQueryEventQuery:DashboardWidgetQueryValueDefinitionRequestQueryEventQuery": {
            "properties": {
                "computes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetQueryValueDefinitionRequestQueryEventQueryCompute:DashboardWidgetQueryValueDefinitionRequestQueryEventQueryCompute"
                    },
                    "description": "Newstyle:  (Map of String, Deprecated) One of compute or multi_compute is required. The map has the keys as below.  Define compute_query list with one element instead.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "dataSource": {
                    "type": "string",
                    "description": "Newstyle:  (String) Data source for process queries.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetQueryValueDefinitionRequestQueryEventQueryGroupBy:DashboardWidgetQueryValueDefinitionRequestQueryEventQueryGroupBy"
                    },
                    "description": "Newstyle:  (Block List) Multiple group_by blocks are allowed with the structure below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "indexes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Newstyle:  (List of String) An array of index names to query in the stream.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "Newstyle:  (String) The name of the template variable\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:index/DashboardWidgetQueryValueDefinitionRequestQueryEventQuerySearch:DashboardWidgetQueryValueDefinitionRequestQueryEventQuerySearch",
                    "description": "Newstyle:  (Map of String, Deprecated) Map defining the search query to use.  Define search_query directly instead.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "computes",
                "dataSource",
                "name"
            ]
        },
        "datadog:index/DashboardWidgetQueryValueDefinitionRequestQueryEventQueryCompute:DashboardWidgetQueryValueDefinitionRequestQueryEventQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Define a time interval in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "metric": {
                    "type": "string",
                    "description": "Newstyle:  (String) Process metric name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetQueryValueDefinitionRequestQueryEventQueryGroupBy:DashboardWidgetQueryValueDefinitionRequestQueryEventQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Maximum number of items in the group.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:index/DashboardWidgetQueryValueDefinitionRequestQueryEventQueryGroupBySort:DashboardWidgetQueryValueDefinitionRequestQueryEventQueryGroupBySort",
                    "description": "Newstyle:  (Map of String, Deprecated) One map is allowed with the keys as below.  Define sort_query list with one element instead.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "facet"
            ]
        },
        "datadog:index/DashboardWidgetQueryValueDefinitionRequestQueryEventQueryGroupBySort:DashboardWidgetQueryValueDefinitionRequestQueryEventQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "metric": {
                    "type": "string",
                    "description": "Newstyle:  (String) Process metric name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "description": "Newstyle:  (String) Widget sorting methods.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetQueryValueDefinitionRequestQueryEventQuerySearch:DashboardWidgetQueryValueDefinitionRequestQueryEventQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "description": "Newstyle:  (String) Metrics query definition.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/DashboardWidgetQueryValueDefinitionRequestQueryMetricQuery:DashboardWidgetQueryValueDefinitionRequestQueryMetricQuery": {
            "properties": {
                "aggregator": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation methods available for metrics queries.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "dataSource": {
                    "type": "string",
                    "description": "Newstyle:  (String) Data source for process queries.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "Newstyle:  (String) The name of the template variable\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "query": {
                    "type": "string",
                    "description": "Newstyle:  (String) Metrics query definition.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "name",
                "query"
            ]
        },
        "datadog:index/DashboardWidgetQueryValueDefinitionRequestQueryProcessQuery:DashboardWidgetQueryValueDefinitionRequestQueryProcessQuery": {
            "properties": {
                "aggregator": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation methods available for metrics queries.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "dataSource": {
                    "type": "string",
                    "description": "Newstyle:  (String) Data source for process queries.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "isNormalizedCpu": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Maximum number of items in the group.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "metric": {
                    "type": "string",
                    "description": "Newstyle:  (String) Process metric name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "Newstyle:  (String) The name of the template variable\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "type": "string",
                    "description": "Newstyle:  (Map of String, Deprecated) One map is allowed with the keys as below.  Define sort_query list with one element instead.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tagFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Newstyle:  (List of String) An array of tags to filter by.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "textFilter": {
                    "type": "string",
                    "description": "Newstyle:  (String) Text to use as filter.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "dataSource",
                "metric",
                "name"
            ]
        },
        "datadog:index/DashboardWidgetQueryValueDefinitionRequestRumQuery:DashboardWidgetQueryValueDefinitionRequestRumQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:index/DashboardWidgetQueryValueDefinitionRequestRumQueryCompute:DashboardWidgetQueryValueDefinitionRequestRumQueryCompute",
                    "description": "Newstyle:  (Map of String, Deprecated) One of compute or multi_compute is required. The map has the keys as below.  Define compute_query list with one element instead.\n",
                    "deprecationMessage": "Define `compute_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetQueryValueDefinitionRequestRumQueryComputeQuery:DashboardWidgetQueryValueDefinitionRequestRumQueryComputeQuery",
                    "description": "Newstyle:  (Block List, Max: 1) One of compute_query or multi_compute is required. The map has the keys as below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetQueryValueDefinitionRequestRumQueryGroupBy:DashboardWidgetQueryValueDefinitionRequestRumQueryGroupBy"
                    },
                    "description": "Newstyle:  (Block List) Multiple group_by blocks are allowed with the structure below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "description": "Newstyle:  (String) Name of the index to query.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetQueryValueDefinitionRequestRumQueryMultiCompute:DashboardWidgetQueryValueDefinitionRequestRumQueryMultiCompute"
                    },
                    "description": "Newstyle:  (Block List) One of compute_query or multi_compute is required. Multiple multi_compute blocks are allowed with the structure below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:index/DashboardWidgetQueryValueDefinitionRequestRumQuerySearch:DashboardWidgetQueryValueDefinitionRequestRumQuerySearch",
                    "description": "Newstyle:  (Map of String, Deprecated) Map defining the search query to use.  Define search_query directly instead.\n",
                    "deprecationMessage": "Define `search_query` directly instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchQuery": {
                    "type": "string",
                    "description": "Newstyle:  (String) The search query to use.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetQueryValueDefinitionRequestRumQueryCompute:DashboardWidgetQueryValueDefinitionRequestRumQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Define a time interval in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetQueryValueDefinitionRequestRumQueryComputeQuery:DashboardWidgetQueryValueDefinitionRequestRumQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Define a time interval in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetQueryValueDefinitionRequestRumQueryGroupBy:DashboardWidgetQueryValueDefinitionRequestRumQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Maximum number of items in the group.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:index/DashboardWidgetQueryValueDefinitionRequestRumQueryGroupBySort:DashboardWidgetQueryValueDefinitionRequestRumQueryGroupBySort",
                    "description": "Newstyle:  (Map of String, Deprecated) One map is allowed with the keys as below.  Define sort_query list with one element instead.\n",
                    "deprecationMessage": "Define `sort_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetQueryValueDefinitionRequestRumQueryGroupBySortQuery:DashboardWidgetQueryValueDefinitionRequestRumQueryGroupBySortQuery",
                    "description": "Newstyle:  (Block List, Max: 1) List of exactly one element describing the sort query to use. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetQueryValueDefinitionRequestRumQueryGroupBySort:DashboardWidgetQueryValueDefinitionRequestRumQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "description": "Newstyle:  (String) Widget sorting methods.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetQueryValueDefinitionRequestRumQueryGroupBySortQuery:DashboardWidgetQueryValueDefinitionRequestRumQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "description": "Newstyle:  (String) Widget sorting methods.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetQueryValueDefinitionRequestRumQueryMultiCompute:DashboardWidgetQueryValueDefinitionRequestRumQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Define a time interval in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetQueryValueDefinitionRequestRumQuerySearch:DashboardWidgetQueryValueDefinitionRequestRumQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "description": "Newstyle:  (String) Metrics query definition.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/DashboardWidgetQueryValueDefinitionRequestSecurityQuery:DashboardWidgetQueryValueDefinitionRequestSecurityQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:index/DashboardWidgetQueryValueDefinitionRequestSecurityQueryCompute:DashboardWidgetQueryValueDefinitionRequestSecurityQueryCompute",
                    "description": "Newstyle:  (Map of String, Deprecated) One of compute or multi_compute is required. The map has the keys as below.  Define compute_query list with one element instead.\n",
                    "deprecationMessage": "Define `compute_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetQueryValueDefinitionRequestSecurityQueryComputeQuery:DashboardWidgetQueryValueDefinitionRequestSecurityQueryComputeQuery",
                    "description": "Newstyle:  (Block List, Max: 1) One of compute_query or multi_compute is required. The map has the keys as below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetQueryValueDefinitionRequestSecurityQueryGroupBy:DashboardWidgetQueryValueDefinitionRequestSecurityQueryGroupBy"
                    },
                    "description": "Newstyle:  (Block List) Multiple group_by blocks are allowed with the structure below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "description": "Newstyle:  (String) Name of the index to query.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetQueryValueDefinitionRequestSecurityQueryMultiCompute:DashboardWidgetQueryValueDefinitionRequestSecurityQueryMultiCompute"
                    },
                    "description": "Newstyle:  (Block List) One of compute_query or multi_compute is required. Multiple multi_compute blocks are allowed with the structure below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:index/DashboardWidgetQueryValueDefinitionRequestSecurityQuerySearch:DashboardWidgetQueryValueDefinitionRequestSecurityQuerySearch",
                    "description": "Newstyle:  (Map of String, Deprecated) Map defining the search query to use.  Define search_query directly instead.\n",
                    "deprecationMessage": "Define `search_query` directly instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchQuery": {
                    "type": "string",
                    "description": "Newstyle:  (String) The search query to use.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetQueryValueDefinitionRequestSecurityQueryCompute:DashboardWidgetQueryValueDefinitionRequestSecurityQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Define a time interval in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetQueryValueDefinitionRequestSecurityQueryComputeQuery:DashboardWidgetQueryValueDefinitionRequestSecurityQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Define a time interval in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetQueryValueDefinitionRequestSecurityQueryGroupBy:DashboardWidgetQueryValueDefinitionRequestSecurityQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Maximum number of items in the group.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:index/DashboardWidgetQueryValueDefinitionRequestSecurityQueryGroupBySort:DashboardWidgetQueryValueDefinitionRequestSecurityQueryGroupBySort",
                    "description": "Newstyle:  (Map of String, Deprecated) One map is allowed with the keys as below.  Define sort_query list with one element instead.\n",
                    "deprecationMessage": "Define `sort_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetQueryValueDefinitionRequestSecurityQueryGroupBySortQuery:DashboardWidgetQueryValueDefinitionRequestSecurityQueryGroupBySortQuery",
                    "description": "Newstyle:  (Block List, Max: 1) List of exactly one element describing the sort query to use. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetQueryValueDefinitionRequestSecurityQueryGroupBySort:DashboardWidgetQueryValueDefinitionRequestSecurityQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "description": "Newstyle:  (String) Widget sorting methods.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetQueryValueDefinitionRequestSecurityQueryGroupBySortQuery:DashboardWidgetQueryValueDefinitionRequestSecurityQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "description": "Newstyle:  (String) Widget sorting methods.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetQueryValueDefinitionRequestSecurityQueryMultiCompute:DashboardWidgetQueryValueDefinitionRequestSecurityQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Define a time interval in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetQueryValueDefinitionRequestSecurityQuerySearch:DashboardWidgetQueryValueDefinitionRequestSecurityQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "description": "Newstyle:  (String) Metrics query definition.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/DashboardWidgetQueryValueDefinitionTime:DashboardWidgetQueryValueDefinitionTime": {
            "properties": {
                "liveSpan": {
                    "type": "string",
                    "description": "Newstyle:  (String) The timeframe to use when displaying the widget. One of 10m, 30m, 1h, 4h, 1d, 2d, 1w, 1mo, 3mo, 6mo, 1y, alert.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetScatterplotDefinition:DashboardWidgetScatterplotDefinition": {
            "properties": {
                "colorByGroups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "customLinks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetScatterplotDefinitionCustomLink:DashboardWidgetScatterplotDefinitionCustomLink"
                    },
                    "description": "Newstyle:  (Block List) Nested block describing a custom link. Multiple custom_link blocks are allowed with the structure below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "liveSpan": {
                    "type": "string",
                    "description": "Newstyle:  (String) The timeframe to use when displaying the widget. One of 10m, 30m, 1h, 4h, 1d, 2d, 1w, 1mo, 3mo, 6mo, 1y, alert.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "request": {
                    "$ref": "#/types/datadog:index/DashboardWidgetScatterplotDefinitionRequest:DashboardWidgetScatterplotDefinitionRequest",
                    "description": "Newstyle:  (Block List) Nested block describing the request to use when displaying the widget. Multiple request blocks are allowed with the structure below (exactly one of q, apm_query, log_query, rum_query, security_query or process_query is required within the request block). (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "time": {
                    "$ref": "#/types/datadog:index/DashboardWidgetScatterplotDefinitionTime:DashboardWidgetScatterplotDefinitionTime",
                    "description": "Newstyle:  (Map of String, Deprecated) Nested block describing the timeframe to use when displaying the widget. The structure of this block is described below.  Define live_span directly in the widget definition instead.\n",
                    "deprecationMessage": "Define `live_span` directly in the widget definition instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "title": {
                    "type": "string",
                    "description": "Newstyle:  (String) The title of the widget.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleAlign": {
                    "type": "string",
                    "description": "Newstyle:  (String) The alignment of the widget's title. One of left, center, or right.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleSize": {
                    "type": "string",
                    "description": "Newstyle:  (String) The size of the widget's title. Default is 16.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "xaxis": {
                    "$ref": "#/types/datadog:index/DashboardWidgetScatterplotDefinitionXaxis:DashboardWidgetScatterplotDefinitionXaxis",
                    "description": "Newstyle:  (Block List, Max: 1) Nested block describing the X-Axis Controls. Exactly one nested block is allowed with the structure below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "yaxis": {
                    "$ref": "#/types/datadog:index/DashboardWidgetScatterplotDefinitionYaxis:DashboardWidgetScatterplotDefinitionYaxis",
                    "description": "Newstyle:  (Block List, Max: 1) Nested block describing the Y-Axis Controls. The structure of this block is described below (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetScatterplotDefinitionCustomLink:DashboardWidgetScatterplotDefinitionCustomLink": {
            "properties": {
                "label": {
                    "type": "string",
                    "description": "Newstyle:  (String) The label for the custom link URL.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "link": {
                    "type": "string",
                    "description": "Newstyle:  (String) The URL of the custom link.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "label",
                "link"
            ]
        },
        "datadog:index/DashboardWidgetScatterplotDefinitionRequest:DashboardWidgetScatterplotDefinitionRequest": {
            "properties": {
                "xes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetScatterplotDefinitionRequestX:DashboardWidgetScatterplotDefinitionRequestX"
                    },
                    "description": "Newstyle:  (Number) The position of the widget on the x (horizontal) axis. Should be greater or equal to 0.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ys": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetScatterplotDefinitionRequestY:DashboardWidgetScatterplotDefinitionRequestY"
                    },
                    "description": "Newstyle:  (Number) The position of the widget on the y (vertical) axis. Should be greater or equal to 0.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetScatterplotDefinitionRequestX:DashboardWidgetScatterplotDefinitionRequestX": {
            "properties": {
                "aggregator": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation methods available for metrics queries.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "apmQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetScatterplotDefinitionRequestXApmQuery:DashboardWidgetScatterplotDefinitionRequestXApmQuery",
                    "description": "Newstyle:  (Block List, Max: 1) The query to use for this widget. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetScatterplotDefinitionRequestXLogQuery:DashboardWidgetScatterplotDefinitionRequestXLogQuery",
                    "description": "Newstyle:  (Block List, Max: 1) The query to use for this widget. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "processQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetScatterplotDefinitionRequestXProcessQuery:DashboardWidgetScatterplotDefinitionRequestXProcessQuery",
                    "description": "Newstyle:  (Block List, Max: 1) Process query using formulas and functions. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "q": {
                    "type": "string",
                    "description": "Newstyle:  (String) The metric query to use for this widget.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "rumQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetScatterplotDefinitionRequestXRumQuery:DashboardWidgetScatterplotDefinitionRequestXRumQuery",
                    "description": "Newstyle:  (Block List, Max: 1) The query to use for this widget. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "securityQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetScatterplotDefinitionRequestXSecurityQuery:DashboardWidgetScatterplotDefinitionRequestXSecurityQuery",
                    "description": "Newstyle:  (Block List, Max: 1) The query to use for this widget. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetScatterplotDefinitionRequestXApmQuery:DashboardWidgetScatterplotDefinitionRequestXApmQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:index/DashboardWidgetScatterplotDefinitionRequestXApmQueryCompute:DashboardWidgetScatterplotDefinitionRequestXApmQueryCompute",
                    "description": "Newstyle:  (Map of String, Deprecated) One of compute or multi_compute is required. The map has the keys as below.  Define compute_query list with one element instead.\n",
                    "deprecationMessage": "Define `compute_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetScatterplotDefinitionRequestXApmQueryComputeQuery:DashboardWidgetScatterplotDefinitionRequestXApmQueryComputeQuery",
                    "description": "Newstyle:  (Block List, Max: 1) One of compute_query or multi_compute is required. The map has the keys as below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetScatterplotDefinitionRequestXApmQueryGroupBy:DashboardWidgetScatterplotDefinitionRequestXApmQueryGroupBy"
                    },
                    "description": "Newstyle:  (Block List) Multiple group_by blocks are allowed with the structure below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "description": "Newstyle:  (String) Name of the index to query.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetScatterplotDefinitionRequestXApmQueryMultiCompute:DashboardWidgetScatterplotDefinitionRequestXApmQueryMultiCompute"
                    },
                    "description": "Newstyle:  (Block List) One of compute_query or multi_compute is required. Multiple multi_compute blocks are allowed with the structure below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:index/DashboardWidgetScatterplotDefinitionRequestXApmQuerySearch:DashboardWidgetScatterplotDefinitionRequestXApmQuerySearch",
                    "description": "Newstyle:  (Map of String, Deprecated) Map defining the search query to use.  Define search_query directly instead.\n",
                    "deprecationMessage": "Define `search_query` directly instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchQuery": {
                    "type": "string",
                    "description": "Newstyle:  (String) The search query to use.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetScatterplotDefinitionRequestXApmQueryCompute:DashboardWidgetScatterplotDefinitionRequestXApmQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Define a time interval in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetScatterplotDefinitionRequestXApmQueryComputeQuery:DashboardWidgetScatterplotDefinitionRequestXApmQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Define a time interval in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetScatterplotDefinitionRequestXApmQueryGroupBy:DashboardWidgetScatterplotDefinitionRequestXApmQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Maximum number of items in the group.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:index/DashboardWidgetScatterplotDefinitionRequestXApmQueryGroupBySort:DashboardWidgetScatterplotDefinitionRequestXApmQueryGroupBySort",
                    "description": "Newstyle:  (Map of String, Deprecated) One map is allowed with the keys as below.  Define sort_query list with one element instead.\n",
                    "deprecationMessage": "Define `sort_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetScatterplotDefinitionRequestXApmQueryGroupBySortQuery:DashboardWidgetScatterplotDefinitionRequestXApmQueryGroupBySortQuery",
                    "description": "Newstyle:  (Block List, Max: 1) List of exactly one element describing the sort query to use. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetScatterplotDefinitionRequestXApmQueryGroupBySort:DashboardWidgetScatterplotDefinitionRequestXApmQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "description": "Newstyle:  (String) Widget sorting methods.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetScatterplotDefinitionRequestXApmQueryGroupBySortQuery:DashboardWidgetScatterplotDefinitionRequestXApmQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "description": "Newstyle:  (String) Widget sorting methods.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetScatterplotDefinitionRequestXApmQueryMultiCompute:DashboardWidgetScatterplotDefinitionRequestXApmQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Define a time interval in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetScatterplotDefinitionRequestXApmQuerySearch:DashboardWidgetScatterplotDefinitionRequestXApmQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "description": "Newstyle:  (String) Metrics query definition.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/DashboardWidgetScatterplotDefinitionRequestXLogQuery:DashboardWidgetScatterplotDefinitionRequestXLogQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:index/DashboardWidgetScatterplotDefinitionRequestXLogQueryCompute:DashboardWidgetScatterplotDefinitionRequestXLogQueryCompute",
                    "description": "Newstyle:  (Map of String, Deprecated) One of compute or multi_compute is required. The map has the keys as below.  Define compute_query list with one element instead.\n",
                    "deprecationMessage": "Define `compute_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetScatterplotDefinitionRequestXLogQueryComputeQuery:DashboardWidgetScatterplotDefinitionRequestXLogQueryComputeQuery",
                    "description": "Newstyle:  (Block List, Max: 1) One of compute_query or multi_compute is required. The map has the keys as below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetScatterplotDefinitionRequestXLogQueryGroupBy:DashboardWidgetScatterplotDefinitionRequestXLogQueryGroupBy"
                    },
                    "description": "Newstyle:  (Block List) Multiple group_by blocks are allowed with the structure below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "description": "Newstyle:  (String) Name of the index to query.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetScatterplotDefinitionRequestXLogQueryMultiCompute:DashboardWidgetScatterplotDefinitionRequestXLogQueryMultiCompute"
                    },
                    "description": "Newstyle:  (Block List) One of compute_query or multi_compute is required. Multiple multi_compute blocks are allowed with the structure below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:index/DashboardWidgetScatterplotDefinitionRequestXLogQuerySearch:DashboardWidgetScatterplotDefinitionRequestXLogQuerySearch",
                    "description": "Newstyle:  (Map of String, Deprecated) Map defining the search query to use.  Define search_query directly instead.\n",
                    "deprecationMessage": "Define `search_query` directly instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchQuery": {
                    "type": "string",
                    "description": "Newstyle:  (String) The search query to use.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetScatterplotDefinitionRequestXLogQueryCompute:DashboardWidgetScatterplotDefinitionRequestXLogQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Define a time interval in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetScatterplotDefinitionRequestXLogQueryComputeQuery:DashboardWidgetScatterplotDefinitionRequestXLogQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Define a time interval in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetScatterplotDefinitionRequestXLogQueryGroupBy:DashboardWidgetScatterplotDefinitionRequestXLogQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Maximum number of items in the group.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:index/DashboardWidgetScatterplotDefinitionRequestXLogQueryGroupBySort:DashboardWidgetScatterplotDefinitionRequestXLogQueryGroupBySort",
                    "description": "Newstyle:  (Map of String, Deprecated) One map is allowed with the keys as below.  Define sort_query list with one element instead.\n",
                    "deprecationMessage": "Define `sort_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetScatterplotDefinitionRequestXLogQueryGroupBySortQuery:DashboardWidgetScatterplotDefinitionRequestXLogQueryGroupBySortQuery",
                    "description": "Newstyle:  (Block List, Max: 1) List of exactly one element describing the sort query to use. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetScatterplotDefinitionRequestXLogQueryGroupBySort:DashboardWidgetScatterplotDefinitionRequestXLogQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "description": "Newstyle:  (String) Widget sorting methods.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetScatterplotDefinitionRequestXLogQueryGroupBySortQuery:DashboardWidgetScatterplotDefinitionRequestXLogQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "description": "Newstyle:  (String) Widget sorting methods.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetScatterplotDefinitionRequestXLogQueryMultiCompute:DashboardWidgetScatterplotDefinitionRequestXLogQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Define a time interval in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetScatterplotDefinitionRequestXLogQuerySearch:DashboardWidgetScatterplotDefinitionRequestXLogQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "description": "Newstyle:  (String) Metrics query definition.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/DashboardWidgetScatterplotDefinitionRequestXProcessQuery:DashboardWidgetScatterplotDefinitionRequestXProcessQuery": {
            "properties": {
                "filterBies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Newstyle:  (List of String) List of processes.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Maximum number of items in the group.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "metric": {
                    "type": "string",
                    "description": "Newstyle:  (String) Process metric name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchBy": {
                    "type": "string",
                    "description": "Newstyle:  (String) Your chosen search term.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "metric"
            ]
        },
        "datadog:index/DashboardWidgetScatterplotDefinitionRequestXRumQuery:DashboardWidgetScatterplotDefinitionRequestXRumQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:index/DashboardWidgetScatterplotDefinitionRequestXRumQueryCompute:DashboardWidgetScatterplotDefinitionRequestXRumQueryCompute",
                    "description": "Newstyle:  (Map of String, Deprecated) One of compute or multi_compute is required. The map has the keys as below.  Define compute_query list with one element instead.\n",
                    "deprecationMessage": "Define `compute_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetScatterplotDefinitionRequestXRumQueryComputeQuery:DashboardWidgetScatterplotDefinitionRequestXRumQueryComputeQuery",
                    "description": "Newstyle:  (Block List, Max: 1) One of compute_query or multi_compute is required. The map has the keys as below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetScatterplotDefinitionRequestXRumQueryGroupBy:DashboardWidgetScatterplotDefinitionRequestXRumQueryGroupBy"
                    },
                    "description": "Newstyle:  (Block List) Multiple group_by blocks are allowed with the structure below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "description": "Newstyle:  (String) Name of the index to query.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetScatterplotDefinitionRequestXRumQueryMultiCompute:DashboardWidgetScatterplotDefinitionRequestXRumQueryMultiCompute"
                    },
                    "description": "Newstyle:  (Block List) One of compute_query or multi_compute is required. Multiple multi_compute blocks are allowed with the structure below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:index/DashboardWidgetScatterplotDefinitionRequestXRumQuerySearch:DashboardWidgetScatterplotDefinitionRequestXRumQuerySearch",
                    "description": "Newstyle:  (Map of String, Deprecated) Map defining the search query to use.  Define search_query directly instead.\n",
                    "deprecationMessage": "Define `search_query` directly instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchQuery": {
                    "type": "string",
                    "description": "Newstyle:  (String) The search query to use.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetScatterplotDefinitionRequestXRumQueryCompute:DashboardWidgetScatterplotDefinitionRequestXRumQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Define a time interval in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetScatterplotDefinitionRequestXRumQueryComputeQuery:DashboardWidgetScatterplotDefinitionRequestXRumQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Define a time interval in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetScatterplotDefinitionRequestXRumQueryGroupBy:DashboardWidgetScatterplotDefinitionRequestXRumQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Maximum number of items in the group.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:index/DashboardWidgetScatterplotDefinitionRequestXRumQueryGroupBySort:DashboardWidgetScatterplotDefinitionRequestXRumQueryGroupBySort",
                    "description": "Newstyle:  (Map of String, Deprecated) One map is allowed with the keys as below.  Define sort_query list with one element instead.\n",
                    "deprecationMessage": "Define `sort_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetScatterplotDefinitionRequestXRumQueryGroupBySortQuery:DashboardWidgetScatterplotDefinitionRequestXRumQueryGroupBySortQuery",
                    "description": "Newstyle:  (Block List, Max: 1) List of exactly one element describing the sort query to use. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetScatterplotDefinitionRequestXRumQueryGroupBySort:DashboardWidgetScatterplotDefinitionRequestXRumQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "description": "Newstyle:  (String) Widget sorting methods.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetScatterplotDefinitionRequestXRumQueryGroupBySortQuery:DashboardWidgetScatterplotDefinitionRequestXRumQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "description": "Newstyle:  (String) Widget sorting methods.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetScatterplotDefinitionRequestXRumQueryMultiCompute:DashboardWidgetScatterplotDefinitionRequestXRumQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Define a time interval in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetScatterplotDefinitionRequestXRumQuerySearch:DashboardWidgetScatterplotDefinitionRequestXRumQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "description": "Newstyle:  (String) Metrics query definition.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/DashboardWidgetScatterplotDefinitionRequestXSecurityQuery:DashboardWidgetScatterplotDefinitionRequestXSecurityQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:index/DashboardWidgetScatterplotDefinitionRequestXSecurityQueryCompute:DashboardWidgetScatterplotDefinitionRequestXSecurityQueryCompute",
                    "description": "Newstyle:  (Map of String, Deprecated) One of compute or multi_compute is required. The map has the keys as below.  Define compute_query list with one element instead.\n",
                    "deprecationMessage": "Define `compute_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetScatterplotDefinitionRequestXSecurityQueryComputeQuery:DashboardWidgetScatterplotDefinitionRequestXSecurityQueryComputeQuery",
                    "description": "Newstyle:  (Block List, Max: 1) One of compute_query or multi_compute is required. The map has the keys as below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetScatterplotDefinitionRequestXSecurityQueryGroupBy:DashboardWidgetScatterplotDefinitionRequestXSecurityQueryGroupBy"
                    },
                    "description": "Newstyle:  (Block List) Multiple group_by blocks are allowed with the structure below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "description": "Newstyle:  (String) Name of the index to query.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetScatterplotDefinitionRequestXSecurityQueryMultiCompute:DashboardWidgetScatterplotDefinitionRequestXSecurityQueryMultiCompute"
                    },
                    "description": "Newstyle:  (Block List) One of compute_query or multi_compute is required. Multiple multi_compute blocks are allowed with the structure below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:index/DashboardWidgetScatterplotDefinitionRequestXSecurityQuerySearch:DashboardWidgetScatterplotDefinitionRequestXSecurityQuerySearch",
                    "description": "Newstyle:  (Map of String, Deprecated) Map defining the search query to use.  Define search_query directly instead.\n",
                    "deprecationMessage": "Define `search_query` directly instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchQuery": {
                    "type": "string",
                    "description": "Newstyle:  (String) The search query to use.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetScatterplotDefinitionRequestXSecurityQueryCompute:DashboardWidgetScatterplotDefinitionRequestXSecurityQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Define a time interval in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetScatterplotDefinitionRequestXSecurityQueryComputeQuery:DashboardWidgetScatterplotDefinitionRequestXSecurityQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Define a time interval in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetScatterplotDefinitionRequestXSecurityQueryGroupBy:DashboardWidgetScatterplotDefinitionRequestXSecurityQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Maximum number of items in the group.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:index/DashboardWidgetScatterplotDefinitionRequestXSecurityQueryGroupBySort:DashboardWidgetScatterplotDefinitionRequestXSecurityQueryGroupBySort",
                    "description": "Newstyle:  (Map of String, Deprecated) One map is allowed with the keys as below.  Define sort_query list with one element instead.\n",
                    "deprecationMessage": "Define `sort_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetScatterplotDefinitionRequestXSecurityQueryGroupBySortQuery:DashboardWidgetScatterplotDefinitionRequestXSecurityQueryGroupBySortQuery",
                    "description": "Newstyle:  (Block List, Max: 1) List of exactly one element describing the sort query to use. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetScatterplotDefinitionRequestXSecurityQueryGroupBySort:DashboardWidgetScatterplotDefinitionRequestXSecurityQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "description": "Newstyle:  (String) Widget sorting methods.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetScatterplotDefinitionRequestXSecurityQueryGroupBySortQuery:DashboardWidgetScatterplotDefinitionRequestXSecurityQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "description": "Newstyle:  (String) Widget sorting methods.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetScatterplotDefinitionRequestXSecurityQueryMultiCompute:DashboardWidgetScatterplotDefinitionRequestXSecurityQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Define a time interval in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetScatterplotDefinitionRequestXSecurityQuerySearch:DashboardWidgetScatterplotDefinitionRequestXSecurityQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "description": "Newstyle:  (String) Metrics query definition.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/DashboardWidgetScatterplotDefinitionRequestY:DashboardWidgetScatterplotDefinitionRequestY": {
            "properties": {
                "aggregator": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation methods available for metrics queries.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "apmQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetScatterplotDefinitionRequestYApmQuery:DashboardWidgetScatterplotDefinitionRequestYApmQuery",
                    "description": "Newstyle:  (Block List, Max: 1) The query to use for this widget. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetScatterplotDefinitionRequestYLogQuery:DashboardWidgetScatterplotDefinitionRequestYLogQuery",
                    "description": "Newstyle:  (Block List, Max: 1) The query to use for this widget. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "processQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetScatterplotDefinitionRequestYProcessQuery:DashboardWidgetScatterplotDefinitionRequestYProcessQuery",
                    "description": "Newstyle:  (Block List, Max: 1) Process query using formulas and functions. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "q": {
                    "type": "string",
                    "description": "Newstyle:  (String) The metric query to use for this widget.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "rumQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetScatterplotDefinitionRequestYRumQuery:DashboardWidgetScatterplotDefinitionRequestYRumQuery",
                    "description": "Newstyle:  (Block List, Max: 1) The query to use for this widget. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "securityQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetScatterplotDefinitionRequestYSecurityQuery:DashboardWidgetScatterplotDefinitionRequestYSecurityQuery",
                    "description": "Newstyle:  (Block List, Max: 1) The query to use for this widget. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetScatterplotDefinitionRequestYApmQuery:DashboardWidgetScatterplotDefinitionRequestYApmQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:index/DashboardWidgetScatterplotDefinitionRequestYApmQueryCompute:DashboardWidgetScatterplotDefinitionRequestYApmQueryCompute",
                    "description": "Newstyle:  (Map of String, Deprecated) One of compute or multi_compute is required. The map has the keys as below.  Define compute_query list with one element instead.\n",
                    "deprecationMessage": "Define `compute_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetScatterplotDefinitionRequestYApmQueryComputeQuery:DashboardWidgetScatterplotDefinitionRequestYApmQueryComputeQuery",
                    "description": "Newstyle:  (Block List, Max: 1) One of compute_query or multi_compute is required. The map has the keys as below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetScatterplotDefinitionRequestYApmQueryGroupBy:DashboardWidgetScatterplotDefinitionRequestYApmQueryGroupBy"
                    },
                    "description": "Newstyle:  (Block List) Multiple group_by blocks are allowed with the structure below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "description": "Newstyle:  (String) Name of the index to query.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetScatterplotDefinitionRequestYApmQueryMultiCompute:DashboardWidgetScatterplotDefinitionRequestYApmQueryMultiCompute"
                    },
                    "description": "Newstyle:  (Block List) One of compute_query or multi_compute is required. Multiple multi_compute blocks are allowed with the structure below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:index/DashboardWidgetScatterplotDefinitionRequestYApmQuerySearch:DashboardWidgetScatterplotDefinitionRequestYApmQuerySearch",
                    "description": "Newstyle:  (Map of String, Deprecated) Map defining the search query to use.  Define search_query directly instead.\n",
                    "deprecationMessage": "Define `search_query` directly instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchQuery": {
                    "type": "string",
                    "description": "Newstyle:  (String) The search query to use.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetScatterplotDefinitionRequestYApmQueryCompute:DashboardWidgetScatterplotDefinitionRequestYApmQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Define a time interval in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetScatterplotDefinitionRequestYApmQueryComputeQuery:DashboardWidgetScatterplotDefinitionRequestYApmQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Define a time interval in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetScatterplotDefinitionRequestYApmQueryGroupBy:DashboardWidgetScatterplotDefinitionRequestYApmQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Maximum number of items in the group.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:index/DashboardWidgetScatterplotDefinitionRequestYApmQueryGroupBySort:DashboardWidgetScatterplotDefinitionRequestYApmQueryGroupBySort",
                    "description": "Newstyle:  (Map of String, Deprecated) One map is allowed with the keys as below.  Define sort_query list with one element instead.\n",
                    "deprecationMessage": "Define `sort_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetScatterplotDefinitionRequestYApmQueryGroupBySortQuery:DashboardWidgetScatterplotDefinitionRequestYApmQueryGroupBySortQuery",
                    "description": "Newstyle:  (Block List, Max: 1) List of exactly one element describing the sort query to use. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetScatterplotDefinitionRequestYApmQueryGroupBySort:DashboardWidgetScatterplotDefinitionRequestYApmQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "description": "Newstyle:  (String) Widget sorting methods.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetScatterplotDefinitionRequestYApmQueryGroupBySortQuery:DashboardWidgetScatterplotDefinitionRequestYApmQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "description": "Newstyle:  (String) Widget sorting methods.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetScatterplotDefinitionRequestYApmQueryMultiCompute:DashboardWidgetScatterplotDefinitionRequestYApmQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Define a time interval in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetScatterplotDefinitionRequestYApmQuerySearch:DashboardWidgetScatterplotDefinitionRequestYApmQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "description": "Newstyle:  (String) Metrics query definition.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/DashboardWidgetScatterplotDefinitionRequestYLogQuery:DashboardWidgetScatterplotDefinitionRequestYLogQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:index/DashboardWidgetScatterplotDefinitionRequestYLogQueryCompute:DashboardWidgetScatterplotDefinitionRequestYLogQueryCompute",
                    "description": "Newstyle:  (Map of String, Deprecated) One of compute or multi_compute is required. The map has the keys as below.  Define compute_query list with one element instead.\n",
                    "deprecationMessage": "Define `compute_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetScatterplotDefinitionRequestYLogQueryComputeQuery:DashboardWidgetScatterplotDefinitionRequestYLogQueryComputeQuery",
                    "description": "Newstyle:  (Block List, Max: 1) One of compute_query or multi_compute is required. The map has the keys as below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetScatterplotDefinitionRequestYLogQueryGroupBy:DashboardWidgetScatterplotDefinitionRequestYLogQueryGroupBy"
                    },
                    "description": "Newstyle:  (Block List) Multiple group_by blocks are allowed with the structure below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "description": "Newstyle:  (String) Name of the index to query.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetScatterplotDefinitionRequestYLogQueryMultiCompute:DashboardWidgetScatterplotDefinitionRequestYLogQueryMultiCompute"
                    },
                    "description": "Newstyle:  (Block List) One of compute_query or multi_compute is required. Multiple multi_compute blocks are allowed with the structure below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:index/DashboardWidgetScatterplotDefinitionRequestYLogQuerySearch:DashboardWidgetScatterplotDefinitionRequestYLogQuerySearch",
                    "description": "Newstyle:  (Map of String, Deprecated) Map defining the search query to use.  Define search_query directly instead.\n",
                    "deprecationMessage": "Define `search_query` directly instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchQuery": {
                    "type": "string",
                    "description": "Newstyle:  (String) The search query to use.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetScatterplotDefinitionRequestYLogQueryCompute:DashboardWidgetScatterplotDefinitionRequestYLogQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Define a time interval in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetScatterplotDefinitionRequestYLogQueryComputeQuery:DashboardWidgetScatterplotDefinitionRequestYLogQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Define a time interval in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetScatterplotDefinitionRequestYLogQueryGroupBy:DashboardWidgetScatterplotDefinitionRequestYLogQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Maximum number of items in the group.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:index/DashboardWidgetScatterplotDefinitionRequestYLogQueryGroupBySort:DashboardWidgetScatterplotDefinitionRequestYLogQueryGroupBySort",
                    "description": "Newstyle:  (Map of String, Deprecated) One map is allowed with the keys as below.  Define sort_query list with one element instead.\n",
                    "deprecationMessage": "Define `sort_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetScatterplotDefinitionRequestYLogQueryGroupBySortQuery:DashboardWidgetScatterplotDefinitionRequestYLogQueryGroupBySortQuery",
                    "description": "Newstyle:  (Block List, Max: 1) List of exactly one element describing the sort query to use. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetScatterplotDefinitionRequestYLogQueryGroupBySort:DashboardWidgetScatterplotDefinitionRequestYLogQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "description": "Newstyle:  (String) Widget sorting methods.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetScatterplotDefinitionRequestYLogQueryGroupBySortQuery:DashboardWidgetScatterplotDefinitionRequestYLogQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "description": "Newstyle:  (String) Widget sorting methods.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetScatterplotDefinitionRequestYLogQueryMultiCompute:DashboardWidgetScatterplotDefinitionRequestYLogQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Define a time interval in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetScatterplotDefinitionRequestYLogQuerySearch:DashboardWidgetScatterplotDefinitionRequestYLogQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "description": "Newstyle:  (String) Metrics query definition.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/DashboardWidgetScatterplotDefinitionRequestYProcessQuery:DashboardWidgetScatterplotDefinitionRequestYProcessQuery": {
            "properties": {
                "filterBies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Newstyle:  (List of String) List of processes.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Maximum number of items in the group.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "metric": {
                    "type": "string",
                    "description": "Newstyle:  (String) Process metric name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchBy": {
                    "type": "string",
                    "description": "Newstyle:  (String) Your chosen search term.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "metric"
            ]
        },
        "datadog:index/DashboardWidgetScatterplotDefinitionRequestYRumQuery:DashboardWidgetScatterplotDefinitionRequestYRumQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:index/DashboardWidgetScatterplotDefinitionRequestYRumQueryCompute:DashboardWidgetScatterplotDefinitionRequestYRumQueryCompute",
                    "description": "Newstyle:  (Map of String, Deprecated) One of compute or multi_compute is required. The map has the keys as below.  Define compute_query list with one element instead.\n",
                    "deprecationMessage": "Define `compute_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetScatterplotDefinitionRequestYRumQueryComputeQuery:DashboardWidgetScatterplotDefinitionRequestYRumQueryComputeQuery",
                    "description": "Newstyle:  (Block List, Max: 1) One of compute_query or multi_compute is required. The map has the keys as below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetScatterplotDefinitionRequestYRumQueryGroupBy:DashboardWidgetScatterplotDefinitionRequestYRumQueryGroupBy"
                    },
                    "description": "Newstyle:  (Block List) Multiple group_by blocks are allowed with the structure below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "description": "Newstyle:  (String) Name of the index to query.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetScatterplotDefinitionRequestYRumQueryMultiCompute:DashboardWidgetScatterplotDefinitionRequestYRumQueryMultiCompute"
                    },
                    "description": "Newstyle:  (Block List) One of compute_query or multi_compute is required. Multiple multi_compute blocks are allowed with the structure below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:index/DashboardWidgetScatterplotDefinitionRequestYRumQuerySearch:DashboardWidgetScatterplotDefinitionRequestYRumQuerySearch",
                    "description": "Newstyle:  (Map of String, Deprecated) Map defining the search query to use.  Define search_query directly instead.\n",
                    "deprecationMessage": "Define `search_query` directly instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchQuery": {
                    "type": "string",
                    "description": "Newstyle:  (String) The search query to use.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetScatterplotDefinitionRequestYRumQueryCompute:DashboardWidgetScatterplotDefinitionRequestYRumQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Define a time interval in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetScatterplotDefinitionRequestYRumQueryComputeQuery:DashboardWidgetScatterplotDefinitionRequestYRumQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Define a time interval in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetScatterplotDefinitionRequestYRumQueryGroupBy:DashboardWidgetScatterplotDefinitionRequestYRumQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Maximum number of items in the group.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:index/DashboardWidgetScatterplotDefinitionRequestYRumQueryGroupBySort:DashboardWidgetScatterplotDefinitionRequestYRumQueryGroupBySort",
                    "description": "Newstyle:  (Map of String, Deprecated) One map is allowed with the keys as below.  Define sort_query list with one element instead.\n",
                    "deprecationMessage": "Define `sort_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetScatterplotDefinitionRequestYRumQueryGroupBySortQuery:DashboardWidgetScatterplotDefinitionRequestYRumQueryGroupBySortQuery",
                    "description": "Newstyle:  (Block List, Max: 1) List of exactly one element describing the sort query to use. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetScatterplotDefinitionRequestYRumQueryGroupBySort:DashboardWidgetScatterplotDefinitionRequestYRumQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "description": "Newstyle:  (String) Widget sorting methods.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetScatterplotDefinitionRequestYRumQueryGroupBySortQuery:DashboardWidgetScatterplotDefinitionRequestYRumQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "description": "Newstyle:  (String) Widget sorting methods.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetScatterplotDefinitionRequestYRumQueryMultiCompute:DashboardWidgetScatterplotDefinitionRequestYRumQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Define a time interval in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetScatterplotDefinitionRequestYRumQuerySearch:DashboardWidgetScatterplotDefinitionRequestYRumQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "description": "Newstyle:  (String) Metrics query definition.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/DashboardWidgetScatterplotDefinitionRequestYSecurityQuery:DashboardWidgetScatterplotDefinitionRequestYSecurityQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:index/DashboardWidgetScatterplotDefinitionRequestYSecurityQueryCompute:DashboardWidgetScatterplotDefinitionRequestYSecurityQueryCompute",
                    "description": "Newstyle:  (Map of String, Deprecated) One of compute or multi_compute is required. The map has the keys as below.  Define compute_query list with one element instead.\n",
                    "deprecationMessage": "Define `compute_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetScatterplotDefinitionRequestYSecurityQueryComputeQuery:DashboardWidgetScatterplotDefinitionRequestYSecurityQueryComputeQuery",
                    "description": "Newstyle:  (Block List, Max: 1) One of compute_query or multi_compute is required. The map has the keys as below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetScatterplotDefinitionRequestYSecurityQueryGroupBy:DashboardWidgetScatterplotDefinitionRequestYSecurityQueryGroupBy"
                    },
                    "description": "Newstyle:  (Block List) Multiple group_by blocks are allowed with the structure below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "description": "Newstyle:  (String) Name of the index to query.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetScatterplotDefinitionRequestYSecurityQueryMultiCompute:DashboardWidgetScatterplotDefinitionRequestYSecurityQueryMultiCompute"
                    },
                    "description": "Newstyle:  (Block List) One of compute_query or multi_compute is required. Multiple multi_compute blocks are allowed with the structure below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:index/DashboardWidgetScatterplotDefinitionRequestYSecurityQuerySearch:DashboardWidgetScatterplotDefinitionRequestYSecurityQuerySearch",
                    "description": "Newstyle:  (Map of String, Deprecated) Map defining the search query to use.  Define search_query directly instead.\n",
                    "deprecationMessage": "Define `search_query` directly instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchQuery": {
                    "type": "string",
                    "description": "Newstyle:  (String) The search query to use.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetScatterplotDefinitionRequestYSecurityQueryCompute:DashboardWidgetScatterplotDefinitionRequestYSecurityQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Define a time interval in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetScatterplotDefinitionRequestYSecurityQueryComputeQuery:DashboardWidgetScatterplotDefinitionRequestYSecurityQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Define a time interval in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetScatterplotDefinitionRequestYSecurityQueryGroupBy:DashboardWidgetScatterplotDefinitionRequestYSecurityQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Maximum number of items in the group.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:index/DashboardWidgetScatterplotDefinitionRequestYSecurityQueryGroupBySort:DashboardWidgetScatterplotDefinitionRequestYSecurityQueryGroupBySort",
                    "description": "Newstyle:  (Map of String, Deprecated) One map is allowed with the keys as below.  Define sort_query list with one element instead.\n",
                    "deprecationMessage": "Define `sort_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetScatterplotDefinitionRequestYSecurityQueryGroupBySortQuery:DashboardWidgetScatterplotDefinitionRequestYSecurityQueryGroupBySortQuery",
                    "description": "Newstyle:  (Block List, Max: 1) List of exactly one element describing the sort query to use. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetScatterplotDefinitionRequestYSecurityQueryGroupBySort:DashboardWidgetScatterplotDefinitionRequestYSecurityQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "description": "Newstyle:  (String) Widget sorting methods.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetScatterplotDefinitionRequestYSecurityQueryGroupBySortQuery:DashboardWidgetScatterplotDefinitionRequestYSecurityQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "description": "Newstyle:  (String) Widget sorting methods.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetScatterplotDefinitionRequestYSecurityQueryMultiCompute:DashboardWidgetScatterplotDefinitionRequestYSecurityQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Define a time interval in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetScatterplotDefinitionRequestYSecurityQuerySearch:DashboardWidgetScatterplotDefinitionRequestYSecurityQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "description": "Newstyle:  (String) Metrics query definition.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/DashboardWidgetScatterplotDefinitionTime:DashboardWidgetScatterplotDefinitionTime": {
            "properties": {
                "liveSpan": {
                    "type": "string",
                    "description": "Newstyle:  (String) The timeframe to use when displaying the widget. One of 10m, 30m, 1h, 4h, 1d, 2d, 1w, 1mo, 3mo, 6mo, 1y, alert.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetScatterplotDefinitionXaxis:DashboardWidgetScatterplotDefinitionXaxis": {
            "properties": {
                "includeZero": {
                    "type": "boolean",
                    "description": "Newstyle:  (Boolean) Always include zero or fit the axis to the data range.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "label": {
                    "type": "string",
                    "description": "Newstyle:  (String) The label for the custom link URL.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "max": {
                    "type": "string",
                    "description": "Newstyle:  (String) Specify the maximum value to show on the Y-axis.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "min": {
                    "type": "string",
                    "description": "Newstyle:  (String) Specify the minimum value to show on the Y-axis.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "scale": {
                    "type": "string",
                    "description": "Newstyle:  (String) Specifies the scale type. One of linear, log, pow, sqrt.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetScatterplotDefinitionYaxis:DashboardWidgetScatterplotDefinitionYaxis": {
            "properties": {
                "includeZero": {
                    "type": "boolean",
                    "description": "Newstyle:  (Boolean) Always include zero or fit the axis to the data range.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "label": {
                    "type": "string",
                    "description": "Newstyle:  (String) The label for the custom link URL.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "max": {
                    "type": "string",
                    "description": "Newstyle:  (String) Specify the maximum value to show on the Y-axis.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "min": {
                    "type": "string",
                    "description": "Newstyle:  (String) Specify the minimum value to show on the Y-axis.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "scale": {
                    "type": "string",
                    "description": "Newstyle:  (String) Specifies the scale type. One of linear, log, pow, sqrt.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetServiceLevelObjectiveDefinition:DashboardWidgetServiceLevelObjectiveDefinition": {
            "properties": {
                "globalTimeTarget": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "showErrorBudget": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sloId": {
                    "type": "string",
                    "description": "Newstyle:  (String) The ID of the service level objective used by the widget.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "timeWindows": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Newstyle:  (List of String) List of time windows to display in the widget. Each value in the list must be one of 7d, 30d, 90d, week_to_date, previous_week, month_to_date, or previous_month.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "title": {
                    "type": "string",
                    "description": "Newstyle:  (String) The title of the widget.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleAlign": {
                    "type": "string",
                    "description": "Newstyle:  (String) The alignment of the widget's title. One of left, center, or right.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleSize": {
                    "type": "string",
                    "description": "Newstyle:  (String) The size of the widget's title. Default is 16.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "viewMode": {
                    "type": "string",
                    "description": "Newstyle:  (String) View mode for the widget. One of overall, component, or both.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "viewType": {
                    "type": "string",
                    "description": "Newstyle:  (String) Type of view to use when displaying the widget. Only detail is currently supported.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "sloId",
                "timeWindows",
                "viewMode",
                "viewType"
            ]
        },
        "datadog:index/DashboardWidgetServicemapDefinition:DashboardWidgetServicemapDefinition": {
            "properties": {
                "customLinks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetServicemapDefinitionCustomLink:DashboardWidgetServicemapDefinitionCustomLink"
                    },
                    "description": "Newstyle:  (Block List) Nested block describing a custom link. Multiple custom_link blocks are allowed with the structure below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "filters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Newstyle:  (List of String) Your environment and primary tag (or * if enabled for your account).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "service": {
                    "type": "string",
                    "description": "Newstyle:  (String) APM service.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "title": {
                    "type": "string",
                    "description": "Newstyle:  (String) The title of the widget.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleAlign": {
                    "type": "string",
                    "description": "Newstyle:  (String) The alignment of the widget's title. One of left, center, or right.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleSize": {
                    "type": "string",
                    "description": "Newstyle:  (String) The size of the widget's title. Default is 16.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "filters",
                "service"
            ]
        },
        "datadog:index/DashboardWidgetServicemapDefinitionCustomLink:DashboardWidgetServicemapDefinitionCustomLink": {
            "properties": {
                "label": {
                    "type": "string",
                    "description": "Newstyle:  (String) The label for the custom link URL.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "link": {
                    "type": "string",
                    "description": "Newstyle:  (String) The URL of the custom link.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "label",
                "link"
            ]
        },
        "datadog:index/DashboardWidgetTimeseriesDefinition:DashboardWidgetTimeseriesDefinition": {
            "properties": {
                "customLinks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetTimeseriesDefinitionCustomLink:DashboardWidgetTimeseriesDefinitionCustomLink"
                    },
                    "description": "Newstyle:  (Block List) Nested block describing a custom link. Multiple custom_link blocks are allowed with the structure below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "events": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetTimeseriesDefinitionEvent:DashboardWidgetTimeseriesDefinitionEvent"
                    },
                    "description": "Newstyle:  (Block List) The definition of the event to overlay on the graph. Multiple event blocks are allowed with the structure below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "legendColumns": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Newstyle:  (Set of String) A list of columns to display in the legend. List items one of value, avg, sum, min, max.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "legendLayout": {
                    "type": "string",
                    "description": "Newstyle:  (String) The layout of the legend displayed in the widget. One of auto, horizontal, vertical.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "legendSize": {
                    "type": "string",
                    "description": "Newstyle:  (String) The size of the legend displayed in the widget.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "liveSpan": {
                    "type": "string",
                    "description": "Newstyle:  (String) The timeframe to use when displaying the widget. One of 10m, 30m, 1h, 4h, 1d, 2d, 1w, 1mo, 3mo, 6mo, 1y, alert.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "markers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetTimeseriesDefinitionMarker:DashboardWidgetTimeseriesDefinitionMarker"
                    },
                    "description": "Newstyle:  (Block List) Nested block describing the marker to use when displaying the widget. The structure of this block is described below. Multiple marker blocks are allowed within a given tile_def block. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "requests": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetTimeseriesDefinitionRequest:DashboardWidgetTimeseriesDefinitionRequest"
                    },
                    "description": "Newstyle:  (Block List) Nested block describing the request to use when displaying the widget. Multiple request blocks are allowed with the structure below (exactly one of q, apm_query, log_query, rum_query, security_query or process_query is required within the request block). (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "rightYaxis": {
                    "$ref": "#/types/datadog:index/DashboardWidgetTimeseriesDefinitionRightYaxis:DashboardWidgetTimeseriesDefinitionRightYaxis",
                    "description": "Newstyle:  (Block List, Max: 1) Nested block describing the right Y-Axis Controls. See the on_right_yaxis property for which request will use this axis. The structure of this block is described below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "showLegend": {
                    "type": "boolean",
                    "description": "Newstyle:  (Boolean) Whether or not to show the legend on this widget.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "time": {
                    "$ref": "#/types/datadog:index/DashboardWidgetTimeseriesDefinitionTime:DashboardWidgetTimeseriesDefinitionTime",
                    "description": "Newstyle:  (Map of String, Deprecated) Nested block describing the timeframe to use when displaying the widget. The structure of this block is described below.  Define live_span directly in the widget definition instead.\n",
                    "deprecationMessage": "Define `live_span` directly in the widget definition instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "title": {
                    "type": "string",
                    "description": "Newstyle:  (String) The title of the widget.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleAlign": {
                    "type": "string",
                    "description": "Newstyle:  (String) The alignment of the widget's title. One of left, center, or right.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleSize": {
                    "type": "string",
                    "description": "Newstyle:  (String) The size of the widget's title. Default is 16.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "yaxis": {
                    "$ref": "#/types/datadog:index/DashboardWidgetTimeseriesDefinitionYaxis:DashboardWidgetTimeseriesDefinitionYaxis",
                    "description": "Newstyle:  (Block List, Max: 1) Nested block describing the Y-Axis Controls. The structure of this block is described below (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetTimeseriesDefinitionCustomLink:DashboardWidgetTimeseriesDefinitionCustomLink": {
            "properties": {
                "label": {
                    "type": "string",
                    "description": "Newstyle:  (String) The label for the custom link URL.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "link": {
                    "type": "string",
                    "description": "Newstyle:  (String) The URL of the custom link.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "label",
                "link"
            ]
        },
        "datadog:index/DashboardWidgetTimeseriesDefinitionEvent:DashboardWidgetTimeseriesDefinitionEvent": {
            "properties": {
                "q": {
                    "type": "string",
                    "description": "Newstyle:  (String) The metric query to use for this widget.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tagsExecution": {
                    "type": "string",
                    "description": "Newstyle:  (String) The execution method for multi-value filters.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "q"
            ]
        },
        "datadog:index/DashboardWidgetTimeseriesDefinitionMarker:DashboardWidgetTimeseriesDefinitionMarker": {
            "properties": {
                "displayType": {
                    "type": "string",
                    "description": "Newstyle:  (String) How the marker lines will look. Possible values are one of {error, warning, info, ok} combined with one of {dashed, solid, bold}. Example: error dashed.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "label": {
                    "type": "string",
                    "description": "Newstyle:  (String) The label for the custom link URL.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "description": "Newstyle:  (String) The value that should be assumed by the template variable in this preset\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "value"
            ]
        },
        "datadog:index/DashboardWidgetTimeseriesDefinitionRequest:DashboardWidgetTimeseriesDefinitionRequest": {
            "properties": {
                "apmQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetTimeseriesDefinitionRequestApmQuery:DashboardWidgetTimeseriesDefinitionRequestApmQuery",
                    "description": "Newstyle:  (Block List, Max: 1) The query to use for this widget. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "displayType": {
                    "type": "string",
                    "description": "Newstyle:  (String) How the marker lines will look. Possible values are one of {error, warning, info, ok} combined with one of {dashed, solid, bold}. Example: error dashed.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "formulas": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetTimeseriesDefinitionRequestFormula:DashboardWidgetTimeseriesDefinitionRequestFormula"
                    },
                    "description": "Newstyle:  (Block List) (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetTimeseriesDefinitionRequestLogQuery:DashboardWidgetTimeseriesDefinitionRequestLogQuery",
                    "description": "Newstyle:  (Block List, Max: 1) The query to use for this widget. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "metadatas": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetTimeseriesDefinitionRequestMetadata:DashboardWidgetTimeseriesDefinitionRequestMetadata"
                    },
                    "description": "Newstyle:  (Block List) Used to define expression aliases. Multiple metadata blocks are allowed with the structure below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "networkQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetTimeseriesDefinitionRequestNetworkQuery:DashboardWidgetTimeseriesDefinitionRequestNetworkQuery",
                    "description": "Newstyle:  (Block List, Max: 1) The query to use for this widget. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "onRightYaxis": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "processQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetTimeseriesDefinitionRequestProcessQuery:DashboardWidgetTimeseriesDefinitionRequestProcessQuery",
                    "description": "Newstyle:  (Block List, Max: 1) Process query using formulas and functions. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "q": {
                    "type": "string",
                    "description": "Newstyle:  (String) The metric query to use for this widget.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "queries": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetTimeseriesDefinitionRequestQuery:DashboardWidgetTimeseriesDefinitionRequestQuery"
                    },
                    "description": "Newstyle:  (String) Metrics query definition.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "rumQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetTimeseriesDefinitionRequestRumQuery:DashboardWidgetTimeseriesDefinitionRequestRumQuery",
                    "description": "Newstyle:  (Block List, Max: 1) The query to use for this widget. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "securityQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetTimeseriesDefinitionRequestSecurityQuery:DashboardWidgetTimeseriesDefinitionRequestSecurityQuery",
                    "description": "Newstyle:  (Block List, Max: 1) The query to use for this widget. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "style": {
                    "$ref": "#/types/datadog:index/DashboardWidgetTimeseriesDefinitionRequestStyle:DashboardWidgetTimeseriesDefinitionRequestStyle",
                    "description": "Newstyle:  (Block List, Max: 1) Define request widget style. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetTimeseriesDefinitionRequestApmQuery:DashboardWidgetTimeseriesDefinitionRequestApmQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:index/DashboardWidgetTimeseriesDefinitionRequestApmQueryCompute:DashboardWidgetTimeseriesDefinitionRequestApmQueryCompute",
                    "description": "Newstyle:  (Map of String, Deprecated) One of compute or multi_compute is required. The map has the keys as below.  Define compute_query list with one element instead.\n",
                    "deprecationMessage": "Define `compute_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetTimeseriesDefinitionRequestApmQueryComputeQuery:DashboardWidgetTimeseriesDefinitionRequestApmQueryComputeQuery",
                    "description": "Newstyle:  (Block List, Max: 1) One of compute_query or multi_compute is required. The map has the keys as below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetTimeseriesDefinitionRequestApmQueryGroupBy:DashboardWidgetTimeseriesDefinitionRequestApmQueryGroupBy"
                    },
                    "description": "Newstyle:  (Block List) Multiple group_by blocks are allowed with the structure below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "description": "Newstyle:  (String) Name of the index to query.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetTimeseriesDefinitionRequestApmQueryMultiCompute:DashboardWidgetTimeseriesDefinitionRequestApmQueryMultiCompute"
                    },
                    "description": "Newstyle:  (Block List) One of compute_query or multi_compute is required. Multiple multi_compute blocks are allowed with the structure below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:index/DashboardWidgetTimeseriesDefinitionRequestApmQuerySearch:DashboardWidgetTimeseriesDefinitionRequestApmQuerySearch",
                    "description": "Newstyle:  (Map of String, Deprecated) Map defining the search query to use.  Define search_query directly instead.\n",
                    "deprecationMessage": "Define `search_query` directly instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchQuery": {
                    "type": "string",
                    "description": "Newstyle:  (String) The search query to use.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetTimeseriesDefinitionRequestApmQueryCompute:DashboardWidgetTimeseriesDefinitionRequestApmQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Define a time interval in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetTimeseriesDefinitionRequestApmQueryComputeQuery:DashboardWidgetTimeseriesDefinitionRequestApmQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Define a time interval in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetTimeseriesDefinitionRequestApmQueryGroupBy:DashboardWidgetTimeseriesDefinitionRequestApmQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Maximum number of items in the group.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:index/DashboardWidgetTimeseriesDefinitionRequestApmQueryGroupBySort:DashboardWidgetTimeseriesDefinitionRequestApmQueryGroupBySort",
                    "description": "Newstyle:  (Map of String, Deprecated) One map is allowed with the keys as below.  Define sort_query list with one element instead.\n",
                    "deprecationMessage": "Define `sort_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetTimeseriesDefinitionRequestApmQueryGroupBySortQuery:DashboardWidgetTimeseriesDefinitionRequestApmQueryGroupBySortQuery",
                    "description": "Newstyle:  (Block List, Max: 1) List of exactly one element describing the sort query to use. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetTimeseriesDefinitionRequestApmQueryGroupBySort:DashboardWidgetTimeseriesDefinitionRequestApmQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "description": "Newstyle:  (String) Widget sorting methods.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetTimeseriesDefinitionRequestApmQueryGroupBySortQuery:DashboardWidgetTimeseriesDefinitionRequestApmQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "description": "Newstyle:  (String) Widget sorting methods.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetTimeseriesDefinitionRequestApmQueryMultiCompute:DashboardWidgetTimeseriesDefinitionRequestApmQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Define a time interval in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetTimeseriesDefinitionRequestApmQuerySearch:DashboardWidgetTimeseriesDefinitionRequestApmQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "description": "Newstyle:  (String) Metrics query definition.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/DashboardWidgetTimeseriesDefinitionRequestFormula:DashboardWidgetTimeseriesDefinitionRequestFormula": {
            "properties": {
                "alias": {
                    "type": "string",
                    "description": "Newstyle:  (String) Expression alias.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "formulaExpression": {
                    "type": "string",
                    "description": "Newstyle:  (String) String expression built from queries, formulas and functions.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "$ref": "#/types/datadog:index/DashboardWidgetTimeseriesDefinitionRequestFormulaLimit:DashboardWidgetTimeseriesDefinitionRequestFormulaLimit",
                    "description": "Newstyle:  (Number) Maximum number of items in the group.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "formulaExpression"
            ]
        },
        "datadog:index/DashboardWidgetTimeseriesDefinitionRequestFormulaLimit:DashboardWidgetTimeseriesDefinitionRequestFormulaLimit": {
            "properties": {
                "count": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Number of results to return\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "description": "Newstyle:  (String) Widget sorting methods.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetTimeseriesDefinitionRequestLogQuery:DashboardWidgetTimeseriesDefinitionRequestLogQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:index/DashboardWidgetTimeseriesDefinitionRequestLogQueryCompute:DashboardWidgetTimeseriesDefinitionRequestLogQueryCompute",
                    "description": "Newstyle:  (Map of String, Deprecated) One of compute or multi_compute is required. The map has the keys as below.  Define compute_query list with one element instead.\n",
                    "deprecationMessage": "Define `compute_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetTimeseriesDefinitionRequestLogQueryComputeQuery:DashboardWidgetTimeseriesDefinitionRequestLogQueryComputeQuery",
                    "description": "Newstyle:  (Block List, Max: 1) One of compute_query or multi_compute is required. The map has the keys as below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetTimeseriesDefinitionRequestLogQueryGroupBy:DashboardWidgetTimeseriesDefinitionRequestLogQueryGroupBy"
                    },
                    "description": "Newstyle:  (Block List) Multiple group_by blocks are allowed with the structure below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "description": "Newstyle:  (String) Name of the index to query.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetTimeseriesDefinitionRequestLogQueryMultiCompute:DashboardWidgetTimeseriesDefinitionRequestLogQueryMultiCompute"
                    },
                    "description": "Newstyle:  (Block List) One of compute_query or multi_compute is required. Multiple multi_compute blocks are allowed with the structure below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:index/DashboardWidgetTimeseriesDefinitionRequestLogQuerySearch:DashboardWidgetTimeseriesDefinitionRequestLogQuerySearch",
                    "description": "Newstyle:  (Map of String, Deprecated) Map defining the search query to use.  Define search_query directly instead.\n",
                    "deprecationMessage": "Define `search_query` directly instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchQuery": {
                    "type": "string",
                    "description": "Newstyle:  (String) The search query to use.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetTimeseriesDefinitionRequestLogQueryCompute:DashboardWidgetTimeseriesDefinitionRequestLogQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Define a time interval in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetTimeseriesDefinitionRequestLogQueryComputeQuery:DashboardWidgetTimeseriesDefinitionRequestLogQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Define a time interval in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetTimeseriesDefinitionRequestLogQueryGroupBy:DashboardWidgetTimeseriesDefinitionRequestLogQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Maximum number of items in the group.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:index/DashboardWidgetTimeseriesDefinitionRequestLogQueryGroupBySort:DashboardWidgetTimeseriesDefinitionRequestLogQueryGroupBySort",
                    "description": "Newstyle:  (Map of String, Deprecated) One map is allowed with the keys as below.  Define sort_query list with one element instead.\n",
                    "deprecationMessage": "Define `sort_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetTimeseriesDefinitionRequestLogQueryGroupBySortQuery:DashboardWidgetTimeseriesDefinitionRequestLogQueryGroupBySortQuery",
                    "description": "Newstyle:  (Block List, Max: 1) List of exactly one element describing the sort query to use. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetTimeseriesDefinitionRequestLogQueryGroupBySort:DashboardWidgetTimeseriesDefinitionRequestLogQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "description": "Newstyle:  (String) Widget sorting methods.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetTimeseriesDefinitionRequestLogQueryGroupBySortQuery:DashboardWidgetTimeseriesDefinitionRequestLogQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "description": "Newstyle:  (String) Widget sorting methods.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetTimeseriesDefinitionRequestLogQueryMultiCompute:DashboardWidgetTimeseriesDefinitionRequestLogQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Define a time interval in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetTimeseriesDefinitionRequestLogQuerySearch:DashboardWidgetTimeseriesDefinitionRequestLogQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "description": "Newstyle:  (String) Metrics query definition.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/DashboardWidgetTimeseriesDefinitionRequestMetadata:DashboardWidgetTimeseriesDefinitionRequestMetadata": {
            "properties": {
                "aliasName": {
                    "type": "string",
                    "description": "Newstyle:  (String) Expression alias.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "expression": {
                    "type": "string",
                    "description": "Newstyle:  (String) Expression name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "expression"
            ]
        },
        "datadog:index/DashboardWidgetTimeseriesDefinitionRequestNetworkQuery:DashboardWidgetTimeseriesDefinitionRequestNetworkQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:index/DashboardWidgetTimeseriesDefinitionRequestNetworkQueryCompute:DashboardWidgetTimeseriesDefinitionRequestNetworkQueryCompute",
                    "description": "Newstyle:  (Map of String, Deprecated) One of compute or multi_compute is required. The map has the keys as below.  Define compute_query list with one element instead.\n",
                    "deprecationMessage": "Define `compute_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetTimeseriesDefinitionRequestNetworkQueryComputeQuery:DashboardWidgetTimeseriesDefinitionRequestNetworkQueryComputeQuery",
                    "description": "Newstyle:  (Block List, Max: 1) One of compute_query or multi_compute is required. The map has the keys as below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetTimeseriesDefinitionRequestNetworkQueryGroupBy:DashboardWidgetTimeseriesDefinitionRequestNetworkQueryGroupBy"
                    },
                    "description": "Newstyle:  (Block List) Multiple group_by blocks are allowed with the structure below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "description": "Newstyle:  (String) Name of the index to query.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetTimeseriesDefinitionRequestNetworkQueryMultiCompute:DashboardWidgetTimeseriesDefinitionRequestNetworkQueryMultiCompute"
                    },
                    "description": "Newstyle:  (Block List) One of compute_query or multi_compute is required. Multiple multi_compute blocks are allowed with the structure below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:index/DashboardWidgetTimeseriesDefinitionRequestNetworkQuerySearch:DashboardWidgetTimeseriesDefinitionRequestNetworkQuerySearch",
                    "description": "Newstyle:  (Map of String, Deprecated) Map defining the search query to use.  Define search_query directly instead.\n",
                    "deprecationMessage": "Define `search_query` directly instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchQuery": {
                    "type": "string",
                    "description": "Newstyle:  (String) The search query to use.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetTimeseriesDefinitionRequestNetworkQueryCompute:DashboardWidgetTimeseriesDefinitionRequestNetworkQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Define a time interval in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetTimeseriesDefinitionRequestNetworkQueryComputeQuery:DashboardWidgetTimeseriesDefinitionRequestNetworkQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Define a time interval in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetTimeseriesDefinitionRequestNetworkQueryGroupBy:DashboardWidgetTimeseriesDefinitionRequestNetworkQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Maximum number of items in the group.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:index/DashboardWidgetTimeseriesDefinitionRequestNetworkQueryGroupBySort:DashboardWidgetTimeseriesDefinitionRequestNetworkQueryGroupBySort",
                    "description": "Newstyle:  (Map of String, Deprecated) One map is allowed with the keys as below.  Define sort_query list with one element instead.\n",
                    "deprecationMessage": "Define `sort_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetTimeseriesDefinitionRequestNetworkQueryGroupBySortQuery:DashboardWidgetTimeseriesDefinitionRequestNetworkQueryGroupBySortQuery",
                    "description": "Newstyle:  (Block List, Max: 1) List of exactly one element describing the sort query to use. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetTimeseriesDefinitionRequestNetworkQueryGroupBySort:DashboardWidgetTimeseriesDefinitionRequestNetworkQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "description": "Newstyle:  (String) Widget sorting methods.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetTimeseriesDefinitionRequestNetworkQueryGroupBySortQuery:DashboardWidgetTimeseriesDefinitionRequestNetworkQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "description": "Newstyle:  (String) Widget sorting methods.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetTimeseriesDefinitionRequestNetworkQueryMultiCompute:DashboardWidgetTimeseriesDefinitionRequestNetworkQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Define a time interval in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetTimeseriesDefinitionRequestNetworkQuerySearch:DashboardWidgetTimeseriesDefinitionRequestNetworkQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "description": "Newstyle:  (String) Metrics query definition.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/DashboardWidgetTimeseriesDefinitionRequestProcessQuery:DashboardWidgetTimeseriesDefinitionRequestProcessQuery": {
            "properties": {
                "filterBies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Newstyle:  (List of String) List of processes.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Maximum number of items in the group.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "metric": {
                    "type": "string",
                    "description": "Newstyle:  (String) Process metric name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchBy": {
                    "type": "string",
                    "description": "Newstyle:  (String) Your chosen search term.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "metric"
            ]
        },
        "datadog:index/DashboardWidgetTimeseriesDefinitionRequestQuery:DashboardWidgetTimeseriesDefinitionRequestQuery": {
            "properties": {
                "eventQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetTimeseriesDefinitionRequestQueryEventQuery:DashboardWidgetTimeseriesDefinitionRequestQueryEventQuery",
                    "description": "Newstyle:  (Block List, Max: 1) A timeseries formula and functions events query. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "metricQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetTimeseriesDefinitionRequestQueryMetricQuery:DashboardWidgetTimeseriesDefinitionRequestQueryMetricQuery",
                    "description": "Newstyle:  (Block List, Max: 1) A timeseries formula and functions metrics query. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "processQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetTimeseriesDefinitionRequestQueryProcessQuery:DashboardWidgetTimeseriesDefinitionRequestQueryProcessQuery",
                    "description": "Newstyle:  (Block List, Max: 1) Process query using formulas and functions. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetTimeseriesDefinitionRequestQueryEventQuery:DashboardWidgetTimeseriesDefinitionRequestQueryEventQuery": {
            "properties": {
                "computes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetTimeseriesDefinitionRequestQueryEventQueryCompute:DashboardWidgetTimeseriesDefinitionRequestQueryEventQueryCompute"
                    },
                    "description": "Newstyle:  (Map of String, Deprecated) One of compute or multi_compute is required. The map has the keys as below.  Define compute_query list with one element instead.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "dataSource": {
                    "type": "string",
                    "description": "Newstyle:  (String) Data source for process queries.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetTimeseriesDefinitionRequestQueryEventQueryGroupBy:DashboardWidgetTimeseriesDefinitionRequestQueryEventQueryGroupBy"
                    },
                    "description": "Newstyle:  (Block List) Multiple group_by blocks are allowed with the structure below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "indexes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Newstyle:  (List of String) An array of index names to query in the stream.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "Newstyle:  (String) The name of the template variable\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:index/DashboardWidgetTimeseriesDefinitionRequestQueryEventQuerySearch:DashboardWidgetTimeseriesDefinitionRequestQueryEventQuerySearch",
                    "description": "Newstyle:  (Map of String, Deprecated) Map defining the search query to use.  Define search_query directly instead.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "computes",
                "dataSource",
                "name"
            ]
        },
        "datadog:index/DashboardWidgetTimeseriesDefinitionRequestQueryEventQueryCompute:DashboardWidgetTimeseriesDefinitionRequestQueryEventQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Define a time interval in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "metric": {
                    "type": "string",
                    "description": "Newstyle:  (String) Process metric name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetTimeseriesDefinitionRequestQueryEventQueryGroupBy:DashboardWidgetTimeseriesDefinitionRequestQueryEventQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Maximum number of items in the group.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:index/DashboardWidgetTimeseriesDefinitionRequestQueryEventQueryGroupBySort:DashboardWidgetTimeseriesDefinitionRequestQueryEventQueryGroupBySort",
                    "description": "Newstyle:  (Map of String, Deprecated) One map is allowed with the keys as below.  Define sort_query list with one element instead.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "facet"
            ]
        },
        "datadog:index/DashboardWidgetTimeseriesDefinitionRequestQueryEventQueryGroupBySort:DashboardWidgetTimeseriesDefinitionRequestQueryEventQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "metric": {
                    "type": "string",
                    "description": "Newstyle:  (String) Process metric name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "description": "Newstyle:  (String) Widget sorting methods.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetTimeseriesDefinitionRequestQueryEventQuerySearch:DashboardWidgetTimeseriesDefinitionRequestQueryEventQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "description": "Newstyle:  (String) Metrics query definition.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/DashboardWidgetTimeseriesDefinitionRequestQueryMetricQuery:DashboardWidgetTimeseriesDefinitionRequestQueryMetricQuery": {
            "properties": {
                "aggregator": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation methods available for metrics queries.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "dataSource": {
                    "type": "string",
                    "description": "Newstyle:  (String) Data source for process queries.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "Newstyle:  (String) The name of the template variable\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "query": {
                    "type": "string",
                    "description": "Newstyle:  (String) Metrics query definition.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "name",
                "query"
            ]
        },
        "datadog:index/DashboardWidgetTimeseriesDefinitionRequestQueryProcessQuery:DashboardWidgetTimeseriesDefinitionRequestQueryProcessQuery": {
            "properties": {
                "aggregator": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation methods available for metrics queries.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "dataSource": {
                    "type": "string",
                    "description": "Newstyle:  (String) Data source for process queries.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "isNormalizedCpu": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Maximum number of items in the group.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "metric": {
                    "type": "string",
                    "description": "Newstyle:  (String) Process metric name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "Newstyle:  (String) The name of the template variable\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "type": "string",
                    "description": "Newstyle:  (Map of String, Deprecated) One map is allowed with the keys as below.  Define sort_query list with one element instead.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tagFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Newstyle:  (List of String) An array of tags to filter by.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "textFilter": {
                    "type": "string",
                    "description": "Newstyle:  (String) Text to use as filter.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "dataSource",
                "metric",
                "name"
            ]
        },
        "datadog:index/DashboardWidgetTimeseriesDefinitionRequestRumQuery:DashboardWidgetTimeseriesDefinitionRequestRumQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:index/DashboardWidgetTimeseriesDefinitionRequestRumQueryCompute:DashboardWidgetTimeseriesDefinitionRequestRumQueryCompute",
                    "description": "Newstyle:  (Map of String, Deprecated) One of compute or multi_compute is required. The map has the keys as below.  Define compute_query list with one element instead.\n",
                    "deprecationMessage": "Define `compute_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetTimeseriesDefinitionRequestRumQueryComputeQuery:DashboardWidgetTimeseriesDefinitionRequestRumQueryComputeQuery",
                    "description": "Newstyle:  (Block List, Max: 1) One of compute_query or multi_compute is required. The map has the keys as below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetTimeseriesDefinitionRequestRumQueryGroupBy:DashboardWidgetTimeseriesDefinitionRequestRumQueryGroupBy"
                    },
                    "description": "Newstyle:  (Block List) Multiple group_by blocks are allowed with the structure below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "description": "Newstyle:  (String) Name of the index to query.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetTimeseriesDefinitionRequestRumQueryMultiCompute:DashboardWidgetTimeseriesDefinitionRequestRumQueryMultiCompute"
                    },
                    "description": "Newstyle:  (Block List) One of compute_query or multi_compute is required. Multiple multi_compute blocks are allowed with the structure below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:index/DashboardWidgetTimeseriesDefinitionRequestRumQuerySearch:DashboardWidgetTimeseriesDefinitionRequestRumQuerySearch",
                    "description": "Newstyle:  (Map of String, Deprecated) Map defining the search query to use.  Define search_query directly instead.\n",
                    "deprecationMessage": "Define `search_query` directly instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchQuery": {
                    "type": "string",
                    "description": "Newstyle:  (String) The search query to use.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetTimeseriesDefinitionRequestRumQueryCompute:DashboardWidgetTimeseriesDefinitionRequestRumQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Define a time interval in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetTimeseriesDefinitionRequestRumQueryComputeQuery:DashboardWidgetTimeseriesDefinitionRequestRumQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Define a time interval in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetTimeseriesDefinitionRequestRumQueryGroupBy:DashboardWidgetTimeseriesDefinitionRequestRumQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Maximum number of items in the group.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:index/DashboardWidgetTimeseriesDefinitionRequestRumQueryGroupBySort:DashboardWidgetTimeseriesDefinitionRequestRumQueryGroupBySort",
                    "description": "Newstyle:  (Map of String, Deprecated) One map is allowed with the keys as below.  Define sort_query list with one element instead.\n",
                    "deprecationMessage": "Define `sort_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetTimeseriesDefinitionRequestRumQueryGroupBySortQuery:DashboardWidgetTimeseriesDefinitionRequestRumQueryGroupBySortQuery",
                    "description": "Newstyle:  (Block List, Max: 1) List of exactly one element describing the sort query to use. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetTimeseriesDefinitionRequestRumQueryGroupBySort:DashboardWidgetTimeseriesDefinitionRequestRumQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "description": "Newstyle:  (String) Widget sorting methods.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetTimeseriesDefinitionRequestRumQueryGroupBySortQuery:DashboardWidgetTimeseriesDefinitionRequestRumQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "description": "Newstyle:  (String) Widget sorting methods.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetTimeseriesDefinitionRequestRumQueryMultiCompute:DashboardWidgetTimeseriesDefinitionRequestRumQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Define a time interval in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetTimeseriesDefinitionRequestRumQuerySearch:DashboardWidgetTimeseriesDefinitionRequestRumQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "description": "Newstyle:  (String) Metrics query definition.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/DashboardWidgetTimeseriesDefinitionRequestSecurityQuery:DashboardWidgetTimeseriesDefinitionRequestSecurityQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:index/DashboardWidgetTimeseriesDefinitionRequestSecurityQueryCompute:DashboardWidgetTimeseriesDefinitionRequestSecurityQueryCompute",
                    "description": "Newstyle:  (Map of String, Deprecated) One of compute or multi_compute is required. The map has the keys as below.  Define compute_query list with one element instead.\n",
                    "deprecationMessage": "Define `compute_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetTimeseriesDefinitionRequestSecurityQueryComputeQuery:DashboardWidgetTimeseriesDefinitionRequestSecurityQueryComputeQuery",
                    "description": "Newstyle:  (Block List, Max: 1) One of compute_query or multi_compute is required. The map has the keys as below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetTimeseriesDefinitionRequestSecurityQueryGroupBy:DashboardWidgetTimeseriesDefinitionRequestSecurityQueryGroupBy"
                    },
                    "description": "Newstyle:  (Block List) Multiple group_by blocks are allowed with the structure below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "description": "Newstyle:  (String) Name of the index to query.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetTimeseriesDefinitionRequestSecurityQueryMultiCompute:DashboardWidgetTimeseriesDefinitionRequestSecurityQueryMultiCompute"
                    },
                    "description": "Newstyle:  (Block List) One of compute_query or multi_compute is required. Multiple multi_compute blocks are allowed with the structure below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:index/DashboardWidgetTimeseriesDefinitionRequestSecurityQuerySearch:DashboardWidgetTimeseriesDefinitionRequestSecurityQuerySearch",
                    "description": "Newstyle:  (Map of String, Deprecated) Map defining the search query to use.  Define search_query directly instead.\n",
                    "deprecationMessage": "Define `search_query` directly instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchQuery": {
                    "type": "string",
                    "description": "Newstyle:  (String) The search query to use.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetTimeseriesDefinitionRequestSecurityQueryCompute:DashboardWidgetTimeseriesDefinitionRequestSecurityQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Define a time interval in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetTimeseriesDefinitionRequestSecurityQueryComputeQuery:DashboardWidgetTimeseriesDefinitionRequestSecurityQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Define a time interval in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetTimeseriesDefinitionRequestSecurityQueryGroupBy:DashboardWidgetTimeseriesDefinitionRequestSecurityQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Maximum number of items in the group.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:index/DashboardWidgetTimeseriesDefinitionRequestSecurityQueryGroupBySort:DashboardWidgetTimeseriesDefinitionRequestSecurityQueryGroupBySort",
                    "description": "Newstyle:  (Map of String, Deprecated) One map is allowed with the keys as below.  Define sort_query list with one element instead.\n",
                    "deprecationMessage": "Define `sort_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetTimeseriesDefinitionRequestSecurityQueryGroupBySortQuery:DashboardWidgetTimeseriesDefinitionRequestSecurityQueryGroupBySortQuery",
                    "description": "Newstyle:  (Block List, Max: 1) List of exactly one element describing the sort query to use. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetTimeseriesDefinitionRequestSecurityQueryGroupBySort:DashboardWidgetTimeseriesDefinitionRequestSecurityQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "description": "Newstyle:  (String) Widget sorting methods.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetTimeseriesDefinitionRequestSecurityQueryGroupBySortQuery:DashboardWidgetTimeseriesDefinitionRequestSecurityQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "description": "Newstyle:  (String) Widget sorting methods.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetTimeseriesDefinitionRequestSecurityQueryMultiCompute:DashboardWidgetTimeseriesDefinitionRequestSecurityQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Define a time interval in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetTimeseriesDefinitionRequestSecurityQuerySearch:DashboardWidgetTimeseriesDefinitionRequestSecurityQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "description": "Newstyle:  (String) Metrics query definition.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/DashboardWidgetTimeseriesDefinitionRequestStyle:DashboardWidgetTimeseriesDefinitionRequestStyle": {
            "properties": {
                "lineType": {
                    "type": "string",
                    "description": "Newstyle:  (String) Type of lines displayed. Available values are: dashed, dotted, or solid.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "lineWidth": {
                    "type": "string",
                    "description": "Newstyle:  (String) Width of line displayed. Available values are: normal, thick, or thin.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "palette": {
                    "type": "string",
                    "description": "Newstyle:  (String) Color palette to apply to the widget. The available options are available here: https://docs.datadoghq.com/dashboards/widgets/timeseries/#appearance.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetTimeseriesDefinitionRightYaxis:DashboardWidgetTimeseriesDefinitionRightYaxis": {
            "properties": {
                "includeZero": {
                    "type": "boolean",
                    "description": "Newstyle:  (Boolean) Always include zero or fit the axis to the data range.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "label": {
                    "type": "string",
                    "description": "Newstyle:  (String) The label for the custom link URL.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "max": {
                    "type": "string",
                    "description": "Newstyle:  (String) Specify the maximum value to show on the Y-axis.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "min": {
                    "type": "string",
                    "description": "Newstyle:  (String) Specify the minimum value to show on the Y-axis.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "scale": {
                    "type": "string",
                    "description": "Newstyle:  (String) Specifies the scale type. One of linear, log, pow, sqrt.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetTimeseriesDefinitionTime:DashboardWidgetTimeseriesDefinitionTime": {
            "properties": {
                "liveSpan": {
                    "type": "string",
                    "description": "Newstyle:  (String) The timeframe to use when displaying the widget. One of 10m, 30m, 1h, 4h, 1d, 2d, 1w, 1mo, 3mo, 6mo, 1y, alert.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetTimeseriesDefinitionYaxis:DashboardWidgetTimeseriesDefinitionYaxis": {
            "properties": {
                "includeZero": {
                    "type": "boolean",
                    "description": "Newstyle:  (Boolean) Always include zero or fit the axis to the data range.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "label": {
                    "type": "string",
                    "description": "Newstyle:  (String) The label for the custom link URL.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "max": {
                    "type": "string",
                    "description": "Newstyle:  (String) Specify the maximum value to show on the Y-axis.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "min": {
                    "type": "string",
                    "description": "Newstyle:  (String) Specify the minimum value to show on the Y-axis.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "scale": {
                    "type": "string",
                    "description": "Newstyle:  (String) Specifies the scale type. One of linear, log, pow, sqrt.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetToplistDefinition:DashboardWidgetToplistDefinition": {
            "properties": {
                "customLinks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetToplistDefinitionCustomLink:DashboardWidgetToplistDefinitionCustomLink"
                    },
                    "description": "Newstyle:  (Block List) Nested block describing a custom link. Multiple custom_link blocks are allowed with the structure below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "liveSpan": {
                    "type": "string",
                    "description": "Newstyle:  (String) The timeframe to use when displaying the widget. One of 10m, 30m, 1h, 4h, 1d, 2d, 1w, 1mo, 3mo, 6mo, 1y, alert.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "requests": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetToplistDefinitionRequest:DashboardWidgetToplistDefinitionRequest"
                    },
                    "description": "Newstyle:  (Block List) Nested block describing the request to use when displaying the widget. Multiple request blocks are allowed with the structure below (exactly one of q, apm_query, log_query, rum_query, security_query or process_query is required within the request block). (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "time": {
                    "$ref": "#/types/datadog:index/DashboardWidgetToplistDefinitionTime:DashboardWidgetToplistDefinitionTime",
                    "description": "Newstyle:  (Map of String, Deprecated) Nested block describing the timeframe to use when displaying the widget. The structure of this block is described below.  Define live_span directly in the widget definition instead.\n",
                    "deprecationMessage": "Define `live_span` directly in the widget definition instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "title": {
                    "type": "string",
                    "description": "Newstyle:  (String) The title of the widget.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleAlign": {
                    "type": "string",
                    "description": "Newstyle:  (String) The alignment of the widget's title. One of left, center, or right.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleSize": {
                    "type": "string",
                    "description": "Newstyle:  (String) The size of the widget's title. Default is 16.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetToplistDefinitionCustomLink:DashboardWidgetToplistDefinitionCustomLink": {
            "properties": {
                "label": {
                    "type": "string",
                    "description": "Newstyle:  (String) The label for the custom link URL.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "link": {
                    "type": "string",
                    "description": "Newstyle:  (String) The URL of the custom link.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "label",
                "link"
            ]
        },
        "datadog:index/DashboardWidgetToplistDefinitionRequest:DashboardWidgetToplistDefinitionRequest": {
            "properties": {
                "apmQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetToplistDefinitionRequestApmQuery:DashboardWidgetToplistDefinitionRequestApmQuery",
                    "description": "Newstyle:  (Block List, Max: 1) The query to use for this widget. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "conditionalFormats": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetToplistDefinitionRequestConditionalFormat:DashboardWidgetToplistDefinitionRequestConditionalFormat"
                    },
                    "description": "Newstyle:  (Block List) Conditional formats allow you to set the color of your widget content or background, depending on a rule applied to your data. Multiple conditional_formats blocks are allowed with the structure below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "formulas": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetToplistDefinitionRequestFormula:DashboardWidgetToplistDefinitionRequestFormula"
                    },
                    "description": "Newstyle:  (Block List) (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetToplistDefinitionRequestLogQuery:DashboardWidgetToplistDefinitionRequestLogQuery",
                    "description": "Newstyle:  (Block List, Max: 1) The query to use for this widget. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "processQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetToplistDefinitionRequestProcessQuery:DashboardWidgetToplistDefinitionRequestProcessQuery",
                    "description": "Newstyle:  (Block List, Max: 1) Process query using formulas and functions. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "q": {
                    "type": "string",
                    "description": "Newstyle:  (String) The metric query to use for this widget.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "queries": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetToplistDefinitionRequestQuery:DashboardWidgetToplistDefinitionRequestQuery"
                    },
                    "description": "Newstyle:  (String) Metrics query definition.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "rumQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetToplistDefinitionRequestRumQuery:DashboardWidgetToplistDefinitionRequestRumQuery",
                    "description": "Newstyle:  (Block List, Max: 1) The query to use for this widget. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "securityQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetToplistDefinitionRequestSecurityQuery:DashboardWidgetToplistDefinitionRequestSecurityQuery",
                    "description": "Newstyle:  (Block List, Max: 1) The query to use for this widget. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "style": {
                    "$ref": "#/types/datadog:index/DashboardWidgetToplistDefinitionRequestStyle:DashboardWidgetToplistDefinitionRequestStyle",
                    "description": "Newstyle:  (Block List, Max: 1) Define request widget style. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetToplistDefinitionRequestApmQuery:DashboardWidgetToplistDefinitionRequestApmQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:index/DashboardWidgetToplistDefinitionRequestApmQueryCompute:DashboardWidgetToplistDefinitionRequestApmQueryCompute",
                    "description": "Newstyle:  (Map of String, Deprecated) One of compute or multi_compute is required. The map has the keys as below.  Define compute_query list with one element instead.\n",
                    "deprecationMessage": "Define `compute_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetToplistDefinitionRequestApmQueryComputeQuery:DashboardWidgetToplistDefinitionRequestApmQueryComputeQuery",
                    "description": "Newstyle:  (Block List, Max: 1) One of compute_query or multi_compute is required. The map has the keys as below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetToplistDefinitionRequestApmQueryGroupBy:DashboardWidgetToplistDefinitionRequestApmQueryGroupBy"
                    },
                    "description": "Newstyle:  (Block List) Multiple group_by blocks are allowed with the structure below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "description": "Newstyle:  (String) Name of the index to query.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetToplistDefinitionRequestApmQueryMultiCompute:DashboardWidgetToplistDefinitionRequestApmQueryMultiCompute"
                    },
                    "description": "Newstyle:  (Block List) One of compute_query or multi_compute is required. Multiple multi_compute blocks are allowed with the structure below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:index/DashboardWidgetToplistDefinitionRequestApmQuerySearch:DashboardWidgetToplistDefinitionRequestApmQuerySearch",
                    "description": "Newstyle:  (Map of String, Deprecated) Map defining the search query to use.  Define search_query directly instead.\n",
                    "deprecationMessage": "Define `search_query` directly instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchQuery": {
                    "type": "string",
                    "description": "Newstyle:  (String) The search query to use.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetToplistDefinitionRequestApmQueryCompute:DashboardWidgetToplistDefinitionRequestApmQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Define a time interval in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetToplistDefinitionRequestApmQueryComputeQuery:DashboardWidgetToplistDefinitionRequestApmQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Define a time interval in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetToplistDefinitionRequestApmQueryGroupBy:DashboardWidgetToplistDefinitionRequestApmQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Maximum number of items in the group.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:index/DashboardWidgetToplistDefinitionRequestApmQueryGroupBySort:DashboardWidgetToplistDefinitionRequestApmQueryGroupBySort",
                    "description": "Newstyle:  (Map of String, Deprecated) One map is allowed with the keys as below.  Define sort_query list with one element instead.\n",
                    "deprecationMessage": "Define `sort_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetToplistDefinitionRequestApmQueryGroupBySortQuery:DashboardWidgetToplistDefinitionRequestApmQueryGroupBySortQuery",
                    "description": "Newstyle:  (Block List, Max: 1) List of exactly one element describing the sort query to use. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetToplistDefinitionRequestApmQueryGroupBySort:DashboardWidgetToplistDefinitionRequestApmQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "description": "Newstyle:  (String) Widget sorting methods.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetToplistDefinitionRequestApmQueryGroupBySortQuery:DashboardWidgetToplistDefinitionRequestApmQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "description": "Newstyle:  (String) Widget sorting methods.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetToplistDefinitionRequestApmQueryMultiCompute:DashboardWidgetToplistDefinitionRequestApmQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Define a time interval in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetToplistDefinitionRequestApmQuerySearch:DashboardWidgetToplistDefinitionRequestApmQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "description": "Newstyle:  (String) Metrics query definition.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/DashboardWidgetToplistDefinitionRequestConditionalFormat:DashboardWidgetToplistDefinitionRequestConditionalFormat": {
            "properties": {
                "comparator": {
                    "type": "string",
                    "description": "Newstyle:  (String) Comparator to use. One of \u003e, \u003e=, \u003c, or \u003c=.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "customBgColor": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "customFgColor": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "hideValue": {
                    "type": "boolean",
                    "description": "Newstyle:  (Boolean) Setting this to True hides values.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "imageUrl": {
                    "type": "string",
                    "description": "Newstyle:  (String) Displays an image as the background.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "metric": {
                    "type": "string",
                    "description": "Newstyle:  (String) Process metric name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "palette": {
                    "type": "string",
                    "description": "Newstyle:  (String) Color palette to apply to the widget. The available options are available here: https://docs.datadoghq.com/dashboards/widgets/timeseries/#appearance.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "timeframe": {
                    "type": "string",
                    "description": "Newstyle:  (String) Defines the displayed timeframe.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "number",
                    "description": "Newstyle:  (String) The value that should be assumed by the template variable in this preset\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "comparator",
                "palette",
                "value"
            ]
        },
        "datadog:index/DashboardWidgetToplistDefinitionRequestFormula:DashboardWidgetToplistDefinitionRequestFormula": {
            "properties": {
                "alias": {
                    "type": "string",
                    "description": "Newstyle:  (String) Expression alias.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "formulaExpression": {
                    "type": "string",
                    "description": "Newstyle:  (String) String expression built from queries, formulas and functions.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "$ref": "#/types/datadog:index/DashboardWidgetToplistDefinitionRequestFormulaLimit:DashboardWidgetToplistDefinitionRequestFormulaLimit",
                    "description": "Newstyle:  (Number) Maximum number of items in the group.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "formulaExpression"
            ]
        },
        "datadog:index/DashboardWidgetToplistDefinitionRequestFormulaLimit:DashboardWidgetToplistDefinitionRequestFormulaLimit": {
            "properties": {
                "count": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Number of results to return\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "description": "Newstyle:  (String) Widget sorting methods.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetToplistDefinitionRequestLogQuery:DashboardWidgetToplistDefinitionRequestLogQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:index/DashboardWidgetToplistDefinitionRequestLogQueryCompute:DashboardWidgetToplistDefinitionRequestLogQueryCompute",
                    "description": "Newstyle:  (Map of String, Deprecated) One of compute or multi_compute is required. The map has the keys as below.  Define compute_query list with one element instead.\n",
                    "deprecationMessage": "Define `compute_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetToplistDefinitionRequestLogQueryComputeQuery:DashboardWidgetToplistDefinitionRequestLogQueryComputeQuery",
                    "description": "Newstyle:  (Block List, Max: 1) One of compute_query or multi_compute is required. The map has the keys as below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetToplistDefinitionRequestLogQueryGroupBy:DashboardWidgetToplistDefinitionRequestLogQueryGroupBy"
                    },
                    "description": "Newstyle:  (Block List) Multiple group_by blocks are allowed with the structure below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "description": "Newstyle:  (String) Name of the index to query.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetToplistDefinitionRequestLogQueryMultiCompute:DashboardWidgetToplistDefinitionRequestLogQueryMultiCompute"
                    },
                    "description": "Newstyle:  (Block List) One of compute_query or multi_compute is required. Multiple multi_compute blocks are allowed with the structure below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:index/DashboardWidgetToplistDefinitionRequestLogQuerySearch:DashboardWidgetToplistDefinitionRequestLogQuerySearch",
                    "description": "Newstyle:  (Map of String, Deprecated) Map defining the search query to use.  Define search_query directly instead.\n",
                    "deprecationMessage": "Define `search_query` directly instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchQuery": {
                    "type": "string",
                    "description": "Newstyle:  (String) The search query to use.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetToplistDefinitionRequestLogQueryCompute:DashboardWidgetToplistDefinitionRequestLogQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Define a time interval in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetToplistDefinitionRequestLogQueryComputeQuery:DashboardWidgetToplistDefinitionRequestLogQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Define a time interval in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetToplistDefinitionRequestLogQueryGroupBy:DashboardWidgetToplistDefinitionRequestLogQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Maximum number of items in the group.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:index/DashboardWidgetToplistDefinitionRequestLogQueryGroupBySort:DashboardWidgetToplistDefinitionRequestLogQueryGroupBySort",
                    "description": "Newstyle:  (Map of String, Deprecated) One map is allowed with the keys as below.  Define sort_query list with one element instead.\n",
                    "deprecationMessage": "Define `sort_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetToplistDefinitionRequestLogQueryGroupBySortQuery:DashboardWidgetToplistDefinitionRequestLogQueryGroupBySortQuery",
                    "description": "Newstyle:  (Block List, Max: 1) List of exactly one element describing the sort query to use. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetToplistDefinitionRequestLogQueryGroupBySort:DashboardWidgetToplistDefinitionRequestLogQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "description": "Newstyle:  (String) Widget sorting methods.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetToplistDefinitionRequestLogQueryGroupBySortQuery:DashboardWidgetToplistDefinitionRequestLogQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "description": "Newstyle:  (String) Widget sorting methods.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetToplistDefinitionRequestLogQueryMultiCompute:DashboardWidgetToplistDefinitionRequestLogQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Define a time interval in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetToplistDefinitionRequestLogQuerySearch:DashboardWidgetToplistDefinitionRequestLogQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "description": "Newstyle:  (String) Metrics query definition.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/DashboardWidgetToplistDefinitionRequestProcessQuery:DashboardWidgetToplistDefinitionRequestProcessQuery": {
            "properties": {
                "filterBies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Newstyle:  (List of String) List of processes.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Maximum number of items in the group.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "metric": {
                    "type": "string",
                    "description": "Newstyle:  (String) Process metric name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchBy": {
                    "type": "string",
                    "description": "Newstyle:  (String) Your chosen search term.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "metric"
            ]
        },
        "datadog:index/DashboardWidgetToplistDefinitionRequestQuery:DashboardWidgetToplistDefinitionRequestQuery": {
            "properties": {
                "eventQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetToplistDefinitionRequestQueryEventQuery:DashboardWidgetToplistDefinitionRequestQueryEventQuery",
                    "description": "Newstyle:  (Block List, Max: 1) A timeseries formula and functions events query. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "metricQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetToplistDefinitionRequestQueryMetricQuery:DashboardWidgetToplistDefinitionRequestQueryMetricQuery",
                    "description": "Newstyle:  (Block List, Max: 1) A timeseries formula and functions metrics query. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "processQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetToplistDefinitionRequestQueryProcessQuery:DashboardWidgetToplistDefinitionRequestQueryProcessQuery",
                    "description": "Newstyle:  (Block List, Max: 1) Process query using formulas and functions. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetToplistDefinitionRequestQueryEventQuery:DashboardWidgetToplistDefinitionRequestQueryEventQuery": {
            "properties": {
                "computes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetToplistDefinitionRequestQueryEventQueryCompute:DashboardWidgetToplistDefinitionRequestQueryEventQueryCompute"
                    },
                    "description": "Newstyle:  (Map of String, Deprecated) One of compute or multi_compute is required. The map has the keys as below.  Define compute_query list with one element instead.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "dataSource": {
                    "type": "string",
                    "description": "Newstyle:  (String) Data source for process queries.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetToplistDefinitionRequestQueryEventQueryGroupBy:DashboardWidgetToplistDefinitionRequestQueryEventQueryGroupBy"
                    },
                    "description": "Newstyle:  (Block List) Multiple group_by blocks are allowed with the structure below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "indexes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Newstyle:  (List of String) An array of index names to query in the stream.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "Newstyle:  (String) The name of the template variable\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:index/DashboardWidgetToplistDefinitionRequestQueryEventQuerySearch:DashboardWidgetToplistDefinitionRequestQueryEventQuerySearch",
                    "description": "Newstyle:  (Map of String, Deprecated) Map defining the search query to use.  Define search_query directly instead.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "computes",
                "dataSource",
                "name"
            ]
        },
        "datadog:index/DashboardWidgetToplistDefinitionRequestQueryEventQueryCompute:DashboardWidgetToplistDefinitionRequestQueryEventQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Define a time interval in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "metric": {
                    "type": "string",
                    "description": "Newstyle:  (String) Process metric name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetToplistDefinitionRequestQueryEventQueryGroupBy:DashboardWidgetToplistDefinitionRequestQueryEventQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Maximum number of items in the group.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:index/DashboardWidgetToplistDefinitionRequestQueryEventQueryGroupBySort:DashboardWidgetToplistDefinitionRequestQueryEventQueryGroupBySort",
                    "description": "Newstyle:  (Map of String, Deprecated) One map is allowed with the keys as below.  Define sort_query list with one element instead.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "facet"
            ]
        },
        "datadog:index/DashboardWidgetToplistDefinitionRequestQueryEventQueryGroupBySort:DashboardWidgetToplistDefinitionRequestQueryEventQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "metric": {
                    "type": "string",
                    "description": "Newstyle:  (String) Process metric name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "description": "Newstyle:  (String) Widget sorting methods.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetToplistDefinitionRequestQueryEventQuerySearch:DashboardWidgetToplistDefinitionRequestQueryEventQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "description": "Newstyle:  (String) Metrics query definition.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/DashboardWidgetToplistDefinitionRequestQueryMetricQuery:DashboardWidgetToplistDefinitionRequestQueryMetricQuery": {
            "properties": {
                "aggregator": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation methods available for metrics queries.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "dataSource": {
                    "type": "string",
                    "description": "Newstyle:  (String) Data source for process queries.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "Newstyle:  (String) The name of the template variable\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "query": {
                    "type": "string",
                    "description": "Newstyle:  (String) Metrics query definition.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "name",
                "query"
            ]
        },
        "datadog:index/DashboardWidgetToplistDefinitionRequestQueryProcessQuery:DashboardWidgetToplistDefinitionRequestQueryProcessQuery": {
            "properties": {
                "aggregator": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation methods available for metrics queries.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "dataSource": {
                    "type": "string",
                    "description": "Newstyle:  (String) Data source for process queries.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "isNormalizedCpu": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Maximum number of items in the group.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "metric": {
                    "type": "string",
                    "description": "Newstyle:  (String) Process metric name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "Newstyle:  (String) The name of the template variable\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "type": "string",
                    "description": "Newstyle:  (Map of String, Deprecated) One map is allowed with the keys as below.  Define sort_query list with one element instead.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tagFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Newstyle:  (List of String) An array of tags to filter by.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "textFilter": {
                    "type": "string",
                    "description": "Newstyle:  (String) Text to use as filter.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "dataSource",
                "metric",
                "name"
            ]
        },
        "datadog:index/DashboardWidgetToplistDefinitionRequestRumQuery:DashboardWidgetToplistDefinitionRequestRumQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:index/DashboardWidgetToplistDefinitionRequestRumQueryCompute:DashboardWidgetToplistDefinitionRequestRumQueryCompute",
                    "description": "Newstyle:  (Map of String, Deprecated) One of compute or multi_compute is required. The map has the keys as below.  Define compute_query list with one element instead.\n",
                    "deprecationMessage": "Define `compute_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetToplistDefinitionRequestRumQueryComputeQuery:DashboardWidgetToplistDefinitionRequestRumQueryComputeQuery",
                    "description": "Newstyle:  (Block List, Max: 1) One of compute_query or multi_compute is required. The map has the keys as below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetToplistDefinitionRequestRumQueryGroupBy:DashboardWidgetToplistDefinitionRequestRumQueryGroupBy"
                    },
                    "description": "Newstyle:  (Block List) Multiple group_by blocks are allowed with the structure below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "description": "Newstyle:  (String) Name of the index to query.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetToplistDefinitionRequestRumQueryMultiCompute:DashboardWidgetToplistDefinitionRequestRumQueryMultiCompute"
                    },
                    "description": "Newstyle:  (Block List) One of compute_query or multi_compute is required. Multiple multi_compute blocks are allowed with the structure below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:index/DashboardWidgetToplistDefinitionRequestRumQuerySearch:DashboardWidgetToplistDefinitionRequestRumQuerySearch",
                    "description": "Newstyle:  (Map of String, Deprecated) Map defining the search query to use.  Define search_query directly instead.\n",
                    "deprecationMessage": "Define `search_query` directly instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchQuery": {
                    "type": "string",
                    "description": "Newstyle:  (String) The search query to use.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetToplistDefinitionRequestRumQueryCompute:DashboardWidgetToplistDefinitionRequestRumQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Define a time interval in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetToplistDefinitionRequestRumQueryComputeQuery:DashboardWidgetToplistDefinitionRequestRumQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Define a time interval in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetToplistDefinitionRequestRumQueryGroupBy:DashboardWidgetToplistDefinitionRequestRumQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Maximum number of items in the group.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:index/DashboardWidgetToplistDefinitionRequestRumQueryGroupBySort:DashboardWidgetToplistDefinitionRequestRumQueryGroupBySort",
                    "description": "Newstyle:  (Map of String, Deprecated) One map is allowed with the keys as below.  Define sort_query list with one element instead.\n",
                    "deprecationMessage": "Define `sort_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetToplistDefinitionRequestRumQueryGroupBySortQuery:DashboardWidgetToplistDefinitionRequestRumQueryGroupBySortQuery",
                    "description": "Newstyle:  (Block List, Max: 1) List of exactly one element describing the sort query to use. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetToplistDefinitionRequestRumQueryGroupBySort:DashboardWidgetToplistDefinitionRequestRumQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "description": "Newstyle:  (String) Widget sorting methods.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetToplistDefinitionRequestRumQueryGroupBySortQuery:DashboardWidgetToplistDefinitionRequestRumQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "description": "Newstyle:  (String) Widget sorting methods.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetToplistDefinitionRequestRumQueryMultiCompute:DashboardWidgetToplistDefinitionRequestRumQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Define a time interval in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetToplistDefinitionRequestRumQuerySearch:DashboardWidgetToplistDefinitionRequestRumQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "description": "Newstyle:  (String) Metrics query definition.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/DashboardWidgetToplistDefinitionRequestSecurityQuery:DashboardWidgetToplistDefinitionRequestSecurityQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:index/DashboardWidgetToplistDefinitionRequestSecurityQueryCompute:DashboardWidgetToplistDefinitionRequestSecurityQueryCompute",
                    "description": "Newstyle:  (Map of String, Deprecated) One of compute or multi_compute is required. The map has the keys as below.  Define compute_query list with one element instead.\n",
                    "deprecationMessage": "Define `compute_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetToplistDefinitionRequestSecurityQueryComputeQuery:DashboardWidgetToplistDefinitionRequestSecurityQueryComputeQuery",
                    "description": "Newstyle:  (Block List, Max: 1) One of compute_query or multi_compute is required. The map has the keys as below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetToplistDefinitionRequestSecurityQueryGroupBy:DashboardWidgetToplistDefinitionRequestSecurityQueryGroupBy"
                    },
                    "description": "Newstyle:  (Block List) Multiple group_by blocks are allowed with the structure below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "description": "Newstyle:  (String) Name of the index to query.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetToplistDefinitionRequestSecurityQueryMultiCompute:DashboardWidgetToplistDefinitionRequestSecurityQueryMultiCompute"
                    },
                    "description": "Newstyle:  (Block List) One of compute_query or multi_compute is required. Multiple multi_compute blocks are allowed with the structure below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:index/DashboardWidgetToplistDefinitionRequestSecurityQuerySearch:DashboardWidgetToplistDefinitionRequestSecurityQuerySearch",
                    "description": "Newstyle:  (Map of String, Deprecated) Map defining the search query to use.  Define search_query directly instead.\n",
                    "deprecationMessage": "Define `search_query` directly instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchQuery": {
                    "type": "string",
                    "description": "Newstyle:  (String) The search query to use.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetToplistDefinitionRequestSecurityQueryCompute:DashboardWidgetToplistDefinitionRequestSecurityQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Define a time interval in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetToplistDefinitionRequestSecurityQueryComputeQuery:DashboardWidgetToplistDefinitionRequestSecurityQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Define a time interval in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetToplistDefinitionRequestSecurityQueryGroupBy:DashboardWidgetToplistDefinitionRequestSecurityQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Maximum number of items in the group.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:index/DashboardWidgetToplistDefinitionRequestSecurityQueryGroupBySort:DashboardWidgetToplistDefinitionRequestSecurityQueryGroupBySort",
                    "description": "Newstyle:  (Map of String, Deprecated) One map is allowed with the keys as below.  Define sort_query list with one element instead.\n",
                    "deprecationMessage": "Define `sort_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetToplistDefinitionRequestSecurityQueryGroupBySortQuery:DashboardWidgetToplistDefinitionRequestSecurityQueryGroupBySortQuery",
                    "description": "Newstyle:  (Block List, Max: 1) List of exactly one element describing the sort query to use. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetToplistDefinitionRequestSecurityQueryGroupBySort:DashboardWidgetToplistDefinitionRequestSecurityQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "description": "Newstyle:  (String) Widget sorting methods.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetToplistDefinitionRequestSecurityQueryGroupBySortQuery:DashboardWidgetToplistDefinitionRequestSecurityQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "description": "Newstyle:  (String) Widget sorting methods.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetToplistDefinitionRequestSecurityQueryMultiCompute:DashboardWidgetToplistDefinitionRequestSecurityQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String) The aggregation method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "description": "Newstyle:  (String) Facet name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Define a time interval in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetToplistDefinitionRequestSecurityQuerySearch:DashboardWidgetToplistDefinitionRequestSecurityQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "description": "Newstyle:  (String) Metrics query definition.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/DashboardWidgetToplistDefinitionRequestStyle:DashboardWidgetToplistDefinitionRequestStyle": {
            "properties": {
                "palette": {
                    "type": "string",
                    "description": "Newstyle:  (String) Color palette to apply to the widget. The available options are available here: https://docs.datadoghq.com/dashboards/widgets/timeseries/#appearance.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetToplistDefinitionTime:DashboardWidgetToplistDefinitionTime": {
            "properties": {
                "liveSpan": {
                    "type": "string",
                    "description": "Newstyle:  (String) The timeframe to use when displaying the widget. One of 10m, 30m, 1h, 4h, 1d, 2d, 1w, 1mo, 3mo, 6mo, 1y, alert.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetTraceServiceDefinition:DashboardWidgetTraceServiceDefinition": {
            "properties": {
                "displayFormat": {
                    "type": "string",
                    "description": "Newstyle:  (String) Number of columns to display. Available values are: one_column, two_column, or three_column.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "env": {
                    "type": "string",
                    "description": "Newstyle:  (String) APM environment.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "liveSpan": {
                    "type": "string",
                    "description": "Newstyle:  (String) The timeframe to use when displaying the widget. One of 10m, 30m, 1h, 4h, 1d, 2d, 1w, 1mo, 3mo, 6mo, 1y, alert.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "service": {
                    "type": "string",
                    "description": "Newstyle:  (String) APM service.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "showBreakdown": {
                    "type": "boolean",
                    "description": "Newstyle:  (Boolean) Whether to show the latency breakdown or not.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "showDistribution": {
                    "type": "boolean",
                    "description": "Newstyle:  (Boolean) Whether to show the latency distribution or not.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "showErrors": {
                    "type": "boolean",
                    "description": "Newstyle:  (Boolean) Whether to show the error metrics or not.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "showHits": {
                    "type": "boolean",
                    "description": "Newstyle:  (Boolean) Whether to show the hits metrics or not\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "showLatency": {
                    "type": "boolean",
                    "description": "Newstyle:  (Boolean) Whether to show the latency metrics or not.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "showResourceList": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sizeFormat": {
                    "type": "string",
                    "description": "Newstyle:  (String) Size of the widget. Available values are: small, medium, or large.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "spanName": {
                    "type": "string",
                    "description": "Newstyle:  (String) APM span name\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "time": {
                    "$ref": "#/types/datadog:index/DashboardWidgetTraceServiceDefinitionTime:DashboardWidgetTraceServiceDefinitionTime",
                    "description": "Newstyle:  (Map of String, Deprecated) Nested block describing the timeframe to use when displaying the widget. The structure of this block is described below.  Define live_span directly in the widget definition instead.\n",
                    "deprecationMessage": "Define `live_span` directly in the widget definition instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "title": {
                    "type": "string",
                    "description": "Newstyle:  (String) The title of the widget.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleAlign": {
                    "type": "string",
                    "description": "Newstyle:  (String) The alignment of the widget's title. One of left, center, or right.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleSize": {
                    "type": "string",
                    "description": "Newstyle:  (String) The size of the widget's title. Default is 16.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "env",
                "service",
                "spanName"
            ]
        },
        "datadog:index/DashboardWidgetTraceServiceDefinitionTime:DashboardWidgetTraceServiceDefinitionTime": {
            "properties": {
                "liveSpan": {
                    "type": "string",
                    "description": "Newstyle:  (String) The timeframe to use when displaying the widget. One of 10m, 30m, 1h, 4h, 1d, 2d, 1w, 1mo, 3mo, 6mo, 1y, alert.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetWidgetLayout:DashboardWidgetWidgetLayout": {
            "properties": {
                "height": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) The height of the widget.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "width": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) The width of the widget.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "x": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) The position of the widget on the x (horizontal) axis. Should be greater or equal to 0.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "y": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) The position of the widget on the y (vertical) axis. Should be greater or equal to 0.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "height",
                "width",
                "x",
                "y"
            ]
        },
        "datadog:index/DowntimeRecurrence:DowntimeRecurrence": {
            "properties": {
                "period": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) How often to repeat as an integer. For example to repeat every 3 days, select a type of days and a period of 3.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "rrule": {
                    "type": "string",
                    "description": "Newstyle:  (String) The RRULE standard for defining recurring events. For example, to have a recurring event on the first day of each month, use FREQ=MONTHLY;INTERVAL=1. Most common rrule options from the iCalendar Spec are supported. Attributes specifying the duration in RRULE are not supported (for example, DTSTART, DTEND, DURATION).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "description": "Newstyle:  (String) One of days, weeks, months, or years\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "untilDate": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) The date at which the recurrence should end as a POSIX timestamp. until_occurrences and until_date are mutually exclusive.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "untilOccurrences": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) How many times the downtime will be rescheduled. until_occurrences and until_date are mutually exclusive.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "weekDays": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Newstyle:  (List of String) A list of week days to repeat on. Choose from: Mon, Tue, Wed, Thu, Fri, Sat or Sun. Only applicable when type is weeks. First letter must be capitalized.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "type"
            ]
        },
        "datadog:index/LogsArchiveAzure:LogsArchiveAzure": {
            "properties": {
                "clientId": {
                    "type": "string",
                    "description": "Newstyle:  (String) Your client id.\n"
                },
                "container": {
                    "type": "string",
                    "description": "Newstyle:  (String) The container where the archive will be stored.\n"
                },
                "path": {
                    "type": "string",
                    "description": "Newstyle:  (String) Path where the archive will be stored.\n"
                },
                "storageAccount": {
                    "type": "string",
                    "description": "Newstyle:  (String) The associated storage account.\n"
                },
                "tenantId": {
                    "type": "string",
                    "description": "Newstyle:  (String) Your tenant id.\n"
                }
            },
            "type": "object",
            "required": [
                "clientId",
                "container",
                "storageAccount",
                "tenantId"
            ]
        },
        "datadog:index/LogsArchiveAzureArchive:LogsArchiveAzureArchive": {
            "properties": {
                "clientId": {
                    "type": "string",
                    "description": "Newstyle:  (String) Your client id.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "container": {
                    "type": "string",
                    "description": "Newstyle:  (String) The container where the archive will be stored.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "path": {
                    "type": "string",
                    "description": "Newstyle:  (String) Path where the archive will be stored.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "storageAccount": {
                    "type": "string",
                    "description": "Newstyle:  (String) The associated storage account.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tenantId": {
                    "type": "string",
                    "description": "Newstyle:  (String) Your tenant id.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "clientId",
                "container",
                "storageAccount",
                "tenantId"
            ]
        },
        "datadog:index/LogsArchiveGcs:LogsArchiveGcs": {
            "properties": {
                "bucket": {
                    "type": "string",
                    "description": "Newstyle:  (String) Name of your s3 bucket.\n"
                },
                "clientEmail": {
                    "type": "string",
                    "description": "Newstyle:  (String) Your client email.\n"
                },
                "path": {
                    "type": "string",
                    "description": "Newstyle:  (String) Path where the archive will be stored.\n"
                },
                "projectId": {
                    "type": "string",
                    "description": "Newstyle:  (String) Your project id.\n"
                }
            },
            "type": "object",
            "required": [
                "bucket",
                "clientEmail",
                "path",
                "projectId"
            ]
        },
        "datadog:index/LogsArchiveGcsArchive:LogsArchiveGcsArchive": {
            "properties": {
                "bucket": {
                    "type": "string",
                    "description": "Newstyle:  (String) Name of your s3 bucket.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "clientEmail": {
                    "type": "string",
                    "description": "Newstyle:  (String) Your client email.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "path": {
                    "type": "string",
                    "description": "Newstyle:  (String) Path where the archive will be stored.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "projectId": {
                    "type": "string",
                    "description": "Newstyle:  (String) Your project id.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "bucket",
                "clientEmail",
                "path",
                "projectId"
            ]
        },
        "datadog:index/LogsArchiveS3:LogsArchiveS3": {
            "properties": {
                "accountId": {
                    "type": "string",
                    "description": "Newstyle:  (String) Your AWS account id.\n"
                },
                "bucket": {
                    "type": "string",
                    "description": "Newstyle:  (String) Name of your s3 bucket.\n"
                },
                "path": {
                    "type": "string",
                    "description": "Newstyle:  (String) Path where the archive will be stored.\n"
                },
                "roleName": {
                    "type": "string",
                    "description": "Newstyle:  (String) Your AWS role name\n"
                }
            },
            "type": "object",
            "required": [
                "accountId",
                "bucket",
                "path",
                "roleName"
            ]
        },
        "datadog:index/LogsArchiveS3Archive:LogsArchiveS3Archive": {
            "properties": {
                "accountId": {
                    "type": "string",
                    "description": "Newstyle:  (String) Your AWS account id.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "bucket": {
                    "type": "string",
                    "description": "Newstyle:  (String) Name of your s3 bucket.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "path": {
                    "type": "string",
                    "description": "Newstyle:  (String) Path where the archive will be stored.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "roleName": {
                    "type": "string",
                    "description": "Newstyle:  (String) Your AWS role name\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "accountId",
                "bucket",
                "path",
                "roleName"
            ]
        },
        "datadog:index/LogsCustomPipelineFilter:LogsCustomPipelineFilter": {
            "properties": {
                "query": {
                    "type": "string",
                    "description": "Newstyle:  (String) Filter criteria of the category.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/LogsCustomPipelineProcessor:LogsCustomPipelineProcessor": {
            "properties": {
                "arithmeticProcessor": {
                    "$ref": "#/types/datadog:index/LogsCustomPipelineProcessorArithmeticProcessor:LogsCustomPipelineProcessorArithmeticProcessor",
                    "description": "Newstyle:  (Block List, Max: 1) Arithmetic Processor. More information can be found in the  (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "attributeRemapper": {
                    "$ref": "#/types/datadog:index/LogsCustomPipelineProcessorAttributeRemapper:LogsCustomPipelineProcessorAttributeRemapper",
                    "description": "Newstyle:  (Block List, Max: 1) Attribute Remapper Processor. More information can be found in the  (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "categoryProcessor": {
                    "$ref": "#/types/datadog:index/LogsCustomPipelineProcessorCategoryProcessor:LogsCustomPipelineProcessorCategoryProcessor",
                    "description": "Newstyle:  (Block List, Max: 1) Category Processor. More information can be found in the  (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "dateRemapper": {
                    "$ref": "#/types/datadog:index/LogsCustomPipelineProcessorDateRemapper:LogsCustomPipelineProcessorDateRemapper",
                    "description": "Newstyle:  (Block List, Max: 1) Date Remapper Processor. More information can be found in the  (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "geoIpParser": {
                    "$ref": "#/types/datadog:index/LogsCustomPipelineProcessorGeoIpParser:LogsCustomPipelineProcessorGeoIpParser",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "grokParser": {
                    "$ref": "#/types/datadog:index/LogsCustomPipelineProcessorGrokParser:LogsCustomPipelineProcessorGrokParser",
                    "description": "Newstyle:  (Block List, Max: 1) Grok Processor. More information can be found in the  (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "lookupProcessor": {
                    "$ref": "#/types/datadog:index/LogsCustomPipelineProcessorLookupProcessor:LogsCustomPipelineProcessorLookupProcessor",
                    "description": "Newstyle:  (Block List, Max: 1) Lookup Processor. More information can be found in the  (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "messageRemapper": {
                    "$ref": "#/types/datadog:index/LogsCustomPipelineProcessorMessageRemapper:LogsCustomPipelineProcessorMessageRemapper",
                    "description": "Newstyle:  (Block List, Max: 1) Message Remapper Processor. More information can be found in the  (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "pipeline": {
                    "$ref": "#/types/datadog:index/LogsCustomPipelineProcessorPipeline:LogsCustomPipelineProcessorPipeline",
                    "description": "Newstyle:  (Block List, Max: 1) (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "serviceRemapper": {
                    "$ref": "#/types/datadog:index/LogsCustomPipelineProcessorServiceRemapper:LogsCustomPipelineProcessorServiceRemapper",
                    "description": "Newstyle:  (Block List, Max: 1) Service Remapper Processor. More information can be found in the  (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "statusRemapper": {
                    "$ref": "#/types/datadog:index/LogsCustomPipelineProcessorStatusRemapper:LogsCustomPipelineProcessorStatusRemapper",
                    "description": "Newstyle:  (Block List, Max: 1) Status Remapper Processor. More information can be found in the  (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "stringBuilderProcessor": {
                    "$ref": "#/types/datadog:index/LogsCustomPipelineProcessorStringBuilderProcessor:LogsCustomPipelineProcessorStringBuilderProcessor",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "traceIdRemapper": {
                    "$ref": "#/types/datadog:index/LogsCustomPipelineProcessorTraceIdRemapper:LogsCustomPipelineProcessorTraceIdRemapper",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "urlParser": {
                    "$ref": "#/types/datadog:index/LogsCustomPipelineProcessorUrlParser:LogsCustomPipelineProcessorUrlParser",
                    "description": "Newstyle:  (Block List, Max: 1) URL Parser Processor. More information can be found in the  (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "userAgentParser": {
                    "$ref": "#/types/datadog:index/LogsCustomPipelineProcessorUserAgentParser:LogsCustomPipelineProcessorUserAgentParser",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/LogsCustomPipelineProcessorArithmeticProcessor:LogsCustomPipelineProcessorArithmeticProcessor": {
            "properties": {
                "expression": {
                    "type": "string",
                    "description": "Newstyle:  (String) Arithmetic operation between one or more log attributes.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "isEnabled": {
                    "type": "boolean",
                    "description": "Newstyle:  (Boolean) If the processor is enabled or not.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "isReplaceMissing": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "Newstyle:  (String) Name of the processor\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "target": {
                    "type": "string",
                    "description": "Newstyle:  (String) Name of the parent attribute that contains all the extracted details from the sources.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "expression",
                "target"
            ]
        },
        "datadog:index/LogsCustomPipelineProcessorAttributeRemapper:LogsCustomPipelineProcessorAttributeRemapper": {
            "properties": {
                "isEnabled": {
                    "type": "boolean",
                    "description": "Newstyle:  (Boolean) If the processor is enabled or not.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "Newstyle:  (String) Name of the processor\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "overrideOnConflict": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "preserveSource": {
                    "type": "boolean",
                    "description": "Newstyle:  (Boolean) Remove or preserve the remapped source element.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sourceType": {
                    "type": "string",
                    "description": "Newstyle:  (String) Defines where the sources are from (log attribute or tag).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sources": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Newstyle:  (List of String) List of source attributes.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "target": {
                    "type": "string",
                    "description": "Newstyle:  (String) Name of the parent attribute that contains all the extracted details from the sources.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "targetFormat": {
                    "type": "string",
                    "description": "Newstyle:  (String) If the target_type of the remapper is attribute, try to cast the value to a new specific type. If the cast is not possible, the original type is kept. string, integer, or double are the possible types. If the target_type is tag, this parameter may not be specified.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "targetType": {
                    "type": "string",
                    "description": "Newstyle:  (String) Defines if the target is a log attribute or tag.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "sourceType",
                "sources",
                "target",
                "targetType"
            ]
        },
        "datadog:index/LogsCustomPipelineProcessorCategoryProcessor:LogsCustomPipelineProcessorCategoryProcessor": {
            "properties": {
                "categories": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/LogsCustomPipelineProcessorCategoryProcessorCategory:LogsCustomPipelineProcessorCategoryProcessorCategory"
                    },
                    "description": "Newstyle:  (Block List, Min: 1) List of filters to match or exclude a log with their corresponding name to assign a custom value to the log. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "isEnabled": {
                    "type": "boolean",
                    "description": "Newstyle:  (Boolean) If the processor is enabled or not.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "Newstyle:  (String) Name of the processor\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "target": {
                    "type": "string",
                    "description": "Newstyle:  (String) Name of the parent attribute that contains all the extracted details from the sources.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "categories",
                "target"
            ]
        },
        "datadog:index/LogsCustomPipelineProcessorCategoryProcessorCategory:LogsCustomPipelineProcessorCategoryProcessorCategory": {
            "properties": {
                "filter": {
                    "$ref": "#/types/datadog:index/LogsCustomPipelineProcessorCategoryProcessorCategoryFilter:LogsCustomPipelineProcessorCategoryProcessorCategoryFilter",
                    "description": "Newstyle:  (Block List, Min: 1, Max: 1) (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "Newstyle:  (String) Name of the processor\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "filter",
                "name"
            ]
        },
        "datadog:index/LogsCustomPipelineProcessorCategoryProcessorCategoryFilter:LogsCustomPipelineProcessorCategoryProcessorCategoryFilter": {
            "properties": {
                "query": {
                    "type": "string",
                    "description": "Newstyle:  (String) Filter criteria of the category.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/LogsCustomPipelineProcessorDateRemapper:LogsCustomPipelineProcessorDateRemapper": {
            "properties": {
                "isEnabled": {
                    "type": "boolean",
                    "description": "Newstyle:  (Boolean) If the processor is enabled or not.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "Newstyle:  (String) Name of the processor\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sources": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Newstyle:  (List of String) List of source attributes.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "sources"
            ]
        },
        "datadog:index/LogsCustomPipelineProcessorGeoIpParser:LogsCustomPipelineProcessorGeoIpParser": {
            "properties": {
                "isEnabled": {
                    "type": "boolean",
                    "description": "Newstyle:  (Boolean) If the processor is enabled or not.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "Newstyle:  (String) Name of the processor\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sources": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Newstyle:  (List of String) List of source attributes.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "target": {
                    "type": "string",
                    "description": "Newstyle:  (String) Name of the parent attribute that contains all the extracted details from the sources.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "sources",
                "target"
            ]
        },
        "datadog:index/LogsCustomPipelineProcessorGrokParser:LogsCustomPipelineProcessorGrokParser": {
            "properties": {
                "grok": {
                    "$ref": "#/types/datadog:index/LogsCustomPipelineProcessorGrokParserGrok:LogsCustomPipelineProcessorGrokParserGrok",
                    "description": "Newstyle:  (Block List, Min: 1, Max: 1) (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "isEnabled": {
                    "type": "boolean",
                    "description": "Newstyle:  (Boolean) If the processor is enabled or not.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "Newstyle:  (String) Name of the processor\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "samples": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Newstyle:  (List of String) List of sample logs for this parser. It can save up to 5 samples. Each sample takes up to 5000 characters.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "source": {
                    "type": "string",
                    "description": "Newstyle:  (String) Name of the source attribute used to do the lookup.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "grok",
                "source"
            ]
        },
        "datadog:index/LogsCustomPipelineProcessorGrokParserGrok:LogsCustomPipelineProcessorGrokParserGrok": {
            "properties": {
                "matchRules": {
                    "type": "string",
                    "description": "Newstyle:  (String) Match rules for your grok parser.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "supportRules": {
                    "type": "string",
                    "description": "Newstyle:  (String) Support rules for your grok parser.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "matchRules",
                "supportRules"
            ]
        },
        "datadog:index/LogsCustomPipelineProcessorLookupProcessor:LogsCustomPipelineProcessorLookupProcessor": {
            "properties": {
                "defaultLookup": {
                    "type": "string",
                    "description": "Newstyle:  (String) Default lookup value to use if there is no entry in the lookup table for the value of the source attribute.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "isEnabled": {
                    "type": "boolean",
                    "description": "Newstyle:  (Boolean) If the processor is enabled or not.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "lookupTables": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Newstyle:  (List of String) List of entries of the lookup table using key,value format.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "Newstyle:  (String) Name of the processor\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "source": {
                    "type": "string",
                    "description": "Newstyle:  (String) Name of the source attribute used to do the lookup.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "target": {
                    "type": "string",
                    "description": "Newstyle:  (String) Name of the parent attribute that contains all the extracted details from the sources.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "lookupTables",
                "source",
                "target"
            ]
        },
        "datadog:index/LogsCustomPipelineProcessorMessageRemapper:LogsCustomPipelineProcessorMessageRemapper": {
            "properties": {
                "isEnabled": {
                    "type": "boolean",
                    "description": "Newstyle:  (Boolean) If the processor is enabled or not.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "Newstyle:  (String) Name of the processor\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sources": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Newstyle:  (List of String) List of source attributes.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "sources"
            ]
        },
        "datadog:index/LogsCustomPipelineProcessorPipeline:LogsCustomPipelineProcessorPipeline": {
            "properties": {
                "filters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/LogsCustomPipelineProcessorPipelineFilter:LogsCustomPipelineProcessorPipelineFilter"
                    },
                    "description": "Newstyle:  (Block List, Min: 1, Max: 1) (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "isEnabled": {
                    "type": "boolean",
                    "description": "Newstyle:  (Boolean) If the processor is enabled or not.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "Newstyle:  (String) Name of the processor\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "processors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/LogsCustomPipelineProcessorPipelineProcessor:LogsCustomPipelineProcessorPipelineProcessor"
                    },
                    "description": "Newstyle:  (Block List) (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "filters",
                "name"
            ]
        },
        "datadog:index/LogsCustomPipelineProcessorPipelineFilter:LogsCustomPipelineProcessorPipelineFilter": {
            "properties": {
                "query": {
                    "type": "string",
                    "description": "Newstyle:  (String) Filter criteria of the category.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/LogsCustomPipelineProcessorPipelineProcessor:LogsCustomPipelineProcessorPipelineProcessor": {
            "properties": {
                "arithmeticProcessor": {
                    "$ref": "#/types/datadog:index/LogsCustomPipelineProcessorPipelineProcessorArithmeticProcessor:LogsCustomPipelineProcessorPipelineProcessorArithmeticProcessor",
                    "description": "Newstyle:  (Block List, Max: 1) Arithmetic Processor. More information can be found in the  (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "attributeRemapper": {
                    "$ref": "#/types/datadog:index/LogsCustomPipelineProcessorPipelineProcessorAttributeRemapper:LogsCustomPipelineProcessorPipelineProcessorAttributeRemapper",
                    "description": "Newstyle:  (Block List, Max: 1) Attribute Remapper Processor. More information can be found in the  (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "categoryProcessor": {
                    "$ref": "#/types/datadog:index/LogsCustomPipelineProcessorPipelineProcessorCategoryProcessor:LogsCustomPipelineProcessorPipelineProcessorCategoryProcessor",
                    "description": "Newstyle:  (Block List, Max: 1) Category Processor. More information can be found in the  (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "dateRemapper": {
                    "$ref": "#/types/datadog:index/LogsCustomPipelineProcessorPipelineProcessorDateRemapper:LogsCustomPipelineProcessorPipelineProcessorDateRemapper",
                    "description": "Newstyle:  (Block List, Max: 1) Date Remapper Processor. More information can be found in the  (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "geoIpParser": {
                    "$ref": "#/types/datadog:index/LogsCustomPipelineProcessorPipelineProcessorGeoIpParser:LogsCustomPipelineProcessorPipelineProcessorGeoIpParser",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "grokParser": {
                    "$ref": "#/types/datadog:index/LogsCustomPipelineProcessorPipelineProcessorGrokParser:LogsCustomPipelineProcessorPipelineProcessorGrokParser",
                    "description": "Newstyle:  (Block List, Max: 1) Grok Processor. More information can be found in the  (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "lookupProcessor": {
                    "$ref": "#/types/datadog:index/LogsCustomPipelineProcessorPipelineProcessorLookupProcessor:LogsCustomPipelineProcessorPipelineProcessorLookupProcessor",
                    "description": "Newstyle:  (Block List, Max: 1) Lookup Processor. More information can be found in the  (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "messageRemapper": {
                    "$ref": "#/types/datadog:index/LogsCustomPipelineProcessorPipelineProcessorMessageRemapper:LogsCustomPipelineProcessorPipelineProcessorMessageRemapper",
                    "description": "Newstyle:  (Block List, Max: 1) Message Remapper Processor. More information can be found in the  (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "serviceRemapper": {
                    "$ref": "#/types/datadog:index/LogsCustomPipelineProcessorPipelineProcessorServiceRemapper:LogsCustomPipelineProcessorPipelineProcessorServiceRemapper",
                    "description": "Newstyle:  (Block List, Max: 1) Service Remapper Processor. More information can be found in the  (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "statusRemapper": {
                    "$ref": "#/types/datadog:index/LogsCustomPipelineProcessorPipelineProcessorStatusRemapper:LogsCustomPipelineProcessorPipelineProcessorStatusRemapper",
                    "description": "Newstyle:  (Block List, Max: 1) Status Remapper Processor. More information can be found in the  (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "stringBuilderProcessor": {
                    "$ref": "#/types/datadog:index/LogsCustomPipelineProcessorPipelineProcessorStringBuilderProcessor:LogsCustomPipelineProcessorPipelineProcessorStringBuilderProcessor",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "traceIdRemapper": {
                    "$ref": "#/types/datadog:index/LogsCustomPipelineProcessorPipelineProcessorTraceIdRemapper:LogsCustomPipelineProcessorPipelineProcessorTraceIdRemapper",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "urlParser": {
                    "$ref": "#/types/datadog:index/LogsCustomPipelineProcessorPipelineProcessorUrlParser:LogsCustomPipelineProcessorPipelineProcessorUrlParser",
                    "description": "Newstyle:  (Block List, Max: 1) URL Parser Processor. More information can be found in the  (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "userAgentParser": {
                    "$ref": "#/types/datadog:index/LogsCustomPipelineProcessorPipelineProcessorUserAgentParser:LogsCustomPipelineProcessorPipelineProcessorUserAgentParser",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/LogsCustomPipelineProcessorPipelineProcessorArithmeticProcessor:LogsCustomPipelineProcessorPipelineProcessorArithmeticProcessor": {
            "properties": {
                "expression": {
                    "type": "string",
                    "description": "Newstyle:  (String) Arithmetic operation between one or more log attributes.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "isEnabled": {
                    "type": "boolean",
                    "description": "Newstyle:  (Boolean) If the processor is enabled or not.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "isReplaceMissing": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "Newstyle:  (String) Name of the processor\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "target": {
                    "type": "string",
                    "description": "Newstyle:  (String) Name of the parent attribute that contains all the extracted details from the sources.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "expression",
                "target"
            ]
        },
        "datadog:index/LogsCustomPipelineProcessorPipelineProcessorAttributeRemapper:LogsCustomPipelineProcessorPipelineProcessorAttributeRemapper": {
            "properties": {
                "isEnabled": {
                    "type": "boolean",
                    "description": "Newstyle:  (Boolean) If the processor is enabled or not.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "Newstyle:  (String) Name of the processor\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "overrideOnConflict": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "preserveSource": {
                    "type": "boolean",
                    "description": "Newstyle:  (Boolean) Remove or preserve the remapped source element.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sourceType": {
                    "type": "string",
                    "description": "Newstyle:  (String) Defines where the sources are from (log attribute or tag).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sources": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Newstyle:  (List of String) List of source attributes.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "target": {
                    "type": "string",
                    "description": "Newstyle:  (String) Name of the parent attribute that contains all the extracted details from the sources.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "targetFormat": {
                    "type": "string",
                    "description": "Newstyle:  (String) If the target_type of the remapper is attribute, try to cast the value to a new specific type. If the cast is not possible, the original type is kept. string, integer, or double are the possible types. If the target_type is tag, this parameter may not be specified.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "targetType": {
                    "type": "string",
                    "description": "Newstyle:  (String) Defines if the target is a log attribute or tag.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "sourceType",
                "sources",
                "target",
                "targetType"
            ]
        },
        "datadog:index/LogsCustomPipelineProcessorPipelineProcessorCategoryProcessor:LogsCustomPipelineProcessorPipelineProcessorCategoryProcessor": {
            "properties": {
                "categories": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/LogsCustomPipelineProcessorPipelineProcessorCategoryProcessorCategory:LogsCustomPipelineProcessorPipelineProcessorCategoryProcessorCategory"
                    },
                    "description": "Newstyle:  (Block List, Min: 1) List of filters to match or exclude a log with their corresponding name to assign a custom value to the log. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "isEnabled": {
                    "type": "boolean",
                    "description": "Newstyle:  (Boolean) If the processor is enabled or not.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "Newstyle:  (String) Name of the processor\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "target": {
                    "type": "string",
                    "description": "Newstyle:  (String) Name of the parent attribute that contains all the extracted details from the sources.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "categories",
                "target"
            ]
        },
        "datadog:index/LogsCustomPipelineProcessorPipelineProcessorCategoryProcessorCategory:LogsCustomPipelineProcessorPipelineProcessorCategoryProcessorCategory": {
            "properties": {
                "filter": {
                    "$ref": "#/types/datadog:index/LogsCustomPipelineProcessorPipelineProcessorCategoryProcessorCategoryFilter:LogsCustomPipelineProcessorPipelineProcessorCategoryProcessorCategoryFilter",
                    "description": "Newstyle:  (Block List, Min: 1, Max: 1) (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "Newstyle:  (String) Name of the processor\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "filter",
                "name"
            ]
        },
        "datadog:index/LogsCustomPipelineProcessorPipelineProcessorCategoryProcessorCategoryFilter:LogsCustomPipelineProcessorPipelineProcessorCategoryProcessorCategoryFilter": {
            "properties": {
                "query": {
                    "type": "string",
                    "description": "Newstyle:  (String) Filter criteria of the category.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/LogsCustomPipelineProcessorPipelineProcessorDateRemapper:LogsCustomPipelineProcessorPipelineProcessorDateRemapper": {
            "properties": {
                "isEnabled": {
                    "type": "boolean",
                    "description": "Newstyle:  (Boolean) If the processor is enabled or not.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "Newstyle:  (String) Name of the processor\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sources": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Newstyle:  (List of String) List of source attributes.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "sources"
            ]
        },
        "datadog:index/LogsCustomPipelineProcessorPipelineProcessorGeoIpParser:LogsCustomPipelineProcessorPipelineProcessorGeoIpParser": {
            "properties": {
                "isEnabled": {
                    "type": "boolean",
                    "description": "Newstyle:  (Boolean) If the processor is enabled or not.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "Newstyle:  (String) Name of the processor\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sources": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Newstyle:  (List of String) List of source attributes.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "target": {
                    "type": "string",
                    "description": "Newstyle:  (String) Name of the parent attribute that contains all the extracted details from the sources.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "sources",
                "target"
            ]
        },
        "datadog:index/LogsCustomPipelineProcessorPipelineProcessorGrokParser:LogsCustomPipelineProcessorPipelineProcessorGrokParser": {
            "properties": {
                "grok": {
                    "$ref": "#/types/datadog:index/LogsCustomPipelineProcessorPipelineProcessorGrokParserGrok:LogsCustomPipelineProcessorPipelineProcessorGrokParserGrok",
                    "description": "Newstyle:  (Block List, Min: 1, Max: 1) (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "isEnabled": {
                    "type": "boolean",
                    "description": "Newstyle:  (Boolean) If the processor is enabled or not.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "Newstyle:  (String) Name of the processor\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "samples": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Newstyle:  (List of String) List of sample logs for this parser. It can save up to 5 samples. Each sample takes up to 5000 characters.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "source": {
                    "type": "string",
                    "description": "Newstyle:  (String) Name of the source attribute used to do the lookup.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "grok",
                "source"
            ]
        },
        "datadog:index/LogsCustomPipelineProcessorPipelineProcessorGrokParserGrok:LogsCustomPipelineProcessorPipelineProcessorGrokParserGrok": {
            "properties": {
                "matchRules": {
                    "type": "string",
                    "description": "Newstyle:  (String) Match rules for your grok parser.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "supportRules": {
                    "type": "string",
                    "description": "Newstyle:  (String) Support rules for your grok parser.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "matchRules",
                "supportRules"
            ]
        },
        "datadog:index/LogsCustomPipelineProcessorPipelineProcessorLookupProcessor:LogsCustomPipelineProcessorPipelineProcessorLookupProcessor": {
            "properties": {
                "defaultLookup": {
                    "type": "string",
                    "description": "Newstyle:  (String) Default lookup value to use if there is no entry in the lookup table for the value of the source attribute.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "isEnabled": {
                    "type": "boolean",
                    "description": "Newstyle:  (Boolean) If the processor is enabled or not.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "lookupTables": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Newstyle:  (List of String) List of entries of the lookup table using key,value format.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "Newstyle:  (String) Name of the processor\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "source": {
                    "type": "string",
                    "description": "Newstyle:  (String) Name of the source attribute used to do the lookup.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "target": {
                    "type": "string",
                    "description": "Newstyle:  (String) Name of the parent attribute that contains all the extracted details from the sources.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "lookupTables",
                "source",
                "target"
            ]
        },
        "datadog:index/LogsCustomPipelineProcessorPipelineProcessorMessageRemapper:LogsCustomPipelineProcessorPipelineProcessorMessageRemapper": {
            "properties": {
                "isEnabled": {
                    "type": "boolean",
                    "description": "Newstyle:  (Boolean) If the processor is enabled or not.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "Newstyle:  (String) Name of the processor\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sources": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Newstyle:  (List of String) List of source attributes.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "sources"
            ]
        },
        "datadog:index/LogsCustomPipelineProcessorPipelineProcessorServiceRemapper:LogsCustomPipelineProcessorPipelineProcessorServiceRemapper": {
            "properties": {
                "isEnabled": {
                    "type": "boolean",
                    "description": "Newstyle:  (Boolean) If the processor is enabled or not.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "Newstyle:  (String) Name of the processor\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sources": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Newstyle:  (List of String) List of source attributes.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "sources"
            ]
        },
        "datadog:index/LogsCustomPipelineProcessorPipelineProcessorStatusRemapper:LogsCustomPipelineProcessorPipelineProcessorStatusRemapper": {
            "properties": {
                "isEnabled": {
                    "type": "boolean",
                    "description": "Newstyle:  (Boolean) If the processor is enabled or not.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "Newstyle:  (String) Name of the processor\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sources": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Newstyle:  (List of String) List of source attributes.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "sources"
            ]
        },
        "datadog:index/LogsCustomPipelineProcessorPipelineProcessorStringBuilderProcessor:LogsCustomPipelineProcessorPipelineProcessorStringBuilderProcessor": {
            "properties": {
                "isEnabled": {
                    "type": "boolean",
                    "description": "Newstyle:  (Boolean) If the processor is enabled or not.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "isReplaceMissing": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "Newstyle:  (String) Name of the processor\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "target": {
                    "type": "string",
                    "description": "Newstyle:  (String) Name of the parent attribute that contains all the extracted details from the sources.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "template": {
                    "type": "string",
                    "description": "Newstyle:  (String) The formula with one or more attributes and raw text.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "target",
                "template"
            ]
        },
        "datadog:index/LogsCustomPipelineProcessorPipelineProcessorTraceIdRemapper:LogsCustomPipelineProcessorPipelineProcessorTraceIdRemapper": {
            "properties": {
                "isEnabled": {
                    "type": "boolean",
                    "description": "Newstyle:  (Boolean) If the processor is enabled or not.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "Newstyle:  (String) Name of the processor\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sources": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Newstyle:  (List of String) List of source attributes.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "sources"
            ]
        },
        "datadog:index/LogsCustomPipelineProcessorPipelineProcessorUrlParser:LogsCustomPipelineProcessorPipelineProcessorUrlParser": {
            "properties": {
                "isEnabled": {
                    "type": "boolean",
                    "description": "Newstyle:  (Boolean) If the processor is enabled or not.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "Newstyle:  (String) Name of the processor\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "normalizeEndingSlashes": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sources": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Newstyle:  (List of String) List of source attributes.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "target": {
                    "type": "string",
                    "description": "Newstyle:  (String) Name of the parent attribute that contains all the extracted details from the sources.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "sources",
                "target"
            ]
        },
        "datadog:index/LogsCustomPipelineProcessorPipelineProcessorUserAgentParser:LogsCustomPipelineProcessorPipelineProcessorUserAgentParser": {
            "properties": {
                "isEnabled": {
                    "type": "boolean",
                    "description": "Newstyle:  (Boolean) If the processor is enabled or not.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "isEncoded": {
                    "type": "boolean",
                    "description": "Newstyle:  (Boolean) If the source attribute is URL encoded or not.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "Newstyle:  (String) Name of the processor\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sources": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Newstyle:  (List of String) List of source attributes.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "target": {
                    "type": "string",
                    "description": "Newstyle:  (String) Name of the parent attribute that contains all the extracted details from the sources.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "sources",
                "target"
            ]
        },
        "datadog:index/LogsCustomPipelineProcessorServiceRemapper:LogsCustomPipelineProcessorServiceRemapper": {
            "properties": {
                "isEnabled": {
                    "type": "boolean",
                    "description": "Newstyle:  (Boolean) If the processor is enabled or not.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "Newstyle:  (String) Name of the processor\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sources": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Newstyle:  (List of String) List of source attributes.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "sources"
            ]
        },
        "datadog:index/LogsCustomPipelineProcessorStatusRemapper:LogsCustomPipelineProcessorStatusRemapper": {
            "properties": {
                "isEnabled": {
                    "type": "boolean",
                    "description": "Newstyle:  (Boolean) If the processor is enabled or not.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "Newstyle:  (String) Name of the processor\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sources": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Newstyle:  (List of String) List of source attributes.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "sources"
            ]
        },
        "datadog:index/LogsCustomPipelineProcessorStringBuilderProcessor:LogsCustomPipelineProcessorStringBuilderProcessor": {
            "properties": {
                "isEnabled": {
                    "type": "boolean",
                    "description": "Newstyle:  (Boolean) If the processor is enabled or not.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "isReplaceMissing": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "Newstyle:  (String) Name of the processor\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "target": {
                    "type": "string",
                    "description": "Newstyle:  (String) Name of the parent attribute that contains all the extracted details from the sources.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "template": {
                    "type": "string",
                    "description": "Newstyle:  (String) The formula with one or more attributes and raw text.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "target",
                "template"
            ]
        },
        "datadog:index/LogsCustomPipelineProcessorTraceIdRemapper:LogsCustomPipelineProcessorTraceIdRemapper": {
            "properties": {
                "isEnabled": {
                    "type": "boolean",
                    "description": "Newstyle:  (Boolean) If the processor is enabled or not.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "Newstyle:  (String) Name of the processor\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sources": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Newstyle:  (List of String) List of source attributes.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "sources"
            ]
        },
        "datadog:index/LogsCustomPipelineProcessorUrlParser:LogsCustomPipelineProcessorUrlParser": {
            "properties": {
                "isEnabled": {
                    "type": "boolean",
                    "description": "Newstyle:  (Boolean) If the processor is enabled or not.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "Newstyle:  (String) Name of the processor\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "normalizeEndingSlashes": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sources": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Newstyle:  (List of String) List of source attributes.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "target": {
                    "type": "string",
                    "description": "Newstyle:  (String) Name of the parent attribute that contains all the extracted details from the sources.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "sources",
                "target"
            ]
        },
        "datadog:index/LogsCustomPipelineProcessorUserAgentParser:LogsCustomPipelineProcessorUserAgentParser": {
            "properties": {
                "isEnabled": {
                    "type": "boolean",
                    "description": "Newstyle:  (Boolean) If the processor is enabled or not.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "isEncoded": {
                    "type": "boolean",
                    "description": "Newstyle:  (Boolean) If the source attribute is URL encoded or not.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "Newstyle:  (String) Name of the processor\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sources": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Newstyle:  (List of String) List of source attributes.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "target": {
                    "type": "string",
                    "description": "Newstyle:  (String) Name of the parent attribute that contains all the extracted details from the sources.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "sources",
                "target"
            ]
        },
        "datadog:index/LogsIndexExclusionFilter:LogsIndexExclusionFilter": {
            "properties": {
                "filters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/LogsIndexExclusionFilterFilter:LogsIndexExclusionFilterFilter"
                    },
                    "description": "Newstyle:  (Block List) (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "isEnabled": {
                    "type": "boolean",
                    "description": "Newstyle:  (Boolean) A boolean stating if the exclusion is active or not.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "Newstyle:  (String) The name of the exclusion filter.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/LogsIndexExclusionFilterFilter:LogsIndexExclusionFilterFilter": {
            "properties": {
                "query": {
                    "type": "string",
                    "description": "Newstyle:  (String) Only logs matching the filter criteria and the query of the parent index will be considered for this exclusion filter.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sampleRate": {
                    "type": "number",
                    "description": "Newstyle:  (Number) The fraction of logs excluded by the exclusion filter, when active.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/LogsIndexFilter:LogsIndexFilter": {
            "properties": {
                "query": {
                    "type": "string",
                    "description": "Newstyle:  (String) Only logs matching the filter criteria and the query of the parent index will be considered for this exclusion filter.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/LogsMetricCompute:LogsMetricCompute": {
            "properties": {
                "aggregationType": {
                    "type": "string",
                    "description": "Newstyle:  (String) The type of aggregation to use. This field can't be updated after creation.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "path": {
                    "type": "string",
                    "description": "Newstyle:  (String) The path to the value the log-based metric will be aggregated over.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregationType"
            ]
        },
        "datadog:index/LogsMetricFilter:LogsMetricFilter": {
            "properties": {
                "query": {
                    "type": "string",
                    "description": "Newstyle:  (String) The search query - following the log search syntax.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/LogsMetricGroupBy:LogsMetricGroupBy": {
            "properties": {
                "path": {
                    "type": "string",
                    "description": "Newstyle:  (String) The path to the value the log-based metric will be aggregated over.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tagName": {
                    "type": "string",
                    "description": "Newstyle:  (String) Name of the tag that gets created.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "path",
                "tagName"
            ]
        },
        "datadog:index/MonitorMonitorThresholdWindows:MonitorMonitorThresholdWindows": {
            "properties": {
                "recoveryWindow": {
                    "type": "string",
                    "description": "Newstyle:  (String) Describes how long an anomalous metric must be normal before the alert recovers.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "triggerWindow": {
                    "type": "string",
                    "description": "Newstyle:  (String) Describes how long a metric must be anomalous before an alert triggers.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/MonitorMonitorThresholds:MonitorMonitorThresholds": {
            "properties": {
                "critical": {
                    "type": "string",
                    "description": "Newstyle:  (String) The monitor CRITICAL recovery threshold. Must be a number.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "criticalRecovery": {
                    "type": "string",
                    "description": "Newstyle:  (String) The monitor CRITICAL recovery threshold. Must be a number.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ok": {
                    "type": "string",
                    "description": "Newstyle:  (String) The monitor OK threshold. Must be a number.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknown": {
                    "type": "string",
                    "description": "Newstyle:  (String) The monitor UNKNOWN threshold. Must be a number.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "warning": {
                    "type": "string",
                    "description": "Newstyle:  (String) The monitor WARNING threshold. Must be a number.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "warningRecovery": {
                    "type": "string",
                    "description": "Newstyle:  (String) The monitor WARNING recovery threshold. Must be a number.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/MonitorThresholdWindows:MonitorThresholdWindows": {
            "properties": {
                "recoveryWindow": {
                    "type": "string",
                    "description": "Newstyle:  (String) Describes how long an anomalous metric must be normal before the alert recovers.\n"
                },
                "triggerWindow": {
                    "type": "string",
                    "description": "Newstyle:  (String) Describes how long a metric must be anomalous before an alert triggers.\n"
                }
            },
            "type": "object"
        },
        "datadog:index/MonitorThresholds:MonitorThresholds": {
            "properties": {
                "critical": {
                    "type": "number",
                    "description": "Newstyle:  (String) The monitor CRITICAL recovery threshold. Must be a number.\n"
                },
                "criticalRecovery": {
                    "type": "number",
                    "description": "Newstyle:  (String) The monitor CRITICAL recovery threshold. Must be a number.\n"
                },
                "ok": {
                    "type": "number",
                    "description": "Newstyle:  (String) The monitor OK threshold. Must be a number.\n"
                },
                "unknown": {
                    "type": "number",
                    "description": "Newstyle:  (String) The monitor UNKNOWN threshold. Must be a number.\n"
                },
                "warning": {
                    "type": "number",
                    "description": "Newstyle:  (String) The monitor WARNING threshold. Must be a number.\n"
                },
                "warningRecovery": {
                    "type": "number",
                    "description": "Newstyle:  (String) The monitor WARNING recovery threshold. Must be a number.\n"
                }
            },
            "type": "object"
        },
        "datadog:index/RolePermission:RolePermission": {
            "properties": {
                "id": {
                    "type": "string",
                    "description": "Newstyle:  (String) ID of the permission to assign.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "Newstyle:  (String) Name of the permission.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "id"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "id",
                        "name"
                    ]
                }
            }
        },
        "datadog:index/ScreenBoardTemplateVariable:ScreenBoardTemplateVariable": {
            "properties": {
                "default": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "prefix": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "name"
            ]
        },
        "datadog:index/ScreenBoardWidget:ScreenBoardWidget": {
            "properties": {
                "alertId": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "autoRefresh": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "bgcolor": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "check": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "color": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "colorPreference": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "columns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "displayFormat": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "env": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "eventSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "fontSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "group": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "grouping": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "height": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "hideZeroCounts": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "html": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "layoutVersion": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "legend": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "legendSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logset": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "manageStatusShowTitle": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "manageStatusTitleAlign": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "manageStatusTitleSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "manageStatusTitleText": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "margin": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "monitor": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "mustShowBreakdown": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "mustShowDistribution": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "mustShowErrors": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "mustShowHits": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "mustShowLatency": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "mustShowResourceList": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "params": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "precision": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "rules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/ScreenBoardWidgetRule:ScreenBoardWidgetRule"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "serviceName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "serviceService": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "showLastTriggered": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sizeVersion": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sizing": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "summaryType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "text": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "textAlign": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "textSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tick": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tickEdge": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tickPos": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tileDeves": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/ScreenBoardWidgetTileDef:ScreenBoardWidgetTileDef"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "time": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "timeframes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "title": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleAlign": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleSize": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unit": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "url": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "vizType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "width": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "x": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "y": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "type",
                "x",
                "y"
            ]
        },
        "datadog:index/ScreenBoardWidgetRule:ScreenBoardWidgetRule": {
            "properties": {
                "color": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "threshold": {
                    "type": "number",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "timeframe": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/ScreenBoardWidgetTileDef:ScreenBoardWidgetTileDef": {
            "properties": {
                "autoscale": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "customUnit": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "events": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/ScreenBoardWidgetTileDefEvent:ScreenBoardWidgetTileDefEvent"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "markers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/ScreenBoardWidgetTileDefMarker:ScreenBoardWidgetTileDefMarker"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "noGroupHosts": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "noMetricHosts": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "nodeType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "precision": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "requests": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/ScreenBoardWidgetTileDefRequest:ScreenBoardWidgetTileDefRequest"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "scopes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "style": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "textAlign": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "viz": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "requests",
                "viz"
            ]
        },
        "datadog:index/ScreenBoardWidgetTileDefEvent:ScreenBoardWidgetTileDefEvent": {
            "properties": {
                "q": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "q"
            ]
        },
        "datadog:index/ScreenBoardWidgetTileDefMarker:ScreenBoardWidgetTileDefMarker": {
            "properties": {
                "label": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "type",
                "value"
            ]
        },
        "datadog:index/ScreenBoardWidgetTileDefRequest:ScreenBoardWidgetTileDefRequest": {
            "properties": {
                "aggregator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "apmQuery": {
                    "$ref": "#/types/datadog:index/ScreenBoardWidgetTileDefRequestApmQuery:ScreenBoardWidgetTileDefRequestApmQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "changeType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "compareTo": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "conditionalFormats": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/ScreenBoardWidgetTileDefRequestConditionalFormat:ScreenBoardWidgetTileDefRequestConditionalFormat"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "extraCol": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "increaseGood": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logQuery": {
                    "$ref": "#/types/datadog:index/ScreenBoardWidgetTileDefRequestLogQuery:ScreenBoardWidgetTileDefRequestLogQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "metadataJson": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "metric": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "orderBy": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "orderDir": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "processQuery": {
                    "$ref": "#/types/datadog:index/ScreenBoardWidgetTileDefRequestProcessQuery:ScreenBoardWidgetTileDefRequestProcessQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "q": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "queryType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "style": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tagFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "textFilter": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/ScreenBoardWidgetTileDefRequestApmQuery:ScreenBoardWidgetTileDefRequestApmQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:index/ScreenBoardWidgetTileDefRequestApmQueryCompute:ScreenBoardWidgetTileDefRequestApmQueryCompute",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/ScreenBoardWidgetTileDefRequestApmQueryGroupBy:ScreenBoardWidgetTileDefRequestApmQueryGroupBy"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:index/ScreenBoardWidgetTileDefRequestApmQuerySearch:ScreenBoardWidgetTileDefRequestApmQuerySearch",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "compute",
                "index"
            ]
        },
        "datadog:index/ScreenBoardWidgetTileDefRequestApmQueryCompute:ScreenBoardWidgetTileDefRequestApmQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/ScreenBoardWidgetTileDefRequestApmQueryGroupBy:ScreenBoardWidgetTileDefRequestApmQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:index/ScreenBoardWidgetTileDefRequestApmQueryGroupBySort:ScreenBoardWidgetTileDefRequestApmQueryGroupBySort",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "facet"
            ]
        },
        "datadog:index/ScreenBoardWidgetTileDefRequestApmQueryGroupBySort:ScreenBoardWidgetTileDefRequestApmQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/ScreenBoardWidgetTileDefRequestApmQuerySearch:ScreenBoardWidgetTileDefRequestApmQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/ScreenBoardWidgetTileDefRequestConditionalFormat:ScreenBoardWidgetTileDefRequestConditionalFormat": {
            "properties": {
                "color": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "comparator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "customBgColor": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "invert": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "palette": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "comparator"
            ]
        },
        "datadog:index/ScreenBoardWidgetTileDefRequestLogQuery:ScreenBoardWidgetTileDefRequestLogQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:index/ScreenBoardWidgetTileDefRequestLogQueryCompute:ScreenBoardWidgetTileDefRequestLogQueryCompute",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/ScreenBoardWidgetTileDefRequestLogQueryGroupBy:ScreenBoardWidgetTileDefRequestLogQueryGroupBy"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:index/ScreenBoardWidgetTileDefRequestLogQuerySearch:ScreenBoardWidgetTileDefRequestLogQuerySearch",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "compute",
                "index"
            ]
        },
        "datadog:index/ScreenBoardWidgetTileDefRequestLogQueryCompute:ScreenBoardWidgetTileDefRequestLogQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/ScreenBoardWidgetTileDefRequestLogQueryGroupBy:ScreenBoardWidgetTileDefRequestLogQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:index/ScreenBoardWidgetTileDefRequestLogQueryGroupBySort:ScreenBoardWidgetTileDefRequestLogQueryGroupBySort",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "facet"
            ]
        },
        "datadog:index/ScreenBoardWidgetTileDefRequestLogQueryGroupBySort:ScreenBoardWidgetTileDefRequestLogQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/ScreenBoardWidgetTileDefRequestLogQuerySearch:ScreenBoardWidgetTileDefRequestLogQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/ScreenBoardWidgetTileDefRequestProcessQuery:ScreenBoardWidgetTileDefRequestProcessQuery": {
            "properties": {
                "filterBies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "metric": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchBy": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "metric"
            ]
        },
        "datadog:index/SecurityMonitoringRuleCase:SecurityMonitoringRuleCase": {
            "properties": {
                "condition": {
                    "type": "string",
                    "description": "Newstyle:  (String, Optional) A rule case contains logical operations (\u003e,\u003e=, \u0026\u0026, ||) to determine if a signal should be generated based on the event counts in the previously defined queries.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "Newstyle:  (String, Optional) Name of the query.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "notifications": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Newstyle:  (List of String, Optional) Notification targets for each rule case.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "status": {
                    "type": "string",
                    "description": "Newstyle:  (String, Required) Severity of the Security Signal.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "status"
            ]
        },
        "datadog:index/SecurityMonitoringRuleOptions:SecurityMonitoringRuleOptions": {
            "properties": {
                "evaluationWindow": {
                    "type": "integer",
                    "description": "Newstyle:  (Number, Required) A time window is specified to match when at least one of the cases matches true. This is a sliding window and evaluates in real time.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "keepAlive": {
                    "type": "integer",
                    "description": "Newstyle:  (Number, Required) Once a signal is generated, the signal will remain “open” if a case is matched at least once within this keep alive window.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxSignalDuration": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "evaluationWindow",
                "keepAlive",
                "maxSignalDuration"
            ]
        },
        "datadog:index/SecurityMonitoringRuleQuery:SecurityMonitoringRuleQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String, Optional) The aggregation type.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "distinctFields": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Newstyle:  (List of String, Optional) Field for which the cardinality is measured. Sent as an array.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupByFields": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "metric": {
                    "type": "string",
                    "description": "Newstyle:  (String, Optional) The target field to aggregate over when using the sum or max aggregations.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "Newstyle:  (String, Optional) Name of the query.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "query": {
                    "type": "string",
                    "description": "Newstyle:  (String, Required) Query to run on logs.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/ServiceLevelObjectiveQuery:ServiceLevelObjectiveQuery": {
            "properties": {
                "denominator": {
                    "type": "string",
                    "description": "Newstyle:  (String) The sum of the total events.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "numerator": {
                    "type": "string",
                    "description": "Newstyle:  (String) The sum of all the good events.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "denominator",
                "numerator"
            ]
        },
        "datadog:index/ServiceLevelObjectiveThreshold:ServiceLevelObjectiveThreshold": {
            "properties": {
                "target": {
                    "type": "number",
                    "description": "Newstyle:  (Number) The objective's target in[0,100].\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "targetDisplay": {
                    "type": "string",
                    "description": "Newstyle:  (String) A string representation of the target that indicates its precision. It uses trailing zeros to show significant decimal places (e.g. 98.00).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "timeframe": {
                    "type": "string",
                    "description": "Newstyle:  (String) The time frame for the objective. The mapping from these types to the types found in the Datadog Web UI can be found in the Datadog API documentation page. Available options to choose from are: 7d, 30d, 90d.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "warning": {
                    "type": "number",
                    "description": "Newstyle:  (Number) The objective's warning value in [0,100]. This must be greater than the target value.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "warningDisplay": {
                    "type": "string",
                    "description": "Newstyle:  (String) A string representation of the warning target (see the description of the target_display field for details).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "target",
                "timeframe"
            ]
        },
        "datadog:index/SyntheticsGlobalVariableParseTestOptions:SyntheticsGlobalVariableParseTestOptions": {
            "properties": {
                "field": {
                    "type": "string",
                    "description": "Newstyle:  (String) Required when type = http_header. Defines the header to use to extract the value\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "parser": {
                    "$ref": "#/types/datadog:index/SyntheticsGlobalVariableParseTestOptionsParser:SyntheticsGlobalVariableParseTestOptionsParser",
                    "description": "Newstyle:  (Block List, Min: 1, Max: 1) (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "description": "Newstyle:  (String) Type of parser to extract the value. Allowed enum values: raw, json_path, regex\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "parser",
                "type"
            ]
        },
        "datadog:index/SyntheticsGlobalVariableParseTestOptionsParser:SyntheticsGlobalVariableParseTestOptionsParser": {
            "properties": {
                "type": {
                    "type": "string",
                    "description": "Newstyle:  (String) Type of parser to extract the value. Allowed enum values: raw, json_path, regex\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "description": "Newstyle:  (String) Value for the parser to use, required for type json_path or regex.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "type"
            ]
        },
        "datadog:index/SyntheticsTestApiStep:SyntheticsTestApiStep": {
            "properties": {
                "assertions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/SyntheticsTestApiStepAssertion:SyntheticsTestApiStepAssertion"
                    },
                    "description": "Newstyle:  (Block List) Assertions used for the test. Multiple assertion blocks are allowed with the structure below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "extractedValues": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/SyntheticsTestApiStepExtractedValue:SyntheticsTestApiStepExtractedValue"
                    },
                    "description": "Newstyle:  (Block List) Values to parse and save as variables from the response. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "Newstyle:  (String) Name of the variable.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "requestBasicauth": {
                    "$ref": "#/types/datadog:index/SyntheticsTestApiStepRequestBasicauth:SyntheticsTestApiStepRequestBasicauth",
                    "description": "Newstyle:  (Block List, Max: 1) The HTTP basic authentication credentials. Exactly one nested block is allowed with the structure below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "requestClientCertificate": {
                    "$ref": "#/types/datadog:index/SyntheticsTestApiStepRequestClientCertificate:SyntheticsTestApiStepRequestClientCertificate",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "requestDefinition": {
                    "$ref": "#/types/datadog:index/SyntheticsTestApiStepRequestDefinition:SyntheticsTestApiStepRequestDefinition",
                    "description": "Newstyle:  (Block List, Max: 1) The request for the api step. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "requestHeaders": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "description": "Newstyle:  (Map of String) Header name and value map.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "requestQuery": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "description": "Newstyle:  (Map of String) Query arguments name and value map.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "subtype": {
                    "type": "string",
                    "description": "Newstyle:  (String) The subtype of the Synthetic multistep API test step, currently only supporting http.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "name"
            ]
        },
        "datadog:index/SyntheticsTestApiStepAssertion:SyntheticsTestApiStepAssertion": {
            "properties": {
                "operator": {
                    "type": "string",
                    "description": "Newstyle:  (String) The specific operator to use on the path.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "property": {
                    "type": "string",
                    "description": "Newstyle:  (String) If assertion type is header, this is the header name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "target": {
                    "type": "string",
                    "description": "Newstyle:  (String) Expected value. Depends on the assertion type, refer to  for details.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "targetjsonpath": {
                    "$ref": "#/types/datadog:index/SyntheticsTestApiStepAssertionTargetjsonpath:SyntheticsTestApiStepAssertionTargetjsonpath",
                    "description": "Newstyle:  (Block List, Max: 1) Expected structure if operator is validatesJSONPath. Exactly one nested block is allowed with the structure below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "description": "Newstyle:  (String) Type of browser test variable. Allowed enum values: element, email, global, javascript, text.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator",
                "type"
            ]
        },
        "datadog:index/SyntheticsTestApiStepAssertionTargetjsonpath:SyntheticsTestApiStepAssertionTargetjsonpath": {
            "properties": {
                "jsonpath": {
                    "type": "string",
                    "description": "Newstyle:  (String) The JSON path to assert.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "description": "Newstyle:  (String) The specific operator to use on the path.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "targetvalue": {
                    "type": "string",
                    "description": "Newstyle:  (String) Expected matching value.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "jsonpath",
                "operator",
                "targetvalue"
            ]
        },
        "datadog:index/SyntheticsTestApiStepExtractedValue:SyntheticsTestApiStepExtractedValue": {
            "properties": {
                "field": {
                    "type": "string",
                    "description": "Newstyle:  (String) When type is http_header, name of the header to use to extract the value.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "Newstyle:  (String) Name of the variable.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "parser": {
                    "$ref": "#/types/datadog:index/SyntheticsTestApiStepExtractedValueParser:SyntheticsTestApiStepExtractedValueParser",
                    "description": "Newstyle:  (Block List, Min: 1, Max: 1) (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "description": "Newstyle:  (String) Type of browser test variable. Allowed enum values: element, email, global, javascript, text.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "name",
                "parser",
                "type"
            ]
        },
        "datadog:index/SyntheticsTestApiStepExtractedValueParser:SyntheticsTestApiStepExtractedValueParser": {
            "properties": {
                "type": {
                    "type": "string",
                    "description": "Newstyle:  (String) Type of browser test variable. Allowed enum values: element, email, global, javascript, text.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "description": "Newstyle:  (String) Value of the step.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "type"
            ]
        },
        "datadog:index/SyntheticsTestApiStepRequestBasicauth:SyntheticsTestApiStepRequestBasicauth": {
            "properties": {
                "password": {
                    "type": "string",
                    "description": "Newstyle:  (String, Sensitive) Password for authentication.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "username": {
                    "type": "string",
                    "description": "Newstyle:  (String) Username for authentication.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "password",
                "username"
            ]
        },
        "datadog:index/SyntheticsTestApiStepRequestClientCertificate:SyntheticsTestApiStepRequestClientCertificate": {
            "properties": {
                "cert": {
                    "$ref": "#/types/datadog:index/SyntheticsTestApiStepRequestClientCertificateCert:SyntheticsTestApiStepRequestClientCertificateCert",
                    "description": "Newstyle:  (Block List, Min: 1, Max: 1) (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "key": {
                    "$ref": "#/types/datadog:index/SyntheticsTestApiStepRequestClientCertificateKey:SyntheticsTestApiStepRequestClientCertificateKey",
                    "description": "Newstyle:  (Block List, Min: 1, Max: 1) (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "cert",
                "key"
            ]
        },
        "datadog:index/SyntheticsTestApiStepRequestClientCertificateCert:SyntheticsTestApiStepRequestClientCertificateCert": {
            "properties": {
                "content": {
                    "type": "string",
                    "description": "Newstyle:  (String, Sensitive) Content of the certificate.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "filename": {
                    "type": "string",
                    "description": "Newstyle:  (String) File name for the certificate.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "content"
            ]
        },
        "datadog:index/SyntheticsTestApiStepRequestClientCertificateKey:SyntheticsTestApiStepRequestClientCertificateKey": {
            "properties": {
                "content": {
                    "type": "string",
                    "description": "Newstyle:  (String, Sensitive) Content of the certificate.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "filename": {
                    "type": "string",
                    "description": "Newstyle:  (String) File name for the certificate.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "content"
            ]
        },
        "datadog:index/SyntheticsTestApiStepRequestDefinition:SyntheticsTestApiStepRequestDefinition": {
            "properties": {
                "body": {
                    "type": "string",
                    "description": "Newstyle:  (String) The request body.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "dnsServer": {
                    "type": "string",
                    "description": "Newstyle:  (String) DNS server to use for DNS tests (subtype = \"dns\").\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "host": {
                    "type": "string",
                    "description": "Newstyle:  (String) Host name to perform the test with.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "method": {
                    "type": "string",
                    "description": "Newstyle:  (String) The HTTP method. One of DELETE, GET, HEAD, OPTIONS, PATCH, POST, PUT.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "noSavingResponseBody": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "port": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Port to use when performing the test.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "timeout": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Used to override the default timeout of a step.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "url": {
                    "type": "string",
                    "description": "Newstyle:  (String) The URL to send the request to.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/SyntheticsTestAssertion:SyntheticsTestAssertion": {
            "properties": {
                "operator": {
                    "type": "string",
                    "description": "Newstyle:  (String) The specific operator to use on the path.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "property": {
                    "type": "string",
                    "description": "Newstyle:  (String) If assertion type is header, this is the header name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "target": {
                    "type": "string",
                    "description": "Newstyle:  (String) Expected value. Depends on the assertion type, refer to  for details.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "targetjsonpath": {
                    "$ref": "#/types/datadog:index/SyntheticsTestAssertionTargetjsonpath:SyntheticsTestAssertionTargetjsonpath",
                    "description": "Newstyle:  (Block List, Max: 1) Expected structure if operator is validatesJSONPath. Exactly one nested block is allowed with the structure below. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "description": "Newstyle:  (String) Type of browser test variable. Allowed enum values: element, email, global, javascript, text.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator",
                "type"
            ]
        },
        "datadog:index/SyntheticsTestAssertionTargetjsonpath:SyntheticsTestAssertionTargetjsonpath": {
            "properties": {
                "jsonpath": {
                    "type": "string",
                    "description": "Newstyle:  (String) The JSON path to assert.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "description": "Newstyle:  (String) The specific operator to use on the path.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "targetvalue": {
                    "type": "string",
                    "description": "Newstyle:  (String) Expected matching value.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "jsonpath",
                "operator",
                "targetvalue"
            ]
        },
        "datadog:index/SyntheticsTestBrowserStep:SyntheticsTestBrowserStep": {
            "properties": {
                "allowFailure": {
                    "type": "boolean",
                    "description": "Newstyle:  (Boolean) Determines if the step should be allowed to fail.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "forceElementUpdate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "Newstyle:  (String) Name of the variable.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "params": {
                    "$ref": "#/types/datadog:index/SyntheticsTestBrowserStepParams:SyntheticsTestBrowserStepParams",
                    "description": "Newstyle:  (String) Parameters for the step as JSON string.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "timeout": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Used to override the default timeout of a step.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "description": "Newstyle:  (String) Type of browser test variable. Allowed enum values: element, email, global, javascript, text.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "name",
                "params",
                "type"
            ]
        },
        "datadog:index/SyntheticsTestBrowserStepParams:SyntheticsTestBrowserStepParams": {
            "properties": {
                "attribute": {
                    "type": "string",
                    "description": "Newstyle:  (String) Name of the attribute to use for an \"assert attribute\" step.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "check": {
                    "type": "string",
                    "description": "Newstyle:  (String) Check type to use for an assertion step.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "clickType": {
                    "type": "string",
                    "description": "Newstyle:  (String) Type of click to use for a \"click\" step.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "code": {
                    "type": "string",
                    "description": "Newstyle:  (String) Javascript code to use for the step.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "delay": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Delay between each key stroke for a \"type test\" step.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "element": {
                    "type": "string",
                    "description": "Newstyle:  (String) Element to use for the step, json encoded string.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "email": {
                    "type": "string",
                    "description": "Newstyle:  (String) Details of the email for an \"assert email\" step.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "file": {
                    "type": "string",
                    "description": "Newstyle:  (String) For an \"assert download\" step.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "files": {
                    "type": "string",
                    "description": "Newstyle:  (String) Details of the files for an \"upload files\" step, json encoded string.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "modifiers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Newstyle:  (List of String) Modifier to use for a \"press key\" step.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "playingTabId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "request": {
                    "type": "string",
                    "description": "Newstyle:  (String) Request for an API step.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "subtestPublicId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "description": "Newstyle:  (String) Value of the step.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "variable": {
                    "$ref": "#/types/datadog:index/SyntheticsTestBrowserStepParamsVariable:SyntheticsTestBrowserStepParamsVariable",
                    "description": "Newstyle:  (Block List, Max: 1) Details of the variable to extract. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "withClick": {
                    "type": "boolean",
                    "description": "Newstyle:  (Boolean) For \"file upload\" steps.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "x": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) X coordinates for a \"scroll step\".\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "y": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Y coordinates for a \"scroll step\".\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/SyntheticsTestBrowserStepParamsVariable:SyntheticsTestBrowserStepParamsVariable": {
            "properties": {
                "example": {
                    "type": "string",
                    "description": "Newstyle:  (String) Example for the variable.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "Newstyle:  (String) Name of the variable.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/SyntheticsTestBrowserVariable:SyntheticsTestBrowserVariable": {
            "properties": {
                "example": {
                    "type": "string",
                    "description": "Newstyle:  (String) Example for the variable.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "id": {
                    "type": "string",
                    "description": "Newstyle:  (String) ID of the global variable to use. This is actually only used (and required) in the case of using a variable of type global.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "Newstyle:  (String) Name of the variable.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "pattern": {
                    "type": "string",
                    "description": "Newstyle:  (String) Pattern of the variable.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "description": "Newstyle:  (String) Type of browser test variable. Allowed enum values: element, email, global, javascript, text.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "name",
                "type"
            ]
        },
        "datadog:index/SyntheticsTestConfigVariable:SyntheticsTestConfigVariable": {
            "properties": {
                "example": {
                    "type": "string",
                    "description": "Newstyle:  (String) Example for the variable.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "Newstyle:  (String) Name of the variable.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "pattern": {
                    "type": "string",
                    "description": "Newstyle:  (String) Pattern of the variable.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "description": "Newstyle:  (String) Type of browser test variable. Allowed enum values: element, email, global, javascript, text.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "name",
                "type"
            ]
        },
        "datadog:index/SyntheticsTestOptions:SyntheticsTestOptions": {
            "properties": {
                "acceptSelfSigned": {
                    "type": "boolean"
                },
                "allowInsecure": {
                    "type": "boolean",
                    "description": "Newstyle:  (Boolean) Allows loading insecure content for an HTTP test.\n"
                },
                "followRedirects": {
                    "type": "boolean",
                    "description": "Newstyle:  (Boolean) For API HTTP test, whether or not the test should follow redirects.\n"
                },
                "minFailureDuration": {
                    "type": "integer"
                },
                "minLocationFailed": {
                    "type": "integer"
                },
                "retryCount": {
                    "type": "integer"
                },
                "retryInterval": {
                    "type": "integer"
                },
                "tickEvery": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) How often the test should run (in seconds). Current possible values are 900, 1800, 3600, 21600, 43200, 86400, 604800 plus 60 for API tests or 300 for browser tests.\n"
                }
            },
            "type": "object",
            "required": [
                "tickEvery"
            ]
        },
        "datadog:index/SyntheticsTestOptionsList:SyntheticsTestOptionsList": {
            "properties": {
                "acceptSelfSigned": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "allowInsecure": {
                    "type": "boolean",
                    "description": "Newstyle:  (Boolean) Allows loading insecure content for an HTTP test.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "followRedirects": {
                    "type": "boolean",
                    "description": "Newstyle:  (Boolean) For API HTTP test, whether or not the test should follow redirects.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "minFailureDuration": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "minLocationFailed": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "monitorOptions": {
                    "$ref": "#/types/datadog:index/SyntheticsTestOptionsListMonitorOptions:SyntheticsTestOptionsListMonitorOptions",
                    "description": "Newstyle:  (Block List, Max: 1) (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "noScreenshot": {
                    "type": "boolean",
                    "description": "Newstyle:  (Boolean) Prevents saving screenshots of the steps.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "retry": {
                    "$ref": "#/types/datadog:index/SyntheticsTestOptionsListRetry:SyntheticsTestOptionsListRetry",
                    "description": "Newstyle:  (Block List, Max: 1) (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tickEvery": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) How often the test should run (in seconds). Current possible values are 900, 1800, 3600, 21600, 43200, 86400, 604800 plus 60 for API tests or 300 for browser tests.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "tickEvery"
            ]
        },
        "datadog:index/SyntheticsTestOptionsListMonitorOptions:SyntheticsTestOptionsListMonitorOptions": {
            "properties": {
                "renotifyInterval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Specify a renotification frequency.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/SyntheticsTestOptionsListRetry:SyntheticsTestOptionsListRetry": {
            "properties": {
                "count": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Number of retries needed to consider a location as failed before sending a notification alert.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Interval between a failed test and the next retry in milliseconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/SyntheticsTestRequest:SyntheticsTestRequest": {
            "properties": {
                "body": {
                    "type": "string",
                    "description": "Newstyle:  (String) The request body.\n"
                },
                "dnsServer": {
                    "type": "string",
                    "description": "Newstyle:  (String) DNS server to use for DNS tests (subtype = \"dns\").\n"
                },
                "host": {
                    "type": "string",
                    "description": "Newstyle:  (String) Host name to perform the test with.\n"
                },
                "method": {
                    "type": "string",
                    "description": "Newstyle:  (String) The HTTP method. One of DELETE, GET, HEAD, OPTIONS, PATCH, POST, PUT.\n"
                },
                "noSavingResponseBody": {
                    "type": "boolean"
                },
                "port": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Port to use when performing the test.\n"
                },
                "timeout": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Used to override the default timeout of a step.\n"
                },
                "url": {
                    "type": "string",
                    "description": "Newstyle:  (String) The URL to send the request to.\n"
                }
            },
            "type": "object"
        },
        "datadog:index/SyntheticsTestRequestBasicauth:SyntheticsTestRequestBasicauth": {
            "properties": {
                "password": {
                    "type": "string",
                    "description": "Newstyle:  (String, Sensitive) Password for authentication.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "username": {
                    "type": "string",
                    "description": "Newstyle:  (String) Username for authentication.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "password",
                "username"
            ]
        },
        "datadog:index/SyntheticsTestRequestClientCertificate:SyntheticsTestRequestClientCertificate": {
            "properties": {
                "cert": {
                    "$ref": "#/types/datadog:index/SyntheticsTestRequestClientCertificateCert:SyntheticsTestRequestClientCertificateCert",
                    "description": "Newstyle:  (Block List, Min: 1, Max: 1) (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "key": {
                    "$ref": "#/types/datadog:index/SyntheticsTestRequestClientCertificateKey:SyntheticsTestRequestClientCertificateKey",
                    "description": "Newstyle:  (Block List, Min: 1, Max: 1) (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "cert",
                "key"
            ]
        },
        "datadog:index/SyntheticsTestRequestClientCertificateCert:SyntheticsTestRequestClientCertificateCert": {
            "properties": {
                "content": {
                    "type": "string",
                    "description": "Newstyle:  (String, Sensitive) Content of the certificate.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "filename": {
                    "type": "string",
                    "description": "Newstyle:  (String) File name for the certificate.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "content"
            ]
        },
        "datadog:index/SyntheticsTestRequestClientCertificateKey:SyntheticsTestRequestClientCertificateKey": {
            "properties": {
                "content": {
                    "type": "string",
                    "description": "Newstyle:  (String, Sensitive) Content of the certificate.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "filename": {
                    "type": "string",
                    "description": "Newstyle:  (String) File name for the certificate.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "content"
            ]
        },
        "datadog:index/SyntheticsTestRequestDefinition:SyntheticsTestRequestDefinition": {
            "properties": {
                "body": {
                    "type": "string",
                    "description": "Newstyle:  (String) The request body.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "dnsServer": {
                    "type": "string",
                    "description": "Newstyle:  (String) DNS server to use for DNS tests (subtype = \"dns\").\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "host": {
                    "type": "string",
                    "description": "Newstyle:  (String) Host name to perform the test with.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "method": {
                    "type": "string",
                    "description": "Newstyle:  (String) The HTTP method. One of DELETE, GET, HEAD, OPTIONS, PATCH, POST, PUT.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "noSavingResponseBody": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "port": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Port to use when performing the test.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "timeout": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Used to override the default timeout of a step.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "url": {
                    "type": "string",
                    "description": "Newstyle:  (String) The URL to send the request to.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/SyntheticsTestStep:SyntheticsTestStep": {
            "properties": {
                "allowFailure": {
                    "type": "boolean",
                    "description": "Newstyle:  (Boolean) Determines if the step should be allowed to fail.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "forceElementUpdate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "Newstyle:  (String) Name of the variable.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "params": {
                    "type": "string",
                    "description": "Newstyle:  (String) Parameters for the step as JSON string.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "timeout": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Used to override the default timeout of a step.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "description": "Newstyle:  (String) Type of browser test variable. Allowed enum values: element, email, global, javascript, text.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "name",
                "params",
                "type"
            ]
        },
        "datadog:index/SyntheticsTestVariable:SyntheticsTestVariable": {
            "properties": {
                "example": {
                    "type": "string",
                    "description": "Newstyle:  (String) Example for the variable.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "id": {
                    "type": "string",
                    "description": "Newstyle:  (String) ID of the global variable to use. This is actually only used (and required) in the case of using a variable of type global.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "Newstyle:  (String) Name of the variable.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "pattern": {
                    "type": "string",
                    "description": "Newstyle:  (String) Pattern of the variable.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "description": "Newstyle:  (String) Type of browser test variable. Allowed enum values: element, email, global, javascript, text.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "name",
                "type"
            ]
        },
        "datadog:index/TimeBoardGraph:TimeBoardGraph": {
            "properties": {
                "autoscale": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "customUnit": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "events": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "includeNoMetricHosts": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "includeUngroupedHosts": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "markers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/TimeBoardGraphMarker:TimeBoardGraphMarker"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "nodeType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "precision": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "requests": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/TimeBoardGraphRequest:TimeBoardGraphRequest"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "scopes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "style": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "textAlign": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "title": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "viz": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "yaxis": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "requests",
                "title",
                "viz"
            ]
        },
        "datadog:index/TimeBoardGraphMarker:TimeBoardGraphMarker": {
            "properties": {
                "label": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "type",
                "value"
            ]
        },
        "datadog:index/TimeBoardGraphRequest:TimeBoardGraphRequest": {
            "properties": {
                "aggregator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "apmQuery": {
                    "$ref": "#/types/datadog:index/TimeBoardGraphRequestApmQuery:TimeBoardGraphRequestApmQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "changeType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "compareTo": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "conditionalFormats": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/TimeBoardGraphRequestConditionalFormat:TimeBoardGraphRequestConditionalFormat"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "extraCol": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "increaseGood": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logQuery": {
                    "$ref": "#/types/datadog:index/TimeBoardGraphRequestLogQuery:TimeBoardGraphRequestLogQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "metadataJson": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "orderBy": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "orderDirection": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "processQuery": {
                    "$ref": "#/types/datadog:index/TimeBoardGraphRequestProcessQuery:TimeBoardGraphRequestProcessQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "q": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "stacked": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "style": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/TimeBoardGraphRequestApmQuery:TimeBoardGraphRequestApmQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:index/TimeBoardGraphRequestApmQueryCompute:TimeBoardGraphRequestApmQueryCompute",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/TimeBoardGraphRequestApmQueryGroupBy:TimeBoardGraphRequestApmQueryGroupBy"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:index/TimeBoardGraphRequestApmQuerySearch:TimeBoardGraphRequestApmQuerySearch",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "compute",
                "index"
            ]
        },
        "datadog:index/TimeBoardGraphRequestApmQueryCompute:TimeBoardGraphRequestApmQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/TimeBoardGraphRequestApmQueryGroupBy:TimeBoardGraphRequestApmQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:index/TimeBoardGraphRequestApmQueryGroupBySort:TimeBoardGraphRequestApmQueryGroupBySort",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "facet"
            ]
        },
        "datadog:index/TimeBoardGraphRequestApmQueryGroupBySort:TimeBoardGraphRequestApmQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/TimeBoardGraphRequestApmQuerySearch:TimeBoardGraphRequestApmQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/TimeBoardGraphRequestConditionalFormat:TimeBoardGraphRequestConditionalFormat": {
            "properties": {
                "comparator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "customBgColor": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "customFgColor": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "palette": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "comparator"
            ]
        },
        "datadog:index/TimeBoardGraphRequestLogQuery:TimeBoardGraphRequestLogQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:index/TimeBoardGraphRequestLogQueryCompute:TimeBoardGraphRequestLogQueryCompute",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/TimeBoardGraphRequestLogQueryGroupBy:TimeBoardGraphRequestLogQueryGroupBy"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:index/TimeBoardGraphRequestLogQuerySearch:TimeBoardGraphRequestLogQuerySearch",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "compute",
                "index"
            ]
        },
        "datadog:index/TimeBoardGraphRequestLogQueryCompute:TimeBoardGraphRequestLogQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/TimeBoardGraphRequestLogQueryGroupBy:TimeBoardGraphRequestLogQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:index/TimeBoardGraphRequestLogQueryGroupBySort:TimeBoardGraphRequestLogQueryGroupBySort",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "facet"
            ]
        },
        "datadog:index/TimeBoardGraphRequestLogQueryGroupBySort:TimeBoardGraphRequestLogQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/TimeBoardGraphRequestLogQuerySearch:TimeBoardGraphRequestLogQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/TimeBoardGraphRequestProcessQuery:TimeBoardGraphRequestProcessQuery": {
            "properties": {
                "filterBies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "metric": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchBy": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "metric"
            ]
        },
        "datadog:index/TimeBoardTemplateVariable:TimeBoardTemplateVariable": {
            "properties": {
                "default": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "prefix": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "name"
            ]
        },
        "datadog:index/getMonitorMonitorThresholdWindows:getMonitorMonitorThresholdWindows": {
            "properties": {
                "recoveryWindow": {
                    "type": "string",
                    "description": "Newstyle:  (String)\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "triggerWindow": {
                    "type": "string",
                    "description": "Newstyle:  (String)\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "recoveryWindow",
                "triggerWindow"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "datadog:index/getMonitorMonitorThresholds:getMonitorMonitorThresholds": {
            "properties": {
                "critical": {
                    "type": "string",
                    "description": "Newstyle:  (String)\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "criticalRecovery": {
                    "type": "string",
                    "description": "Newstyle:  (String)\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ok": {
                    "type": "string",
                    "description": "Newstyle:  (String)\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknown": {
                    "type": "string",
                    "description": "Newstyle:  (String)\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "warning": {
                    "type": "string",
                    "description": "Newstyle:  (String)\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "warningRecovery": {
                    "type": "string",
                    "description": "Newstyle:  (String)\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "critical",
                "criticalRecovery",
                "ok",
                "unknown",
                "warning",
                "warningRecovery"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "datadog:index/getMonitorThresholdWindows:getMonitorThresholdWindows": {
            "properties": {
                "recoveryWindow": {
                    "type": "string",
                    "description": "Newstyle:  (String)\n"
                },
                "triggerWindow": {
                    "type": "string",
                    "description": "Newstyle:  (String)\n"
                }
            },
            "type": "object",
            "required": [
                "recoveryWindow",
                "triggerWindow"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "datadog:index/getMonitorThresholds:getMonitorThresholds": {
            "properties": {
                "critical": {
                    "type": "number",
                    "description": "Newstyle:  (String)\n"
                },
                "criticalRecovery": {
                    "type": "number",
                    "description": "Newstyle:  (String)\n"
                },
                "ok": {
                    "type": "number",
                    "description": "Newstyle:  (String)\n"
                },
                "unknown": {
                    "type": "number",
                    "description": "Newstyle:  (String)\n"
                },
                "warning": {
                    "type": "number",
                    "description": "Newstyle:  (String)\n"
                },
                "warningRecovery": {
                    "type": "number",
                    "description": "Newstyle:  (String)\n"
                }
            },
            "type": "object",
            "required": [
                "critical",
                "criticalRecovery",
                "ok",
                "unknown",
                "warning",
                "warningRecovery"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "datadog:index/getSecurityMonitoringRulesRule:getSecurityMonitoringRulesRule": {
            "properties": {
                "cases": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/getSecurityMonitoringRulesRuleCase:getSecurityMonitoringRulesRuleCase"
                    },
                    "description": "Newstyle:  (Block List, Min: 1, Max: 5) Cases for generating signals. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Newstyle:  (Boolean, Optional) Whether the rule is enabled.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "message": {
                    "type": "string",
                    "description": "Newstyle:  (String, Required) Message for generated signals.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "Newstyle:  (String, Optional) Name of the query.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "options": {
                    "$ref": "#/types/datadog:index/getSecurityMonitoringRulesRuleOptions:getSecurityMonitoringRulesRuleOptions",
                    "description": "Newstyle:  (Block List, Max: 1) Options on rules. (see )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "queries": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/getSecurityMonitoringRulesRuleQuery:getSecurityMonitoringRulesRuleQuery"
                    },
                    "description": "Newstyle:  (String, Required) Query to run on logs.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Newstyle:  (List of String, Optional) Tags for generated signals.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "cases",
                "message",
                "name",
                "queries"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "datadog:index/getSecurityMonitoringRulesRuleCase:getSecurityMonitoringRulesRuleCase": {
            "properties": {
                "condition": {
                    "type": "string",
                    "description": "Newstyle:  (String, Optional) A rule case contains logical operations (\u003e,\u003e=, \u0026\u0026, ||) to determine if a signal should be generated based on the event counts in the previously defined queries.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "Newstyle:  (String, Optional) Name of the query.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "notifications": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Newstyle:  (List of String, Optional) Notification targets for each rule case.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "status": {
                    "type": "string",
                    "description": "Newstyle:  (String, Required) Severity of the Security Signal.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "status"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "datadog:index/getSecurityMonitoringRulesRuleOptions:getSecurityMonitoringRulesRuleOptions": {
            "properties": {
                "evaluationWindow": {
                    "type": "integer",
                    "description": "Newstyle:  (Number, Required) A time window is specified to match when at least one of the cases matches true. This is a sliding window and evaluates in real time.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "keepAlive": {
                    "type": "integer",
                    "description": "Newstyle:  (Number, Required) Once a signal is generated, the signal will remain “open” if a case is matched at least once within this keep alive window.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxSignalDuration": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "evaluationWindow",
                "keepAlive",
                "maxSignalDuration"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "datadog:index/getSecurityMonitoringRulesRuleQuery:getSecurityMonitoringRulesRuleQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Newstyle:  (String, Optional) The aggregation type.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "distinctFields": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Newstyle:  (List of String, Optional) Field for which the cardinality is measured. Sent as an array.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupByFields": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "metric": {
                    "type": "string",
                    "description": "Newstyle:  (String, Optional) The target field to aggregate over when using the sum or max aggregations.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "Newstyle:  (String, Optional) Name of the query.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "query": {
                    "type": "string",
                    "description": "Newstyle:  (String, Required) Query to run on logs.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "datadog:pagerduty/IntegrationService:IntegrationService": {
            "properties": {
                "serviceKey": {
                    "type": "string",
                    "description": "Newstyle:  (String, Sensitive) Your Service name associated service key in Pagerduty.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "serviceName": {
                    "type": "string",
                    "description": "Newstyle:  (String) Your Service name in PagerDuty.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "serviceKey",
                "serviceName"
            ]
        }
    },
    "provider": {
        "description": "The provider type for the datadog package. By default, resources use package-wide configuration\nsettings, however an explicit `Provider` instance may be created and passed during resource\nconstruction to achieve fine-grained programmatic control over provider settings. See the\n[documentation](https://www.pulumi.com/docs/reference/programming-model/#providers) for more information.\n",
        "inputProperties": {
            "apiKey": {
                "type": "string",
                "description": "(Required unless validate is false) Datadog API key. This can also be set via the DD_API_KEY environment variable.\n"
            },
            "apiUrl": {
                "type": "string",
                "description": "The API URL. This can also be set via the DD_HOST environment variable. Note that this URL must not end with the /api/\npath. For example, https://api.datadoghq.com/ is a correct value, while https://api.datadoghq.com/api/ is not. And if\nyou're working with \"EU\" version of Datadog, use https://api.datadoghq.eu/.\n"
            },
            "appKey": {
                "type": "string",
                "description": "(Required unless validate is false) Datadog APP key. This can also be set via the DD_APP_KEY environment variable.\n"
            },
            "validate": {
                "type": "boolean",
                "description": "Enables validation of the provided API and APP keys during provider initialization. Default is true. When false, api_key\nand app_key won't be checked.\n"
            }
        }
    },
    "resources": {
        "datadog:aws/integration:Integration": {
            "description": "TODO\n\nTODO\n",
            "properties": {
                "accountId": {
                    "type": "string",
                    "description": "Newstyle:  (String) Your AWS Account ID without dashes.\n"
                },
                "accountSpecificNamespaceRules": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "description": "Enables or disables metric collection for specific AWS namespaces for this AWS account only. A list of namespaces can be\nfound at the [available namespace rules API\nendpoint](https://docs.datadoghq.com/api/v1/aws-integration/#list-namespace-rules).\n"
                },
                "excludedRegions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Newstyle:  (List of String) An array of AWS regions to exclude from metrics collection.\n"
                },
                "externalId": {
                    "type": "string",
                    "description": "Newstyle:  (String) AWS External ID.  This provider will not be able to detect changes made to the external_id field from outside Terraform.\n"
                },
                "filterTags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Newstyle:  (List of String) Array of EC2 tags (in the form key:value) defines a filter that Datadog uses when collecting metrics from EC2. Wildcards, such as ? (for single characters) and * (for multiple characters) can also be used. Only hosts that match one of the defined tags will be imported into Datadog. The rest will be ignored. Host matching a given tag can also be excluded by adding ! before the tag. e.x. env:production,instance-type:c1.*,!region:us-east-1.\n"
                },
                "hostTags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Newstyle:  (List of String) Array of tags (in the form key:value) to add to all hosts and metrics reporting through this integration.\n"
                },
                "roleName": {
                    "type": "string",
                    "description": "Newstyle:  (String) Your Datadog role delegation name.\n"
                }
            },
            "required": [
                "accountId",
                "externalId",
                "roleName"
            ],
            "inputProperties": {
                "accountId": {
                    "type": "string",
                    "description": "Newstyle:  (String) Your AWS Account ID without dashes.\n"
                },
                "accountSpecificNamespaceRules": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "description": "Enables or disables metric collection for specific AWS namespaces for this AWS account only. A list of namespaces can be\nfound at the [available namespace rules API\nendpoint](https://docs.datadoghq.com/api/v1/aws-integration/#list-namespace-rules).\n"
                },
                "excludedRegions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Newstyle:  (List of String) An array of AWS regions to exclude from metrics collection.\n"
                },
                "filterTags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Newstyle:  (List of String) Array of EC2 tags (in the form key:value) defines a filter that Datadog uses when collecting metrics from EC2. Wildcards, such as ? (for single characters) and * (for multiple characters) can also be used. Only hosts that match one of the defined tags will be imported into Datadog. The rest will be ignored. Host matching a given tag can also be excluded by adding ! before the tag. e.x. env:production,instance-type:c1.*,!region:us-east-1.\n"
                },
                "hostTags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Newstyle:  (List of String) Array of tags (in the form key:value) to add to all hosts and metrics reporting through this integration.\n"
                },
                "roleName": {
                    "type": "string",
                    "description": "Newstyle:  (String) Your Datadog role delegation name.\n"
                }
            },
            "requiredInputs": [
                "accountId",
                "roleName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Integration resources.\n",
                "properties": {
                    "accountId": {
                        "type": "string",
                        "description": "Newstyle:  (String) Your AWS Account ID without dashes.\n"
                    },
                    "accountSpecificNamespaceRules": {
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "pulumi.json#/Any"
                        },
                        "description": "Enables or disables metric collection for specific AWS namespaces for this AWS account only. A list of namespaces can be\nfound at the [available namespace rules API\nendpoint](https://docs.datadoghq.com/api/v1/aws-integration/#list-namespace-rules).\n"
                    },
                    "excludedRegions": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Newstyle:  (List of String) An array of AWS regions to exclude from metrics collection.\n"
                    },
                    "externalId": {
                        "type": "string",
                        "description": "Newstyle:  (String) AWS External ID.  This provider will not be able to detect changes made to the external_id field from outside Terraform.\n"
                    },
                    "filterTags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Newstyle:  (List of String) Array of EC2 tags (in the form key:value) defines a filter that Datadog uses when collecting metrics from EC2. Wildcards, such as ? (for single characters) and * (for multiple characters) can also be used. Only hosts that match one of the defined tags will be imported into Datadog. The rest will be ignored. Host matching a given tag can also be excluded by adding ! before the tag. e.x. env:production,instance-type:c1.*,!region:us-east-1.\n"
                    },
                    "hostTags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Newstyle:  (List of String) Array of tags (in the form key:value) to add to all hosts and metrics reporting through this integration.\n"
                    },
                    "roleName": {
                        "type": "string",
                        "description": "Newstyle:  (String) Your Datadog role delegation name.\n"
                    }
                },
                "type": "object"
            }
        },
        "datadog:aws/integrationLambdaArn:IntegrationLambdaArn": {
            "description": "TODO\n\nTODO\n",
            "properties": {
                "accountId": {
                    "type": "string",
                    "description": "Newstyle:  (String) Your AWS Account ID without dashes.\n"
                },
                "lambdaArn": {
                    "type": "string",
                    "description": "Newstyle:  (String) The ARN of the Datadog forwarder Lambda.\n"
                }
            },
            "required": [
                "accountId",
                "lambdaArn"
            ],
            "inputProperties": {
                "accountId": {
                    "type": "string",
                    "description": "Newstyle:  (String) Your AWS Account ID without dashes.\n"
                },
                "lambdaArn": {
                    "type": "string",
                    "description": "Newstyle:  (String) The ARN of the Datadog forwarder Lambda.\n"
                }
            },
            "requiredInputs": [
                "accountId",
                "lambdaArn"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering IntegrationLambdaArn resources.\n",
                "properties": {
                    "accountId": {
                        "type": "string",
                        "description": "Newstyle:  (String) Your AWS Account ID without dashes.\n"
                    },
                    "lambdaArn": {
                        "type": "string",
                        "description": "Newstyle:  (String) The ARN of the Datadog forwarder Lambda.\n"
                    }
                },
                "type": "object"
            }
        },
        "datadog:aws/integrationLogCollection:IntegrationLogCollection": {
            "description": "TODO\n\nTODO\n",
            "properties": {
                "accountId": {
                    "type": "string",
                    "description": "Newstyle:  (String) Your AWS Account ID without dashes.\n"
                },
                "services": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Newstyle:  (List of String) A list of services to collect logs from. See the  for more details on which services are supported.\n"
                }
            },
            "required": [
                "accountId",
                "services"
            ],
            "inputProperties": {
                "accountId": {
                    "type": "string",
                    "description": "Newstyle:  (String) Your AWS Account ID without dashes.\n"
                },
                "services": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Newstyle:  (List of String) A list of services to collect logs from. See the  for more details on which services are supported.\n"
                }
            },
            "requiredInputs": [
                "accountId",
                "services"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering IntegrationLogCollection resources.\n",
                "properties": {
                    "accountId": {
                        "type": "string",
                        "description": "Newstyle:  (String) Your AWS Account ID without dashes.\n"
                    },
                    "services": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Newstyle:  (List of String) A list of services to collect logs from. See the  for more details on which services are supported.\n"
                    }
                },
                "type": "object"
            }
        },
        "datadog:azure/integration:Integration": {
            "description": "TODO\n\nTODO\n",
            "properties": {
                "clientId": {
                    "type": "string",
                    "description": "Newstyle:  (String) Your Azure web application ID.\n"
                },
                "clientSecret": {
                    "type": "string",
                    "description": "Newstyle:  (String, Sensitive) (Required for Initial Creation) Your Azure web application secret key.\n"
                },
                "hostFilters": {
                    "type": "string",
                    "description": "Newstyle:  (String) String of host tag(s) (in the form key:value,key:value) defines a filter that Datadog will use when collecting metrics from Azure. Limit the Azure instances that are pulled into Datadog by using tags. Only hosts that match one of the defined tags are imported into Datadog. e.x. env:production,deploymentgroup:red\n"
                },
                "tenantName": {
                    "type": "string",
                    "description": "Newstyle:  (String) Your Azure Active Directory ID.\n"
                }
            },
            "required": [
                "clientId",
                "clientSecret",
                "tenantName"
            ],
            "inputProperties": {
                "clientId": {
                    "type": "string",
                    "description": "Newstyle:  (String) Your Azure web application ID.\n"
                },
                "clientSecret": {
                    "type": "string",
                    "description": "Newstyle:  (String, Sensitive) (Required for Initial Creation) Your Azure web application secret key.\n"
                },
                "hostFilters": {
                    "type": "string",
                    "description": "Newstyle:  (String) String of host tag(s) (in the form key:value,key:value) defines a filter that Datadog will use when collecting metrics from Azure. Limit the Azure instances that are pulled into Datadog by using tags. Only hosts that match one of the defined tags are imported into Datadog. e.x. env:production,deploymentgroup:red\n"
                },
                "tenantName": {
                    "type": "string",
                    "description": "Newstyle:  (String) Your Azure Active Directory ID.\n"
                }
            },
            "requiredInputs": [
                "clientId",
                "clientSecret",
                "tenantName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Integration resources.\n",
                "properties": {
                    "clientId": {
                        "type": "string",
                        "description": "Newstyle:  (String) Your Azure web application ID.\n"
                    },
                    "clientSecret": {
                        "type": "string",
                        "description": "Newstyle:  (String, Sensitive) (Required for Initial Creation) Your Azure web application secret key.\n"
                    },
                    "hostFilters": {
                        "type": "string",
                        "description": "Newstyle:  (String) String of host tag(s) (in the form key:value,key:value) defines a filter that Datadog will use when collecting metrics from Azure. Limit the Azure instances that are pulled into Datadog by using tags. Only hosts that match one of the defined tags are imported into Datadog. e.x. env:production,deploymentgroup:red\n"
                    },
                    "tenantName": {
                        "type": "string",
                        "description": "Newstyle:  (String) Your Azure Active Directory ID.\n"
                    }
                },
                "type": "object"
            }
        },
        "datadog:gcp/integration:Integration": {
            "description": "TODO\n\nTODO\n",
            "properties": {
                "automute": {
                    "type": "boolean",
                    "description": "Newstyle:  (Boolean) Silence monitors for expected GCE instance shutdowns.\n"
                },
                "clientEmail": {
                    "type": "string",
                    "description": "Newstyle:  (String) Your email found in your JSON service account key.\n"
                },
                "clientId": {
                    "type": "string",
                    "description": "Newstyle:  (String) Your ID found in your JSON service account key.\n"
                },
                "hostFilters": {
                    "type": "string",
                    "description": "Newstyle:  (String) Limit the GCE instances that are pulled into Datadog by using tags. Only hosts that match one of the defined tags are imported into Datadog.\n"
                },
                "privateKey": {
                    "type": "string",
                    "description": "Newstyle:  (String, Sensitive) Your private key name found in your JSON service account key.\n"
                },
                "privateKeyId": {
                    "type": "string",
                    "description": "Your private key ID found in your JSON service account key.\n"
                },
                "projectId": {
                    "type": "string",
                    "description": "Newstyle:  (String) Your Google Cloud project ID found in your JSON service account key.\n"
                }
            },
            "required": [
                "clientEmail",
                "clientId",
                "privateKey",
                "privateKeyId",
                "projectId"
            ],
            "inputProperties": {
                "automute": {
                    "type": "boolean",
                    "description": "Newstyle:  (Boolean) Silence monitors for expected GCE instance shutdowns.\n"
                },
                "clientEmail": {
                    "type": "string",
                    "description": "Newstyle:  (String) Your email found in your JSON service account key.\n"
                },
                "clientId": {
                    "type": "string",
                    "description": "Newstyle:  (String) Your ID found in your JSON service account key.\n"
                },
                "hostFilters": {
                    "type": "string",
                    "description": "Newstyle:  (String) Limit the GCE instances that are pulled into Datadog by using tags. Only hosts that match one of the defined tags are imported into Datadog.\n"
                },
                "privateKey": {
                    "type": "string",
                    "description": "Newstyle:  (String, Sensitive) Your private key name found in your JSON service account key.\n"
                },
                "privateKeyId": {
                    "type": "string",
                    "description": "Your private key ID found in your JSON service account key.\n"
                },
                "projectId": {
                    "type": "string",
                    "description": "Newstyle:  (String) Your Google Cloud project ID found in your JSON service account key.\n"
                }
            },
            "requiredInputs": [
                "clientEmail",
                "clientId",
                "privateKey",
                "privateKeyId",
                "projectId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Integration resources.\n",
                "properties": {
                    "automute": {
                        "type": "boolean",
                        "description": "Newstyle:  (Boolean) Silence monitors for expected GCE instance shutdowns.\n"
                    },
                    "clientEmail": {
                        "type": "string",
                        "description": "Newstyle:  (String) Your email found in your JSON service account key.\n"
                    },
                    "clientId": {
                        "type": "string",
                        "description": "Newstyle:  (String) Your ID found in your JSON service account key.\n"
                    },
                    "hostFilters": {
                        "type": "string",
                        "description": "Newstyle:  (String) Limit the GCE instances that are pulled into Datadog by using tags. Only hosts that match one of the defined tags are imported into Datadog.\n"
                    },
                    "privateKey": {
                        "type": "string",
                        "description": "Newstyle:  (String, Sensitive) Your private key name found in your JSON service account key.\n"
                    },
                    "privateKeyId": {
                        "type": "string",
                        "description": "Your private key ID found in your JSON service account key.\n"
                    },
                    "projectId": {
                        "type": "string",
                        "description": "Newstyle:  (String) Your Google Cloud project ID found in your JSON service account key.\n"
                    }
                },
                "type": "object"
            }
        },
        "datadog:index/dashboard:Dashboard": {
            "description": "TODO\n\nTODO\n",
            "properties": {
                "dashboardLists": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "Newstyle:  (Set of Number) The list of dashboard lists this dashboard belongs to.\n"
                },
                "dashboardListsRemoveds": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "The list of dashboard lists this dashboard should be removed from. Internal only.\n"
                },
                "description": {
                    "type": "string",
                    "description": "Newstyle:  (String) The description of the dashboard.\n"
                },
                "isReadOnly": {
                    "type": "boolean",
                    "description": "Whether this dashboard is read-only.\n"
                },
                "layoutType": {
                    "type": "string",
                    "description": "Newstyle:  (String) The layout type of the group, only 'ordered' for now.\n"
                },
                "notifyLists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Newstyle:  (List of String) The list of handles of users to notify when changes are made to this dashboard.\n"
                },
                "reflowType": {
                    "type": "string",
                    "description": "Newstyle:  (String) The reflow type of a multi-size layout dashboard. Set this only when layout type is ‘ordered’. If set to ‘fixed’, the dashboard expect all widgets to have a layout, and if it’s set to ‘auto’, widgets should not have layouts.\n"
                },
                "templateVariablePresets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardTemplateVariablePreset:DashboardTemplateVariablePreset"
                    },
                    "description": "The list of selectable template variable presets for this dashboard.\n"
                },
                "templateVariables": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardTemplateVariable:DashboardTemplateVariable"
                    },
                    "description": "Newstyle:  (Block List) The template variable names and assumed values under the given preset (see )\n"
                },
                "title": {
                    "type": "string",
                    "description": "Newstyle:  (String) The title of the widget.\n"
                },
                "url": {
                    "type": "string",
                    "description": "Newstyle:  (String) The URL to use as a data source for the widget.\n"
                },
                "widgets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidget:DashboardWidget"
                    },
                    "description": "Newstyle:  (Block List, Min: 1) The list of widgets in this group. (see )\n"
                }
            },
            "required": [
                "dashboardListsRemoveds",
                "layoutType",
                "title",
                "url",
                "widgets"
            ],
            "inputProperties": {
                "dashboardLists": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "Newstyle:  (Set of Number) The list of dashboard lists this dashboard belongs to.\n"
                },
                "description": {
                    "type": "string",
                    "description": "Newstyle:  (String) The description of the dashboard.\n"
                },
                "isReadOnly": {
                    "type": "boolean",
                    "description": "Whether this dashboard is read-only.\n"
                },
                "layoutType": {
                    "type": "string",
                    "description": "Newstyle:  (String) The layout type of the group, only 'ordered' for now.\n"
                },
                "notifyLists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Newstyle:  (List of String) The list of handles of users to notify when changes are made to this dashboard.\n"
                },
                "reflowType": {
                    "type": "string",
                    "description": "Newstyle:  (String) The reflow type of a multi-size layout dashboard. Set this only when layout type is ‘ordered’. If set to ‘fixed’, the dashboard expect all widgets to have a layout, and if it’s set to ‘auto’, widgets should not have layouts.\n"
                },
                "templateVariablePresets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardTemplateVariablePreset:DashboardTemplateVariablePreset"
                    },
                    "description": "The list of selectable template variable presets for this dashboard.\n"
                },
                "templateVariables": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardTemplateVariable:DashboardTemplateVariable"
                    },
                    "description": "Newstyle:  (Block List) The template variable names and assumed values under the given preset (see )\n"
                },
                "title": {
                    "type": "string",
                    "description": "Newstyle:  (String) The title of the widget.\n"
                },
                "url": {
                    "type": "string",
                    "description": "Newstyle:  (String) The URL to use as a data source for the widget.\n"
                },
                "widgets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidget:DashboardWidget"
                    },
                    "description": "Newstyle:  (Block List, Min: 1) The list of widgets in this group. (see )\n"
                }
            },
            "requiredInputs": [
                "layoutType",
                "title",
                "widgets"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Dashboard resources.\n",
                "properties": {
                    "dashboardLists": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "description": "Newstyle:  (Set of Number) The list of dashboard lists this dashboard belongs to.\n"
                    },
                    "dashboardListsRemoveds": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "description": "The list of dashboard lists this dashboard should be removed from. Internal only.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "Newstyle:  (String) The description of the dashboard.\n"
                    },
                    "isReadOnly": {
                        "type": "boolean",
                        "description": "Whether this dashboard is read-only.\n"
                    },
                    "layoutType": {
                        "type": "string",
                        "description": "Newstyle:  (String) The layout type of the group, only 'ordered' for now.\n"
                    },
                    "notifyLists": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Newstyle:  (List of String) The list of handles of users to notify when changes are made to this dashboard.\n"
                    },
                    "reflowType": {
                        "type": "string",
                        "description": "Newstyle:  (String) The reflow type of a multi-size layout dashboard. Set this only when layout type is ‘ordered’. If set to ‘fixed’, the dashboard expect all widgets to have a layout, and if it’s set to ‘auto’, widgets should not have layouts.\n"
                    },
                    "templateVariablePresets": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/datadog:index/DashboardTemplateVariablePreset:DashboardTemplateVariablePreset"
                        },
                        "description": "The list of selectable template variable presets for this dashboard.\n"
                    },
                    "templateVariables": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/datadog:index/DashboardTemplateVariable:DashboardTemplateVariable"
                        },
                        "description": "Newstyle:  (Block List) The template variable names and assumed values under the given preset (see )\n"
                    },
                    "title": {
                        "type": "string",
                        "description": "Newstyle:  (String) The title of the widget.\n"
                    },
                    "url": {
                        "type": "string",
                        "description": "Newstyle:  (String) The URL to use as a data source for the widget.\n"
                    },
                    "widgets": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/datadog:index/DashboardWidget:DashboardWidget"
                        },
                        "description": "Newstyle:  (Block List, Min: 1) The list of widgets in this group. (see )\n"
                    }
                },
                "type": "object"
            }
        },
        "datadog:index/dashboardList:DashboardList": {
            "description": "TODO\n\nTODO\n",
            "properties": {
                "dashItems": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardListDashItem:DashboardListDashItem"
                    },
                    "description": "Newstyle:  (Block Set) A set of dashboard items that belong to this list (see )\n"
                },
                "name": {
                    "type": "string",
                    "description": "Newstyle:  (String) The name of the Dashboard List\n"
                }
            },
            "required": [
                "name"
            ],
            "inputProperties": {
                "dashItems": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardListDashItem:DashboardListDashItem"
                    },
                    "description": "Newstyle:  (Block Set) A set of dashboard items that belong to this list (see )\n"
                },
                "name": {
                    "type": "string",
                    "description": "Newstyle:  (String) The name of the Dashboard List\n"
                }
            },
            "requiredInputs": [
                "name"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DashboardList resources.\n",
                "properties": {
                    "dashItems": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/datadog:index/DashboardListDashItem:DashboardListDashItem"
                        },
                        "description": "Newstyle:  (Block Set) A set of dashboard items that belong to this list (see )\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Newstyle:  (String) The name of the Dashboard List\n"
                    }
                },
                "type": "object"
            }
        },
        "datadog:index/downtime:Downtime": {
            "description": "TODO\n\nTODO\n",
            "properties": {
                "active": {
                    "type": "boolean",
                    "description": "Newstyle:  (Boolean) When true indicates this downtime is being actively applied\n"
                },
                "disabled": {
                    "type": "boolean",
                    "description": "Newstyle:  (Boolean) When true indicates this downtime is not being applied\n"
                },
                "end": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Optionally specify an end date when this downtime should expire\n"
                },
                "endDate": {
                    "type": "string",
                    "description": "Newstyle:  (String) String representing date and time to end the downtime in RFC3339 format.\n"
                },
                "message": {
                    "type": "string",
                    "description": "Newstyle:  (String) An optional message to provide when creating the downtime, can include notification handles\n"
                },
                "monitorId": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) When specified, this downtime will only apply to this monitor\n"
                },
                "monitorTags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Newstyle:  (Set of String) A list of monitor tags (up to 25), i.e. tags that are applied directly to monitors to which the downtime applies\n"
                },
                "recurrence": {
                    "$ref": "#/types/datadog:index/DowntimeRecurrence:DowntimeRecurrence",
                    "description": "Newstyle:  (Block List, Max: 1) Optional recurring schedule for this downtime (see )\n"
                },
                "scopes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Newstyle:  (List of String) specify the group scope to which this downtime applies. For everything use '*'\n"
                },
                "start": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Specify when this downtime should start\n"
                },
                "startDate": {
                    "type": "string",
                    "description": "Newstyle:  (String) String representing date and time to start the downtime in RFC3339 format.\n"
                },
                "timezone": {
                    "type": "string",
                    "description": "Newstyle:  (String) The timezone for the downtime, default UTC\n"
                }
            },
            "required": [
                "active",
                "disabled",
                "scopes"
            ],
            "inputProperties": {
                "end": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Optionally specify an end date when this downtime should expire\n"
                },
                "endDate": {
                    "type": "string",
                    "description": "Newstyle:  (String) String representing date and time to end the downtime in RFC3339 format.\n"
                },
                "message": {
                    "type": "string",
                    "description": "Newstyle:  (String) An optional message to provide when creating the downtime, can include notification handles\n"
                },
                "monitorId": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) When specified, this downtime will only apply to this monitor\n"
                },
                "monitorTags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Newstyle:  (Set of String) A list of monitor tags (up to 25), i.e. tags that are applied directly to monitors to which the downtime applies\n"
                },
                "recurrence": {
                    "$ref": "#/types/datadog:index/DowntimeRecurrence:DowntimeRecurrence",
                    "description": "Newstyle:  (Block List, Max: 1) Optional recurring schedule for this downtime (see )\n"
                },
                "scopes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Newstyle:  (List of String) specify the group scope to which this downtime applies. For everything use '*'\n"
                },
                "start": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Specify when this downtime should start\n"
                },
                "startDate": {
                    "type": "string",
                    "description": "Newstyle:  (String) String representing date and time to start the downtime in RFC3339 format.\n"
                },
                "timezone": {
                    "type": "string",
                    "description": "Newstyle:  (String) The timezone for the downtime, default UTC\n"
                }
            },
            "requiredInputs": [
                "scopes"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Downtime resources.\n",
                "properties": {
                    "active": {
                        "type": "boolean",
                        "description": "Newstyle:  (Boolean) When true indicates this downtime is being actively applied\n"
                    },
                    "disabled": {
                        "type": "boolean",
                        "description": "Newstyle:  (Boolean) When true indicates this downtime is not being applied\n"
                    },
                    "end": {
                        "type": "integer",
                        "description": "Newstyle:  (Number) Optionally specify an end date when this downtime should expire\n"
                    },
                    "endDate": {
                        "type": "string",
                        "description": "Newstyle:  (String) String representing date and time to end the downtime in RFC3339 format.\n"
                    },
                    "message": {
                        "type": "string",
                        "description": "Newstyle:  (String) An optional message to provide when creating the downtime, can include notification handles\n"
                    },
                    "monitorId": {
                        "type": "integer",
                        "description": "Newstyle:  (Number) When specified, this downtime will only apply to this monitor\n"
                    },
                    "monitorTags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Newstyle:  (Set of String) A list of monitor tags (up to 25), i.e. tags that are applied directly to monitors to which the downtime applies\n"
                    },
                    "recurrence": {
                        "$ref": "#/types/datadog:index/DowntimeRecurrence:DowntimeRecurrence",
                        "description": "Newstyle:  (Block List, Max: 1) Optional recurring schedule for this downtime (see )\n"
                    },
                    "scopes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Newstyle:  (List of String) specify the group scope to which this downtime applies. For everything use '*'\n"
                    },
                    "start": {
                        "type": "integer",
                        "description": "Newstyle:  (Number) Specify when this downtime should start\n"
                    },
                    "startDate": {
                        "type": "string",
                        "description": "Newstyle:  (String) String representing date and time to start the downtime in RFC3339 format.\n"
                    },
                    "timezone": {
                        "type": "string",
                        "description": "Newstyle:  (String) The timezone for the downtime, default UTC\n"
                    }
                },
                "type": "object"
            }
        },
        "datadog:index/logsArchive:LogsArchive": {
            "description": "TODO\n\nTODO\n",
            "properties": {
                "azure": {
                    "$ref": "#/types/datadog:index/LogsArchiveAzure:LogsArchiveAzure",
                    "description": "Newstyle:  (Map of String, Deprecated) Definition of an azure archive.  Define azure_archive list with one element instead.\n",
                    "deprecationMessage": "Define `azure_archive` list with one element instead."
                },
                "azureArchive": {
                    "$ref": "#/types/datadog:index/LogsArchiveAzureArchive:LogsArchiveAzureArchive",
                    "description": "Newstyle:  (Block List, Max: 1) Definition of an azure archive. (see )\n"
                },
                "gcs": {
                    "$ref": "#/types/datadog:index/LogsArchiveGcs:LogsArchiveGcs",
                    "description": "Newstyle:  (Map of String, Deprecated) Definition of a GCS archive.  Define gcs_archive list with one element instead.\n",
                    "deprecationMessage": "Define `gcs_archive` list with one element instead."
                },
                "gcsArchive": {
                    "$ref": "#/types/datadog:index/LogsArchiveGcsArchive:LogsArchiveGcsArchive",
                    "description": "Newstyle:  (Block List, Max: 1) Definition of a GCS archive. (see )\n"
                },
                "includeTags": {
                    "type": "boolean",
                    "description": "Newstyle:  (Boolean) To store the tags in the archive, set the value true. If it is set to false, the tags will be dropped when the logs are sent to the archive.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Newstyle:  (String) Your archive name.\n"
                },
                "query": {
                    "type": "string",
                    "description": "Newstyle:  (String) The archive query/filter. Logs matching this query are included in the archive.\n"
                },
                "rehydrationTags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Newstyle:  (List of String) An array of tags to add to rehydrated logs from an archive.\n"
                },
                "s3": {
                    "$ref": "#/types/datadog:index/LogsArchiveS3:LogsArchiveS3",
                    "description": "Newstyle:  (Map of String, Deprecated) Definition of an s3 archive.  Define s3_archive list with one element instead.\n",
                    "deprecationMessage": "Define `s3_archive` list with one element instead."
                },
                "s3Archive": {
                    "$ref": "#/types/datadog:index/LogsArchiveS3Archive:LogsArchiveS3Archive",
                    "description": "Newstyle:  (Block List, Max: 1) Definition of an s3 archive. (see )\n"
                }
            },
            "required": [
                "name",
                "query"
            ],
            "inputProperties": {
                "azure": {
                    "$ref": "#/types/datadog:index/LogsArchiveAzure:LogsArchiveAzure",
                    "description": "Newstyle:  (Map of String, Deprecated) Definition of an azure archive.  Define azure_archive list with one element instead.\n",
                    "deprecationMessage": "Define `azure_archive` list with one element instead."
                },
                "azureArchive": {
                    "$ref": "#/types/datadog:index/LogsArchiveAzureArchive:LogsArchiveAzureArchive",
                    "description": "Newstyle:  (Block List, Max: 1) Definition of an azure archive. (see )\n"
                },
                "gcs": {
                    "$ref": "#/types/datadog:index/LogsArchiveGcs:LogsArchiveGcs",
                    "description": "Newstyle:  (Map of String, Deprecated) Definition of a GCS archive.  Define gcs_archive list with one element instead.\n",
                    "deprecationMessage": "Define `gcs_archive` list with one element instead."
                },
                "gcsArchive": {
                    "$ref": "#/types/datadog:index/LogsArchiveGcsArchive:LogsArchiveGcsArchive",
                    "description": "Newstyle:  (Block List, Max: 1) Definition of a GCS archive. (see )\n"
                },
                "includeTags": {
                    "type": "boolean",
                    "description": "Newstyle:  (Boolean) To store the tags in the archive, set the value true. If it is set to false, the tags will be dropped when the logs are sent to the archive.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Newstyle:  (String) Your archive name.\n"
                },
                "query": {
                    "type": "string",
                    "description": "Newstyle:  (String) The archive query/filter. Logs matching this query are included in the archive.\n"
                },
                "rehydrationTags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Newstyle:  (List of String) An array of tags to add to rehydrated logs from an archive.\n"
                },
                "s3": {
                    "$ref": "#/types/datadog:index/LogsArchiveS3:LogsArchiveS3",
                    "description": "Newstyle:  (Map of String, Deprecated) Definition of an s3 archive.  Define s3_archive list with one element instead.\n",
                    "deprecationMessage": "Define `s3_archive` list with one element instead."
                },
                "s3Archive": {
                    "$ref": "#/types/datadog:index/LogsArchiveS3Archive:LogsArchiveS3Archive",
                    "description": "Newstyle:  (Block List, Max: 1) Definition of an s3 archive. (see )\n"
                }
            },
            "requiredInputs": [
                "name",
                "query"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering LogsArchive resources.\n",
                "properties": {
                    "azure": {
                        "$ref": "#/types/datadog:index/LogsArchiveAzure:LogsArchiveAzure",
                        "description": "Newstyle:  (Map of String, Deprecated) Definition of an azure archive.  Define azure_archive list with one element instead.\n",
                        "deprecationMessage": "Define `azure_archive` list with one element instead."
                    },
                    "azureArchive": {
                        "$ref": "#/types/datadog:index/LogsArchiveAzureArchive:LogsArchiveAzureArchive",
                        "description": "Newstyle:  (Block List, Max: 1) Definition of an azure archive. (see )\n"
                    },
                    "gcs": {
                        "$ref": "#/types/datadog:index/LogsArchiveGcs:LogsArchiveGcs",
                        "description": "Newstyle:  (Map of String, Deprecated) Definition of a GCS archive.  Define gcs_archive list with one element instead.\n",
                        "deprecationMessage": "Define `gcs_archive` list with one element instead."
                    },
                    "gcsArchive": {
                        "$ref": "#/types/datadog:index/LogsArchiveGcsArchive:LogsArchiveGcsArchive",
                        "description": "Newstyle:  (Block List, Max: 1) Definition of a GCS archive. (see )\n"
                    },
                    "includeTags": {
                        "type": "boolean",
                        "description": "Newstyle:  (Boolean) To store the tags in the archive, set the value true. If it is set to false, the tags will be dropped when the logs are sent to the archive.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Newstyle:  (String) Your archive name.\n"
                    },
                    "query": {
                        "type": "string",
                        "description": "Newstyle:  (String) The archive query/filter. Logs matching this query are included in the archive.\n"
                    },
                    "rehydrationTags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Newstyle:  (List of String) An array of tags to add to rehydrated logs from an archive.\n"
                    },
                    "s3": {
                        "$ref": "#/types/datadog:index/LogsArchiveS3:LogsArchiveS3",
                        "description": "Newstyle:  (Map of String, Deprecated) Definition of an s3 archive.  Define s3_archive list with one element instead.\n",
                        "deprecationMessage": "Define `s3_archive` list with one element instead."
                    },
                    "s3Archive": {
                        "$ref": "#/types/datadog:index/LogsArchiveS3Archive:LogsArchiveS3Archive",
                        "description": "Newstyle:  (Block List, Max: 1) Definition of an s3 archive. (see )\n"
                    }
                },
                "type": "object"
            }
        },
        "datadog:index/logsArchiveOrder:LogsArchiveOrder": {
            "description": "TODO\n\nTODO\n",
            "properties": {
                "archiveIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Newstyle:  (List of String) The archive IDs list. The order of archive IDs in this attribute defines the overall archive order for logs. If archive_ids is empty or not specified, it will import the actual archive order, and create the resource. Otherwise, it will try to update the order.\n"
                }
            },
            "required": [
                "archiveIds"
            ],
            "inputProperties": {
                "archiveIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Newstyle:  (List of String) The archive IDs list. The order of archive IDs in this attribute defines the overall archive order for logs. If archive_ids is empty or not specified, it will import the actual archive order, and create the resource. Otherwise, it will try to update the order.\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering LogsArchiveOrder resources.\n",
                "properties": {
                    "archiveIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Newstyle:  (List of String) The archive IDs list. The order of archive IDs in this attribute defines the overall archive order for logs. If archive_ids is empty or not specified, it will import the actual archive order, and create the resource. Otherwise, it will try to update the order.\n"
                    }
                },
                "type": "object"
            }
        },
        "datadog:index/logsCustomPipeline:LogsCustomPipeline": {
            "description": "TODO\n\nTODO\n",
            "properties": {
                "filters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/LogsCustomPipelineFilter:LogsCustomPipelineFilter"
                    },
                    "description": "Newstyle:  (Block List, Min: 1, Max: 1) (see )\n"
                },
                "isEnabled": {
                    "type": "boolean",
                    "description": "Newstyle:  (Boolean) If the processor is enabled or not.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Newstyle:  (String) Name of the processor\n"
                },
                "processors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/LogsCustomPipelineProcessor:LogsCustomPipelineProcessor"
                    },
                    "description": "Newstyle:  (Block List) (see )\n"
                }
            },
            "required": [
                "filters",
                "name"
            ],
            "inputProperties": {
                "filters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/LogsCustomPipelineFilter:LogsCustomPipelineFilter"
                    },
                    "description": "Newstyle:  (Block List, Min: 1, Max: 1) (see )\n"
                },
                "isEnabled": {
                    "type": "boolean",
                    "description": "Newstyle:  (Boolean) If the processor is enabled or not.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Newstyle:  (String) Name of the processor\n"
                },
                "processors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/LogsCustomPipelineProcessor:LogsCustomPipelineProcessor"
                    },
                    "description": "Newstyle:  (Block List) (see )\n"
                }
            },
            "requiredInputs": [
                "filters",
                "name"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering LogsCustomPipeline resources.\n",
                "properties": {
                    "filters": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/datadog:index/LogsCustomPipelineFilter:LogsCustomPipelineFilter"
                        },
                        "description": "Newstyle:  (Block List, Min: 1, Max: 1) (see )\n"
                    },
                    "isEnabled": {
                        "type": "boolean",
                        "description": "Newstyle:  (Boolean) If the processor is enabled or not.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Newstyle:  (String) Name of the processor\n"
                    },
                    "processors": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/datadog:index/LogsCustomPipelineProcessor:LogsCustomPipelineProcessor"
                        },
                        "description": "Newstyle:  (Block List) (see )\n"
                    }
                },
                "type": "object"
            }
        },
        "datadog:index/logsIndex:LogsIndex": {
            "description": "TODO\n\nTODO\n",
            "properties": {
                "exclusionFilters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/LogsIndexExclusionFilter:LogsIndexExclusionFilter"
                    },
                    "description": "Newstyle:  (Block List) List of exclusion filters. (see )\n"
                },
                "filters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/LogsIndexFilter:LogsIndexFilter"
                    },
                    "description": "Newstyle:  (Block List) (see )\n"
                },
                "name": {
                    "type": "string",
                    "description": "Newstyle:  (String) The name of the exclusion filter.\n"
                }
            },
            "required": [
                "filters",
                "name"
            ],
            "inputProperties": {
                "exclusionFilters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/LogsIndexExclusionFilter:LogsIndexExclusionFilter"
                    },
                    "description": "Newstyle:  (Block List) List of exclusion filters. (see )\n"
                },
                "filters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/LogsIndexFilter:LogsIndexFilter"
                    },
                    "description": "Newstyle:  (Block List) (see )\n"
                },
                "name": {
                    "type": "string",
                    "description": "Newstyle:  (String) The name of the exclusion filter.\n"
                }
            },
            "requiredInputs": [
                "filters",
                "name"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering LogsIndex resources.\n",
                "properties": {
                    "exclusionFilters": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/datadog:index/LogsIndexExclusionFilter:LogsIndexExclusionFilter"
                        },
                        "description": "Newstyle:  (Block List) List of exclusion filters. (see )\n"
                    },
                    "filters": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/datadog:index/LogsIndexFilter:LogsIndexFilter"
                        },
                        "description": "Newstyle:  (Block List) (see )\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Newstyle:  (String) The name of the exclusion filter.\n"
                    }
                },
                "type": "object"
            }
        },
        "datadog:index/logsIndexOrder:LogsIndexOrder": {
            "description": "TODO\n\nTODO\n",
            "properties": {
                "indexes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Newstyle:  (List of String) The index resource list. Logs are tested against the query filter of each index one by one following the order of the list.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Newstyle:  (String) The unique name of the index order resource.\n"
                }
            },
            "required": [
                "indexes",
                "name"
            ],
            "inputProperties": {
                "indexes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Newstyle:  (List of String) The index resource list. Logs are tested against the query filter of each index one by one following the order of the list.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Newstyle:  (String) The unique name of the index order resource.\n"
                }
            },
            "requiredInputs": [
                "indexes",
                "name"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering LogsIndexOrder resources.\n",
                "properties": {
                    "indexes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Newstyle:  (List of String) The index resource list. Logs are tested against the query filter of each index one by one following the order of the list.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Newstyle:  (String) The unique name of the index order resource.\n"
                    }
                },
                "type": "object"
            }
        },
        "datadog:index/logsIntegrationPipeline:LogsIntegrationPipeline": {
            "description": "TODO\n\nTODO\n",
            "properties": {
                "isEnabled": {
                    "type": "boolean",
                    "description": "Newstyle:  (Boolean) Boolean value to enable your pipeline.\n"
                }
            },
            "inputProperties": {
                "isEnabled": {
                    "type": "boolean",
                    "description": "Newstyle:  (Boolean) Boolean value to enable your pipeline.\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering LogsIntegrationPipeline resources.\n",
                "properties": {
                    "isEnabled": {
                        "type": "boolean",
                        "description": "Newstyle:  (Boolean) Boolean value to enable your pipeline.\n"
                    }
                },
                "type": "object"
            }
        },
        "datadog:index/logsMetric:LogsMetric": {
            "description": "TODO\n\nTODO\n",
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:index/LogsMetricCompute:LogsMetricCompute",
                    "description": "Newstyle:  (Block List, Min: 1, Max: 1) The compute rule to compute the log-based metric. This field can't be updated after creation. (see )\n"
                },
                "filter": {
                    "$ref": "#/types/datadog:index/LogsMetricFilter:LogsMetricFilter",
                    "description": "Newstyle:  (Block List, Min: 1, Max: 1) The log-based metric filter. Logs matching this filter will be aggregated in this metric. (see )\n"
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/LogsMetricGroupBy:LogsMetricGroupBy"
                    },
                    "description": "Newstyle:  (Block List) The rules for the group by. (see )\n"
                },
                "name": {
                    "type": "string",
                    "description": "Newstyle:  (String) The name of the log-based metric. This field can't be updated after creation.\n"
                }
            },
            "required": [
                "compute",
                "filter",
                "name"
            ],
            "inputProperties": {
                "compute": {
                    "$ref": "#/types/datadog:index/LogsMetricCompute:LogsMetricCompute",
                    "description": "Newstyle:  (Block List, Min: 1, Max: 1) The compute rule to compute the log-based metric. This field can't be updated after creation. (see )\n"
                },
                "filter": {
                    "$ref": "#/types/datadog:index/LogsMetricFilter:LogsMetricFilter",
                    "description": "Newstyle:  (Block List, Min: 1, Max: 1) The log-based metric filter. Logs matching this filter will be aggregated in this metric. (see )\n"
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/LogsMetricGroupBy:LogsMetricGroupBy"
                    },
                    "description": "Newstyle:  (Block List) The rules for the group by. (see )\n"
                },
                "name": {
                    "type": "string",
                    "description": "Newstyle:  (String) The name of the log-based metric. This field can't be updated after creation.\n"
                }
            },
            "requiredInputs": [
                "compute",
                "filter",
                "name"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering LogsMetric resources.\n",
                "properties": {
                    "compute": {
                        "$ref": "#/types/datadog:index/LogsMetricCompute:LogsMetricCompute",
                        "description": "Newstyle:  (Block List, Min: 1, Max: 1) The compute rule to compute the log-based metric. This field can't be updated after creation. (see )\n"
                    },
                    "filter": {
                        "$ref": "#/types/datadog:index/LogsMetricFilter:LogsMetricFilter",
                        "description": "Newstyle:  (Block List, Min: 1, Max: 1) The log-based metric filter. Logs matching this filter will be aggregated in this metric. (see )\n"
                    },
                    "groupBies": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/datadog:index/LogsMetricGroupBy:LogsMetricGroupBy"
                        },
                        "description": "Newstyle:  (Block List) The rules for the group by. (see )\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Newstyle:  (String) The name of the log-based metric. This field can't be updated after creation.\n"
                    }
                },
                "type": "object"
            }
        },
        "datadog:index/logsPipelineOrder:LogsPipelineOrder": {
            "description": "TODO\n\nTODO\n",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Newstyle:  (String) The name attribute in the resource datadog_logs_pipeline_order needs to be unique. It's recommended to use the same value as the resource name. No related field is available in .\n"
                },
                "pipelines": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Newstyle:  (List of String) The pipeline IDs list. The order of pipeline IDs in this attribute defines the overall pipeline order for logs.\n"
                }
            },
            "required": [
                "name",
                "pipelines"
            ],
            "inputProperties": {
                "name": {
                    "type": "string",
                    "description": "Newstyle:  (String) The name attribute in the resource datadog_logs_pipeline_order needs to be unique. It's recommended to use the same value as the resource name. No related field is available in .\n"
                },
                "pipelines": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Newstyle:  (List of String) The pipeline IDs list. The order of pipeline IDs in this attribute defines the overall pipeline order for logs.\n"
                }
            },
            "requiredInputs": [
                "name",
                "pipelines"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering LogsPipelineOrder resources.\n",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Newstyle:  (String) The name attribute in the resource datadog_logs_pipeline_order needs to be unique. It's recommended to use the same value as the resource name. No related field is available in .\n"
                    },
                    "pipelines": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Newstyle:  (List of String) The pipeline IDs list. The order of pipeline IDs in this attribute defines the overall pipeline order for logs.\n"
                    }
                },
                "type": "object"
            }
        },
        "datadog:index/metricMetadata:MetricMetadata": {
            "description": "TODO\n\nTODO\n",
            "properties": {
                "description": {
                    "type": "string",
                    "description": "Newstyle:  (String) A description of the metric.\n"
                },
                "metric": {
                    "type": "string",
                    "description": "Newstyle:  (String) The name of the metric.\n"
                },
                "perUnit": {
                    "type": "string",
                    "description": "Newstyle:  (String) Per unit of the metric such as second in bytes per second.\n"
                },
                "shortName": {
                    "type": "string",
                    "description": "Newstyle:  (String) A short name of the metric.\n"
                },
                "statsdInterval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) If applicable, statsd flush interval in seconds for the metric.\n"
                },
                "type": {
                    "type": "string",
                    "description": "Newstyle:  (String) Type of the metric.\n"
                },
                "unit": {
                    "type": "string",
                    "description": "Newstyle:  (String) Primary unit of the metric such as byte or operation.\n"
                }
            },
            "required": [
                "metric"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "Newstyle:  (String) A description of the metric.\n"
                },
                "metric": {
                    "type": "string",
                    "description": "Newstyle:  (String) The name of the metric.\n"
                },
                "perUnit": {
                    "type": "string",
                    "description": "Newstyle:  (String) Per unit of the metric such as second in bytes per second.\n"
                },
                "shortName": {
                    "type": "string",
                    "description": "Newstyle:  (String) A short name of the metric.\n"
                },
                "statsdInterval": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) If applicable, statsd flush interval in seconds for the metric.\n"
                },
                "type": {
                    "type": "string",
                    "description": "Newstyle:  (String) Type of the metric.\n"
                },
                "unit": {
                    "type": "string",
                    "description": "Newstyle:  (String) Primary unit of the metric such as byte or operation.\n"
                }
            },
            "requiredInputs": [
                "metric"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering MetricMetadata resources.\n",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "Newstyle:  (String) A description of the metric.\n"
                    },
                    "metric": {
                        "type": "string",
                        "description": "Newstyle:  (String) The name of the metric.\n"
                    },
                    "perUnit": {
                        "type": "string",
                        "description": "Newstyle:  (String) Per unit of the metric such as second in bytes per second.\n"
                    },
                    "shortName": {
                        "type": "string",
                        "description": "Newstyle:  (String) A short name of the metric.\n"
                    },
                    "statsdInterval": {
                        "type": "integer",
                        "description": "Newstyle:  (Number) If applicable, statsd flush interval in seconds for the metric.\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "Newstyle:  (String) Type of the metric.\n"
                    },
                    "unit": {
                        "type": "string",
                        "description": "Newstyle:  (String) Primary unit of the metric such as byte or operation.\n"
                    }
                },
                "type": "object"
            }
        },
        "datadog:index/monitor:Monitor": {
            "description": "TODO\n\nTODO\n",
            "properties": {
                "enableLogsSample": {
                    "type": "boolean",
                    "description": "A boolean indicating whether or not to include a list of log values which triggered the alert. This is only used by log\nmonitors. Defaults to `false`.\n"
                },
                "escalationMessage": {
                    "type": "string",
                    "description": "A message to include with a re-notification. Supports the `@username` notification allowed elsewhere.\n"
                },
                "evaluationDelay": {
                    "type": "integer",
                    "description": "(Only applies to metric alert) Time (in seconds) to delay evaluation, as a non-negative integer. For example, if the\nvalue is set to `300` (5min), the `timeframe` is set to `last_5m` and the time is 7:00, the monitor will evaluate data\nfrom 6:50 to 6:55. This is useful for AWS CloudWatch and other backfilled metrics to ensure the monitor will always have\ndata during evaluation.\n"
                },
                "forceDelete": {
                    "type": "boolean",
                    "description": "A boolean indicating whether this monitor can be deleted even if it’s referenced by other resources (e.g. SLO,\ncomposite monitor).\n"
                },
                "groupbySimpleMonitor": {
                    "type": "boolean",
                    "description": "Whether or not to trigger one alert if any source breaches a threshold. This is only used by log monitors. Defaults to\n`false`.\n"
                },
                "includeTags": {
                    "type": "boolean",
                    "description": "A boolean indicating whether notifications from this monitor automatically insert its triggering tags into the title.\nDefaults to `true`.\n"
                },
                "locked": {
                    "type": "boolean",
                    "description": "A boolean indicating whether changes to to this monitor should be restricted to the creator or admins. Defaults to\n`false`.\n"
                },
                "message": {
                    "type": "string",
                    "description": "Newstyle:  (String) A message to include with notifications for this monitor.\n"
                },
                "monitorThresholdWindows": {
                    "$ref": "#/types/datadog:index/MonitorMonitorThresholdWindows:MonitorMonitorThresholdWindows",
                    "description": "A mapping containing `recovery_window` and `trigger_window` values, e.g. `last_15m` . Can only be used for, and are\nrequired for, anomaly monitors.\n"
                },
                "monitorThresholds": {
                    "$ref": "#/types/datadog:index/MonitorMonitorThresholds:MonitorMonitorThresholds",
                    "description": "Alert thresholds of the monitor.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of Datadog monitor.\n"
                },
                "newHostDelay": {
                    "type": "integer",
                    "description": "Time (in seconds) to allow a host to boot and applications to fully start before starting the evaluation of monitor\nresults. Should be a non negative integer. Defaults to `300`.\n"
                },
                "noDataTimeframe": {
                    "type": "integer",
                    "description": "The number of minutes before a monitor will notify when data stops reporting. Provider defaults to 10 minutes. We\nrecommend at least 2x the monitor timeframe for metric alerts or 2 minutes for service checks.\n"
                },
                "notifyAudit": {
                    "type": "boolean",
                    "description": "A boolean indicating whether tagged users will be notified on changes to this monitor. Defaults to `false`.\n"
                },
                "notifyNoData": {
                    "type": "boolean",
                    "description": "A boolean indicating whether this monitor will notify when data stops reporting. Defaults to `false`.\n"
                },
                "priority": {
                    "type": "integer",
                    "description": "Integer from 1 (high) to 5 (low) indicating alert severity.\n"
                },
                "query": {
                    "type": "string",
                    "description": "The monitor query to notify on. Note this is not the same query you see in the UI and the syntax is different depending\non the monitor type, please see the [API Reference](https://docs.datadoghq.com/api/v1/monitors/#create-a-monitor) for\ndetails. `terraform plan` will validate query contents unless `validate` is set to `false`. **Note:** APM latency data\nis now available as Distribution Metrics. Existing monitors have been migrated automatically but all terraformed\nmonitors can still use the existing metrics. We strongly recommend updating monitor definitions to query the new\nmetrics. To learn more, or to see examples of how to update your terraform definitions to utilize the new distribution\nmetrics, see the [detailed doc](https://docs.datadoghq.com/tracing/guide/ddsketch_trace_metrics/).\n"
                },
                "renotifyInterval": {
                    "type": "integer",
                    "description": "The number of minutes after the last notification before a monitor will re-notify on the current status. It will only\nre-notify if it's not resolved.\n"
                },
                "requireFullWindow": {
                    "type": "boolean",
                    "description": "A boolean indicating whether this monitor needs a full window of data before it's evaluated. We highly recommend you set\nthis to `false` for sparse metrics, otherwise some evaluations will be skipped. Default: `true` for `on average`, `at\nall times` and `in total` aggregation. `false` otherwise.\n"
                },
                "restrictedRoles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "silenced": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "description": "Each scope will be muted until the given POSIX timestamp or forever if the value is `0`. Use `-1` if you want to unmute\nthe scope. Deprecated: the silenced parameter is being deprecated in favor of the downtime resource. This will be\nremoved in the next major version of the Terraform Provider.\n",
                    "deprecationMessage": "Use the Downtime resource instead."
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tags to associate with your monitor. This can help you categorize and filter monitors in the manage monitors\npage of the UI. Note: it's not currently possible to filter by these tags when querying via the API\n"
                },
                "thresholdWindows": {
                    "$ref": "#/types/datadog:index/MonitorThresholdWindows:MonitorThresholdWindows",
                    "description": "A mapping containing `recovery_window` and `trigger_window` values, e.g. `last_15m`. Can only be used for, and are\nrequired for, anomaly monitors.\n",
                    "deprecationMessage": "Define `monitor_threshold_windows` list with one element instead."
                },
                "thresholds": {
                    "$ref": "#/types/datadog:index/MonitorThresholds:MonitorThresholds",
                    "description": "Alert thresholds of the monitor.\n",
                    "deprecationMessage": "Define `monitor_thresholds` list with one element instead."
                },
                "timeoutH": {
                    "type": "integer",
                    "description": "The number of hours of the monitor not reporting data before it will automatically resolve from a triggered state.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The type of the monitor. The mapping from these types to the types found in the Datadog Web UI can be found in the\nDatadog API [documentation page](https://docs.datadoghq.com/api/v1/monitors/#create-a-monitor). Note: The monitor type\ncannot be changed after a monitor is created.\n"
                },
                "validate": {
                    "type": "boolean",
                    "description": "If set to `false`, skip the validation call done during plan.\n"
                }
            },
            "required": [
                "evaluationDelay",
                "message",
                "name",
                "query",
                "type"
            ],
            "inputProperties": {
                "enableLogsSample": {
                    "type": "boolean",
                    "description": "A boolean indicating whether or not to include a list of log values which triggered the alert. This is only used by log\nmonitors. Defaults to `false`.\n"
                },
                "escalationMessage": {
                    "type": "string",
                    "description": "A message to include with a re-notification. Supports the `@username` notification allowed elsewhere.\n"
                },
                "evaluationDelay": {
                    "type": "integer",
                    "description": "(Only applies to metric alert) Time (in seconds) to delay evaluation, as a non-negative integer. For example, if the\nvalue is set to `300` (5min), the `timeframe` is set to `last_5m` and the time is 7:00, the monitor will evaluate data\nfrom 6:50 to 6:55. This is useful for AWS CloudWatch and other backfilled metrics to ensure the monitor will always have\ndata during evaluation.\n"
                },
                "forceDelete": {
                    "type": "boolean",
                    "description": "A boolean indicating whether this monitor can be deleted even if it’s referenced by other resources (e.g. SLO,\ncomposite monitor).\n"
                },
                "groupbySimpleMonitor": {
                    "type": "boolean",
                    "description": "Whether or not to trigger one alert if any source breaches a threshold. This is only used by log monitors. Defaults to\n`false`.\n"
                },
                "includeTags": {
                    "type": "boolean",
                    "description": "A boolean indicating whether notifications from this monitor automatically insert its triggering tags into the title.\nDefaults to `true`.\n"
                },
                "locked": {
                    "type": "boolean",
                    "description": "A boolean indicating whether changes to to this monitor should be restricted to the creator or admins. Defaults to\n`false`.\n"
                },
                "message": {
                    "type": "string",
                    "description": "Newstyle:  (String) A message to include with notifications for this monitor.\n"
                },
                "monitorThresholdWindows": {
                    "$ref": "#/types/datadog:index/MonitorMonitorThresholdWindows:MonitorMonitorThresholdWindows",
                    "description": "A mapping containing `recovery_window` and `trigger_window` values, e.g. `last_15m` . Can only be used for, and are\nrequired for, anomaly monitors.\n"
                },
                "monitorThresholds": {
                    "$ref": "#/types/datadog:index/MonitorMonitorThresholds:MonitorMonitorThresholds",
                    "description": "Alert thresholds of the monitor.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of Datadog monitor.\n"
                },
                "newHostDelay": {
                    "type": "integer",
                    "description": "Time (in seconds) to allow a host to boot and applications to fully start before starting the evaluation of monitor\nresults. Should be a non negative integer. Defaults to `300`.\n"
                },
                "noDataTimeframe": {
                    "type": "integer",
                    "description": "The number of minutes before a monitor will notify when data stops reporting. Provider defaults to 10 minutes. We\nrecommend at least 2x the monitor timeframe for metric alerts or 2 minutes for service checks.\n"
                },
                "notifyAudit": {
                    "type": "boolean",
                    "description": "A boolean indicating whether tagged users will be notified on changes to this monitor. Defaults to `false`.\n"
                },
                "notifyNoData": {
                    "type": "boolean",
                    "description": "A boolean indicating whether this monitor will notify when data stops reporting. Defaults to `false`.\n"
                },
                "priority": {
                    "type": "integer",
                    "description": "Integer from 1 (high) to 5 (low) indicating alert severity.\n"
                },
                "query": {
                    "type": "string",
                    "description": "The monitor query to notify on. Note this is not the same query you see in the UI and the syntax is different depending\non the monitor type, please see the [API Reference](https://docs.datadoghq.com/api/v1/monitors/#create-a-monitor) for\ndetails. `terraform plan` will validate query contents unless `validate` is set to `false`. **Note:** APM latency data\nis now available as Distribution Metrics. Existing monitors have been migrated automatically but all terraformed\nmonitors can still use the existing metrics. We strongly recommend updating monitor definitions to query the new\nmetrics. To learn more, or to see examples of how to update your terraform definitions to utilize the new distribution\nmetrics, see the [detailed doc](https://docs.datadoghq.com/tracing/guide/ddsketch_trace_metrics/).\n"
                },
                "renotifyInterval": {
                    "type": "integer",
                    "description": "The number of minutes after the last notification before a monitor will re-notify on the current status. It will only\nre-notify if it's not resolved.\n"
                },
                "requireFullWindow": {
                    "type": "boolean",
                    "description": "A boolean indicating whether this monitor needs a full window of data before it's evaluated. We highly recommend you set\nthis to `false` for sparse metrics, otherwise some evaluations will be skipped. Default: `true` for `on average`, `at\nall times` and `in total` aggregation. `false` otherwise.\n"
                },
                "restrictedRoles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "silenced": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "description": "Each scope will be muted until the given POSIX timestamp or forever if the value is `0`. Use `-1` if you want to unmute\nthe scope. Deprecated: the silenced parameter is being deprecated in favor of the downtime resource. This will be\nremoved in the next major version of the Terraform Provider.\n",
                    "deprecationMessage": "Use the Downtime resource instead."
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tags to associate with your monitor. This can help you categorize and filter monitors in the manage monitors\npage of the UI. Note: it's not currently possible to filter by these tags when querying via the API\n"
                },
                "thresholdWindows": {
                    "$ref": "#/types/datadog:index/MonitorThresholdWindows:MonitorThresholdWindows",
                    "description": "A mapping containing `recovery_window` and `trigger_window` values, e.g. `last_15m`. Can only be used for, and are\nrequired for, anomaly monitors.\n",
                    "deprecationMessage": "Define `monitor_threshold_windows` list with one element instead."
                },
                "thresholds": {
                    "$ref": "#/types/datadog:index/MonitorThresholds:MonitorThresholds",
                    "description": "Alert thresholds of the monitor.\n",
                    "deprecationMessage": "Define `monitor_thresholds` list with one element instead."
                },
                "timeoutH": {
                    "type": "integer",
                    "description": "The number of hours of the monitor not reporting data before it will automatically resolve from a triggered state.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The type of the monitor. The mapping from these types to the types found in the Datadog Web UI can be found in the\nDatadog API [documentation page](https://docs.datadoghq.com/api/v1/monitors/#create-a-monitor). Note: The monitor type\ncannot be changed after a monitor is created.\n"
                },
                "validate": {
                    "type": "boolean",
                    "description": "If set to `false`, skip the validation call done during plan.\n"
                }
            },
            "requiredInputs": [
                "message",
                "name",
                "query",
                "type"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Monitor resources.\n",
                "properties": {
                    "enableLogsSample": {
                        "type": "boolean",
                        "description": "A boolean indicating whether or not to include a list of log values which triggered the alert. This is only used by log\nmonitors. Defaults to `false`.\n"
                    },
                    "escalationMessage": {
                        "type": "string",
                        "description": "A message to include with a re-notification. Supports the `@username` notification allowed elsewhere.\n"
                    },
                    "evaluationDelay": {
                        "type": "integer",
                        "description": "(Only applies to metric alert) Time (in seconds) to delay evaluation, as a non-negative integer. For example, if the\nvalue is set to `300` (5min), the `timeframe` is set to `last_5m` and the time is 7:00, the monitor will evaluate data\nfrom 6:50 to 6:55. This is useful for AWS CloudWatch and other backfilled metrics to ensure the monitor will always have\ndata during evaluation.\n"
                    },
                    "forceDelete": {
                        "type": "boolean",
                        "description": "A boolean indicating whether this monitor can be deleted even if it’s referenced by other resources (e.g. SLO,\ncomposite monitor).\n"
                    },
                    "groupbySimpleMonitor": {
                        "type": "boolean",
                        "description": "Whether or not to trigger one alert if any source breaches a threshold. This is only used by log monitors. Defaults to\n`false`.\n"
                    },
                    "includeTags": {
                        "type": "boolean",
                        "description": "A boolean indicating whether notifications from this monitor automatically insert its triggering tags into the title.\nDefaults to `true`.\n"
                    },
                    "locked": {
                        "type": "boolean",
                        "description": "A boolean indicating whether changes to to this monitor should be restricted to the creator or admins. Defaults to\n`false`.\n"
                    },
                    "message": {
                        "type": "string",
                        "description": "Newstyle:  (String) A message to include with notifications for this monitor.\n"
                    },
                    "monitorThresholdWindows": {
                        "$ref": "#/types/datadog:index/MonitorMonitorThresholdWindows:MonitorMonitorThresholdWindows",
                        "description": "A mapping containing `recovery_window` and `trigger_window` values, e.g. `last_15m` . Can only be used for, and are\nrequired for, anomaly monitors.\n"
                    },
                    "monitorThresholds": {
                        "$ref": "#/types/datadog:index/MonitorMonitorThresholds:MonitorMonitorThresholds",
                        "description": "Alert thresholds of the monitor.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of Datadog monitor.\n"
                    },
                    "newHostDelay": {
                        "type": "integer",
                        "description": "Time (in seconds) to allow a host to boot and applications to fully start before starting the evaluation of monitor\nresults. Should be a non negative integer. Defaults to `300`.\n"
                    },
                    "noDataTimeframe": {
                        "type": "integer",
                        "description": "The number of minutes before a monitor will notify when data stops reporting. Provider defaults to 10 minutes. We\nrecommend at least 2x the monitor timeframe for metric alerts or 2 minutes for service checks.\n"
                    },
                    "notifyAudit": {
                        "type": "boolean",
                        "description": "A boolean indicating whether tagged users will be notified on changes to this monitor. Defaults to `false`.\n"
                    },
                    "notifyNoData": {
                        "type": "boolean",
                        "description": "A boolean indicating whether this monitor will notify when data stops reporting. Defaults to `false`.\n"
                    },
                    "priority": {
                        "type": "integer",
                        "description": "Integer from 1 (high) to 5 (low) indicating alert severity.\n"
                    },
                    "query": {
                        "type": "string",
                        "description": "The monitor query to notify on. Note this is not the same query you see in the UI and the syntax is different depending\non the monitor type, please see the [API Reference](https://docs.datadoghq.com/api/v1/monitors/#create-a-monitor) for\ndetails. `terraform plan` will validate query contents unless `validate` is set to `false`. **Note:** APM latency data\nis now available as Distribution Metrics. Existing monitors have been migrated automatically but all terraformed\nmonitors can still use the existing metrics. We strongly recommend updating monitor definitions to query the new\nmetrics. To learn more, or to see examples of how to update your terraform definitions to utilize the new distribution\nmetrics, see the [detailed doc](https://docs.datadoghq.com/tracing/guide/ddsketch_trace_metrics/).\n"
                    },
                    "renotifyInterval": {
                        "type": "integer",
                        "description": "The number of minutes after the last notification before a monitor will re-notify on the current status. It will only\nre-notify if it's not resolved.\n"
                    },
                    "requireFullWindow": {
                        "type": "boolean",
                        "description": "A boolean indicating whether this monitor needs a full window of data before it's evaluated. We highly recommend you set\nthis to `false` for sparse metrics, otherwise some evaluations will be skipped. Default: `true` for `on average`, `at\nall times` and `in total` aggregation. `false` otherwise.\n"
                    },
                    "restrictedRoles": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "silenced": {
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "pulumi.json#/Any"
                        },
                        "description": "Each scope will be muted until the given POSIX timestamp or forever if the value is `0`. Use `-1` if you want to unmute\nthe scope. Deprecated: the silenced parameter is being deprecated in favor of the downtime resource. This will be\nremoved in the next major version of the Terraform Provider.\n",
                        "deprecationMessage": "Use the Downtime resource instead."
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of tags to associate with your monitor. This can help you categorize and filter monitors in the manage monitors\npage of the UI. Note: it's not currently possible to filter by these tags when querying via the API\n"
                    },
                    "thresholdWindows": {
                        "$ref": "#/types/datadog:index/MonitorThresholdWindows:MonitorThresholdWindows",
                        "description": "A mapping containing `recovery_window` and `trigger_window` values, e.g. `last_15m`. Can only be used for, and are\nrequired for, anomaly monitors.\n",
                        "deprecationMessage": "Define `monitor_threshold_windows` list with one element instead."
                    },
                    "thresholds": {
                        "$ref": "#/types/datadog:index/MonitorThresholds:MonitorThresholds",
                        "description": "Alert thresholds of the monitor.\n",
                        "deprecationMessage": "Define `monitor_thresholds` list with one element instead."
                    },
                    "timeoutH": {
                        "type": "integer",
                        "description": "The number of hours of the monitor not reporting data before it will automatically resolve from a triggered state.\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "The type of the monitor. The mapping from these types to the types found in the Datadog Web UI can be found in the\nDatadog API [documentation page](https://docs.datadoghq.com/api/v1/monitors/#create-a-monitor). Note: The monitor type\ncannot be changed after a monitor is created.\n"
                    },
                    "validate": {
                        "type": "boolean",
                        "description": "If set to `false`, skip the validation call done during plan.\n"
                    }
                },
                "type": "object"
            }
        },
        "datadog:index/role:Role": {
            "description": "TODO\n\nTODO\n",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Newstyle:  (String) Name of the permission.\n"
                },
                "permissions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/RolePermission:RolePermission"
                    },
                    "description": "Newstyle:  (Block Set) Set of objects containing the permission ID and the name of the permissions granted to this role. (see )\n"
                },
                "userCount": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) Number of users that have this role.\n"
                }
            },
            "required": [
                "name",
                "userCount"
            ],
            "inputProperties": {
                "name": {
                    "type": "string",
                    "description": "Newstyle:  (String) Name of the permission.\n"
                },
                "permissions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/RolePermission:RolePermission"
                    },
                    "description": "Newstyle:  (Block Set) Set of objects containing the permission ID and the name of the permissions granted to this role. (see )\n"
                }
            },
            "requiredInputs": [
                "name"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Role resources.\n",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Newstyle:  (String) Name of the permission.\n"
                    },
                    "permissions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/datadog:index/RolePermission:RolePermission"
                        },
                        "description": "Newstyle:  (Block Set) Set of objects containing the permission ID and the name of the permissions granted to this role. (see )\n"
                    },
                    "userCount": {
                        "type": "integer",
                        "description": "Newstyle:  (Number) Number of users that have this role.\n"
                    }
                },
                "type": "object"
            }
        },
        "datadog:index/screenBoard:ScreenBoard": {
            "description": "TODO\n\nTODO\n",
            "properties": {
                "height": {
                    "type": "string",
                    "description": "Height of the screenboard\n"
                },
                "readOnly": {
                    "type": "boolean",
                    "description": "The read-only status of the screenboard. Default is `false`.\n"
                },
                "shared": {
                    "type": "boolean",
                    "description": "Whether the screenboard is shared or not\n"
                },
                "templateVariables": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/ScreenBoardTemplateVariable:ScreenBoardTemplateVariable"
                    },
                    "description": "A list of template variables for using Dashboard templating.\n"
                },
                "title": {
                    "type": "string",
                    "description": "Name of the screenboard\n"
                },
                "widgets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/ScreenBoardWidget:ScreenBoardWidget"
                    },
                    "description": "A list of widget definitions.\n"
                },
                "width": {
                    "type": "string",
                    "description": "Width of the screenboard\n"
                }
            },
            "required": [
                "title",
                "widgets"
            ],
            "inputProperties": {
                "height": {
                    "type": "string",
                    "description": "Height of the screenboard\n"
                },
                "readOnly": {
                    "type": "boolean",
                    "description": "The read-only status of the screenboard. Default is `false`.\n"
                },
                "shared": {
                    "type": "boolean",
                    "description": "Whether the screenboard is shared or not\n"
                },
                "templateVariables": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/ScreenBoardTemplateVariable:ScreenBoardTemplateVariable"
                    },
                    "description": "A list of template variables for using Dashboard templating.\n"
                },
                "title": {
                    "type": "string",
                    "description": "Name of the screenboard\n"
                },
                "widgets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/ScreenBoardWidget:ScreenBoardWidget"
                    },
                    "description": "A list of widget definitions.\n"
                },
                "width": {
                    "type": "string",
                    "description": "Width of the screenboard\n"
                }
            },
            "requiredInputs": [
                "title",
                "widgets"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ScreenBoard resources.\n",
                "properties": {
                    "height": {
                        "type": "string",
                        "description": "Height of the screenboard\n"
                    },
                    "readOnly": {
                        "type": "boolean",
                        "description": "The read-only status of the screenboard. Default is `false`.\n"
                    },
                    "shared": {
                        "type": "boolean",
                        "description": "Whether the screenboard is shared or not\n"
                    },
                    "templateVariables": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/datadog:index/ScreenBoardTemplateVariable:ScreenBoardTemplateVariable"
                        },
                        "description": "A list of template variables for using Dashboard templating.\n"
                    },
                    "title": {
                        "type": "string",
                        "description": "Name of the screenboard\n"
                    },
                    "widgets": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/datadog:index/ScreenBoardWidget:ScreenBoardWidget"
                        },
                        "description": "A list of widget definitions.\n"
                    },
                    "width": {
                        "type": "string",
                        "description": "Width of the screenboard\n"
                    }
                },
                "type": "object"
            }
        },
        "datadog:index/securityMonitoringRule:SecurityMonitoringRule": {
            "description": "TODO\n\nTODO\n",
            "properties": {
                "cases": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/SecurityMonitoringRuleCase:SecurityMonitoringRuleCase"
                    },
                    "description": "Newstyle:  (Block List, Min: 1, Max: 5) Cases for generating signals. (see )\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Newstyle:  (Boolean, Optional) Whether the rule is enabled.\n"
                },
                "message": {
                    "type": "string",
                    "description": "Newstyle:  (String, Required) Message for generated signals.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Newstyle:  (String, Optional) Name of the query.\n"
                },
                "options": {
                    "$ref": "#/types/datadog:index/SecurityMonitoringRuleOptions:SecurityMonitoringRuleOptions",
                    "description": "Newstyle:  (Block List, Max: 1) Options on rules. (see )\n"
                },
                "queries": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/SecurityMonitoringRuleQuery:SecurityMonitoringRuleQuery"
                    },
                    "description": "Newstyle:  (String, Required) Query to run on logs.\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Newstyle:  (List of String, Optional) Tags for generated signals.\n"
                }
            },
            "required": [
                "cases",
                "message",
                "name",
                "queries"
            ],
            "inputProperties": {
                "cases": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/SecurityMonitoringRuleCase:SecurityMonitoringRuleCase"
                    },
                    "description": "Newstyle:  (Block List, Min: 1, Max: 5) Cases for generating signals. (see )\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Newstyle:  (Boolean, Optional) Whether the rule is enabled.\n"
                },
                "message": {
                    "type": "string",
                    "description": "Newstyle:  (String, Required) Message for generated signals.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Newstyle:  (String, Optional) Name of the query.\n"
                },
                "options": {
                    "$ref": "#/types/datadog:index/SecurityMonitoringRuleOptions:SecurityMonitoringRuleOptions",
                    "description": "Newstyle:  (Block List, Max: 1) Options on rules. (see )\n"
                },
                "queries": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/SecurityMonitoringRuleQuery:SecurityMonitoringRuleQuery"
                    },
                    "description": "Newstyle:  (String, Required) Query to run on logs.\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Newstyle:  (List of String, Optional) Tags for generated signals.\n"
                }
            },
            "requiredInputs": [
                "cases",
                "message",
                "name",
                "queries"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SecurityMonitoringRule resources.\n",
                "properties": {
                    "cases": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/datadog:index/SecurityMonitoringRuleCase:SecurityMonitoringRuleCase"
                        },
                        "description": "Newstyle:  (Block List, Min: 1, Max: 5) Cases for generating signals. (see )\n"
                    },
                    "enabled": {
                        "type": "boolean",
                        "description": "Newstyle:  (Boolean, Optional) Whether the rule is enabled.\n"
                    },
                    "message": {
                        "type": "string",
                        "description": "Newstyle:  (String, Required) Message for generated signals.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Newstyle:  (String, Optional) Name of the query.\n"
                    },
                    "options": {
                        "$ref": "#/types/datadog:index/SecurityMonitoringRuleOptions:SecurityMonitoringRuleOptions",
                        "description": "Newstyle:  (Block List, Max: 1) Options on rules. (see )\n"
                    },
                    "queries": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/datadog:index/SecurityMonitoringRuleQuery:SecurityMonitoringRuleQuery"
                        },
                        "description": "Newstyle:  (String, Required) Query to run on logs.\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Newstyle:  (List of String, Optional) Tags for generated signals.\n"
                    }
                },
                "type": "object"
            }
        },
        "datadog:index/serviceLevelObjective:ServiceLevelObjective": {
            "description": "TODO\n\nTODO\n",
            "properties": {
                "description": {
                    "type": "string",
                    "description": "Newstyle:  (String) A description of this service level objective.\n"
                },
                "forceDelete": {
                    "type": "boolean",
                    "description": "Newstyle:  (Boolean) A boolean indicating whether this monitor can be deleted even if it’s referenced by other resources (e.g. dashboards).\n"
                },
                "groups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Newstyle:  (Set of String) A static set of groups to filter monitor-based SLOs\n"
                },
                "monitorIds": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "Newstyle:  (Set of Number) A static set of monitor IDs to use as part of the SLO\n"
                },
                "name": {
                    "type": "string",
                    "description": "Newstyle:  (String) Name of Datadog service level objective\n"
                },
                "query": {
                    "$ref": "#/types/datadog:index/ServiceLevelObjectiveQuery:ServiceLevelObjectiveQuery",
                    "description": "Newstyle:  (Block List, Max: 1) The metric query of good / total events (see )\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Newstyle:  (Set of String) A list of tags to associate with your service level objective. This can help you categorize and filter service level objectives in the service level objectives page of the UI. Note: it's not currently possible to filter by these tags when querying via the API\n"
                },
                "thresholds": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/ServiceLevelObjectiveThreshold:ServiceLevelObjectiveThreshold"
                    },
                    "description": "Newstyle:  (Block List, Min: 1) A list of thresholds and targets that define the service level objectives from the provided SLIs. (see )\n"
                },
                "type": {
                    "type": "string",
                    "description": "Newstyle:  (String) The type of the service level objective. The mapping from these types to the types found in the Datadog Web UI can be found in the Datadog API . Available options to choose from are: metric and monitor.\n"
                },
                "validate": {
                    "type": "boolean",
                    "description": "Newstyle:  (Boolean) Whether or not to validate the SLO.\n"
                }
            },
            "required": [
                "name",
                "thresholds",
                "type"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "Newstyle:  (String) A description of this service level objective.\n"
                },
                "forceDelete": {
                    "type": "boolean",
                    "description": "Newstyle:  (Boolean) A boolean indicating whether this monitor can be deleted even if it’s referenced by other resources (e.g. dashboards).\n"
                },
                "groups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Newstyle:  (Set of String) A static set of groups to filter monitor-based SLOs\n"
                },
                "monitorIds": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "Newstyle:  (Set of Number) A static set of monitor IDs to use as part of the SLO\n"
                },
                "name": {
                    "type": "string",
                    "description": "Newstyle:  (String) Name of Datadog service level objective\n"
                },
                "query": {
                    "$ref": "#/types/datadog:index/ServiceLevelObjectiveQuery:ServiceLevelObjectiveQuery",
                    "description": "Newstyle:  (Block List, Max: 1) The metric query of good / total events (see )\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Newstyle:  (Set of String) A list of tags to associate with your service level objective. This can help you categorize and filter service level objectives in the service level objectives page of the UI. Note: it's not currently possible to filter by these tags when querying via the API\n"
                },
                "thresholds": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/ServiceLevelObjectiveThreshold:ServiceLevelObjectiveThreshold"
                    },
                    "description": "Newstyle:  (Block List, Min: 1) A list of thresholds and targets that define the service level objectives from the provided SLIs. (see )\n"
                },
                "type": {
                    "type": "string",
                    "description": "Newstyle:  (String) The type of the service level objective. The mapping from these types to the types found in the Datadog Web UI can be found in the Datadog API . Available options to choose from are: metric and monitor.\n"
                },
                "validate": {
                    "type": "boolean",
                    "description": "Newstyle:  (Boolean) Whether or not to validate the SLO.\n"
                }
            },
            "requiredInputs": [
                "name",
                "thresholds",
                "type"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ServiceLevelObjective resources.\n",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "Newstyle:  (String) A description of this service level objective.\n"
                    },
                    "forceDelete": {
                        "type": "boolean",
                        "description": "Newstyle:  (Boolean) A boolean indicating whether this monitor can be deleted even if it’s referenced by other resources (e.g. dashboards).\n"
                    },
                    "groups": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Newstyle:  (Set of String) A static set of groups to filter monitor-based SLOs\n"
                    },
                    "monitorIds": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "description": "Newstyle:  (Set of Number) A static set of monitor IDs to use as part of the SLO\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Newstyle:  (String) Name of Datadog service level objective\n"
                    },
                    "query": {
                        "$ref": "#/types/datadog:index/ServiceLevelObjectiveQuery:ServiceLevelObjectiveQuery",
                        "description": "Newstyle:  (Block List, Max: 1) The metric query of good / total events (see )\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Newstyle:  (Set of String) A list of tags to associate with your service level objective. This can help you categorize and filter service level objectives in the service level objectives page of the UI. Note: it's not currently possible to filter by these tags when querying via the API\n"
                    },
                    "thresholds": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/datadog:index/ServiceLevelObjectiveThreshold:ServiceLevelObjectiveThreshold"
                        },
                        "description": "Newstyle:  (Block List, Min: 1) A list of thresholds and targets that define the service level objectives from the provided SLIs. (see )\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "Newstyle:  (String) The type of the service level objective. The mapping from these types to the types found in the Datadog Web UI can be found in the Datadog API . Available options to choose from are: metric and monitor.\n"
                    },
                    "validate": {
                        "type": "boolean",
                        "description": "Newstyle:  (Boolean) Whether or not to validate the SLO.\n"
                    }
                },
                "type": "object"
            }
        },
        "datadog:index/syntheticsGlobalVariable:SyntheticsGlobalVariable": {
            "description": "TODO\n\nTODO\n",
            "properties": {
                "description": {
                    "type": "string",
                    "description": "Newstyle:  (String) Description of the global variable.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Newstyle:  (String) Synthetics global variable name.\n"
                },
                "parseTestId": {
                    "type": "string",
                    "description": "Id of the Synthetics test to use for a variable from test.\n"
                },
                "parseTestOptions": {
                    "$ref": "#/types/datadog:index/SyntheticsGlobalVariableParseTestOptions:SyntheticsGlobalVariableParseTestOptions",
                    "description": "ID of the Synthetics test to use a source of the global variable value.\n"
                },
                "secure": {
                    "type": "boolean",
                    "description": "Newstyle:  (Boolean) Sets the variable as secure. Defaults to false.\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Newstyle:  (List of String) A list of tags to associate with your synthetics global variable.\n"
                },
                "value": {
                    "type": "string",
                    "description": "Newstyle:  (String) Value for the parser to use, required for type json_path or regex.\n"
                }
            },
            "required": [
                "name",
                "value"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "Newstyle:  (String) Description of the global variable.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Newstyle:  (String) Synthetics global variable name.\n"
                },
                "parseTestId": {
                    "type": "string",
                    "description": "Id of the Synthetics test to use for a variable from test.\n"
                },
                "parseTestOptions": {
                    "$ref": "#/types/datadog:index/SyntheticsGlobalVariableParseTestOptions:SyntheticsGlobalVariableParseTestOptions",
                    "description": "ID of the Synthetics test to use a source of the global variable value.\n"
                },
                "secure": {
                    "type": "boolean",
                    "description": "Newstyle:  (Boolean) Sets the variable as secure. Defaults to false.\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Newstyle:  (List of String) A list of tags to associate with your synthetics global variable.\n"
                },
                "value": {
                    "type": "string",
                    "description": "Newstyle:  (String) Value for the parser to use, required for type json_path or regex.\n"
                }
            },
            "requiredInputs": [
                "name",
                "value"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SyntheticsGlobalVariable resources.\n",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "Newstyle:  (String) Description of the global variable.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Newstyle:  (String) Synthetics global variable name.\n"
                    },
                    "parseTestId": {
                        "type": "string",
                        "description": "Id of the Synthetics test to use for a variable from test.\n"
                    },
                    "parseTestOptions": {
                        "$ref": "#/types/datadog:index/SyntheticsGlobalVariableParseTestOptions:SyntheticsGlobalVariableParseTestOptions",
                        "description": "ID of the Synthetics test to use a source of the global variable value.\n"
                    },
                    "secure": {
                        "type": "boolean",
                        "description": "Newstyle:  (Boolean) Sets the variable as secure. Defaults to false.\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Newstyle:  (List of String) A list of tags to associate with your synthetics global variable.\n"
                    },
                    "value": {
                        "type": "string",
                        "description": "Newstyle:  (String) Value for the parser to use, required for type json_path or regex.\n"
                    }
                },
                "type": "object"
            }
        },
        "datadog:index/syntheticsPrivateLocation:SyntheticsPrivateLocation": {
            "description": "TODO\n\nTODO\n",
            "properties": {
                "config": {
                    "type": "string",
                    "description": "Newstyle:  (String, Sensitive) Configuration skeleton for the private location. See installation instructions of the private location on how to use this configuration.\n"
                },
                "description": {
                    "type": "string",
                    "description": "Newstyle:  (String) Description of the private location.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Newstyle:  (String) Synthetics private location name.\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Newstyle:  (List of String) A list of tags to associate with your synthetics private location.\n"
                }
            },
            "required": [
                "config",
                "name"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "Newstyle:  (String) Description of the private location.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Newstyle:  (String) Synthetics private location name.\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Newstyle:  (List of String) A list of tags to associate with your synthetics private location.\n"
                }
            },
            "requiredInputs": [
                "name"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SyntheticsPrivateLocation resources.\n",
                "properties": {
                    "config": {
                        "type": "string",
                        "description": "Newstyle:  (String, Sensitive) Configuration skeleton for the private location. See installation instructions of the private location on how to use this configuration.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "Newstyle:  (String) Description of the private location.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Newstyle:  (String) Synthetics private location name.\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Newstyle:  (List of String) A list of tags to associate with your synthetics private location.\n"
                    }
                },
                "type": "object"
            }
        },
        "datadog:index/syntheticsTest:SyntheticsTest": {
            "description": "TODO\n\nTODO\n",
            "properties": {
                "apiSteps": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/SyntheticsTestApiStep:SyntheticsTestApiStep"
                    },
                    "description": "Newstyle:  (Block List) Steps for multistep api tests (see )\n"
                },
                "assertions": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "pulumi.json#/Any"
                        }
                    },
                    "description": "Newstyle:  (List of Map of String, Deprecated) List of assertions.  Define assertion blocks instead.\n",
                    "deprecationMessage": "Define `assertion` blocks instead."
                },
                "browserSteps": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/SyntheticsTestBrowserStep:SyntheticsTestBrowserStep"
                    },
                    "description": "Newstyle:  (Block List) Steps for browser tests. (see )\n"
                },
                "browserVariables": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/SyntheticsTestBrowserVariable:SyntheticsTestBrowserVariable"
                    },
                    "description": "Newstyle:  (Block List) Variables used for a browser test steps. Multiple variable blocks are allowed with the structure below. (see )\n"
                },
                "configVariables": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/SyntheticsTestConfigVariable:SyntheticsTestConfigVariable"
                    },
                    "description": "Newstyle:  (Block List) Variables used for the test configuration. Multiple config_variable blocks are allowed with the structure below. (see )\n"
                },
                "deviceIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Newstyle:  (List of String) Array with the different device IDs used to run the test. Allowed enum values: laptop_large, tablet, mobile_small (only available for browser tests).\n"
                },
                "locations": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Newstyle:  (Set of String) Array of locations used to run the test. Refer to  for available locations (e.g. aws:eu-central-1).\n"
                },
                "message": {
                    "type": "string",
                    "description": "Newstyle:  (String) A message to include with notifications for this synthetics test. Email notifications can be sent to specific users by using the same @username notation as events.\n"
                },
                "monitorId": {
                    "type": "integer",
                    "description": "Newstyle:  (Number) ID of the monitor associated with the Datadog synthetics test.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Newstyle:  (String) Name of the variable.\n"
                },
                "options": {
                    "$ref": "#/types/datadog:index/SyntheticsTestOptions:SyntheticsTestOptions",
                    "description": "Newstyle:  (Map of String, Deprecated)  Define options_list blocks instead.\n",
                    "deprecationMessage": "Define `options_list` blocks instead."
                },
                "optionsList": {
                    "$ref": "#/types/datadog:index/SyntheticsTestOptionsList:SyntheticsTestOptionsList",
                    "description": "Newstyle:  (Block List, Max: 1) (see )\n"
                },
                "request": {
                    "$ref": "#/types/datadog:index/SyntheticsTestRequest:SyntheticsTestRequest",
                    "description": "Newstyle:  (String) Request for an API step.\n",
                    "deprecationMessage": "Define `request_definition` list with one element instead."
                },
                "requestBasicauth": {
                    "$ref": "#/types/datadog:index/SyntheticsTestRequestBasicauth:SyntheticsTestRequestBasicauth",
                    "description": "Newstyle:  (Block List, Max: 1) The HTTP basic authentication credentials. Exactly one nested block is allowed with the structure below. (see )\n"
                },
                "requestClientCertificate": {
                    "$ref": "#/types/datadog:index/SyntheticsTestRequestClientCertificate:SyntheticsTestRequestClientCertificate",
                    "description": "Client certificate to use when performing the test request. Exactly one nested block is allowed with the structure\nbelow.\n"
                },
                "requestDefinition": {
                    "$ref": "#/types/datadog:index/SyntheticsTestRequestDefinition:SyntheticsTestRequestDefinition",
                    "description": "Newstyle:  (Block List, Max: 1) The request for the api step. (see )\n"
                },
                "requestHeaders": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "description": "Newstyle:  (Map of String) Header name and value map.\n"
                },
                "requestQuery": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "description": "Newstyle:  (Map of String) Query arguments name and value map.\n"
                },
                "status": {
                    "type": "string",
                    "description": "Newstyle:  (String) Define whether you want to start (live) or pause (paused) a Synthetic test. Allowed enum values: live, paused\n"
                },
                "steps": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/SyntheticsTestStep:SyntheticsTestStep"
                    },
                    "description": "Newstyle:  (Block List, Deprecated) Steps for browser tests.  Define browser_step blocks instead. (see )\n",
                    "deprecationMessage": "Define `browser_step` blocks instead."
                },
                "subtype": {
                    "type": "string",
                    "description": "Newstyle:  (String) The subtype of the Synthetic multistep API test step, currently only supporting http.\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Newstyle:  (List of String) A list of tags to associate with your synthetics test. This can help you categorize and filter tests in the manage synthetics page of the UI. Default is an empty list ([]).\n"
                },
                "type": {
                    "type": "string",
                    "description": "Newstyle:  (String) Type of browser test variable. Allowed enum values: element, email, global, javascript, text.\n"
                },
                "variables": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/SyntheticsTestVariable:SyntheticsTestVariable"
                    },
                    "description": "Newstyle:  (Block List, Max: 1) Details of the variable to extract. (see )\n",
                    "deprecationMessage": "Define `browser_variable` blocks instead."
                }
            },
            "required": [
                "locations",
                "monitorId",
                "name",
                "status",
                "type"
            ],
            "inputProperties": {
                "apiSteps": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/SyntheticsTestApiStep:SyntheticsTestApiStep"
                    },
                    "description": "Newstyle:  (Block List) Steps for multistep api tests (see )\n"
                },
                "assertions": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "pulumi.json#/Any"
                        }
                    },
                    "description": "Newstyle:  (List of Map of String, Deprecated) List of assertions.  Define assertion blocks instead.\n",
                    "deprecationMessage": "Define `assertion` blocks instead."
                },
                "browserSteps": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/SyntheticsTestBrowserStep:SyntheticsTestBrowserStep"
                    },
                    "description": "Newstyle:  (Block List) Steps for browser tests. (see )\n"
                },
                "browserVariables": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/SyntheticsTestBrowserVariable:SyntheticsTestBrowserVariable"
                    },
                    "description": "Newstyle:  (Block List) Variables used for a browser test steps. Multiple variable blocks are allowed with the structure below. (see )\n"
                },
                "configVariables": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/SyntheticsTestConfigVariable:SyntheticsTestConfigVariable"
                    },
                    "description": "Newstyle:  (Block List) Variables used for the test configuration. Multiple config_variable blocks are allowed with the structure below. (see )\n"
                },
                "deviceIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Newstyle:  (List of String) Array with the different device IDs used to run the test. Allowed enum values: laptop_large, tablet, mobile_small (only available for browser tests).\n"
                },
                "locations": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Newstyle:  (Set of String) Array of locations used to run the test. Refer to  for available locations (e.g. aws:eu-central-1).\n"
                },
                "message": {
                    "type": "string",
                    "description": "Newstyle:  (String) A message to include with notifications for this synthetics test. Email notifications can be sent to specific users by using the same @username notation as events.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Newstyle:  (String) Name of the variable.\n"
                },
                "options": {
                    "$ref": "#/types/datadog:index/SyntheticsTestOptions:SyntheticsTestOptions",
                    "description": "Newstyle:  (Map of String, Deprecated)  Define options_list blocks instead.\n",
                    "deprecationMessage": "Define `options_list` blocks instead."
                },
                "optionsList": {
                    "$ref": "#/types/datadog:index/SyntheticsTestOptionsList:SyntheticsTestOptionsList",
                    "description": "Newstyle:  (Block List, Max: 1) (see )\n"
                },
                "request": {
                    "$ref": "#/types/datadog:index/SyntheticsTestRequest:SyntheticsTestRequest",
                    "description": "Newstyle:  (String) Request for an API step.\n",
                    "deprecationMessage": "Define `request_definition` list with one element instead."
                },
                "requestBasicauth": {
                    "$ref": "#/types/datadog:index/SyntheticsTestRequestBasicauth:SyntheticsTestRequestBasicauth",
                    "description": "Newstyle:  (Block List, Max: 1) The HTTP basic authentication credentials. Exactly one nested block is allowed with the structure below. (see )\n"
                },
                "requestClientCertificate": {
                    "$ref": "#/types/datadog:index/SyntheticsTestRequestClientCertificate:SyntheticsTestRequestClientCertificate",
                    "description": "Client certificate to use when performing the test request. Exactly one nested block is allowed with the structure\nbelow.\n"
                },
                "requestDefinition": {
                    "$ref": "#/types/datadog:index/SyntheticsTestRequestDefinition:SyntheticsTestRequestDefinition",
                    "description": "Newstyle:  (Block List, Max: 1) The request for the api step. (see )\n"
                },
                "requestHeaders": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "description": "Newstyle:  (Map of String) Header name and value map.\n"
                },
                "requestQuery": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "description": "Newstyle:  (Map of String) Query arguments name and value map.\n"
                },
                "status": {
                    "type": "string",
                    "description": "Newstyle:  (String) Define whether you want to start (live) or pause (paused) a Synthetic test. Allowed enum values: live, paused\n"
                },
                "steps": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/SyntheticsTestStep:SyntheticsTestStep"
                    },
                    "description": "Newstyle:  (Block List, Deprecated) Steps for browser tests.  Define browser_step blocks instead. (see )\n",
                    "deprecationMessage": "Define `browser_step` blocks instead."
                },
                "subtype": {
                    "type": "string",
                    "description": "Newstyle:  (String) The subtype of the Synthetic multistep API test step, currently only supporting http.\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Newstyle:  (List of String) A list of tags to associate with your synthetics test. This can help you categorize and filter tests in the manage synthetics page of the UI. Default is an empty list ([]).\n"
                },
                "type": {
                    "type": "string",
                    "description": "Newstyle:  (String) Type of browser test variable. Allowed enum values: element, email, global, javascript, text.\n"
                },
                "variables": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/SyntheticsTestVariable:SyntheticsTestVariable"
                    },
                    "description": "Newstyle:  (Block List, Max: 1) Details of the variable to extract. (see )\n",
                    "deprecationMessage": "Define `browser_variable` blocks instead."
                }
            },
            "requiredInputs": [
                "locations",
                "name",
                "status",
                "type"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SyntheticsTest resources.\n",
                "properties": {
                    "apiSteps": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/datadog:index/SyntheticsTestApiStep:SyntheticsTestApiStep"
                        },
                        "description": "Newstyle:  (Block List) Steps for multistep api tests (see )\n"
                    },
                    "assertions": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "additionalProperties": {
                                "$ref": "pulumi.json#/Any"
                            }
                        },
                        "description": "Newstyle:  (List of Map of String, Deprecated) List of assertions.  Define assertion blocks instead.\n",
                        "deprecationMessage": "Define `assertion` blocks instead."
                    },
                    "browserSteps": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/datadog:index/SyntheticsTestBrowserStep:SyntheticsTestBrowserStep"
                        },
                        "description": "Newstyle:  (Block List) Steps for browser tests. (see )\n"
                    },
                    "browserVariables": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/datadog:index/SyntheticsTestBrowserVariable:SyntheticsTestBrowserVariable"
                        },
                        "description": "Newstyle:  (Block List) Variables used for a browser test steps. Multiple variable blocks are allowed with the structure below. (see )\n"
                    },
                    "configVariables": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/datadog:index/SyntheticsTestConfigVariable:SyntheticsTestConfigVariable"
                        },
                        "description": "Newstyle:  (Block List) Variables used for the test configuration. Multiple config_variable blocks are allowed with the structure below. (see )\n"
                    },
                    "deviceIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Newstyle:  (List of String) Array with the different device IDs used to run the test. Allowed enum values: laptop_large, tablet, mobile_small (only available for browser tests).\n"
                    },
                    "locations": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Newstyle:  (Set of String) Array of locations used to run the test. Refer to  for available locations (e.g. aws:eu-central-1).\n"
                    },
                    "message": {
                        "type": "string",
                        "description": "Newstyle:  (String) A message to include with notifications for this synthetics test. Email notifications can be sent to specific users by using the same @username notation as events.\n"
                    },
                    "monitorId": {
                        "type": "integer",
                        "description": "Newstyle:  (Number) ID of the monitor associated with the Datadog synthetics test.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Newstyle:  (String) Name of the variable.\n"
                    },
                    "options": {
                        "$ref": "#/types/datadog:index/SyntheticsTestOptions:SyntheticsTestOptions",
                        "description": "Newstyle:  (Map of String, Deprecated)  Define options_list blocks instead.\n",
                        "deprecationMessage": "Define `options_list` blocks instead."
                    },
                    "optionsList": {
                        "$ref": "#/types/datadog:index/SyntheticsTestOptionsList:SyntheticsTestOptionsList",
                        "description": "Newstyle:  (Block List, Max: 1) (see )\n"
                    },
                    "request": {
                        "$ref": "#/types/datadog:index/SyntheticsTestRequest:SyntheticsTestRequest",
                        "description": "Newstyle:  (String) Request for an API step.\n",
                        "deprecationMessage": "Define `request_definition` list with one element instead."
                    },
                    "requestBasicauth": {
                        "$ref": "#/types/datadog:index/SyntheticsTestRequestBasicauth:SyntheticsTestRequestBasicauth",
                        "description": "Newstyle:  (Block List, Max: 1) The HTTP basic authentication credentials. Exactly one nested block is allowed with the structure below. (see )\n"
                    },
                    "requestClientCertificate": {
                        "$ref": "#/types/datadog:index/SyntheticsTestRequestClientCertificate:SyntheticsTestRequestClientCertificate",
                        "description": "Client certificate to use when performing the test request. Exactly one nested block is allowed with the structure\nbelow.\n"
                    },
                    "requestDefinition": {
                        "$ref": "#/types/datadog:index/SyntheticsTestRequestDefinition:SyntheticsTestRequestDefinition",
                        "description": "Newstyle:  (Block List, Max: 1) The request for the api step. (see )\n"
                    },
                    "requestHeaders": {
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "pulumi.json#/Any"
                        },
                        "description": "Newstyle:  (Map of String) Header name and value map.\n"
                    },
                    "requestQuery": {
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "pulumi.json#/Any"
                        },
                        "description": "Newstyle:  (Map of String) Query arguments name and value map.\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "Newstyle:  (String) Define whether you want to start (live) or pause (paused) a Synthetic test. Allowed enum values: live, paused\n"
                    },
                    "steps": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/datadog:index/SyntheticsTestStep:SyntheticsTestStep"
                        },
                        "description": "Newstyle:  (Block List, Deprecated) Steps for browser tests.  Define browser_step blocks instead. (see )\n",
                        "deprecationMessage": "Define `browser_step` blocks instead."
                    },
                    "subtype": {
                        "type": "string",
                        "description": "Newstyle:  (String) The subtype of the Synthetic multistep API test step, currently only supporting http.\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Newstyle:  (List of String) A list of tags to associate with your synthetics test. This can help you categorize and filter tests in the manage synthetics page of the UI. Default is an empty list ([]).\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "Newstyle:  (String) Type of browser test variable. Allowed enum values: element, email, global, javascript, text.\n"
                    },
                    "variables": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/datadog:index/SyntheticsTestVariable:SyntheticsTestVariable"
                        },
                        "description": "Newstyle:  (Block List, Max: 1) Details of the variable to extract. (see )\n",
                        "deprecationMessage": "Define `browser_variable` blocks instead."
                    }
                },
                "type": "object"
            }
        },
        "datadog:index/timeBoard:TimeBoard": {
            "description": "TODO\n\nTODO\n",
            "properties": {
                "description": {
                    "type": "string",
                    "description": "A description of the dashboard's content.\n"
                },
                "graphs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/TimeBoardGraph:TimeBoardGraph"
                    },
                    "description": "A list of graph definitions.\n"
                },
                "readOnly": {
                    "type": "boolean",
                    "description": "The read-only status of the timeboard. Default is false.\n"
                },
                "templateVariables": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/TimeBoardTemplateVariable:TimeBoardTemplateVariable"
                    },
                    "description": "A list of template variables for using Dashboard templating.\n"
                },
                "title": {
                    "type": "string",
                    "description": "The name of the dashboard.\n"
                }
            },
            "required": [
                "description",
                "graphs",
                "title"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "A description of the dashboard's content.\n"
                },
                "graphs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/TimeBoardGraph:TimeBoardGraph"
                    },
                    "description": "A list of graph definitions.\n"
                },
                "readOnly": {
                    "type": "boolean",
                    "description": "The read-only status of the timeboard. Default is false.\n"
                },
                "templateVariables": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/TimeBoardTemplateVariable:TimeBoardTemplateVariable"
                    },
                    "description": "A list of template variables for using Dashboard templating.\n"
                },
                "title": {
                    "type": "string",
                    "description": "The name of the dashboard.\n"
                }
            },
            "requiredInputs": [
                "description",
                "graphs",
                "title"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering TimeBoard resources.\n",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "A description of the dashboard's content.\n"
                    },
                    "graphs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/datadog:index/TimeBoardGraph:TimeBoardGraph"
                        },
                        "description": "A list of graph definitions.\n"
                    },
                    "readOnly": {
                        "type": "boolean",
                        "description": "The read-only status of the timeboard. Default is false.\n"
                    },
                    "templateVariables": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/datadog:index/TimeBoardTemplateVariable:TimeBoardTemplateVariable"
                        },
                        "description": "A list of template variables for using Dashboard templating.\n"
                    },
                    "title": {
                        "type": "string",
                        "description": "The name of the dashboard.\n"
                    }
                },
                "type": "object"
            }
        },
        "datadog:index/user:User": {
            "description": "TODO\n\nTODO\n",
            "properties": {
                "accessRole": {
                    "type": "string",
                    "description": "Newstyle:  (String, Deprecated) Role description for user. Can be st (standard user), adm (admin user) or ro (read-only user). Default is st. access_role is ignored for new users created with this resource. New users have to use the roles attribute.  This parameter is replaced by roles and will be removed from the next Major version.\n",
                    "deprecationMessage": "This parameter is replaced by `roles` and will be removed from the next Major version."
                },
                "disabled": {
                    "type": "boolean",
                    "description": "Newstyle:  (Boolean) Whether the user is disabled.\n"
                },
                "email": {
                    "type": "string",
                    "description": "Newstyle:  (String) Email address for user.\n"
                },
                "handle": {
                    "type": "string",
                    "description": "Newstyle:  (String, Deprecated) The user handle, must be a valid email.  This parameter is deprecated and will be removed from the next Major version.\n",
                    "deprecationMessage": "This parameter is deprecated and will be removed from the next Major version."
                },
                "isAdmin": {
                    "type": "boolean",
                    "description": "Newstyle:  (Boolean, Deprecated) Whether the user is an administrator. Warning: the corresponding query parameter is ignored by the Datadog API, thus the argument would always trigger an execution plan.  This parameter is replaced by roles and will be removed from the next Major version.\n",
                    "deprecationMessage": "This parameter is replaced by `roles` and will be removed from the next Major version."
                },
                "name": {
                    "type": "string",
                    "description": "Newstyle:  (String) Name for user.\n"
                },
                "role": {
                    "type": "string",
                    "description": "Newstyle:  (String, Deprecated) Role description for user. Warning: the corresponding query parameter is ignored by the Datadog API, thus the argument would always trigger an execution plan.  This parameter was removed from the API and has no effect.\n",
                    "deprecationMessage": "This parameter was removed from the API and has no effect."
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Newstyle:  (Set of String) A list a role IDs to assign to the user.\n"
                },
                "sendUserInvitation": {
                    "type": "boolean",
                    "description": "Whether an invitation email should be sent when the user is created.\n"
                },
                "userInvitationId": {
                    "type": "string",
                    "description": "The ID of the user invitation that was sent when creating the user.\n"
                },
                "verified": {
                    "type": "boolean",
                    "description": "Newstyle:  (Boolean) Returns true if the user is verified.\n"
                }
            },
            "required": [
                "email",
                "isAdmin",
                "userInvitationId",
                "verified"
            ],
            "inputProperties": {
                "accessRole": {
                    "type": "string",
                    "description": "Newstyle:  (String, Deprecated) Role description for user. Can be st (standard user), adm (admin user) or ro (read-only user). Default is st. access_role is ignored for new users created with this resource. New users have to use the roles attribute.  This parameter is replaced by roles and will be removed from the next Major version.\n",
                    "deprecationMessage": "This parameter is replaced by `roles` and will be removed from the next Major version."
                },
                "disabled": {
                    "type": "boolean",
                    "description": "Newstyle:  (Boolean) Whether the user is disabled.\n"
                },
                "email": {
                    "type": "string",
                    "description": "Newstyle:  (String) Email address for user.\n"
                },
                "handle": {
                    "type": "string",
                    "description": "Newstyle:  (String, Deprecated) The user handle, must be a valid email.  This parameter is deprecated and will be removed from the next Major version.\n",
                    "deprecationMessage": "This parameter is deprecated and will be removed from the next Major version."
                },
                "isAdmin": {
                    "type": "boolean",
                    "description": "Newstyle:  (Boolean, Deprecated) Whether the user is an administrator. Warning: the corresponding query parameter is ignored by the Datadog API, thus the argument would always trigger an execution plan.  This parameter is replaced by roles and will be removed from the next Major version.\n",
                    "deprecationMessage": "This parameter is replaced by `roles` and will be removed from the next Major version."
                },
                "name": {
                    "type": "string",
                    "description": "Newstyle:  (String) Name for user.\n"
                },
                "role": {
                    "type": "string",
                    "description": "Newstyle:  (String, Deprecated) Role description for user. Warning: the corresponding query parameter is ignored by the Datadog API, thus the argument would always trigger an execution plan.  This parameter was removed from the API and has no effect.\n",
                    "deprecationMessage": "This parameter was removed from the API and has no effect."
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Newstyle:  (Set of String) A list a role IDs to assign to the user.\n"
                },
                "sendUserInvitation": {
                    "type": "boolean",
                    "description": "Whether an invitation email should be sent when the user is created.\n"
                }
            },
            "requiredInputs": [
                "email"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering User resources.\n",
                "properties": {
                    "accessRole": {
                        "type": "string",
                        "description": "Newstyle:  (String, Deprecated) Role description for user. Can be st (standard user), adm (admin user) or ro (read-only user). Default is st. access_role is ignored for new users created with this resource. New users have to use the roles attribute.  This parameter is replaced by roles and will be removed from the next Major version.\n",
                        "deprecationMessage": "This parameter is replaced by `roles` and will be removed from the next Major version."
                    },
                    "disabled": {
                        "type": "boolean",
                        "description": "Newstyle:  (Boolean) Whether the user is disabled.\n"
                    },
                    "email": {
                        "type": "string",
                        "description": "Newstyle:  (String) Email address for user.\n"
                    },
                    "handle": {
                        "type": "string",
                        "description": "Newstyle:  (String, Deprecated) The user handle, must be a valid email.  This parameter is deprecated and will be removed from the next Major version.\n",
                        "deprecationMessage": "This parameter is deprecated and will be removed from the next Major version."
                    },
                    "isAdmin": {
                        "type": "boolean",
                        "description": "Newstyle:  (Boolean, Deprecated) Whether the user is an administrator. Warning: the corresponding query parameter is ignored by the Datadog API, thus the argument would always trigger an execution plan.  This parameter is replaced by roles and will be removed from the next Major version.\n",
                        "deprecationMessage": "This parameter is replaced by `roles` and will be removed from the next Major version."
                    },
                    "name": {
                        "type": "string",
                        "description": "Newstyle:  (String) Name for user.\n"
                    },
                    "role": {
                        "type": "string",
                        "description": "Newstyle:  (String, Deprecated) Role description for user. Warning: the corresponding query parameter is ignored by the Datadog API, thus the argument would always trigger an execution plan.  This parameter was removed from the API and has no effect.\n",
                        "deprecationMessage": "This parameter was removed from the API and has no effect."
                    },
                    "roles": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Newstyle:  (Set of String) A list a role IDs to assign to the user.\n"
                    },
                    "sendUserInvitation": {
                        "type": "boolean",
                        "description": "Whether an invitation email should be sent when the user is created.\n"
                    },
                    "userInvitationId": {
                        "type": "string",
                        "description": "The ID of the user invitation that was sent when creating the user.\n"
                    },
                    "verified": {
                        "type": "boolean",
                        "description": "Newstyle:  (Boolean) Returns true if the user is verified.\n"
                    }
                },
                "type": "object"
            }
        },
        "datadog:pagerduty/integration:Integration": {
            "description": "TODO\n\nTODO\n",
            "properties": {
                "apiToken": {
                    "type": "string",
                    "description": "Newstyle:  (String, Sensitive) Your PagerDuty API token.\n"
                },
                "individualServices": {
                    "type": "boolean",
                    "description": "Newstyle:  (Boolean) Boolean to specify whether or not individual service objects specified by  resource are to be used. Mutually exclusive with services key.\n"
                },
                "schedules": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Newstyle:  (List of String) Array of your schedule URLs.\n"
                },
                "services": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:pagerduty/IntegrationService:IntegrationService"
                    },
                    "description": "Newstyle:  (Block List, Deprecated) A list of service names and service keys.  set \"individualpagerdutyservice_object (see )\n",
                    "deprecationMessage": "set \"individual_services\" to true and use datadog_pagerduty_integration_service_object"
                },
                "subdomain": {
                    "type": "string",
                    "description": "Newstyle:  (String) Your PagerDuty account’s personalized subdomain name.\n"
                }
            },
            "required": [
                "subdomain"
            ],
            "inputProperties": {
                "apiToken": {
                    "type": "string",
                    "description": "Newstyle:  (String, Sensitive) Your PagerDuty API token.\n"
                },
                "individualServices": {
                    "type": "boolean",
                    "description": "Newstyle:  (Boolean) Boolean to specify whether or not individual service objects specified by  resource are to be used. Mutually exclusive with services key.\n"
                },
                "schedules": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Newstyle:  (List of String) Array of your schedule URLs.\n"
                },
                "services": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:pagerduty/IntegrationService:IntegrationService"
                    },
                    "description": "Newstyle:  (Block List, Deprecated) A list of service names and service keys.  set \"individualpagerdutyservice_object (see )\n",
                    "deprecationMessage": "set \"individual_services\" to true and use datadog_pagerduty_integration_service_object"
                },
                "subdomain": {
                    "type": "string",
                    "description": "Newstyle:  (String) Your PagerDuty account’s personalized subdomain name.\n"
                }
            },
            "requiredInputs": [
                "subdomain"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Integration resources.\n",
                "properties": {
                    "apiToken": {
                        "type": "string",
                        "description": "Newstyle:  (String, Sensitive) Your PagerDuty API token.\n"
                    },
                    "individualServices": {
                        "type": "boolean",
                        "description": "Newstyle:  (Boolean) Boolean to specify whether or not individual service objects specified by  resource are to be used. Mutually exclusive with services key.\n"
                    },
                    "schedules": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Newstyle:  (List of String) Array of your schedule URLs.\n"
                    },
                    "services": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/datadog:pagerduty/IntegrationService:IntegrationService"
                        },
                        "description": "Newstyle:  (Block List, Deprecated) A list of service names and service keys.  set \"individualpagerdutyservice_object (see )\n",
                        "deprecationMessage": "set \"individual_services\" to true and use datadog_pagerduty_integration_service_object"
                    },
                    "subdomain": {
                        "type": "string",
                        "description": "Newstyle:  (String) Your PagerDuty account’s personalized subdomain name.\n"
                    }
                },
                "type": "object"
            }
        },
        "datadog:pagerduty/serviceObject:ServiceObject": {
            "description": "TODO\n\nTODO\n",
            "properties": {
                "serviceKey": {
                    "type": "string",
                    "description": "Newstyle:  (String, Sensitive) Your Service name associated service key in PagerDuty. Note: Since the Datadog API never returns service keys, it is impossible to detect . The best way to solve a drift is to manually mark the Service Object resource with  to have it destroyed and recreated.\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Newstyle:  (String) Your Service name in PagerDuty.\n"
                }
            },
            "required": [
                "serviceKey",
                "serviceName"
            ],
            "inputProperties": {
                "serviceKey": {
                    "type": "string",
                    "description": "Newstyle:  (String, Sensitive) Your Service name associated service key in PagerDuty. Note: Since the Datadog API never returns service keys, it is impossible to detect . The best way to solve a drift is to manually mark the Service Object resource with  to have it destroyed and recreated.\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Newstyle:  (String) Your Service name in PagerDuty.\n"
                }
            },
            "requiredInputs": [
                "serviceKey",
                "serviceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ServiceObject resources.\n",
                "properties": {
                    "serviceKey": {
                        "type": "string",
                        "description": "Newstyle:  (String, Sensitive) Your Service name associated service key in PagerDuty. Note: Since the Datadog API never returns service keys, it is impossible to detect . The best way to solve a drift is to manually mark the Service Object resource with  to have it destroyed and recreated.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Newstyle:  (String) Your Service name in PagerDuty.\n"
                    }
                },
                "type": "object"
            }
        }
    },
    "functions": {
        "datadog:index/getDashboard:getDashboard": {
            "description": "TODO\n",
            "inputs": {
                "description": "A collection of arguments for invoking getDashboard.\n",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Newstyle:  (String) The dashboard name to search for. Must only match one dashboard.\n"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getDashboard.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "title": {
                        "type": "string"
                    },
                    "url": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "name",
                    "title",
                    "url",
                    "id"
                ]
            }
        },
        "datadog:index/getDashboardList:getDashboardList": {
            "description": "TODO\n",
            "inputs": {
                "description": "A collection of arguments for invoking getDashboardList.\n",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Newstyle:  (String) A dashboard list name to limit the search.\n"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getDashboardList.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "name",
                    "id"
                ]
            }
        },
        "datadog:index/getIpRanges:getIpRanges": {
            "description": "TODO\n",
            "outputs": {
                "description": "A collection of values returned by getIpRanges.\n",
                "properties": {
                    "agentsIpv4s": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "agentsIpv6s": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "apiIpv4s": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "apiIpv6s": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "apmIpv4s": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "apmIpv6s": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "logsIpv4s": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "logsIpv6s": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "processIpv4s": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "processIpv6s": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "syntheticsIpv4ByLocation": {
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "pulumi.json#/Any"
                        }
                    },
                    "syntheticsIpv4s": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "syntheticsIpv6ByLocation": {
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "pulumi.json#/Any"
                        }
                    },
                    "syntheticsIpv6s": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "webhooksIpv4s": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "webhooksIpv6s": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "type": "object",
                "required": [
                    "agentsIpv4s",
                    "agentsIpv6s",
                    "apiIpv4s",
                    "apiIpv6s",
                    "apmIpv4s",
                    "apmIpv6s",
                    "logsIpv4s",
                    "logsIpv6s",
                    "processIpv4s",
                    "processIpv6s",
                    "syntheticsIpv4s",
                    "syntheticsIpv4ByLocation",
                    "syntheticsIpv6s",
                    "syntheticsIpv6ByLocation",
                    "webhooksIpv4s",
                    "webhooksIpv6s",
                    "id"
                ]
            }
        },
        "datadog:index/getMonitor:getMonitor": {
            "description": "TODO\n",
            "inputs": {
                "description": "A collection of arguments for invoking getMonitor.\n",
                "properties": {
                    "monitorTagsFilters": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "nameFilter": {
                        "type": "string",
                        "description": "Newstyle:  (String) A monitor name to limit the search.\n"
                    },
                    "tagsFilters": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Newstyle:  (List of String) A list of tags to limit the search. This filters on the monitor scope.\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getMonitor.\n",
                "properties": {
                    "enableLogsSample": {
                        "type": "boolean"
                    },
                    "escalationMessage": {
                        "type": "string"
                    },
                    "evaluationDelay": {
                        "type": "integer"
                    },
                    "groupbySimpleMonitor": {
                        "type": "boolean"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "includeTags": {
                        "type": "boolean"
                    },
                    "locked": {
                        "type": "boolean"
                    },
                    "message": {
                        "type": "string"
                    },
                    "monitorTagsFilters": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "monitorThresholdWindows": {
                        "$ref": "#/types/datadog:index/getMonitorMonitorThresholdWindows:getMonitorMonitorThresholdWindows"
                    },
                    "monitorThresholds": {
                        "$ref": "#/types/datadog:index/getMonitorMonitorThresholds:getMonitorMonitorThresholds"
                    },
                    "name": {
                        "type": "string"
                    },
                    "nameFilter": {
                        "type": "string"
                    },
                    "newHostDelay": {
                        "type": "integer"
                    },
                    "noDataTimeframe": {
                        "type": "integer"
                    },
                    "notifyAudit": {
                        "type": "boolean"
                    },
                    "notifyNoData": {
                        "type": "boolean"
                    },
                    "query": {
                        "type": "string"
                    },
                    "renotifyInterval": {
                        "type": "integer"
                    },
                    "requireFullWindow": {
                        "type": "boolean"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "tagsFilters": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "thresholdWindows": {
                        "$ref": "#/types/datadog:index/getMonitorThresholdWindows:getMonitorThresholdWindows",
                        "deprecationMessage": "Define `monitor_threshold_windows` list with one element instead."
                    },
                    "thresholds": {
                        "$ref": "#/types/datadog:index/getMonitorThresholds:getMonitorThresholds",
                        "deprecationMessage": "Define `monitor_thresholds` list with one element instead."
                    },
                    "timeoutH": {
                        "type": "integer"
                    },
                    "type": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "enableLogsSample",
                    "escalationMessage",
                    "evaluationDelay",
                    "groupbySimpleMonitor",
                    "includeTags",
                    "locked",
                    "message",
                    "monitorThresholdWindows",
                    "monitorThresholds",
                    "name",
                    "newHostDelay",
                    "noDataTimeframe",
                    "notifyAudit",
                    "notifyNoData",
                    "query",
                    "renotifyInterval",
                    "requireFullWindow",
                    "tags",
                    "thresholdWindows",
                    "thresholds",
                    "timeoutH",
                    "type",
                    "id"
                ]
            }
        },
        "datadog:index/getPermissions:getPermissions": {
            "description": "TODO\n",
            "outputs": {
                "description": "A collection of values returned by getPermissions.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "permissions": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    }
                },
                "type": "object",
                "required": [
                    "permissions",
                    "id"
                ]
            }
        },
        "datadog:index/getRole:getRole": {
            "description": "TODO\n",
            "inputs": {
                "description": "A collection of arguments for invoking getRole.\n",
                "properties": {
                    "filter": {
                        "type": "string",
                        "description": "Newstyle:  (String) A string on which to filter the roles.\n"
                    }
                },
                "type": "object",
                "required": [
                    "filter"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getRole.\n",
                "properties": {
                    "filter": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "userCount": {
                        "type": "integer"
                    }
                },
                "type": "object",
                "required": [
                    "filter",
                    "name",
                    "userCount",
                    "id"
                ]
            }
        },
        "datadog:index/getSecurityMonitoringRules:getSecurityMonitoringRules": {
            "description": "TODO\n",
            "inputs": {
                "description": "A collection of arguments for invoking getSecurityMonitoringRules.\n",
                "properties": {
                    "defaultOnlyFilter": {
                        "type": "boolean"
                    },
                    "nameFilter": {
                        "type": "string",
                        "description": "Newstyle:  (String, Optional) A rule name to limit the search\n"
                    },
                    "tagsFilters": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Newstyle:  (List of String, Optional) A list of tags to limit the search\n"
                    },
                    "userOnlyFilter": {
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getSecurityMonitoringRules.\n",
                "properties": {
                    "defaultOnlyFilter": {
                        "type": "boolean"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "nameFilter": {
                        "type": "string"
                    },
                    "ruleIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "rules": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/datadog:index/getSecurityMonitoringRulesRule:getSecurityMonitoringRulesRule"
                        }
                    },
                    "tagsFilters": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "userOnlyFilter": {
                        "type": "boolean"
                    }
                },
                "type": "object",
                "required": [
                    "ruleIds",
                    "rules",
                    "id"
                ]
            }
        },
        "datadog:index/getSyntheticsLocations:getSyntheticsLocations": {
            "description": "TODO\n",
            "outputs": {
                "description": "A collection of values returned by getSyntheticsLocations.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "locations": {
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "pulumi.json#/Any"
                        }
                    }
                },
                "type": "object",
                "required": [
                    "locations",
                    "id"
                ]
            }
        }
    },
    "language": {
        "csharp": {
            "compatibility": "tfbridge20",
            "namespaces": {
                "aws": "Aws",
                "azure": "Azure",
                "datadog": "Datadog",
                "gcp": "Gcp",
                "index": "index",
                "pagerduty": "PagerDuty"
            },
            "packageReferences": {
                "Pulumi": "3.*-*",
                "System.Collections.Immutable": "1.6.0"
            }
        },
        "go": {
            "generateResourceContainerTypes": true,
            "importBasePath": "github.com/pulumi/pulumi-datadog/sdk/v3/go/datadog"
        },
        "nodejs": {
            "compatibility": "tfbridge20",
            "dependencies": {
                "@pulumi/pulumi": "^3.0.0-alpha.0"
            },
            "devDependencies": {
                "@types/node": "^10.0.0"
            },
            "disableUnionOutputTypes": true,
            "packageDescription": "A Pulumi package for creating and managing Datadog resources.",
            "packageName": "",
            "readme": "\u003e This provider is a derived work of the [Terraform Provider](https://github.com/terraform-providers/terraform-provider-datadog)\n\u003e distributed under [MPL 2.0](https://www.mozilla.org/en-US/MPL/2.0/). If you encounter a bug or missing feature,\n\u003e first check the [`pulumi/pulumi-datadog` repo](https://github.com/pulumi/pulumi-datadog/issues); however, if that doesn't turn up anything,\n\u003e please consult the source [`terraform-providers/terraform-provider-datadog` repo](https://github.com/terraform-providers/terraform-provider-datadog/issues).",
            "typescriptVersion": ""
        },
        "python": {
            "compatibility": "tfbridge20",
            "readme": "\u003e This provider is a derived work of the [Terraform Provider](https://github.com/terraform-providers/terraform-provider-datadog)\n\u003e distributed under [MPL 2.0](https://www.mozilla.org/en-US/MPL/2.0/). If you encounter a bug or missing feature,\n\u003e first check the [`pulumi/pulumi-datadog` repo](https://github.com/pulumi/pulumi-datadog/issues); however, if that doesn't turn up anything,\n\u003e please consult the source [`terraform-providers/terraform-provider-datadog` repo](https://github.com/terraform-providers/terraform-provider-datadog/issues).",
            "requires": {
                "pulumi": "\u003e=3.0.0a1,\u003c4.0.0"
            }
        }
    }
}